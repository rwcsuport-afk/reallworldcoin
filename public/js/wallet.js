/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@adraffy/ens-normalize/dist/index.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@adraffy/ens-normalize/dist/index.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ens_beautify: () => (/* binding */ ens_beautify),
/* harmony export */   ens_emoji: () => (/* binding */ ens_emoji),
/* harmony export */   ens_normalize: () => (/* binding */ ens_normalize),
/* harmony export */   ens_normalize_fragment: () => (/* binding */ ens_normalize_fragment),
/* harmony export */   ens_split: () => (/* binding */ ens_split),
/* harmony export */   ens_tokenize: () => (/* binding */ ens_tokenize),
/* harmony export */   is_combining_mark: () => (/* binding */ is_combining_mark),
/* harmony export */   nfc: () => (/* binding */ nfc),
/* harmony export */   nfd: () => (/* binding */ nfd),
/* harmony export */   safe_str_from_cps: () => (/* binding */ safe_str_from_cps),
/* harmony export */   should_escape: () => (/* binding */ should_escape)
/* harmony export */ });
// created 2023-09-25T01:01:55.148Z
// compressed base64-encoded blob for include-ens data
// source: https://github.com/adraffy/ens-normalize.js/blob/main/src/make.js
// see: https://github.com/adraffy/ens-normalize.js#security
// SHA-256: 0565ed049b9cf1614bb9e11ba7d8ac6a6fb96c893253d890f7e2b2884b9ded32
var COMPRESSED$1 = '';
const FENCED = new Map([[8217,"apostrophe"],[8260,"fraction slash"],[12539,"middle dot"]]);
const NSM_MAX = 4;

function decode_arithmetic(bytes) {
	let pos = 0;
	function u16() { return (bytes[pos++] << 8) | bytes[pos++]; }
	
	// decode the frequency table
	let symbol_count = u16();
	let total = 1;
	let acc = [0, 1]; // first symbol has frequency 1
	for (let i = 1; i < symbol_count; i++) {
		acc.push(total += u16());
	}

	// skip the sized-payload that the last 3 symbols index into
	let skip = u16();
	let pos_payload = pos;
	pos += skip;

	let read_width = 0;
	let read_buffer = 0; 
	function read_bit() {
		if (read_width == 0) {
			// this will read beyond end of buffer
			// but (undefined|0) => zero pad
			read_buffer = (read_buffer << 8) | bytes[pos++];
			read_width = 8;
		}
		return (read_buffer >> --read_width) & 1;
	}

	const N = 31;
	const FULL = 2**N;
	const HALF = FULL >>> 1;
	const QRTR = HALF >> 1;
	const MASK = FULL - 1;

	// fill register
	let register = 0;
	for (let i = 0; i < N; i++) register = (register << 1) | read_bit();

	let symbols = [];
	let low = 0;
	let range = FULL; // treat like a float
	while (true) {
		let value = Math.floor((((register - low + 1) * total) - 1) / range);
		let start = 0;
		let end = symbol_count;
		while (end - start > 1) { // binary search
			let mid = (start + end) >>> 1;
			if (value < acc[mid]) {
				end = mid;
			} else {
				start = mid;
			}
		}
		if (start == 0) break; // first symbol is end mark
		symbols.push(start);
		let a = low + Math.floor(range * acc[start]   / total);
		let b = low + Math.floor(range * acc[start+1] / total) - 1;
		while (((a ^ b) & HALF) == 0) {
			register = (register << 1) & MASK | read_bit();
			a = (a << 1) & MASK;
			b = (b << 1) & MASK | 1;
		}
		while (a & ~b & QRTR) {
			register = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();
			a = (a << 1) ^ HALF;
			b = ((b ^ HALF) << 1) | HALF | 1;
		}
		low = a;
		range = 1 + b - a;
	}
	let offset = symbol_count - 4;
	return symbols.map(x => { // index into payload
		switch (x - offset) {
			case 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);
			case 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);
			case 1: return offset + bytes[pos_payload++];
			default: return x - 1;
		}
	});
}	

// returns an iterator which returns the next symbol
function read_payload(v) {
	let pos = 0;
	return () => v[pos++];
}
function read_compressed_payload(s) {
	return read_payload(decode_arithmetic(unsafe_atob(s)));
}

// unsafe in the sense:
// expected well-formed Base64 w/o padding 
// 20220922: added for https://github.com/adraffy/ens-normalize.js/issues/4
function unsafe_atob(s) {
	let lookup = [];
	[...'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'].forEach((c, i) => lookup[c.charCodeAt(0)] = i);
	let n = s.length;
	let ret = new Uint8Array((6 * n) >> 3);
	for (let i = 0, pos = 0, width = 0, carry = 0; i < n; i++) {
		carry = (carry << 6) | lookup[s.charCodeAt(i)];
		width += 6;
		if (width >= 8) {
			ret[pos++] = (carry >> (width -= 8));
		}
	}
	return ret;
}

// eg. [0,1,2,3...] => [0,-1,1,-2,...]
function signed(i) { 
	return (i & 1) ? (~i >> 1) : (i >> 1);
}

function read_deltas(n, next) {
	let v = Array(n);
	for (let i = 0, x = 0; i < n; i++) v[i] = x += signed(next());
	return v;
}

// [123][5] => [0 3] [1 1] [0 0]
function read_sorted(next, prev = 0) {
	let ret = [];
	while (true) {
		let x = next();
		let n = next();
		if (!n) break;
		prev += x;
		for (let i = 0; i < n; i++) {
			ret.push(prev + i);
		}
		prev += n + 1;
	}
	return ret;
}

function read_sorted_arrays(next) {
	return read_array_while(() => { 
		let v = read_sorted(next);
		if (v.length) return v;
	});
}

// returns map of x => ys
function read_mapped(next) {
	let ret = [];
	while (true) {
		let w = next();
		if (w == 0) break;
		ret.push(read_linear_table(w, next));
	}
	while (true) {
		let w = next() - 1;
		if (w < 0) break;
		ret.push(read_replacement_table(w, next));
	}
	return ret.flat();
}

// read until next is falsy
// return array of read values
function read_array_while(next) {
	let v = [];
	while (true) {
		let x = next(v.length);
		if (!x) break;
		v.push(x);
	}
	return v;
}

// read w columns of length n
// return as n rows of length w
function read_transposed(n, w, next) {
	let m = Array(n).fill().map(() => []);
	for (let i = 0; i < w; i++) {
		read_deltas(n, next).forEach((x, j) => m[j].push(x));
	}
	return m;
}
 
// returns [[x, ys], [x+dx, ys+dy], [x+2*dx, ys+2*dy], ...]
// where dx/dy = steps, n = run size, w = length of y
function read_linear_table(w, next) {
	let dx = 1 + next();
	let dy = next();
	let vN = read_array_while(next);
	let m = read_transposed(vN.length, 1+w, next);
	return m.flatMap((v, i) => {
		let [x, ...ys] = v;
		return Array(vN[i]).fill().map((_, j) => {
			let j_dy = j * dy;
			return [x + j * dx, ys.map(y => y + j_dy)];
		});
	});
}

// return [[x, ys...], ...]
// where w = length of y
function read_replacement_table(w, next) { 
	let n = 1 + next();
	let m = read_transposed(n, 1+w, next);
	return m.map(v => [v[0], v.slice(1)]);
}


function read_trie(next) {
	let ret = [];
	let sorted = read_sorted(next); 
	expand(decode([]), []);
	return ret; // not sorted
	function decode(Q) { // characters that lead into this node
		let S = next(); // state: valid, save, check
		let B = read_array_while(() => { // buckets leading to new nodes
			let cps = read_sorted(next).map(i => sorted[i]);
			if (cps.length) return decode(cps);
		});
		return {S, B, Q};
	}
	function expand({S, B}, cps, saved) {
		if (S & 4 && saved === cps[cps.length-1]) return;
		if (S & 2) saved = cps[cps.length-1];
		if (S & 1) ret.push(cps); 
		for (let br of B) {
			for (let cp of br.Q) {
				expand(br, [...cps, cp], saved);
			}
		}
	}
}

function hex_cp(cp) {
	return cp.toString(16).toUpperCase().padStart(2, '0');
}

function quote_cp(cp) {
	return `{${hex_cp(cp)}}`; // raffy convention: like "\u{X}" w/o the "\u"
}

/*
export function explode_cp(s) {
	return [...s].map(c => c.codePointAt(0));
}
*/
function explode_cp(s) { // this is about 2x faster
	let cps = [];
	for (let pos = 0, len = s.length; pos < len; ) {
		let cp = s.codePointAt(pos);
		pos += cp < 0x10000 ? 1 : 2;
		cps.push(cp);
	}
	return cps;
}

function str_from_cps(cps) {
	const chunk = 4096;
	let len = cps.length;
	if (len < chunk) return String.fromCodePoint(...cps);
	let buf = [];
	for (let i = 0; i < len; ) {
		buf.push(String.fromCodePoint(...cps.slice(i, i += chunk)));
	}
	return buf.join('');
}

function compare_arrays(a, b) {
	let n = a.length;
	let c = n - b.length;
	for (let i = 0; c == 0 && i < n; i++) c = a[i] - b[i];
	return c;
}

// created 2023-09-25T01:01:55.148Z
// compressed base64-encoded blob for include-nf data
// source: https://github.com/adraffy/ens-normalize.js/blob/main/src/make.js
// see: https://github.com/adraffy/ens-normalize.js#security
// SHA-256: a974b6f8541fc29d919bc85118af0a44015851fab5343f8679cb31be2bdb209e
var COMPRESSED = 'AEUDTAHBCFQATQDRADAAcgAgADQAFAAsABQAHwAOACQADQARAAoAFwAHABIACAAPAAUACwAFAAwABAAQAAMABwAEAAoABQAIAAIACgABAAQAFAALAAIACwABAAIAAQAHAAMAAwAEAAsADAAMAAwACgANAA0AAwAKAAkABAAdAAYAZwDSAdsDJgC0CkMB8xhZAqfoC190UGcThgBurwf7PT09Pb09AjgJum8OjDllxHYUKXAPxzq6tABAxgK8ysUvWAgMPT09PT09PSs6LT2HcgWXWwFLoSMEEEl5RFVMKvO0XQ8ExDdJMnIgsj26PTQyy8FfEQ8AY8IPAGcEbwRwBHEEcgRzBHQEdQR2BHcEeAR6BHsEfAR+BIAEgfndBQoBYgULAWIFDAFiBNcE2ATZBRAFEQUvBdALFAsVDPcNBw13DYcOMA4xDjMB4BllHI0B2grbAMDpHLkQ7QHVAPRNQQFnGRUEg0yEB2uaJF8AJpIBpob5AERSMAKNoAXqaQLUBMCzEiACnwRZEkkVsS7tANAsBG0RuAQLEPABv9HICTUBXigPZwRBApMDOwAamhtaABqEAY8KvKx3LQ4ArAB8UhwEBAVSagD8AEFZADkBIadVj2UMUgx5Il4ANQC9AxIB1BlbEPMAs30CGxlXAhwZKQIECBc6EbsCoxngzv7UzRQA8M0BawL6ZwkN7wABAD33OQRcsgLJCjMCjqUChtw/km+NAsXPAoP2BT84PwURAK0RAvptb6cApQS/OMMey5HJS84UdxpxTPkCogVFITaTOwERAK5pAvkNBOVyA7q3BKlOJSALAgUIBRcEdASpBXqzABXFSWZOawLCOqw//AolCZdvv3dSBkEQGyelEPcMMwG1ATsN7UvYBPEGOwTJH30ZGQ/NlZwIpS3dDO0m4y6hgFoj9SqDBe1L9DzdC01RaA9ZC2UJ4zpjgU4DIQENIosK3Q05CG0Q8wrJaw3lEUUHOQPVSZoApQcBCxEdNRW1JhBirAsJOXcG+xr2C48mrxMpevwF0xohBk0BKRr/AM8u54WwWjFcHE9fBgMLJSPHFKhQIA0lQLd4SBobBxUlqQKRQ3BKh1E2HpMh9jw9DWYuE1F8B/U8BRlPC4E8nkarRQ4R0j6NPUgiSUwsBDV/LC8niwnPD4UMuXxyAVkJIQmxDHETMREXN8UIOQcZLZckJxUIIUaVYJoE958D8xPRAwsFPwlBBxMDtRwtEy4VKQUNgSTXAvM21S6zAo9WgAEXBcsPJR/fEFBH4A7pCJsCZQODJesALRUhABcimwhDYwBfj9hTBS7LCMdqbCN0A2cU52ERcweRDlcHpxwzFb8c4XDIXguGCCijrwlbAXUJmQFfBOMICTVbjKAgQWdTi1gYmyBhQT9d/AIxDGUVn0S9h3gCiw9rEhsBNQFzBzkNAQJ3Ee0RaxCVCOuGBDW1M/g6JQRPIYMgEQonA09szgsnJvkM+GkBoxJiAww0PXfuZ6tgtiQX/QcZMsVBYCHxC5JPzQycGsEYQlQuGeQHvwPzGvMn6kFXBf8DowMTOk0z7gS9C2kIiwk/AEkOoxcH1xhqCnGM0AExiwG3mQNXkYMCb48GNwcLAGcLhwV55QAdAqcIowAFAM8DVwA5Aq0HnQAZAIVBAT0DJy8BIeUCjwOTCDHLAZUvAfMpBBvDDBUA9zduSgLDsQKAamaiBd1YAo4CSTUBTSUEBU5HUQOvceEA2wBLBhPfRwEVq0rLGuNDAd9vKwDHAPsABTUHBUEBzQHzbQC3AV8LMQmis7UBTekpAIMAFWsB1wKJAN0ANQB/8QFTAE0FWfkF0wJPSQERMRgrV2EBuwMfATMBDQB5BsuNpckHHwRtB9MCEBsV4QLvLge1AQMi3xPNQsUCvd5VoWACZIECYkJbTa9bNyACofcCaJgCZgkCn4Q4GwsCZjsCZiYEbgR/A38TA36SOQY5dxc5gjojIwJsHQIyNjgKAm3HAm2u74ozZ0UrAWcA3gDhAEoFB5gMjQD+C8IADbUCdy8CdqI/AnlLQwJ4uh1c20WuRtcCfD8CesgCfQkCfPAFWQUgSABIfWMkAoFtAoAAAoAFAn+uSVhKWxUXSswC0QEC0MxLJwOITwOH5kTFkTIC8qFdAwMDrkvOTC0lA89NTE2vAos/AorYwRsHHUNnBbcCjjcCjlxAl4ECjtkCjlx4UbRTNQpS1FSFApP7ApMMAOkAHFUeVa9V0AYsGymVhjLheGZFOzkCl58C77JYIagAWSUClo8ClnycAKlZrFoJgU0AOwKWtQKWTlxEXNECmcsCmWRcyl0HGQKcmznCOp0CnBYCn5sCnriKAB0PMSoPAp3xAp6SALU9YTRh7wKe0wKgbgGpAp6fHwKeTqVjyGQnJSsCJ68CJn4CoPsCoEwCot0CocQCpi8Cpc4Cp/8AfQKn8mh8aLEAA0lqHGrRAqzjAqyuAq1nAq0CAlcdAlXcArHh1wMfTmyXArK9DQKy6Bds4G1jbUhfAyXNArZcOz9ukAMpRQK4XgK5RxUCuSp3cDZw4QK9GQK72nCWAzIRAr6IcgIDM3ECvhpzInNPAsPLAsMEc4J0SzVFdOADPKcDPJoDPb8CxXwCxkcCxhCJAshpUQLIRALJTwLJLgJknQLd0nh5YXiueSVL0AMYo2cCAmH0GfOVJHsLXpJeuxECz2sCz2wvS1PS8xOfAMatAs9zASnqA04SfksFAtwnAtuKAtJPA1JcA1NfAQEDVYyAiT8AyxbtYEWCHILTgs6DjQLaxwLZ3oQQhEmnPAOGpQAvA2QOhnFZ+QBVAt9lAt64c3cC4i/tFAHzMCcB9JsB8tKHAuvzAulweQLq+QLq5AD5RwG5Au6JAuuclqqXAwLuPwOF4Jh5cOBxoQLzAwBpA44WmZMC9xMDkW4DkocC95gC+dkC+GaaHJqruzebHgOdgwL++gEbADmfHJ+zAwWNA6ZqA6bZANHFAwZqoYiiBQkDDEkCwAA/AwDhQRdTARHzA2sHl2cFAJMtK7evvdsBiZkUfxEEOQH7KQUhDp0JnwCS/SlXxQL3AZ0AtwW5AG8LbUEuFCaNLgFDAYD8AbUmAHUDDgRtACwCFgyhAAAKAj0CagPdA34EkQEgRQUhfAoABQBEABMANhICdwEABdUDa+8KxQIA9wqfJ7+xt+UBkSFBQgHpFH8RNMCJAAQAGwBaAkUChIsABjpTOpSNbQC4Oo860ACNOME63AClAOgAywE6gTo7Ofw5+Tt2iTpbO56JOm85GAFWATMBbAUvNV01njWtNWY1dTW2NcU1gjWRNdI14TWeNa017jX9NbI1wTYCNhE1xjXVNhY2JzXeNe02LjY9Ni41LSE2OjY9Njw2yTcIBJA8VzY4Nt03IDcPNsogN4k3MAoEsDxnNiQ3GTdsOo03IULUQwdC4EMLHA8PCZsobShRVQYA6X8A6bABFCnXAukBowC9BbcAbwNzBL8MDAMMAQgDAAkKCwsLCQoGBAVVBI/DvwDz9b29kaUCb0QtsRTNLt4eGBcSHAMZFhYZEhYEARAEBUEcQRxBHEEcQRxBHEEaQRxBHEFCSTxBPElISUhBNkM2QTYbNklISVmBVIgBFLWZAu0BhQCjBcEAbykBvwGJAaQcEZ0ePCklMAAhMvAIMAL54gC7Bm8EescjzQMpARQpKgDUABavAj626xQAJP0A3etzuf4NNRA7efy2Z9NQrCnC0OSyANz5BBIbJ5IFDR6miIavYS6tprjjmuKebxm5C74Q225X1pkaYYPb6f1DK4k3xMEBb9S2WMjEibTNWhsRJIA+vwNVEiXTE5iXs/wezV66oFLfp9NZGYW+Gk19J2+bCT6Ye2w6LDYdgzKMUabk595eLBCXANz9HUpWbATq9vqXVx9XDg+Pc9Xp4+bsS005SVM/BJBM4687WUuf+Uj9dEi8aDNaPxtpbDxcG1THTImUMZq4UCaaNYpsVqraNyKLJXDYsFZ/5jl7bLRtO88t7P3xZaAxhb5OdPMXqsSkp1WCieG8jXm1U99+blvLlXzPCS+M93VnJCiK+09LfaSaBAVBomyDgJua8dfUzR7ga34IvR2Nvj+A9heJ6lsl1KG4NkI1032Cnff1m1wof2B9oHJK4bi6JkEdSqeNeiuo6QoZZincoc73/TH9SXF8sCE7XyuYyW8WSgbGFCjPV0ihLKhdPs08Tx82fYAkLLc4I2wdl4apY7GU5lHRFzRWJep7Ww3wbeA3qmd59/86P4xuNaqDpygXt6M85glSBHOCGgJDnt+pN9bK7HApMguX6+06RZNjzVmcZJ+wcUrJ9//bpRNxNuKpNl9uFds+S9tdx7LaM5ZkIrPj6nIU9mnbFtVbs9s/uLgl8MVczAwet+iOEzzBlYW7RCMgE6gyNLeq6+1tIx4dpgZnd0DksJS5f+JNDpwwcPNXaaVspq1fbQajOrJgK0ofKtJ1Ne90L6VO4MOl5S886p7u6xo7OLjG8TGL+HU1JXGJgppg4nNbNJ5nlzSpuPYy21JUEcUA94PoFiZfjZue+QnyQ80ekOuZVkxx4g+cvhJfHgNl4hy1/a6+RKcKlar/J29y//EztlbVPHVUeQ1zX86eQVAjR/M3dA9w4W8LfaXp4EgM85wOWasli837PzVMOnsLzR+k3o75/lRPAJSE1xAKQzEi5v10ke+VBvRt1cwQRMd+U5mLCTGVd6XiZtgBG5cDi0w22GKcVNvHiu5LQbZEDVtz0onn7k5+heuKXVsZtSzilkLRAUmjMXEMB3J9YC50XBxPiz53SC+EhnPl9WsKCv92SM/OFFIMJZYfl0WW8tIO3UxYcwdMAj7FSmgrsZ2aAZO03BOhP1bNNZItyXYQFTpC3SG1VuPDqH9GkiCDmE+JwxyIVSO5siDErAOpEXFgjy6PQtOVDj+s6e1r8heWVvmZnTciuf4EiNZzCAd7SOMhXERIOlsHIMG399i9aLTy3m2hRLZjJVDNLS53iGIK11dPqQt0zBDyg6qc7YqkDm2M5Ve6dCWCaCbTXX2rToaIgz6+zh4lYUi/+6nqcFMAkQJKHYLK0wYk5N9szV6xihDbDDFr45lN1K4aCXBq/FitPSud9gLt5ZVn+ZqGX7cwm2z5EGMgfFpIFyhGGuDPmso6TItTMwny+7uPnLCf4W6goFQFV0oQSsc9VfMmVLcLr6ZetDZbaSFTLqnSO/bIPjA3/zAUoqgGFAEQS4IhuMzEp2I3jJzbzkk/IEmyax+rhZTwd6f+CGtwPixu8IvzACquPWPREu9ZvGkUzpRwvRRuaNN6cr0W1wWits9ICdYJ7ltbgMiSL3sTPeufgNcVqMVWFkCPDH4jG2jA0XcVgQj62Cb29v9f/z/+2KbYvIv/zzjpQAPkliaVDzNrW57TZ/ZOyZD0nlfMmAIBIAGAI0D3k/mdN4xr9v85ZbZbbqfH2jGd5hUqNZWwl5SPfoGmfElmazUIeNL1j/mkF7VNAzTq4jNt8JoQ11NQOcmhprXoxSxfRGJ9LDEOAQ+dmxAQH90iti9e2u/MoeuaGcDTHoC+xsmEeWmxEKefQuIzHbpw5Tc5cEocboAD09oipWQhtTO1wivf/O+DRe2rpl/E9wlrzBorjJsOeG1B/XPW4EaJEFdNlECEZga5ZoGRHXgYouGRuVkm8tDESiEyFNo+3s5M5puSdTyUL2llnINVHEt91XUNW4ewdMgJ4boJfEyt/iY5WXqbA+A2Fkt5Z0lutiWhe9nZIyIUjyXDC3UsaG1t+eNx6z4W/OYoTB7A6x+dNSTOi9AInctbESqm5gvOLww7OWXPrmHwVZasrl4eD113pm+JtT7JVOvnCXqdzzdTRHgJ0PiGTFYW5Gvt9R9LD6Lzfs0v/TZZHSmyVNq7viIHE6DBK7Qp07Iz55EM8SYtQvZf/obBniTWi5C2/ovHfw4VndkE5XYdjOhCMRjDeOEfXeN/CwfGduiUIfsoFeUxXeQXba7c7972XNv8w+dTjjUM0QeNAReW+J014dKAD/McQYXT7c0GQPIkn3Ll6R7gGjuiQoZD0TEeEqQpKoZ15g/0OPQI17QiSv9AUROa/V/TQN3dvLArec3RrsYlvBm1b8LWzltdugsC50lNKYLEp2a+ZZYqPejULRlOJh5zj/LVMyTDvwKhMxxwuDkxJ1QpoNI0OTWLom4Z71SNzI9TV1iXJrIu9Wcnd+MCaAw8o1jSXd94YU/1gnkrC9BUEOtQvEIQ7g0i6h+KL2JKk8Ydl7HruvgWMSAmNe+LshGhV4qnWHhO9/RIPQzY1tHRj2VqOyNsDpK0cww+56AdDC4gsWwY0XxoucIWIqs/GcwnWqlaT0KPr8mbK5U94/301i1WLt4YINTVvCFBrFZbIbY8eycOdeJ2teD5IfPLCRg7jjcFTwlMFNl9zdh/o3E/hHPwj7BWg0MU09pPrBLbrCgm54A6H+I6v27+jL5gkjWg/iYdks9jbfVP5y/n0dlgWEMlKasl7JvFZd56LfybW1eeaVO0gxTfXZwD8G4SI116yx7UKVRgui6Ya1YpixqXeNLc8IxtAwCU5IhwQgn+NqHnRaDv61CxKhOq4pOX7M6pkA+Pmpd4j1vn6ACUALoLLc4vpXci8VidLxzm7qFBe7s+quuJs6ETYmnpgS3LwSZxPIltgBDXz8M1k/W2ySNv2f9/NPhxLGK2D21dkHeSGmenRT3Yqcdl0m/h3OYr8V+lXNYGf8aCCpd4bWjE4QIPj7vUKN4Nrfs7ML6Y2OyS830JCnofg/k7lpFpt4SqZc5HGg1HCOrHvOdC8bP6FGDbE/VV0mX4IakzbdS/op+Kt3G24/8QbBV7y86sGSQ/vZzU8FXs7u6jIvwchsEP2BpIhW3G8uWNwa3HmjfH/ZjhhCWvluAcF+nMf14ClKg5hGgtPLJ98ueNAkc5Hs2WZlk2QHvfreCK1CCGO6nMZVSb99VM/ajr8WHTte9JSmkXq/i/U943HEbdzW6Re/S88dKgg8pGOLlAeNiqrcLkUR3/aClFpMXcOUP3rmETcWSfMXZE3TUOi8i+fqRnTYLflVx/Vb/6GJ7eIRZUA6k3RYR3iFSK9c4iDdNwJuZL2FKz/IK5VimcNWEqdXjSoxSgmF0UPlDoUlNrPcM7ftmA8Y9gKiqKEHuWN+AZRIwtVSxye2Kf8rM3lhJ5XcBXU9n4v0Oy1RU2M+4qM8AQPVwse8ErNSob5oFPWxuqZnVzo1qB/IBxkM3EVUKFUUlO3e51259GgNcJbCmlvrdjtoTW7rChm1wyCKzpCTwozUUEOIcWLneRLgMXh+SjGSFkAllzbGS5HK7LlfCMRNRDSvbQPjcXaenNYxCvu2Qyznz6StuxVj66SgI0T8B6/sfHAJYZaZ78thjOSIFumNWLQbeZixDCCC+v0YBtkxiBB3jefHqZ/dFHU+crbj6OvS1x/JDD7vlm7zOVPwpUC01nhxZuY/63E7g';

// https://unicode.org/reports/tr15/
// for reference implementation
// see: /derive/nf.js


// algorithmic hangul
// https://www.unicode.org/versions/Unicode15.0.0/ch03.pdf (page 144)
const S0 = 0xAC00;
const L0 = 0x1100;
const V0 = 0x1161;
const T0 = 0x11A7;
const L_COUNT = 19;
const V_COUNT = 21;
const T_COUNT = 28;
const N_COUNT = V_COUNT * T_COUNT;
const S_COUNT = L_COUNT * N_COUNT;
const S1 = S0 + S_COUNT;
const L1 = L0 + L_COUNT;
const V1 = V0 + V_COUNT;
const T1 = T0 + T_COUNT;

function unpack_cc(packed) {
	return (packed >> 24) & 0xFF;
}
function unpack_cp(packed) {
	return packed & 0xFFFFFF;
}

let SHIFTED_RANK, EXCLUSIONS, DECOMP, RECOMP;

function init$1() {
	//console.time('nf');
	let r = read_compressed_payload(COMPRESSED);
	SHIFTED_RANK = new Map(read_sorted_arrays(r).flatMap((v, i) => v.map(x => [x, (i+1) << 24]))); // pre-shifted
	EXCLUSIONS = new Set(read_sorted(r));
	DECOMP = new Map();
	RECOMP = new Map();
	for (let [cp, cps] of read_mapped(r)) {
		if (!EXCLUSIONS.has(cp) && cps.length == 2) {
			let [a, b] = cps;
			let bucket = RECOMP.get(a);
			if (!bucket) {
				bucket = new Map();
				RECOMP.set(a, bucket);
			}
			bucket.set(b, cp);
		}
		DECOMP.set(cp, cps.reverse()); // stored reversed
	}
	//console.timeEnd('nf');
	// 20230905: 11ms
}

function is_hangul(cp) {
	return cp >= S0 && cp < S1;
}

function compose_pair(a, b) {
	if (a >= L0 && a < L1 && b >= V0 && b < V1) {
		return S0 + (a - L0) * N_COUNT + (b - V0) * T_COUNT;
	} else if (is_hangul(a) && b > T0 && b < T1 && (a - S0) % T_COUNT == 0) {
		return a + (b - T0);
	} else {
		let recomp = RECOMP.get(a);
		if (recomp) {
			recomp = recomp.get(b);
			if (recomp) {
				return recomp;
			}
		}
		return -1;
	}
}

function decomposed(cps) {
	if (!SHIFTED_RANK) init$1();
	let ret = [];
	let buf = [];
	let check_order = false;
	function add(cp) {
		let cc = SHIFTED_RANK.get(cp);
		if (cc) {
			check_order = true;
			cp |= cc;
		}
		ret.push(cp);
	}
	for (let cp of cps) {
		while (true) {
			if (cp < 0x80) {
				ret.push(cp);
			} else if (is_hangul(cp)) {
				let s_index = cp - S0;
				let l_index = s_index / N_COUNT | 0;
				let v_index = (s_index % N_COUNT) / T_COUNT | 0;
				let t_index = s_index % T_COUNT;
				add(L0 + l_index);
				add(V0 + v_index);
				if (t_index > 0) add(T0 + t_index);
			} else {
				let mapped = DECOMP.get(cp);
				if (mapped) {
					buf.push(...mapped);
				} else {
					add(cp);
				}
			}
			if (!buf.length) break;
			cp = buf.pop();
		}
	}
	if (check_order && ret.length > 1) {
		let prev_cc = unpack_cc(ret[0]);
		for (let i = 1; i < ret.length; i++) {
			let cc = unpack_cc(ret[i]);
			if (cc == 0 || prev_cc <= cc) {
				prev_cc = cc;
				continue;
			}
			let j = i-1;
			while (true) {
				let tmp = ret[j+1];
				ret[j+1] = ret[j];
				ret[j] = tmp;
				if (!j) break;
				prev_cc = unpack_cc(ret[--j]);
				if (prev_cc <= cc) break;
			}
			prev_cc = unpack_cc(ret[i]);
		}
	}
	return ret;
}

function composed_from_decomposed(v) {
	let ret = [];
	let stack = [];
	let prev_cp = -1;
	let prev_cc = 0;
	for (let packed of v) {
		let cc = unpack_cc(packed);
		let cp = unpack_cp(packed);
		if (prev_cp == -1) {
			if (cc == 0) {
				prev_cp = cp;
			} else {
				ret.push(cp);
			}
		} else if (prev_cc > 0 && prev_cc >= cc) {
			if (cc == 0) {
				ret.push(prev_cp, ...stack);
				stack.length = 0;
				prev_cp = cp;
			} else {
				stack.push(cp);
			}
			prev_cc = cc;
		} else {
			let composed = compose_pair(prev_cp, cp);
			if (composed >= 0) {
				prev_cp = composed;
			} else if (prev_cc == 0 && cc == 0) {
				ret.push(prev_cp);
				prev_cp = cp;
			} else {
				stack.push(cp);
				prev_cc = cc;
			}
		}
	}
	if (prev_cp >= 0) {
		ret.push(prev_cp, ...stack);	
	}
	return ret;
}

// note: cps can be iterable
function nfd(cps) {
	return decomposed(cps).map(unpack_cp);
}
function nfc(cps) {
	return composed_from_decomposed(decomposed(cps));
}

const HYPHEN = 0x2D;
const STOP = 0x2E;
const STOP_CH = '.';
const FE0F = 0xFE0F;
const UNIQUE_PH = 1;

// 20230913: replace [...v] with Array_from(v) to avoid large spreads
const Array_from = x => Array.from(x); // Array.from.bind(Array);

function group_has_cp(g, cp) {
	// 20230913: keep primary and secondary distinct instead of creating valid union
	return g.P.has(cp) || g.Q.has(cp);
}

class Emoji extends Array {
	get is_emoji() { return true; } // free tagging system
}

let MAPPED, IGNORED, CM, NSM, ESCAPE, NFC_CHECK, GROUPS, WHOLE_VALID, WHOLE_MAP, VALID, EMOJI_LIST, EMOJI_ROOT;

function init() {
	if (MAPPED) return;
	
	let r = read_compressed_payload(COMPRESSED$1);
	const read_sorted_array = () => read_sorted(r);
	const read_sorted_set = () => new Set(read_sorted_array());
	const set_add_many = (set, v) => v.forEach(x => set.add(x));

	MAPPED = new Map(read_mapped(r)); 
	IGNORED = read_sorted_set(); // ignored characters are not valid, so just read raw codepoints

	/*
	// direct include from payload is smaller than the decompression code
	const FENCED = new Map(read_array_while(() => {
		let cp = r();
		if (cp) return [cp, read_str(r())];
	}));
	*/
	// 20230217: we still need all CM for proper error formatting
	// but norm only needs NSM subset that are potentially-valid
	CM = read_sorted_array();
	NSM = new Set(read_sorted_array().map(i => CM[i]));
	CM = new Set(CM);
	
	ESCAPE = read_sorted_set(); // characters that should not be printed
	NFC_CHECK = read_sorted_set(); // only needed to illustrate ens_tokenize() transformations

	let chunks = read_sorted_arrays(r);
	let unrestricted = r();
	//const read_chunked = () => new Set(read_sorted_array().flatMap(i => chunks[i]).concat(read_sorted_array()));
	const read_chunked = () => {
		// 20230921: build set in parts, 2x faster
		let set = new Set();
		read_sorted_array().forEach(i => set_add_many(set, chunks[i]));
		set_add_many(set, read_sorted_array());
		return set; 
	};
	GROUPS = read_array_while(i => {
		// minifier property mangling seems unsafe
		// so these are manually renamed to single chars
		let N = read_array_while(r).map(x => x+0x60);
		if (N.length) {
			let R = i >= unrestricted; // unrestricted then restricted
			N[0] -= 32; // capitalize
			N = str_from_cps(N);
			if (R) N=`Restricted[${N}]`;
			let P = read_chunked(); // primary
			let Q = read_chunked(); // secondary
			let M = !r(); // not-whitelisted, check for NSM
			// *** this code currently isn't needed ***
			/*
			let V = [...P, ...Q].sort((a, b) => a-b); // derive: sorted valid
			let M = r()-1; // number of combining mark
			if (M < 0) { // whitelisted
				M = new Map(read_array_while(() => {
					let i = r();
					if (i) return [V[i-1], read_array_while(() => {
						let v = read_array_while(r);
						if (v.length) return v.map(x => x-1);
					})];
				}));
			}*/
			return {N, P, Q, M, R};
		}
	});

	// decode compressed wholes
	WHOLE_VALID = read_sorted_set();
	WHOLE_MAP = new Map();
	let wholes = read_sorted_array().concat(Array_from(WHOLE_VALID)).sort((a, b) => a-b); // must be sorted
	wholes.forEach((cp, i) => {
		let d = r(); 
		let w = wholes[i] = d ? wholes[i-d] : {V: [], M: new Map()};
		w.V.push(cp); // add to member set
		if (!WHOLE_VALID.has(cp)) {
			WHOLE_MAP.set(cp, w);  // register with whole map
		}
	});

	// compute confusable-extent complements
	// usage: WHOLE_MAP.get(cp).M.get(cp) = complement set
	for (let {V, M} of new Set(WHOLE_MAP.values())) {
		// connect all groups that have each whole character
		let recs = [];
		for (let cp of V) {
			let gs = GROUPS.filter(g => group_has_cp(g, cp));
			let rec = recs.find(({G}) => gs.some(g => G.has(g)));
			if (!rec) {
				rec = {G: new Set(), V: []};
				recs.push(rec);
			}
			rec.V.push(cp);
			set_add_many(rec.G, gs);
		}
		// per character cache groups which are not a member of the extent
		let union = recs.flatMap(x => Array_from(x.G)); // all of the groups used by this whole
		for (let {G, V} of recs) {
			let complement = new Set(union.filter(g => !G.has(g))); // groups not covered by the extent
			for (let cp of V) {
				M.set(cp, complement); // this is the same reference
			}
		}
	}

	// compute valid set
	// 20230924: VALID was union but can be re-used
	VALID = new Set(); // exists in 1+ groups
	let multi = new Set(); // exists in 2+ groups
	const add_to_union = cp => VALID.has(cp) ? multi.add(cp) : VALID.add(cp);
	for (let g of GROUPS) {
		for (let cp of g.P) add_to_union(cp);
		for (let cp of g.Q) add_to_union(cp);
	}
	// dual purpose WHOLE_MAP: return placeholder if unique non-confusable
	for (let cp of VALID) {
		if (!WHOLE_MAP.has(cp) && !multi.has(cp)) {
			WHOLE_MAP.set(cp, UNIQUE_PH);
		}
	}
	// add all decomposed parts
	// see derive: "Valid is Closed (via Brute-force)"
	set_add_many(VALID, nfd(VALID));
	
	// decode emoji
	// 20230719: emoji are now fully-expanded to avoid quirk logic 
	EMOJI_LIST = read_trie(r).map(v => Emoji.from(v)).sort(compare_arrays);
	EMOJI_ROOT = new Map(); // this has approx 7K nodes (2+ per emoji)
	for (let cps of EMOJI_LIST) {
		// 20230719: change to *slightly* stricter algorithm which disallows 
		// insertion of misplaced FE0F in emoji sequences (matching ENSIP-15)
		// example: beautified [A B] (eg. flag emoji) 
		//  before: allow: [A FE0F B], error: [A FE0F FE0F B] 
		//   after: error: both
		// note: this code now matches ENSNormalize.{cs,java} logic
		let prev = [EMOJI_ROOT];
		for (let cp of cps) {
			let next = prev.map(node => {
				let child = node.get(cp);
				if (!child) {
					// should this be object? 
					// (most have 1-2 items, few have many)
					// 20230719: no, v8 default map is 4?
					child = new Map();
					node.set(cp, child);
				}
				return child;
			});
			if (cp === FE0F) {
				prev.push(...next); // less than 20 elements
			} else {
				prev = next;
			}
		}
		for (let x of prev) {
			x.V = cps;
		}
	}
}

// if escaped: {HEX}
//       else: "x" {HEX}
function quoted_cp(cp) {
	return (should_escape(cp) ? '' : `${bidi_qq(safe_str_from_cps([cp]))} `) + quote_cp(cp);
}

// 20230211: some messages can be mixed-directional and result in spillover
// use 200E after a quoted string to force the remainder of a string from 
// acquring the direction of the quote
// https://www.w3.org/International/questions/qa-bidi-unicode-controls#exceptions
function bidi_qq(s) {
	return `"${s}"\u200E`; // strong LTR
}

function check_label_extension(cps) {
	if (cps.length >= 4 && cps[2] == HYPHEN && cps[3] == HYPHEN) {
		throw new Error(`invalid label extension: "${str_from_cps(cps.slice(0, 4))}"`); // this can only be ascii so cant be bidi
	}
}
function check_leading_underscore(cps) {
	const UNDERSCORE = 0x5F;
	for (let i = cps.lastIndexOf(UNDERSCORE); i > 0; ) {
		if (cps[--i] !== UNDERSCORE) {
			throw new Error('underscore allowed only at start');
		}
	}
}
// check that a fenced cp is not leading, trailing, or touching another fenced cp
function check_fenced(cps) {
	let cp = cps[0];
	let prev = FENCED.get(cp);
	if (prev) throw error_placement(`leading ${prev}`);
	let n = cps.length;
	let last = -1; // prevents trailing from throwing
	for (let i = 1; i < n; i++) {
		cp = cps[i];
		let match = FENCED.get(cp);
		if (match) {
			// since cps[0] isn't fenced, cps[1] cannot throw
			if (last == i) throw error_placement(`${prev} + ${match}`);
			last = i + 1;
			prev = match;
		}
	}
	if (last == n) throw error_placement(`trailing ${prev}`);
}

// create a safe to print string 
// invisibles are escaped
// leading cm uses placeholder
// if cps exceed max, middle truncate with ellipsis
// quoter(cp) => string, eg. 3000 => "{3000}"
// note: in html, you'd call this function then replace [<>&] with entities
function safe_str_from_cps(cps, max = Infinity, quoter = quote_cp) {
	//if (Number.isInteger(cps)) cps = [cps];
	//if (!Array.isArray(cps)) throw new TypeError(`expected codepoints`);
	let buf = [];
	if (is_combining_mark(cps[0])) buf.push('◌');
	if (cps.length > max) {
		max >>= 1;
		cps = [...cps.slice(0, max), 0x2026, ...cps.slice(-max)];
	}
	let prev = 0;
	let n = cps.length;
	for (let i = 0; i < n; i++) {
		let cp = cps[i];
		if (should_escape(cp)) {
			buf.push(str_from_cps(cps.slice(prev, i)));
			buf.push(quoter(cp));
			prev = i + 1;
		}
	}
	buf.push(str_from_cps(cps.slice(prev, n)));
	return buf.join('');
}

// note: set(s) cannot be exposed because they can be modified
// note: Object.freeze() doesn't work
function is_combining_mark(cp) {
	init();
	return CM.has(cp);
}
function should_escape(cp) {
	init();
	return ESCAPE.has(cp);
}

// return all supported emoji as fully-qualified emoji 
// ordered by length then lexicographic 
function ens_emoji() {
	init();
	return EMOJI_LIST.map(x => x.slice()); // emoji are exposed so copy
}

function ens_normalize_fragment(frag, decompose) {
	init();
	let nf = decompose ? nfd : nfc;
	return frag.split(STOP_CH).map(label => str_from_cps(tokens_from_str(explode_cp(label), nf, filter_fe0f).flat())).join(STOP_CH);
}

function ens_normalize(name) {
	return flatten(split(name, nfc, filter_fe0f));
}

function ens_beautify(name) {
	let labels = split(name, nfc, x => x); // emoji not exposed
	for (let {type, output, error} of labels) {
		if (error) break; // flatten will throw

		// replace leading/trailing hyphen
		// 20230121: consider beautifing all or leading/trailing hyphen to unicode variant
		// not exactly the same in every font, but very similar: "-" vs "‐"
		/*
		const UNICODE_HYPHEN = 0x2010;
		// maybe this should replace all for visual consistancy?
		// `node tools/reg-count.js regex ^-\{2,\}` => 592
		//for (let i = 0; i < output.length; i++) if (output[i] == 0x2D) output[i] = 0x2010;
		if (output[0] == HYPHEN) output[0] = UNICODE_HYPHEN;
		let end = output.length-1;
		if (output[end] == HYPHEN) output[end] = UNICODE_HYPHEN;
		*/
		// 20230123: WHATWG URL uses "CheckHyphens" false
		// https://url.spec.whatwg.org/#idna

		// update ethereum symbol
		// ξ => Ξ if not greek
		if (type !== 'Greek') array_replace(output, 0x3BE, 0x39E);

		// 20221213: fixes bidi subdomain issue, but breaks invariant (200E is disallowed)
		// could be fixed with special case for: 2D (.) + 200E (LTR)
		// https://discuss.ens.domains/t/bidi-label-ordering-spoof/15824
		//output.splice(0, 0, 0x200E);
	}
	return flatten(labels);
}

function array_replace(v, a, b) {
	let prev = 0;
	while (true) {
		let next = v.indexOf(a, prev);
		if (next < 0) break;
		v[next] = b; 
		prev = next + 1;
	}
}

function ens_split(name, preserve_emoji) {
	return split(name, nfc, preserve_emoji ? x => x.slice() : filter_fe0f); // emoji are exposed so copy
}

function split(name, nf, ef) {
	if (!name) return []; // 20230719: empty name allowance
	init();
	let offset = 0;
	// https://unicode.org/reports/tr46/#Validity_Criteria
	// 4.) "The label must not contain a U+002E ( . ) FULL STOP."
	return name.split(STOP_CH).map(label => {
		let input = explode_cp(label);
		let info = {
			input,
			offset, // codepoint, not substring!
		};
		offset += input.length + 1; // + stop
		try {
			// 1.) "The label must be in Unicode Normalization Form NFC"
			let tokens = info.tokens = tokens_from_str(input, nf, ef);
			let token_count = tokens.length;
			let type;
			if (!token_count) { // the label was effectively empty (could of had ignored characters)
				//norm = [];
				//type = 'None'; // use this instead of next match, "ASCII"
				// 20230120: change to strict
				// https://discuss.ens.domains/t/ens-name-normalization-2nd/14564/59
				throw new Error(`empty label`);
			} 
			let norm = info.output = tokens.flat();
			check_leading_underscore(norm);
			let emoji = info.emoji = token_count > 1 || tokens[0].is_emoji; // same as: tokens.some(x => x.is_emoji);
			if (!emoji && norm.every(cp => cp < 0x80)) { // special case for ascii
				// 20230123: matches matches WHATWG, see note 3.3
				check_label_extension(norm); // only needed for ascii
				// cant have fenced
				// cant have cm
				// cant have wholes
				// see derive: "Fastpath ASCII"
				type = 'ASCII';
			} else {
				let chars = tokens.flatMap(x => x.is_emoji ? [] : x); // all of the nfc tokens concat together
				if (!chars.length) { // theres no text, just emoji
					type = 'Emoji';
				} else {
					// 5.) "The label must not begin with a combining mark, that is: General_Category=Mark."
					if (CM.has(norm[0])) throw error_placement('leading combining mark');
					for (let i = 1; i < token_count; i++) { // we've already checked the first token
						let cps = tokens[i];
						if (!cps.is_emoji && CM.has(cps[0])) { // every text token has emoji neighbors, eg. EtEEEtEt...
							// bidi_qq() not needed since emoji is LTR and cps is a CM
							throw error_placement(`emoji + combining mark: "${str_from_cps(tokens[i-1])} + ${safe_str_from_cps([cps[0]])}"`); 
						}
					}
					check_fenced(norm);
					let unique = Array_from(new Set(chars));
					let [g] = determine_group(unique); // take the first match
					// see derive: "Matching Groups have Same CM Style"
					// alternative: could form a hybrid type: Latin/Japanese/...	
					check_group(g, chars); // need text in order
					check_whole(g, unique); // only need unique text (order would be required for multiple-char confusables)
					type = g.N;
					// 20230121: consider exposing restricted flag
					// it's simpler to just check for 'Restricted'
					// or even better: type.endsWith(']')
					//if (g.R) info.restricted = true;
				}
			}
			info.type = type;
		} catch (err) {
			info.error = err; // use full error object
		}
		return info;
	});
}

function check_whole(group, unique) {
	let maker;
	let shared = [];
	for (let cp of unique) {
		let whole = WHOLE_MAP.get(cp);
		if (whole === UNIQUE_PH) return; // unique, non-confusable
		if (whole) {
			let set = whole.M.get(cp); // groups which have a character that look-like this character
			maker = maker ? maker.filter(g => set.has(g)) : Array_from(set);
			if (!maker.length) return; // confusable intersection is empty
		} else {
			shared.push(cp); 
		}
	}
	if (maker) {
		// we have 1+ confusable
		// check if any of the remaining groups
		// contain the shared characters too
		for (let g of maker) {
			if (shared.every(cp => group_has_cp(g, cp))) {
				throw new Error(`whole-script confusable: ${group.N}/${g.N}`);
			}
		}
	}
}

// assumption: unique.size > 0
// returns list of matching groups
function determine_group(unique) {
	let groups = GROUPS;
	for (let cp of unique) {
		// note: we need to dodge CM that are whitelisted
		// but that code isn't currently necessary
		let gs = groups.filter(g => group_has_cp(g, cp));
		if (!gs.length) {
			if (!GROUPS.some(g => group_has_cp(g, cp))) { 
				// the character was composed of valid parts
				// but it's NFC form is invalid
				// 20230716: change to more exact statement, see: ENSNormalize.{cs,java}
				// note: this doesn't have to be a composition
				// 20230720: change to full check
				throw error_disallowed(cp); // this should be rare
			} else {
				// there is no group that contains all these characters
				// throw using the highest priority group that matched
				// https://www.unicode.org/reports/tr39/#mixed_script_confusables
				throw error_group_member(groups[0], cp);
			}
		}
		groups = gs;
		if (gs.length == 1) break; // there is only one group left
	}
	// there are at least 1 group(s) with all of these characters
	return groups;
}

// throw on first error
function flatten(split) {
	return split.map(({input, error, output}) => {
		if (error) {
			// don't print label again if just a single label
			let msg = error.message;
			// bidi_qq() only necessary if msg is digits
			throw new Error(split.length == 1 ? msg : `Invalid label ${bidi_qq(safe_str_from_cps(input, 63))}: ${msg}`); 
		}
		return str_from_cps(output);
	}).join(STOP_CH);
}

function error_disallowed(cp) {
	// TODO: add cp to error?
	return new Error(`disallowed character: ${quoted_cp(cp)}`); 
}
function error_group_member(g, cp) {
	let quoted = quoted_cp(cp);
	let gg = GROUPS.find(g => g.P.has(cp)); // only check primary
	if (gg) {
		quoted = `${gg.N} ${quoted}`;
	}
	return new Error(`illegal mixture: ${g.N} + ${quoted}`);
}
function error_placement(where) {
	return new Error(`illegal placement: ${where}`);
}

// assumption: cps.length > 0
// assumption: cps[0] isn't a CM
// assumption: the previous character isn't an emoji
function check_group(g, cps) {
	for (let cp of cps) {
		if (!group_has_cp(g, cp)) {
			// for whitelisted scripts, this will throw illegal mixture on invalid cm, eg. "e{300}{300}"
			// at the moment, it's unnecessary to introduce an extra error type
			// until there exists a whitelisted multi-character
			//   eg. if (M < 0 && is_combining_mark(cp)) { ... }
			// there are 3 cases:
			//   1. illegal cm for wrong group => mixture error
			//   2. illegal cm for same group => cm error
			//       requires set of whitelist cm per group: 
			//        eg. new Set([...g.P, ...g.Q].flatMap(nfc).filter(cp => CM.has(cp)))
			//   3. wrong group => mixture error
			throw error_group_member(g, cp);
		}
	}
	//if (M >= 0) { // we have a known fixed cm count
	if (g.M) { // we need to check for NSM
		let decomposed = nfd(cps);
		for (let i = 1, e = decomposed.length; i < e; i++) { // see: assumption
			// 20230210: bugfix: using cps instead of decomposed h/t Carbon225
			/*
			if (CM.has(decomposed[i])) {
				let j = i + 1;
				while (j < e && CM.has(decomposed[j])) j++;
				if (j - i > M) {
					throw new Error(`too many combining marks: ${g.N} ${bidi_qq(str_from_cps(decomposed.slice(i-1, j)))} (${j-i}/${M})`);
				}
				i = j;
			}
			*/
			// 20230217: switch to NSM counting
			// https://www.unicode.org/reports/tr39/#Optional_Detection
			if (NSM.has(decomposed[i])) {
				let j = i + 1;
				for (let cp; j < e && NSM.has(cp = decomposed[j]); j++) {
					// a. Forbid sequences of the same nonspacing mark.
					for (let k = i; k < j; k++) { // O(n^2) but n < 100
						if (decomposed[k] == cp) {
							throw new Error(`duplicate non-spacing marks: ${quoted_cp(cp)}`);
						}
					}
				}
				// parse to end so we have full nsm count
				// b. Forbid sequences of more than 4 nonspacing marks (gc=Mn or gc=Me).
				if (j - i > NSM_MAX) {
					// note: this slice starts with a base char or spacing-mark cm
					throw new Error(`excessive non-spacing marks: ${bidi_qq(safe_str_from_cps(decomposed.slice(i-1, j)))} (${j-i}/${NSM_MAX})`);
				}
				i = j;
			}
		}
	}
	// *** this code currently isn't needed ***
	/*
	let cm_whitelist = M instanceof Map;
	for (let i = 0, e = cps.length; i < e; ) {
		let cp = cps[i++];
		let seqs = cm_whitelist && M.get(cp);
		if (seqs) { 
			// list of codepoints that can follow
			// if this exists, this will always be 1+
			let j = i;
			while (j < e && CM.has(cps[j])) j++;
			let cms = cps.slice(i, j);
			let match = seqs.find(seq => !compare_arrays(seq, cms));
			if (!match) throw new Error(`disallowed combining mark sequence: "${safe_str_from_cps([cp, ...cms])}"`);
			i = j;
		} else if (!V.has(cp)) {
			// https://www.unicode.org/reports/tr39/#mixed_script_confusables
			let quoted = quoted_cp(cp);
			for (let cp of cps) {
				let u = UNIQUE.get(cp);
				if (u && u !== g) {
					// if both scripts are restricted this error is confusing
					// because we don't differentiate RestrictedA from RestrictedB 
					if (!u.R) quoted = `${quoted} is ${u.N}`;
					break;
				}
			}
			throw new Error(`disallowed ${g.N} character: ${quoted}`);
			//throw new Error(`disallowed character: ${quoted} (expected ${g.N})`);
			//throw new Error(`${g.N} does not allow: ${quoted}`);
		}
	}
	if (!cm_whitelist) {
		let decomposed = nfd(cps);
		for (let i = 1, e = decomposed.length; i < e; i++) { // we know it can't be cm leading
			if (CM.has(decomposed[i])) {
				let j = i + 1;
				while (j < e && CM.has(decomposed[j])) j++;
				if (j - i > M) {
					throw new Error(`too many combining marks: "${str_from_cps(decomposed.slice(i-1, j))}" (${j-i}/${M})`);
				}
				i = j;
			}
		}
	}
	*/
}

// given a list of codepoints
// returns a list of lists, where emoji are a fully-qualified (as Array subclass)
// eg. explode_cp("abc💩d") => [[61, 62, 63], Emoji[1F4A9, FE0F], [64]]
// 20230818: rename for 'process' name collision h/t Javarome
// https://github.com/adraffy/ens-normalize.js/issues/23
function tokens_from_str(input, nf, ef) {
	let ret = [];
	let chars = [];
	input = input.slice().reverse(); // flip so we can pop
	while (input.length) {
		let emoji = consume_emoji_reversed(input);
		if (emoji) {
			if (chars.length) {
				ret.push(nf(chars));
				chars = [];
			}
			ret.push(ef(emoji));
		} else {
			let cp = input.pop();
			if (VALID.has(cp)) {
				chars.push(cp);
			} else {
				let cps = MAPPED.get(cp);
				if (cps) {
					chars.push(...cps); // less than 10 elements
				} else if (!IGNORED.has(cp)) {
					// 20230912: unicode 15.1 changed the order of processing such that
					// disallowed parts are only rejected after NFC
					// https://unicode.org/reports/tr46/#Validity_Criteria
					// this doesn't impact normalization as of today
					// technically, this error can be removed as the group logic will apply similar logic
					// however the error type might be less clear
					throw error_disallowed(cp);
				}
			}
		}
	}
	if (chars.length) {
		ret.push(nf(chars));
	}
	return ret;
}

function filter_fe0f(cps) {
	return cps.filter(cp => cp != FE0F);
}

// given array of codepoints
// returns the longest valid emoji sequence (or undefined if no match)
// *MUTATES* the supplied array
// disallows interleaved ignored characters
// fills (optional) eaten array with matched codepoints
function consume_emoji_reversed(cps, eaten) {
	let node = EMOJI_ROOT;
	let emoji;
	let pos = cps.length;
	while (pos) {
		node = node.get(cps[--pos]);
		if (!node) break;
		let {V} = node;
		if (V) { // this is a valid emoji (so far)
			emoji = V;
			if (eaten) eaten.push(...cps.slice(pos).reverse()); // (optional) copy input, used for ens_tokenize()
			cps.length = pos; // truncate
		}
	}
	return emoji;
}

// ************************************************************
// tokenizer 

const TY_VALID = 'valid';
const TY_MAPPED = 'mapped';
const TY_IGNORED = 'ignored';
const TY_DISALLOWED = 'disallowed';
const TY_EMOJI = 'emoji';
const TY_NFC = 'nfc';
const TY_STOP = 'stop';

function ens_tokenize(name, {
	nf = true, // collapse unnormalized runs into a single token
} = {}) {
	init();
	let input = explode_cp(name).reverse();
	let eaten = [];
	let tokens = [];
	while (input.length) {
		let emoji = consume_emoji_reversed(input, eaten);
		if (emoji) {
			tokens.push({
				type: TY_EMOJI,
				emoji: emoji.slice(), // copy emoji
				input: eaten,
				cps: filter_fe0f(emoji)
			});
			eaten = []; // reset buffer
		} else {
			let cp = input.pop();
			if (cp == STOP) {
				tokens.push({type: TY_STOP, cp});
			} else if (VALID.has(cp)) {
				tokens.push({type: TY_VALID, cps: [cp]});
			} else if (IGNORED.has(cp)) {
				tokens.push({type: TY_IGNORED, cp});
			} else {
				let cps = MAPPED.get(cp);
				if (cps) {
					tokens.push({type: TY_MAPPED, cp, cps: cps.slice()});
				} else {
					tokens.push({type: TY_DISALLOWED, cp});
				}
			}
		}
	}
	if (nf) {
		for (let i = 0, start = -1; i < tokens.length; i++) {
			let token = tokens[i];
			if (is_valid_or_mapped(token.type)) {
				if (requires_check(token.cps)) { // normalization might be needed
					let end = i + 1;
					for (let pos = end; pos < tokens.length; pos++) { // find adjacent text
						let {type, cps} = tokens[pos];
						if (is_valid_or_mapped(type)) {
							if (!requires_check(cps)) break;
							end = pos + 1;
						} else if (type !== TY_IGNORED) { // || type !== TY_DISALLOWED) { 
							break;
						}
					}
					if (start < 0) start = i;
					let slice = tokens.slice(start, end);
					let cps0 = slice.flatMap(x => is_valid_or_mapped(x.type) ? x.cps : []); // strip junk tokens
					let cps = nfc(cps0);
					if (compare_arrays(cps, cps0)) { // bundle into an nfc token
						tokens.splice(start, end - start, {
							type: TY_NFC, 
							input: cps0, // there are 3 states: tokens0 ==(process)=> input ==(nfc)=> tokens/cps
							cps, 
							tokens0: collapse_valid_tokens(slice),
							tokens: ens_tokenize(str_from_cps(cps), {nf: false})
						});
						i = start;
					} else { 
						i = end - 1; // skip to end of slice
					}
					start = -1; // reset
				} else {
					start = i; // remember last
				}
			} else if (token.type !== TY_IGNORED) { // 20221024: is this correct?
				start = -1; // reset
			}
		}
	}
	return collapse_valid_tokens(tokens);
}

function is_valid_or_mapped(type) {
	return type == TY_VALID || type == TY_MAPPED;
}

function requires_check(cps) {
	return cps.some(cp => NFC_CHECK.has(cp));
}

function collapse_valid_tokens(tokens) {
	for (let i = 0; i < tokens.length; i++) {
		if (tokens[i].type == TY_VALID) {
			let j = i + 1;
			while (j < tokens.length && tokens[j].type == TY_VALID) j++;
			tokens.splice(i, j - i, {type: TY_VALID, cps: tokens.slice(i, j).flatMap(x => x.cps)});
		}
	}
	return tokens;
}




/***/ }),

/***/ "./node_modules/@ethereumjs/rlp/dist/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@ethereumjs/rlp/dist/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RLP = exports.utils = exports.decode = exports.encode = void 0;
/**
 * RLP Encoding based on https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/
 * This function takes in data, converts it to Uint8Array if not,
 * and adds a length for recursion.
 * @param input Will be converted to Uint8Array
 * @returns Uint8Array of encoded data
 **/
function encode(input) {
    if (Array.isArray(input)) {
        const output = [];
        let outputLength = 0;
        for (let i = 0; i < input.length; i++) {
            const encoded = encode(input[i]);
            output.push(encoded);
            outputLength += encoded.length;
        }
        return concatBytes(encodeLength(outputLength, 192), ...output);
    }
    const inputBuf = toBytes(input);
    if (inputBuf.length === 1 && inputBuf[0] < 128) {
        return inputBuf;
    }
    return concatBytes(encodeLength(inputBuf.length, 128), inputBuf);
}
exports.encode = encode;
/**
 * Slices a Uint8Array, throws if the slice goes out-of-bounds of the Uint8Array.
 * E.g. `safeSlice(hexToBytes('aa'), 1, 2)` will throw.
 * @param input
 * @param start
 * @param end
 */
function safeSlice(input, start, end) {
    if (end > input.length) {
        throw new Error('invalid RLP (safeSlice): end slice of Uint8Array out-of-bounds');
    }
    return input.slice(start, end);
}
/**
 * Parse integers. Check if there is no leading zeros
 * @param v The value to parse
 */
function decodeLength(v) {
    if (v[0] === 0) {
        throw new Error('invalid RLP: extra zeros');
    }
    return parseHexByte(bytesToHex(v));
}
function encodeLength(len, offset) {
    if (len < 56) {
        return Uint8Array.from([len + offset]);
    }
    const hexLength = numberToHex(len);
    const lLength = hexLength.length / 2;
    const firstByte = numberToHex(offset + 55 + lLength);
    return Uint8Array.from(hexToBytes(firstByte + hexLength));
}
function decode(input, stream = false) {
    if (typeof input === 'undefined' || input === null || input.length === 0) {
        return Uint8Array.from([]);
    }
    const inputBytes = toBytes(input);
    const decoded = _decode(inputBytes);
    if (stream) {
        return decoded;
    }
    if (decoded.remainder.length !== 0) {
        throw new Error('invalid RLP: remainder must be zero');
    }
    return decoded.data;
}
exports.decode = decode;
/** Decode an input with RLP */
function _decode(input) {
    let length, llength, data, innerRemainder, d;
    const decoded = [];
    const firstByte = input[0];
    if (firstByte <= 0x7f) {
        // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.
        return {
            data: input.slice(0, 1),
            remainder: input.slice(1),
        };
    }
    else if (firstByte <= 0xb7) {
        // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string
        // The range of the first byte is [0x80, 0xb7]
        length = firstByte - 0x7f;
        // set 0x80 null to 0
        if (firstByte === 0x80) {
            data = Uint8Array.from([]);
        }
        else {
            data = safeSlice(input, 1, length);
        }
        if (length === 2 && data[0] < 0x80) {
            throw new Error('invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed');
        }
        return {
            data,
            remainder: input.slice(length),
        };
    }
    else if (firstByte <= 0xbf) {
        // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),
        // followed by the length, followed by the string
        llength = firstByte - 0xb6;
        if (input.length - 1 < llength) {
            throw new Error('invalid RLP: not enough bytes for string length');
        }
        length = decodeLength(safeSlice(input, 1, llength));
        if (length <= 55) {
            throw new Error('invalid RLP: expected string length to be greater than 55');
        }
        data = safeSlice(input, llength, length + llength);
        return {
            data,
            remainder: input.slice(length + llength),
        };
    }
    else if (firstByte <= 0xf7) {
        // a list between 0-55 bytes long
        length = firstByte - 0xbf;
        innerRemainder = safeSlice(input, 1, length);
        while (innerRemainder.length) {
            d = _decode(innerRemainder);
            decoded.push(d.data);
            innerRemainder = d.remainder;
        }
        return {
            data: decoded,
            remainder: input.slice(length),
        };
    }
    else {
        // a list over 55 bytes long
        llength = firstByte - 0xf6;
        length = decodeLength(safeSlice(input, 1, llength));
        if (length < 56) {
            throw new Error('invalid RLP: encoded list too short');
        }
        const totalLength = llength + length;
        if (totalLength > input.length) {
            throw new Error('invalid RLP: total length is larger than the data');
        }
        innerRemainder = safeSlice(input, llength, totalLength);
        while (innerRemainder.length) {
            d = _decode(innerRemainder);
            decoded.push(d.data);
            innerRemainder = d.remainder;
        }
        return {
            data: decoded,
            remainder: input.slice(totalLength),
        };
    }
}
const cachedHexes = Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'));
function bytesToHex(uint8a) {
    // Pre-caching chars with `cachedHexes` speeds this up 6x
    let hex = '';
    for (let i = 0; i < uint8a.length; i++) {
        hex += cachedHexes[uint8a[i]];
    }
    return hex;
}
function parseHexByte(hexByte) {
    const byte = Number.parseInt(hexByte, 16);
    if (Number.isNaN(byte))
        throw new Error('Invalid byte sequence');
    return byte;
}
// Caching slows it down 2-3x
function hexToBytes(hex) {
    if (typeof hex !== 'string') {
        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);
    }
    if (hex.length % 2)
        throw new Error('hexToBytes: received invalid unpadded hex');
    const array = new Uint8Array(hex.length / 2);
    for (let i = 0; i < array.length; i++) {
        const j = i * 2;
        array[i] = parseHexByte(hex.slice(j, j + 2));
    }
    return array;
}
/** Concatenates two Uint8Arrays into one. */
function concatBytes(...arrays) {
    if (arrays.length === 1)
        return arrays[0];
    const length = arrays.reduce((a, arr) => a + arr.length, 0);
    const result = new Uint8Array(length);
    for (let i = 0, pad = 0; i < arrays.length; i++) {
        const arr = arrays[i];
        result.set(arr, pad);
        pad += arr.length;
    }
    return result;
}
function utf8ToBytes(utf) {
    return new TextEncoder().encode(utf);
}
/** Transform an integer into its hexadecimal value */
function numberToHex(integer) {
    if (integer < 0) {
        throw new Error('Invalid integer as argument, must be unsigned!');
    }
    const hex = integer.toString(16);
    return hex.length % 2 ? `0${hex}` : hex;
}
/** Pad a string to be even */
function padToEven(a) {
    return a.length % 2 ? `0${a}` : a;
}
/** Check if a string is prefixed by 0x */
function isHexPrefixed(str) {
    return str.length >= 2 && str[0] === '0' && str[1] === 'x';
}
/** Removes 0x from a given String */
function stripHexPrefix(str) {
    if (typeof str !== 'string') {
        return str;
    }
    return isHexPrefixed(str) ? str.slice(2) : str;
}
/** Transform anything into a Uint8Array */
function toBytes(v) {
    if (v instanceof Uint8Array) {
        return v;
    }
    if (typeof v === 'string') {
        if (isHexPrefixed(v)) {
            return hexToBytes(padToEven(stripHexPrefix(v)));
        }
        return utf8ToBytes(v);
    }
    if (typeof v === 'number' || typeof v === 'bigint') {
        if (!v) {
            return Uint8Array.from([]);
        }
        return hexToBytes(numberToHex(v));
    }
    if (v === null || v === undefined) {
        return Uint8Array.from([]);
    }
    throw new Error('toBytes: received unsupported type ' + typeof v);
}
exports.utils = {
    bytesToHex,
    concatBytes,
    hexToBytes,
    utf8ToBytes,
};
exports.RLP = { encode, decode };
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@msgpack/msgpack/dist.esm/CachedKeyDecoder.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@msgpack/msgpack/dist.esm/CachedKeyDecoder.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CachedKeyDecoder: () => (/* binding */ CachedKeyDecoder)
/* harmony export */ });
/* harmony import */ var _utils_utf8_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/utf8.mjs */ "./node_modules/@msgpack/msgpack/dist.esm/utils/utf8.mjs");

const DEFAULT_MAX_KEY_LENGTH = 16;
const DEFAULT_MAX_LENGTH_PER_KEY = 16;
class CachedKeyDecoder {
    constructor(maxKeyLength = DEFAULT_MAX_KEY_LENGTH, maxLengthPerKey = DEFAULT_MAX_LENGTH_PER_KEY) {
        this.hit = 0;
        this.miss = 0;
        this.maxKeyLength = maxKeyLength;
        this.maxLengthPerKey = maxLengthPerKey;
        // avoid `new Array(N)`, which makes a sparse array,
        // because a sparse array is typically slower than a non-sparse array.
        this.caches = [];
        for (let i = 0; i < this.maxKeyLength; i++) {
            this.caches.push([]);
        }
    }
    canBeCached(byteLength) {
        return byteLength > 0 && byteLength <= this.maxKeyLength;
    }
    find(bytes, inputOffset, byteLength) {
        const records = this.caches[byteLength - 1];
        FIND_CHUNK: for (const record of records) {
            const recordBytes = record.bytes;
            for (let j = 0; j < byteLength; j++) {
                if (recordBytes[j] !== bytes[inputOffset + j]) {
                    continue FIND_CHUNK;
                }
            }
            return record.str;
        }
        return null;
    }
    store(bytes, value) {
        const records = this.caches[bytes.length - 1];
        const record = { bytes, str: value };
        if (records.length >= this.maxLengthPerKey) {
            // `records` are full!
            // Set `record` to an arbitrary position.
            records[(Math.random() * records.length) | 0] = record;
        }
        else {
            records.push(record);
        }
    }
    decode(bytes, inputOffset, byteLength) {
        const cachedValue = this.find(bytes, inputOffset, byteLength);
        if (cachedValue != null) {
            this.hit++;
            return cachedValue;
        }
        this.miss++;
        const str = (0,_utils_utf8_mjs__WEBPACK_IMPORTED_MODULE_0__.utf8DecodeJs)(bytes, inputOffset, byteLength);
        // Ensure to copy a slice of bytes because the bytes may be a NodeJS Buffer and Buffer#slice() returns a reference to its internal ArrayBuffer.
        const slicedCopyOfBytes = Uint8Array.prototype.slice.call(bytes, inputOffset, inputOffset + byteLength);
        this.store(slicedCopyOfBytes, str);
        return str;
    }
}
//# sourceMappingURL=CachedKeyDecoder.mjs.map

/***/ }),

/***/ "./node_modules/@msgpack/msgpack/dist.esm/DecodeError.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@msgpack/msgpack/dist.esm/DecodeError.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DecodeError: () => (/* binding */ DecodeError)
/* harmony export */ });
class DecodeError extends Error {
    constructor(message) {
        super(message);
        // fix the prototype chain in a cross-platform way
        const proto = Object.create(DecodeError.prototype);
        Object.setPrototypeOf(this, proto);
        Object.defineProperty(this, "name", {
            configurable: true,
            enumerable: false,
            value: DecodeError.name,
        });
    }
}
//# sourceMappingURL=DecodeError.mjs.map

/***/ }),

/***/ "./node_modules/@msgpack/msgpack/dist.esm/Decoder.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@msgpack/msgpack/dist.esm/Decoder.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Decoder: () => (/* binding */ Decoder)
/* harmony export */ });
/* harmony import */ var _utils_prettyByte_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/prettyByte.mjs */ "./node_modules/@msgpack/msgpack/dist.esm/utils/prettyByte.mjs");
/* harmony import */ var _ExtensionCodec_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ExtensionCodec.mjs */ "./node_modules/@msgpack/msgpack/dist.esm/ExtensionCodec.mjs");
/* harmony import */ var _utils_int_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/int.mjs */ "./node_modules/@msgpack/msgpack/dist.esm/utils/int.mjs");
/* harmony import */ var _utils_utf8_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/utf8.mjs */ "./node_modules/@msgpack/msgpack/dist.esm/utils/utf8.mjs");
/* harmony import */ var _utils_typedArrays_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/typedArrays.mjs */ "./node_modules/@msgpack/msgpack/dist.esm/utils/typedArrays.mjs");
/* harmony import */ var _CachedKeyDecoder_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./CachedKeyDecoder.mjs */ "./node_modules/@msgpack/msgpack/dist.esm/CachedKeyDecoder.mjs");
/* harmony import */ var _DecodeError_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./DecodeError.mjs */ "./node_modules/@msgpack/msgpack/dist.esm/DecodeError.mjs");







const STATE_ARRAY = "array";
const STATE_MAP_KEY = "map_key";
const STATE_MAP_VALUE = "map_value";
const mapKeyConverter = (key) => {
    if (typeof key === "string" || typeof key === "number") {
        return key;
    }
    throw new _DecodeError_mjs__WEBPACK_IMPORTED_MODULE_6__.DecodeError("The type of key must be string or number but " + typeof key);
};
class StackPool {
    constructor() {
        this.stack = [];
        this.stackHeadPosition = -1;
    }
    get length() {
        return this.stackHeadPosition + 1;
    }
    top() {
        return this.stack[this.stackHeadPosition];
    }
    pushArrayState(size) {
        const state = this.getUninitializedStateFromPool();
        state.type = STATE_ARRAY;
        state.position = 0;
        state.size = size;
        state.array = new Array(size);
    }
    pushMapState(size) {
        const state = this.getUninitializedStateFromPool();
        state.type = STATE_MAP_KEY;
        state.readCount = 0;
        state.size = size;
        state.map = {};
    }
    getUninitializedStateFromPool() {
        this.stackHeadPosition++;
        if (this.stackHeadPosition === this.stack.length) {
            const partialState = {
                type: undefined,
                size: 0,
                array: undefined,
                position: 0,
                readCount: 0,
                map: undefined,
                key: null,
            };
            this.stack.push(partialState);
        }
        return this.stack[this.stackHeadPosition];
    }
    release(state) {
        const topStackState = this.stack[this.stackHeadPosition];
        if (topStackState !== state) {
            throw new Error("Invalid stack state. Released state is not on top of the stack.");
        }
        if (state.type === STATE_ARRAY) {
            const partialState = state;
            partialState.size = 0;
            partialState.array = undefined;
            partialState.position = 0;
            partialState.type = undefined;
        }
        if (state.type === STATE_MAP_KEY || state.type === STATE_MAP_VALUE) {
            const partialState = state;
            partialState.size = 0;
            partialState.map = undefined;
            partialState.readCount = 0;
            partialState.type = undefined;
        }
        this.stackHeadPosition--;
    }
    reset() {
        this.stack.length = 0;
        this.stackHeadPosition = -1;
    }
}
const HEAD_BYTE_REQUIRED = -1;
const EMPTY_VIEW = new DataView(new ArrayBuffer(0));
const EMPTY_BYTES = new Uint8Array(EMPTY_VIEW.buffer);
try {
    // IE11: The spec says it should throw RangeError,
    // IE11: but in IE11 it throws TypeError.
    EMPTY_VIEW.getInt8(0);
}
catch (e) {
    if (!(e instanceof RangeError)) {
        throw new Error("This module is not supported in the current JavaScript engine because DataView does not throw RangeError on out-of-bounds access");
    }
}
const MORE_DATA = new RangeError("Insufficient data");
const sharedCachedKeyDecoder = new _CachedKeyDecoder_mjs__WEBPACK_IMPORTED_MODULE_5__.CachedKeyDecoder();
class Decoder {
    constructor(options) {
        this.totalPos = 0;
        this.pos = 0;
        this.view = EMPTY_VIEW;
        this.bytes = EMPTY_BYTES;
        this.headByte = HEAD_BYTE_REQUIRED;
        this.stack = new StackPool();
        this.entered = false;
        this.extensionCodec = options?.extensionCodec ?? _ExtensionCodec_mjs__WEBPACK_IMPORTED_MODULE_1__.ExtensionCodec.defaultCodec;
        this.context = options?.context; // needs a type assertion because EncoderOptions has no context property when ContextType is undefined
        this.useBigInt64 = options?.useBigInt64 ?? false;
        this.rawStrings = options?.rawStrings ?? false;
        this.maxStrLength = options?.maxStrLength ?? _utils_int_mjs__WEBPACK_IMPORTED_MODULE_2__.UINT32_MAX;
        this.maxBinLength = options?.maxBinLength ?? _utils_int_mjs__WEBPACK_IMPORTED_MODULE_2__.UINT32_MAX;
        this.maxArrayLength = options?.maxArrayLength ?? _utils_int_mjs__WEBPACK_IMPORTED_MODULE_2__.UINT32_MAX;
        this.maxMapLength = options?.maxMapLength ?? _utils_int_mjs__WEBPACK_IMPORTED_MODULE_2__.UINT32_MAX;
        this.maxExtLength = options?.maxExtLength ?? _utils_int_mjs__WEBPACK_IMPORTED_MODULE_2__.UINT32_MAX;
        this.keyDecoder = options?.keyDecoder !== undefined ? options.keyDecoder : sharedCachedKeyDecoder;
        this.mapKeyConverter = options?.mapKeyConverter ?? mapKeyConverter;
    }
    clone() {
        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
        return new Decoder({
            extensionCodec: this.extensionCodec,
            context: this.context,
            useBigInt64: this.useBigInt64,
            rawStrings: this.rawStrings,
            maxStrLength: this.maxStrLength,
            maxBinLength: this.maxBinLength,
            maxArrayLength: this.maxArrayLength,
            maxMapLength: this.maxMapLength,
            maxExtLength: this.maxExtLength,
            keyDecoder: this.keyDecoder,
        });
    }
    reinitializeState() {
        this.totalPos = 0;
        this.headByte = HEAD_BYTE_REQUIRED;
        this.stack.reset();
        // view, bytes, and pos will be re-initialized in setBuffer()
    }
    setBuffer(buffer) {
        const bytes = (0,_utils_typedArrays_mjs__WEBPACK_IMPORTED_MODULE_4__.ensureUint8Array)(buffer);
        this.bytes = bytes;
        this.view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);
        this.pos = 0;
    }
    appendBuffer(buffer) {
        if (this.headByte === HEAD_BYTE_REQUIRED && !this.hasRemaining(1)) {
            this.setBuffer(buffer);
        }
        else {
            const remainingData = this.bytes.subarray(this.pos);
            const newData = (0,_utils_typedArrays_mjs__WEBPACK_IMPORTED_MODULE_4__.ensureUint8Array)(buffer);
            // concat remainingData + newData
            const newBuffer = new Uint8Array(remainingData.length + newData.length);
            newBuffer.set(remainingData);
            newBuffer.set(newData, remainingData.length);
            this.setBuffer(newBuffer);
        }
    }
    hasRemaining(size) {
        return this.view.byteLength - this.pos >= size;
    }
    createExtraByteError(posToShow) {
        const { view, pos } = this;
        return new RangeError(`Extra ${view.byteLength - pos} of ${view.byteLength} byte(s) found at buffer[${posToShow}]`);
    }
    /**
     * @throws {@link DecodeError}
     * @throws {@link RangeError}
     */
    decode(buffer) {
        if (this.entered) {
            const instance = this.clone();
            return instance.decode(buffer);
        }
        try {
            this.entered = true;
            this.reinitializeState();
            this.setBuffer(buffer);
            const object = this.doDecodeSync();
            if (this.hasRemaining(1)) {
                throw this.createExtraByteError(this.pos);
            }
            return object;
        }
        finally {
            this.entered = false;
        }
    }
    *decodeMulti(buffer) {
        if (this.entered) {
            const instance = this.clone();
            yield* instance.decodeMulti(buffer);
            return;
        }
        try {
            this.entered = true;
            this.reinitializeState();
            this.setBuffer(buffer);
            while (this.hasRemaining(1)) {
                yield this.doDecodeSync();
            }
        }
        finally {
            this.entered = false;
        }
    }
    async decodeAsync(stream) {
        if (this.entered) {
            const instance = this.clone();
            return instance.decodeAsync(stream);
        }
        try {
            this.entered = true;
            let decoded = false;
            let object;
            for await (const buffer of stream) {
                if (decoded) {
                    this.entered = false;
                    throw this.createExtraByteError(this.totalPos);
                }
                this.appendBuffer(buffer);
                try {
                    object = this.doDecodeSync();
                    decoded = true;
                }
                catch (e) {
                    if (!(e instanceof RangeError)) {
                        throw e; // rethrow
                    }
                    // fallthrough
                }
                this.totalPos += this.pos;
            }
            if (decoded) {
                if (this.hasRemaining(1)) {
                    throw this.createExtraByteError(this.totalPos);
                }
                return object;
            }
            const { headByte, pos, totalPos } = this;
            throw new RangeError(`Insufficient data in parsing ${(0,_utils_prettyByte_mjs__WEBPACK_IMPORTED_MODULE_0__.prettyByte)(headByte)} at ${totalPos} (${pos} in the current buffer)`);
        }
        finally {
            this.entered = false;
        }
    }
    decodeArrayStream(stream) {
        return this.decodeMultiAsync(stream, true);
    }
    decodeStream(stream) {
        return this.decodeMultiAsync(stream, false);
    }
    async *decodeMultiAsync(stream, isArray) {
        if (this.entered) {
            const instance = this.clone();
            yield* instance.decodeMultiAsync(stream, isArray);
            return;
        }
        try {
            this.entered = true;
            let isArrayHeaderRequired = isArray;
            let arrayItemsLeft = -1;
            for await (const buffer of stream) {
                if (isArray && arrayItemsLeft === 0) {
                    throw this.createExtraByteError(this.totalPos);
                }
                this.appendBuffer(buffer);
                if (isArrayHeaderRequired) {
                    arrayItemsLeft = this.readArraySize();
                    isArrayHeaderRequired = false;
                    this.complete();
                }
                try {
                    while (true) {
                        yield this.doDecodeSync();
                        if (--arrayItemsLeft === 0) {
                            break;
                        }
                    }
                }
                catch (e) {
                    if (!(e instanceof RangeError)) {
                        throw e; // rethrow
                    }
                    // fallthrough
                }
                this.totalPos += this.pos;
            }
        }
        finally {
            this.entered = false;
        }
    }
    doDecodeSync() {
        DECODE: while (true) {
            const headByte = this.readHeadByte();
            let object;
            if (headByte >= 0xe0) {
                // negative fixint (111x xxxx) 0xe0 - 0xff
                object = headByte - 0x100;
            }
            else if (headByte < 0xc0) {
                if (headByte < 0x80) {
                    // positive fixint (0xxx xxxx) 0x00 - 0x7f
                    object = headByte;
                }
                else if (headByte < 0x90) {
                    // fixmap (1000 xxxx) 0x80 - 0x8f
                    const size = headByte - 0x80;
                    if (size !== 0) {
                        this.pushMapState(size);
                        this.complete();
                        continue DECODE;
                    }
                    else {
                        object = {};
                    }
                }
                else if (headByte < 0xa0) {
                    // fixarray (1001 xxxx) 0x90 - 0x9f
                    const size = headByte - 0x90;
                    if (size !== 0) {
                        this.pushArrayState(size);
                        this.complete();
                        continue DECODE;
                    }
                    else {
                        object = [];
                    }
                }
                else {
                    // fixstr (101x xxxx) 0xa0 - 0xbf
                    const byteLength = headByte - 0xa0;
                    object = this.decodeString(byteLength, 0);
                }
            }
            else if (headByte === 0xc0) {
                // nil
                object = null;
            }
            else if (headByte === 0xc2) {
                // false
                object = false;
            }
            else if (headByte === 0xc3) {
                // true
                object = true;
            }
            else if (headByte === 0xca) {
                // float 32
                object = this.readF32();
            }
            else if (headByte === 0xcb) {
                // float 64
                object = this.readF64();
            }
            else if (headByte === 0xcc) {
                // uint 8
                object = this.readU8();
            }
            else if (headByte === 0xcd) {
                // uint 16
                object = this.readU16();
            }
            else if (headByte === 0xce) {
                // uint 32
                object = this.readU32();
            }
            else if (headByte === 0xcf) {
                // uint 64
                if (this.useBigInt64) {
                    object = this.readU64AsBigInt();
                }
                else {
                    object = this.readU64();
                }
            }
            else if (headByte === 0xd0) {
                // int 8
                object = this.readI8();
            }
            else if (headByte === 0xd1) {
                // int 16
                object = this.readI16();
            }
            else if (headByte === 0xd2) {
                // int 32
                object = this.readI32();
            }
            else if (headByte === 0xd3) {
                // int 64
                if (this.useBigInt64) {
                    object = this.readI64AsBigInt();
                }
                else {
                    object = this.readI64();
                }
            }
            else if (headByte === 0xd9) {
                // str 8
                const byteLength = this.lookU8();
                object = this.decodeString(byteLength, 1);
            }
            else if (headByte === 0xda) {
                // str 16
                const byteLength = this.lookU16();
                object = this.decodeString(byteLength, 2);
            }
            else if (headByte === 0xdb) {
                // str 32
                const byteLength = this.lookU32();
                object = this.decodeString(byteLength, 4);
            }
            else if (headByte === 0xdc) {
                // array 16
                const size = this.readU16();
                if (size !== 0) {
                    this.pushArrayState(size);
                    this.complete();
                    continue DECODE;
                }
                else {
                    object = [];
                }
            }
            else if (headByte === 0xdd) {
                // array 32
                const size = this.readU32();
                if (size !== 0) {
                    this.pushArrayState(size);
                    this.complete();
                    continue DECODE;
                }
                else {
                    object = [];
                }
            }
            else if (headByte === 0xde) {
                // map 16
                const size = this.readU16();
                if (size !== 0) {
                    this.pushMapState(size);
                    this.complete();
                    continue DECODE;
                }
                else {
                    object = {};
                }
            }
            else if (headByte === 0xdf) {
                // map 32
                const size = this.readU32();
                if (size !== 0) {
                    this.pushMapState(size);
                    this.complete();
                    continue DECODE;
                }
                else {
                    object = {};
                }
            }
            else if (headByte === 0xc4) {
                // bin 8
                const size = this.lookU8();
                object = this.decodeBinary(size, 1);
            }
            else if (headByte === 0xc5) {
                // bin 16
                const size = this.lookU16();
                object = this.decodeBinary(size, 2);
            }
            else if (headByte === 0xc6) {
                // bin 32
                const size = this.lookU32();
                object = this.decodeBinary(size, 4);
            }
            else if (headByte === 0xd4) {
                // fixext 1
                object = this.decodeExtension(1, 0);
            }
            else if (headByte === 0xd5) {
                // fixext 2
                object = this.decodeExtension(2, 0);
            }
            else if (headByte === 0xd6) {
                // fixext 4
                object = this.decodeExtension(4, 0);
            }
            else if (headByte === 0xd7) {
                // fixext 8
                object = this.decodeExtension(8, 0);
            }
            else if (headByte === 0xd8) {
                // fixext 16
                object = this.decodeExtension(16, 0);
            }
            else if (headByte === 0xc7) {
                // ext 8
                const size = this.lookU8();
                object = this.decodeExtension(size, 1);
            }
            else if (headByte === 0xc8) {
                // ext 16
                const size = this.lookU16();
                object = this.decodeExtension(size, 2);
            }
            else if (headByte === 0xc9) {
                // ext 32
                const size = this.lookU32();
                object = this.decodeExtension(size, 4);
            }
            else {
                throw new _DecodeError_mjs__WEBPACK_IMPORTED_MODULE_6__.DecodeError(`Unrecognized type byte: ${(0,_utils_prettyByte_mjs__WEBPACK_IMPORTED_MODULE_0__.prettyByte)(headByte)}`);
            }
            this.complete();
            const stack = this.stack;
            while (stack.length > 0) {
                // arrays and maps
                const state = stack.top();
                if (state.type === STATE_ARRAY) {
                    state.array[state.position] = object;
                    state.position++;
                    if (state.position === state.size) {
                        object = state.array;
                        stack.release(state);
                    }
                    else {
                        continue DECODE;
                    }
                }
                else if (state.type === STATE_MAP_KEY) {
                    if (object === "__proto__") {
                        throw new _DecodeError_mjs__WEBPACK_IMPORTED_MODULE_6__.DecodeError("The key __proto__ is not allowed");
                    }
                    state.key = this.mapKeyConverter(object);
                    state.type = STATE_MAP_VALUE;
                    continue DECODE;
                }
                else {
                    // it must be `state.type === State.MAP_VALUE` here
                    state.map[state.key] = object;
                    state.readCount++;
                    if (state.readCount === state.size) {
                        object = state.map;
                        stack.release(state);
                    }
                    else {
                        state.key = null;
                        state.type = STATE_MAP_KEY;
                        continue DECODE;
                    }
                }
            }
            return object;
        }
    }
    readHeadByte() {
        if (this.headByte === HEAD_BYTE_REQUIRED) {
            this.headByte = this.readU8();
            // console.log("headByte", prettyByte(this.headByte));
        }
        return this.headByte;
    }
    complete() {
        this.headByte = HEAD_BYTE_REQUIRED;
    }
    readArraySize() {
        const headByte = this.readHeadByte();
        switch (headByte) {
            case 0xdc:
                return this.readU16();
            case 0xdd:
                return this.readU32();
            default: {
                if (headByte < 0xa0) {
                    return headByte - 0x90;
                }
                else {
                    throw new _DecodeError_mjs__WEBPACK_IMPORTED_MODULE_6__.DecodeError(`Unrecognized array type byte: ${(0,_utils_prettyByte_mjs__WEBPACK_IMPORTED_MODULE_0__.prettyByte)(headByte)}`);
                }
            }
        }
    }
    pushMapState(size) {
        if (size > this.maxMapLength) {
            throw new _DecodeError_mjs__WEBPACK_IMPORTED_MODULE_6__.DecodeError(`Max length exceeded: map length (${size}) > maxMapLengthLength (${this.maxMapLength})`);
        }
        this.stack.pushMapState(size);
    }
    pushArrayState(size) {
        if (size > this.maxArrayLength) {
            throw new _DecodeError_mjs__WEBPACK_IMPORTED_MODULE_6__.DecodeError(`Max length exceeded: array length (${size}) > maxArrayLength (${this.maxArrayLength})`);
        }
        this.stack.pushArrayState(size);
    }
    decodeString(byteLength, headerOffset) {
        if (!this.rawStrings || this.stateIsMapKey()) {
            return this.decodeUtf8String(byteLength, headerOffset);
        }
        return this.decodeBinary(byteLength, headerOffset);
    }
    /**
     * @throws {@link RangeError}
     */
    decodeUtf8String(byteLength, headerOffset) {
        if (byteLength > this.maxStrLength) {
            throw new _DecodeError_mjs__WEBPACK_IMPORTED_MODULE_6__.DecodeError(`Max length exceeded: UTF-8 byte length (${byteLength}) > maxStrLength (${this.maxStrLength})`);
        }
        if (this.bytes.byteLength < this.pos + headerOffset + byteLength) {
            throw MORE_DATA;
        }
        const offset = this.pos + headerOffset;
        let object;
        if (this.stateIsMapKey() && this.keyDecoder?.canBeCached(byteLength)) {
            object = this.keyDecoder.decode(this.bytes, offset, byteLength);
        }
        else {
            object = (0,_utils_utf8_mjs__WEBPACK_IMPORTED_MODULE_3__.utf8Decode)(this.bytes, offset, byteLength);
        }
        this.pos += headerOffset + byteLength;
        return object;
    }
    stateIsMapKey() {
        if (this.stack.length > 0) {
            const state = this.stack.top();
            return state.type === STATE_MAP_KEY;
        }
        return false;
    }
    /**
     * @throws {@link RangeError}
     */
    decodeBinary(byteLength, headOffset) {
        if (byteLength > this.maxBinLength) {
            throw new _DecodeError_mjs__WEBPACK_IMPORTED_MODULE_6__.DecodeError(`Max length exceeded: bin length (${byteLength}) > maxBinLength (${this.maxBinLength})`);
        }
        if (!this.hasRemaining(byteLength + headOffset)) {
            throw MORE_DATA;
        }
        const offset = this.pos + headOffset;
        const object = this.bytes.subarray(offset, offset + byteLength);
        this.pos += headOffset + byteLength;
        return object;
    }
    decodeExtension(size, headOffset) {
        if (size > this.maxExtLength) {
            throw new _DecodeError_mjs__WEBPACK_IMPORTED_MODULE_6__.DecodeError(`Max length exceeded: ext length (${size}) > maxExtLength (${this.maxExtLength})`);
        }
        const extType = this.view.getInt8(this.pos + headOffset);
        const data = this.decodeBinary(size, headOffset + 1 /* extType */);
        return this.extensionCodec.decode(data, extType, this.context);
    }
    lookU8() {
        return this.view.getUint8(this.pos);
    }
    lookU16() {
        return this.view.getUint16(this.pos);
    }
    lookU32() {
        return this.view.getUint32(this.pos);
    }
    readU8() {
        const value = this.view.getUint8(this.pos);
        this.pos++;
        return value;
    }
    readI8() {
        const value = this.view.getInt8(this.pos);
        this.pos++;
        return value;
    }
    readU16() {
        const value = this.view.getUint16(this.pos);
        this.pos += 2;
        return value;
    }
    readI16() {
        const value = this.view.getInt16(this.pos);
        this.pos += 2;
        return value;
    }
    readU32() {
        const value = this.view.getUint32(this.pos);
        this.pos += 4;
        return value;
    }
    readI32() {
        const value = this.view.getInt32(this.pos);
        this.pos += 4;
        return value;
    }
    readU64() {
        const value = (0,_utils_int_mjs__WEBPACK_IMPORTED_MODULE_2__.getUint64)(this.view, this.pos);
        this.pos += 8;
        return value;
    }
    readI64() {
        const value = (0,_utils_int_mjs__WEBPACK_IMPORTED_MODULE_2__.getInt64)(this.view, this.pos);
        this.pos += 8;
        return value;
    }
    readU64AsBigInt() {
        const value = this.view.getBigUint64(this.pos);
        this.pos += 8;
        return value;
    }
    readI64AsBigInt() {
        const value = this.view.getBigInt64(this.pos);
        this.pos += 8;
        return value;
    }
    readF32() {
        const value = this.view.getFloat32(this.pos);
        this.pos += 4;
        return value;
    }
    readF64() {
        const value = this.view.getFloat64(this.pos);
        this.pos += 8;
        return value;
    }
}
//# sourceMappingURL=Decoder.mjs.map

/***/ }),

/***/ "./node_modules/@msgpack/msgpack/dist.esm/Encoder.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@msgpack/msgpack/dist.esm/Encoder.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DEFAULT_INITIAL_BUFFER_SIZE: () => (/* binding */ DEFAULT_INITIAL_BUFFER_SIZE),
/* harmony export */   DEFAULT_MAX_DEPTH: () => (/* binding */ DEFAULT_MAX_DEPTH),
/* harmony export */   Encoder: () => (/* binding */ Encoder)
/* harmony export */ });
/* harmony import */ var _utils_utf8_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/utf8.mjs */ "./node_modules/@msgpack/msgpack/dist.esm/utils/utf8.mjs");
/* harmony import */ var _ExtensionCodec_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ExtensionCodec.mjs */ "./node_modules/@msgpack/msgpack/dist.esm/ExtensionCodec.mjs");
/* harmony import */ var _utils_int_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/int.mjs */ "./node_modules/@msgpack/msgpack/dist.esm/utils/int.mjs");
/* harmony import */ var _utils_typedArrays_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/typedArrays.mjs */ "./node_modules/@msgpack/msgpack/dist.esm/utils/typedArrays.mjs");




const DEFAULT_MAX_DEPTH = 100;
const DEFAULT_INITIAL_BUFFER_SIZE = 2048;
class Encoder {
    constructor(options) {
        this.entered = false;
        this.extensionCodec = options?.extensionCodec ?? _ExtensionCodec_mjs__WEBPACK_IMPORTED_MODULE_1__.ExtensionCodec.defaultCodec;
        this.context = options?.context; // needs a type assertion because EncoderOptions has no context property when ContextType is undefined
        this.useBigInt64 = options?.useBigInt64 ?? false;
        this.maxDepth = options?.maxDepth ?? DEFAULT_MAX_DEPTH;
        this.initialBufferSize = options?.initialBufferSize ?? DEFAULT_INITIAL_BUFFER_SIZE;
        this.sortKeys = options?.sortKeys ?? false;
        this.forceFloat32 = options?.forceFloat32 ?? false;
        this.ignoreUndefined = options?.ignoreUndefined ?? false;
        this.forceIntegerToFloat = options?.forceIntegerToFloat ?? false;
        this.pos = 0;
        this.view = new DataView(new ArrayBuffer(this.initialBufferSize));
        this.bytes = new Uint8Array(this.view.buffer);
    }
    clone() {
        // Because of slightly special argument `context`,
        // type assertion is needed.
        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
        return new Encoder({
            extensionCodec: this.extensionCodec,
            context: this.context,
            useBigInt64: this.useBigInt64,
            maxDepth: this.maxDepth,
            initialBufferSize: this.initialBufferSize,
            sortKeys: this.sortKeys,
            forceFloat32: this.forceFloat32,
            ignoreUndefined: this.ignoreUndefined,
            forceIntegerToFloat: this.forceIntegerToFloat,
        });
    }
    reinitializeState() {
        this.pos = 0;
    }
    /**
     * This is almost equivalent to {@link Encoder#encode}, but it returns an reference of the encoder's internal buffer and thus much faster than {@link Encoder#encode}.
     *
     * @returns Encodes the object and returns a shared reference the encoder's internal buffer.
     */
    encodeSharedRef(object) {
        if (this.entered) {
            const instance = this.clone();
            return instance.encodeSharedRef(object);
        }
        try {
            this.entered = true;
            this.reinitializeState();
            this.doEncode(object, 1);
            return this.bytes.subarray(0, this.pos);
        }
        finally {
            this.entered = false;
        }
    }
    /**
     * @returns Encodes the object and returns a copy of the encoder's internal buffer.
     */
    encode(object) {
        if (this.entered) {
            const instance = this.clone();
            return instance.encode(object);
        }
        try {
            this.entered = true;
            this.reinitializeState();
            this.doEncode(object, 1);
            return this.bytes.slice(0, this.pos);
        }
        finally {
            this.entered = false;
        }
    }
    doEncode(object, depth) {
        if (depth > this.maxDepth) {
            throw new Error(`Too deep objects in depth ${depth}`);
        }
        if (object == null) {
            this.encodeNil();
        }
        else if (typeof object === "boolean") {
            this.encodeBoolean(object);
        }
        else if (typeof object === "number") {
            if (!this.forceIntegerToFloat) {
                this.encodeNumber(object);
            }
            else {
                this.encodeNumberAsFloat(object);
            }
        }
        else if (typeof object === "string") {
            this.encodeString(object);
        }
        else if (this.useBigInt64 && typeof object === "bigint") {
            this.encodeBigInt64(object);
        }
        else {
            this.encodeObject(object, depth);
        }
    }
    ensureBufferSizeToWrite(sizeToWrite) {
        const requiredSize = this.pos + sizeToWrite;
        if (this.view.byteLength < requiredSize) {
            this.resizeBuffer(requiredSize * 2);
        }
    }
    resizeBuffer(newSize) {
        const newBuffer = new ArrayBuffer(newSize);
        const newBytes = new Uint8Array(newBuffer);
        const newView = new DataView(newBuffer);
        newBytes.set(this.bytes);
        this.view = newView;
        this.bytes = newBytes;
    }
    encodeNil() {
        this.writeU8(0xc0);
    }
    encodeBoolean(object) {
        if (object === false) {
            this.writeU8(0xc2);
        }
        else {
            this.writeU8(0xc3);
        }
    }
    encodeNumber(object) {
        if (!this.forceIntegerToFloat && Number.isSafeInteger(object)) {
            if (object >= 0) {
                if (object < 0x80) {
                    // positive fixint
                    this.writeU8(object);
                }
                else if (object < 0x100) {
                    // uint 8
                    this.writeU8(0xcc);
                    this.writeU8(object);
                }
                else if (object < 0x10000) {
                    // uint 16
                    this.writeU8(0xcd);
                    this.writeU16(object);
                }
                else if (object < 0x100000000) {
                    // uint 32
                    this.writeU8(0xce);
                    this.writeU32(object);
                }
                else if (!this.useBigInt64) {
                    // uint 64
                    this.writeU8(0xcf);
                    this.writeU64(object);
                }
                else {
                    this.encodeNumberAsFloat(object);
                }
            }
            else {
                if (object >= -0x20) {
                    // negative fixint
                    this.writeU8(0xe0 | (object + 0x20));
                }
                else if (object >= -0x80) {
                    // int 8
                    this.writeU8(0xd0);
                    this.writeI8(object);
                }
                else if (object >= -0x8000) {
                    // int 16
                    this.writeU8(0xd1);
                    this.writeI16(object);
                }
                else if (object >= -0x80000000) {
                    // int 32
                    this.writeU8(0xd2);
                    this.writeI32(object);
                }
                else if (!this.useBigInt64) {
                    // int 64
                    this.writeU8(0xd3);
                    this.writeI64(object);
                }
                else {
                    this.encodeNumberAsFloat(object);
                }
            }
        }
        else {
            this.encodeNumberAsFloat(object);
        }
    }
    encodeNumberAsFloat(object) {
        if (this.forceFloat32) {
            // float 32
            this.writeU8(0xca);
            this.writeF32(object);
        }
        else {
            // float 64
            this.writeU8(0xcb);
            this.writeF64(object);
        }
    }
    encodeBigInt64(object) {
        if (object >= BigInt(0)) {
            // uint 64
            this.writeU8(0xcf);
            this.writeBigUint64(object);
        }
        else {
            // int 64
            this.writeU8(0xd3);
            this.writeBigInt64(object);
        }
    }
    writeStringHeader(byteLength) {
        if (byteLength < 32) {
            // fixstr
            this.writeU8(0xa0 + byteLength);
        }
        else if (byteLength < 0x100) {
            // str 8
            this.writeU8(0xd9);
            this.writeU8(byteLength);
        }
        else if (byteLength < 0x10000) {
            // str 16
            this.writeU8(0xda);
            this.writeU16(byteLength);
        }
        else if (byteLength < 0x100000000) {
            // str 32
            this.writeU8(0xdb);
            this.writeU32(byteLength);
        }
        else {
            throw new Error(`Too long string: ${byteLength} bytes in UTF-8`);
        }
    }
    encodeString(object) {
        const maxHeaderSize = 1 + 4;
        const byteLength = (0,_utils_utf8_mjs__WEBPACK_IMPORTED_MODULE_0__.utf8Count)(object);
        this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);
        this.writeStringHeader(byteLength);
        (0,_utils_utf8_mjs__WEBPACK_IMPORTED_MODULE_0__.utf8Encode)(object, this.bytes, this.pos);
        this.pos += byteLength;
    }
    encodeObject(object, depth) {
        // try to encode objects with custom codec first of non-primitives
        const ext = this.extensionCodec.tryToEncode(object, this.context);
        if (ext != null) {
            this.encodeExtension(ext);
        }
        else if (Array.isArray(object)) {
            this.encodeArray(object, depth);
        }
        else if (ArrayBuffer.isView(object)) {
            this.encodeBinary(object);
        }
        else if (typeof object === "object") {
            this.encodeMap(object, depth);
        }
        else {
            // symbol, function and other special object come here unless extensionCodec handles them.
            throw new Error(`Unrecognized object: ${Object.prototype.toString.apply(object)}`);
        }
    }
    encodeBinary(object) {
        const size = object.byteLength;
        if (size < 0x100) {
            // bin 8
            this.writeU8(0xc4);
            this.writeU8(size);
        }
        else if (size < 0x10000) {
            // bin 16
            this.writeU8(0xc5);
            this.writeU16(size);
        }
        else if (size < 0x100000000) {
            // bin 32
            this.writeU8(0xc6);
            this.writeU32(size);
        }
        else {
            throw new Error(`Too large binary: ${size}`);
        }
        const bytes = (0,_utils_typedArrays_mjs__WEBPACK_IMPORTED_MODULE_3__.ensureUint8Array)(object);
        this.writeU8a(bytes);
    }
    encodeArray(object, depth) {
        const size = object.length;
        if (size < 16) {
            // fixarray
            this.writeU8(0x90 + size);
        }
        else if (size < 0x10000) {
            // array 16
            this.writeU8(0xdc);
            this.writeU16(size);
        }
        else if (size < 0x100000000) {
            // array 32
            this.writeU8(0xdd);
            this.writeU32(size);
        }
        else {
            throw new Error(`Too large array: ${size}`);
        }
        for (const item of object) {
            this.doEncode(item, depth + 1);
        }
    }
    countWithoutUndefined(object, keys) {
        let count = 0;
        for (const key of keys) {
            if (object[key] !== undefined) {
                count++;
            }
        }
        return count;
    }
    encodeMap(object, depth) {
        const keys = Object.keys(object);
        if (this.sortKeys) {
            keys.sort();
        }
        const size = this.ignoreUndefined ? this.countWithoutUndefined(object, keys) : keys.length;
        if (size < 16) {
            // fixmap
            this.writeU8(0x80 + size);
        }
        else if (size < 0x10000) {
            // map 16
            this.writeU8(0xde);
            this.writeU16(size);
        }
        else if (size < 0x100000000) {
            // map 32
            this.writeU8(0xdf);
            this.writeU32(size);
        }
        else {
            throw new Error(`Too large map object: ${size}`);
        }
        for (const key of keys) {
            const value = object[key];
            if (!(this.ignoreUndefined && value === undefined)) {
                this.encodeString(key);
                this.doEncode(value, depth + 1);
            }
        }
    }
    encodeExtension(ext) {
        if (typeof ext.data === "function") {
            const data = ext.data(this.pos + 6);
            const size = data.length;
            if (size >= 0x100000000) {
                throw new Error(`Too large extension object: ${size}`);
            }
            this.writeU8(0xc9);
            this.writeU32(size);
            this.writeI8(ext.type);
            this.writeU8a(data);
            return;
        }
        const size = ext.data.length;
        if (size === 1) {
            // fixext 1
            this.writeU8(0xd4);
        }
        else if (size === 2) {
            // fixext 2
            this.writeU8(0xd5);
        }
        else if (size === 4) {
            // fixext 4
            this.writeU8(0xd6);
        }
        else if (size === 8) {
            // fixext 8
            this.writeU8(0xd7);
        }
        else if (size === 16) {
            // fixext 16
            this.writeU8(0xd8);
        }
        else if (size < 0x100) {
            // ext 8
            this.writeU8(0xc7);
            this.writeU8(size);
        }
        else if (size < 0x10000) {
            // ext 16
            this.writeU8(0xc8);
            this.writeU16(size);
        }
        else if (size < 0x100000000) {
            // ext 32
            this.writeU8(0xc9);
            this.writeU32(size);
        }
        else {
            throw new Error(`Too large extension object: ${size}`);
        }
        this.writeI8(ext.type);
        this.writeU8a(ext.data);
    }
    writeU8(value) {
        this.ensureBufferSizeToWrite(1);
        this.view.setUint8(this.pos, value);
        this.pos++;
    }
    writeU8a(values) {
        const size = values.length;
        this.ensureBufferSizeToWrite(size);
        this.bytes.set(values, this.pos);
        this.pos += size;
    }
    writeI8(value) {
        this.ensureBufferSizeToWrite(1);
        this.view.setInt8(this.pos, value);
        this.pos++;
    }
    writeU16(value) {
        this.ensureBufferSizeToWrite(2);
        this.view.setUint16(this.pos, value);
        this.pos += 2;
    }
    writeI16(value) {
        this.ensureBufferSizeToWrite(2);
        this.view.setInt16(this.pos, value);
        this.pos += 2;
    }
    writeU32(value) {
        this.ensureBufferSizeToWrite(4);
        this.view.setUint32(this.pos, value);
        this.pos += 4;
    }
    writeI32(value) {
        this.ensureBufferSizeToWrite(4);
        this.view.setInt32(this.pos, value);
        this.pos += 4;
    }
    writeF32(value) {
        this.ensureBufferSizeToWrite(4);
        this.view.setFloat32(this.pos, value);
        this.pos += 4;
    }
    writeF64(value) {
        this.ensureBufferSizeToWrite(8);
        this.view.setFloat64(this.pos, value);
        this.pos += 8;
    }
    writeU64(value) {
        this.ensureBufferSizeToWrite(8);
        (0,_utils_int_mjs__WEBPACK_IMPORTED_MODULE_2__.setUint64)(this.view, this.pos, value);
        this.pos += 8;
    }
    writeI64(value) {
        this.ensureBufferSizeToWrite(8);
        (0,_utils_int_mjs__WEBPACK_IMPORTED_MODULE_2__.setInt64)(this.view, this.pos, value);
        this.pos += 8;
    }
    writeBigUint64(value) {
        this.ensureBufferSizeToWrite(8);
        this.view.setBigUint64(this.pos, value);
        this.pos += 8;
    }
    writeBigInt64(value) {
        this.ensureBufferSizeToWrite(8);
        this.view.setBigInt64(this.pos, value);
        this.pos += 8;
    }
}
//# sourceMappingURL=Encoder.mjs.map

/***/ }),

/***/ "./node_modules/@msgpack/msgpack/dist.esm/ExtData.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@msgpack/msgpack/dist.esm/ExtData.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExtData: () => (/* binding */ ExtData)
/* harmony export */ });
/**
 * ExtData is used to handle Extension Types that are not registered to ExtensionCodec.
 */
class ExtData {
    constructor(type, data) {
        this.type = type;
        this.data = data;
    }
}
//# sourceMappingURL=ExtData.mjs.map

/***/ }),

/***/ "./node_modules/@msgpack/msgpack/dist.esm/ExtensionCodec.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@msgpack/msgpack/dist.esm/ExtensionCodec.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExtensionCodec: () => (/* binding */ ExtensionCodec)
/* harmony export */ });
/* harmony import */ var _ExtData_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ExtData.mjs */ "./node_modules/@msgpack/msgpack/dist.esm/ExtData.mjs");
/* harmony import */ var _timestamp_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./timestamp.mjs */ "./node_modules/@msgpack/msgpack/dist.esm/timestamp.mjs");
// ExtensionCodec to handle MessagePack extensions


class ExtensionCodec {
    constructor() {
        // built-in extensions
        this.builtInEncoders = [];
        this.builtInDecoders = [];
        // custom extensions
        this.encoders = [];
        this.decoders = [];
        this.register(_timestamp_mjs__WEBPACK_IMPORTED_MODULE_1__.timestampExtension);
    }
    register({ type, encode, decode, }) {
        if (type >= 0) {
            // custom extensions
            this.encoders[type] = encode;
            this.decoders[type] = decode;
        }
        else {
            // built-in extensions
            const index = -1 - type;
            this.builtInEncoders[index] = encode;
            this.builtInDecoders[index] = decode;
        }
    }
    tryToEncode(object, context) {
        // built-in extensions
        for (let i = 0; i < this.builtInEncoders.length; i++) {
            const encodeExt = this.builtInEncoders[i];
            if (encodeExt != null) {
                const data = encodeExt(object, context);
                if (data != null) {
                    const type = -1 - i;
                    return new _ExtData_mjs__WEBPACK_IMPORTED_MODULE_0__.ExtData(type, data);
                }
            }
        }
        // custom extensions
        for (let i = 0; i < this.encoders.length; i++) {
            const encodeExt = this.encoders[i];
            if (encodeExt != null) {
                const data = encodeExt(object, context);
                if (data != null) {
                    const type = i;
                    return new _ExtData_mjs__WEBPACK_IMPORTED_MODULE_0__.ExtData(type, data);
                }
            }
        }
        if (object instanceof _ExtData_mjs__WEBPACK_IMPORTED_MODULE_0__.ExtData) {
            // to keep ExtData as is
            return object;
        }
        return null;
    }
    decode(data, type, context) {
        const decodeExt = type < 0 ? this.builtInDecoders[-1 - type] : this.decoders[type];
        if (decodeExt) {
            return decodeExt(data, type, context);
        }
        else {
            // decode() does not fail, returns ExtData instead.
            return new _ExtData_mjs__WEBPACK_IMPORTED_MODULE_0__.ExtData(type, data);
        }
    }
}
ExtensionCodec.defaultCodec = new ExtensionCodec();
//# sourceMappingURL=ExtensionCodec.mjs.map

/***/ }),

/***/ "./node_modules/@msgpack/msgpack/dist.esm/decode.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@msgpack/msgpack/dist.esm/decode.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decode: () => (/* binding */ decode),
/* harmony export */   decodeMulti: () => (/* binding */ decodeMulti)
/* harmony export */ });
/* harmony import */ var _Decoder_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Decoder.mjs */ "./node_modules/@msgpack/msgpack/dist.esm/Decoder.mjs");

/**
 * It decodes a single MessagePack object in a buffer.
 *
 * This is a synchronous decoding function.
 * See other variants for asynchronous decoding: {@link decodeAsync}, {@link decodeMultiStream}, or {@link decodeArrayStream}.
 *
 * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.
 * @throws {@link DecodeError} if the buffer contains invalid data.
 */
function decode(buffer, options) {
    const decoder = new _Decoder_mjs__WEBPACK_IMPORTED_MODULE_0__.Decoder(options);
    return decoder.decode(buffer);
}
/**
 * It decodes multiple MessagePack objects in a buffer.
 * This is corresponding to {@link decodeMultiStream}.
 *
 * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.
 * @throws {@link DecodeError} if the buffer contains invalid data.
 */
function decodeMulti(buffer, options) {
    const decoder = new _Decoder_mjs__WEBPACK_IMPORTED_MODULE_0__.Decoder(options);
    return decoder.decodeMulti(buffer);
}
//# sourceMappingURL=decode.mjs.map

/***/ }),

/***/ "./node_modules/@msgpack/msgpack/dist.esm/encode.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@msgpack/msgpack/dist.esm/encode.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   encode: () => (/* binding */ encode)
/* harmony export */ });
/* harmony import */ var _Encoder_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Encoder.mjs */ "./node_modules/@msgpack/msgpack/dist.esm/Encoder.mjs");

/**
 * It encodes `value` in the MessagePack format and
 * returns a byte buffer.
 *
 * The returned buffer is a slice of a larger `ArrayBuffer`, so you have to use its `#byteOffset` and `#byteLength` in order to convert it to another typed arrays including NodeJS `Buffer`.
 */
function encode(value, options) {
    const encoder = new _Encoder_mjs__WEBPACK_IMPORTED_MODULE_0__.Encoder(options);
    return encoder.encodeSharedRef(value);
}
//# sourceMappingURL=encode.mjs.map

/***/ }),

/***/ "./node_modules/@msgpack/msgpack/dist.esm/timestamp.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@msgpack/msgpack/dist.esm/timestamp.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EXT_TIMESTAMP: () => (/* binding */ EXT_TIMESTAMP),
/* harmony export */   decodeTimestampExtension: () => (/* binding */ decodeTimestampExtension),
/* harmony export */   decodeTimestampToTimeSpec: () => (/* binding */ decodeTimestampToTimeSpec),
/* harmony export */   encodeDateToTimeSpec: () => (/* binding */ encodeDateToTimeSpec),
/* harmony export */   encodeTimeSpecToTimestamp: () => (/* binding */ encodeTimeSpecToTimestamp),
/* harmony export */   encodeTimestampExtension: () => (/* binding */ encodeTimestampExtension),
/* harmony export */   timestampExtension: () => (/* binding */ timestampExtension)
/* harmony export */ });
/* harmony import */ var _DecodeError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DecodeError.mjs */ "./node_modules/@msgpack/msgpack/dist.esm/DecodeError.mjs");
/* harmony import */ var _utils_int_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/int.mjs */ "./node_modules/@msgpack/msgpack/dist.esm/utils/int.mjs");
// https://github.com/msgpack/msgpack/blob/master/spec.md#timestamp-extension-type


const EXT_TIMESTAMP = -1;
const TIMESTAMP32_MAX_SEC = 0x100000000 - 1; // 32-bit unsigned int
const TIMESTAMP64_MAX_SEC = 0x400000000 - 1; // 34-bit unsigned int
function encodeTimeSpecToTimestamp({ sec, nsec }) {
    if (sec >= 0 && nsec >= 0 && sec <= TIMESTAMP64_MAX_SEC) {
        // Here sec >= 0 && nsec >= 0
        if (nsec === 0 && sec <= TIMESTAMP32_MAX_SEC) {
            // timestamp 32 = { sec32 (unsigned) }
            const rv = new Uint8Array(4);
            const view = new DataView(rv.buffer);
            view.setUint32(0, sec);
            return rv;
        }
        else {
            // timestamp 64 = { nsec30 (unsigned), sec34 (unsigned) }
            const secHigh = sec / 0x100000000;
            const secLow = sec & 0xffffffff;
            const rv = new Uint8Array(8);
            const view = new DataView(rv.buffer);
            // nsec30 | secHigh2
            view.setUint32(0, (nsec << 2) | (secHigh & 0x3));
            // secLow32
            view.setUint32(4, secLow);
            return rv;
        }
    }
    else {
        // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }
        const rv = new Uint8Array(12);
        const view = new DataView(rv.buffer);
        view.setUint32(0, nsec);
        (0,_utils_int_mjs__WEBPACK_IMPORTED_MODULE_1__.setInt64)(view, 4, sec);
        return rv;
    }
}
function encodeDateToTimeSpec(date) {
    const msec = date.getTime();
    const sec = Math.floor(msec / 1e3);
    const nsec = (msec - sec * 1e3) * 1e6;
    // Normalizes { sec, nsec } to ensure nsec is unsigned.
    const nsecInSec = Math.floor(nsec / 1e9);
    return {
        sec: sec + nsecInSec,
        nsec: nsec - nsecInSec * 1e9,
    };
}
function encodeTimestampExtension(object) {
    if (object instanceof Date) {
        const timeSpec = encodeDateToTimeSpec(object);
        return encodeTimeSpecToTimestamp(timeSpec);
    }
    else {
        return null;
    }
}
function decodeTimestampToTimeSpec(data) {
    const view = new DataView(data.buffer, data.byteOffset, data.byteLength);
    // data may be 32, 64, or 96 bits
    switch (data.byteLength) {
        case 4: {
            // timestamp 32 = { sec32 }
            const sec = view.getUint32(0);
            const nsec = 0;
            return { sec, nsec };
        }
        case 8: {
            // timestamp 64 = { nsec30, sec34 }
            const nsec30AndSecHigh2 = view.getUint32(0);
            const secLow32 = view.getUint32(4);
            const sec = (nsec30AndSecHigh2 & 0x3) * 0x100000000 + secLow32;
            const nsec = nsec30AndSecHigh2 >>> 2;
            return { sec, nsec };
        }
        case 12: {
            // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }
            const sec = (0,_utils_int_mjs__WEBPACK_IMPORTED_MODULE_1__.getInt64)(view, 4);
            const nsec = view.getUint32(0);
            return { sec, nsec };
        }
        default:
            throw new _DecodeError_mjs__WEBPACK_IMPORTED_MODULE_0__.DecodeError(`Unrecognized data size for timestamp (expected 4, 8, or 12): ${data.length}`);
    }
}
function decodeTimestampExtension(data) {
    const timeSpec = decodeTimestampToTimeSpec(data);
    return new Date(timeSpec.sec * 1e3 + timeSpec.nsec / 1e6);
}
const timestampExtension = {
    type: EXT_TIMESTAMP,
    encode: encodeTimestampExtension,
    decode: decodeTimestampExtension,
};
//# sourceMappingURL=timestamp.mjs.map

/***/ }),

/***/ "./node_modules/@msgpack/msgpack/dist.esm/utils/int.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@msgpack/msgpack/dist.esm/utils/int.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UINT32_MAX: () => (/* binding */ UINT32_MAX),
/* harmony export */   getInt64: () => (/* binding */ getInt64),
/* harmony export */   getUint64: () => (/* binding */ getUint64),
/* harmony export */   setInt64: () => (/* binding */ setInt64),
/* harmony export */   setUint64: () => (/* binding */ setUint64)
/* harmony export */ });
// Integer Utility
const UINT32_MAX = 4294967295;
// DataView extension to handle int64 / uint64,
// where the actual range is 53-bits integer (a.k.a. safe integer)
function setUint64(view, offset, value) {
    const high = value / 4294967296;
    const low = value; // high bits are truncated by DataView
    view.setUint32(offset, high);
    view.setUint32(offset + 4, low);
}
function setInt64(view, offset, value) {
    const high = Math.floor(value / 4294967296);
    const low = value; // high bits are truncated by DataView
    view.setUint32(offset, high);
    view.setUint32(offset + 4, low);
}
function getInt64(view, offset) {
    const high = view.getInt32(offset);
    const low = view.getUint32(offset + 4);
    return high * 4294967296 + low;
}
function getUint64(view, offset) {
    const high = view.getUint32(offset);
    const low = view.getUint32(offset + 4);
    return high * 4294967296 + low;
}
//# sourceMappingURL=int.mjs.map

/***/ }),

/***/ "./node_modules/@msgpack/msgpack/dist.esm/utils/prettyByte.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@msgpack/msgpack/dist.esm/utils/prettyByte.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   prettyByte: () => (/* binding */ prettyByte)
/* harmony export */ });
function prettyByte(byte) {
    return `${byte < 0 ? "-" : ""}0x${Math.abs(byte).toString(16).padStart(2, "0")}`;
}
//# sourceMappingURL=prettyByte.mjs.map

/***/ }),

/***/ "./node_modules/@msgpack/msgpack/dist.esm/utils/typedArrays.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@msgpack/msgpack/dist.esm/utils/typedArrays.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ensureUint8Array: () => (/* binding */ ensureUint8Array)
/* harmony export */ });
function isArrayBufferLike(buffer) {
    return (buffer instanceof ArrayBuffer || (typeof SharedArrayBuffer !== "undefined" && buffer instanceof SharedArrayBuffer));
}
function ensureUint8Array(buffer) {
    if (buffer instanceof Uint8Array) {
        return buffer;
    }
    else if (ArrayBuffer.isView(buffer)) {
        return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);
    }
    else if (isArrayBufferLike(buffer)) {
        return new Uint8Array(buffer);
    }
    else {
        // ArrayLike<number>
        return Uint8Array.from(buffer);
    }
}
//# sourceMappingURL=typedArrays.mjs.map

/***/ }),

/***/ "./node_modules/@msgpack/msgpack/dist.esm/utils/utf8.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@msgpack/msgpack/dist.esm/utils/utf8.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   utf8Count: () => (/* binding */ utf8Count),
/* harmony export */   utf8Decode: () => (/* binding */ utf8Decode),
/* harmony export */   utf8DecodeJs: () => (/* binding */ utf8DecodeJs),
/* harmony export */   utf8DecodeTD: () => (/* binding */ utf8DecodeTD),
/* harmony export */   utf8Encode: () => (/* binding */ utf8Encode),
/* harmony export */   utf8EncodeJs: () => (/* binding */ utf8EncodeJs),
/* harmony export */   utf8EncodeTE: () => (/* binding */ utf8EncodeTE)
/* harmony export */ });
function utf8Count(str) {
    const strLength = str.length;
    let byteLength = 0;
    let pos = 0;
    while (pos < strLength) {
        let value = str.charCodeAt(pos++);
        if ((value & 0xffffff80) === 0) {
            // 1-byte
            byteLength++;
            continue;
        }
        else if ((value & 0xfffff800) === 0) {
            // 2-bytes
            byteLength += 2;
        }
        else {
            // handle surrogate pair
            if (value >= 0xd800 && value <= 0xdbff) {
                // high surrogate
                if (pos < strLength) {
                    const extra = str.charCodeAt(pos);
                    if ((extra & 0xfc00) === 0xdc00) {
                        ++pos;
                        value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;
                    }
                }
            }
            if ((value & 0xffff0000) === 0) {
                // 3-byte
                byteLength += 3;
            }
            else {
                // 4-byte
                byteLength += 4;
            }
        }
    }
    return byteLength;
}
function utf8EncodeJs(str, output, outputOffset) {
    const strLength = str.length;
    let offset = outputOffset;
    let pos = 0;
    while (pos < strLength) {
        let value = str.charCodeAt(pos++);
        if ((value & 0xffffff80) === 0) {
            // 1-byte
            output[offset++] = value;
            continue;
        }
        else if ((value & 0xfffff800) === 0) {
            // 2-bytes
            output[offset++] = ((value >> 6) & 0x1f) | 0xc0;
        }
        else {
            // handle surrogate pair
            if (value >= 0xd800 && value <= 0xdbff) {
                // high surrogate
                if (pos < strLength) {
                    const extra = str.charCodeAt(pos);
                    if ((extra & 0xfc00) === 0xdc00) {
                        ++pos;
                        value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;
                    }
                }
            }
            if ((value & 0xffff0000) === 0) {
                // 3-byte
                output[offset++] = ((value >> 12) & 0x0f) | 0xe0;
                output[offset++] = ((value >> 6) & 0x3f) | 0x80;
            }
            else {
                // 4-byte
                output[offset++] = ((value >> 18) & 0x07) | 0xf0;
                output[offset++] = ((value >> 12) & 0x3f) | 0x80;
                output[offset++] = ((value >> 6) & 0x3f) | 0x80;
            }
        }
        output[offset++] = (value & 0x3f) | 0x80;
    }
}
// TextEncoder and TextDecoder are standardized in whatwg encoding:
// https://encoding.spec.whatwg.org/
// and available in all the modern browsers:
// https://caniuse.com/textencoder
// They are available in Node.js since v12 LTS as well:
// https://nodejs.org/api/globals.html#textencoder
const sharedTextEncoder = new TextEncoder();
// This threshold should be determined by benchmarking, which might vary in engines and input data.
// Run `npx ts-node benchmark/encode-string.ts` for details.
const TEXT_ENCODER_THRESHOLD = 50;
function utf8EncodeTE(str, output, outputOffset) {
    sharedTextEncoder.encodeInto(str, output.subarray(outputOffset));
}
function utf8Encode(str, output, outputOffset) {
    if (str.length > TEXT_ENCODER_THRESHOLD) {
        utf8EncodeTE(str, output, outputOffset);
    }
    else {
        utf8EncodeJs(str, output, outputOffset);
    }
}
const CHUNK_SIZE = 4096;
function utf8DecodeJs(bytes, inputOffset, byteLength) {
    let offset = inputOffset;
    const end = offset + byteLength;
    const units = [];
    let result = "";
    while (offset < end) {
        const byte1 = bytes[offset++];
        if ((byte1 & 0x80) === 0) {
            // 1 byte
            units.push(byte1);
        }
        else if ((byte1 & 0xe0) === 0xc0) {
            // 2 bytes
            const byte2 = bytes[offset++] & 0x3f;
            units.push(((byte1 & 0x1f) << 6) | byte2);
        }
        else if ((byte1 & 0xf0) === 0xe0) {
            // 3 bytes
            const byte2 = bytes[offset++] & 0x3f;
            const byte3 = bytes[offset++] & 0x3f;
            units.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3);
        }
        else if ((byte1 & 0xf8) === 0xf0) {
            // 4 bytes
            const byte2 = bytes[offset++] & 0x3f;
            const byte3 = bytes[offset++] & 0x3f;
            const byte4 = bytes[offset++] & 0x3f;
            let unit = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4;
            if (unit > 0xffff) {
                unit -= 0x10000;
                units.push(((unit >>> 10) & 0x3ff) | 0xd800);
                unit = 0xdc00 | (unit & 0x3ff);
            }
            units.push(unit);
        }
        else {
            units.push(byte1);
        }
        if (units.length >= CHUNK_SIZE) {
            result += String.fromCharCode(...units);
            units.length = 0;
        }
    }
    if (units.length > 0) {
        result += String.fromCharCode(...units);
    }
    return result;
}
const sharedTextDecoder = new TextDecoder();
// This threshold should be determined by benchmarking, which might vary in engines and input data.
// Run `npx ts-node benchmark/decode-string.ts` for details.
const TEXT_DECODER_THRESHOLD = 200;
function utf8DecodeTD(bytes, inputOffset, byteLength) {
    const stringBytes = bytes.subarray(inputOffset, inputOffset + byteLength);
    return sharedTextDecoder.decode(stringBytes);
}
function utf8Decode(bytes, inputOffset, byteLength) {
    if (byteLength > TEXT_DECODER_THRESHOLD) {
        return utf8DecodeTD(bytes, inputOffset, byteLength);
    }
    else {
        return utf8DecodeJs(bytes, inputOffset, byteLength);
    }
}
//# sourceMappingURL=utf8.mjs.map

/***/ }),

/***/ "./node_modules/@walletconnect/environment/dist/cjs/crypto.js":
/*!********************************************************************!*\
  !*** ./node_modules/@walletconnect/environment/dist/cjs/crypto.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isBrowserCryptoAvailable = exports.getSubtleCrypto = exports.getBrowerCrypto = void 0;
function getBrowerCrypto() {
    return (__webpack_require__.g === null || __webpack_require__.g === void 0 ? void 0 : __webpack_require__.g.crypto) || (__webpack_require__.g === null || __webpack_require__.g === void 0 ? void 0 : __webpack_require__.g.msCrypto) || {};
}
exports.getBrowerCrypto = getBrowerCrypto;
function getSubtleCrypto() {
    const browserCrypto = getBrowerCrypto();
    return browserCrypto.subtle || browserCrypto.webkitSubtle;
}
exports.getSubtleCrypto = getSubtleCrypto;
function isBrowserCryptoAvailable() {
    return !!getBrowerCrypto() && !!getSubtleCrypto();
}
exports.isBrowserCryptoAvailable = isBrowserCryptoAvailable;
//# sourceMappingURL=crypto.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/environment/dist/cjs/env.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@walletconnect/environment/dist/cjs/env.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ "./node_modules/process/browser.js");

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isBrowser = exports.isNode = exports.isReactNative = void 0;
function isReactNative() {
    return (typeof document === "undefined" &&
        typeof navigator !== "undefined" &&
        navigator.product === "ReactNative");
}
exports.isReactNative = isReactNative;
function isNode() {
    return (typeof process !== "undefined" &&
        typeof process.versions !== "undefined" &&
        typeof process.versions.node !== "undefined");
}
exports.isNode = isNode;
function isBrowser() {
    return !isReactNative() && !isNode();
}
exports.isBrowser = isBrowser;
//# sourceMappingURL=env.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/environment/dist/cjs/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@walletconnect/environment/dist/cjs/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
tslib_1.__exportStar(__webpack_require__(/*! ./crypto */ "./node_modules/@walletconnect/environment/dist/cjs/crypto.js"), exports);
tslib_1.__exportStar(__webpack_require__(/*! ./env */ "./node_modules/@walletconnect/environment/dist/cjs/env.js"), exports);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/dist/index.es.js":
/*!************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/dist/index.es.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EthereumProvider: () => (/* binding */ Y),
/* harmony export */   OPTIONAL_EVENTS: () => (/* binding */ P),
/* harmony export */   OPTIONAL_METHODS: () => (/* binding */ A),
/* harmony export */   REQUIRED_EVENTS: () => (/* binding */ C),
/* harmony export */   REQUIRED_METHODS: () => (/* binding */ f),
/* harmony export */   "default": () => (/* binding */ b)
/* harmony export */ });
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ "./node_modules/events/events.js");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/utils */ "./node_modules/@walletconnect/ethereum-provider/node_modules/@walletconnect/utils/dist/index.es.js");
/* harmony import */ var _walletconnect_universal_provider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/universal-provider */ "./node_modules/@walletconnect/universal-provider/dist/index.es.js");
const $="wc",k="ethereum_provider",q=`${$}@2:${k}:`,U="https://rpc.walletconnect.org/v1/",f=["eth_sendTransaction","personal_sign"],A=["eth_accounts","eth_requestAccounts","eth_sendRawTransaction","eth_sign","eth_signTransaction","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","eth_sendTransaction","personal_sign","wallet_switchEthereumChain","wallet_addEthereumChain","wallet_getPermissions","wallet_requestPermissions","wallet_registerOnboarding","wallet_watchAsset","wallet_scanQRCode","wallet_sendCalls","wallet_getCapabilities","wallet_getCallsStatus","wallet_showCallsStatus"],C=["chainChanged","accountsChanged"],P=["chainChanged","accountsChanged","message","disconnect","connect"],D=async()=>{const{createAppKit:s}=await __webpack_require__.e(/*! import() */ "node_modules_reown_appkit_dist_esm_exports_core_js").then(__webpack_require__.bind(__webpack_require__, /*! @reown/appkit/core */ "./node_modules/@reown/appkit/dist/esm/exports/core.js"));return s};var z=Object.defineProperty,L=Object.defineProperties,K=Object.getOwnPropertyDescriptors,M=Object.getOwnPropertySymbols,Q=Object.prototype.hasOwnProperty,V=Object.prototype.propertyIsEnumerable,_=(s,t,e)=>t in s?z(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e,v=(s,t)=>{for(var e in t||(t={}))Q.call(t,e)&&_(s,e,t[e]);if(M)for(var e of M(t))V.call(t,e)&&_(s,e,t[e]);return s},w=(s,t)=>L(s,K(t)),p=(s,t,e)=>_(s,typeof t!="symbol"?t+"":t,e);function I(s){return Number(s[0].split(":")[1])}function E(s){return`0x${s.toString(16)}`}function G(s){const{chains:t,optionalChains:e,methods:n,optionalMethods:i,events:a,optionalEvents:o,rpcMap:u}=s;if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.isValidArray)(t))throw new Error("Invalid chains");const c={chains:t,methods:n||f,events:a||C,rpcMap:v({},t.length?{[I(t)]:u[I(t)]}:{})},l=a?.filter(d=>!C.includes(d)),r=n?.filter(d=>!f.includes(d));if(!e&&!o&&!i&&!(l!=null&&l.length)&&!(r!=null&&r.length))return{required:t.length?c:void 0};const m=l?.length&&r?.length||!e,h={chains:[...new Set(m?c.chains.concat(e||[]):e)],methods:[...new Set(c.methods.concat(i!=null&&i.length?i:A))],events:[...new Set(c.events.concat(o!=null&&o.length?o:P))],rpcMap:u};return{required:t.length?c:void 0,optional:e.length?h:void 0}}class b{constructor(){p(this,"events",new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter),p(this,"namespace","eip155"),p(this,"accounts",[]),p(this,"signer"),p(this,"chainId",1),p(this,"modal"),p(this,"rpc"),p(this,"STORAGE_KEY",q),p(this,"on",(t,e)=>(this.events.on(t,e),this)),p(this,"once",(t,e)=>(this.events.once(t,e),this)),p(this,"removeListener",(t,e)=>(this.events.removeListener(t,e),this)),p(this,"off",(t,e)=>(this.events.off(t,e),this)),p(this,"parseAccount",t=>this.isCompatibleChainId(t)?this.parseAccountId(t).address:t),this.signer={},this.rpc={}}static async init(t){const e=new b;return await e.initialize(t),e}async request(t,e){return await this.signer.request(t,this.formatChainId(this.chainId),e)}sendAsync(t,e,n){this.signer.sendAsync(t,e,this.formatChainId(this.chainId),n)}get connected(){return this.signer.client?this.signer.client.core.relayer.connected:!1}get connecting(){return this.signer.client?this.signer.client.core.relayer.connecting:!1}async enable(){return this.session||await this.connect(),await this.request({method:"eth_requestAccounts"})}async connect(t){var e;if(!this.signer.client)throw new Error("Provider not initialized. Call init() first");this.loadConnectOpts(t);const{required:n,optional:i}=G(this.rpc);try{const a=await new Promise(async(u,c)=>{var l,r;this.rpc.showQrModal&&((l=this.modal)==null||l.open(),(r=this.modal)==null||r.subscribeState(h=>{!h.open&&!this.signer.session&&(this.signer.abortPairingAttempt(),c(new Error("Connection request reset. Please try again.")))}));const m=t!=null&&t.scopedProperties?{[this.namespace]:t.scopedProperties}:void 0;await this.signer.connect(w(v({namespaces:v({},n&&{[this.namespace]:n})},i&&{optionalNamespaces:{[this.namespace]:i}}),{pairingTopic:t?.pairingTopic,scopedProperties:m})).then(h=>{u(h)}).catch(h=>{var d;(d=this.modal)==null||d.showErrorMessage("Unable to connect"),c(new Error(h.message))})});if(!a)return;const o=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.getAccountsFromNamespaces)(a.namespaces,[this.namespace]);this.setChainIds(this.rpc.chains.length?this.rpc.chains:o),this.setAccounts(o),this.events.emit("connect",{chainId:E(this.chainId)})}catch(a){throw this.signer.logger.error(a),a}finally{(e=this.modal)==null||e.close()}}async authenticate(t,e){var n;if(!this.signer.client)throw new Error("Provider not initialized. Call init() first");this.loadConnectOpts({chains:t?.chains});try{const i=await new Promise(async(o,u)=>{var c,l;this.rpc.showQrModal&&((c=this.modal)==null||c.open(),(l=this.modal)==null||l.subscribeState(r=>{!r.open&&!this.signer.session&&(this.signer.abortPairingAttempt(),u(new Error("Connection request reset. Please try again.")))})),await this.signer.authenticate(w(v({},t),{chains:this.rpc.chains}),e).then(r=>{o(r)}).catch(r=>{var m;(m=this.modal)==null||m.showErrorMessage("Unable to connect"),u(new Error(r.message))})}),a=i.session;if(a){const o=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.getAccountsFromNamespaces)(a.namespaces,[this.namespace]);this.setChainIds(this.rpc.chains.length?this.rpc.chains:o),this.setAccounts(o),this.events.emit("connect",{chainId:E(this.chainId)})}return i}catch(i){throw this.signer.logger.error(i),i}finally{(n=this.modal)==null||n.close()}}async disconnect(){this.session&&await this.signer.disconnect(),this.reset()}get isWalletConnect(){return!0}get session(){return this.signer.session}registerEventListeners(){this.signer.on("session_event",t=>{const{params:e}=t,{event:n}=e;n.name==="accountsChanged"?(this.accounts=this.parseAccounts(n.data),this.events.emit("accountsChanged",this.accounts)):n.name==="chainChanged"?this.setChainId(this.formatChainId(n.data)):this.events.emit(n.name,n.data),this.events.emit("session_event",t)}),this.signer.on("accountsChanged",t=>{this.accounts=this.parseAccounts(t),this.events.emit("accountsChanged",this.accounts)}),this.signer.on("chainChanged",t=>{const e=parseInt(t);this.chainId=e,this.events.emit("chainChanged",E(this.chainId)),this.persist()}),this.signer.on("session_update",t=>{this.events.emit("session_update",t)}),this.signer.on("session_delete",t=>{this.reset(),this.events.emit("session_delete",t),this.events.emit("disconnect",w(v({},(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.getSdkError)("USER_DISCONNECTED")),{data:t.topic,name:"USER_DISCONNECTED"}))}),this.signer.on("display_uri",t=>{this.events.emit("display_uri",t)})}switchEthereumChain(t){this.request({method:"wallet_switchEthereumChain",params:[{chainId:t.toString(16)}]})}isCompatibleChainId(t){return typeof t=="string"?t.startsWith(`${this.namespace}:`):!1}formatChainId(t){return`${this.namespace}:${t}`}parseChainId(t){return Number(t.split(":")[1])}setChainIds(t){const e=t.filter(n=>this.isCompatibleChainId(n)).map(n=>this.parseChainId(n));e.length&&(this.chainId=e[0],this.events.emit("chainChanged",E(this.chainId)),this.persist())}setChainId(t){if(this.isCompatibleChainId(t)){const e=this.parseChainId(t);this.chainId=e,this.switchEthereumChain(e)}}parseAccountId(t){const[e,n,i]=t.split(":");return{chainId:`${e}:${n}`,address:i}}setAccounts(t){this.accounts=t.filter(e=>this.parseChainId(this.parseAccountId(e).chainId)===this.chainId).map(e=>this.parseAccountId(e).address),this.events.emit("accountsChanged",this.accounts)}getRpcConfig(t){var e,n;const i=(e=t?.chains)!=null?e:[],a=(n=t?.optionalChains)!=null?n:[],o=i.concat(a);if(!o.length)throw new Error("No chains specified in either `chains` or `optionalChains`");const u=i.length?t?.methods||f:[],c=i.length?t?.events||C:[],l=t?.optionalMethods||[],r=t?.optionalEvents||[],m=t?.rpcMap||this.buildRpcMap(o,t.projectId),h=t?.qrModalOptions||void 0;return{chains:i?.map(d=>this.formatChainId(d)),optionalChains:a.map(d=>this.formatChainId(d)),methods:u,events:c,optionalMethods:l,optionalEvents:r,rpcMap:m,showQrModal:!!(t!=null&&t.showQrModal),qrModalOptions:h,projectId:t.projectId,metadata:t.metadata}}buildRpcMap(t,e){const n={};return t.forEach(i=>{n[i]=this.getRpcUrl(i,e)}),n}async initialize(t){if(this.rpc=this.getRpcConfig(t),this.chainId=this.rpc.chains.length?I(this.rpc.chains):I(this.rpc.optionalChains),this.signer=await _walletconnect_universal_provider__WEBPACK_IMPORTED_MODULE_2__.UniversalProvider.init({projectId:this.rpc.projectId,metadata:this.rpc.metadata,disableProviderPing:t.disableProviderPing,relayUrl:t.relayUrl,storage:t.storage,storageOptions:t.storageOptions,customStoragePrefix:t.customStoragePrefix,telemetryEnabled:t.telemetryEnabled,logger:t.logger}),this.registerEventListeners(),await this.loadPersistedSession(),this.rpc.showQrModal){let e;try{const n=await D(),{convertWCMToAppKitOptions:i}=await Promise.resolve().then(function(){return nt}),a=i(w(v({},this.rpc.qrModalOptions),{chains:[...new Set([...this.rpc.chains,...this.rpc.optionalChains])],metadata:this.rpc.metadata,projectId:this.rpc.projectId}));if(!a.networks.length)throw new Error("No networks found for WalletConnect\xB7");e=n(w(v({},a),{universalProvider:this.signer,manualWCControl:!0}))}catch(n){throw console.warn(n),new Error("To use QR modal, please install @reown/appkit package")}if(e)try{this.modal=e}catch(n){throw this.signer.logger.error(n),new Error("Could not generate WalletConnectModal Instance")}}}loadConnectOpts(t){if(!t)return;const{chains:e,optionalChains:n,rpcMap:i}=t;e&&(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.isValidArray)(e)&&(this.rpc.chains=e.map(a=>this.formatChainId(a)),e.forEach(a=>{this.rpc.rpcMap[a]=i?.[a]||this.getRpcUrl(a)})),n&&(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.isValidArray)(n)&&(this.rpc.optionalChains=[],this.rpc.optionalChains=n?.map(a=>this.formatChainId(a)),n.forEach(a=>{this.rpc.rpcMap[a]=i?.[a]||this.getRpcUrl(a)}))}getRpcUrl(t,e){var n;return((n=this.rpc.rpcMap)==null?void 0:n[t])||`${U}?chainId=eip155:${t}&projectId=${e||this.rpc.projectId}`}async loadPersistedSession(){if(this.session)try{const t=await this.signer.client.core.storage.getItem(`${this.STORAGE_KEY}/chainId`),e=this.session.namespaces[`${this.namespace}:${t}`]?this.session.namespaces[`${this.namespace}:${t}`]:this.session.namespaces[this.namespace];this.setChainIds(t?[this.formatChainId(t)]:e?.accounts),this.setAccounts(e?.accounts)}catch(t){this.signer.logger.error("Failed to load persisted session, clearing state..."),this.signer.logger.error(t),await this.disconnect().catch(e=>this.signer.logger.warn(e))}}reset(){this.chainId=1,this.accounts=[]}persist(){this.session&&this.signer.client.core.storage.setItem(`${this.STORAGE_KEY}/chainId`,this.chainId)}parseAccounts(t){return typeof t=="string"||t instanceof String?[this.parseAccount(t)]:t.map(e=>this.parseAccount(e))}}const Y=b;var H=Object.defineProperty,B=Object.defineProperties,F=Object.getOwnPropertyDescriptors,S=Object.getOwnPropertySymbols,X=Object.prototype.hasOwnProperty,J=Object.prototype.propertyIsEnumerable,T=(s,t,e)=>t in s?H(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e,R=(s,t)=>{for(var e in t||(t={}))X.call(t,e)&&T(s,e,t[e]);if(S)for(var e of S(t))J.call(t,e)&&T(s,e,t[e]);return s},Z=(s,t)=>B(s,F(t));function tt(s){if(s)return{"--w3m-font-family":s["--wcm-font-family"],"--w3m-accent":s["--wcm-accent-color"],"--w3m-color-mix":s["--wcm-background-color"],"--w3m-z-index":s["--wcm-z-index"]?Number(s["--wcm-z-index"]):void 0,"--w3m-qr-color":s["--wcm-accent-color"],"--w3m-font-size-master":s["--wcm-text-medium-regular-size"],"--w3m-border-radius-master":s["--wcm-container-border-radius"],"--w3m-color-mix-strength":0}}const et=s=>{const[t,e]=s.split(":");return W({id:e,caipNetworkId:s,chainNamespace:t,name:"",nativeCurrency:{name:"",symbol:"",decimals:8},rpcUrls:{default:{http:["https://rpc.walletconnect.org/v1"]}}})};function st(s){var t,e,n,i,a,o,u;const c=(t=s.chains)==null?void 0:t.map(et).filter(Boolean);if(c.length===0)throw new Error("At least one chain must be specified");const l=c.find(m=>{var h;return m.id===((h=s.defaultChain)==null?void 0:h.id)}),r={projectId:s.projectId,networks:c,themeMode:s.themeMode,themeVariables:tt(s.themeVariables),chainImages:s.chainImages,connectorImages:s.walletImages,defaultNetwork:l,metadata:Z(R({},s.metadata),{name:((e=s.metadata)==null?void 0:e.name)||"WalletConnect",description:((n=s.metadata)==null?void 0:n.description)||"Connect to WalletConnect-compatible wallets",url:((i=s.metadata)==null?void 0:i.url)||"https://walletconnect.org",icons:((a=s.metadata)==null?void 0:a.icons)||["https://walletconnect.org/walletconnect-logo.png"]}),showWallets:!0,featuredWalletIds:s.explorerRecommendedWalletIds==="NONE"?[]:Array.isArray(s.explorerRecommendedWalletIds)?s.explorerRecommendedWalletIds:[],excludeWalletIds:s.explorerExcludedWalletIds==="ALL"?[]:Array.isArray(s.explorerExcludedWalletIds)?s.explorerExcludedWalletIds:[],enableEIP6963:!1,enableInjected:!1,enableCoinbase:!0,enableWalletConnect:!0,features:{email:!1,socials:!1}};if((o=s.mobileWallets)!=null&&o.length||(u=s.desktopWallets)!=null&&u.length){const m=[...(s.mobileWallets||[]).map(g=>({id:g.id,name:g.name,links:g.links})),...(s.desktopWallets||[]).map(g=>({id:g.id,name:g.name,links:{native:g.links.native,universal:g.links.universal}}))],h=[...r.featuredWalletIds||[],...r.excludeWalletIds||[]],d=m.filter(g=>!h.includes(g.id));d.length&&(r.customWallets=d)}return r}function W(s){return R({formatters:void 0,fees:void 0,serializers:void 0},s)}var nt=Object.freeze({__proto__:null,convertWCMToAppKitOptions:st,defineChain:W});
//# sourceMappingURL=index.es.js.map


/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/@noble/hashes/esm/_u64.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/@noble/hashes/esm/_u64.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   add: () => (/* binding */ add),
/* harmony export */   add3H: () => (/* binding */ add3H),
/* harmony export */   add3L: () => (/* binding */ add3L),
/* harmony export */   add4H: () => (/* binding */ add4H),
/* harmony export */   add4L: () => (/* binding */ add4L),
/* harmony export */   add5H: () => (/* binding */ add5H),
/* harmony export */   add5L: () => (/* binding */ add5L),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   fromBig: () => (/* binding */ fromBig),
/* harmony export */   rotlBH: () => (/* binding */ rotlBH),
/* harmony export */   rotlBL: () => (/* binding */ rotlBL),
/* harmony export */   rotlSH: () => (/* binding */ rotlSH),
/* harmony export */   rotlSL: () => (/* binding */ rotlSL),
/* harmony export */   rotr32H: () => (/* binding */ rotr32H),
/* harmony export */   rotr32L: () => (/* binding */ rotr32L),
/* harmony export */   rotrBH: () => (/* binding */ rotrBH),
/* harmony export */   rotrBL: () => (/* binding */ rotrBL),
/* harmony export */   rotrSH: () => (/* binding */ rotrSH),
/* harmony export */   rotrSL: () => (/* binding */ rotrSL),
/* harmony export */   shrSH: () => (/* binding */ shrSH),
/* harmony export */   shrSL: () => (/* binding */ shrSL),
/* harmony export */   split: () => (/* binding */ split),
/* harmony export */   toBig: () => (/* binding */ toBig)
/* harmony export */ });
/**
 * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.
 * @todo re-check https://issues.chromium.org/issues/42212588
 * @module
 */
const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);
const _32n = /* @__PURE__ */ BigInt(32);
function fromBig(n, le = false) {
    if (le)
        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };
    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };
}
function split(lst, le = false) {
    const len = lst.length;
    let Ah = new Uint32Array(len);
    let Al = new Uint32Array(len);
    for (let i = 0; i < len; i++) {
        const { h, l } = fromBig(lst[i], le);
        [Ah[i], Al[i]] = [h, l];
    }
    return [Ah, Al];
}
const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);
// for Shift in [0, 32)
const shrSH = (h, _l, s) => h >>> s;
const shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);
// Right rotate for Shift in [1, 32)
const rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));
const rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);
// Right rotate for Shift in (32, 64), NOTE: 32 is special case.
const rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));
const rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));
// Right rotate for shift===32 (just swaps l&h)
const rotr32H = (_h, l) => l;
const rotr32L = (h, _l) => h;
// Left rotate for Shift in [1, 32)
const rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));
const rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));
// Left rotate for Shift in (32, 64), NOTE: 32 is special case.
const rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));
const rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));
// JS uses 32-bit signed integers for bitwise operations which means we cannot
// simple take carry out of low bit sum by shift, we need to use division.
function add(Ah, Al, Bh, Bl) {
    const l = (Al >>> 0) + (Bl >>> 0);
    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };
}
// Addition with more than 2 elements
const add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);
const add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;
const add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);
const add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;
const add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);
const add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;
// prettier-ignore

// prettier-ignore
const u64 = {
    fromBig, split, toBig,
    shrSH, shrSL,
    rotrSH, rotrSL, rotrBH, rotrBL,
    rotr32H, rotr32L,
    rotlSH, rotlSL, rotlBH, rotlBL,
    add, add3L, add3H, add4L, add4H, add5H, add5L,
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (u64);
//# sourceMappingURL=_u64.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/@noble/hashes/esm/crypto.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/@noble/hashes/esm/crypto.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   crypto: () => (/* binding */ crypto)
/* harmony export */ });
const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;
//# sourceMappingURL=crypto.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/@noble/hashes/esm/sha3.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/@noble/hashes/esm/sha3.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Keccak: () => (/* binding */ Keccak),
/* harmony export */   keccakP: () => (/* binding */ keccakP),
/* harmony export */   keccak_224: () => (/* binding */ keccak_224),
/* harmony export */   keccak_256: () => (/* binding */ keccak_256),
/* harmony export */   keccak_384: () => (/* binding */ keccak_384),
/* harmony export */   keccak_512: () => (/* binding */ keccak_512),
/* harmony export */   sha3_224: () => (/* binding */ sha3_224),
/* harmony export */   sha3_256: () => (/* binding */ sha3_256),
/* harmony export */   sha3_384: () => (/* binding */ sha3_384),
/* harmony export */   sha3_512: () => (/* binding */ sha3_512),
/* harmony export */   shake128: () => (/* binding */ shake128),
/* harmony export */   shake256: () => (/* binding */ shake256)
/* harmony export */ });
/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_u64.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/@noble/hashes/esm/_u64.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/@noble/hashes/esm/utils.js");
/**
 * SHA3 (keccak) hash function, based on a new "Sponge function" design.
 * Different from older hashes, the internal state is bigger than output size.
 *
 * Check out [FIPS-202](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf),
 * [Website](https://keccak.team/keccak.html),
 * [the differences between SHA-3 and Keccak](https://crypto.stackexchange.com/questions/15727/what-are-the-key-differences-between-the-draft-sha-3-standard-and-the-keccak-sub).
 *
 * Check out `sha3-addons` module for cSHAKE, k12, and others.
 * @module
 */

// prettier-ignore

// No __PURE__ annotations in sha3 header:
// EVERYTHING is in fact used on every export.
// Various per round constants calculations
const _0n = BigInt(0);
const _1n = BigInt(1);
const _2n = BigInt(2);
const _7n = BigInt(7);
const _256n = BigInt(256);
const _0x71n = BigInt(0x71);
const SHA3_PI = [];
const SHA3_ROTL = [];
const _SHA3_IOTA = [];
for (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {
    // Pi
    [x, y] = [y, (2 * x + 3 * y) % 5];
    SHA3_PI.push(2 * (5 * y + x));
    // Rotational
    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);
    // Iota
    let t = _0n;
    for (let j = 0; j < 7; j++) {
        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;
        if (R & _2n)
            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);
    }
    _SHA3_IOTA.push(t);
}
const IOTAS = (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.split)(_SHA3_IOTA, true);
const SHA3_IOTA_H = IOTAS[0];
const SHA3_IOTA_L = IOTAS[1];
// Left rotation (without 0, 32, 64)
const rotlH = (h, l, s) => (s > 32 ? (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlBH)(h, l, s) : (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlSH)(h, l, s));
const rotlL = (h, l, s) => (s > 32 ? (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlBL)(h, l, s) : (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlSL)(h, l, s));
/** `keccakf1600` internal function, additionally allows to adjust round count. */
function keccakP(s, rounds = 24) {
    const B = new Uint32Array(5 * 2);
    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)
    for (let round = 24 - rounds; round < 24; round++) {
        // Theta θ
        for (let x = 0; x < 10; x++)
            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];
        for (let x = 0; x < 10; x += 2) {
            const idx1 = (x + 8) % 10;
            const idx0 = (x + 2) % 10;
            const B0 = B[idx0];
            const B1 = B[idx0 + 1];
            const Th = rotlH(B0, B1, 1) ^ B[idx1];
            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];
            for (let y = 0; y < 50; y += 10) {
                s[x + y] ^= Th;
                s[x + y + 1] ^= Tl;
            }
        }
        // Rho (ρ) and Pi (π)
        let curH = s[2];
        let curL = s[3];
        for (let t = 0; t < 24; t++) {
            const shift = SHA3_ROTL[t];
            const Th = rotlH(curH, curL, shift);
            const Tl = rotlL(curH, curL, shift);
            const PI = SHA3_PI[t];
            curH = s[PI];
            curL = s[PI + 1];
            s[PI] = Th;
            s[PI + 1] = Tl;
        }
        // Chi (χ)
        for (let y = 0; y < 50; y += 10) {
            for (let x = 0; x < 10; x++)
                B[x] = s[y + x];
            for (let x = 0; x < 10; x++)
                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];
        }
        // Iota (ι)
        s[0] ^= SHA3_IOTA_H[round];
        s[1] ^= SHA3_IOTA_L[round];
    }
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.clean)(B);
}
/** Keccak sponge function. */
class Keccak extends _utils_js__WEBPACK_IMPORTED_MODULE_1__.Hash {
    // NOTE: we accept arguments in bytes instead of bits here.
    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {
        super();
        this.pos = 0;
        this.posOut = 0;
        this.finished = false;
        this.destroyed = false;
        this.enableXOF = false;
        this.blockLen = blockLen;
        this.suffix = suffix;
        this.outputLen = outputLen;
        this.enableXOF = enableXOF;
        this.rounds = rounds;
        // Can be passed from user as dkLen
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.anumber)(outputLen);
        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes
        // 0 < blockLen < 200
        if (!(0 < blockLen && blockLen < 200))
            throw new Error('only keccak-f1600 function is supported');
        this.state = new Uint8Array(200);
        this.state32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.u32)(this.state);
    }
    clone() {
        return this._cloneInto();
    }
    keccak() {
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.swap32IfBE)(this.state32);
        keccakP(this.state32, this.rounds);
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.swap32IfBE)(this.state32);
        this.posOut = 0;
        this.pos = 0;
    }
    update(data) {
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.aexists)(this);
        data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.toBytes)(data);
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.abytes)(data);
        const { blockLen, state } = this;
        const len = data.length;
        for (let pos = 0; pos < len;) {
            const take = Math.min(blockLen - this.pos, len - pos);
            for (let i = 0; i < take; i++)
                state[this.pos++] ^= data[pos++];
            if (this.pos === blockLen)
                this.keccak();
        }
        return this;
    }
    finish() {
        if (this.finished)
            return;
        this.finished = true;
        const { state, suffix, pos, blockLen } = this;
        // Do the padding
        state[pos] ^= suffix;
        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)
            this.keccak();
        state[blockLen - 1] ^= 0x80;
        this.keccak();
    }
    writeInto(out) {
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.aexists)(this, false);
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.abytes)(out);
        this.finish();
        const bufferOut = this.state;
        const { blockLen } = this;
        for (let pos = 0, len = out.length; pos < len;) {
            if (this.posOut >= blockLen)
                this.keccak();
            const take = Math.min(blockLen - this.posOut, len - pos);
            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);
            this.posOut += take;
            pos += take;
        }
        return out;
    }
    xofInto(out) {
        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF
        if (!this.enableXOF)
            throw new Error('XOF is not possible for this instance');
        return this.writeInto(out);
    }
    xof(bytes) {
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.anumber)(bytes);
        return this.xofInto(new Uint8Array(bytes));
    }
    digestInto(out) {
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.aoutput)(out, this);
        if (this.finished)
            throw new Error('digest() was already called');
        this.writeInto(out);
        this.destroy();
        return out;
    }
    digest() {
        return this.digestInto(new Uint8Array(this.outputLen));
    }
    destroy() {
        this.destroyed = true;
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.clean)(this.state);
    }
    _cloneInto(to) {
        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;
        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));
        to.state32.set(this.state32);
        to.pos = this.pos;
        to.posOut = this.posOut;
        to.finished = this.finished;
        to.rounds = rounds;
        // Suffix can change in cSHAKE
        to.suffix = suffix;
        to.outputLen = outputLen;
        to.enableXOF = enableXOF;
        to.destroyed = this.destroyed;
        return to;
    }
}
const gen = (suffix, blockLen, outputLen) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createHasher)(() => new Keccak(blockLen, suffix, outputLen));
/** SHA3-224 hash function. */
const sha3_224 = /* @__PURE__ */ (() => gen(0x06, 144, 224 / 8))();
/** SHA3-256 hash function. Different from keccak-256. */
const sha3_256 = /* @__PURE__ */ (() => gen(0x06, 136, 256 / 8))();
/** SHA3-384 hash function. */
const sha3_384 = /* @__PURE__ */ (() => gen(0x06, 104, 384 / 8))();
/** SHA3-512 hash function. */
const sha3_512 = /* @__PURE__ */ (() => gen(0x06, 72, 512 / 8))();
/** keccak-224 hash function. */
const keccak_224 = /* @__PURE__ */ (() => gen(0x01, 144, 224 / 8))();
/** keccak-256 hash function. Different from SHA3-256. */
const keccak_256 = /* @__PURE__ */ (() => gen(0x01, 136, 256 / 8))();
/** keccak-384 hash function. */
const keccak_384 = /* @__PURE__ */ (() => gen(0x01, 104, 384 / 8))();
/** keccak-512 hash function. */
const keccak_512 = /* @__PURE__ */ (() => gen(0x01, 72, 512 / 8))();
const genShake = (suffix, blockLen, outputLen) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createXOFer)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));
/** SHAKE128 XOF with 128-bit security. */
const shake128 = /* @__PURE__ */ (() => genShake(0x1f, 168, 128 / 8))();
/** SHAKE256 XOF with 256-bit security. */
const shake256 = /* @__PURE__ */ (() => genShake(0x1f, 136, 256 / 8))();
//# sourceMappingURL=sha3.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/@noble/hashes/esm/utils.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/@noble/hashes/esm/utils.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Hash: () => (/* binding */ Hash),
/* harmony export */   abytes: () => (/* binding */ abytes),
/* harmony export */   aexists: () => (/* binding */ aexists),
/* harmony export */   ahash: () => (/* binding */ ahash),
/* harmony export */   anumber: () => (/* binding */ anumber),
/* harmony export */   aoutput: () => (/* binding */ aoutput),
/* harmony export */   asyncLoop: () => (/* binding */ asyncLoop),
/* harmony export */   byteSwap: () => (/* binding */ byteSwap),
/* harmony export */   byteSwap32: () => (/* binding */ byteSwap32),
/* harmony export */   byteSwapIfBE: () => (/* binding */ byteSwapIfBE),
/* harmony export */   bytesToHex: () => (/* binding */ bytesToHex),
/* harmony export */   bytesToUtf8: () => (/* binding */ bytesToUtf8),
/* harmony export */   checkOpts: () => (/* binding */ checkOpts),
/* harmony export */   clean: () => (/* binding */ clean),
/* harmony export */   concatBytes: () => (/* binding */ concatBytes),
/* harmony export */   createHasher: () => (/* binding */ createHasher),
/* harmony export */   createOptHasher: () => (/* binding */ createOptHasher),
/* harmony export */   createView: () => (/* binding */ createView),
/* harmony export */   createXOFer: () => (/* binding */ createXOFer),
/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),
/* harmony export */   isBytes: () => (/* binding */ isBytes),
/* harmony export */   isLE: () => (/* binding */ isLE),
/* harmony export */   kdfInputToBytes: () => (/* binding */ kdfInputToBytes),
/* harmony export */   nextTick: () => (/* binding */ nextTick),
/* harmony export */   randomBytes: () => (/* binding */ randomBytes),
/* harmony export */   rotl: () => (/* binding */ rotl),
/* harmony export */   rotr: () => (/* binding */ rotr),
/* harmony export */   swap32IfBE: () => (/* binding */ swap32IfBE),
/* harmony export */   swap8IfBE: () => (/* binding */ swap8IfBE),
/* harmony export */   toBytes: () => (/* binding */ toBytes),
/* harmony export */   u32: () => (/* binding */ u32),
/* harmony export */   u8: () => (/* binding */ u8),
/* harmony export */   utf8ToBytes: () => (/* binding */ utf8ToBytes),
/* harmony export */   wrapConstructor: () => (/* binding */ wrapConstructor),
/* harmony export */   wrapConstructorWithOpts: () => (/* binding */ wrapConstructorWithOpts),
/* harmony export */   wrapXOFConstructorWithOpts: () => (/* binding */ wrapXOFConstructorWithOpts)
/* harmony export */ });
/* harmony import */ var _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/crypto */ "./node_modules/@walletconnect/ethereum-provider/node_modules/@noble/hashes/esm/crypto.js");
/**
 * Utilities for hex, bytes, CSPRNG.
 * @module
 */
/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.
// node.js versions earlier than v19 don't declare it in global scope.
// For node.js, package.json#exports field mapping rewrites import
// from `crypto` to `cryptoNode`, which imports native module.
// Makes the utils un-importable in browsers without a bundler.
// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.

/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */
function isBytes(a) {
    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');
}
/** Asserts something is positive integer. */
function anumber(n) {
    if (!Number.isSafeInteger(n) || n < 0)
        throw new Error('positive integer expected, got ' + n);
}
/** Asserts something is Uint8Array. */
function abytes(b, ...lengths) {
    if (!isBytes(b))
        throw new Error('Uint8Array expected');
    if (lengths.length > 0 && !lengths.includes(b.length))
        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);
}
/** Asserts something is hash */
function ahash(h) {
    if (typeof h !== 'function' || typeof h.create !== 'function')
        throw new Error('Hash should be wrapped by utils.createHasher');
    anumber(h.outputLen);
    anumber(h.blockLen);
}
/** Asserts a hash instance has not been destroyed / finished */
function aexists(instance, checkFinished = true) {
    if (instance.destroyed)
        throw new Error('Hash instance has been destroyed');
    if (checkFinished && instance.finished)
        throw new Error('Hash#digest() has already been called');
}
/** Asserts output is properly-sized byte array */
function aoutput(out, instance) {
    abytes(out);
    const min = instance.outputLen;
    if (out.length < min) {
        throw new Error('digestInto() expects output buffer of length at least ' + min);
    }
}
/** Cast u8 / u16 / u32 to u8. */
function u8(arr) {
    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);
}
/** Cast u8 / u16 / u32 to u32. */
function u32(arr) {
    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));
}
/** Zeroize a byte array. Warning: JS provides no guarantees. */
function clean(...arrays) {
    for (let i = 0; i < arrays.length; i++) {
        arrays[i].fill(0);
    }
}
/** Create DataView of an array for easy byte-level manipulation. */
function createView(arr) {
    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);
}
/** The rotate right (circular right shift) operation for uint32 */
function rotr(word, shift) {
    return (word << (32 - shift)) | (word >>> shift);
}
/** The rotate left (circular left shift) operation for uint32 */
function rotl(word, shift) {
    return (word << shift) | ((word >>> (32 - shift)) >>> 0);
}
/** Is current platform little-endian? Most are. Big-Endian platform: IBM */
const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();
/** The byte swap operation for uint32 */
function byteSwap(word) {
    return (((word << 24) & 0xff000000) |
        ((word << 8) & 0xff0000) |
        ((word >>> 8) & 0xff00) |
        ((word >>> 24) & 0xff));
}
/** Conditionally byte swap if on a big-endian platform */
const swap8IfBE = isLE
    ? (n) => n
    : (n) => byteSwap(n);
/** @deprecated */
const byteSwapIfBE = swap8IfBE;
/** In place byte swap for Uint32Array */
function byteSwap32(arr) {
    for (let i = 0; i < arr.length; i++) {
        arr[i] = byteSwap(arr[i]);
    }
    return arr;
}
const swap32IfBE = isLE
    ? (u) => u
    : byteSwap32;
// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex
const hasHexBuiltin = /* @__PURE__ */ (() => 
// @ts-ignore
typeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();
// Array where index 0xf0 (240) is mapped to string 'f0'
const hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));
/**
 * Convert byte array to hex string. Uses built-in function, when available.
 * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'
 */
function bytesToHex(bytes) {
    abytes(bytes);
    // @ts-ignore
    if (hasHexBuiltin)
        return bytes.toHex();
    // pre-caching improves the speed 6x
    let hex = '';
    for (let i = 0; i < bytes.length; i++) {
        hex += hexes[bytes[i]];
    }
    return hex;
}
// We use optimized technique to convert hex string to byte array
const asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };
function asciiToBase16(ch) {
    if (ch >= asciis._0 && ch <= asciis._9)
        return ch - asciis._0; // '2' => 50-48
    if (ch >= asciis.A && ch <= asciis.F)
        return ch - (asciis.A - 10); // 'B' => 66-(65-10)
    if (ch >= asciis.a && ch <= asciis.f)
        return ch - (asciis.a - 10); // 'b' => 98-(97-10)
    return;
}
/**
 * Convert hex string to byte array. Uses built-in function, when available.
 * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])
 */
function hexToBytes(hex) {
    if (typeof hex !== 'string')
        throw new Error('hex string expected, got ' + typeof hex);
    // @ts-ignore
    if (hasHexBuiltin)
        return Uint8Array.fromHex(hex);
    const hl = hex.length;
    const al = hl / 2;
    if (hl % 2)
        throw new Error('hex string expected, got unpadded hex of length ' + hl);
    const array = new Uint8Array(al);
    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {
        const n1 = asciiToBase16(hex.charCodeAt(hi));
        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));
        if (n1 === undefined || n2 === undefined) {
            const char = hex[hi] + hex[hi + 1];
            throw new Error('hex string expected, got non-hex character "' + char + '" at index ' + hi);
        }
        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163
    }
    return array;
}
/**
 * There is no setImmediate in browser and setTimeout is slow.
 * Call of async fn will return Promise, which will be fullfiled only on
 * next scheduler queue processing step and this is exactly what we need.
 */
const nextTick = async () => { };
/** Returns control to thread each 'tick' ms to avoid blocking. */
async function asyncLoop(iters, tick, cb) {
    let ts = Date.now();
    for (let i = 0; i < iters; i++) {
        cb(i);
        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too
        const diff = Date.now() - ts;
        if (diff >= 0 && diff < tick)
            continue;
        await nextTick();
        ts += diff;
    }
}
/**
 * Converts string to bytes using UTF8 encoding.
 * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])
 */
function utf8ToBytes(str) {
    if (typeof str !== 'string')
        throw new Error('string expected');
    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809
}
/**
 * Converts bytes to string using UTF8 encoding.
 * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'
 */
function bytesToUtf8(bytes) {
    return new TextDecoder().decode(bytes);
}
/**
 * Normalizes (non-hex) string or Uint8Array to Uint8Array.
 * Warning: when Uint8Array is passed, it would NOT get copied.
 * Keep in mind for future mutable operations.
 */
function toBytes(data) {
    if (typeof data === 'string')
        data = utf8ToBytes(data);
    abytes(data);
    return data;
}
/**
 * Helper for KDFs: consumes uint8array or string.
 * When string is passed, does utf8 decoding, using TextDecoder.
 */
function kdfInputToBytes(data) {
    if (typeof data === 'string')
        data = utf8ToBytes(data);
    abytes(data);
    return data;
}
/** Copies several Uint8Arrays into one. */
function concatBytes(...arrays) {
    let sum = 0;
    for (let i = 0; i < arrays.length; i++) {
        const a = arrays[i];
        abytes(a);
        sum += a.length;
    }
    const res = new Uint8Array(sum);
    for (let i = 0, pad = 0; i < arrays.length; i++) {
        const a = arrays[i];
        res.set(a, pad);
        pad += a.length;
    }
    return res;
}
function checkOpts(defaults, opts) {
    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')
        throw new Error('options should be object or undefined');
    const merged = Object.assign(defaults, opts);
    return merged;
}
/** For runtime check if class implements interface */
class Hash {
}
/** Wraps hash function, creating an interface on top of it */
function createHasher(hashCons) {
    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();
    const tmp = hashCons();
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = () => hashCons();
    return hashC;
}
function createOptHasher(hashCons) {
    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();
    const tmp = hashCons({});
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = (opts) => hashCons(opts);
    return hashC;
}
function createXOFer(hashCons) {
    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();
    const tmp = hashCons({});
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = (opts) => hashCons(opts);
    return hashC;
}
const wrapConstructor = createHasher;
const wrapConstructorWithOpts = createOptHasher;
const wrapXOFConstructorWithOpts = createXOFer;
/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */
function randomBytes(bytesLength = 32) {
    if (_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto && typeof _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.getRandomValues === 'function') {
        return _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.getRandomValues(new Uint8Array(bytesLength));
    }
    // Legacy Node.js compatibility
    if (_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto && typeof _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.randomBytes === 'function') {
        return Uint8Array.from(_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.randomBytes(bytesLength));
    }
    throw new Error('crypto.getRandomValues must be defined');
}
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/@scure/base/lib/esm/index.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/@scure/base/lib/esm/index.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   base16: () => (/* binding */ base16),
/* harmony export */   base32: () => (/* binding */ base32),
/* harmony export */   base32crockford: () => (/* binding */ base32crockford),
/* harmony export */   base32hex: () => (/* binding */ base32hex),
/* harmony export */   base32hexnopad: () => (/* binding */ base32hexnopad),
/* harmony export */   base32nopad: () => (/* binding */ base32nopad),
/* harmony export */   base58: () => (/* binding */ base58),
/* harmony export */   base58check: () => (/* binding */ base58check),
/* harmony export */   base58flickr: () => (/* binding */ base58flickr),
/* harmony export */   base58xmr: () => (/* binding */ base58xmr),
/* harmony export */   base58xrp: () => (/* binding */ base58xrp),
/* harmony export */   base64: () => (/* binding */ base64),
/* harmony export */   base64nopad: () => (/* binding */ base64nopad),
/* harmony export */   base64url: () => (/* binding */ base64url),
/* harmony export */   base64urlnopad: () => (/* binding */ base64urlnopad),
/* harmony export */   bech32: () => (/* binding */ bech32),
/* harmony export */   bech32m: () => (/* binding */ bech32m),
/* harmony export */   bytes: () => (/* binding */ bytes),
/* harmony export */   bytesToString: () => (/* binding */ bytesToString),
/* harmony export */   createBase58check: () => (/* binding */ createBase58check),
/* harmony export */   hex: () => (/* binding */ hex),
/* harmony export */   str: () => (/* binding */ str),
/* harmony export */   stringToBytes: () => (/* binding */ stringToBytes),
/* harmony export */   utf8: () => (/* binding */ utf8),
/* harmony export */   utils: () => (/* binding */ utils)
/* harmony export */ });
/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */
function isBytes(a) {
    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');
}
/** Asserts something is Uint8Array. */
function abytes(b, ...lengths) {
    if (!isBytes(b))
        throw new Error('Uint8Array expected');
    if (lengths.length > 0 && !lengths.includes(b.length))
        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);
}
function isArrayOf(isString, arr) {
    if (!Array.isArray(arr))
        return false;
    if (arr.length === 0)
        return true;
    if (isString) {
        return arr.every((item) => typeof item === 'string');
    }
    else {
        return arr.every((item) => Number.isSafeInteger(item));
    }
}
// no abytes: seems to have 10% slowdown. Why?!
function afn(input) {
    if (typeof input !== 'function')
        throw new Error('function expected');
    return true;
}
function astr(label, input) {
    if (typeof input !== 'string')
        throw new Error(`${label}: string expected`);
    return true;
}
function anumber(n) {
    if (!Number.isSafeInteger(n))
        throw new Error(`invalid integer: ${n}`);
}
function aArr(input) {
    if (!Array.isArray(input))
        throw new Error('array expected');
}
function astrArr(label, input) {
    if (!isArrayOf(true, input))
        throw new Error(`${label}: array of strings expected`);
}
function anumArr(label, input) {
    if (!isArrayOf(false, input))
        throw new Error(`${label}: array of numbers expected`);
}
/**
 * @__NO_SIDE_EFFECTS__
 */
function chain(...args) {
    const id = (a) => a;
    // Wrap call in closure so JIT can inline calls
    const wrap = (a, b) => (c) => a(b(c));
    // Construct chain of args[-1].encode(args[-2].encode([...]))
    const encode = args.map((x) => x.encode).reduceRight(wrap, id);
    // Construct chain of args[0].decode(args[1].decode(...))
    const decode = args.map((x) => x.decode).reduce(wrap, id);
    return { encode, decode };
}
/**
 * Encodes integer radix representation to array of strings using alphabet and back.
 * Could also be array of strings.
 * @__NO_SIDE_EFFECTS__
 */
function alphabet(letters) {
    // mapping 1 to "b"
    const lettersA = typeof letters === 'string' ? letters.split('') : letters;
    const len = lettersA.length;
    astrArr('alphabet', lettersA);
    // mapping "b" to 1
    const indexes = new Map(lettersA.map((l, i) => [l, i]));
    return {
        encode: (digits) => {
            aArr(digits);
            return digits.map((i) => {
                if (!Number.isSafeInteger(i) || i < 0 || i >= len)
                    throw new Error(`alphabet.encode: digit index outside alphabet "${i}". Allowed: ${letters}`);
                return lettersA[i];
            });
        },
        decode: (input) => {
            aArr(input);
            return input.map((letter) => {
                astr('alphabet.decode', letter);
                const i = indexes.get(letter);
                if (i === undefined)
                    throw new Error(`Unknown letter: "${letter}". Allowed: ${letters}`);
                return i;
            });
        },
    };
}
/**
 * @__NO_SIDE_EFFECTS__
 */
function join(separator = '') {
    astr('join', separator);
    return {
        encode: (from) => {
            astrArr('join.decode', from);
            return from.join(separator);
        },
        decode: (to) => {
            astr('join.decode', to);
            return to.split(separator);
        },
    };
}
/**
 * Pad strings array so it has integer number of bits
 * @__NO_SIDE_EFFECTS__
 */
function padding(bits, chr = '=') {
    anumber(bits);
    astr('padding', chr);
    return {
        encode(data) {
            astrArr('padding.encode', data);
            while ((data.length * bits) % 8)
                data.push(chr);
            return data;
        },
        decode(input) {
            astrArr('padding.decode', input);
            let end = input.length;
            if ((end * bits) % 8)
                throw new Error('padding: invalid, string should have whole number of bytes');
            for (; end > 0 && input[end - 1] === chr; end--) {
                const last = end - 1;
                const byte = last * bits;
                if (byte % 8 === 0)
                    throw new Error('padding: invalid, string has too much padding');
            }
            return input.slice(0, end);
        },
    };
}
/**
 * @__NO_SIDE_EFFECTS__
 */
function normalize(fn) {
    afn(fn);
    return { encode: (from) => from, decode: (to) => fn(to) };
}
/**
 * Slow: O(n^2) time complexity
 */
function convertRadix(data, from, to) {
    // base 1 is impossible
    if (from < 2)
        throw new Error(`convertRadix: invalid from=${from}, base cannot be less than 2`);
    if (to < 2)
        throw new Error(`convertRadix: invalid to=${to}, base cannot be less than 2`);
    aArr(data);
    if (!data.length)
        return [];
    let pos = 0;
    const res = [];
    const digits = Array.from(data, (d) => {
        anumber(d);
        if (d < 0 || d >= from)
            throw new Error(`invalid integer: ${d}`);
        return d;
    });
    const dlen = digits.length;
    while (true) {
        let carry = 0;
        let done = true;
        for (let i = pos; i < dlen; i++) {
            const digit = digits[i];
            const fromCarry = from * carry;
            const digitBase = fromCarry + digit;
            if (!Number.isSafeInteger(digitBase) ||
                fromCarry / from !== carry ||
                digitBase - digit !== fromCarry) {
                throw new Error('convertRadix: carry overflow');
            }
            const div = digitBase / to;
            carry = digitBase % to;
            const rounded = Math.floor(div);
            digits[i] = rounded;
            if (!Number.isSafeInteger(rounded) || rounded * to + carry !== digitBase)
                throw new Error('convertRadix: carry overflow');
            if (!done)
                continue;
            else if (!rounded)
                pos = i;
            else
                done = false;
        }
        res.push(carry);
        if (done)
            break;
    }
    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)
        res.push(0);
    return res.reverse();
}
const gcd = (a, b) => (b === 0 ? a : gcd(b, a % b));
const radix2carry = /* @__NO_SIDE_EFFECTS__ */ (from, to) => from + (to - gcd(from, to));
const powers = /* @__PURE__ */ (() => {
    let res = [];
    for (let i = 0; i < 40; i++)
        res.push(2 ** i);
    return res;
})();
/**
 * Implemented with numbers, because BigInt is 5x slower
 */
function convertRadix2(data, from, to, padding) {
    aArr(data);
    if (from <= 0 || from > 32)
        throw new Error(`convertRadix2: wrong from=${from}`);
    if (to <= 0 || to > 32)
        throw new Error(`convertRadix2: wrong to=${to}`);
    if (radix2carry(from, to) > 32) {
        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);
    }
    let carry = 0;
    let pos = 0; // bitwise position in current element
    const max = powers[from];
    const mask = powers[to] - 1;
    const res = [];
    for (const n of data) {
        anumber(n);
        if (n >= max)
            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);
        carry = (carry << from) | n;
        if (pos + from > 32)
            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);
        pos += from;
        for (; pos >= to; pos -= to)
            res.push(((carry >> (pos - to)) & mask) >>> 0);
        const pow = powers[pos];
        if (pow === undefined)
            throw new Error('invalid carry');
        carry &= pow - 1; // clean carry, otherwise it will cause overflow
    }
    carry = (carry << (to - pos)) & mask;
    if (!padding && pos >= from)
        throw new Error('Excess padding');
    if (!padding && carry > 0)
        throw new Error(`Non-zero padding: ${carry}`);
    if (padding && pos > 0)
        res.push(carry >>> 0);
    return res;
}
/**
 * @__NO_SIDE_EFFECTS__
 */
function radix(num) {
    anumber(num);
    const _256 = 2 ** 8;
    return {
        encode: (bytes) => {
            if (!isBytes(bytes))
                throw new Error('radix.encode input should be Uint8Array');
            return convertRadix(Array.from(bytes), _256, num);
        },
        decode: (digits) => {
            anumArr('radix.decode', digits);
            return Uint8Array.from(convertRadix(digits, num, _256));
        },
    };
}
/**
 * If both bases are power of same number (like `2**8 <-> 2**64`),
 * there is a linear algorithm. For now we have implementation for power-of-two bases only.
 * @__NO_SIDE_EFFECTS__
 */
function radix2(bits, revPadding = false) {
    anumber(bits);
    if (bits <= 0 || bits > 32)
        throw new Error('radix2: bits should be in (0..32]');
    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)
        throw new Error('radix2: carry overflow');
    return {
        encode: (bytes) => {
            if (!isBytes(bytes))
                throw new Error('radix2.encode input should be Uint8Array');
            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);
        },
        decode: (digits) => {
            anumArr('radix2.decode', digits);
            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));
        },
    };
}
function unsafeWrapper(fn) {
    afn(fn);
    return function (...args) {
        try {
            return fn.apply(null, args);
        }
        catch (e) { }
    };
}
function checksum(len, fn) {
    anumber(len);
    afn(fn);
    return {
        encode(data) {
            if (!isBytes(data))
                throw new Error('checksum.encode: input should be Uint8Array');
            const sum = fn(data).slice(0, len);
            const res = new Uint8Array(data.length + len);
            res.set(data);
            res.set(sum, data.length);
            return res;
        },
        decode(data) {
            if (!isBytes(data))
                throw new Error('checksum.decode: input should be Uint8Array');
            const payload = data.slice(0, -len);
            const oldChecksum = data.slice(-len);
            const newChecksum = fn(payload).slice(0, len);
            for (let i = 0; i < len; i++)
                if (newChecksum[i] !== oldChecksum[i])
                    throw new Error('Invalid checksum');
            return payload;
        },
    };
}
// prettier-ignore
const utils = {
    alphabet, chain, checksum, convertRadix, convertRadix2, radix, radix2, join, padding,
};
// RFC 4648 aka RFC 3548
// ---------------------
/**
 * base16 encoding from RFC 4648.
 * @example
 * ```js
 * base16.encode(Uint8Array.from([0x12, 0xab]));
 * // => '12AB'
 * ```
 */
const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));
/**
 * base32 encoding from RFC 4648. Has padding.
 * Use `base32nopad` for unpadded version.
 * Also check out `base32hex`, `base32hexnopad`, `base32crockford`.
 * @example
 * ```js
 * base32.encode(Uint8Array.from([0x12, 0xab]));
 * // => 'CKVQ===='
 * base32.decode('CKVQ====');
 * // => Uint8Array.from([0x12, 0xab])
 * ```
 */
const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));
/**
 * base32 encoding from RFC 4648. No padding.
 * Use `base32` for padded version.
 * Also check out `base32hex`, `base32hexnopad`, `base32crockford`.
 * @example
 * ```js
 * base32nopad.encode(Uint8Array.from([0x12, 0xab]));
 * // => 'CKVQ'
 * base32nopad.decode('CKVQ');
 * // => Uint8Array.from([0x12, 0xab])
 * ```
 */
const base32nopad = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), join(''));
/**
 * base32 encoding from RFC 4648. Padded. Compared to ordinary `base32`, slightly different alphabet.
 * Use `base32hexnopad` for unpadded version.
 * @example
 * ```js
 * base32hex.encode(Uint8Array.from([0x12, 0xab]));
 * // => '2ALG===='
 * base32hex.decode('2ALG====');
 * // => Uint8Array.from([0x12, 0xab])
 * ```
 */
const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));
/**
 * base32 encoding from RFC 4648. No padding. Compared to ordinary `base32`, slightly different alphabet.
 * Use `base32hex` for padded version.
 * @example
 * ```js
 * base32hexnopad.encode(Uint8Array.from([0x12, 0xab]));
 * // => '2ALG'
 * base32hexnopad.decode('2ALG');
 * // => Uint8Array.from([0x12, 0xab])
 * ```
 */
const base32hexnopad = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), join(''));
/**
 * base32 encoding from RFC 4648. Doug Crockford's version.
 * https://www.crockford.com/base32.html
 * @example
 * ```js
 * base32crockford.encode(Uint8Array.from([0x12, 0xab]));
 * // => '2ANG'
 * base32crockford.decode('2ANG');
 * // => Uint8Array.from([0x12, 0xab])
 * ```
 */
const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));
// Built-in base64 conversion https://caniuse.com/mdn-javascript_builtins_uint8array_frombase64
// prettier-ignore
const hasBase64Builtin = /* @__PURE__ */ (() => typeof Uint8Array.from([]).toBase64 === 'function' &&
    typeof Uint8Array.fromBase64 === 'function')();
const decodeBase64Builtin = (s, isUrl) => {
    astr('base64', s);
    const re = isUrl ? /^[A-Za-z0-9=_-]+$/ : /^[A-Za-z0-9=+/]+$/;
    const alphabet = isUrl ? 'base64url' : 'base64';
    if (s.length > 0 && !re.test(s))
        throw new Error('invalid base64');
    return Uint8Array.fromBase64(s, { alphabet, lastChunkHandling: 'strict' });
};
/**
 * base64 from RFC 4648. Padded.
 * Use `base64nopad` for unpadded version.
 * Also check out `base64url`, `base64urlnopad`.
 * Falls back to built-in function, when available.
 * @example
 * ```js
 * base64.encode(Uint8Array.from([0x12, 0xab]));
 * // => 'Eqs='
 * base64.decode('Eqs=');
 * // => Uint8Array.from([0x12, 0xab])
 * ```
 */
// prettier-ignore
const base64 = hasBase64Builtin ? {
    encode(b) { abytes(b); return b.toBase64(); },
    decode(s) { return decodeBase64Builtin(s, false); },
} : chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));
/**
 * base64 from RFC 4648. No padding.
 * Use `base64` for padded version.
 * @example
 * ```js
 * base64nopad.encode(Uint8Array.from([0x12, 0xab]));
 * // => 'Eqs'
 * base64nopad.decode('Eqs');
 * // => Uint8Array.from([0x12, 0xab])
 * ```
 */
const base64nopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), join(''));
/**
 * base64 from RFC 4648, using URL-safe alphabet. Padded.
 * Use `base64urlnopad` for unpadded version.
 * Falls back to built-in function, when available.
 * @example
 * ```js
 * base64url.encode(Uint8Array.from([0x12, 0xab]));
 * // => 'Eqs='
 * base64url.decode('Eqs=');
 * // => Uint8Array.from([0x12, 0xab])
 * ```
 */
// prettier-ignore
const base64url = hasBase64Builtin ? {
    encode(b) { abytes(b); return b.toBase64({ alphabet: 'base64url' }); },
    decode(s) { return decodeBase64Builtin(s, true); },
} : chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));
/**
 * base64 from RFC 4648, using URL-safe alphabet. No padding.
 * Use `base64url` for padded version.
 * @example
 * ```js
 * base64urlnopad.encode(Uint8Array.from([0x12, 0xab]));
 * // => 'Eqs'
 * base64urlnopad.decode('Eqs');
 * // => Uint8Array.from([0x12, 0xab])
 * ```
 */
const base64urlnopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), join(''));
// base58 code
// -----------
const genBase58 = /* @__NO_SIDE_EFFECTS__ */ (abc) => chain(radix(58), alphabet(abc), join(''));
/**
 * base58: base64 without ambigous characters +, /, 0, O, I, l.
 * Quadratic (O(n^2)) - so, can't be used on large inputs.
 * @example
 * ```js
 * base58.decode('01abcdef');
 * // => '3UhJW'
 * ```
 */
const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');
/**
 * base58: flickr version. Check out `base58`.
 */
const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');
/**
 * base58: XRP version. Check out `base58`.
 */
const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');
// Data len (index) -> encoded block len
const XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];
/**
 * base58: XMR version. Check out `base58`.
 * Done in 8-byte blocks (which equals 11 chars in decoding). Last (non-full) block padded with '1' to size in XMR_BLOCK_LEN.
 * Block encoding significantly reduces quadratic complexity of base58.
 */
const base58xmr = {
    encode(data) {
        let res = '';
        for (let i = 0; i < data.length; i += 8) {
            const block = data.subarray(i, i + 8);
            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');
        }
        return res;
    },
    decode(str) {
        let res = [];
        for (let i = 0; i < str.length; i += 11) {
            const slice = str.slice(i, i + 11);
            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);
            const block = base58.decode(slice);
            for (let j = 0; j < block.length - blockLen; j++) {
                if (block[j] !== 0)
                    throw new Error('base58xmr: wrong padding');
            }
            res = res.concat(Array.from(block.slice(block.length - blockLen)));
        }
        return Uint8Array.from(res);
    },
};
/**
 * Method, which creates base58check encoder.
 * Requires function, calculating sha256.
 */
const createBase58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);
/**
 * Use `createBase58check` instead.
 * @deprecated
 */
const base58check = createBase58check;
const BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));
const POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];
function bech32Polymod(pre) {
    const b = pre >> 25;
    let chk = (pre & 0x1ffffff) << 5;
    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {
        if (((b >> i) & 1) === 1)
            chk ^= POLYMOD_GENERATORS[i];
    }
    return chk;
}
function bechChecksum(prefix, words, encodingConst = 1) {
    const len = prefix.length;
    let chk = 1;
    for (let i = 0; i < len; i++) {
        const c = prefix.charCodeAt(i);
        if (c < 33 || c > 126)
            throw new Error(`Invalid prefix (${prefix})`);
        chk = bech32Polymod(chk) ^ (c >> 5);
    }
    chk = bech32Polymod(chk);
    for (let i = 0; i < len; i++)
        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);
    for (let v of words)
        chk = bech32Polymod(chk) ^ v;
    for (let i = 0; i < 6; i++)
        chk = bech32Polymod(chk);
    chk ^= encodingConst;
    return BECH_ALPHABET.encode(convertRadix2([chk % powers[30]], 30, 5, false));
}
/**
 * @__NO_SIDE_EFFECTS__
 */
function genBech32(encoding) {
    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;
    const _words = radix2(5);
    const fromWords = _words.decode;
    const toWords = _words.encode;
    const fromWordsUnsafe = unsafeWrapper(fromWords);
    function encode(prefix, words, limit = 90) {
        astr('bech32.encode prefix', prefix);
        if (isBytes(words))
            words = Array.from(words);
        anumArr('bech32.encode', words);
        const plen = prefix.length;
        if (plen === 0)
            throw new TypeError(`Invalid prefix length ${plen}`);
        const actualLength = plen + 7 + words.length;
        if (limit !== false && actualLength > limit)
            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);
        const lowered = prefix.toLowerCase();
        const sum = bechChecksum(lowered, words, ENCODING_CONST);
        return `${lowered}1${BECH_ALPHABET.encode(words)}${sum}`;
    }
    function decode(str, limit = 90) {
        astr('bech32.decode input', str);
        const slen = str.length;
        if (slen < 8 || (limit !== false && slen > limit))
            throw new TypeError(`invalid string length: ${slen} (${str}). Expected (8..${limit})`);
        // don't allow mixed case
        const lowered = str.toLowerCase();
        if (str !== lowered && str !== str.toUpperCase())
            throw new Error(`String must be lowercase or uppercase`);
        const sepIndex = lowered.lastIndexOf('1');
        if (sepIndex === 0 || sepIndex === -1)
            throw new Error(`Letter "1" must be present between prefix and data only`);
        const prefix = lowered.slice(0, sepIndex);
        const data = lowered.slice(sepIndex + 1);
        if (data.length < 6)
            throw new Error('Data must be at least 6 characters long');
        const words = BECH_ALPHABET.decode(data).slice(0, -6);
        const sum = bechChecksum(prefix, words, ENCODING_CONST);
        if (!data.endsWith(sum))
            throw new Error(`Invalid checksum in ${str}: expected "${sum}"`);
        return { prefix, words };
    }
    const decodeUnsafe = unsafeWrapper(decode);
    function decodeToBytes(str) {
        const { prefix, words } = decode(str, false);
        return { prefix, words, bytes: fromWords(words) };
    }
    function encodeFromBytes(prefix, bytes) {
        return encode(prefix, toWords(bytes));
    }
    return {
        encode,
        decode,
        encodeFromBytes,
        decodeToBytes,
        decodeUnsafe,
        fromWords,
        fromWordsUnsafe,
        toWords,
    };
}
/**
 * bech32 from BIP 173. Operates on words.
 * For high-level, check out scure-btc-signer:
 * https://github.com/paulmillr/scure-btc-signer.
 */
const bech32 = genBech32('bech32');
/**
 * bech32m from BIP 350. Operates on words.
 * It was to mitigate `bech32` weaknesses.
 * For high-level, check out scure-btc-signer:
 * https://github.com/paulmillr/scure-btc-signer.
 */
const bech32m = genBech32('bech32m');
/**
 * UTF-8-to-byte decoder. Uses built-in TextDecoder / TextEncoder.
 * @example
 * ```js
 * const b = utf8.decode("hey"); // => new Uint8Array([ 104, 101, 121 ])
 * const str = utf8.encode(b); // "hey"
 * ```
 */
const utf8 = {
    encode: (data) => new TextDecoder().decode(data),
    decode: (str) => new TextEncoder().encode(str),
};
// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex
// prettier-ignore
const hasHexBuiltin = /* @__PURE__ */ (() => typeof Uint8Array.from([]).toHex === 'function' &&
    typeof Uint8Array.fromHex === 'function')();
// prettier-ignore
const hexBuiltin = {
    encode(data) { abytes(data); return data.toHex(); },
    decode(s) { astr('hex', s); return Uint8Array.fromHex(s); },
};
/**
 * hex string decoder. Uses built-in function, when available.
 * @example
 * ```js
 * const b = hex.decode("0102ff"); // => new Uint8Array([ 1, 2, 255 ])
 * const str = hex.encode(b); // "0102ff"
 * ```
 */
const hex = hasHexBuiltin
    ? hexBuiltin
    : chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {
        if (typeof s !== 'string' || s.length % 2 !== 0)
            throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);
        return s.toLowerCase();
    }));
// prettier-ignore
const CODERS = {
    utf8, hex, base16, base32, base64, base64url, base58, base58xmr
};
const coderTypeError = 'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';
/** @deprecated */
const bytesToString = (type, bytes) => {
    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))
        throw new TypeError(coderTypeError);
    if (!isBytes(bytes))
        throw new TypeError('bytesToString() expects Uint8Array');
    return CODERS[type].encode(bytes);
};
/** @deprecated */
const str = bytesToString; // as in python, but for bytes only
/** @deprecated */
const stringToBytes = (type, str) => {
    if (!CODERS.hasOwnProperty(type))
        throw new TypeError(coderTypeError);
    if (typeof str !== 'string')
        throw new TypeError('stringToBytes() expects string');
    return CODERS[type].decode(str);
};
/** @deprecated */
const bytes = stringToBytes;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/@walletconnect/utils/dist/index.es.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/@walletconnect/utils/dist/index.es.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BASE10: () => (/* binding */ $n),
/* harmony export */   BASE16: () => (/* binding */ tt),
/* harmony export */   BASE64: () => (/* binding */ Qt),
/* harmony export */   BASE64URL: () => (/* binding */ De),
/* harmony export */   COLON: () => (/* binding */ Hs),
/* harmony export */   DEFAULT_DEPTH: () => (/* binding */ We),
/* harmony export */   EMPTY_SPACE: () => (/* binding */ Ee),
/* harmony export */   ENV_MAP: () => (/* binding */ J),
/* harmony export */   INTERNAL_ERRORS: () => (/* binding */ Qo),
/* harmony export */   LimitedSet: () => (/* binding */ gi),
/* harmony export */   MemoryStore: () => (/* binding */ Ha),
/* harmony export */   ONE_THOUSAND: () => (/* binding */ Ds),
/* harmony export */   REACT_NATIVE_PRODUCT: () => (/* binding */ er),
/* harmony export */   RELAYER_DEFAULT_PROTOCOL: () => (/* binding */ Mo),
/* harmony export */   SDK_ERRORS: () => (/* binding */ Jo),
/* harmony export */   SDK_TYPE: () => (/* binding */ rr),
/* harmony export */   SLASH: () => (/* binding */ nr),
/* harmony export */   TYPE_0: () => (/* binding */ Cn),
/* harmony export */   TYPE_1: () => (/* binding */ ee),
/* harmony export */   TYPE_2: () => (/* binding */ ge),
/* harmony export */   UTF8: () => (/* binding */ te),
/* harmony export */   addResourceToRecap: () => (/* binding */ Yr),
/* harmony export */   addSignatureToExtrinsic: () => (/* binding */ bs),
/* harmony export */   appendToQueryString: () => (/* binding */ or),
/* harmony export */   assertType: () => (/* binding */ Zs),
/* harmony export */   assignAbilityToActions: () => (/* binding */ hn),
/* harmony export */   base64Decode: () => (/* binding */ Zr),
/* harmony export */   base64Encode: () => (/* binding */ Gr),
/* harmony export */   buildApprovedNamespaces: () => (/* binding */ pa),
/* harmony export */   buildAuthObject: () => (/* binding */ mf),
/* harmony export */   buildNamespacesFromAuth: () => (/* binding */ ga),
/* harmony export */   buildRecapStatement: () => (/* binding */ Jr),
/* harmony export */   buildSignedExtrinsicHash: () => (/* binding */ Ka),
/* harmony export */   calcExpiry: () => (/* binding */ ii),
/* harmony export */   capitalize: () => (/* binding */ ti),
/* harmony export */   capitalizeWord: () => (/* binding */ lr),
/* harmony export */   createDelayedPromise: () => (/* binding */ ei),
/* harmony export */   createEncodedRecap: () => (/* binding */ Ef),
/* harmony export */   createExpiringPromise: () => (/* binding */ ni),
/* harmony export */   createRecap: () => (/* binding */ Wr),
/* harmony export */   decodeRecap: () => (/* binding */ Lt),
/* harmony export */   decodeTypeByte: () => (/* binding */ Vt),
/* harmony export */   decodeTypeTwoEnvelope: () => (/* binding */ Yc),
/* harmony export */   decrypt: () => (/* binding */ Zc),
/* harmony export */   deriveExtrinsicHash: () => (/* binding */ ys),
/* harmony export */   deriveSymKey: () => (/* binding */ Kc),
/* harmony export */   deserialize: () => (/* binding */ Me),
/* harmony export */   encodeRecap: () => (/* binding */ Ne),
/* harmony export */   encodeTypeByte: () => (/* binding */ jn),
/* harmony export */   encodeTypeTwoEnvelope: () => (/* binding */ Wc),
/* harmony export */   encrypt: () => (/* binding */ Gc),
/* harmony export */   engineEvent: () => (/* binding */ ci),
/* harmony export */   enumify: () => (/* binding */ Qs),
/* harmony export */   extractSolanaTransactionId: () => (/* binding */ sf),
/* harmony export */   formatAccountId: () => (/* binding */ Zn),
/* harmony export */   formatAccountWithChain: () => (/* binding */ Os),
/* harmony export */   formatChainId: () => (/* binding */ Gn),
/* harmony export */   formatDeeplinkUrl: () => (/* binding */ dr),
/* harmony export */   formatExpirerTarget: () => (/* binding */ Xe),
/* harmony export */   formatIdTarget: () => (/* binding */ oi),
/* harmony export */   formatMessage: () => (/* binding */ qr),
/* harmony export */   formatMessageContext: () => (/* binding */ Ws),
/* harmony export */   formatRelayParams: () => (/* binding */ Ko),
/* harmony export */   formatRelayRpcUrl: () => (/* binding */ zs),
/* harmony export */   formatStatementFromRecap: () => (/* binding */ gn),
/* harmony export */   formatTopicTarget: () => (/* binding */ ri),
/* harmony export */   formatUA: () => (/* binding */ cr),
/* harmony export */   formatUri: () => (/* binding */ oa),
/* harmony export */   fromBase64: () => (/* binding */ Qe),
/* harmony export */   generateKeyPair: () => (/* binding */ Vc),
/* harmony export */   generateRandomBytes32: () => (/* binding */ qc),
/* harmony export */   getAccountsChains: () => (/* binding */ qt),
/* harmony export */   getAccountsFromNamespaces: () => (/* binding */ _s),
/* harmony export */   getAddressFromAccount: () => (/* binding */ Wn),
/* harmony export */   getAddressesFromAccounts: () => (/* binding */ Us),
/* harmony export */   getAlgorandTransactionId: () => (/* binding */ af),
/* harmony export */   getAppId: () => (/* binding */ qs),
/* harmony export */   getAppMetadata: () => (/* binding */ sr),
/* harmony export */   getBrowserOnlineStatus: () => (/* binding */ us),
/* harmony export */   getChainFromAccount: () => (/* binding */ Yn),
/* harmony export */   getChainsFromAccounts: () => (/* binding */ Xn),
/* harmony export */   getChainsFromNamespace: () => (/* binding */ ve),
/* harmony export */   getChainsFromNamespaces: () => (/* binding */ Ts),
/* harmony export */   getChainsFromRecap: () => (/* binding */ Af),
/* harmony export */   getChainsFromRequiredNamespaces: () => (/* binding */ Rs),
/* harmony export */   getCommonValuesInArrays: () => (/* binding */ Je),
/* harmony export */   getCryptoKeyFromKeyData: () => (/* binding */ Do),
/* harmony export */   getDecodedRecapFromResources: () => (/* binding */ Kr),
/* harmony export */   getDeepLink: () => (/* binding */ ui),
/* harmony export */   getDidAddress: () => (/* binding */ dn),
/* harmony export */   getDidAddressSegments: () => (/* binding */ Se),
/* harmony export */   getDidChainId: () => (/* binding */ Mr),
/* harmony export */   getEnvironment: () => (/* binding */ Pt),
/* harmony export */   getHttpUrl: () => (/* binding */ Gs),
/* harmony export */   getInternalError: () => (/* binding */ Et),
/* harmony export */   getJavascriptID: () => (/* binding */ fr),
/* harmony export */   getJavascriptOS: () => (/* binding */ ir),
/* harmony export */   getLastItems: () => (/* binding */ ur),
/* harmony export */   getLinkModeURL: () => (/* binding */ sa),
/* harmony export */   getMethodsFromRecap: () => (/* binding */ If),
/* harmony export */   getNamespacedDidChainId: () => (/* binding */ Vr),
/* harmony export */   getNamespacesChains: () => (/* binding */ Go),
/* harmony export */   getNamespacesEventsForChainId: () => (/* binding */ Wo),
/* harmony export */   getNamespacesFromAccounts: () => (/* binding */ Xo),
/* harmony export */   getNamespacesMethodsForChainId: () => (/* binding */ Zo),
/* harmony export */   getNearTransactionIdFromSignedTransaction: () => (/* binding */ cf),
/* harmony export */   getNearUint8ArrayFromBytes: () => (/* binding */ kr),
/* harmony export */   getNodeOnlineStatus: () => (/* binding */ ds),
/* harmony export */   getReCapActions: () => (/* binding */ zr),
/* harmony export */   getReactNativeOnlineStatus: () => (/* binding */ ls),
/* harmony export */   getRecapAbilitiesFromResource: () => (/* binding */ vf),
/* harmony export */   getRecapFromResources: () => (/* binding */ Oe),
/* harmony export */   getRecapResource: () => (/* binding */ Fr),
/* harmony export */   getRelayClientMetadata: () => (/* binding */ Fs),
/* harmony export */   getRelayProtocolApi: () => (/* binding */ na),
/* harmony export */   getRelayProtocolName: () => (/* binding */ ea),
/* harmony export */   getRequiredNamespacesFromNamespaces: () => (/* binding */ ha),
/* harmony export */   getSdkError: () => (/* binding */ Kt),
/* harmony export */   getSearchParamFromURL: () => (/* binding */ li),
/* harmony export */   getSignDirectHash: () => (/* binding */ uf),
/* harmony export */   getSuiDigest: () => (/* binding */ ff),
/* harmony export */   getUniqueValues: () => (/* binding */ Ge),
/* harmony export */   handleDeeplinkRedirect: () => (/* binding */ ai),
/* harmony export */   hasOverlap: () => (/* binding */ It),
/* harmony export */   hashEthereumMessage: () => (/* binding */ an),
/* harmony export */   hashKey: () => (/* binding */ Fc),
/* harmony export */   hashMessage: () => (/* binding */ zc),
/* harmony export */   isAndroid: () => (/* binding */ Ms),
/* harmony export */   isAppVisible: () => (/* binding */ Pa),
/* harmony export */   isBrowser: () => (/* binding */ zt),
/* harmony export */   isCaipNamespace: () => (/* binding */ Pn),
/* harmony export */   isConformingNamespaces: () => (/* binding */ cs),
/* harmony export */   isExpired: () => (/* binding */ fi),
/* harmony export */   isIframe: () => (/* binding */ gr),
/* harmony export */   isIos: () => (/* binding */ Vs),
/* harmony export */   isNode: () => (/* binding */ Ye),
/* harmony export */   isOnline: () => (/* binding */ ja),
/* harmony export */   isProposalStruct: () => (/* binding */ wa),
/* harmony export */   isReactNative: () => (/* binding */ Bt),
/* harmony export */   isRecap: () => (/* binding */ pn),
/* harmony export */   isSessionCompatible: () => (/* binding */ ya),
/* harmony export */   isSessionStruct: () => (/* binding */ xa),
/* harmony export */   isTelegram: () => (/* binding */ pr),
/* harmony export */   isTestRun: () => (/* binding */ hi),
/* harmony export */   isTypeOneEnvelope: () => (/* binding */ Jc),
/* harmony export */   isTypeTwoEnvelope: () => (/* binding */ Qc),
/* harmony export */   isUndefined: () => (/* binding */ kt),
/* harmony export */   isValidAccountId: () => (/* binding */ ts),
/* harmony export */   isValidAccounts: () => (/* binding */ rs),
/* harmony export */   isValidActions: () => (/* binding */ ss),
/* harmony export */   isValidArray: () => (/* binding */ me),
/* harmony export */   isValidChainId: () => (/* binding */ we),
/* harmony export */   isValidChains: () => (/* binding */ es),
/* harmony export */   isValidController: () => (/* binding */ va),
/* harmony export */   isValidEip1271Signature: () => (/* binding */ jr),
/* harmony export */   isValidEip191Signature: () => (/* binding */ Lr),
/* harmony export */   isValidErrorReason: () => (/* binding */ Sa),
/* harmony export */   isValidEvent: () => (/* binding */ Ua),
/* harmony export */   isValidId: () => (/* binding */ Ia),
/* harmony export */   isValidNamespaceAccounts: () => (/* binding */ os),
/* harmony export */   isValidNamespaceActions: () => (/* binding */ Dn),
/* harmony export */   isValidNamespaceChains: () => (/* binding */ ns),
/* harmony export */   isValidNamespaceMethodsOrEvents: () => (/* binding */ Hn),
/* harmony export */   isValidNamespaces: () => (/* binding */ is),
/* harmony export */   isValidNamespacesChainId: () => (/* binding */ _a),
/* harmony export */   isValidNamespacesEvent: () => (/* binding */ Ra),
/* harmony export */   isValidNamespacesRequest: () => (/* binding */ Ta),
/* harmony export */   isValidNumber: () => (/* binding */ qe),
/* harmony export */   isValidObject: () => (/* binding */ Ve),
/* harmony export */   isValidParams: () => (/* binding */ Aa),
/* harmony export */   isValidRecap: () => (/* binding */ bt),
/* harmony export */   isValidRelay: () => (/* binding */ fs),
/* harmony export */   isValidRelays: () => (/* binding */ Ba),
/* harmony export */   isValidRequest: () => (/* binding */ Na),
/* harmony export */   isValidRequestExpiry: () => (/* binding */ La),
/* harmony export */   isValidRequiredNamespaces: () => (/* binding */ Ea),
/* harmony export */   isValidResponse: () => (/* binding */ Oa),
/* harmony export */   isValidString: () => (/* binding */ it),
/* harmony export */   isValidUrl: () => (/* binding */ ma),
/* harmony export */   mapEntries: () => (/* binding */ Js),
/* harmony export */   mapToObj: () => (/* binding */ Ys),
/* harmony export */   mergeArrays: () => (/* binding */ ct),
/* harmony export */   mergeEncodedRecaps: () => (/* binding */ Bf),
/* harmony export */   mergeRecaps: () => (/* binding */ Xr),
/* harmony export */   mergeRequiredAndOptionalNamespaces: () => (/* binding */ ba),
/* harmony export */   normalizeNamespaces: () => (/* binding */ ye),
/* harmony export */   objToMap: () => (/* binding */ Xs),
/* harmony export */   openDeeplink: () => (/* binding */ hr),
/* harmony export */   parseAccountId: () => (/* binding */ ze),
/* harmony export */   parseChainId: () => (/* binding */ Fe),
/* harmony export */   parseContextNames: () => (/* binding */ ar),
/* harmony export */   parseExpirerTarget: () => (/* binding */ si),
/* harmony export */   parseNamespaceKey: () => (/* binding */ Yo),
/* harmony export */   parseRelayParams: () => (/* binding */ Vo),
/* harmony export */   parseTopic: () => (/* binding */ qo),
/* harmony export */   parseUri: () => (/* binding */ ra),
/* harmony export */   populateAppMetadata: () => (/* binding */ Ks),
/* harmony export */   populateAuthPayload: () => (/* binding */ wf),
/* harmony export */   recapHasResource: () => (/* binding */ xf),
/* harmony export */   serialize: () => (/* binding */ kn),
/* harmony export */   sleep: () => (/* binding */ pi),
/* harmony export */   ss58AddressToPublicKey: () => (/* binding */ gs),
/* harmony export */   subscribeToBrowserNetworkChange: () => (/* binding */ hs),
/* harmony export */   subscribeToNetworkChange: () => (/* binding */ ka),
/* harmony export */   subscribeToReactNativeNetworkChange: () => (/* binding */ ps),
/* harmony export */   toBase64: () => (/* binding */ br),
/* harmony export */   uuidv4: () => (/* binding */ di),
/* harmony export */   validateDecoding: () => (/* binding */ Xc),
/* harmony export */   validateEncoding: () => (/* binding */ Ho),
/* harmony export */   validateSignedCacao: () => (/* binding */ yf),
/* harmony export */   verifyP256Jwt: () => (/* binding */ ta),
/* harmony export */   verifySignature: () => (/* binding */ Cr)
/* harmony export */ });
/* harmony import */ var detect_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! detect-browser */ "./node_modules/@walletconnect/ethereum-provider/node_modules/detect-browser/es/index.js");
/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/time */ "./node_modules/@walletconnect/time/dist/cjs/index.js");
/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/window-getters */ "./node_modules/@walletconnect/ethereum-provider/node_modules/@walletconnect/window-getters/dist/cjs/index.js");
/* harmony import */ var _walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/window-metadata */ "./node_modules/@walletconnect/ethereum-provider/node_modules/@walletconnect/window-metadata/dist/cjs/index.js");
/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/signature/recoverAddress.js");
/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! bs58 */ "./node_modules/@walletconnect/ethereum-provider/node_modules/bs58/src/esm/index.js");
/* harmony import */ var _msgpack_msgpack__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @msgpack/msgpack */ "./node_modules/@msgpack/msgpack/dist.esm/encode.mjs");
/* harmony import */ var _msgpack_msgpack__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @msgpack/msgpack */ "./node_modules/@msgpack/msgpack/dist.esm/decode.mjs");
/* harmony import */ var _scure_base__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @scure/base */ "./node_modules/@walletconnect/ethereum-provider/node_modules/@scure/base/lib/esm/index.js");
/* harmony import */ var _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @walletconnect/relay-auth */ "./node_modules/@walletconnect/relay-auth/dist/index.es.js");
/* harmony import */ var uint8arrays__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! uint8arrays */ "./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/index.js");
/* harmony import */ var _walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @walletconnect/relay-api */ "./node_modules/@walletconnect/relay-api/dist/index.es.js");
/* harmony import */ var blakejs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! blakejs */ "./node_modules/blakejs/index.js");
/* harmony import */ var blakejs__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(blakejs__WEBPACK_IMPORTED_MODULE_12__);
/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ "./node_modules/process/browser.js");
/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js")["Buffer"];
const xe=":";function Fe(t){const[e,n]=t.split(xe);return{namespace:e,reference:n}}function Gn(t){const{namespace:e,reference:n}=t;return[e,n].join(xe)}function ze(t){const[e,n,r]=t.split(xe);return{namespace:e,reference:n,address:r}}function Zn(t){const{namespace:e,reference:n,address:r}=t;return[e,n,r].join(xe)}function Ge(t,e){const n=[];return t.forEach(r=>{const o=e(r);n.includes(o)||n.push(o)}),n}function Wn(t){const{address:e}=ze(t);return e}function Yn(t){const{namespace:e,reference:n}=ze(t);return Gn({namespace:e,reference:n})}function Os(t,e){const{namespace:n,reference:r}=Fe(e);return Zn({namespace:n,reference:r,address:t})}function Us(t){return Ge(t,Wn)}function Xn(t){return Ge(t,Yn)}function _s(t,e=[]){const n=[];return Object.keys(t).forEach(r=>{if(e.length&&!e.includes(r))return;const o=t[r];n.push(...o.accounts)}),n}function Ts(t,e=[]){const n=[];return Object.keys(t).forEach(r=>{if(e.length&&!e.includes(r))return;const o=t[r];n.push(...Xn(o.accounts))}),n}function Rs(t,e=[]){const n=[];return Object.keys(t).forEach(r=>{if(e.length&&!e.includes(r))return;const o=t[r];n.push(...ve(r,o))}),n}function ve(t,e){return t.includes(":")?[t]:e.chains||[]}var $s=Object.defineProperty,Cs=Object.defineProperties,Ls=Object.getOwnPropertyDescriptors,Jn=Object.getOwnPropertySymbols,js=Object.prototype.hasOwnProperty,ks=Object.prototype.propertyIsEnumerable,Ze=(t,e,n)=>e in t?$s(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,Qn=(t,e)=>{for(var n in e||(e={}))js.call(e,n)&&Ze(t,n,e[n]);if(Jn)for(var n of Jn(e))ks.call(e,n)&&Ze(t,n,e[n]);return t},Ps=(t,e)=>Cs(t,Ls(e)),tr=(t,e,n)=>Ze(t,typeof e!="symbol"?e+"":e,n);const er="ReactNative",J={reactNative:"react-native",node:"node",browser:"browser",unknown:"unknown"},Ee=" ",Hs=":",nr="/",We=2,Ds=1e3,rr="js";function Ye(){return typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u"}function Bt(){return!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__.getDocument)()&&!!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__.getNavigator)()&&navigator.product===er}function Ms(){return Bt()&&typeof __webpack_require__.g<"u"&&typeof(__webpack_require__.g==null?void 0:__webpack_require__.g.Platform)<"u"&&(__webpack_require__.g==null?void 0:__webpack_require__.g.Platform.OS)==="android"}function Vs(){return Bt()&&typeof __webpack_require__.g<"u"&&typeof(__webpack_require__.g==null?void 0:__webpack_require__.g.Platform)<"u"&&(__webpack_require__.g==null?void 0:__webpack_require__.g.Platform.OS)==="ios"}function zt(){return!Ye()&&!!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__.getNavigator)()&&!!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__.getDocument)()}function Pt(){return Bt()?J.reactNative:Ye()?J.node:zt()?J.browser:J.unknown}function qs(){var t;try{return Bt()&&typeof __webpack_require__.g<"u"&&typeof(__webpack_require__.g==null?void 0:__webpack_require__.g.Application)<"u"?(t=__webpack_require__.g.Application)==null?void 0:t.applicationId:void 0}catch{return}}function or(t,e){const n=new URLSearchParams(t);for(const r of Object.keys(e).sort())if(e.hasOwnProperty(r)){const o=e[r];o!==void 0&&n.set(r,o)}return n.toString()}function Ks(t){var e,n;const r=sr();try{return t!=null&&t.url&&r.url&&new URL(t.url).host!==new URL(r.url).host&&(console.warn(`The configured WalletConnect 'metadata.url':${t.url} differs from the actual page url:${r.url}. This is probably unintended and can lead to issues.`),t.url=r.url),(e=t?.icons)!=null&&e.length&&t.icons.length>0&&(t.icons=t.icons.filter(o=>o!=="")),Ps(Qn(Qn({},r),t),{url:t?.url||r.url,name:t?.name||r.name,description:t?.description||r.description,icons:(n=t?.icons)!=null&&n.length&&t.icons.length>0?t.icons:r.icons})}catch(o){return console.warn("Error populating app metadata",o),t||r}}function sr(){return (0,_walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_3__.getWindowMetadata)()||{name:"",description:"",url:"",icons:[""]}}function Fs(t,e){var n;const r=Pt(),o={protocol:t,version:e,env:r};return r==="browser"&&(o.host=((n=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__.getLocation)())==null?void 0:n.host)||"unknown"),o}function ir(){if(Pt()===J.reactNative&&typeof __webpack_require__.g<"u"&&typeof(__webpack_require__.g==null?void 0:__webpack_require__.g.Platform)<"u"){const{OS:n,Version:r}=__webpack_require__.g.Platform;return[n,r].join("-")}const t=(0,detect_browser__WEBPACK_IMPORTED_MODULE_0__.detect)();if(t===null)return"unknown";const e=t.os?t.os.replace(" ","").toLowerCase():"unknown";return t.type==="browser"?[e,t.name,t.version].join("-"):[e,t.version].join("-")}function fr(){var t;const e=Pt();return e===J.browser?[e,((t=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__.getLocation)())==null?void 0:t.host)||"unknown"].join(":"):e}function cr(t,e,n){const r=ir(),o=fr();return[[t,e].join("-"),[rr,n].join("-"),r,o].join("/")}function zs({protocol:t,version:e,relayUrl:n,sdkVersion:r,auth:o,projectId:s,useOnCloseEvent:i,bundleId:f,packageName:a}){const l=n.split("?"),c=cr(t,e,r),u={auth:o,ua:c,projectId:s,useOnCloseEvent:i||void 0,packageName:a||void 0,bundleId:f||void 0},h=or(l[1]||"",u);return l[0]+"?"+h}function Gs(t){let e=(t.match(/^[^:]+(?=:\/\/)/gi)||[])[0];const n=typeof e<"u"?t.split("://")[1]:t;return e=e==="wss"?"https":"http",[e,n].join("://")}function Zs(t,e,n){if(!t[e]||typeof t[e]!==n)throw new Error(`Missing or invalid "${e}" param`)}function ar(t,e=We){return ur(t.split(nr),e)}function Ws(t){return ar(t).join(Ee)}function It(t,e){return t.filter(n=>e.includes(n)).length===t.length}function ur(t,e=We){return t.slice(Math.max(t.length-e,0))}function Ys(t){return Object.fromEntries(t.entries())}function Xs(t){return new Map(Object.entries(t))}function Js(t,e){const n={};return Object.keys(t).forEach(r=>{n[r]=e(t[r])}),n}const Qs=t=>t;function lr(t){return t.trim().replace(/^\w/,e=>e.toUpperCase())}function ti(t){return t.split(Ee).map(e=>lr(e)).join(Ee)}function ei(t=_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.FIVE_MINUTES,e){const n=(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.toMiliseconds)(t||_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.FIVE_MINUTES);let r,o,s,i;return{resolve:f=>{s&&r&&(clearTimeout(s),r(f),i=Promise.resolve(f))},reject:f=>{s&&o&&(clearTimeout(s),o(f))},done:()=>new Promise((f,a)=>{if(i)return f(i);s=setTimeout(()=>{const l=new Error(e);i=Promise.reject(l),a(l)},n),r=f,o=a})}}function ni(t,e,n){return new Promise(async(r,o)=>{const s=setTimeout(()=>o(new Error(n)),e);try{const i=await t;r(i)}catch(i){o(i)}clearTimeout(s)})}function Xe(t,e){if(typeof e=="string"&&e.startsWith(`${t}:`))return e;if(t.toLowerCase()==="topic"){if(typeof e!="string")throw new Error('Value must be "string" for expirer target type: topic');return`topic:${e}`}else if(t.toLowerCase()==="id"){if(typeof e!="number")throw new Error('Value must be "number" for expirer target type: id');return`id:${e}`}throw new Error(`Unknown expirer target type: ${t}`)}function ri(t){return Xe("topic",t)}function oi(t){return Xe("id",t)}function si(t){const[e,n]=t.split(":"),r={id:void 0,topic:void 0};if(e==="topic"&&typeof n=="string")r.topic=n;else if(e==="id"&&Number.isInteger(Number(n)))r.id=Number(n);else throw new Error(`Invalid target, expected id:number or topic:string, got ${e}:${n}`);return r}function ii(t,e){return (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.fromMiliseconds)((e||Date.now())+(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.toMiliseconds)(t))}function fi(t){return Date.now()>=(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.toMiliseconds)(t)}function ci(t,e){return`${t}${e?`:${e}`:""}`}function ct(t=[],e=[]){return[...new Set([...t,...e])]}async function ai({id:t,topic:e,wcDeepLink:n}){var r;try{if(!n)return;const o=typeof n=="string"?JSON.parse(n):n,s=o?.href;if(typeof s!="string")return;const i=dr(s,t,e),f=Pt();if(f===J.browser){if(!((r=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__.getDocument)())!=null&&r.hasFocus())){console.warn("Document does not have focus, skipping deeplink.");return}hr(i)}else f===J.reactNative&&typeof(__webpack_require__.g==null?void 0:__webpack_require__.g.Linking)<"u"&&await __webpack_require__.g.Linking.openURL(i)}catch(o){console.error(o)}}function dr(t,e,n){const r=`requestId=${e}&sessionTopic=${n}`;t.endsWith("/")&&(t=t.slice(0,-1));let o=`${t}`;if(t.startsWith("https://t.me")){const s=t.includes("?")?"&startapp=":"?startapp=";o=`${o}${s}${br(r,!0)}`}else o=`${o}/wc?${r}`;return o}function hr(t){let e="_self";gr()?e="_top":(pr()||t.startsWith("https://")||t.startsWith("http://"))&&(e="_blank"),window.open(t,e,"noreferrer noopener")}async function ui(t,e){let n="";try{if(zt()&&(n=localStorage.getItem(e),n))return n;n=await t.getItem(e)}catch(r){console.error(r)}return n}function Je(t,e){return t.filter(n=>e.includes(n))}function li(t,e){if(!t.includes(e))return null;const n=t.split(/([&,?,=])/),r=n.indexOf(e);return n[r+2]}function di(){return typeof crypto<"u"&&crypto!=null&&crypto.randomUUID?crypto.randomUUID():"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/gu,t=>{const e=Math.random()*16|0;return(t==="x"?e:e&3|8).toString(16)})}function hi(){return typeof process<"u"&&({"MIX_WALLETCONNECT_PROJECT_ID":"d657fc2caf26f35212226268cf9745d0"}).IS_VITEST==="true"}function pr(){return typeof window<"u"&&(!!window.TelegramWebviewProxy||!!window.Telegram||!!window.TelegramWebviewProxyProto)}function gr(){try{return window.self!==window.top}catch{return!1}}function br(t,e=!1){const n=Buffer.from(t).toString("base64");return e?n.replace(/[=]/g,""):n}function Qe(t){return Buffer.from(t,"base64").toString("utf-8")}function pi(t){return new Promise(e=>setTimeout(e,t))}class gi{constructor({limit:e}){tr(this,"limit"),tr(this,"set"),this.limit=e,this.set=new Set}add(e){if(!this.set.has(e)){if(this.set.size>=this.limit){const n=this.set.values().next().value;n&&this.set.delete(n)}this.set.add(e)}}has(e){return this.set.has(e)}}const Be=BigInt(2**32-1),yr=BigInt(32);function mr(t,e=!1){return e?{h:Number(t&Be),l:Number(t>>yr&Be)}:{h:Number(t>>yr&Be)|0,l:Number(t&Be)|0}}function wr(t,e=!1){const n=t.length;let r=new Uint32Array(n),o=new Uint32Array(n);for(let s=0;s<n;s++){const{h:i,l:f}=mr(t[s],e);[r[s],o[s]]=[i,f]}return[r,o]}const xr=(t,e,n)=>t>>>n,vr=(t,e,n)=>t<<32-n|e>>>n,At=(t,e,n)=>t>>>n|e<<32-n,St=(t,e,n)=>t<<32-n|e>>>n,se=(t,e,n)=>t<<64-n|e>>>n-32,ie=(t,e,n)=>t>>>n-32|e<<64-n,bi=(t,e)=>e,yi=(t,e)=>t,mi=(t,e,n)=>t<<n|e>>>32-n,wi=(t,e,n)=>e<<n|t>>>32-n,xi=(t,e,n)=>e<<n-32|t>>>64-n,vi=(t,e,n)=>t<<n-32|e>>>64-n;function dt(t,e,n,r){const o=(e>>>0)+(r>>>0);return{h:t+n+(o/2**32|0)|0,l:o|0}}const tn=(t,e,n)=>(t>>>0)+(e>>>0)+(n>>>0),en=(t,e,n,r)=>e+n+r+(t/2**32|0)|0,Ei=(t,e,n,r)=>(t>>>0)+(e>>>0)+(n>>>0)+(r>>>0),Bi=(t,e,n,r,o)=>e+n+r+o+(t/2**32|0)|0,Ii=(t,e,n,r,o)=>(t>>>0)+(e>>>0)+(n>>>0)+(r>>>0)+(o>>>0),Ai=(t,e,n,r,o,s)=>e+n+r+o+s+(t/2**32|0)|0,Gt=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;function nn(t){return t instanceof Uint8Array||ArrayBuffer.isView(t)&&t.constructor.name==="Uint8Array"}function mt(t){if(!Number.isSafeInteger(t)||t<0)throw new Error("positive integer expected, got "+t)}function at(t,...e){if(!nn(t))throw new Error("Uint8Array expected");if(e.length>0&&!e.includes(t.length))throw new Error("Uint8Array expected of length "+e+", got length="+t.length)}function rn(t){if(typeof t!="function"||typeof t.create!="function")throw new Error("Hash should be wrapped by utils.createHasher");mt(t.outputLen),mt(t.blockLen)}function Nt(t,e=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(e&&t.finished)throw new Error("Hash#digest() has already been called")}function on(t,e){at(t);const n=e.outputLen;if(t.length<n)throw new Error("digestInto() expects output buffer of length at least "+n)}function fe(t){return new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4))}function ut(...t){for(let e=0;e<t.length;e++)t[e].fill(0)}function sn(t){return new DataView(t.buffer,t.byteOffset,t.byteLength)}function gt(t,e){return t<<32-e|t>>>e}const Er=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;function Br(t){return t<<24&4278190080|t<<8&16711680|t>>>8&65280|t>>>24&255}const wt=Er?t=>t:t=>Br(t);function Si(t){for(let e=0;e<t.length;e++)t[e]=Br(t[e]);return t}const Ot=Er?t=>t:Si,Ir=typeof Uint8Array.from([]).toHex=="function"&&typeof Uint8Array.fromHex=="function",Ni=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,"0"));function ce(t){if(at(t),Ir)return t.toHex();let e="";for(let n=0;n<t.length;n++)e+=Ni[t[n]];return e}const xt={_0:48,_9:57,A:65,F:70,a:97,f:102};function Ar(t){if(t>=xt._0&&t<=xt._9)return t-xt._0;if(t>=xt.A&&t<=xt.F)return t-(xt.A-10);if(t>=xt.a&&t<=xt.f)return t-(xt.a-10)}function fn(t){if(typeof t!="string")throw new Error("hex string expected, got "+typeof t);if(Ir)return Uint8Array.fromHex(t);const e=t.length,n=e/2;if(e%2)throw new Error("hex string expected, got unpadded hex of length "+e);const r=new Uint8Array(n);for(let o=0,s=0;o<n;o++,s+=2){const i=Ar(t.charCodeAt(s)),f=Ar(t.charCodeAt(s+1));if(i===void 0||f===void 0){const a=t[s]+t[s+1];throw new Error('hex string expected, got non-hex character "'+a+'" at index '+s)}r[o]=i*16+f}return r}function Oi(t){if(typeof t!="string")throw new Error("string expected");return new Uint8Array(new TextEncoder().encode(t))}function ht(t){return typeof t=="string"&&(t=Oi(t)),at(t),t}function Ht(...t){let e=0;for(let r=0;r<t.length;r++){const o=t[r];at(o),e+=o.length}const n=new Uint8Array(e);for(let r=0,o=0;r<t.length;r++){const s=t[r];n.set(s,o),o+=s.length}return n}class Ie{}function ae(t){const e=r=>t().update(ht(r)).digest(),n=t();return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=()=>t(),e}function Ui(t){const e=(r,o)=>t(o).update(ht(r)).digest(),n=t({});return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=r=>t(r),e}function Zt(t=32){if(Gt&&typeof Gt.getRandomValues=="function")return Gt.getRandomValues(new Uint8Array(t));if(Gt&&typeof Gt.randomBytes=="function")return Uint8Array.from(Gt.randomBytes(t));throw new Error("crypto.getRandomValues must be defined")}const _i=BigInt(0),ue=BigInt(1),Ti=BigInt(2),Ri=BigInt(7),$i=BigInt(256),Ci=BigInt(113),Sr=[],Nr=[],Or=[];for(let t=0,e=ue,n=1,r=0;t<24;t++){[n,r]=[r,(2*n+3*r)%5],Sr.push(2*(5*r+n)),Nr.push((t+1)*(t+2)/2%64);let o=_i;for(let s=0;s<7;s++)e=(e<<ue^(e>>Ri)*Ci)%$i,e&Ti&&(o^=ue<<(ue<<BigInt(s))-ue);Or.push(o)}const Ur=wr(Or,!0),Li=Ur[0],ji=Ur[1],_r=(t,e,n)=>n>32?xi(t,e,n):mi(t,e,n),Tr=(t,e,n)=>n>32?vi(t,e,n):wi(t,e,n);function ki(t,e=24){const n=new Uint32Array(10);for(let r=24-e;r<24;r++){for(let i=0;i<10;i++)n[i]=t[i]^t[i+10]^t[i+20]^t[i+30]^t[i+40];for(let i=0;i<10;i+=2){const f=(i+8)%10,a=(i+2)%10,l=n[a],c=n[a+1],u=_r(l,c,1)^n[f],h=Tr(l,c,1)^n[f+1];for(let g=0;g<50;g+=10)t[i+g]^=u,t[i+g+1]^=h}let o=t[2],s=t[3];for(let i=0;i<24;i++){const f=Nr[i],a=_r(o,s,f),l=Tr(o,s,f),c=Sr[i];o=t[c],s=t[c+1],t[c]=a,t[c+1]=l}for(let i=0;i<50;i+=10){for(let f=0;f<10;f++)n[f]=t[i+f];for(let f=0;f<10;f++)t[i+f]^=~n[(f+2)%10]&n[(f+4)%10]}t[0]^=Li[r],t[1]^=ji[r]}ut(n)}class qn extends Ie{constructor(e,n,r,o=!1,s=24){if(super(),this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,this.enableXOF=!1,this.blockLen=e,this.suffix=n,this.outputLen=r,this.enableXOF=o,this.rounds=s,mt(r),!(0<e&&e<200))throw new Error("only keccak-f1600 function is supported");this.state=new Uint8Array(200),this.state32=fe(this.state)}clone(){return this._cloneInto()}keccak(){Ot(this.state32),ki(this.state32,this.rounds),Ot(this.state32),this.posOut=0,this.pos=0}update(e){Nt(this),e=ht(e),at(e);const{blockLen:n,state:r}=this,o=e.length;for(let s=0;s<o;){const i=Math.min(n-this.pos,o-s);for(let f=0;f<i;f++)r[this.pos++]^=e[s++];this.pos===n&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:e,suffix:n,pos:r,blockLen:o}=this;e[r]^=n,(n&128)!==0&&r===o-1&&this.keccak(),e[o-1]^=128,this.keccak()}writeInto(e){Nt(this,!1),at(e),this.finish();const n=this.state,{blockLen:r}=this;for(let o=0,s=e.length;o<s;){this.posOut>=r&&this.keccak();const i=Math.min(r-this.posOut,s-o);e.set(n.subarray(this.posOut,this.posOut+i),o),this.posOut+=i,o+=i}return e}xofInto(e){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){return mt(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(on(e,this),this.finished)throw new Error("digest() was already called");return this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,ut(this.state)}_cloneInto(e){const{blockLen:n,suffix:r,outputLen:o,rounds:s,enableXOF:i}=this;return e||(e=new qn(n,r,o,i,s)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=s,e.suffix=r,e.outputLen=o,e.enableXOF=i,e.destroyed=this.destroyed,e}}const Pi=(t,e,n)=>ae(()=>new qn(e,t,n)),Hi=Pi(1,136,256/8);function Di(t,e,n,r){if(typeof t.setBigUint64=="function")return t.setBigUint64(e,n,r);const o=BigInt(32),s=BigInt(4294967295),i=Number(n>>o&s),f=Number(n&s),a=r?4:0,l=r?0:4;t.setUint32(e+a,i,r),t.setUint32(e+l,f,r)}function Mi(t,e,n){return t&e^~t&n}function Vi(t,e,n){return t&e^t&n^e&n}class Rr extends Ie{constructor(e,n,r,o){super(),this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.blockLen=e,this.outputLen=n,this.padOffset=r,this.isLE=o,this.buffer=new Uint8Array(e),this.view=sn(this.buffer)}update(e){Nt(this),e=ht(e),at(e);const{view:n,buffer:r,blockLen:o}=this,s=e.length;for(let i=0;i<s;){const f=Math.min(o-this.pos,s-i);if(f===o){const a=sn(e);for(;o<=s-i;i+=o)this.process(a,i);continue}r.set(e.subarray(i,i+f),this.pos),this.pos+=f,i+=f,this.pos===o&&(this.process(n,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){Nt(this),on(e,this),this.finished=!0;const{buffer:n,view:r,blockLen:o,isLE:s}=this;let{pos:i}=this;n[i++]=128,ut(this.buffer.subarray(i)),this.padOffset>o-i&&(this.process(r,0),i=0);for(let u=i;u<o;u++)n[u]=0;Di(r,o-8,BigInt(this.length*8),s),this.process(r,0);const f=sn(e),a=this.outputLen;if(a%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const l=a/4,c=this.get();if(l>c.length)throw new Error("_sha2: outputLen bigger than state");for(let u=0;u<l;u++)f.setUint32(4*u,c[u],s)}digest(){const{buffer:e,outputLen:n}=this;this.digestInto(e);const r=e.slice(0,n);return this.destroy(),r}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:n,buffer:r,length:o,finished:s,destroyed:i,pos:f}=this;return e.destroyed=i,e.finished=s,e.length=o,e.pos=f,o%n&&e.buffer.set(r),e}clone(){return this._cloneInto()}}const Ut=Uint32Array.from([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),W=Uint32Array.from([3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]),Y=Uint32Array.from([1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209]),qi=Uint32Array.from([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),_t=new Uint32Array(64);class Ki extends Rr{constructor(e=32){super(64,e,8,!1),this.A=Ut[0]|0,this.B=Ut[1]|0,this.C=Ut[2]|0,this.D=Ut[3]|0,this.E=Ut[4]|0,this.F=Ut[5]|0,this.G=Ut[6]|0,this.H=Ut[7]|0}get(){const{A:e,B:n,C:r,D:o,E:s,F:i,G:f,H:a}=this;return[e,n,r,o,s,i,f,a]}set(e,n,r,o,s,i,f,a){this.A=e|0,this.B=n|0,this.C=r|0,this.D=o|0,this.E=s|0,this.F=i|0,this.G=f|0,this.H=a|0}process(e,n){for(let u=0;u<16;u++,n+=4)_t[u]=e.getUint32(n,!1);for(let u=16;u<64;u++){const h=_t[u-15],g=_t[u-2],w=gt(h,7)^gt(h,18)^h>>>3,y=gt(g,17)^gt(g,19)^g>>>10;_t[u]=y+_t[u-7]+w+_t[u-16]|0}let{A:r,B:o,C:s,D:i,E:f,F:a,G:l,H:c}=this;for(let u=0;u<64;u++){const h=gt(f,6)^gt(f,11)^gt(f,25),g=c+h+Mi(f,a,l)+qi[u]+_t[u]|0,y=(gt(r,2)^gt(r,13)^gt(r,22))+Vi(r,o,s)|0;c=l,l=a,a=f,f=i+g|0,i=s,s=o,o=r,r=g+y|0}r=r+this.A|0,o=o+this.B|0,s=s+this.C|0,i=i+this.D|0,f=f+this.E|0,a=a+this.F|0,l=l+this.G|0,c=c+this.H|0,this.set(r,o,s,i,f,a,l,c)}roundClean(){ut(_t)}destroy(){this.set(0,0,0,0,0,0,0,0),ut(this.buffer)}}const $r=wr(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(t=>BigInt(t))),Fi=$r[0],zi=$r[1],Tt=new Uint32Array(80),Rt=new Uint32Array(80);class cn extends Rr{constructor(e=64){super(128,e,16,!1),this.Ah=Y[0]|0,this.Al=Y[1]|0,this.Bh=Y[2]|0,this.Bl=Y[3]|0,this.Ch=Y[4]|0,this.Cl=Y[5]|0,this.Dh=Y[6]|0,this.Dl=Y[7]|0,this.Eh=Y[8]|0,this.El=Y[9]|0,this.Fh=Y[10]|0,this.Fl=Y[11]|0,this.Gh=Y[12]|0,this.Gl=Y[13]|0,this.Hh=Y[14]|0,this.Hl=Y[15]|0}get(){const{Ah:e,Al:n,Bh:r,Bl:o,Ch:s,Cl:i,Dh:f,Dl:a,Eh:l,El:c,Fh:u,Fl:h,Gh:g,Gl:w,Hh:y,Hl:x}=this;return[e,n,r,o,s,i,f,a,l,c,u,h,g,w,y,x]}set(e,n,r,o,s,i,f,a,l,c,u,h,g,w,y,x){this.Ah=e|0,this.Al=n|0,this.Bh=r|0,this.Bl=o|0,this.Ch=s|0,this.Cl=i|0,this.Dh=f|0,this.Dl=a|0,this.Eh=l|0,this.El=c|0,this.Fh=u|0,this.Fl=h|0,this.Gh=g|0,this.Gl=w|0,this.Hh=y|0,this.Hl=x|0}process(e,n){for(let L=0;L<16;L++,n+=4)Tt[L]=e.getUint32(n),Rt[L]=e.getUint32(n+=4);for(let L=16;L<80;L++){const V=Tt[L-15]|0,_=Rt[L-15]|0,k=At(V,_,1)^At(V,_,8)^xr(V,_,7),j=St(V,_,1)^St(V,_,8)^vr(V,_,7),$=Tt[L-2]|0,d=Rt[L-2]|0,m=At($,d,19)^se($,d,61)^xr($,d,6),p=St($,d,19)^ie($,d,61)^vr($,d,6),b=Ei(j,p,Rt[L-7],Rt[L-16]),v=Bi(b,k,m,Tt[L-7],Tt[L-16]);Tt[L]=v|0,Rt[L]=b|0}let{Ah:r,Al:o,Bh:s,Bl:i,Ch:f,Cl:a,Dh:l,Dl:c,Eh:u,El:h,Fh:g,Fl:w,Gh:y,Gl:x,Hh:R,Hl:M}=this;for(let L=0;L<80;L++){const V=At(u,h,14)^At(u,h,18)^se(u,h,41),_=St(u,h,14)^St(u,h,18)^ie(u,h,41),k=u&g^~u&y,j=h&w^~h&x,$=Ii(M,_,j,zi[L],Rt[L]),d=Ai($,R,V,k,Fi[L],Tt[L]),m=$|0,p=At(r,o,28)^se(r,o,34)^se(r,o,39),b=St(r,o,28)^ie(r,o,34)^ie(r,o,39),v=r&s^r&f^s&f,B=o&i^o&a^i&a;R=y|0,M=x|0,y=g|0,x=w|0,g=u|0,w=h|0,{h:u,l:h}=dt(l|0,c|0,d|0,m|0),l=f|0,c=a|0,f=s|0,a=i|0,s=r|0,i=o|0;const E=tn(m,b,B);r=en(E,d,p,v),o=E|0}({h:r,l:o}=dt(this.Ah|0,this.Al|0,r|0,o|0)),{h:s,l:i}=dt(this.Bh|0,this.Bl|0,s|0,i|0),{h:f,l:a}=dt(this.Ch|0,this.Cl|0,f|0,a|0),{h:l,l:c}=dt(this.Dh|0,this.Dl|0,l|0,c|0),{h:u,l:h}=dt(this.Eh|0,this.El|0,u|0,h|0),{h:g,l:w}=dt(this.Fh|0,this.Fl|0,g|0,w|0),{h:y,l:x}=dt(this.Gh|0,this.Gl|0,y|0,x|0),{h:R,l:M}=dt(this.Hh|0,this.Hl|0,R|0,M|0),this.set(r,o,s,i,f,a,l,c,u,h,g,w,y,x,R,M)}roundClean(){ut(Tt,Rt)}destroy(){ut(this.buffer),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}class Gi extends cn{constructor(){super(48),this.Ah=W[0]|0,this.Al=W[1]|0,this.Bh=W[2]|0,this.Bl=W[3]|0,this.Ch=W[4]|0,this.Cl=W[5]|0,this.Dh=W[6]|0,this.Dl=W[7]|0,this.Eh=W[8]|0,this.El=W[9]|0,this.Fh=W[10]|0,this.Fl=W[11]|0,this.Gh=W[12]|0,this.Gl=W[13]|0,this.Hh=W[14]|0,this.Hl=W[15]|0}}const X=Uint32Array.from([573645204,4230739756,2673172387,3360449730,596883563,1867755857,2520282905,1497426621,2519219938,2827943907,3193839141,1401305490,721525244,746961066,246885852,2177182882]);class Zi extends cn{constructor(){super(32),this.Ah=X[0]|0,this.Al=X[1]|0,this.Bh=X[2]|0,this.Bl=X[3]|0,this.Ch=X[4]|0,this.Cl=X[5]|0,this.Dh=X[6]|0,this.Dl=X[7]|0,this.Eh=X[8]|0,this.El=X[9]|0,this.Fh=X[10]|0,this.Fl=X[11]|0,this.Gh=X[12]|0,this.Gl=X[13]|0,this.Hh=X[14]|0,this.Hl=X[15]|0}}const Ae=ae(()=>new Ki),Wi=ae(()=>new cn),Yi=ae(()=>new Gi),Xi=ae(()=>new Zi),Ji=Uint8Array.from([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9]),F=Uint32Array.from([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),N=new Uint32Array(32);function $t(t,e,n,r,o,s){const i=o[s],f=o[s+1];let a=N[2*t],l=N[2*t+1],c=N[2*e],u=N[2*e+1],h=N[2*n],g=N[2*n+1],w=N[2*r],y=N[2*r+1],x=tn(a,c,i);l=en(x,l,u,f),a=x|0,{Dh:y,Dl:w}={Dh:y^l,Dl:w^a},{Dh:y,Dl:w}={Dh:bi(y,w),Dl:yi(y)},{h:g,l:h}=dt(g,h,y,w),{Bh:u,Bl:c}={Bh:u^g,Bl:c^h},{Bh:u,Bl:c}={Bh:At(u,c,24),Bl:St(u,c,24)},N[2*t]=a,N[2*t+1]=l,N[2*e]=c,N[2*e+1]=u,N[2*n]=h,N[2*n+1]=g,N[2*r]=w,N[2*r+1]=y}function Ct(t,e,n,r,o,s){const i=o[s],f=o[s+1];let a=N[2*t],l=N[2*t+1],c=N[2*e],u=N[2*e+1],h=N[2*n],g=N[2*n+1],w=N[2*r],y=N[2*r+1],x=tn(a,c,i);l=en(x,l,u,f),a=x|0,{Dh:y,Dl:w}={Dh:y^l,Dl:w^a},{Dh:y,Dl:w}={Dh:At(y,w,16),Dl:St(y,w,16)},{h:g,l:h}=dt(g,h,y,w),{Bh:u,Bl:c}={Bh:u^g,Bl:c^h},{Bh:u,Bl:c}={Bh:se(u,c,63),Bl:ie(u,c,63)},N[2*t]=a,N[2*t+1]=l,N[2*e]=c,N[2*e+1]=u,N[2*n]=h,N[2*n+1]=g,N[2*r]=w,N[2*r+1]=y}function Qi(t,e={},n,r,o){if(mt(n),t<0||t>n)throw new Error("outputLen bigger than keyLen");const{key:s,salt:i,personalization:f}=e;if(s!==void 0&&(s.length<1||s.length>n))throw new Error("key length must be undefined or 1.."+n);if(i!==void 0&&i.length!==r)throw new Error("salt must be undefined or "+r);if(f!==void 0&&f.length!==o)throw new Error("personalization must be undefined or "+o)}class tf extends Ie{constructor(e,n){super(),this.finished=!1,this.destroyed=!1,this.length=0,this.pos=0,mt(e),mt(n),this.blockLen=e,this.outputLen=n,this.buffer=new Uint8Array(e),this.buffer32=fe(this.buffer)}update(e){Nt(this),e=ht(e),at(e);const{blockLen:n,buffer:r,buffer32:o}=this,s=e.length,i=e.byteOffset,f=e.buffer;for(let a=0;a<s;){this.pos===n&&(Ot(o),this.compress(o,0,!1),Ot(o),this.pos=0);const l=Math.min(n-this.pos,s-a),c=i+a;if(l===n&&!(c%4)&&a+l<s){const u=new Uint32Array(f,c,Math.floor((s-a)/4));Ot(u);for(let h=0;a+n<s;h+=o.length,a+=n)this.length+=n,this.compress(u,h,!1);Ot(u);continue}r.set(e.subarray(a,a+l),this.pos),this.pos+=l,this.length+=l,a+=l}return this}digestInto(e){Nt(this),on(e,this);const{pos:n,buffer32:r}=this;this.finished=!0,ut(this.buffer.subarray(n)),Ot(r),this.compress(r,0,!0),Ot(r);const o=fe(e);this.get().forEach((s,i)=>o[i]=wt(s))}digest(){const{buffer:e,outputLen:n}=this;this.digestInto(e);const r=e.slice(0,n);return this.destroy(),r}_cloneInto(e){const{buffer:n,length:r,finished:o,destroyed:s,outputLen:i,pos:f}=this;return e||(e=new this.constructor({dkLen:i})),e.set(...this.get()),e.buffer.set(n),e.destroyed=s,e.finished=o,e.length=r,e.pos=f,e.outputLen=i,e}clone(){return this._cloneInto()}}class ef extends tf{constructor(e={}){const n=e.dkLen===void 0?64:e.dkLen;super(128,n),this.v0l=F[0]|0,this.v0h=F[1]|0,this.v1l=F[2]|0,this.v1h=F[3]|0,this.v2l=F[4]|0,this.v2h=F[5]|0,this.v3l=F[6]|0,this.v3h=F[7]|0,this.v4l=F[8]|0,this.v4h=F[9]|0,this.v5l=F[10]|0,this.v5h=F[11]|0,this.v6l=F[12]|0,this.v6h=F[13]|0,this.v7l=F[14]|0,this.v7h=F[15]|0,Qi(n,e,64,16,16);let{key:r,personalization:o,salt:s}=e,i=0;if(r!==void 0&&(r=ht(r),i=r.length),this.v0l^=this.outputLen|i<<8|65536|1<<24,s!==void 0){s=ht(s);const f=fe(s);this.v4l^=wt(f[0]),this.v4h^=wt(f[1]),this.v5l^=wt(f[2]),this.v5h^=wt(f[3])}if(o!==void 0){o=ht(o);const f=fe(o);this.v6l^=wt(f[0]),this.v6h^=wt(f[1]),this.v7l^=wt(f[2]),this.v7h^=wt(f[3])}if(r!==void 0){const f=new Uint8Array(this.blockLen);f.set(r),this.update(f)}}get(){let{v0l:e,v0h:n,v1l:r,v1h:o,v2l:s,v2h:i,v3l:f,v3h:a,v4l:l,v4h:c,v5l:u,v5h:h,v6l:g,v6h:w,v7l:y,v7h:x}=this;return[e,n,r,o,s,i,f,a,l,c,u,h,g,w,y,x]}set(e,n,r,o,s,i,f,a,l,c,u,h,g,w,y,x){this.v0l=e|0,this.v0h=n|0,this.v1l=r|0,this.v1h=o|0,this.v2l=s|0,this.v2h=i|0,this.v3l=f|0,this.v3h=a|0,this.v4l=l|0,this.v4h=c|0,this.v5l=u|0,this.v5h=h|0,this.v6l=g|0,this.v6h=w|0,this.v7l=y|0,this.v7h=x|0}compress(e,n,r){this.get().forEach((a,l)=>N[l]=a),N.set(F,16);let{h:o,l:s}=mr(BigInt(this.length));N[24]=F[8]^s,N[25]=F[9]^o,r&&(N[28]=~N[28],N[29]=~N[29]);let i=0;const f=Ji;for(let a=0;a<12;a++)$t(0,4,8,12,e,n+2*f[i++]),Ct(0,4,8,12,e,n+2*f[i++]),$t(1,5,9,13,e,n+2*f[i++]),Ct(1,5,9,13,e,n+2*f[i++]),$t(2,6,10,14,e,n+2*f[i++]),Ct(2,6,10,14,e,n+2*f[i++]),$t(3,7,11,15,e,n+2*f[i++]),Ct(3,7,11,15,e,n+2*f[i++]),$t(0,5,10,15,e,n+2*f[i++]),Ct(0,5,10,15,e,n+2*f[i++]),$t(1,6,11,12,e,n+2*f[i++]),Ct(1,6,11,12,e,n+2*f[i++]),$t(2,7,8,13,e,n+2*f[i++]),Ct(2,7,8,13,e,n+2*f[i++]),$t(3,4,9,14,e,n+2*f[i++]),Ct(3,4,9,14,e,n+2*f[i++]);this.v0l^=N[0]^N[16],this.v0h^=N[1]^N[17],this.v1l^=N[2]^N[18],this.v1h^=N[3]^N[19],this.v2l^=N[4]^N[20],this.v2h^=N[5]^N[21],this.v3l^=N[6]^N[22],this.v3h^=N[7]^N[23],this.v4l^=N[8]^N[24],this.v4h^=N[9]^N[25],this.v5l^=N[10]^N[26],this.v5h^=N[11]^N[27],this.v6l^=N[12]^N[28],this.v6h^=N[13]^N[29],this.v7l^=N[14]^N[30],this.v7h^=N[15]^N[31],ut(N)}destroy(){this.destroyed=!0,ut(this.buffer32),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const nf=Ui(t=>new ef(t)),rf="https://rpc.walletconnect.org/v1";function an(t){const e=`Ethereum Signed Message:
${t.length}`,n=new TextEncoder().encode(e+t);return"0x"+Buffer.from(Hi(n)).toString("hex")}async function Cr(t,e,n,r,o,s){switch(n.t){case"eip191":return await Lr(t,e,n.s);case"eip1271":return await jr(t,e,n.s,r,o,s);default:throw new Error(`verifySignature failed: Attempted to verify CacaoSignature with unknown type: ${n.t}`)}}async function Lr(t,e,n){return(await (0,viem__WEBPACK_IMPORTED_MODULE_4__.recoverAddress)({hash:an(e),signature:n})).toLowerCase()===t.toLowerCase()}async function jr(t,e,n,r,o,s){const i=Fe(r);if(!i.namespace||!i.reference)throw new Error(`isValidEip1271Signature failed: chainId must be in CAIP-2 format, received: ${r}`);try{const f="0x1626ba7e",a="0000000000000000000000000000000000000000000000000000000000000040",l=n.substring(2),c=(l.length/2).toString(16).padStart(64,"0"),u=(e.startsWith("0x")?e:an(e)).substring(2),h=f+u+a+c+l,g=await fetch(`${s||rf}/?chainId=${r}&projectId=${o}`,{headers:{"Content-Type":"application/json"},method:"POST",body:JSON.stringify({id:of(),jsonrpc:"2.0",method:"eth_call",params:[{to:t,data:h},"latest"]})}),{result:w}=await g.json();return w?w.slice(0,f.length).toLowerCase()===f.toLowerCase():!1}catch(f){return console.error("isValidEip1271Signature: ",f),!1}}function of(){return Date.now()+Math.floor(Math.random()*1e3)}function sf(t){const e=atob(t),n=new Uint8Array(e.length);for(let i=0;i<e.length;i++)n[i]=e.charCodeAt(i);const r=n[0];if(r===0)throw new Error("No signatures found");const o=1+r*64;if(n.length<o)throw new Error("Transaction data too short for claimed signature count");if(n.length<100)throw new Error("Transaction too short");const s=Buffer.from(t,"base64").slice(1,65);return bs58__WEBPACK_IMPORTED_MODULE_5__["default"].encode(s)}function ff(t){const e=new Uint8Array(Buffer.from(t,"base64")),n=Array.from("TransactionData::").map(s=>s.charCodeAt(0)),r=new Uint8Array(n.length+e.length);r.set(n),r.set(e,n.length);const o=nf(r,{dkLen:32});return bs58__WEBPACK_IMPORTED_MODULE_5__["default"].encode(o)}function cf(t){const e=new Uint8Array(Ae(kr(t)));return bs58__WEBPACK_IMPORTED_MODULE_5__["default"].encode(e)}function kr(t){if(t instanceof Uint8Array)return t;if(Array.isArray(t))return new Uint8Array(t);if(typeof t=="object"&&t!=null&&t.data)return new Uint8Array(Object.values(t.data));if(typeof t=="object"&&t)return new Uint8Array(Object.values(t));throw new Error("getNearUint8ArrayFromBytes: Unexpected result type from bytes array")}function af(t){const e=Buffer.from(t,"base64"),n=(0,_msgpack_msgpack__WEBPACK_IMPORTED_MODULE_7__.decode)(e).txn;if(!n)throw new Error("Invalid signed transaction: missing 'txn' field");const r=(0,_msgpack_msgpack__WEBPACK_IMPORTED_MODULE_6__.encode)(n),o=Buffer.from("TX"),s=Buffer.concat([o,Buffer.from(r)]),i=Xi(s);return _scure_base__WEBPACK_IMPORTED_MODULE_8__.base32.encode(i).replace(/=+$/,"")}function un(t){const e=[];let n=BigInt(t);for(;n>=BigInt(128);)e.push(Number(n&BigInt(127)|BigInt(128))),n>>=BigInt(7);return e.push(Number(n)),Buffer.from(e)}function uf(t){const e=Buffer.from(t.signed.bodyBytes,"base64"),n=Buffer.from(t.signed.authInfoBytes,"base64"),r=Buffer.from(t.signature.signature,"base64"),o=[];o.push(Buffer.from([10])),o.push(un(e.length)),o.push(e),o.push(Buffer.from([18])),o.push(un(n.length)),o.push(n),o.push(Buffer.from([26])),o.push(un(r.length)),o.push(r);const s=Buffer.concat(o),i=Ae(s);return Buffer.from(i).toString("hex").toUpperCase()}var lf=Object.defineProperty,df=Object.defineProperties,hf=Object.getOwnPropertyDescriptors,Pr=Object.getOwnPropertySymbols,pf=Object.prototype.hasOwnProperty,gf=Object.prototype.propertyIsEnumerable,Hr=(t,e,n)=>e in t?lf(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,ln=(t,e)=>{for(var n in e||(e={}))pf.call(e,n)&&Hr(t,n,e[n]);if(Pr)for(var n of Pr(e))gf.call(e,n)&&Hr(t,n,e[n]);return t},Dr=(t,e)=>df(t,hf(e));const bf="did:pkh:",Se=t=>t?.split(":"),Mr=t=>{const e=t&&Se(t);if(e)return t.includes(bf)?e[3]:e[1]},Vr=t=>{const e=t&&Se(t);if(e)return e[2]+":"+e[3]},dn=t=>{const e=t&&Se(t);if(e)return e.pop()};async function yf(t){const{cacao:e,projectId:n}=t,{s:r,p:o}=e,s=qr(o,o.iss),i=dn(o.iss);return await Cr(i,s,r,Vr(o.iss),n)}const qr=(t,e)=>{const n=`${t.domain} wants you to sign in with your Ethereum account:`,r=dn(e);if(!t.aud&&!t.uri)throw new Error("Either `aud` or `uri` is required to construct the message");let o=t.statement||void 0;const s=`URI: ${t.aud||t.uri}`,i=`Version: ${t.version}`,f=`Chain ID: ${Mr(e)}`,a=`Nonce: ${t.nonce}`,l=`Issued At: ${t.iat}`,c=t.exp?`Expiration Time: ${t.exp}`:void 0,u=t.nbf?`Not Before: ${t.nbf}`:void 0,h=t.requestId?`Request ID: ${t.requestId}`:void 0,g=t.resources?`Resources:${t.resources.map(y=>`
- ${y}`).join("")}`:void 0,w=Oe(t.resources);if(w){const y=Lt(w);o=gn(o,y)}return[n,r,"",o,"",s,i,f,a,l,c,u,h,g].filter(y=>y!=null).join(`
`)};function mf(t,e,n){return n.includes("did:pkh:")||(n=`did:pkh:${n}`),{h:{t:"caip122"},p:{iss:n,domain:t.domain,aud:t.aud,version:t.version,nonce:t.nonce,iat:t.iat,statement:t.statement,requestId:t.requestId,resources:t.resources,nbf:t.nbf,exp:t.exp},s:e}}function wf(t){var e;const{authPayload:n,chains:r,methods:o}=t,s=n.statement||"";if(!(r!=null&&r.length))return n;const i=n.chains,f=Je(i,r);if(!(f!=null&&f.length))throw new Error("No supported chains");const a=Kr(n.resources);if(!a)return n;bt(a);const l=Fr(a,"eip155");let c=n?.resources||[];if(l!=null&&l.length){const u=zr(l),h=Je(u,o);if(!(h!=null&&h.length))throw new Error(`Supported methods don't satisfy the requested: ${JSON.stringify(u)}, supported: ${JSON.stringify(o)}`);const g=hn("request",h,{chains:f}),w=Yr(a,"eip155",g);c=((e=n?.resources)==null?void 0:e.slice(0,-1))||[],c.push(Ne(w))}return Dr(ln({},n),{statement:Jr(s,Oe(c)),chains:f,resources:n!=null&&n.resources||c.length>0?c:void 0})}function Kr(t){const e=Oe(t);if(e&&pn(e))return Lt(e)}function xf(t,e){var n;return(n=t?.att)==null?void 0:n.hasOwnProperty(e)}function Fr(t,e){var n,r;return(n=t?.att)!=null&&n[e]?Object.keys((r=t?.att)==null?void 0:r[e]):[]}function vf(t){return t?.map(e=>Object.keys(e))||[]}function zr(t){return t?.map(e=>{var n;return(n=e.split("/"))==null?void 0:n[1]})||[]}function Gr(t){return Buffer.from(JSON.stringify(t)).toString("base64")}function Zr(t){return JSON.parse(Buffer.from(t,"base64").toString("utf-8"))}function bt(t){if(!t)throw new Error("No recap provided, value is undefined");if(!t.att)throw new Error("No `att` property found");const e=Object.keys(t.att);if(!(e!=null&&e.length))throw new Error("No resources found in `att` property");e.forEach(n=>{const r=t.att[n];if(Array.isArray(r))throw new Error(`Resource must be an object: ${n}`);if(typeof r!="object")throw new Error(`Resource must be an object: ${n}`);if(!Object.keys(r).length)throw new Error(`Resource object is empty: ${n}`);Object.keys(r).forEach(o=>{const s=r[o];if(!Array.isArray(s))throw new Error(`Ability limits ${o} must be an array of objects, found: ${s}`);if(!s.length)throw new Error(`Value of ${o} is empty array, must be an array with objects`);s.forEach(i=>{if(typeof i!="object")throw new Error(`Ability limits (${o}) must be an array of objects, found: ${i}`)})})})}function Wr(t,e,n,r={}){return n?.sort((o,s)=>o.localeCompare(s)),{att:{[t]:hn(e,n,r)}}}function Yr(t,e,n){var r;t.att[e]=ln({},n);const o=(r=Object.keys(t.att))==null?void 0:r.sort((i,f)=>i.localeCompare(f)),s={att:{}};return o.reduce((i,f)=>(i.att[f]=t.att[f],i),s)}function hn(t,e,n={}){e=e?.sort((o,s)=>o.localeCompare(s));const r=e.map(o=>({[`${t}/${o}`]:[n]}));return Object.assign({},...r)}function Ne(t){return bt(t),`urn:recap:${Gr(t).replace(/=/g,"")}`}function Lt(t){const e=Zr(t.replace("urn:recap:",""));return bt(e),e}function Ef(t,e,n){const r=Wr(t,e,n);return Ne(r)}function pn(t){return t&&t.includes("urn:recap:")}function Bf(t,e){const n=Lt(t),r=Lt(e),o=Xr(n,r);return Ne(o)}function Xr(t,e){bt(t),bt(e);const n=Object.keys(t.att).concat(Object.keys(e.att)).sort((o,s)=>o.localeCompare(s)),r={att:{}};return n.forEach(o=>{var s,i;Object.keys(((s=t.att)==null?void 0:s[o])||{}).concat(Object.keys(((i=e.att)==null?void 0:i[o])||{})).sort((f,a)=>f.localeCompare(a)).forEach(f=>{var a,l;r.att[o]=Dr(ln({},r.att[o]),{[f]:((a=t.att[o])==null?void 0:a[f])||((l=e.att[o])==null?void 0:l[f])})})}),r}function gn(t="",e){bt(e);const n="I further authorize the stated URI to perform the following actions on my behalf: ";if(t.includes(n))return t;const r=[];let o=0;Object.keys(e.att).forEach(f=>{const a=Object.keys(e.att[f]).map(u=>({ability:u.split("/")[0],action:u.split("/")[1]}));a.sort((u,h)=>u.action.localeCompare(h.action));const l={};a.forEach(u=>{l[u.ability]||(l[u.ability]=[]),l[u.ability].push(u.action)});const c=Object.keys(l).map(u=>(o++,`(${o}) '${u}': '${l[u].join("', '")}' for '${f}'.`));r.push(c.join(", ").replace(".,","."))});const s=r.join(" "),i=`${n}${s}`;return`${t?t+" ":""}${i}`}function If(t){var e;const n=Lt(t);bt(n);const r=(e=n.att)==null?void 0:e.eip155;return r?Object.keys(r).map(o=>o.split("/")[1]):[]}function Af(t){const e=Lt(t);bt(e);const n=[];return Object.values(e.att).forEach(r=>{Object.values(r).forEach(o=>{var s;(s=o?.[0])!=null&&s.chains&&n.push(o[0].chains)})}),[...new Set(n.flat())]}function Jr(t,e){if(!e)return t;const n=Lt(e);return bt(n),gn(t,n)}function Oe(t){if(!t)return;const e=t?.[t.length-1];return pn(e)?e:void 0}/*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */function Qr(t){return t instanceof Uint8Array||ArrayBuffer.isView(t)&&t.constructor.name==="Uint8Array"}function bn(t){if(typeof t!="boolean")throw new Error(`boolean expected, not ${t}`)}function yn(t){if(!Number.isSafeInteger(t)||t<0)throw new Error("positive integer expected, got "+t)}function nt(t,...e){if(!Qr(t))throw new Error("Uint8Array expected");if(e.length>0&&!e.includes(t.length))throw new Error("Uint8Array expected of length "+e+", got length="+t.length)}function to(t,e=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(e&&t.finished)throw new Error("Hash#digest() has already been called")}function Sf(t,e){nt(t);const n=e.outputLen;if(t.length<n)throw new Error("digestInto() expects output buffer of length at least "+n)}function jt(t){return new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4))}function Wt(...t){for(let e=0;e<t.length;e++)t[e].fill(0)}function Nf(t){return new DataView(t.buffer,t.byteOffset,t.byteLength)}const Of=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;function Uf(t){if(typeof t!="string")throw new Error("string expected");return new Uint8Array(new TextEncoder().encode(t))}function mn(t){if(typeof t=="string")t=Uf(t);else if(Qr(t))t=wn(t);else throw new Error("Uint8Array expected, got "+typeof t);return t}function _f(t,e){if(e==null||typeof e!="object")throw new Error("options must be defined");return Object.assign(t,e)}function Tf(t,e){if(t.length!==e.length)return!1;let n=0;for(let r=0;r<t.length;r++)n|=t[r]^e[r];return n===0}const Rf=(t,e)=>{function n(r,...o){if(nt(r),!Of)throw new Error("Non little-endian hardware is not yet supported");if(t.nonceLength!==void 0){const c=o[0];if(!c)throw new Error("nonce / iv required");t.varSizeNonce?nt(c):nt(c,t.nonceLength)}const s=t.tagLength;s&&o[1]!==void 0&&nt(o[1]);const i=e(r,...o),f=(c,u)=>{if(u!==void 0){if(c!==2)throw new Error("cipher output not supported");nt(u)}};let a=!1;return{encrypt(c,u){if(a)throw new Error("cannot encrypt() twice with same key + nonce");return a=!0,nt(c),f(i.encrypt.length,u),i.encrypt(c,u)},decrypt(c,u){if(nt(c),s&&c.length<s)throw new Error("invalid ciphertext length: smaller than tagLength="+s);return f(i.decrypt.length,u),i.decrypt(c,u)}}}return Object.assign(n,t),n};function eo(t,e,n=!0){if(e===void 0)return new Uint8Array(t);if(e.length!==t)throw new Error("invalid output length, expected "+t+", got: "+e.length);if(n&&!Cf(e))throw new Error("invalid output, must be aligned");return e}function no(t,e,n,r){if(typeof t.setBigUint64=="function")return t.setBigUint64(e,n,r);const o=BigInt(32),s=BigInt(4294967295),i=Number(n>>o&s),f=Number(n&s),a=r?4:0,l=r?0:4;t.setUint32(e+a,i,r),t.setUint32(e+l,f,r)}function $f(t,e,n){bn(n);const r=new Uint8Array(16),o=Nf(r);return no(o,0,BigInt(e),n),no(o,8,BigInt(t),n),r}function Cf(t){return t.byteOffset%4===0}function wn(t){return Uint8Array.from(t)}const ro=t=>Uint8Array.from(t.split("").map(e=>e.charCodeAt(0))),Lf=ro("expand 16-byte k"),jf=ro("expand 32-byte k"),kf=jt(Lf),Pf=jt(jf);function D(t,e){return t<<e|t>>>32-e}function xn(t){return t.byteOffset%4===0}const Ue=64,Hf=16,oo=2**32-1,so=new Uint32Array;function Df(t,e,n,r,o,s,i,f){const a=o.length,l=new Uint8Array(Ue),c=jt(l),u=xn(o)&&xn(s),h=u?jt(o):so,g=u?jt(s):so;for(let w=0;w<a;i++){if(t(e,n,r,c,i,f),i>=oo)throw new Error("arx: counter overflow");const y=Math.min(Ue,a-w);if(u&&y===Ue){const x=w/4;if(w%4!==0)throw new Error("arx: invalid block position");for(let R=0,M;R<Hf;R++)M=x+R,g[M]=h[M]^c[R];w+=Ue;continue}for(let x=0,R;x<y;x++)R=w+x,s[R]=o[R]^l[x];w+=y}}function Mf(t,e){const{allowShortKeys:n,extendNonceFn:r,counterLength:o,counterRight:s,rounds:i}=_f({allowShortKeys:!1,counterLength:8,counterRight:!1,rounds:20},e);if(typeof t!="function")throw new Error("core must be a function");return yn(o),yn(i),bn(s),bn(n),(f,a,l,c,u=0)=>{nt(f),nt(a),nt(l);const h=l.length;if(c===void 0&&(c=new Uint8Array(h)),nt(c),yn(u),u<0||u>=oo)throw new Error("arx: counter overflow");if(c.length<h)throw new Error(`arx: output (${c.length}) is shorter than data (${h})`);const g=[];let w=f.length,y,x;if(w===32)g.push(y=wn(f)),x=Pf;else if(w===16&&n)y=new Uint8Array(32),y.set(f),y.set(f,16),x=kf,g.push(y);else throw new Error(`arx: invalid 32-byte key, got length=${w}`);xn(a)||g.push(a=wn(a));const R=jt(y);if(r){if(a.length!==24)throw new Error("arx: extended nonce must be 24 bytes");r(x,R,jt(a.subarray(0,16)),R),a=a.subarray(16)}const M=16-o;if(M!==a.length)throw new Error(`arx: nonce must be ${M} or 16 bytes`);if(M!==12){const V=new Uint8Array(12);V.set(a,s?0:12-a.length),a=V,g.push(a)}const L=jt(a);return Df(t,x,R,L,l,c,u,i),Wt(...g),c}}const G=(t,e)=>t[e++]&255|(t[e++]&255)<<8;class Vf{constructor(e){this.blockLen=16,this.outputLen=16,this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.pos=0,this.finished=!1,e=mn(e),nt(e,32);const n=G(e,0),r=G(e,2),o=G(e,4),s=G(e,6),i=G(e,8),f=G(e,10),a=G(e,12),l=G(e,14);this.r[0]=n&8191,this.r[1]=(n>>>13|r<<3)&8191,this.r[2]=(r>>>10|o<<6)&7939,this.r[3]=(o>>>7|s<<9)&8191,this.r[4]=(s>>>4|i<<12)&255,this.r[5]=i>>>1&8190,this.r[6]=(i>>>14|f<<2)&8191,this.r[7]=(f>>>11|a<<5)&8065,this.r[8]=(a>>>8|l<<8)&8191,this.r[9]=l>>>5&127;for(let c=0;c<8;c++)this.pad[c]=G(e,16+2*c)}process(e,n,r=!1){const o=r?0:2048,{h:s,r:i}=this,f=i[0],a=i[1],l=i[2],c=i[3],u=i[4],h=i[5],g=i[6],w=i[7],y=i[8],x=i[9],R=G(e,n+0),M=G(e,n+2),L=G(e,n+4),V=G(e,n+6),_=G(e,n+8),k=G(e,n+10),j=G(e,n+12),$=G(e,n+14);let d=s[0]+(R&8191),m=s[1]+((R>>>13|M<<3)&8191),p=s[2]+((M>>>10|L<<6)&8191),b=s[3]+((L>>>7|V<<9)&8191),v=s[4]+((V>>>4|_<<12)&8191),B=s[5]+(_>>>1&8191),E=s[6]+((_>>>14|k<<2)&8191),I=s[7]+((k>>>11|j<<5)&8191),S=s[8]+((j>>>8|$<<8)&8191),O=s[9]+($>>>5|o),A=0,T=A+d*f+m*(5*x)+p*(5*y)+b*(5*w)+v*(5*g);A=T>>>13,T&=8191,T+=B*(5*h)+E*(5*u)+I*(5*c)+S*(5*l)+O*(5*a),A+=T>>>13,T&=8191;let U=A+d*a+m*f+p*(5*x)+b*(5*y)+v*(5*w);A=U>>>13,U&=8191,U+=B*(5*g)+E*(5*h)+I*(5*u)+S*(5*c)+O*(5*l),A+=U>>>13,U&=8191;let C=A+d*l+m*a+p*f+b*(5*x)+v*(5*y);A=C>>>13,C&=8191,C+=B*(5*w)+E*(5*g)+I*(5*h)+S*(5*u)+O*(5*c),A+=C>>>13,C&=8191;let H=A+d*c+m*l+p*a+b*f+v*(5*x);A=H>>>13,H&=8191,H+=B*(5*y)+E*(5*w)+I*(5*g)+S*(5*h)+O*(5*u),A+=H>>>13,H&=8191;let q=A+d*u+m*c+p*l+b*a+v*f;A=q>>>13,q&=8191,q+=B*(5*x)+E*(5*y)+I*(5*w)+S*(5*g)+O*(5*h),A+=q>>>13,q&=8191;let P=A+d*h+m*u+p*c+b*l+v*a;A=P>>>13,P&=8191,P+=B*f+E*(5*x)+I*(5*y)+S*(5*w)+O*(5*g),A+=P>>>13,P&=8191;let K=A+d*g+m*h+p*u+b*c+v*l;A=K>>>13,K&=8191,K+=B*a+E*f+I*(5*x)+S*(5*y)+O*(5*w),A+=K>>>13,K&=8191;let et=A+d*w+m*g+p*h+b*u+v*c;A=et>>>13,et&=8191,et+=B*l+E*a+I*f+S*(5*x)+O*(5*y),A+=et>>>13,et&=8191;let Z=A+d*y+m*w+p*g+b*h+v*u;A=Z>>>13,Z&=8191,Z+=B*c+E*l+I*a+S*f+O*(5*x),A+=Z>>>13,Z&=8191;let z=A+d*x+m*y+p*w+b*g+v*h;A=z>>>13,z&=8191,z+=B*u+E*c+I*l+S*a+O*f,A+=z>>>13,z&=8191,A=(A<<2)+A|0,A=A+T|0,T=A&8191,A=A>>>13,U+=A,s[0]=T,s[1]=U,s[2]=C,s[3]=H,s[4]=q,s[5]=P,s[6]=K,s[7]=et,s[8]=Z,s[9]=z}finalize(){const{h:e,pad:n}=this,r=new Uint16Array(10);let o=e[1]>>>13;e[1]&=8191;for(let f=2;f<10;f++)e[f]+=o,o=e[f]>>>13,e[f]&=8191;e[0]+=o*5,o=e[0]>>>13,e[0]&=8191,e[1]+=o,o=e[1]>>>13,e[1]&=8191,e[2]+=o,r[0]=e[0]+5,o=r[0]>>>13,r[0]&=8191;for(let f=1;f<10;f++)r[f]=e[f]+o,o=r[f]>>>13,r[f]&=8191;r[9]-=8192;let s=(o^1)-1;for(let f=0;f<10;f++)r[f]&=s;s=~s;for(let f=0;f<10;f++)e[f]=e[f]&s|r[f];e[0]=(e[0]|e[1]<<13)&65535,e[1]=(e[1]>>>3|e[2]<<10)&65535,e[2]=(e[2]>>>6|e[3]<<7)&65535,e[3]=(e[3]>>>9|e[4]<<4)&65535,e[4]=(e[4]>>>12|e[5]<<1|e[6]<<14)&65535,e[5]=(e[6]>>>2|e[7]<<11)&65535,e[6]=(e[7]>>>5|e[8]<<8)&65535,e[7]=(e[8]>>>8|e[9]<<5)&65535;let i=e[0]+n[0];e[0]=i&65535;for(let f=1;f<8;f++)i=(e[f]+n[f]|0)+(i>>>16)|0,e[f]=i&65535;Wt(r)}update(e){to(this),e=mn(e),nt(e);const{buffer:n,blockLen:r}=this,o=e.length;for(let s=0;s<o;){const i=Math.min(r-this.pos,o-s);if(i===r){for(;r<=o-s;s+=r)this.process(e,s);continue}n.set(e.subarray(s,s+i),this.pos),this.pos+=i,s+=i,this.pos===r&&(this.process(n,0,!1),this.pos=0)}return this}destroy(){Wt(this.h,this.r,this.buffer,this.pad)}digestInto(e){to(this),Sf(e,this),this.finished=!0;const{buffer:n,h:r}=this;let{pos:o}=this;if(o){for(n[o++]=1;o<16;o++)n[o]=0;this.process(n,0,!0)}this.finalize();let s=0;for(let i=0;i<8;i++)e[s++]=r[i]>>>0,e[s++]=r[i]>>>8;return e}digest(){const{buffer:e,outputLen:n}=this;this.digestInto(e);const r=e.slice(0,n);return this.destroy(),r}}function qf(t){const e=(r,o)=>t(o).update(mn(r)).digest(),n=t(new Uint8Array(32));return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=r=>t(r),e}const Kf=qf(t=>new Vf(t));function Ff(t,e,n,r,o,s=20){let i=t[0],f=t[1],a=t[2],l=t[3],c=e[0],u=e[1],h=e[2],g=e[3],w=e[4],y=e[5],x=e[6],R=e[7],M=o,L=n[0],V=n[1],_=n[2],k=i,j=f,$=a,d=l,m=c,p=u,b=h,v=g,B=w,E=y,I=x,S=R,O=M,A=L,T=V,U=_;for(let H=0;H<s;H+=2)k=k+m|0,O=D(O^k,16),B=B+O|0,m=D(m^B,12),k=k+m|0,O=D(O^k,8),B=B+O|0,m=D(m^B,7),j=j+p|0,A=D(A^j,16),E=E+A|0,p=D(p^E,12),j=j+p|0,A=D(A^j,8),E=E+A|0,p=D(p^E,7),$=$+b|0,T=D(T^$,16),I=I+T|0,b=D(b^I,12),$=$+b|0,T=D(T^$,8),I=I+T|0,b=D(b^I,7),d=d+v|0,U=D(U^d,16),S=S+U|0,v=D(v^S,12),d=d+v|0,U=D(U^d,8),S=S+U|0,v=D(v^S,7),k=k+p|0,U=D(U^k,16),I=I+U|0,p=D(p^I,12),k=k+p|0,U=D(U^k,8),I=I+U|0,p=D(p^I,7),j=j+b|0,O=D(O^j,16),S=S+O|0,b=D(b^S,12),j=j+b|0,O=D(O^j,8),S=S+O|0,b=D(b^S,7),$=$+v|0,A=D(A^$,16),B=B+A|0,v=D(v^B,12),$=$+v|0,A=D(A^$,8),B=B+A|0,v=D(v^B,7),d=d+m|0,T=D(T^d,16),E=E+T|0,m=D(m^E,12),d=d+m|0,T=D(T^d,8),E=E+T|0,m=D(m^E,7);let C=0;r[C++]=i+k|0,r[C++]=f+j|0,r[C++]=a+$|0,r[C++]=l+d|0,r[C++]=c+m|0,r[C++]=u+p|0,r[C++]=h+b|0,r[C++]=g+v|0,r[C++]=w+B|0,r[C++]=y+E|0,r[C++]=x+I|0,r[C++]=R+S|0,r[C++]=M+O|0,r[C++]=L+A|0,r[C++]=V+T|0,r[C++]=_+U|0}const zf=Mf(Ff,{counterRight:!1,counterLength:4,allowShortKeys:!1}),Gf=new Uint8Array(16),io=(t,e)=>{t.update(e);const n=e.length%16;n&&t.update(Gf.subarray(n))},Zf=new Uint8Array(32);function fo(t,e,n,r,o){const s=t(e,n,Zf),i=Kf.create(s);o&&io(i,o),io(i,r);const f=$f(r.length,o?o.length:0,!0);i.update(f);const a=i.digest();return Wt(s,f),a}const Wf=t=>(e,n,r)=>({encrypt(s,i){const f=s.length;i=eo(f+16,i,!1),i.set(s);const a=i.subarray(0,-16);t(e,n,a,a,1);const l=fo(t,e,n,a,r);return i.set(l,f),Wt(l),i},decrypt(s,i){i=eo(s.length-16,i,!1);const f=s.subarray(0,-16),a=s.subarray(-16),l=fo(t,e,n,f,r);if(!Tf(a,l))throw new Error("invalid tag");return i.set(s.subarray(0,-16)),t(e,n,i,i,1),Wt(l),i}}),co=Rf({blockSize:64,nonceLength:12,tagLength:16},Wf(zf));class ao extends Ie{constructor(e,n){super(),this.finished=!1,this.destroyed=!1,rn(e);const r=ht(n);if(this.iHash=e.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const o=this.blockLen,s=new Uint8Array(o);s.set(r.length>o?e.create().update(r).digest():r);for(let i=0;i<s.length;i++)s[i]^=54;this.iHash.update(s),this.oHash=e.create();for(let i=0;i<s.length;i++)s[i]^=106;this.oHash.update(s),ut(s)}update(e){return Nt(this),this.iHash.update(e),this}digestInto(e){Nt(this),at(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:n,iHash:r,finished:o,destroyed:s,blockLen:i,outputLen:f}=this;return e=e,e.finished=o,e.destroyed=s,e.blockLen=i,e.outputLen=f,e.oHash=n._cloneInto(e.oHash),e.iHash=r._cloneInto(e.iHash),e}clone(){return this._cloneInto()}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const _e=(t,e,n)=>new ao(t,e).update(n).digest();_e.create=(t,e)=>new ao(t,e);function Yf(t,e,n){return rn(t),n===void 0&&(n=new Uint8Array(t.outputLen)),_e(t,ht(n),ht(e))}const vn=Uint8Array.from([0]),uo=Uint8Array.of();function Xf(t,e,n,r=32){rn(t),mt(r);const o=t.outputLen;if(r>255*o)throw new Error("Length should be <= 255*HashLen");const s=Math.ceil(r/o);n===void 0&&(n=uo);const i=new Uint8Array(s*o),f=_e.create(t,e),a=f._cloneInto(),l=new Uint8Array(f.outputLen);for(let c=0;c<s;c++)vn[0]=c+1,a.update(c===0?uo:l).update(n).update(vn).digestInto(l),i.set(l,o*c),f._cloneInto(a);return f.destroy(),a.destroy(),ut(l,vn),i.slice(0,r)}const Jf=(t,e,n,r,o)=>Xf(t,Yf(t,e,n),r,o),Te=Ae,En=BigInt(0),Bn=BigInt(1);function Re(t,e){if(typeof e!="boolean")throw new Error(t+" boolean expected, got "+e)}function $e(t){const e=t.toString(16);return e.length&1?"0"+e:e}function lo(t){if(typeof t!="string")throw new Error("hex string expected, got "+typeof t);return t===""?En:BigInt("0x"+t)}function Ce(t){return lo(ce(t))}function Le(t){return at(t),lo(ce(Uint8Array.from(t).reverse()))}function In(t,e){return fn(t.toString(16).padStart(e*2,"0"))}function An(t,e){return In(t,e).reverse()}function rt(t,e,n){let r;if(typeof e=="string")try{r=fn(e)}catch(s){throw new Error(t+" must be hex string or Uint8Array, cause: "+s)}else if(nn(e))r=Uint8Array.from(e);else throw new Error(t+" must be hex string or Uint8Array");const o=r.length;if(typeof n=="number"&&o!==n)throw new Error(t+" of length "+n+" expected, got "+o);return r}const Sn=t=>typeof t=="bigint"&&En<=t;function Qf(t,e,n){return Sn(t)&&Sn(e)&&Sn(n)&&e<=t&&t<n}function Nn(t,e,n,r){if(!Qf(e,n,r))throw new Error("expected valid "+t+": "+n+" <= n < "+r+", got "+e)}function tc(t){let e;for(e=0;t>En;t>>=Bn,e+=1);return e}const je=t=>(Bn<<BigInt(t))-Bn;function ec(t,e,n){if(typeof t!="number"||t<2)throw new Error("hashLen must be a number");if(typeof e!="number"||e<2)throw new Error("qByteLen must be a number");if(typeof n!="function")throw new Error("hmacFn must be a function");const r=g=>new Uint8Array(g),o=g=>Uint8Array.of(g);let s=r(t),i=r(t),f=0;const a=()=>{s.fill(1),i.fill(0),f=0},l=(...g)=>n(i,s,...g),c=(g=r(0))=>{i=l(o(0),g),s=l(),g.length!==0&&(i=l(o(1),g),s=l())},u=()=>{if(f++>=1e3)throw new Error("drbg: tried 1000 values");let g=0;const w=[];for(;g<e;){s=l();const y=s.slice();w.push(y),g+=s.length}return Ht(...w)};return(g,w)=>{a(),c(g);let y;for(;!(y=w(u()));)c();return a(),y}}function ke(t,e,n={}){if(!t||typeof t!="object")throw new Error("expected valid options object");function r(o,s,i){const f=t[o];if(i&&f===void 0)return;const a=typeof f;if(a!==s||f===null)throw new Error(`param "${o}" is invalid: expected ${s}, got ${a}`)}Object.entries(e).forEach(([o,s])=>r(o,s,!1)),Object.entries(n).forEach(([o,s])=>r(o,s,!0))}function ho(t){const e=new WeakMap;return(n,...r)=>{const o=e.get(n);if(o!==void 0)return o;const s=t(n,...r);return e.set(n,s),s}}const ot=BigInt(0),Q=BigInt(1),Dt=BigInt(2),nc=BigInt(3),po=BigInt(4),go=BigInt(5),bo=BigInt(8);function lt(t,e){const n=t%e;return n>=ot?n:e+n}function pt(t,e,n){let r=t;for(;e-- >ot;)r*=r,r%=n;return r}function yo(t,e){if(t===ot)throw new Error("invert: expected non-zero number");if(e<=ot)throw new Error("invert: expected positive modulus, got "+e);let n=lt(t,e),r=e,o=ot,s=Q;for(;n!==ot;){const f=r/n,a=r%n,l=o-s*f;r=n,n=a,o=s,s=l}if(r!==Q)throw new Error("invert: does not exist");return lt(o,e)}function mo(t,e){const n=(t.ORDER+Q)/po,r=t.pow(e,n);if(!t.eql(t.sqr(r),e))throw new Error("Cannot find square root");return r}function rc(t,e){const n=(t.ORDER-go)/bo,r=t.mul(e,Dt),o=t.pow(r,n),s=t.mul(e,o),i=t.mul(t.mul(s,Dt),o),f=t.mul(s,t.sub(i,t.ONE));if(!t.eql(t.sqr(f),e))throw new Error("Cannot find square root");return f}function oc(t){if(t<BigInt(3))throw new Error("sqrt is not defined for small field");let e=t-Q,n=0;for(;e%Dt===ot;)e/=Dt,n++;let r=Dt;const o=Yt(t);for(;xo(o,r)===1;)if(r++>1e3)throw new Error("Cannot find square root: probably non-prime P");if(n===1)return mo;let s=o.pow(r,e);const i=(e+Q)/Dt;return function(a,l){if(a.is0(l))return l;if(xo(a,l)!==1)throw new Error("Cannot find square root");let c=n,u=a.mul(a.ONE,s),h=a.pow(l,e),g=a.pow(l,i);for(;!a.eql(h,a.ONE);){if(a.is0(h))return a.ZERO;let w=1,y=a.sqr(h);for(;!a.eql(y,a.ONE);)if(w++,y=a.sqr(y),w===c)throw new Error("Cannot find square root");const x=Q<<BigInt(c-w-1),R=a.pow(u,x);c=w,u=a.sqr(R),h=a.mul(h,u),g=a.mul(g,R)}return g}}function sc(t){return t%po===nc?mo:t%bo===go?rc:oc(t)}const ic=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function fc(t){const e={ORDER:"bigint",MASK:"bigint",BYTES:"number",BITS:"number"},n=ic.reduce((r,o)=>(r[o]="function",r),e);return ke(t,n),t}function cc(t,e,n){if(n<ot)throw new Error("invalid exponent, negatives unsupported");if(n===ot)return t.ONE;if(n===Q)return e;let r=t.ONE,o=e;for(;n>ot;)n&Q&&(r=t.mul(r,o)),o=t.sqr(o),n>>=Q;return r}function wo(t,e,n=!1){const r=new Array(e.length).fill(n?t.ZERO:void 0),o=e.reduce((i,f,a)=>t.is0(f)?i:(r[a]=i,t.mul(i,f)),t.ONE),s=t.inv(o);return e.reduceRight((i,f,a)=>t.is0(f)?i:(r[a]=t.mul(i,r[a]),t.mul(i,f)),s),r}function xo(t,e){const n=(t.ORDER-Q)/Dt,r=t.pow(e,n),o=t.eql(r,t.ONE),s=t.eql(r,t.ZERO),i=t.eql(r,t.neg(t.ONE));if(!o&&!s&&!i)throw new Error("invalid Legendre symbol result");return o?1:s?0:-1}function ac(t,e){e!==void 0&&mt(e);const n=e!==void 0?e:t.toString(2).length,r=Math.ceil(n/8);return{nBitLength:n,nByteLength:r}}function Yt(t,e,n=!1,r={}){if(t<=ot)throw new Error("invalid field: expected ORDER > 0, got "+t);let o,s;if(typeof e=="object"&&e!=null){if(r.sqrt||n)throw new Error("cannot specify opts in two arguments");const c=e;c.BITS&&(o=c.BITS),c.sqrt&&(s=c.sqrt),typeof c.isLE=="boolean"&&(n=c.isLE)}else typeof e=="number"&&(o=e),r.sqrt&&(s=r.sqrt);const{nBitLength:i,nByteLength:f}=ac(t,o);if(f>2048)throw new Error("invalid field: expected ORDER of <= 2048 bytes");let a;const l=Object.freeze({ORDER:t,isLE:n,BITS:i,BYTES:f,MASK:je(i),ZERO:ot,ONE:Q,create:c=>lt(c,t),isValid:c=>{if(typeof c!="bigint")throw new Error("invalid field element: expected bigint, got "+typeof c);return ot<=c&&c<t},is0:c=>c===ot,isValidNot0:c=>!l.is0(c)&&l.isValid(c),isOdd:c=>(c&Q)===Q,neg:c=>lt(-c,t),eql:(c,u)=>c===u,sqr:c=>lt(c*c,t),add:(c,u)=>lt(c+u,t),sub:(c,u)=>lt(c-u,t),mul:(c,u)=>lt(c*u,t),pow:(c,u)=>cc(l,c,u),div:(c,u)=>lt(c*yo(u,t),t),sqrN:c=>c*c,addN:(c,u)=>c+u,subN:(c,u)=>c-u,mulN:(c,u)=>c*u,inv:c=>yo(c,t),sqrt:s||(c=>(a||(a=sc(t)),a(l,c))),toBytes:c=>n?An(c,f):In(c,f),fromBytes:c=>{if(c.length!==f)throw new Error("Field.fromBytes: expected "+f+" bytes, got "+c.length);return n?Le(c):Ce(c)},invertBatch:c=>wo(l,c),cmov:(c,u,h)=>h?u:c});return Object.freeze(l)}function vo(t){if(typeof t!="bigint")throw new Error("field order must be bigint");const e=t.toString(2).length;return Math.ceil(e/8)}function Eo(t){const e=vo(t);return e+Math.ceil(e/2)}function uc(t,e,n=!1){const r=t.length,o=vo(e),s=Eo(e);if(r<16||r<s||r>1024)throw new Error("expected "+s+"-1024 bytes of input, got "+r);const i=n?Le(t):Ce(t),f=lt(i,e-Q)+Q;return n?An(f,o):In(f,o)}const Xt=BigInt(0),Mt=BigInt(1);function le(t,e){const n=e.negate();return t?n:e}function lc(t,e,n){const r=e==="pz"?i=>i.pz:i=>i.ez,o=wo(t.Fp,n.map(r));return n.map((i,f)=>i.toAffine(o[f])).map(t.fromAffine)}function Bo(t,e){if(!Number.isSafeInteger(t)||t<=0||t>e)throw new Error("invalid window size, expected [1.."+e+"], got W="+t)}function On(t,e){Bo(t,e);const n=Math.ceil(e/t)+1,r=2**(t-1),o=2**t,s=je(t),i=BigInt(t);return{windows:n,windowSize:r,mask:s,maxNumber:o,shiftBy:i}}function Io(t,e,n){const{windowSize:r,mask:o,maxNumber:s,shiftBy:i}=n;let f=Number(t&o),a=t>>i;f>r&&(f-=s,a+=Mt);const l=e*r,c=l+Math.abs(f)-1,u=f===0,h=f<0,g=e%2!==0;return{nextN:a,offset:c,isZero:u,isNeg:h,isNegF:g,offsetF:l}}function dc(t,e){if(!Array.isArray(t))throw new Error("array expected");t.forEach((n,r)=>{if(!(n instanceof e))throw new Error("invalid point at index "+r)})}function hc(t,e){if(!Array.isArray(t))throw new Error("array of scalars expected");t.forEach((n,r)=>{if(!e.isValid(n))throw new Error("invalid scalar at index "+r)})}const Un=new WeakMap,Ao=new WeakMap;function _n(t){return Ao.get(t)||1}function So(t){if(t!==Xt)throw new Error("invalid wNAF")}function pc(t,e){return{constTimeNegate:le,hasPrecomputes(n){return _n(n)!==1},unsafeLadder(n,r,o=t.ZERO){let s=n;for(;r>Xt;)r&Mt&&(o=o.add(s)),s=s.double(),r>>=Mt;return o},precomputeWindow(n,r){const{windows:o,windowSize:s}=On(r,e),i=[];let f=n,a=f;for(let l=0;l<o;l++){a=f,i.push(a);for(let c=1;c<s;c++)a=a.add(f),i.push(a);f=a.double()}return i},wNAF(n,r,o){let s=t.ZERO,i=t.BASE;const f=On(n,e);for(let a=0;a<f.windows;a++){const{nextN:l,offset:c,isZero:u,isNeg:h,isNegF:g,offsetF:w}=Io(o,a,f);o=l,u?i=i.add(le(g,r[w])):s=s.add(le(h,r[c]))}return So(o),{p:s,f:i}},wNAFUnsafe(n,r,o,s=t.ZERO){const i=On(n,e);for(let f=0;f<i.windows&&o!==Xt;f++){const{nextN:a,offset:l,isZero:c,isNeg:u}=Io(o,f,i);if(o=a,!c){const h=r[l];s=s.add(u?h.negate():h)}}return So(o),s},getPrecomputes(n,r,o){let s=Un.get(r);return s||(s=this.precomputeWindow(r,n),n!==1&&(typeof o=="function"&&(s=o(s)),Un.set(r,s))),s},wNAFCached(n,r,o){const s=_n(n);return this.wNAF(s,this.getPrecomputes(s,n,o),r)},wNAFCachedUnsafe(n,r,o,s){const i=_n(n);return i===1?this.unsafeLadder(n,r,s):this.wNAFUnsafe(i,this.getPrecomputes(i,n,o),r,s)},setWindowSize(n,r){Bo(r,e),Ao.set(n,r),Un.delete(n)}}}function gc(t,e,n,r){let o=e,s=t.ZERO,i=t.ZERO;for(;n>Xt||r>Xt;)n&Mt&&(s=s.add(o)),r&Mt&&(i=i.add(o)),o=o.double(),n>>=Mt,r>>=Mt;return{p1:s,p2:i}}function bc(t,e,n,r){dc(n,t),hc(r,e);const o=n.length,s=r.length;if(o!==s)throw new Error("arrays of points and scalars must have equal length");const i=t.ZERO,f=tc(BigInt(o));let a=1;f>12?a=f-3:f>4?a=f-2:f>0&&(a=2);const l=je(a),c=new Array(Number(l)+1).fill(i),u=Math.floor((e.BITS-1)/a)*a;let h=i;for(let g=u;g>=0;g-=a){c.fill(i);for(let y=0;y<s;y++){const x=r[y],R=Number(x>>BigInt(g)&l);c[R]=c[R].add(n[y])}let w=i;for(let y=c.length-1,x=i;y>0;y--)x=x.add(c[y]),w=w.add(x);if(h=h.add(w),g!==0)for(let y=0;y<a;y++)h=h.double()}return h}function No(t,e){if(e){if(e.ORDER!==t)throw new Error("Field.ORDER must match order: Fp == p, Fn == n");return fc(e),e}else return Yt(t)}function yc(t,e,n={}){if(!e||typeof e!="object")throw new Error(`expected valid ${t} CURVE object`);for(const f of["p","n","h"]){const a=e[f];if(!(typeof a=="bigint"&&a>Xt))throw new Error(`CURVE.${f} must be positive bigint`)}const r=No(e.p,n.Fp),o=No(e.n,n.Fn),i=["Gx","Gy","a",t==="weierstrass"?"b":"d"];for(const f of i)if(!r.isValid(e[f]))throw new Error(`CURVE.${f} must be valid field element of CURVE.Fp`);return{Fp:r,Fn:o}}BigInt(0),BigInt(1),BigInt(2),BigInt(8);const de=BigInt(0),Jt=BigInt(1),Pe=BigInt(2);function mc(t){return ke(t,{adjustScalarBytes:"function",powPminus2:"function"}),Object.freeze({...t})}function wc(t){const e=mc(t),{P:n,type:r,adjustScalarBytes:o,powPminus2:s,randomBytes:i}=e,f=r==="x25519";if(!f&&r!=="x448")throw new Error("invalid type");const a=i||Zt,l=f?255:448,c=f?32:56,u=BigInt(f?9:5),h=BigInt(f?121665:39081),g=f?Pe**BigInt(254):Pe**BigInt(447),w=f?BigInt(8)*Pe**BigInt(251)-Jt:BigInt(4)*Pe**BigInt(445)-Jt,y=g+w+Jt,x=d=>lt(d,n),R=M(u);function M(d){return An(x(d),c)}function L(d){const m=rt("u coordinate",d,c);return f&&(m[31]&=127),x(Le(m))}function V(d){return Le(o(rt("scalar",d,c)))}function _(d,m){const p=$(L(m),V(d));if(p===de)throw new Error("invalid private or public key received");return M(p)}function k(d){return _(d,R)}function j(d,m,p){const b=x(d*(m-p));return m=x(m-b),p=x(p+b),{x_2:m,x_3:p}}function $(d,m){Nn("u",d,de,n),Nn("scalar",m,g,y);const p=m,b=d;let v=Jt,B=de,E=d,I=Jt,S=de;for(let A=BigInt(l-1);A>=de;A--){const T=p>>A&Jt;S^=T,{x_2:v,x_3:E}=j(S,v,E),{x_2:B,x_3:I}=j(S,B,I),S=T;const U=v+B,C=x(U*U),H=v-B,q=x(H*H),P=C-q,K=E+I,et=E-I,Z=x(et*U),z=x(K*H),Ft=Z+z,yt=Z-z;E=x(Ft*Ft),I=x(b*x(yt*yt)),v=x(C*q),B=x(P*(C+x(h*P)))}({x_2:v,x_3:E}=j(S,v,E)),{x_2:B,x_3:I}=j(S,B,I);const O=s(B);return x(v*O)}return{scalarMult:_,scalarMultBase:k,getSharedSecret:(d,m)=>_(d,m),getPublicKey:d=>k(d),utils:{randomPrivateKey:()=>a(c)},GuBytes:R.slice()}}BigInt(0);const xc=BigInt(1),Oo=BigInt(2),vc=BigInt(3),Ec=BigInt(5),Bc=BigInt(8),Uo={p:BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed"),n:BigInt("0x1000000000000000000000000000000014def9dea2f79cd65812631a5cf5d3ed"),h:Bc,a:BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec"),d:BigInt("0x52036cee2b6ffe738cc740797779e89800700a4d4141d8ab75eb4dca135978a3"),Gx:BigInt("0x216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a"),Gy:BigInt("0x6666666666666666666666666666666666666666666666666666666666666658")};function Ic(t){const e=BigInt(10),n=BigInt(20),r=BigInt(40),o=BigInt(80),s=Uo.p,f=t*t%s*t%s,a=pt(f,Oo,s)*f%s,l=pt(a,xc,s)*t%s,c=pt(l,Ec,s)*l%s,u=pt(c,e,s)*c%s,h=pt(u,n,s)*u%s,g=pt(h,r,s)*h%s,w=pt(g,o,s)*g%s,y=pt(w,o,s)*g%s,x=pt(y,e,s)*c%s;return{pow_p_5_8:pt(x,Oo,s)*t%s,b2:f}}function Ac(t){return t[0]&=248,t[31]&=127,t[31]|=64,t}const Tn=(()=>{const t=Uo.p;return wc({P:t,type:"x25519",powPminus2:e=>{const{pow_p_5_8:n,b2:r}=Ic(e);return lt(pt(n,vc,t)*r,t)},adjustScalarBytes:Ac})})();function _o(t){t.lowS!==void 0&&Re("lowS",t.lowS),t.prehash!==void 0&&Re("prehash",t.prehash)}class Sc extends Error{constructor(e=""){super(e)}}const vt={Err:Sc,_tlv:{encode:(t,e)=>{const{Err:n}=vt;if(t<0||t>256)throw new n("tlv.encode: wrong tag");if(e.length&1)throw new n("tlv.encode: unpadded data");const r=e.length/2,o=$e(r);if(o.length/2&128)throw new n("tlv.encode: long form length too big");const s=r>127?$e(o.length/2|128):"";return $e(t)+s+o+e},decode(t,e){const{Err:n}=vt;let r=0;if(t<0||t>256)throw new n("tlv.encode: wrong tag");if(e.length<2||e[r++]!==t)throw new n("tlv.decode: wrong tlv");const o=e[r++],s=!!(o&128);let i=0;if(!s)i=o;else{const a=o&127;if(!a)throw new n("tlv.decode(long): indefinite length not supported");if(a>4)throw new n("tlv.decode(long): byte length is too big");const l=e.subarray(r,r+a);if(l.length!==a)throw new n("tlv.decode: length bytes not complete");if(l[0]===0)throw new n("tlv.decode(long): zero leftmost byte");for(const c of l)i=i<<8|c;if(r+=a,i<128)throw new n("tlv.decode(long): not minimal encoding")}const f=e.subarray(r,r+i);if(f.length!==i)throw new n("tlv.decode: wrong value length");return{v:f,l:e.subarray(r+i)}}},_int:{encode(t){const{Err:e}=vt;if(t<he)throw new e("integer: negative integers are not allowed");let n=$e(t);if(Number.parseInt(n[0],16)&8&&(n="00"+n),n.length&1)throw new e("unexpected DER parsing assertion: unpadded hex");return n},decode(t){const{Err:e}=vt;if(t[0]&128)throw new e("invalid signature integer: negative");if(t[0]===0&&!(t[1]&128))throw new e("invalid signature integer: unnecessary leading zero");return Ce(t)}},toSig(t){const{Err:e,_int:n,_tlv:r}=vt,o=rt("signature",t),{v:s,l:i}=r.decode(48,o);if(i.length)throw new e("invalid signature: left bytes after parsing");const{v:f,l:a}=r.decode(2,s),{v:l,l:c}=r.decode(2,a);if(c.length)throw new e("invalid signature: left bytes after parsing");return{r:n.decode(f),s:n.decode(l)}},hexFromSig(t){const{_tlv:e,_int:n}=vt,r=e.encode(2,n.encode(t.r)),o=e.encode(2,n.encode(t.s)),s=r+o;return e.encode(48,s)}},he=BigInt(0),pe=BigInt(1),Nc=BigInt(2),He=BigInt(3),Oc=BigInt(4);function Uc(t,e,n){function r(o){const s=t.sqr(o),i=t.mul(s,o);return t.add(t.add(i,t.mul(o,e)),n)}return r}function To(t,e,n){const{BYTES:r}=t;function o(s){let i;if(typeof s=="bigint")i=s;else{let f=rt("private key",s);if(e){if(!e.includes(f.length*2))throw new Error("invalid private key");const a=new Uint8Array(r);a.set(f,a.length-f.length),f=a}try{i=t.fromBytes(f)}catch{throw new Error(`invalid private key: expected ui8a of size ${r}, got ${typeof s}`)}}if(n&&(i=t.create(i)),!t.isValidNot0(i))throw new Error("invalid private key: out of range [1..N-1]");return i}return o}function _c(t,e={}){const{Fp:n,Fn:r}=yc("weierstrass",t,e),{h:o,n:s}=t;ke(e,{},{allowInfinityPoint:"boolean",clearCofactor:"function",isTorsionFree:"function",fromBytes:"function",toBytes:"function",endo:"object",wrapPrivateKey:"boolean"});const{endo:i}=e;if(i&&(!n.is0(t.a)||typeof i.beta!="bigint"||typeof i.splitScalar!="function"))throw new Error('invalid endo: expected "beta": bigint and "splitScalar": function');function f(){if(!n.isOdd)throw new Error("compression is not supported: Field does not have .isOdd()")}function a($,d,m){const{x:p,y:b}=d.toAffine(),v=n.toBytes(p);if(Re("isCompressed",m),m){f();const B=!n.isOdd(b);return Ht(Ro(B),v)}else return Ht(Uint8Array.of(4),v,n.toBytes(b))}function l($){at($);const d=n.BYTES,m=d+1,p=2*d+1,b=$.length,v=$[0],B=$.subarray(1);if(b===m&&(v===2||v===3)){const E=n.fromBytes(B);if(!n.isValid(E))throw new Error("bad point: is not on curve, wrong x");const I=h(E);let S;try{S=n.sqrt(I)}catch(T){const U=T instanceof Error?": "+T.message:"";throw new Error("bad point: is not on curve, sqrt error"+U)}f();const O=n.isOdd(S);return(v&1)===1!==O&&(S=n.neg(S)),{x:E,y:S}}else if(b===p&&v===4){const E=n.fromBytes(B.subarray(d*0,d*1)),I=n.fromBytes(B.subarray(d*1,d*2));if(!g(E,I))throw new Error("bad point: is not on curve");return{x:E,y:I}}else throw new Error(`bad point: got length ${b}, expected compressed=${m} or uncompressed=${p}`)}const c=e.toBytes||a,u=e.fromBytes||l,h=Uc(n,t.a,t.b);function g($,d){const m=n.sqr(d),p=h($);return n.eql(m,p)}if(!g(t.Gx,t.Gy))throw new Error("bad curve params: generator point");const w=n.mul(n.pow(t.a,He),Oc),y=n.mul(n.sqr(t.b),BigInt(27));if(n.is0(n.add(w,y)))throw new Error("bad curve params: a or b");function x($,d,m=!1){if(!n.isValid(d)||m&&n.is0(d))throw new Error(`bad point coordinate ${$}`);return d}function R($){if(!($ instanceof _))throw new Error("ProjectivePoint expected")}const M=ho(($,d)=>{const{px:m,py:p,pz:b}=$;if(n.eql(b,n.ONE))return{x:m,y:p};const v=$.is0();d==null&&(d=v?n.ONE:n.inv(b));const B=n.mul(m,d),E=n.mul(p,d),I=n.mul(b,d);if(v)return{x:n.ZERO,y:n.ZERO};if(!n.eql(I,n.ONE))throw new Error("invZ was invalid");return{x:B,y:E}}),L=ho($=>{if($.is0()){if(e.allowInfinityPoint&&!n.is0($.py))return;throw new Error("bad point: ZERO")}const{x:d,y:m}=$.toAffine();if(!n.isValid(d)||!n.isValid(m))throw new Error("bad point: x or y not field elements");if(!g(d,m))throw new Error("bad point: equation left != right");if(!$.isTorsionFree())throw new Error("bad point: not in prime-order subgroup");return!0});function V($,d,m,p,b){return m=new _(n.mul(m.px,$),m.py,m.pz),d=le(p,d),m=le(b,m),d.add(m)}class _{constructor(d,m,p){this.px=x("x",d),this.py=x("y",m,!0),this.pz=x("z",p),Object.freeze(this)}static fromAffine(d){const{x:m,y:p}=d||{};if(!d||!n.isValid(m)||!n.isValid(p))throw new Error("invalid affine point");if(d instanceof _)throw new Error("projective point not allowed");return n.is0(m)&&n.is0(p)?_.ZERO:new _(m,p,n.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(d){return lc(_,"pz",d)}static fromBytes(d){return at(d),_.fromHex(d)}static fromHex(d){const m=_.fromAffine(u(rt("pointHex",d)));return m.assertValidity(),m}static fromPrivateKey(d){const m=To(r,e.allowedPrivateKeyLengths,e.wrapPrivateKey);return _.BASE.multiply(m(d))}static msm(d,m){return bc(_,r,d,m)}precompute(d=8,m=!0){return j.setWindowSize(this,d),m||this.multiply(He),this}_setWindowSize(d){this.precompute(d)}assertValidity(){L(this)}hasEvenY(){const{y:d}=this.toAffine();if(!n.isOdd)throw new Error("Field doesn't support isOdd");return!n.isOdd(d)}equals(d){R(d);const{px:m,py:p,pz:b}=this,{px:v,py:B,pz:E}=d,I=n.eql(n.mul(m,E),n.mul(v,b)),S=n.eql(n.mul(p,E),n.mul(B,b));return I&&S}negate(){return new _(this.px,n.neg(this.py),this.pz)}double(){const{a:d,b:m}=t,p=n.mul(m,He),{px:b,py:v,pz:B}=this;let E=n.ZERO,I=n.ZERO,S=n.ZERO,O=n.mul(b,b),A=n.mul(v,v),T=n.mul(B,B),U=n.mul(b,v);return U=n.add(U,U),S=n.mul(b,B),S=n.add(S,S),E=n.mul(d,S),I=n.mul(p,T),I=n.add(E,I),E=n.sub(A,I),I=n.add(A,I),I=n.mul(E,I),E=n.mul(U,E),S=n.mul(p,S),T=n.mul(d,T),U=n.sub(O,T),U=n.mul(d,U),U=n.add(U,S),S=n.add(O,O),O=n.add(S,O),O=n.add(O,T),O=n.mul(O,U),I=n.add(I,O),T=n.mul(v,B),T=n.add(T,T),O=n.mul(T,U),E=n.sub(E,O),S=n.mul(T,A),S=n.add(S,S),S=n.add(S,S),new _(E,I,S)}add(d){R(d);const{px:m,py:p,pz:b}=this,{px:v,py:B,pz:E}=d;let I=n.ZERO,S=n.ZERO,O=n.ZERO;const A=t.a,T=n.mul(t.b,He);let U=n.mul(m,v),C=n.mul(p,B),H=n.mul(b,E),q=n.add(m,p),P=n.add(v,B);q=n.mul(q,P),P=n.add(U,C),q=n.sub(q,P),P=n.add(m,b);let K=n.add(v,E);return P=n.mul(P,K),K=n.add(U,H),P=n.sub(P,K),K=n.add(p,b),I=n.add(B,E),K=n.mul(K,I),I=n.add(C,H),K=n.sub(K,I),O=n.mul(A,P),I=n.mul(T,H),O=n.add(I,O),I=n.sub(C,O),O=n.add(C,O),S=n.mul(I,O),C=n.add(U,U),C=n.add(C,U),H=n.mul(A,H),P=n.mul(T,P),C=n.add(C,H),H=n.sub(U,H),H=n.mul(A,H),P=n.add(P,H),U=n.mul(C,P),S=n.add(S,U),U=n.mul(K,P),I=n.mul(q,I),I=n.sub(I,U),U=n.mul(q,C),O=n.mul(K,O),O=n.add(O,U),new _(I,S,O)}subtract(d){return this.add(d.negate())}is0(){return this.equals(_.ZERO)}multiply(d){const{endo:m}=e;if(!r.isValidNot0(d))throw new Error("invalid scalar: out of range");let p,b;const v=B=>j.wNAFCached(this,B,_.normalizeZ);if(m){const{k1neg:B,k1:E,k2neg:I,k2:S}=m.splitScalar(d),{p:O,f:A}=v(E),{p:T,f:U}=v(S);b=A.add(U),p=V(m.beta,O,T,B,I)}else{const{p:B,f:E}=v(d);p=B,b=E}return _.normalizeZ([p,b])[0]}multiplyUnsafe(d){const{endo:m}=e,p=this;if(!r.isValid(d))throw new Error("invalid scalar: out of range");if(d===he||p.is0())return _.ZERO;if(d===pe)return p;if(j.hasPrecomputes(this))return this.multiply(d);if(m){const{k1neg:b,k1:v,k2neg:B,k2:E}=m.splitScalar(d),{p1:I,p2:S}=gc(_,p,v,E);return V(m.beta,I,S,b,B)}else return j.wNAFCachedUnsafe(p,d)}multiplyAndAddUnsafe(d,m,p){const b=this.multiplyUnsafe(m).add(d.multiplyUnsafe(p));return b.is0()?void 0:b}toAffine(d){return M(this,d)}isTorsionFree(){const{isTorsionFree:d}=e;return o===pe?!0:d?d(_,this):j.wNAFCachedUnsafe(this,s).is0()}clearCofactor(){const{clearCofactor:d}=e;return o===pe?this:d?d(_,this):this.multiplyUnsafe(o)}toBytes(d=!0){return Re("isCompressed",d),this.assertValidity(),c(_,this,d)}toRawBytes(d=!0){return this.toBytes(d)}toHex(d=!0){return ce(this.toBytes(d))}toString(){return`<Point ${this.is0()?"ZERO":this.toHex()}>`}}_.BASE=new _(t.Gx,t.Gy,n.ONE),_.ZERO=new _(n.ZERO,n.ONE,n.ZERO),_.Fp=n,_.Fn=r;const k=r.BITS,j=pc(_,e.endo?Math.ceil(k/2):k);return _}function Ro(t){return Uint8Array.of(t?2:3)}function Tc(t,e,n={}){ke(e,{hash:"function"},{hmac:"function",lowS:"boolean",randomBytes:"function",bits2int:"function",bits2int_modN:"function"});const r=e.randomBytes||Zt,o=e.hmac||((p,...b)=>_e(e.hash,p,Ht(...b))),{Fp:s,Fn:i}=t,{ORDER:f,BITS:a}=i;function l(p){const b=f>>pe;return p>b}function c(p){return l(p)?i.neg(p):p}function u(p,b){if(!i.isValidNot0(b))throw new Error(`invalid signature ${p}: out of range 1..CURVE.n`)}class h{constructor(b,v,B){u("r",b),u("s",v),this.r=b,this.s=v,B!=null&&(this.recovery=B),Object.freeze(this)}static fromCompact(b){const v=i.BYTES,B=rt("compactSignature",b,v*2);return new h(i.fromBytes(B.subarray(0,v)),i.fromBytes(B.subarray(v,v*2)))}static fromDER(b){const{r:v,s:B}=vt.toSig(rt("DER",b));return new h(v,B)}assertValidity(){}addRecoveryBit(b){return new h(this.r,this.s,b)}recoverPublicKey(b){const v=s.ORDER,{r:B,s:E,recovery:I}=this;if(I==null||![0,1,2,3].includes(I))throw new Error("recovery id invalid");if(f*Nc<v&&I>1)throw new Error("recovery id is ambiguous for h>1 curve");const O=I===2||I===3?B+f:B;if(!s.isValid(O))throw new Error("recovery id 2 or 3 invalid");const A=s.toBytes(O),T=t.fromHex(Ht(Ro((I&1)===0),A)),U=i.inv(O),C=L(rt("msgHash",b)),H=i.create(-C*U),q=i.create(E*U),P=t.BASE.multiplyUnsafe(H).add(T.multiplyUnsafe(q));if(P.is0())throw new Error("point at infinify");return P.assertValidity(),P}hasHighS(){return l(this.s)}normalizeS(){return this.hasHighS()?new h(this.r,i.neg(this.s),this.recovery):this}toBytes(b){if(b==="compact")return Ht(i.toBytes(this.r),i.toBytes(this.s));if(b==="der")return fn(vt.hexFromSig(this));throw new Error("invalid format")}toDERRawBytes(){return this.toBytes("der")}toDERHex(){return ce(this.toBytes("der"))}toCompactRawBytes(){return this.toBytes("compact")}toCompactHex(){return ce(this.toBytes("compact"))}}const g=To(i,n.allowedPrivateKeyLengths,n.wrapPrivateKey),w={isValidPrivateKey(p){try{return g(p),!0}catch{return!1}},normPrivateKeyToScalar:g,randomPrivateKey:()=>{const p=f;return uc(r(Eo(p)),p)},precompute(p=8,b=t.BASE){return b.precompute(p,!1)}};function y(p,b=!0){return t.fromPrivateKey(p).toBytes(b)}function x(p){if(typeof p=="bigint")return!1;if(p instanceof t)return!0;const v=rt("key",p).length,B=s.BYTES,E=B+1,I=2*B+1;if(!(n.allowedPrivateKeyLengths||i.BYTES===E))return v===E||v===I}function R(p,b,v=!0){if(x(p)===!0)throw new Error("first arg must be private key");if(x(b)===!1)throw new Error("second arg must be public key");return t.fromHex(b).multiply(g(p)).toBytes(v)}const M=e.bits2int||function(p){if(p.length>8192)throw new Error("input is too large");const b=Ce(p),v=p.length*8-a;return v>0?b>>BigInt(v):b},L=e.bits2int_modN||function(p){return i.create(M(p))},V=je(a);function _(p){return Nn("num < 2^"+a,p,he,V),i.toBytes(p)}function k(p,b,v=j){if(["recovered","canonical"].some(q=>q in v))throw new Error("sign() legacy options not supported");const{hash:B}=e;let{lowS:E,prehash:I,extraEntropy:S}=v;E==null&&(E=!0),p=rt("msgHash",p),_o(v),I&&(p=rt("prehashed msgHash",B(p)));const O=L(p),A=g(b),T=[_(A),_(O)];if(S!=null&&S!==!1){const q=S===!0?r(s.BYTES):S;T.push(rt("extraEntropy",q))}const U=Ht(...T),C=O;function H(q){const P=M(q);if(!i.isValidNot0(P))return;const K=i.inv(P),et=t.BASE.multiply(P).toAffine(),Z=i.create(et.x);if(Z===he)return;const z=i.create(K*i.create(C+Z*A));if(z===he)return;let Ft=(et.x===Z?0:2)|Number(et.y&pe),yt=z;return E&&l(z)&&(yt=c(z),Ft^=1),new h(Z,yt,Ft)}return{seed:U,k2sig:H}}const j={lowS:e.lowS,prehash:!1},$={lowS:e.lowS,prehash:!1};function d(p,b,v=j){const{seed:B,k2sig:E}=k(p,b,v);return ec(e.hash.outputLen,i.BYTES,o)(B,E)}t.BASE.precompute(8);function m(p,b,v,B=$){const E=p;b=rt("msgHash",b),v=rt("publicKey",v),_o(B);const{lowS:I,prehash:S,format:O}=B;if("strict"in B)throw new Error("options.strict was renamed to lowS");if(O!==void 0&&!["compact","der","js"].includes(O))throw new Error('format must be "compact", "der" or "js"');const A=typeof E=="string"||nn(E),T=!A&&!O&&typeof E=="object"&&E!==null&&typeof E.r=="bigint"&&typeof E.s=="bigint";if(!A&&!T)throw new Error("invalid signature, expected Uint8Array, hex string or Signature instance");let U,C;try{if(T)if(O===void 0||O==="js")U=new h(E.r,E.s);else throw new Error("invalid format");if(A){try{O!=="compact"&&(U=h.fromDER(E))}catch(yt){if(!(yt instanceof vt.Err))throw yt}!U&&O!=="der"&&(U=h.fromCompact(E))}C=t.fromHex(v)}catch{return!1}if(!U||I&&U.hasHighS())return!1;S&&(b=e.hash(b));const{r:H,s:q}=U,P=L(b),K=i.inv(q),et=i.create(P*K),Z=i.create(H*K),z=t.BASE.multiplyUnsafe(et).add(C.multiplyUnsafe(Z));return z.is0()?!1:i.create(z.x)===H}return Object.freeze({getPublicKey:y,getSharedSecret:R,sign:d,verify:m,utils:w,Point:t,Signature:h})}function Rc(t){const e={a:t.a,b:t.b,p:t.Fp.ORDER,n:t.n,h:t.h,Gx:t.Gx,Gy:t.Gy},n=t.Fp,r=Yt(e.n,t.nBitLength),o={Fp:n,Fn:r,allowedPrivateKeyLengths:t.allowedPrivateKeyLengths,allowInfinityPoint:t.allowInfinityPoint,endo:t.endo,wrapPrivateKey:t.wrapPrivateKey,isTorsionFree:t.isTorsionFree,clearCofactor:t.clearCofactor,fromBytes:t.fromBytes,toBytes:t.toBytes};return{CURVE:e,curveOpts:o}}function $c(t){const{CURVE:e,curveOpts:n}=Rc(t),r={hash:t.hash,hmac:t.hmac,randomBytes:t.randomBytes,lowS:t.lowS,bits2int:t.bits2int,bits2int_modN:t.bits2int_modN};return{CURVE:e,curveOpts:n,ecdsaOpts:r}}function Cc(t,e){return Object.assign({},e,{ProjectivePoint:e.Point,CURVE:t})}function Lc(t){const{CURVE:e,curveOpts:n,ecdsaOpts:r}=$c(t),o=_c(e,n),s=Tc(o,r,n);return Cc(t,s)}function Rn(t,e){const n=r=>Lc({...t,hash:r});return{...n(e),create:n}}const $o={p:BigInt("0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff"),n:BigInt("0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551"),h:BigInt(1),a:BigInt("0xffffffff00000001000000000000000000000000fffffffffffffffffffffffc"),b:BigInt("0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b"),Gx:BigInt("0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296"),Gy:BigInt("0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5")},Co={p:BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000ffffffff"),n:BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffc7634d81f4372ddf581a0db248b0a77aecec196accc52973"),h:BigInt(1),a:BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000fffffffc"),b:BigInt("0xb3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aef"),Gx:BigInt("0xaa87ca22be8b05378eb1c71ef320ad746e1d3b628ba79b9859f741e082542a385502f25dbf55296c3a545e3872760ab7"),Gy:BigInt("0x3617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5f")},Lo={p:BigInt("0x1ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),n:BigInt("0x01fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa51868783bf2f966b7fcc0148f709a5d03bb5c9b8899c47aebb6fb71e91386409"),h:BigInt(1),a:BigInt("0x1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc"),b:BigInt("0x0051953eb9618e1c9a1f929a21a0b68540eea2da725b99b315f3b8b489918ef109e156193951ec7e937b1652c0bd3bb1bf073573df883d2c34f1ef451fd46b503f00"),Gx:BigInt("0x00c6858e06b70404e9cd9e3ecb662395b4429c648139053fb521f828af606b4d3dbaa14b5e77efe75928fe1dc127a2ffa8de3348b3c1856a429bf97e7e31c2e5bd66"),Gy:BigInt("0x011839296a789a3bc0045c8a5fb42c7d1bd998f54449579b446817afbd17273e662c97ee72995ef42640c550b9013fad0761353c7086a272c24088be94769fd16650")},jc=Yt($o.p),kc=Yt(Co.p),Pc=Yt(Lo.p),Hc=Rn({...$o,Fp:jc,lowS:!1},Ae);Rn({...Co,Fp:kc,lowS:!1},Yi),Rn({...Lo,Fp:Pc,lowS:!1,allowedPrivateKeyLengths:[130,131,132]},Wi);const Dc=Hc,$n="base10",tt="base16",Qt="base64pad",De="base64url",te="utf8",Cn=0,ee=1,ge=2,Mc=0,jo=1,be=12,Ln=32;function Vc(){const t=Tn.utils.randomPrivateKey(),e=Tn.getPublicKey(t);return{privateKey:(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(t,tt),publicKey:(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(e,tt)}}function qc(){const t=Zt(Ln);return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(t,tt)}function Kc(t,e){const n=Tn.getSharedSecret((0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(t,tt),(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(e,tt)),r=Jf(Te,n,void 0,void 0,Ln);return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(r,tt)}function Fc(t){const e=Te((0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(t,tt));return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(e,tt)}function zc(t){const e=Te((0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(t,te));return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(e,tt)}function jn(t){return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(`${t}`,$n)}function Vt(t){return Number((0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(t,$n))}function ko(t){return t.replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}function Po(t){const e=t.replace(/-/g,"+").replace(/_/g,"/"),n=(4-e.length%4)%4;return e+"=".repeat(n)}function Gc(t){const e=jn(typeof t.type<"u"?t.type:Cn);if(Vt(e)===ee&&typeof t.senderPublicKey>"u")throw new Error("Missing sender public key for type 1 envelope");const n=typeof t.senderPublicKey<"u"?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(t.senderPublicKey,tt):void 0,r=typeof t.iv<"u"?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(t.iv,tt):Zt(be),o=(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(t.symKey,tt),s=co(o,r).encrypt((0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(t.message,te)),i=kn({type:e,sealed:s,iv:r,senderPublicKey:n});return t.encoding===De?ko(i):i}function Zc(t){const e=(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(t.symKey,tt),{sealed:n,iv:r}=Me({encoded:t.encoded,encoding:t.encoding}),o=co(e,r).decrypt(n);if(o===null)throw new Error("Failed to decrypt");return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(o,te)}function Wc(t,e){const n=jn(ge),r=Zt(be),o=(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(t,te),s=kn({type:n,sealed:o,iv:r});return e===De?ko(s):s}function Yc(t,e){const{sealed:n}=Me({encoded:t,encoding:e});return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(n,te)}function kn(t){if(Vt(t.type)===ge)return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.concat)([t.type,t.sealed]),Qt);if(Vt(t.type)===ee){if(typeof t.senderPublicKey>"u")throw new Error("Missing sender public key for type 1 envelope");return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.concat)([t.type,t.senderPublicKey,t.iv,t.sealed]),Qt)}return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.concat)([t.type,t.iv,t.sealed]),Qt)}function Me(t){const e=(t.encoding||Qt)===De?Po(t.encoded):t.encoded,n=(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(e,Qt),r=n.slice(Mc,jo),o=jo;if(Vt(r)===ee){const a=o+Ln,l=a+be,c=n.slice(o,a),u=n.slice(a,l),h=n.slice(l);return{type:r,sealed:h,iv:u,senderPublicKey:c}}if(Vt(r)===ge){const a=n.slice(o),l=Zt(be);return{type:r,sealed:a,iv:l}}const s=o+be,i=n.slice(o,s),f=n.slice(s);return{type:r,sealed:f,iv:i}}function Xc(t,e){const n=Me({encoded:t,encoding:e?.encoding});return Ho({type:Vt(n.type),senderPublicKey:typeof n.senderPublicKey<"u"?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(n.senderPublicKey,tt):void 0,receiverPublicKey:e?.receiverPublicKey})}function Ho(t){const e=t?.type||Cn;if(e===ee){if(typeof t?.senderPublicKey>"u")throw new Error("missing sender public key");if(typeof t?.receiverPublicKey>"u")throw new Error("missing receiver public key")}return{type:e,senderPublicKey:t?.senderPublicKey,receiverPublicKey:t?.receiverPublicKey}}function Jc(t){return t.type===ee&&typeof t.senderPublicKey=="string"&&typeof t.receiverPublicKey=="string"}function Qc(t){return t.type===ge}function Do(t){const e=Buffer.from(t.x,"base64"),n=Buffer.from(t.y,"base64");return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.concat)([new Uint8Array([4]),e,n])}function ta(t,e){const[n,r,o]=t.split("."),s=Buffer.from(Po(o),"base64");if(s.length!==64)throw new Error("Invalid signature length");const i=s.slice(0,32),f=s.slice(32,64),a=`${n}.${r}`,l=Te(a),c=Do(e);if(!Dc.verify((0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.concat)([i,f]),l,c))throw new Error("Invalid signature");return (0,_walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_9__.decodeJWT)(t).payload}const Mo="irn";function ea(t){return t?.relay||{protocol:Mo}}function na(t){const e=_walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_11__.RELAY_JSONRPC[t];if(typeof e>"u")throw new Error(`Relay Protocol not supported: ${t}`);return e}function Vo(t,e="-"){const n={},r="relay"+e;return Object.keys(t).forEach(o=>{if(o.startsWith(r)){const s=o.replace(r,""),i=t[o];n[s]=i}}),n}function ra(t){if(!t.includes("wc:")){const l=Qe(t);l!=null&&l.includes("wc:")&&(t=l)}t=t.includes("wc://")?t.replace("wc://",""):t,t=t.includes("wc:")?t.replace("wc:",""):t;const e=t.indexOf(":"),n=t.indexOf("?")!==-1?t.indexOf("?"):void 0,r=t.substring(0,e),o=t.substring(e+1,n).split("@"),s=typeof n<"u"?t.substring(n):"",i=new URLSearchParams(s),f={};i.forEach((l,c)=>{f[c]=l});const a=typeof f.methods=="string"?f.methods.split(","):void 0;return{protocol:r,topic:qo(o[0]),version:parseInt(o[1],10),symKey:f.symKey,relay:Vo(f),methods:a,expiryTimestamp:f.expiryTimestamp?parseInt(f.expiryTimestamp,10):void 0}}function qo(t){return t.startsWith("//")?t.substring(2):t}function Ko(t,e="-"){const n="relay",r={};return Object.keys(t).forEach(o=>{const s=o,i=n+e+s;t[s]&&(r[i]=t[s])}),r}function oa(t){const e=new URLSearchParams,n=Ko(t.relay);Object.keys(n).sort().forEach(o=>{e.set(o,n[o])}),e.set("symKey",t.symKey),t.expiryTimestamp&&e.set("expiryTimestamp",t.expiryTimestamp.toString()),t.methods&&e.set("methods",t.methods.join(","));const r=e.toString();return`${t.protocol}:${t.topic}@${t.version}?${r}`}function sa(t,e,n){return`${t}?wc_ev=${n}&topic=${e}`}var ia=Object.defineProperty,fa=Object.defineProperties,ca=Object.getOwnPropertyDescriptors,Fo=Object.getOwnPropertySymbols,aa=Object.prototype.hasOwnProperty,ua=Object.prototype.propertyIsEnumerable,zo=(t,e,n)=>e in t?ia(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,la=(t,e)=>{for(var n in e||(e={}))aa.call(e,n)&&zo(t,n,e[n]);if(Fo)for(var n of Fo(e))ua.call(e,n)&&zo(t,n,e[n]);return t},da=(t,e)=>fa(t,ca(e));function qt(t){const e=[];return t.forEach(n=>{const[r,o]=n.split(":");e.push(`${r}:${o}`)}),e}function Go(t){const e=[];return Object.values(t).forEach(n=>{e.push(...qt(n.accounts))}),e}function Zo(t,e){const n=[];return Object.values(t).forEach(r=>{qt(r.accounts).includes(e)&&n.push(...r.methods)}),n}function Wo(t,e){const n=[];return Object.values(t).forEach(r=>{qt(r.accounts).includes(e)&&n.push(...r.events)}),n}function ha(t,e){const n=is(t,e);if(n)throw new Error(n.message);const r={};for(const[o,s]of Object.entries(t))r[o]={methods:s.methods,events:s.events,chains:s.accounts.map(i=>`${i.split(":")[0]}:${i.split(":")[1]}`)};return r}function pa(t){var e;const{proposal:{requiredNamespaces:n,optionalNamespaces:r={}},supportedNamespaces:o}=t,s=ye(n),i=ye(r),f={};Object.keys(o).forEach(c=>{const u=o[c].chains,h=o[c].methods,g=o[c].events,w=o[c].accounts;u.forEach(y=>{if(!w.some(x=>x.includes(y)))throw new Error(`No accounts provided for chain ${y} in namespace ${c}`)}),f[c]={chains:u,methods:h,events:g,accounts:w}});const a=cs(n,f,"approve()");if(a)throw new Error(a.message);const l={};if(!Object.keys(n).length&&!Object.keys(r).length)return f;Object.keys(s).forEach(c=>{const u=o[c].chains.filter(y=>{var x,R;return(R=(x=s[c])==null?void 0:x.chains)==null?void 0:R.includes(y)}),h=o[c].methods.filter(y=>{var x,R;return(R=(x=s[c])==null?void 0:x.methods)==null?void 0:R.includes(y)}),g=o[c].events.filter(y=>{var x,R;return(R=(x=s[c])==null?void 0:x.events)==null?void 0:R.includes(y)}),w=u.map(y=>o[c].accounts.filter(x=>x.includes(`${y}:`))).flat();l[c]={chains:u,methods:h,events:g,accounts:w}}),Object.keys(i).forEach(c=>{var u,h,g,w,y,x;if(!o[c])return;const R=(h=(u=i[c])==null?void 0:u.chains)==null?void 0:h.filter(_=>o[c].chains.includes(_)),M=o[c].methods.filter(_=>{var k,j;return(j=(k=i[c])==null?void 0:k.methods)==null?void 0:j.includes(_)}),L=o[c].events.filter(_=>{var k,j;return(j=(k=i[c])==null?void 0:k.events)==null?void 0:j.includes(_)}),V=R?.map(_=>o[c].accounts.filter(k=>k.includes(`${_}:`))).flat();l[c]={chains:ct((g=l[c])==null?void 0:g.chains,R),methods:ct((w=l[c])==null?void 0:w.methods,M),events:ct((y=l[c])==null?void 0:y.events,L),accounts:ct((x=l[c])==null?void 0:x.accounts,V)}});for(const[c,u]of Object.entries(l))(u.accounts.length===0||((e=u?.chains)==null?void 0:e.length)===0)&&delete l[c];return l}function Pn(t){return t.includes(":")}function Yo(t){return Pn(t)?t.split(":")[0]:t}function ye(t){var e,n,r;const o={};if(!Ve(t))return o;for(const[s,i]of Object.entries(t)){const f=Pn(s)?[s]:i.chains,a=i.methods||[],l=i.events||[],c=Yo(s);o[c]=da(la({},o[c]),{chains:ct(f,(e=o[c])==null?void 0:e.chains),methods:ct(a,(n=o[c])==null?void 0:n.methods),events:ct(l,(r=o[c])==null?void 0:r.events)})}return o}function Xo(t){const e={};return t?.forEach(n=>{var r;const[o,s]=n.split(":");e[o]||(e[o]={accounts:[],chains:[],events:[],methods:[]}),e[o].accounts.push(n),(r=e[o].chains)==null||r.push(`${o}:${s}`)}),e}function ga(t,e){e=e.map(r=>r.replace("did:pkh:",""));const n=Xo(e);for(const[r,o]of Object.entries(n))o.methods?o.methods=ct(o.methods,t):o.methods=t,o.events=["chainChanged","accountsChanged"];return n}function ba(t,e){var n,r,o,s,i,f;const a=ye(t),l=ye(e),c={},u=Object.keys(a).concat(Object.keys(l));for(const h of u)c[h]={chains:ct((n=a[h])==null?void 0:n.chains,(r=l[h])==null?void 0:r.chains),methods:ct((o=a[h])==null?void 0:o.methods,(s=l[h])==null?void 0:s.methods),events:ct((i=a[h])==null?void 0:i.events,(f=l[h])==null?void 0:f.events)};return c}const Jo={INVALID_METHOD:{message:"Invalid method.",code:1001},INVALID_EVENT:{message:"Invalid event.",code:1002},INVALID_UPDATE_REQUEST:{message:"Invalid update request.",code:1003},INVALID_EXTEND_REQUEST:{message:"Invalid extend request.",code:1004},INVALID_SESSION_SETTLE_REQUEST:{message:"Invalid session settle request.",code:1005},UNAUTHORIZED_METHOD:{message:"Unauthorized method.",code:3001},UNAUTHORIZED_EVENT:{message:"Unauthorized event.",code:3002},UNAUTHORIZED_UPDATE_REQUEST:{message:"Unauthorized update request.",code:3003},UNAUTHORIZED_EXTEND_REQUEST:{message:"Unauthorized extend request.",code:3004},USER_REJECTED:{message:"User rejected.",code:5e3},USER_REJECTED_CHAINS:{message:"User rejected chains.",code:5001},USER_REJECTED_METHODS:{message:"User rejected methods.",code:5002},USER_REJECTED_EVENTS:{message:"User rejected events.",code:5003},UNSUPPORTED_CHAINS:{message:"Unsupported chains.",code:5100},UNSUPPORTED_METHODS:{message:"Unsupported methods.",code:5101},UNSUPPORTED_EVENTS:{message:"Unsupported events.",code:5102},UNSUPPORTED_ACCOUNTS:{message:"Unsupported accounts.",code:5103},UNSUPPORTED_NAMESPACE_KEY:{message:"Unsupported namespace key.",code:5104},USER_DISCONNECTED:{message:"User disconnected.",code:6e3},SESSION_SETTLEMENT_FAILED:{message:"Session settlement failed.",code:7e3},WC_METHOD_UNSUPPORTED:{message:"Unsupported wc_ method.",code:10001}},Qo={NOT_INITIALIZED:{message:"Not initialized.",code:1},NO_MATCHING_KEY:{message:"No matching key.",code:2},RESTORE_WILL_OVERRIDE:{message:"Restore will override.",code:3},RESUBSCRIBED:{message:"Resubscribed.",code:4},MISSING_OR_INVALID:{message:"Missing or invalid.",code:5},EXPIRED:{message:"Expired.",code:6},UNKNOWN_TYPE:{message:"Unknown type.",code:7},MISMATCHED_TOPIC:{message:"Mismatched topic.",code:8},NON_CONFORMING_NAMESPACES:{message:"Non conforming namespaces.",code:9}};function Et(t,e){const{message:n,code:r}=Qo[t];return{message:e?`${n} ${e}`:n,code:r}}function Kt(t,e){const{message:n,code:r}=Jo[t];return{message:e?`${n} ${e}`:n,code:r}}function me(t,e){return Array.isArray(t)?typeof e<"u"&&t.length?t.every(e):!0:!1}function Ve(t){return Object.getPrototypeOf(t)===Object.prototype&&Object.keys(t).length}function kt(t){return typeof t>"u"}function it(t,e){return e&&kt(t)?!0:typeof t=="string"&&!!t.trim().length}function qe(t,e){return e&&kt(t)?!0:typeof t=="number"&&!isNaN(t)}function ya(t,e){const{requiredNamespaces:n}=e,r=Object.keys(t.namespaces),o=Object.keys(n);let s=!0;return It(o,r)?(r.forEach(i=>{const{accounts:f,methods:a,events:l}=t.namespaces[i],c=qt(f),u=n[i];(!It(ve(i,u),c)||!It(u.methods,a)||!It(u.events,l))&&(s=!1)}),s):!1}function we(t){return it(t,!1)&&t.includes(":")?t.split(":").length===2:!1}function ts(t){if(it(t,!1)&&t.includes(":")){const e=t.split(":");if(e.length===3){const n=e[0]+":"+e[1];return!!e[2]&&we(n)}}return!1}function ma(t){function e(n){try{return typeof new URL(n)<"u"}catch{return!1}}try{if(it(t,!1)){if(e(t))return!0;const n=Qe(t);return e(n)}}catch{}return!1}function wa(t){var e;return(e=t?.proposer)==null?void 0:e.publicKey}function xa(t){return t?.topic}function va(t,e){let n=null;return it(t?.publicKey,!1)||(n=Et("MISSING_OR_INVALID",`${e} controller public key should be a string`)),n}function Hn(t){let e=!0;return me(t)?t.length&&(e=t.every(n=>it(n,!1))):e=!1,e}function es(t,e,n){let r=null;return me(e)&&e.length?e.forEach(o=>{r||we(o)||(r=Kt("UNSUPPORTED_CHAINS",`${n}, chain ${o} should be a string and conform to "namespace:chainId" format`))}):we(t)||(r=Kt("UNSUPPORTED_CHAINS",`${n}, chains must be defined as "namespace:chainId" e.g. "eip155:1": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: ["eip155:1", "eip155:5"] }`)),r}function ns(t,e,n){let r=null;return Object.entries(t).forEach(([o,s])=>{if(r)return;const i=es(o,ve(o,s),`${e} ${n}`);i&&(r=i)}),r}function rs(t,e){let n=null;return me(t)?t.forEach(r=>{n||ts(r)||(n=Kt("UNSUPPORTED_ACCOUNTS",`${e}, account ${r} should be a string and conform to "namespace:chainId:address" format`))}):n=Kt("UNSUPPORTED_ACCOUNTS",`${e}, accounts should be an array of strings conforming to "namespace:chainId:address" format`),n}function os(t,e){let n=null;return Object.values(t).forEach(r=>{if(n)return;const o=rs(r?.accounts,`${e} namespace`);o&&(n=o)}),n}function ss(t,e){let n=null;return Hn(t?.methods)?Hn(t?.events)||(n=Kt("UNSUPPORTED_EVENTS",`${e}, events should be an array of strings or empty array for no events`)):n=Kt("UNSUPPORTED_METHODS",`${e}, methods should be an array of strings or empty array for no methods`),n}function Dn(t,e){let n=null;return Object.values(t).forEach(r=>{if(n)return;const o=ss(r,`${e}, namespace`);o&&(n=o)}),n}function Ea(t,e,n){let r=null;if(t&&Ve(t)){const o=Dn(t,e);o&&(r=o);const s=ns(t,e,n);s&&(r=s)}else r=Et("MISSING_OR_INVALID",`${e}, ${n} should be an object with data`);return r}function is(t,e){let n=null;if(t&&Ve(t)){const r=Dn(t,e);r&&(n=r);const o=os(t,e);o&&(n=o)}else n=Et("MISSING_OR_INVALID",`${e}, namespaces should be an object with data`);return n}function fs(t){return it(t.protocol,!0)}function Ba(t,e){let n=!1;return e&&!t?n=!0:t&&me(t)&&t.length&&t.forEach(r=>{n=fs(r)}),n}function Ia(t){return typeof t=="number"}function Aa(t){return typeof t<"u"&&typeof t!==null}function Sa(t){return!(!t||typeof t!="object"||!t.code||!qe(t.code,!1)||!t.message||!it(t.message,!1))}function Na(t){return!(kt(t)||!it(t.method,!1))}function Oa(t){return!(kt(t)||kt(t.result)&&kt(t.error)||!qe(t.id,!1)||!it(t.jsonrpc,!1))}function Ua(t){return!(kt(t)||!it(t.name,!1))}function _a(t,e){return!(!we(e)||!Go(t).includes(e))}function Ta(t,e,n){return it(n,!1)?Zo(t,e).includes(n):!1}function Ra(t,e,n){return it(n,!1)?Wo(t,e).includes(n):!1}function cs(t,e,n){let r=null;const o=$a(t),s=Ca(e),i=Object.keys(o),f=Object.keys(s),a=as(Object.keys(t)),l=as(Object.keys(e)),c=a.filter(u=>!l.includes(u));return c.length&&(r=Et("NON_CONFORMING_NAMESPACES",`${n} namespaces keys don't satisfy requiredNamespaces.
      Required: ${c.toString()}
      Received: ${Object.keys(e).toString()}`)),It(i,f)||(r=Et("NON_CONFORMING_NAMESPACES",`${n} namespaces chains don't satisfy required namespaces.
      Required: ${i.toString()}
      Approved: ${f.toString()}`)),Object.keys(e).forEach(u=>{if(!u.includes(":")||r)return;const h=qt(e[u].accounts);h.includes(u)||(r=Et("NON_CONFORMING_NAMESPACES",`${n} namespaces accounts don't satisfy namespace accounts for ${u}
        Required: ${u}
        Approved: ${h.toString()}`))}),i.forEach(u=>{r||(It(o[u].methods,s[u].methods)?It(o[u].events,s[u].events)||(r=Et("NON_CONFORMING_NAMESPACES",`${n} namespaces events don't satisfy namespace events for ${u}`)):r=Et("NON_CONFORMING_NAMESPACES",`${n} namespaces methods don't satisfy namespace methods for ${u}`))}),r}function $a(t){const e={};return Object.keys(t).forEach(n=>{var r;n.includes(":")?e[n]=t[n]:(r=t[n].chains)==null||r.forEach(o=>{e[o]={methods:t[n].methods,events:t[n].events}})}),e}function as(t){return[...new Set(t.map(e=>e.includes(":")?e.split(":")[0]:e))]}function Ca(t){const e={};return Object.keys(t).forEach(n=>{if(n.includes(":"))e[n]=t[n];else{const r=qt(t[n].accounts);r?.forEach(o=>{e[o]={accounts:t[n].accounts.filter(s=>s.includes(`${o}:`)),methods:t[n].methods,events:t[n].events}})}}),e}function La(t,e){return qe(t,!1)&&t<=e.max&&t>=e.min}function ja(){const t=Pt();return new Promise(e=>{switch(t){case J.browser:e(us());break;case J.reactNative:e(ls());break;case J.node:e(ds());break;default:e(!0)}})}function us(){return zt()&&navigator?.onLine}async function ls(){if(Bt()&&typeof __webpack_require__.g<"u"&&__webpack_require__.g!=null&&__webpack_require__.g.NetInfo){const t=await(__webpack_require__.g==null?void 0:__webpack_require__.g.NetInfo.fetch());return t?.isConnected}return!0}function ds(){return!0}function ka(t){switch(Pt()){case J.browser:hs(t);break;case J.reactNative:ps(t);break;case J.node:break}}function hs(t){!Bt()&&zt()&&(window.addEventListener("online",()=>t(!0)),window.addEventListener("offline",()=>t(!1)))}function ps(t){Bt()&&typeof __webpack_require__.g<"u"&&__webpack_require__.g!=null&&__webpack_require__.g.NetInfo&&__webpack_require__.g?.NetInfo.addEventListener(e=>t(e?.isConnected))}function Pa(){var t;return zt()&&(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__.getDocument)()?((t=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__.getDocument)())==null?void 0:t.visibilityState)==="visible":!0}const Mn={};class Ha{static get(e){return Mn[e]}static set(e,n){Mn[e]=n}static delete(e){delete Mn[e]}}function gs(t){const e=bs58__WEBPACK_IMPORTED_MODULE_5__["default"].decode(t);if(e.length<33)throw new Error("Too short to contain a public key");return e.slice(1,33)}function bs({publicKey:t,signature:e,payload:n}){var r;const o=Vn(n.method),s=128|parseInt(((r=n.version)==null?void 0:r.toString())||"4"),i=Ma(n.address),f=n.era==="00"?new Uint8Array([0]):Vn(n.era);if(f.length!==1&&f.length!==2)throw new Error("Invalid era length");const a=parseInt(n.nonce,16),l=new Uint8Array([a&255,a>>8&255]),c=BigInt(`0x${Da(n.tip)}`),u=qa(c),h=new Uint8Array([0,...t,i,...e,...f,...l,...u,...o]),g=Va(h.length+1);return new Uint8Array([...g,s,...h])}function ys(t){const e=Vn(t),n=(0,blakejs__WEBPACK_IMPORTED_MODULE_12__.blake2b)(e,void 0,32);return"0x"+Buffer.from(n).toString("hex")}function Vn(t){return new Uint8Array(t.replace(/^0x/,"").match(/.{1,2}/g).map(e=>parseInt(e,16)))}function Da(t){return t.startsWith("0x")?t.slice(2):t}function Ma(t){const e=bs58__WEBPACK_IMPORTED_MODULE_5__["default"].decode(t)[0];return e===42?0:e===60?2:1}function Va(t){if(t<64)return new Uint8Array([t<<2]);if(t<16384){const e=t<<2|1;return new Uint8Array([e&255,e>>8&255])}else if(t<1<<30){const e=t<<2|2;return new Uint8Array([e&255,e>>8&255,e>>16&255,e>>24&255])}else throw new Error("Compact encoding > 2^30 not supported")}function qa(t){if(t<BigInt(1)<<BigInt(6))return new Uint8Array([Number(t<<BigInt(2))]);if(t<BigInt(1)<<BigInt(14)){const e=t<<BigInt(2)|BigInt(1);return new Uint8Array([Number(e&BigInt(255)),Number(e>>BigInt(8)&BigInt(255))])}else if(t<BigInt(1)<<BigInt(30)){const e=t<<BigInt(2)|BigInt(2);return new Uint8Array([Number(e&BigInt(255)),Number(e>>BigInt(8)&BigInt(255)),Number(e>>BigInt(16)&BigInt(255)),Number(e>>BigInt(24)&BigInt(255))])}else throw new Error("BigInt compact encoding not supported > 2^30")}function Ka(t){const e=Uint8Array.from(Buffer.from(t.signature,"hex")),n=gs(t.transaction.address),r=bs({publicKey:n,signature:e,payload:t.transaction}),o=Buffer.from(r).toString("hex");return ys(o)}
//# sourceMappingURL=index.es.js.map


/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/@walletconnect/window-getters/dist/cjs/index.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/@walletconnect/window-getters/dist/cjs/index.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getLocalStorage = exports.getLocalStorageOrThrow = exports.getCrypto = exports.getCryptoOrThrow = exports.getLocation = exports.getLocationOrThrow = exports.getNavigator = exports.getNavigatorOrThrow = exports.getDocument = exports.getDocumentOrThrow = exports.getFromWindowOrThrow = exports.getFromWindow = void 0;
function getFromWindow(name) {
    let res = undefined;
    if (typeof window !== "undefined" && typeof window[name] !== "undefined") {
        res = window[name];
    }
    return res;
}
exports.getFromWindow = getFromWindow;
function getFromWindowOrThrow(name) {
    const res = getFromWindow(name);
    if (!res) {
        throw new Error(`${name} is not defined in Window`);
    }
    return res;
}
exports.getFromWindowOrThrow = getFromWindowOrThrow;
function getDocumentOrThrow() {
    return getFromWindowOrThrow("document");
}
exports.getDocumentOrThrow = getDocumentOrThrow;
function getDocument() {
    return getFromWindow("document");
}
exports.getDocument = getDocument;
function getNavigatorOrThrow() {
    return getFromWindowOrThrow("navigator");
}
exports.getNavigatorOrThrow = getNavigatorOrThrow;
function getNavigator() {
    return getFromWindow("navigator");
}
exports.getNavigator = getNavigator;
function getLocationOrThrow() {
    return getFromWindowOrThrow("location");
}
exports.getLocationOrThrow = getLocationOrThrow;
function getLocation() {
    return getFromWindow("location");
}
exports.getLocation = getLocation;
function getCryptoOrThrow() {
    return getFromWindowOrThrow("crypto");
}
exports.getCryptoOrThrow = getCryptoOrThrow;
function getCrypto() {
    return getFromWindow("crypto");
}
exports.getCrypto = getCrypto;
function getLocalStorageOrThrow() {
    return getFromWindowOrThrow("localStorage");
}
exports.getLocalStorageOrThrow = getLocalStorageOrThrow;
function getLocalStorage() {
    return getFromWindow("localStorage");
}
exports.getLocalStorage = getLocalStorage;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/@walletconnect/window-metadata/dist/cjs/index.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/@walletconnect/window-metadata/dist/cjs/index.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getWindowMetadata = void 0;
const window_getters_1 = __webpack_require__(/*! @walletconnect/window-getters */ "./node_modules/@walletconnect/ethereum-provider/node_modules/@walletconnect/window-getters/dist/cjs/index.js");
function getWindowMetadata() {
    let doc;
    let loc;
    try {
        doc = window_getters_1.getDocumentOrThrow();
        loc = window_getters_1.getLocationOrThrow();
    }
    catch (e) {
        return null;
    }
    function getIcons() {
        const links = doc.getElementsByTagName("link");
        const icons = [];
        for (let i = 0; i < links.length; i++) {
            const link = links[i];
            const rel = link.getAttribute("rel");
            if (rel) {
                if (rel.toLowerCase().indexOf("icon") > -1) {
                    const href = link.getAttribute("href");
                    if (href) {
                        if (href.toLowerCase().indexOf("https:") === -1 &&
                            href.toLowerCase().indexOf("http:") === -1 &&
                            href.indexOf("//") !== 0) {
                            let absoluteHref = loc.protocol + "//" + loc.host;
                            if (href.indexOf("/") === 0) {
                                absoluteHref += href;
                            }
                            else {
                                const path = loc.pathname.split("/");
                                path.pop();
                                const finalPath = path.join("/");
                                absoluteHref += finalPath + "/" + href;
                            }
                            icons.push(absoluteHref);
                        }
                        else if (href.indexOf("//") === 0) {
                            const absoluteUrl = loc.protocol + href;
                            icons.push(absoluteUrl);
                        }
                        else {
                            icons.push(href);
                        }
                    }
                }
            }
        }
        return icons;
    }
    function getWindowMetadataOfAny(...args) {
        const metaTags = doc.getElementsByTagName("meta");
        for (let i = 0; i < metaTags.length; i++) {
            const tag = metaTags[i];
            const attributes = ["itemprop", "property", "name"]
                .map((target) => tag.getAttribute(target))
                .filter((attr) => {
                if (attr) {
                    return args.includes(attr);
                }
                return false;
            });
            if (attributes.length && attributes) {
                const content = tag.getAttribute("content");
                if (content) {
                    return content;
                }
            }
        }
        return "";
    }
    function getName() {
        let name = getWindowMetadataOfAny("name", "og:site_name", "og:title", "twitter:title");
        if (!name) {
            name = doc.title;
        }
        return name;
    }
    function getDescription() {
        const description = getWindowMetadataOfAny("description", "og:description", "twitter:description", "keywords");
        return description;
    }
    const name = getName();
    const description = getDescription();
    const url = loc.origin;
    const icons = getIcons();
    const meta = {
        description,
        url,
        icons,
        name,
    };
    return meta;
}
exports.getWindowMetadata = getWindowMetadata;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/base-x/src/esm/index.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/base-x/src/esm/index.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// base-x encoding / decoding
// Copyright (c) 2018 base-x contributors
// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)
// Distributed under the MIT software license, see the accompanying
// file LICENSE or http://www.opensource.org/licenses/mit-license.php.
function base (ALPHABET) {
  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }
  const BASE_MAP = new Uint8Array(256)
  for (let j = 0; j < BASE_MAP.length; j++) {
    BASE_MAP[j] = 255
  }
  for (let i = 0; i < ALPHABET.length; i++) {
    const x = ALPHABET.charAt(i)
    const xc = x.charCodeAt(0)
    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }
    BASE_MAP[xc] = i
  }
  const BASE = ALPHABET.length
  const LEADER = ALPHABET.charAt(0)
  const FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up
  const iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up
  function encode (source) {
    // eslint-disable-next-line no-empty
    if (source instanceof Uint8Array) { } else if (ArrayBuffer.isView(source)) {
      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)
    } else if (Array.isArray(source)) {
      source = Uint8Array.from(source)
    }
    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }
    if (source.length === 0) { return '' }
    // Skip & count leading zeroes.
    let zeroes = 0
    let length = 0
    let pbegin = 0
    const pend = source.length
    while (pbegin !== pend && source[pbegin] === 0) {
      pbegin++
      zeroes++
    }
    // Allocate enough space in big-endian base58 representation.
    const size = ((pend - pbegin) * iFACTOR + 1) >>> 0
    const b58 = new Uint8Array(size)
    // Process the bytes.
    while (pbegin !== pend) {
      let carry = source[pbegin]
      // Apply "b58 = b58 * 256 + ch".
      let i = 0
      for (let it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {
        carry += (256 * b58[it1]) >>> 0
        b58[it1] = (carry % BASE) >>> 0
        carry = (carry / BASE) >>> 0
      }
      if (carry !== 0) { throw new Error('Non-zero carry') }
      length = i
      pbegin++
    }
    // Skip leading zeroes in base58 result.
    let it2 = size - length
    while (it2 !== size && b58[it2] === 0) {
      it2++
    }
    // Translate the result into a string.
    let str = LEADER.repeat(zeroes)
    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }
    return str
  }
  function decodeUnsafe (source) {
    if (typeof source !== 'string') { throw new TypeError('Expected String') }
    if (source.length === 0) { return new Uint8Array() }
    let psz = 0
    // Skip and count leading '1's.
    let zeroes = 0
    let length = 0
    while (source[psz] === LEADER) {
      zeroes++
      psz++
    }
    // Allocate enough space in big-endian base256 representation.
    const size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.
    const b256 = new Uint8Array(size)
    // Process the characters.
    while (psz < source.length) {
      // Find code of next character
      const charCode = source.charCodeAt(psz)
      // Base map can not be indexed using char code
      if (charCode > 255) { return }
      // Decode character
      let carry = BASE_MAP[charCode]
      // Invalid character
      if (carry === 255) { return }
      let i = 0
      for (let it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {
        carry += (BASE * b256[it3]) >>> 0
        b256[it3] = (carry % 256) >>> 0
        carry = (carry / 256) >>> 0
      }
      if (carry !== 0) { throw new Error('Non-zero carry') }
      length = i
      psz++
    }
    // Skip leading zeroes in b256.
    let it4 = size - length
    while (it4 !== size && b256[it4] === 0) {
      it4++
    }
    const vch = new Uint8Array(zeroes + (size - it4))
    let j = zeroes
    while (it4 !== size) {
      vch[j++] = b256[it4++]
    }
    return vch
  }
  function decode (string) {
    const buffer = decodeUnsafe(string)
    if (buffer) { return buffer }
    throw new Error('Non-base' + BASE + ' character')
  }
  return {
    encode,
    decodeUnsafe,
    decode
  }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (base);


/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/bs58/src/esm/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/bs58/src/esm/index.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var base_x__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! base-x */ "./node_modules/@walletconnect/ethereum-provider/node_modules/base-x/src/esm/index.js");

var ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,base_x__WEBPACK_IMPORTED_MODULE_0__["default"])(ALPHABET));


/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/detect-browser/es/index.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/detect-browser/es/index.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BotInfo: () => (/* binding */ BotInfo),
/* harmony export */   BrowserInfo: () => (/* binding */ BrowserInfo),
/* harmony export */   NodeInfo: () => (/* binding */ NodeInfo),
/* harmony export */   ReactNativeInfo: () => (/* binding */ ReactNativeInfo),
/* harmony export */   SearchBotDeviceInfo: () => (/* binding */ SearchBotDeviceInfo),
/* harmony export */   browserName: () => (/* binding */ browserName),
/* harmony export */   detect: () => (/* binding */ detect),
/* harmony export */   detectOS: () => (/* binding */ detectOS),
/* harmony export */   getNodeVersion: () => (/* binding */ getNodeVersion),
/* harmony export */   parseUserAgent: () => (/* binding */ parseUserAgent)
/* harmony export */ });
/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ "./node_modules/process/browser.js");
var __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var BrowserInfo = /** @class */ (function () {
    function BrowserInfo(name, version, os) {
        this.name = name;
        this.version = version;
        this.os = os;
        this.type = 'browser';
    }
    return BrowserInfo;
}());

var NodeInfo = /** @class */ (function () {
    function NodeInfo(version) {
        this.version = version;
        this.type = 'node';
        this.name = 'node';
        this.os = process.platform;
    }
    return NodeInfo;
}());

var SearchBotDeviceInfo = /** @class */ (function () {
    function SearchBotDeviceInfo(name, version, os, bot) {
        this.name = name;
        this.version = version;
        this.os = os;
        this.bot = bot;
        this.type = 'bot-device';
    }
    return SearchBotDeviceInfo;
}());

var BotInfo = /** @class */ (function () {
    function BotInfo() {
        this.type = 'bot';
        this.bot = true; // NOTE: deprecated test name instead
        this.name = 'bot';
        this.version = null;
        this.os = null;
    }
    return BotInfo;
}());

var ReactNativeInfo = /** @class */ (function () {
    function ReactNativeInfo() {
        this.type = 'react-native';
        this.name = 'react-native';
        this.version = null;
        this.os = null;
    }
    return ReactNativeInfo;
}());

// tslint:disable-next-line:max-line-length
var SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;
var SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/;
var REQUIRED_VERSION_PARTS = 3;
var userAgentRules = [
    ['aol', /AOLShield\/([0-9\._]+)/],
    ['edge', /Edge\/([0-9\._]+)/],
    ['edge-ios', /EdgiOS\/([0-9\._]+)/],
    ['yandexbrowser', /YaBrowser\/([0-9\._]+)/],
    ['kakaotalk', /KAKAOTALK\s([0-9\.]+)/],
    ['samsung', /SamsungBrowser\/([0-9\.]+)/],
    ['silk', /\bSilk\/([0-9._-]+)\b/],
    ['miui', /MiuiBrowser\/([0-9\.]+)$/],
    ['beaker', /BeakerBrowser\/([0-9\.]+)/],
    ['edge-chromium', /EdgA?\/([0-9\.]+)/],
    [
        'chromium-webview',
        /(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/,
    ],
    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
    ['phantomjs', /PhantomJS\/([0-9\.]+)(:?\s|$)/],
    ['crios', /CriOS\/([0-9\.]+)(:?\s|$)/],
    ['firefox', /Firefox\/([0-9\.]+)(?:\s|$)/],
    ['fxios', /FxiOS\/([0-9\.]+)/],
    ['opera-mini', /Opera Mini.*Version\/([0-9\.]+)/],
    ['opera', /Opera\/([0-9\.]+)(?:\s|$)/],
    ['opera', /OPR\/([0-9\.]+)(:?\s|$)/],
    ['pie', /^Microsoft Pocket Internet Explorer\/(\d+\.\d+)$/],
    ['pie', /^Mozilla\/\d\.\d+\s\(compatible;\s(?:MSP?IE|MSInternet Explorer) (\d+\.\d+);.*Windows CE.*\)$/],
    ['netfront', /^Mozilla\/\d\.\d+.*NetFront\/(\d.\d)/],
    ['ie', /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],
    ['ie', /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],
    ['ie', /MSIE\s(7\.0)/],
    ['bb10', /BB10;\sTouch.*Version\/([0-9\.]+)/],
    ['android', /Android\s([0-9\.]+)/],
    ['ios', /Version\/([0-9\._]+).*Mobile.*Safari.*/],
    ['safari', /Version\/([0-9\._]+).*Safari/],
    ['facebook', /FB[AS]V\/([0-9\.]+)/],
    ['instagram', /Instagram\s([0-9\.]+)/],
    ['ios-webview', /AppleWebKit\/([0-9\.]+).*Mobile/],
    ['ios-webview', /AppleWebKit\/([0-9\.]+).*Gecko\)$/],
    ['curl', /^curl\/([0-9\.]+)$/],
    ['searchbot', SEARCHBOX_UA_REGEX],
];
var operatingSystemRules = [
    ['iOS', /iP(hone|od|ad)/],
    ['Android OS', /Android/],
    ['BlackBerry OS', /BlackBerry|BB10/],
    ['Windows Mobile', /IEMobile/],
    ['Amazon OS', /Kindle/],
    ['Windows 3.11', /Win16/],
    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],
    ['Windows 98', /(Windows 98)|(Win98)/],
    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],
    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],
    ['Windows Server 2003', /(Windows NT 5.2)/],
    ['Windows Vista', /(Windows NT 6.0)/],
    ['Windows 7', /(Windows NT 6.1)/],
    ['Windows 8', /(Windows NT 6.2)/],
    ['Windows 8.1', /(Windows NT 6.3)/],
    ['Windows 10', /(Windows NT 10.0)/],
    ['Windows ME', /Windows ME/],
    ['Windows CE', /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],
    ['Open BSD', /OpenBSD/],
    ['Sun OS', /SunOS/],
    ['Chrome OS', /CrOS/],
    ['Linux', /(Linux)|(X11)/],
    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],
    ['QNX', /QNX/],
    ['BeOS', /BeOS/],
    ['OS/2', /OS\/2/],
];
function detect(userAgent) {
    if (!!userAgent) {
        return parseUserAgent(userAgent);
    }
    if (typeof document === 'undefined' &&
        typeof navigator !== 'undefined' &&
        navigator.product === 'ReactNative') {
        return new ReactNativeInfo();
    }
    if (typeof navigator !== 'undefined') {
        return parseUserAgent(navigator.userAgent);
    }
    return getNodeVersion();
}
function matchUserAgent(ua) {
    // opted for using reduce here rather than Array#first with a regex.test call
    // this is primarily because using the reduce we only perform the regex
    // execution once rather than once for the test and for the exec again below
    // probably something that needs to be benchmarked though
    return (ua !== '' &&
        userAgentRules.reduce(function (matched, _a) {
            var browser = _a[0], regex = _a[1];
            if (matched) {
                return matched;
            }
            var uaMatch = regex.exec(ua);
            return !!uaMatch && [browser, uaMatch];
        }, false));
}
function browserName(ua) {
    var data = matchUserAgent(ua);
    return data ? data[0] : null;
}
function parseUserAgent(ua) {
    var matchedRule = matchUserAgent(ua);
    if (!matchedRule) {
        return null;
    }
    var name = matchedRule[0], match = matchedRule[1];
    if (name === 'searchbot') {
        return new BotInfo();
    }
    // Do not use RegExp for split operation as some browser do not support it (See: http://blog.stevenlevithan.com/archives/cross-browser-split)
    var versionParts = match[1] && match[1].split('.').join('_').split('_').slice(0, 3);
    if (versionParts) {
        if (versionParts.length < REQUIRED_VERSION_PARTS) {
            versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);
        }
    }
    else {
        versionParts = [];
    }
    var version = versionParts.join('.');
    var os = detectOS(ua);
    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);
    if (searchBotMatch && searchBotMatch[1]) {
        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);
    }
    return new BrowserInfo(name, version, os);
}
function detectOS(ua) {
    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {
        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];
        var match = regex.exec(ua);
        if (match) {
            return os;
        }
    }
    return null;
}
function getNodeVersion() {
    var isNode = typeof process !== 'undefined' && process.version;
    return isNode ? new NodeInfo(process.version.slice(1)) : null;
}
function createVersionParts(count) {
    var output = [];
    for (var ii = 0; ii < count; ii++) {
        output.push('0');
    }
    return output;
}


/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/alloc.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/alloc.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   alloc: () => (/* binding */ alloc),
/* harmony export */   allocUnsafe: () => (/* binding */ allocUnsafe)
/* harmony export */ });
/* harmony import */ var _util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/as-uint8array.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/util/as-uint8array.js");

function alloc(size = 0) {
  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {
    return (0,_util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_0__.asUint8Array)(globalThis.Buffer.alloc(size));
  }
  return new Uint8Array(size);
}
function allocUnsafe(size = 0) {
  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {
    return (0,_util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_0__.asUint8Array)(globalThis.Buffer.allocUnsafe(size));
  }
  return new Uint8Array(size);
}

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/compare.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/compare.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   compare: () => (/* binding */ compare)
/* harmony export */ });
function compare(a, b) {
  for (let i = 0; i < a.byteLength; i++) {
    if (a[i] < b[i]) {
      return -1;
    }
    if (a[i] > b[i]) {
      return 1;
    }
  }
  if (a.byteLength > b.byteLength) {
    return 1;
  }
  if (a.byteLength < b.byteLength) {
    return -1;
  }
  return 0;
}

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/concat.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/concat.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   concat: () => (/* binding */ concat)
/* harmony export */ });
/* harmony import */ var _alloc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./alloc.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/alloc.js");
/* harmony import */ var _util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/as-uint8array.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/util/as-uint8array.js");


function concat(arrays, length) {
  if (!length) {
    length = arrays.reduce((acc, curr) => acc + curr.length, 0);
  }
  const output = (0,_alloc_js__WEBPACK_IMPORTED_MODULE_0__.allocUnsafe)(length);
  let offset = 0;
  for (const arr of arrays) {
    output.set(arr, offset);
    offset += arr.length;
  }
  return (0,_util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_1__.asUint8Array)(output);
}

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/equals.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/equals.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   equals: () => (/* binding */ equals)
/* harmony export */ });
function equals(a, b) {
  if (a === b) {
    return true;
  }
  if (a.byteLength !== b.byteLength) {
    return false;
  }
  for (let i = 0; i < a.byteLength; i++) {
    if (a[i] !== b[i]) {
      return false;
    }
  }
  return true;
}

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/from-string.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/from-string.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   fromString: () => (/* binding */ fromString)
/* harmony export */ });
/* harmony import */ var _util_bases_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/bases.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/util/bases.js");
/* harmony import */ var _util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/as-uint8array.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/util/as-uint8array.js");


function fromString(string, encoding = 'utf8') {
  const base = _util_bases_js__WEBPACK_IMPORTED_MODULE_0__["default"][encoding];
  if (!base) {
    throw new Error(`Unsupported encoding "${ encoding }"`);
  }
  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return (0,_util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_1__.asUint8Array)(globalThis.Buffer.from(string, 'utf-8'));
  }
  return base.decoder.decode(`${ base.prefix }${ string }`);
}

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/index.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/index.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   compare: () => (/* reexport safe */ _compare_js__WEBPACK_IMPORTED_MODULE_0__.compare),
/* harmony export */   concat: () => (/* reexport safe */ _concat_js__WEBPACK_IMPORTED_MODULE_1__.concat),
/* harmony export */   equals: () => (/* reexport safe */ _equals_js__WEBPACK_IMPORTED_MODULE_2__.equals),
/* harmony export */   fromString: () => (/* reexport safe */ _from_string_js__WEBPACK_IMPORTED_MODULE_3__.fromString),
/* harmony export */   toString: () => (/* reexport safe */ _to_string_js__WEBPACK_IMPORTED_MODULE_4__.toString),
/* harmony export */   xor: () => (/* reexport safe */ _xor_js__WEBPACK_IMPORTED_MODULE_5__.xor)
/* harmony export */ });
/* harmony import */ var _compare_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compare.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/compare.js");
/* harmony import */ var _concat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./concat.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/concat.js");
/* harmony import */ var _equals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./equals.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/equals.js");
/* harmony import */ var _from_string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./from-string.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/from-string.js");
/* harmony import */ var _to_string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./to-string.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/to-string.js");
/* harmony import */ var _xor_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./xor.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/xor.js");








/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/to-string.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/to-string.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   toString: () => (/* binding */ toString)
/* harmony export */ });
/* harmony import */ var _util_bases_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/bases.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/util/bases.js");

function toString(array, encoding = 'utf8') {
  const base = _util_bases_js__WEBPACK_IMPORTED_MODULE_0__["default"][encoding];
  if (!base) {
    throw new Error(`Unsupported encoding "${ encoding }"`);
  }
  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');
  }
  return base.encoder.encode(array).substring(1);
}

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/util/as-uint8array.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/util/as-uint8array.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   asUint8Array: () => (/* binding */ asUint8Array)
/* harmony export */ });
function asUint8Array(buf) {
  if (globalThis.Buffer != null) {
    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
  }
  return buf;
}

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/util/bases.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/util/bases.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var multiformats_basics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! multiformats/basics */ "./node_modules/multiformats/esm/src/basics.js");
/* harmony import */ var _alloc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../alloc.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/alloc.js");


function createCodec(name, prefix, encode, decode) {
  return {
    name,
    prefix,
    encoder: {
      name,
      prefix,
      encode
    },
    decoder: { decode }
  };
}
const string = createCodec('utf8', 'u', buf => {
  const decoder = new TextDecoder('utf8');
  return 'u' + decoder.decode(buf);
}, str => {
  const encoder = new TextEncoder();
  return encoder.encode(str.substring(1));
});
const ascii = createCodec('ascii', 'a', buf => {
  let string = 'a';
  for (let i = 0; i < buf.length; i++) {
    string += String.fromCharCode(buf[i]);
  }
  return string;
}, str => {
  str = str.substring(1);
  const buf = (0,_alloc_js__WEBPACK_IMPORTED_MODULE_1__.allocUnsafe)(str.length);
  for (let i = 0; i < str.length; i++) {
    buf[i] = str.charCodeAt(i);
  }
  return buf;
});
const BASES = {
  utf8: string,
  'utf-8': string,
  hex: multiformats_basics__WEBPACK_IMPORTED_MODULE_0__.bases.base16,
  latin1: ascii,
  ascii: ascii,
  binary: ascii,
  ...multiformats_basics__WEBPACK_IMPORTED_MODULE_0__.bases
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BASES);

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/xor.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/xor.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   xor: () => (/* binding */ xor)
/* harmony export */ });
/* harmony import */ var _alloc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./alloc.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/alloc.js");
/* harmony import */ var _util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/as-uint8array.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/uint8arrays/esm/src/util/as-uint8array.js");


function xor(a, b) {
  if (a.length !== b.length) {
    throw new Error('Inputs should have the same length');
  }
  const result = (0,_alloc_js__WEBPACK_IMPORTED_MODULE_0__.allocUnsafe)(a.length);
  for (let i = 0; i < a.length; i++) {
    result[i] = a[i] ^ b[i];
  }
  return (0,_util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_1__.asUint8Array)(result);
}

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/accounts/utils/publicKeyToAddress.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/accounts/utils/publicKeyToAddress.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   publicKeyToAddress: () => (/* binding */ publicKeyToAddress)
/* harmony export */ });
/* harmony import */ var _utils_address_getAddress_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/address/getAddress.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/address/getAddress.js");
/* harmony import */ var _utils_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/hash/keccak256.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/hash/keccak256.js");


/**
 * @description Converts an ECDSA public key to an address.
 *
 * @param publicKey The public key to convert.
 *
 * @returns The address.
 */
function publicKeyToAddress(publicKey) {
    const address = (0,_utils_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)(`0x${publicKey.substring(4)}`).substring(26);
    return (0,_utils_address_getAddress_js__WEBPACK_IMPORTED_MODULE_0__.checksumAddress)(`0x${address}`);
}
//# sourceMappingURL=publicKeyToAddress.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/errors/address.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/errors/address.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InvalidAddressError: () => (/* binding */ InvalidAddressError)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/errors/base.js");

class InvalidAddressError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ address }) {
        super(`Address "${address}" is invalid.`, {
            metaMessages: [
                '- Address must be a hex value of 20 bytes (40 hex characters).',
                '- Address must match its checksum counterpart.',
            ],
            name: 'InvalidAddressError',
        });
    }
}
//# sourceMappingURL=address.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/errors/base.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/errors/base.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BaseError: () => (/* binding */ BaseError),
/* harmony export */   setErrorConfig: () => (/* binding */ setErrorConfig)
/* harmony export */ });
/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/errors/version.js");

let errorConfig = {
    getDocsUrl: ({ docsBaseUrl, docsPath = '', docsSlug, }) => docsPath
        ? `${docsBaseUrl ?? 'https://viem.sh'}${docsPath}${docsSlug ? `#${docsSlug}` : ''}`
        : undefined,
    version: `viem@${_version_js__WEBPACK_IMPORTED_MODULE_0__.version}`,
};
function setErrorConfig(config) {
    errorConfig = config;
}
class BaseError extends Error {
    constructor(shortMessage, args = {}) {
        const details = (() => {
            if (args.cause instanceof BaseError)
                return args.cause.details;
            if (args.cause?.message)
                return args.cause.message;
            return args.details;
        })();
        const docsPath = (() => {
            if (args.cause instanceof BaseError)
                return args.cause.docsPath || args.docsPath;
            return args.docsPath;
        })();
        const docsUrl = errorConfig.getDocsUrl?.({ ...args, docsPath });
        const message = [
            shortMessage || 'An error occurred.',
            '',
            ...(args.metaMessages ? [...args.metaMessages, ''] : []),
            ...(docsUrl ? [`Docs: ${docsUrl}`] : []),
            ...(details ? [`Details: ${details}`] : []),
            ...(errorConfig.version ? [`Version: ${errorConfig.version}`] : []),
        ].join('\n');
        super(message, args.cause ? { cause: args.cause } : undefined);
        Object.defineProperty(this, "details", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "docsPath", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "metaMessages", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "shortMessage", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "version", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'BaseError'
        });
        this.details = details;
        this.docsPath = docsPath;
        this.metaMessages = args.metaMessages;
        this.name = args.name ?? this.name;
        this.shortMessage = shortMessage;
        this.version = _version_js__WEBPACK_IMPORTED_MODULE_0__.version;
    }
    walk(fn) {
        return walk(this, fn);
    }
}
function walk(err, fn) {
    if (fn?.(err))
        return err;
    if (err &&
        typeof err === 'object' &&
        'cause' in err &&
        err.cause !== undefined)
        return walk(err.cause, fn);
    return fn ? null : err;
}
//# sourceMappingURL=base.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/errors/data.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/errors/data.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InvalidBytesLengthError: () => (/* binding */ InvalidBytesLengthError),
/* harmony export */   SizeExceedsPaddingSizeError: () => (/* binding */ SizeExceedsPaddingSizeError),
/* harmony export */   SliceOffsetOutOfBoundsError: () => (/* binding */ SliceOffsetOutOfBoundsError)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/errors/base.js");

class SliceOffsetOutOfBoundsError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ offset, position, size, }) {
        super(`Slice ${position === 'start' ? 'starting' : 'ending'} at offset "${offset}" is out-of-bounds (size: ${size}).`, { name: 'SliceOffsetOutOfBoundsError' });
    }
}
class SizeExceedsPaddingSizeError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ size, targetSize, type, }) {
        super(`${type.charAt(0).toUpperCase()}${type
            .slice(1)
            .toLowerCase()} size (${size}) exceeds padding size (${targetSize}).`, { name: 'SizeExceedsPaddingSizeError' });
    }
}
class InvalidBytesLengthError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ size, targetSize, type, }) {
        super(`${type.charAt(0).toUpperCase()}${type
            .slice(1)
            .toLowerCase()} is expected to be ${targetSize} ${type} long, but is ${size} ${type} long.`, { name: 'InvalidBytesLengthError' });
    }
}
//# sourceMappingURL=data.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/errors/encoding.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/errors/encoding.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IntegerOutOfRangeError: () => (/* binding */ IntegerOutOfRangeError),
/* harmony export */   InvalidBytesBooleanError: () => (/* binding */ InvalidBytesBooleanError),
/* harmony export */   InvalidHexBooleanError: () => (/* binding */ InvalidHexBooleanError),
/* harmony export */   InvalidHexValueError: () => (/* binding */ InvalidHexValueError),
/* harmony export */   SizeOverflowError: () => (/* binding */ SizeOverflowError)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/errors/base.js");

class IntegerOutOfRangeError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ max, min, signed, size, value, }) {
        super(`Number "${value}" is not in safe ${size ? `${size * 8}-bit ${signed ? 'signed' : 'unsigned'} ` : ''}integer range ${max ? `(${min} to ${max})` : `(above ${min})`}`, { name: 'IntegerOutOfRangeError' });
    }
}
class InvalidBytesBooleanError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor(bytes) {
        super(`Bytes value "${bytes}" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`, {
            name: 'InvalidBytesBooleanError',
        });
    }
}
class InvalidHexBooleanError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor(hex) {
        super(`Hex value "${hex}" is not a valid boolean. The hex value must be "0x0" (false) or "0x1" (true).`, { name: 'InvalidHexBooleanError' });
    }
}
class InvalidHexValueError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor(value) {
        super(`Hex value "${value}" is an odd length (${value.length}). It must be an even length.`, { name: 'InvalidHexValueError' });
    }
}
class SizeOverflowError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ givenSize, maxSize }) {
        super(`Size cannot exceed ${maxSize} bytes. Given size: ${givenSize} bytes.`, { name: 'SizeOverflowError' });
    }
}
//# sourceMappingURL=encoding.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/errors/version.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/errors/version.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   version: () => (/* binding */ version)
/* harmony export */ });
const version = '2.31.0';
//# sourceMappingURL=version.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/address/getAddress.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/address/getAddress.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   checksumAddress: () => (/* binding */ checksumAddress),
/* harmony export */   getAddress: () => (/* binding */ getAddress)
/* harmony export */ });
/* harmony import */ var _errors_address_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/address.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/errors/address.js");
/* harmony import */ var _encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../encoding/toBytes.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/encoding/toBytes.js");
/* harmony import */ var _hash_keccak256_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hash/keccak256.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/hash/keccak256.js");
/* harmony import */ var _lru_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lru.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/lru.js");
/* harmony import */ var _isAddress_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./isAddress.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/address/isAddress.js");





const checksumAddressCache = /*#__PURE__*/ new _lru_js__WEBPACK_IMPORTED_MODULE_3__.LruMap(8192);
function checksumAddress(address_, 
/**
 * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the
 * wider Ethereum ecosystem, meaning it will break when validated against an application/tool
 * that relies on EIP-55 checksum encoding (checksum without chainId).
 *
 * It is highly recommended to not use this feature unless you
 * know what you are doing.
 *
 * See more: https://github.com/ethereum/EIPs/issues/1121
 */
chainId) {
    if (checksumAddressCache.has(`${address_}.${chainId}`))
        return checksumAddressCache.get(`${address_}.${chainId}`);
    const hexAddress = chainId
        ? `${chainId}${address_.toLowerCase()}`
        : address_.substring(2).toLowerCase();
    const hash = (0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_2__.keccak256)((0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_1__.stringToBytes)(hexAddress), 'bytes');
    const address = (chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress).split('');
    for (let i = 0; i < 40; i += 2) {
        if (hash[i >> 1] >> 4 >= 8 && address[i]) {
            address[i] = address[i].toUpperCase();
        }
        if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {
            address[i + 1] = address[i + 1].toUpperCase();
        }
    }
    const result = `0x${address.join('')}`;
    checksumAddressCache.set(`${address_}.${chainId}`, result);
    return result;
}
function getAddress(address, 
/**
 * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the
 * wider Ethereum ecosystem, meaning it will break when validated against an application/tool
 * that relies on EIP-55 checksum encoding (checksum without chainId).
 *
 * It is highly recommended to not use this feature unless you
 * know what you are doing.
 *
 * See more: https://github.com/ethereum/EIPs/issues/1121
 */
chainId) {
    if (!(0,_isAddress_js__WEBPACK_IMPORTED_MODULE_4__.isAddress)(address, { strict: false }))
        throw new _errors_address_js__WEBPACK_IMPORTED_MODULE_0__.InvalidAddressError({ address });
    return checksumAddress(address, chainId);
}
//# sourceMappingURL=getAddress.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/address/isAddress.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/address/isAddress.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isAddress: () => (/* binding */ isAddress),
/* harmony export */   isAddressCache: () => (/* binding */ isAddressCache)
/* harmony export */ });
/* harmony import */ var _lru_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lru.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/lru.js");
/* harmony import */ var _getAddress_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getAddress.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/address/getAddress.js");


const addressRegex = /^0x[a-fA-F0-9]{40}$/;
/** @internal */
const isAddressCache = /*#__PURE__*/ new _lru_js__WEBPACK_IMPORTED_MODULE_0__.LruMap(8192);
function isAddress(address, options) {
    const { strict = true } = options ?? {};
    const cacheKey = `${address}.${strict}`;
    if (isAddressCache.has(cacheKey))
        return isAddressCache.get(cacheKey);
    const result = (() => {
        if (!addressRegex.test(address))
            return false;
        if (address.toLowerCase() === address)
            return true;
        if (strict)
            return (0,_getAddress_js__WEBPACK_IMPORTED_MODULE_1__.checksumAddress)(address) === address;
        return true;
    })();
    isAddressCache.set(cacheKey, result);
    return result;
}
//# sourceMappingURL=isAddress.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/data/isHex.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/data/isHex.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isHex: () => (/* binding */ isHex)
/* harmony export */ });
function isHex(value, { strict = true } = {}) {
    if (!value)
        return false;
    if (typeof value !== 'string')
        return false;
    return strict ? /^0x[0-9a-fA-F]*$/.test(value) : value.startsWith('0x');
}
//# sourceMappingURL=isHex.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/data/pad.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/data/pad.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   pad: () => (/* binding */ pad),
/* harmony export */   padBytes: () => (/* binding */ padBytes),
/* harmony export */   padHex: () => (/* binding */ padHex)
/* harmony export */ });
/* harmony import */ var _errors_data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/data.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/errors/data.js");

function pad(hexOrBytes, { dir, size = 32 } = {}) {
    if (typeof hexOrBytes === 'string')
        return padHex(hexOrBytes, { dir, size });
    return padBytes(hexOrBytes, { dir, size });
}
function padHex(hex_, { dir, size = 32 } = {}) {
    if (size === null)
        return hex_;
    const hex = hex_.replace('0x', '');
    if (hex.length > size * 2)
        throw new _errors_data_js__WEBPACK_IMPORTED_MODULE_0__.SizeExceedsPaddingSizeError({
            size: Math.ceil(hex.length / 2),
            targetSize: size,
            type: 'hex',
        });
    return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](size * 2, '0')}`;
}
function padBytes(bytes, { dir, size = 32 } = {}) {
    if (size === null)
        return bytes;
    if (bytes.length > size)
        throw new _errors_data_js__WEBPACK_IMPORTED_MODULE_0__.SizeExceedsPaddingSizeError({
            size: bytes.length,
            targetSize: size,
            type: 'bytes',
        });
    const paddedBytes = new Uint8Array(size);
    for (let i = 0; i < size; i++) {
        const padEnd = dir === 'right';
        paddedBytes[padEnd ? i : size - i - 1] =
            bytes[padEnd ? i : bytes.length - i - 1];
    }
    return paddedBytes;
}
//# sourceMappingURL=pad.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/data/size.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/data/size.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   size: () => (/* binding */ size)
/* harmony export */ });
/* harmony import */ var _isHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isHex.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/data/isHex.js");

/**
 * @description Retrieves the size of the value (in bytes).
 *
 * @param value The value (hex or byte array) to retrieve the size of.
 * @returns The size of the value (in bytes).
 */
function size(value) {
    if ((0,_isHex_js__WEBPACK_IMPORTED_MODULE_0__.isHex)(value, { strict: false }))
        return Math.ceil((value.length - 2) / 2);
    return value.length;
}
//# sourceMappingURL=size.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/data/trim.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/data/trim.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   trim: () => (/* binding */ trim)
/* harmony export */ });
function trim(hexOrBytes, { dir = 'left' } = {}) {
    let data = typeof hexOrBytes === 'string' ? hexOrBytes.replace('0x', '') : hexOrBytes;
    let sliceLength = 0;
    for (let i = 0; i < data.length - 1; i++) {
        if (data[dir === 'left' ? i : data.length - i - 1].toString() === '0')
            sliceLength++;
        else
            break;
    }
    data =
        dir === 'left'
            ? data.slice(sliceLength)
            : data.slice(0, data.length - sliceLength);
    if (typeof hexOrBytes === 'string') {
        if (data.length === 1 && dir === 'right')
            data = `${data}0`;
        return `0x${data.length % 2 === 1 ? `0${data}` : data}`;
    }
    return data;
}
//# sourceMappingURL=trim.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/encoding/fromHex.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/encoding/fromHex.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   assertSize: () => (/* binding */ assertSize),
/* harmony export */   fromHex: () => (/* binding */ fromHex),
/* harmony export */   hexToBigInt: () => (/* binding */ hexToBigInt),
/* harmony export */   hexToBool: () => (/* binding */ hexToBool),
/* harmony export */   hexToNumber: () => (/* binding */ hexToNumber),
/* harmony export */   hexToString: () => (/* binding */ hexToString)
/* harmony export */ });
/* harmony import */ var _errors_encoding_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/encoding.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/errors/encoding.js");
/* harmony import */ var _data_size_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/size.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/data/size.js");
/* harmony import */ var _data_trim_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/trim.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/data/trim.js");
/* harmony import */ var _toBytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./toBytes.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/encoding/toBytes.js");




function assertSize(hexOrBytes, { size }) {
    if ((0,_data_size_js__WEBPACK_IMPORTED_MODULE_1__.size)(hexOrBytes) > size)
        throw new _errors_encoding_js__WEBPACK_IMPORTED_MODULE_0__.SizeOverflowError({
            givenSize: (0,_data_size_js__WEBPACK_IMPORTED_MODULE_1__.size)(hexOrBytes),
            maxSize: size,
        });
}
/**
 * Decodes a hex string into a string, number, bigint, boolean, or byte array.
 *
 * - Docs: https://viem.sh/docs/utilities/fromHex
 * - Example: https://viem.sh/docs/utilities/fromHex#usage
 *
 * @param hex Hex string to decode.
 * @param toOrOpts Type to convert to or options.
 * @returns Decoded value.
 *
 * @example
 * import { fromHex } from 'viem'
 * const data = fromHex('0x1a4', 'number')
 * // 420
 *
 * @example
 * import { fromHex } from 'viem'
 * const data = fromHex('0x48656c6c6f20576f726c6421', 'string')
 * // 'Hello world'
 *
 * @example
 * import { fromHex } from 'viem'
 * const data = fromHex('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {
 *   size: 32,
 *   to: 'string'
 * })
 * // 'Hello world'
 */
function fromHex(hex, toOrOpts) {
    const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts;
    const to = opts.to;
    if (to === 'number')
        return hexToNumber(hex, opts);
    if (to === 'bigint')
        return hexToBigInt(hex, opts);
    if (to === 'string')
        return hexToString(hex, opts);
    if (to === 'boolean')
        return hexToBool(hex, opts);
    return (0,_toBytes_js__WEBPACK_IMPORTED_MODULE_3__.hexToBytes)(hex, opts);
}
/**
 * Decodes a hex value into a bigint.
 *
 * - Docs: https://viem.sh/docs/utilities/fromHex#hextobigint
 *
 * @param hex Hex value to decode.
 * @param opts Options.
 * @returns BigInt value.
 *
 * @example
 * import { hexToBigInt } from 'viem'
 * const data = hexToBigInt('0x1a4', { signed: true })
 * // 420n
 *
 * @example
 * import { hexToBigInt } from 'viem'
 * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })
 * // 420n
 */
function hexToBigInt(hex, opts = {}) {
    const { signed } = opts;
    if (opts.size)
        assertSize(hex, { size: opts.size });
    const value = BigInt(hex);
    if (!signed)
        return value;
    const size = (hex.length - 2) / 2;
    const max = (1n << (BigInt(size) * 8n - 1n)) - 1n;
    if (value <= max)
        return value;
    return value - BigInt(`0x${'f'.padStart(size * 2, 'f')}`) - 1n;
}
/**
 * Decodes a hex value into a boolean.
 *
 * - Docs: https://viem.sh/docs/utilities/fromHex#hextobool
 *
 * @param hex Hex value to decode.
 * @param opts Options.
 * @returns Boolean value.
 *
 * @example
 * import { hexToBool } from 'viem'
 * const data = hexToBool('0x01')
 * // true
 *
 * @example
 * import { hexToBool } from 'viem'
 * const data = hexToBool('0x0000000000000000000000000000000000000000000000000000000000000001', { size: 32 })
 * // true
 */
function hexToBool(hex_, opts = {}) {
    let hex = hex_;
    if (opts.size) {
        assertSize(hex, { size: opts.size });
        hex = (0,_data_trim_js__WEBPACK_IMPORTED_MODULE_2__.trim)(hex);
    }
    if ((0,_data_trim_js__WEBPACK_IMPORTED_MODULE_2__.trim)(hex) === '0x00')
        return false;
    if ((0,_data_trim_js__WEBPACK_IMPORTED_MODULE_2__.trim)(hex) === '0x01')
        return true;
    throw new _errors_encoding_js__WEBPACK_IMPORTED_MODULE_0__.InvalidHexBooleanError(hex);
}
/**
 * Decodes a hex string into a number.
 *
 * - Docs: https://viem.sh/docs/utilities/fromHex#hextonumber
 *
 * @param hex Hex value to decode.
 * @param opts Options.
 * @returns Number value.
 *
 * @example
 * import { hexToNumber } from 'viem'
 * const data = hexToNumber('0x1a4')
 * // 420
 *
 * @example
 * import { hexToNumber } from 'viem'
 * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })
 * // 420
 */
function hexToNumber(hex, opts = {}) {
    return Number(hexToBigInt(hex, opts));
}
/**
 * Decodes a hex value into a UTF-8 string.
 *
 * - Docs: https://viem.sh/docs/utilities/fromHex#hextostring
 *
 * @param hex Hex value to decode.
 * @param opts Options.
 * @returns String value.
 *
 * @example
 * import { hexToString } from 'viem'
 * const data = hexToString('0x48656c6c6f20576f726c6421')
 * // 'Hello world!'
 *
 * @example
 * import { hexToString } from 'viem'
 * const data = hexToString('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {
 *  size: 32,
 * })
 * // 'Hello world'
 */
function hexToString(hex, opts = {}) {
    let bytes = (0,_toBytes_js__WEBPACK_IMPORTED_MODULE_3__.hexToBytes)(hex);
    if (opts.size) {
        assertSize(bytes, { size: opts.size });
        bytes = (0,_data_trim_js__WEBPACK_IMPORTED_MODULE_2__.trim)(bytes, { dir: 'right' });
    }
    return new TextDecoder().decode(bytes);
}
//# sourceMappingURL=fromHex.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/encoding/toBytes.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/encoding/toBytes.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   boolToBytes: () => (/* binding */ boolToBytes),
/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),
/* harmony export */   numberToBytes: () => (/* binding */ numberToBytes),
/* harmony export */   stringToBytes: () => (/* binding */ stringToBytes),
/* harmony export */   toBytes: () => (/* binding */ toBytes)
/* harmony export */ });
/* harmony import */ var _errors_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/base.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/errors/base.js");
/* harmony import */ var _data_isHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/isHex.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/data/isHex.js");
/* harmony import */ var _data_pad_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/pad.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/data/pad.js");
/* harmony import */ var _fromHex_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fromHex.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/encoding/fromHex.js");
/* harmony import */ var _toHex_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./toHex.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/encoding/toHex.js");





const encoder = /*#__PURE__*/ new TextEncoder();
/**
 * Encodes a UTF-8 string, hex value, bigint, number or boolean to a byte array.
 *
 * - Docs: https://viem.sh/docs/utilities/toBytes
 * - Example: https://viem.sh/docs/utilities/toBytes#usage
 *
 * @param value Value to encode.
 * @param opts Options.
 * @returns Byte array value.
 *
 * @example
 * import { toBytes } from 'viem'
 * const data = toBytes('Hello world')
 * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])
 *
 * @example
 * import { toBytes } from 'viem'
 * const data = toBytes(420)
 * // Uint8Array([1, 164])
 *
 * @example
 * import { toBytes } from 'viem'
 * const data = toBytes(420, { size: 4 })
 * // Uint8Array([0, 0, 1, 164])
 */
function toBytes(value, opts = {}) {
    if (typeof value === 'number' || typeof value === 'bigint')
        return numberToBytes(value, opts);
    if (typeof value === 'boolean')
        return boolToBytes(value, opts);
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_1__.isHex)(value))
        return hexToBytes(value, opts);
    return stringToBytes(value, opts);
}
/**
 * Encodes a boolean into a byte array.
 *
 * - Docs: https://viem.sh/docs/utilities/toBytes#booltobytes
 *
 * @param value Boolean value to encode.
 * @param opts Options.
 * @returns Byte array value.
 *
 * @example
 * import { boolToBytes } from 'viem'
 * const data = boolToBytes(true)
 * // Uint8Array([1])
 *
 * @example
 * import { boolToBytes } from 'viem'
 * const data = boolToBytes(true, { size: 32 })
 * // Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])
 */
function boolToBytes(value, opts = {}) {
    const bytes = new Uint8Array(1);
    bytes[0] = Number(value);
    if (typeof opts.size === 'number') {
        (0,_fromHex_js__WEBPACK_IMPORTED_MODULE_3__.assertSize)(bytes, { size: opts.size });
        return (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_2__.pad)(bytes, { size: opts.size });
    }
    return bytes;
}
// We use very optimized technique to convert hex string to byte array
const charCodeMap = {
    zero: 48,
    nine: 57,
    A: 65,
    F: 70,
    a: 97,
    f: 102,
};
function charCodeToBase16(char) {
    if (char >= charCodeMap.zero && char <= charCodeMap.nine)
        return char - charCodeMap.zero;
    if (char >= charCodeMap.A && char <= charCodeMap.F)
        return char - (charCodeMap.A - 10);
    if (char >= charCodeMap.a && char <= charCodeMap.f)
        return char - (charCodeMap.a - 10);
    return undefined;
}
/**
 * Encodes a hex string into a byte array.
 *
 * - Docs: https://viem.sh/docs/utilities/toBytes#hextobytes
 *
 * @param hex Hex string to encode.
 * @param opts Options.
 * @returns Byte array value.
 *
 * @example
 * import { hexToBytes } from 'viem'
 * const data = hexToBytes('0x48656c6c6f20776f726c6421')
 * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])
 *
 * @example
 * import { hexToBytes } from 'viem'
 * const data = hexToBytes('0x48656c6c6f20776f726c6421', { size: 32 })
 * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
 */
function hexToBytes(hex_, opts = {}) {
    let hex = hex_;
    if (opts.size) {
        (0,_fromHex_js__WEBPACK_IMPORTED_MODULE_3__.assertSize)(hex, { size: opts.size });
        hex = (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_2__.pad)(hex, { dir: 'right', size: opts.size });
    }
    let hexString = hex.slice(2);
    if (hexString.length % 2)
        hexString = `0${hexString}`;
    const length = hexString.length / 2;
    const bytes = new Uint8Array(length);
    for (let index = 0, j = 0; index < length; index++) {
        const nibbleLeft = charCodeToBase16(hexString.charCodeAt(j++));
        const nibbleRight = charCodeToBase16(hexString.charCodeAt(j++));
        if (nibbleLeft === undefined || nibbleRight === undefined) {
            throw new _errors_base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError(`Invalid byte sequence ("${hexString[j - 2]}${hexString[j - 1]}" in "${hexString}").`);
        }
        bytes[index] = nibbleLeft * 16 + nibbleRight;
    }
    return bytes;
}
/**
 * Encodes a number into a byte array.
 *
 * - Docs: https://viem.sh/docs/utilities/toBytes#numbertobytes
 *
 * @param value Number to encode.
 * @param opts Options.
 * @returns Byte array value.
 *
 * @example
 * import { numberToBytes } from 'viem'
 * const data = numberToBytes(420)
 * // Uint8Array([1, 164])
 *
 * @example
 * import { numberToBytes } from 'viem'
 * const data = numberToBytes(420, { size: 4 })
 * // Uint8Array([0, 0, 1, 164])
 */
function numberToBytes(value, opts) {
    const hex = (0,_toHex_js__WEBPACK_IMPORTED_MODULE_4__.numberToHex)(value, opts);
    return hexToBytes(hex);
}
/**
 * Encodes a UTF-8 string into a byte array.
 *
 * - Docs: https://viem.sh/docs/utilities/toBytes#stringtobytes
 *
 * @param value String to encode.
 * @param opts Options.
 * @returns Byte array value.
 *
 * @example
 * import { stringToBytes } from 'viem'
 * const data = stringToBytes('Hello world!')
 * // Uint8Array([72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 33])
 *
 * @example
 * import { stringToBytes } from 'viem'
 * const data = stringToBytes('Hello world!', { size: 32 })
 * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
 */
function stringToBytes(value, opts = {}) {
    const bytes = encoder.encode(value);
    if (typeof opts.size === 'number') {
        (0,_fromHex_js__WEBPACK_IMPORTED_MODULE_3__.assertSize)(bytes, { size: opts.size });
        return (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_2__.pad)(bytes, { dir: 'right', size: opts.size });
    }
    return bytes;
}
//# sourceMappingURL=toBytes.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/encoding/toHex.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/encoding/toHex.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   boolToHex: () => (/* binding */ boolToHex),
/* harmony export */   bytesToHex: () => (/* binding */ bytesToHex),
/* harmony export */   numberToHex: () => (/* binding */ numberToHex),
/* harmony export */   stringToHex: () => (/* binding */ stringToHex),
/* harmony export */   toHex: () => (/* binding */ toHex)
/* harmony export */ });
/* harmony import */ var _errors_encoding_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/encoding.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/errors/encoding.js");
/* harmony import */ var _data_pad_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/pad.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/data/pad.js");
/* harmony import */ var _fromHex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fromHex.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/encoding/fromHex.js");



const hexes = /*#__PURE__*/ Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'));
/**
 * Encodes a string, number, bigint, or ByteArray into a hex string
 *
 * - Docs: https://viem.sh/docs/utilities/toHex
 * - Example: https://viem.sh/docs/utilities/toHex#usage
 *
 * @param value Value to encode.
 * @param opts Options.
 * @returns Hex value.
 *
 * @example
 * import { toHex } from 'viem'
 * const data = toHex('Hello world')
 * // '0x48656c6c6f20776f726c6421'
 *
 * @example
 * import { toHex } from 'viem'
 * const data = toHex(420)
 * // '0x1a4'
 *
 * @example
 * import { toHex } from 'viem'
 * const data = toHex('Hello world', { size: 32 })
 * // '0x48656c6c6f20776f726c64210000000000000000000000000000000000000000'
 */
function toHex(value, opts = {}) {
    if (typeof value === 'number' || typeof value === 'bigint')
        return numberToHex(value, opts);
    if (typeof value === 'string') {
        return stringToHex(value, opts);
    }
    if (typeof value === 'boolean')
        return boolToHex(value, opts);
    return bytesToHex(value, opts);
}
/**
 * Encodes a boolean into a hex string
 *
 * - Docs: https://viem.sh/docs/utilities/toHex#booltohex
 *
 * @param value Value to encode.
 * @param opts Options.
 * @returns Hex value.
 *
 * @example
 * import { boolToHex } from 'viem'
 * const data = boolToHex(true)
 * // '0x1'
 *
 * @example
 * import { boolToHex } from 'viem'
 * const data = boolToHex(false)
 * // '0x0'
 *
 * @example
 * import { boolToHex } from 'viem'
 * const data = boolToHex(true, { size: 32 })
 * // '0x0000000000000000000000000000000000000000000000000000000000000001'
 */
function boolToHex(value, opts = {}) {
    const hex = `0x${Number(value)}`;
    if (typeof opts.size === 'number') {
        (0,_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.assertSize)(hex, { size: opts.size });
        return (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_1__.pad)(hex, { size: opts.size });
    }
    return hex;
}
/**
 * Encodes a bytes array into a hex string
 *
 * - Docs: https://viem.sh/docs/utilities/toHex#bytestohex
 *
 * @param value Value to encode.
 * @param opts Options.
 * @returns Hex value.
 *
 * @example
 * import { bytesToHex } from 'viem'
 * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])
 * // '0x48656c6c6f20576f726c6421'
 *
 * @example
 * import { bytesToHex } from 'viem'
 * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]), { size: 32 })
 * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'
 */
function bytesToHex(value, opts = {}) {
    let string = '';
    for (let i = 0; i < value.length; i++) {
        string += hexes[value[i]];
    }
    const hex = `0x${string}`;
    if (typeof opts.size === 'number') {
        (0,_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.assertSize)(hex, { size: opts.size });
        return (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_1__.pad)(hex, { dir: 'right', size: opts.size });
    }
    return hex;
}
/**
 * Encodes a number or bigint into a hex string
 *
 * - Docs: https://viem.sh/docs/utilities/toHex#numbertohex
 *
 * @param value Value to encode.
 * @param opts Options.
 * @returns Hex value.
 *
 * @example
 * import { numberToHex } from 'viem'
 * const data = numberToHex(420)
 * // '0x1a4'
 *
 * @example
 * import { numberToHex } from 'viem'
 * const data = numberToHex(420, { size: 32 })
 * // '0x00000000000000000000000000000000000000000000000000000000000001a4'
 */
function numberToHex(value_, opts = {}) {
    const { signed, size } = opts;
    const value = BigInt(value_);
    let maxValue;
    if (size) {
        if (signed)
            maxValue = (1n << (BigInt(size) * 8n - 1n)) - 1n;
        else
            maxValue = 2n ** (BigInt(size) * 8n) - 1n;
    }
    else if (typeof value_ === 'number') {
        maxValue = BigInt(Number.MAX_SAFE_INTEGER);
    }
    const minValue = typeof maxValue === 'bigint' && signed ? -maxValue - 1n : 0;
    if ((maxValue && value > maxValue) || value < minValue) {
        const suffix = typeof value_ === 'bigint' ? 'n' : '';
        throw new _errors_encoding_js__WEBPACK_IMPORTED_MODULE_0__.IntegerOutOfRangeError({
            max: maxValue ? `${maxValue}${suffix}` : undefined,
            min: `${minValue}${suffix}`,
            signed,
            size,
            value: `${value_}${suffix}`,
        });
    }
    const hex = `0x${(signed && value < 0 ? (1n << BigInt(size * 8)) + BigInt(value) : value).toString(16)}`;
    if (size)
        return (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_1__.pad)(hex, { size });
    return hex;
}
const encoder = /*#__PURE__*/ new TextEncoder();
/**
 * Encodes a UTF-8 string into a hex string
 *
 * - Docs: https://viem.sh/docs/utilities/toHex#stringtohex
 *
 * @param value Value to encode.
 * @param opts Options.
 * @returns Hex value.
 *
 * @example
 * import { stringToHex } from 'viem'
 * const data = stringToHex('Hello World!')
 * // '0x48656c6c6f20576f726c6421'
 *
 * @example
 * import { stringToHex } from 'viem'
 * const data = stringToHex('Hello World!', { size: 32 })
 * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'
 */
function stringToHex(value_, opts = {}) {
    const value = encoder.encode(value_);
    return bytesToHex(value, opts);
}
//# sourceMappingURL=toHex.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/hash/keccak256.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/hash/keccak256.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   keccak256: () => (/* binding */ keccak256)
/* harmony export */ });
/* harmony import */ var _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/sha3 */ "./node_modules/@walletconnect/ethereum-provider/node_modules/@noble/hashes/esm/sha3.js");
/* harmony import */ var _data_isHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/isHex.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/data/isHex.js");
/* harmony import */ var _encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../encoding/toBytes.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/encoding/toBytes.js");
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../encoding/toHex.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/encoding/toHex.js");




function keccak256(value, to_) {
    const to = to_ || 'hex';
    const bytes = (0,_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__.keccak_256)((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_1__.isHex)(value, { strict: false }) ? (0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(value) : value);
    if (to === 'bytes')
        return bytes;
    return (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_3__.toHex)(bytes);
}
//# sourceMappingURL=keccak256.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/lru.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/lru.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LruMap: () => (/* binding */ LruMap)
/* harmony export */ });
/**
 * Map with a LRU (Least recently used) policy.
 *
 * @link https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU
 */
class LruMap extends Map {
    constructor(size) {
        super();
        Object.defineProperty(this, "maxSize", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.maxSize = size;
    }
    get(key) {
        const value = super.get(key);
        if (super.has(key) && value !== undefined) {
            this.delete(key);
            super.set(key, value);
        }
        return value;
    }
    set(key, value) {
        super.set(key, value);
        if (this.maxSize && this.size > this.maxSize) {
            const firstKey = this.keys().next().value;
            if (firstKey)
                this.delete(firstKey);
        }
        return this;
    }
}
//# sourceMappingURL=lru.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/signature/recoverAddress.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/signature/recoverAddress.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   recoverAddress: () => (/* binding */ recoverAddress)
/* harmony export */ });
/* harmony import */ var _accounts_utils_publicKeyToAddress_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../accounts/utils/publicKeyToAddress.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/accounts/utils/publicKeyToAddress.js");
/* harmony import */ var _recoverPublicKey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./recoverPublicKey.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/signature/recoverPublicKey.js");


async function recoverAddress({ hash, signature, }) {
    return (0,_accounts_utils_publicKeyToAddress_js__WEBPACK_IMPORTED_MODULE_0__.publicKeyToAddress)(await (0,_recoverPublicKey_js__WEBPACK_IMPORTED_MODULE_1__.recoverPublicKey)({ hash, signature }));
}
//# sourceMappingURL=recoverAddress.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/signature/recoverPublicKey.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/signature/recoverPublicKey.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   recoverPublicKey: () => (/* binding */ recoverPublicKey)
/* harmony export */ });
/* harmony import */ var _data_isHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/isHex.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/data/isHex.js");
/* harmony import */ var _data_size_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/size.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/data/size.js");
/* harmony import */ var _encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../encoding/fromHex.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/encoding/fromHex.js");
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../encoding/toHex.js */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/_esm/utils/encoding/toHex.js");




async function recoverPublicKey({ hash, signature, }) {
    const hashHex = (0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_0__.isHex)(hash) ? hash : (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_3__.toHex)(hash);
    const { secp256k1 } = await __webpack_require__.e(/*! import() */ "node_modules_walletconnect_ethereum-provider_node_modules_viem_node_modules_noble_curves_esm_-c8482c").then(__webpack_require__.bind(__webpack_require__, /*! @noble/curves/secp256k1 */ "./node_modules/@walletconnect/ethereum-provider/node_modules/viem/node_modules/@noble/curves/esm/secp256k1.js"));
    const signature_ = (() => {
        // typeof signature: `Signature`
        if (typeof signature === 'object' && 'r' in signature && 's' in signature) {
            const { r, s, v, yParity } = signature;
            const yParityOrV = Number(yParity ?? v);
            const recoveryBit = toRecoveryBit(yParityOrV);
            return new secp256k1.Signature((0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.hexToBigInt)(r), (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.hexToBigInt)(s)).addRecoveryBit(recoveryBit);
        }
        // typeof signature: `Hex | ByteArray`
        const signatureHex = (0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_0__.isHex)(signature) ? signature : (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_3__.toHex)(signature);
        if ((0,_data_size_js__WEBPACK_IMPORTED_MODULE_1__.size)(signatureHex) !== 65)
            throw new Error('invalid signature length');
        const yParityOrV = (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.hexToNumber)(`0x${signatureHex.slice(130)}`);
        const recoveryBit = toRecoveryBit(yParityOrV);
        return secp256k1.Signature.fromCompact(signatureHex.substring(2, 130)).addRecoveryBit(recoveryBit);
    })();
    const publicKey = signature_
        .recoverPublicKey(hashHex.substring(2))
        .toHex(false);
    return `0x${publicKey}`;
}
function toRecoveryBit(yParityOrV) {
    if (yParityOrV === 0 || yParityOrV === 1)
        return yParityOrV;
    if (yParityOrV === 27)
        return 0;
    if (yParityOrV === 28)
        return 1;
    throw new Error('Invalid yParityOrV value');
}
//# sourceMappingURL=recoverPublicKey.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/events/dist/esm/events.js":
/*!***************************************************************!*\
  !*** ./node_modules/@walletconnect/events/dist/esm/events.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IEvents: () => (/* binding */ IEvents)
/* harmony export */ });
class IEvents {
}
//# sourceMappingURL=events.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/events/dist/esm/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@walletconnect/events/dist/esm/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IEvents: () => (/* reexport safe */ _events__WEBPACK_IMPORTED_MODULE_0__.IEvents)
/* harmony export */ });
/* harmony import */ var _events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./events */ "./node_modules/@walletconnect/events/dist/esm/events.js");

//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/heartbeat/dist/index.es.js":
/*!****************************************************************!*\
  !*** ./node_modules/@walletconnect/heartbeat/dist/index.es.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HEARTBEAT_EVENTS: () => (/* binding */ r),
/* harmony export */   HEARTBEAT_INTERVAL: () => (/* binding */ s),
/* harmony export */   HeartBeat: () => (/* binding */ i),
/* harmony export */   IHeartBeat: () => (/* binding */ n)
/* harmony export */ });
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ "./node_modules/events/events.js");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/time */ "./node_modules/@walletconnect/time/dist/cjs/index.js");
/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _walletconnect_events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/events */ "./node_modules/@walletconnect/events/dist/esm/index.js");
class n extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_2__.IEvents{constructor(e){super()}}const s=_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.FIVE_SECONDS,r={pulse:"heartbeat_pulse"};class i extends n{constructor(e){super(e),this.events=new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter,this.interval=s,this.interval=e?.interval||s}static async init(e){const t=new i(e);return await t.init(),t}async init(){await this.initialize()}stop(){clearInterval(this.intervalRef)}on(e,t){this.events.on(e,t)}once(e,t){this.events.once(e,t)}off(e,t){this.events.off(e,t)}removeListener(e,t){this.events.removeListener(e,t)}async initialize(){this.intervalRef=setInterval(()=>this.pulse(),(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.toMiliseconds)(this.interval))}pulse(){this.events.emit(r.pulse)}}
//# sourceMappingURL=index.es.js.map


/***/ }),

/***/ "./node_modules/@walletconnect/jsonrpc-http-connection/dist/index.es.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-http-connection/dist/index.es.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HttpConnection: () => (/* binding */ f),
/* harmony export */   "default": () => (/* binding */ f)
/* harmony export */ });
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ "./node_modules/events/events.js");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cross-fetch */ "./node_modules/@walletconnect/jsonrpc-http-connection/node_modules/cross-fetch/dist/browser-ponyfill.js");
/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(cross_fetch__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/safe-json */ "./node_modules/@walletconnect/jsonrpc-http-connection/node_modules/@walletconnect/safe-json/dist/esm/index.js");
/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js");
var P=Object.defineProperty,w=Object.defineProperties,E=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,L=Object.prototype.hasOwnProperty,O=Object.prototype.propertyIsEnumerable,l=(r,t,e)=>t in r?P(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e,p=(r,t)=>{for(var e in t||(t={}))L.call(t,e)&&l(r,e,t[e]);if(c)for(var e of c(t))O.call(t,e)&&l(r,e,t[e]);return r},v=(r,t)=>w(r,E(t));const j={Accept:"application/json","Content-Type":"application/json"},T="POST",d={headers:j,method:T},g=10;class f{constructor(t,e=!1){if(this.url=t,this.disableProviderPing=e,this.events=new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter,this.isAvailable=!1,this.registering=!1,!(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isHttpUrl)(t))throw new Error(`Provided URL is not compatible with HTTP connection: ${t}`);this.url=t,this.disableProviderPing=e}get connected(){return this.isAvailable}get connecting(){return this.registering}on(t,e){this.events.on(t,e)}once(t,e){this.events.once(t,e)}off(t,e){this.events.off(t,e)}removeListener(t,e){this.events.removeListener(t,e)}async open(t=this.url){await this.register(t)}async close(){if(!this.isAvailable)throw new Error("Connection already closed");this.onClose()}async send(t){this.isAvailable||await this.register();try{const e=(0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__.safeJsonStringify)(t),s=await(await cross_fetch__WEBPACK_IMPORTED_MODULE_1___default()(this.url,v(p({},d),{body:e}))).json();this.onPayload({data:s})}catch(e){this.onError(t.id,e)}}async register(t=this.url){if(!(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isHttpUrl)(t))throw new Error(`Provided URL is not compatible with HTTP connection: ${t}`);if(this.registering){const e=this.events.getMaxListeners();return(this.events.listenerCount("register_error")>=e||this.events.listenerCount("open")>=e)&&this.events.setMaxListeners(e+1),new Promise((s,i)=>{this.events.once("register_error",n=>{this.resetMaxListeners(),i(n)}),this.events.once("open",()=>{if(this.resetMaxListeners(),typeof this.isAvailable>"u")return i(new Error("HTTP connection is missing or invalid"));s()})})}this.url=t,this.registering=!0;try{if(!this.disableProviderPing){const e=(0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__.safeJsonStringify)({id:1,jsonrpc:"2.0",method:"test",params:[]});await cross_fetch__WEBPACK_IMPORTED_MODULE_1___default()(t,v(p({},d),{body:e}))}this.onOpen()}catch(e){const s=this.parseError(e);throw this.events.emit("register_error",s),this.onClose(),s}}onOpen(){this.isAvailable=!0,this.registering=!1,this.events.emit("open")}onClose(){this.isAvailable=!1,this.registering=!1,this.events.emit("close")}onPayload(t){if(typeof t.data>"u")return;const e=typeof t.data=="string"?(0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__.safeJsonParse)(t.data):t.data;this.events.emit("payload",e)}onError(t,e){const s=this.parseError(e),i=s.message||s.toString(),n=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcError)(t,i);this.events.emit("payload",n)}parseError(t,e=this.url){return (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.parseConnectionError)(t,e,"HTTP")}resetMaxListeners(){this.events.getMaxListeners()>g&&this.events.setMaxListeners(g)}}
//# sourceMappingURL=index.es.js.map


/***/ }),

/***/ "./node_modules/@walletconnect/jsonrpc-http-connection/node_modules/@walletconnect/safe-json/dist/esm/index.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-http-connection/node_modules/@walletconnect/safe-json/dist/esm/index.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   safeJsonParse: () => (/* binding */ safeJsonParse),
/* harmony export */   safeJsonStringify: () => (/* binding */ safeJsonStringify)
/* harmony export */ });
const JSONStringify = data => JSON.stringify(data, (_, value) => typeof value === "bigint" ? value.toString() + "n" : value);
const JSONParse = json => {
    const numbersBiggerThanMaxInt = /([\[:])?(\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\}\]])/g;
    const serializedData = json.replace(numbersBiggerThanMaxInt, "$1\"$2n\"$3");
    return JSON.parse(serializedData, (_, value) => {
        const isCustomFormatBigInt = typeof value === "string" && value.match(/^\d+n$/);
        if (isCustomFormatBigInt)
            return BigInt(value.substring(0, value.length - 1));
        return value;
    });
};
function safeJsonParse(value) {
    if (typeof value !== "string") {
        throw new Error(`Cannot safe json parse value of type ${typeof value}`);
    }
    try {
        return JSONParse(value);
    }
    catch (_a) {
        return value;
    }
}
function safeJsonStringify(value) {
    return typeof value === "string" ? value : JSONStringify(value) || "";
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/jsonrpc-http-connection/node_modules/cross-fetch/dist/browser-ponyfill.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-http-connection/node_modules/cross-fetch/dist/browser-ponyfill.js ***!
  \***************************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

// Save global object in a variable
var __global__ =
(typeof globalThis !== 'undefined' && globalThis) ||
(typeof self !== 'undefined' && self) ||
(typeof __webpack_require__.g !== 'undefined' && __webpack_require__.g);
// Create an object that extends from __global__ without the fetch function
var __globalThis__ = (function () {
function F() {
this.fetch = false;
this.DOMException = __global__.DOMException
}
F.prototype = __global__; // Needed for feature detection on whatwg-fetch's code
return new F();
})();
// Wraps whatwg-fetch with a function scope to hijack the global object
// "globalThis" that's going to be patched
(function(globalThis) {

var irrelevant = (function (exports) {

  /* eslint-disable no-prototype-builtins */
  var g =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof self !== 'undefined' && self) ||
    // eslint-disable-next-line no-undef
    (typeof __webpack_require__.g !== 'undefined' && __webpack_require__.g) ||
    {};

  var support = {
    searchParams: 'URLSearchParams' in g,
    iterable: 'Symbol' in g && 'iterator' in Symbol,
    blob:
      'FileReader' in g &&
      'Blob' in g &&
      (function() {
        try {
          new Blob();
          return true
        } catch (e) {
          return false
        }
      })(),
    formData: 'FormData' in g,
    arrayBuffer: 'ArrayBuffer' in g
  };

  function isDataView(obj) {
    return obj && DataView.prototype.isPrototypeOf(obj)
  }

  if (support.arrayBuffer) {
    var viewClasses = [
      '[object Int8Array]',
      '[object Uint8Array]',
      '[object Uint8ClampedArray]',
      '[object Int16Array]',
      '[object Uint16Array]',
      '[object Int32Array]',
      '[object Uint32Array]',
      '[object Float32Array]',
      '[object Float64Array]'
    ];

    var isArrayBufferView =
      ArrayBuffer.isView ||
      function(obj) {
        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1
      };
  }

  function normalizeName(name) {
    if (typeof name !== 'string') {
      name = String(name);
    }
    if (/[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(name) || name === '') {
      throw new TypeError('Invalid character in header field name: "' + name + '"')
    }
    return name.toLowerCase()
  }

  function normalizeValue(value) {
    if (typeof value !== 'string') {
      value = String(value);
    }
    return value
  }

  // Build a destructive iterator for the value list
  function iteratorFor(items) {
    var iterator = {
      next: function() {
        var value = items.shift();
        return {done: value === undefined, value: value}
      }
    };

    if (support.iterable) {
      iterator[Symbol.iterator] = function() {
        return iterator
      };
    }

    return iterator
  }

  function Headers(headers) {
    this.map = {};

    if (headers instanceof Headers) {
      headers.forEach(function(value, name) {
        this.append(name, value);
      }, this);
    } else if (Array.isArray(headers)) {
      headers.forEach(function(header) {
        if (header.length != 2) {
          throw new TypeError('Headers constructor: expected name/value pair to be length 2, found' + header.length)
        }
        this.append(header[0], header[1]);
      }, this);
    } else if (headers) {
      Object.getOwnPropertyNames(headers).forEach(function(name) {
        this.append(name, headers[name]);
      }, this);
    }
  }

  Headers.prototype.append = function(name, value) {
    name = normalizeName(name);
    value = normalizeValue(value);
    var oldValue = this.map[name];
    this.map[name] = oldValue ? oldValue + ', ' + value : value;
  };

  Headers.prototype['delete'] = function(name) {
    delete this.map[normalizeName(name)];
  };

  Headers.prototype.get = function(name) {
    name = normalizeName(name);
    return this.has(name) ? this.map[name] : null
  };

  Headers.prototype.has = function(name) {
    return this.map.hasOwnProperty(normalizeName(name))
  };

  Headers.prototype.set = function(name, value) {
    this.map[normalizeName(name)] = normalizeValue(value);
  };

  Headers.prototype.forEach = function(callback, thisArg) {
    for (var name in this.map) {
      if (this.map.hasOwnProperty(name)) {
        callback.call(thisArg, this.map[name], name, this);
      }
    }
  };

  Headers.prototype.keys = function() {
    var items = [];
    this.forEach(function(value, name) {
      items.push(name);
    });
    return iteratorFor(items)
  };

  Headers.prototype.values = function() {
    var items = [];
    this.forEach(function(value) {
      items.push(value);
    });
    return iteratorFor(items)
  };

  Headers.prototype.entries = function() {
    var items = [];
    this.forEach(function(value, name) {
      items.push([name, value]);
    });
    return iteratorFor(items)
  };

  if (support.iterable) {
    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;
  }

  function consumed(body) {
    if (body._noBody) return
    if (body.bodyUsed) {
      return Promise.reject(new TypeError('Already read'))
    }
    body.bodyUsed = true;
  }

  function fileReaderReady(reader) {
    return new Promise(function(resolve, reject) {
      reader.onload = function() {
        resolve(reader.result);
      };
      reader.onerror = function() {
        reject(reader.error);
      };
    })
  }

  function readBlobAsArrayBuffer(blob) {
    var reader = new FileReader();
    var promise = fileReaderReady(reader);
    reader.readAsArrayBuffer(blob);
    return promise
  }

  function readBlobAsText(blob) {
    var reader = new FileReader();
    var promise = fileReaderReady(reader);
    var match = /charset=([A-Za-z0-9_-]+)/.exec(blob.type);
    var encoding = match ? match[1] : 'utf-8';
    reader.readAsText(blob, encoding);
    return promise
  }

  function readArrayBufferAsText(buf) {
    var view = new Uint8Array(buf);
    var chars = new Array(view.length);

    for (var i = 0; i < view.length; i++) {
      chars[i] = String.fromCharCode(view[i]);
    }
    return chars.join('')
  }

  function bufferClone(buf) {
    if (buf.slice) {
      return buf.slice(0)
    } else {
      var view = new Uint8Array(buf.byteLength);
      view.set(new Uint8Array(buf));
      return view.buffer
    }
  }

  function Body() {
    this.bodyUsed = false;

    this._initBody = function(body) {
      /*
        fetch-mock wraps the Response object in an ES6 Proxy to
        provide useful test harness features such as flush. However, on
        ES5 browsers without fetch or Proxy support pollyfills must be used;
        the proxy-pollyfill is unable to proxy an attribute unless it exists
        on the object before the Proxy is created. This change ensures
        Response.bodyUsed exists on the instance, while maintaining the
        semantic of setting Request.bodyUsed in the constructor before
        _initBody is called.
      */
      // eslint-disable-next-line no-self-assign
      this.bodyUsed = this.bodyUsed;
      this._bodyInit = body;
      if (!body) {
        this._noBody = true;
        this._bodyText = '';
      } else if (typeof body === 'string') {
        this._bodyText = body;
      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
        this._bodyBlob = body;
      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
        this._bodyFormData = body;
      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
        this._bodyText = body.toString();
      } else if (support.arrayBuffer && support.blob && isDataView(body)) {
        this._bodyArrayBuffer = bufferClone(body.buffer);
        // IE 10-11 can't handle a DataView body.
        this._bodyInit = new Blob([this._bodyArrayBuffer]);
      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
        this._bodyArrayBuffer = bufferClone(body);
      } else {
        this._bodyText = body = Object.prototype.toString.call(body);
      }

      if (!this.headers.get('content-type')) {
        if (typeof body === 'string') {
          this.headers.set('content-type', 'text/plain;charset=UTF-8');
        } else if (this._bodyBlob && this._bodyBlob.type) {
          this.headers.set('content-type', this._bodyBlob.type);
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
        }
      }
    };

    if (support.blob) {
      this.blob = function() {
        var rejected = consumed(this);
        if (rejected) {
          return rejected
        }

        if (this._bodyBlob) {
          return Promise.resolve(this._bodyBlob)
        } else if (this._bodyArrayBuffer) {
          return Promise.resolve(new Blob([this._bodyArrayBuffer]))
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as blob')
        } else {
          return Promise.resolve(new Blob([this._bodyText]))
        }
      };
    }

    this.arrayBuffer = function() {
      if (this._bodyArrayBuffer) {
        var isConsumed = consumed(this);
        if (isConsumed) {
          return isConsumed
        } else if (ArrayBuffer.isView(this._bodyArrayBuffer)) {
          return Promise.resolve(
            this._bodyArrayBuffer.buffer.slice(
              this._bodyArrayBuffer.byteOffset,
              this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength
            )
          )
        } else {
          return Promise.resolve(this._bodyArrayBuffer)
        }
      } else if (support.blob) {
        return this.blob().then(readBlobAsArrayBuffer)
      } else {
        throw new Error('could not read as ArrayBuffer')
      }
    };

    this.text = function() {
      var rejected = consumed(this);
      if (rejected) {
        return rejected
      }

      if (this._bodyBlob) {
        return readBlobAsText(this._bodyBlob)
      } else if (this._bodyArrayBuffer) {
        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))
      } else if (this._bodyFormData) {
        throw new Error('could not read FormData body as text')
      } else {
        return Promise.resolve(this._bodyText)
      }
    };

    if (support.formData) {
      this.formData = function() {
        return this.text().then(decode)
      };
    }

    this.json = function() {
      return this.text().then(JSON.parse)
    };

    return this
  }

  // HTTP methods whose capitalization should be normalized
  var methods = ['CONNECT', 'DELETE', 'GET', 'HEAD', 'OPTIONS', 'PATCH', 'POST', 'PUT', 'TRACE'];

  function normalizeMethod(method) {
    var upcased = method.toUpperCase();
    return methods.indexOf(upcased) > -1 ? upcased : method
  }

  function Request(input, options) {
    if (!(this instanceof Request)) {
      throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.')
    }

    options = options || {};
    var body = options.body;

    if (input instanceof Request) {
      if (input.bodyUsed) {
        throw new TypeError('Already read')
      }
      this.url = input.url;
      this.credentials = input.credentials;
      if (!options.headers) {
        this.headers = new Headers(input.headers);
      }
      this.method = input.method;
      this.mode = input.mode;
      this.signal = input.signal;
      if (!body && input._bodyInit != null) {
        body = input._bodyInit;
        input.bodyUsed = true;
      }
    } else {
      this.url = String(input);
    }

    this.credentials = options.credentials || this.credentials || 'same-origin';
    if (options.headers || !this.headers) {
      this.headers = new Headers(options.headers);
    }
    this.method = normalizeMethod(options.method || this.method || 'GET');
    this.mode = options.mode || this.mode || null;
    this.signal = options.signal || this.signal || (function () {
      if ('AbortController' in g) {
        var ctrl = new AbortController();
        return ctrl.signal;
      }
    }());
    this.referrer = null;

    if ((this.method === 'GET' || this.method === 'HEAD') && body) {
      throw new TypeError('Body not allowed for GET or HEAD requests')
    }
    this._initBody(body);

    if (this.method === 'GET' || this.method === 'HEAD') {
      if (options.cache === 'no-store' || options.cache === 'no-cache') {
        // Search for a '_' parameter in the query string
        var reParamSearch = /([?&])_=[^&]*/;
        if (reParamSearch.test(this.url)) {
          // If it already exists then set the value with the current time
          this.url = this.url.replace(reParamSearch, '$1_=' + new Date().getTime());
        } else {
          // Otherwise add a new '_' parameter to the end with the current time
          var reQueryString = /\?/;
          this.url += (reQueryString.test(this.url) ? '&' : '?') + '_=' + new Date().getTime();
        }
      }
    }
  }

  Request.prototype.clone = function() {
    return new Request(this, {body: this._bodyInit})
  };

  function decode(body) {
    var form = new FormData();
    body
      .trim()
      .split('&')
      .forEach(function(bytes) {
        if (bytes) {
          var split = bytes.split('=');
          var name = split.shift().replace(/\+/g, ' ');
          var value = split.join('=').replace(/\+/g, ' ');
          form.append(decodeURIComponent(name), decodeURIComponent(value));
        }
      });
    return form
  }

  function parseHeaders(rawHeaders) {
    var headers = new Headers();
    // Replace instances of \r\n and \n followed by at least one space or horizontal tab with a space
    // https://tools.ietf.org/html/rfc7230#section-3.2
    var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, ' ');
    // Avoiding split via regex to work around a common IE11 bug with the core-js 3.6.0 regex polyfill
    // https://github.com/github/fetch/issues/748
    // https://github.com/zloirock/core-js/issues/751
    preProcessedHeaders
      .split('\r')
      .map(function(header) {
        return header.indexOf('\n') === 0 ? header.substr(1, header.length) : header
      })
      .forEach(function(line) {
        var parts = line.split(':');
        var key = parts.shift().trim();
        if (key) {
          var value = parts.join(':').trim();
          try {
            headers.append(key, value);
          } catch (error) {
            console.warn('Response ' + error.message);
          }
        }
      });
    return headers
  }

  Body.call(Request.prototype);

  function Response(bodyInit, options) {
    if (!(this instanceof Response)) {
      throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.')
    }
    if (!options) {
      options = {};
    }

    this.type = 'default';
    this.status = options.status === undefined ? 200 : options.status;
    if (this.status < 200 || this.status > 599) {
      throw new RangeError("Failed to construct 'Response': The status provided (0) is outside the range [200, 599].")
    }
    this.ok = this.status >= 200 && this.status < 300;
    this.statusText = options.statusText === undefined ? '' : '' + options.statusText;
    this.headers = new Headers(options.headers);
    this.url = options.url || '';
    this._initBody(bodyInit);
  }

  Body.call(Response.prototype);

  Response.prototype.clone = function() {
    return new Response(this._bodyInit, {
      status: this.status,
      statusText: this.statusText,
      headers: new Headers(this.headers),
      url: this.url
    })
  };

  Response.error = function() {
    var response = new Response(null, {status: 200, statusText: ''});
    response.ok = false;
    response.status = 0;
    response.type = 'error';
    return response
  };

  var redirectStatuses = [301, 302, 303, 307, 308];

  Response.redirect = function(url, status) {
    if (redirectStatuses.indexOf(status) === -1) {
      throw new RangeError('Invalid status code')
    }

    return new Response(null, {status: status, headers: {location: url}})
  };

  exports.DOMException = g.DOMException;
  try {
    new exports.DOMException();
  } catch (err) {
    exports.DOMException = function(message, name) {
      this.message = message;
      this.name = name;
      var error = Error(message);
      this.stack = error.stack;
    };
    exports.DOMException.prototype = Object.create(Error.prototype);
    exports.DOMException.prototype.constructor = exports.DOMException;
  }

  function fetch(input, init) {
    return new Promise(function(resolve, reject) {
      var request = new Request(input, init);

      if (request.signal && request.signal.aborted) {
        return reject(new exports.DOMException('Aborted', 'AbortError'))
      }

      var xhr = new XMLHttpRequest();

      function abortXhr() {
        xhr.abort();
      }

      xhr.onload = function() {
        var options = {
          statusText: xhr.statusText,
          headers: parseHeaders(xhr.getAllResponseHeaders() || '')
        };
        // This check if specifically for when a user fetches a file locally from the file system
        // Only if the status is out of a normal range
        if (request.url.indexOf('file://') === 0 && (xhr.status < 200 || xhr.status > 599)) {
          options.status = 200;
        } else {
          options.status = xhr.status;
        }
        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
        var body = 'response' in xhr ? xhr.response : xhr.responseText;
        setTimeout(function() {
          resolve(new Response(body, options));
        }, 0);
      };

      xhr.onerror = function() {
        setTimeout(function() {
          reject(new TypeError('Network request failed'));
        }, 0);
      };

      xhr.ontimeout = function() {
        setTimeout(function() {
          reject(new TypeError('Network request timed out'));
        }, 0);
      };

      xhr.onabort = function() {
        setTimeout(function() {
          reject(new exports.DOMException('Aborted', 'AbortError'));
        }, 0);
      };

      function fixUrl(url) {
        try {
          return url === '' && g.location.href ? g.location.href : url
        } catch (e) {
          return url
        }
      }

      xhr.open(request.method, fixUrl(request.url), true);

      if (request.credentials === 'include') {
        xhr.withCredentials = true;
      } else if (request.credentials === 'omit') {
        xhr.withCredentials = false;
      }

      if ('responseType' in xhr) {
        if (support.blob) {
          xhr.responseType = 'blob';
        } else if (
          support.arrayBuffer
        ) {
          xhr.responseType = 'arraybuffer';
        }
      }

      if (init && typeof init.headers === 'object' && !(init.headers instanceof Headers || (g.Headers && init.headers instanceof g.Headers))) {
        var names = [];
        Object.getOwnPropertyNames(init.headers).forEach(function(name) {
          names.push(normalizeName(name));
          xhr.setRequestHeader(name, normalizeValue(init.headers[name]));
        });
        request.headers.forEach(function(value, name) {
          if (names.indexOf(name) === -1) {
            xhr.setRequestHeader(name, value);
          }
        });
      } else {
        request.headers.forEach(function(value, name) {
          xhr.setRequestHeader(name, value);
        });
      }

      if (request.signal) {
        request.signal.addEventListener('abort', abortXhr);

        xhr.onreadystatechange = function() {
          // DONE (success or failure)
          if (xhr.readyState === 4) {
            request.signal.removeEventListener('abort', abortXhr);
          }
        };
      }

      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
    })
  }

  fetch.polyfill = true;

  if (!g.fetch) {
    g.fetch = fetch;
    g.Headers = Headers;
    g.Request = Request;
    g.Response = Response;
  }

  exports.Headers = Headers;
  exports.Request = Request;
  exports.Response = Response;
  exports.fetch = fetch;

  Object.defineProperty(exports, '__esModule', { value: true });

  return exports;

})({});
})(__globalThis__);
// This is a ponyfill, so...
__globalThis__.fetch.ponyfill = true;
delete __globalThis__.fetch.polyfill;
// Choose between native implementation (__global__) or custom implementation (__globalThis__)
var ctx = __global__.fetch ? __global__ : __globalThis__;
exports = ctx.fetch // To enable: import fetch from 'cross-fetch'
exports["default"] = ctx.fetch // For TypeScript consumers without esModuleInterop.
exports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'
exports.Headers = ctx.Headers
exports.Request = ctx.Request
exports.Response = ctx.Response
module.exports = exports


/***/ }),

/***/ "./node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   JsonRpcProvider: () => (/* binding */ o),
/* harmony export */   "default": () => (/* binding */ o)
/* harmony export */ });
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ "./node_modules/events/events.js");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js");
class o extends _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.IJsonRpcProvider{constructor(t){super(t),this.events=new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter,this.hasRegisteredEventListeners=!1,this.connection=this.setConnection(t),this.connection.connected&&this.registerEventListeners()}async connect(t=this.connection){await this.open(t)}async disconnect(){await this.close()}on(t,e){this.events.on(t,e)}once(t,e){this.events.once(t,e)}off(t,e){this.events.off(t,e)}removeListener(t,e){this.events.removeListener(t,e)}async request(t,e){return this.requestStrict((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.formatJsonRpcRequest)(t.method,t.params||[],t.id||(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.getBigIntRpcId)().toString()),e)}async requestStrict(t,e){return new Promise(async(i,s)=>{if(!this.connection.connected)try{await this.open()}catch(n){s(n)}this.events.on(`${t.id}`,n=>{(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.isJsonRpcError)(n)?s(n.error):i(n.result)});try{await this.connection.send(t,e)}catch(n){s(n)}})}setConnection(t=this.connection){return t}onPayload(t){this.events.emit("payload",t),(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.isJsonRpcResponse)(t)?this.events.emit(`${t.id}`,t):this.events.emit("message",{type:t.method,data:t.params})}onClose(t){t&&t.code===3e3&&this.events.emit("error",new Error(`WebSocket connection closed abnormally with code: ${t.code} ${t.reason?`(${t.reason})`:""}`)),this.events.emit("disconnect")}async open(t=this.connection){this.connection===t&&this.connection.connected||(this.connection.connected&&this.close(),typeof t=="string"&&(await this.connection.open(t),t=this.connection),this.connection=this.setConnection(t),await this.connection.open(),this.registerEventListeners(),this.events.emit("connect"))}async close(){await this.connection.close()}registerEventListeners(){this.hasRegisteredEventListeners||(this.connection.on("payload",t=>this.onPayload(t)),this.connection.on("close",t=>this.onClose(t)),this.connection.on("error",t=>this.events.emit("error",t)),this.connection.on("register_error",t=>this.onClose()),this.hasRegisteredEventListeners=!0)}}
//# sourceMappingURL=index.es.js.map


/***/ }),

/***/ "./node_modules/@walletconnect/jsonrpc-types/dist/index.es.js":
/*!********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-types/dist/index.es.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IBaseJsonRpcProvider: () => (/* binding */ n),
/* harmony export */   IEvents: () => (/* binding */ e),
/* harmony export */   IJsonRpcConnection: () => (/* binding */ o),
/* harmony export */   IJsonRpcProvider: () => (/* binding */ r)
/* harmony export */ });
class e{}class o extends e{constructor(c){super()}}class n extends e{constructor(){super()}}class r extends n{constructor(c){super()}}
//# sourceMappingURL=index.es.js.map


/***/ }),

/***/ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DEFAULT_ERROR: () => (/* binding */ DEFAULT_ERROR),
/* harmony export */   INTERNAL_ERROR: () => (/* binding */ INTERNAL_ERROR),
/* harmony export */   INVALID_PARAMS: () => (/* binding */ INVALID_PARAMS),
/* harmony export */   INVALID_REQUEST: () => (/* binding */ INVALID_REQUEST),
/* harmony export */   METHOD_NOT_FOUND: () => (/* binding */ METHOD_NOT_FOUND),
/* harmony export */   PARSE_ERROR: () => (/* binding */ PARSE_ERROR),
/* harmony export */   RESERVED_ERROR_CODES: () => (/* binding */ RESERVED_ERROR_CODES),
/* harmony export */   SERVER_ERROR: () => (/* binding */ SERVER_ERROR),
/* harmony export */   SERVER_ERROR_CODE_RANGE: () => (/* binding */ SERVER_ERROR_CODE_RANGE),
/* harmony export */   STANDARD_ERROR_MAP: () => (/* binding */ STANDARD_ERROR_MAP)
/* harmony export */ });
const PARSE_ERROR = "PARSE_ERROR";
const INVALID_REQUEST = "INVALID_REQUEST";
const METHOD_NOT_FOUND = "METHOD_NOT_FOUND";
const INVALID_PARAMS = "INVALID_PARAMS";
const INTERNAL_ERROR = "INTERNAL_ERROR";
const SERVER_ERROR = "SERVER_ERROR";
const RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];
const SERVER_ERROR_CODE_RANGE = [-32000, -32099];
const STANDARD_ERROR_MAP = {
    [PARSE_ERROR]: { code: -32700, message: "Parse error" },
    [INVALID_REQUEST]: { code: -32600, message: "Invalid Request" },
    [METHOD_NOT_FOUND]: { code: -32601, message: "Method not found" },
    [INVALID_PARAMS]: { code: -32602, message: "Invalid params" },
    [INTERNAL_ERROR]: { code: -32603, message: "Internal error" },
    [SERVER_ERROR]: { code: -32000, message: "Server error" },
};
const DEFAULT_ERROR = SERVER_ERROR;
//# sourceMappingURL=constants.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isNodeJs: () => (/* binding */ isNodeJs)
/* harmony export */ });
/* harmony import */ var _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/environment */ "./node_modules/@walletconnect/environment/dist/cjs/index.js");
/* harmony import */ var _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__) if(["default","isNodeJs"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);

const isNodeJs = _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__.isNode;

//# sourceMappingURL=env.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getError: () => (/* binding */ getError),
/* harmony export */   getErrorByCode: () => (/* binding */ getErrorByCode),
/* harmony export */   isReservedErrorCode: () => (/* binding */ isReservedErrorCode),
/* harmony export */   isServerErrorCode: () => (/* binding */ isServerErrorCode),
/* harmony export */   isValidErrorCode: () => (/* binding */ isValidErrorCode),
/* harmony export */   parseConnectionError: () => (/* binding */ parseConnectionError),
/* harmony export */   validateJsonRpcError: () => (/* binding */ validateJsonRpcError)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js");

function isServerErrorCode(code) {
    return code <= _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR_CODE_RANGE[0] && code >= _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR_CODE_RANGE[1];
}
function isReservedErrorCode(code) {
    return _constants__WEBPACK_IMPORTED_MODULE_0__.RESERVED_ERROR_CODES.includes(code);
}
function isValidErrorCode(code) {
    return typeof code === "number";
}
function getError(type) {
    if (!Object.keys(_constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP).includes(type)) {
        return _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR];
    }
    return _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[type];
}
function getErrorByCode(code) {
    const match = Object.values(_constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP).find(e => e.code === code);
    if (!match) {
        return _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR];
    }
    return match;
}
function validateJsonRpcError(response) {
    if (typeof response.error.code === "undefined") {
        return { valid: false, error: "Missing code for JSON-RPC error" };
    }
    if (typeof response.error.message === "undefined") {
        return { valid: false, error: "Missing message for JSON-RPC error" };
    }
    if (!isValidErrorCode(response.error.code)) {
        return {
            valid: false,
            error: `Invalid error code type for JSON-RPC: ${response.error.code}`,
        };
    }
    if (isReservedErrorCode(response.error.code)) {
        const error = getErrorByCode(response.error.code);
        if (error.message !== _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR].message &&
            response.error.message === error.message) {
            return {
                valid: false,
                error: `Invalid error code message for JSON-RPC: ${response.error.code}`,
            };
        }
    }
    return { valid: true };
}
function parseConnectionError(e, url, type) {
    return e.message.includes("getaddrinfo ENOTFOUND") || e.message.includes("connect ECONNREFUSED")
        ? new Error(`Unavailable ${type} RPC url at ${url}`)
        : e;
}
//# sourceMappingURL=error.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   formatErrorMessage: () => (/* binding */ formatErrorMessage),
/* harmony export */   formatJsonRpcError: () => (/* binding */ formatJsonRpcError),
/* harmony export */   formatJsonRpcRequest: () => (/* binding */ formatJsonRpcRequest),
/* harmony export */   formatJsonRpcResult: () => (/* binding */ formatJsonRpcResult),
/* harmony export */   getBigIntRpcId: () => (/* binding */ getBigIntRpcId),
/* harmony export */   payloadId: () => (/* binding */ payloadId)
/* harmony export */ });
/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error */ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js");


function payloadId(entropy = 3) {
    const date = Date.now() * Math.pow(10, entropy);
    const extra = Math.floor(Math.random() * Math.pow(10, entropy));
    return date + extra;
}
function getBigIntRpcId(entropy = 6) {
    return BigInt(payloadId(entropy));
}
function formatJsonRpcRequest(method, params, id) {
    return {
        id: id || payloadId(),
        jsonrpc: "2.0",
        method,
        params,
    };
}
function formatJsonRpcResult(id, result) {
    return {
        id,
        jsonrpc: "2.0",
        result,
    };
}
function formatJsonRpcError(id, error, data) {
    return {
        id,
        jsonrpc: "2.0",
        error: formatErrorMessage(error, data),
    };
}
function formatErrorMessage(error, data) {
    if (typeof error === "undefined") {
        return (0,_error__WEBPACK_IMPORTED_MODULE_0__.getError)(_constants__WEBPACK_IMPORTED_MODULE_1__.INTERNAL_ERROR);
    }
    if (typeof error === "string") {
        error = Object.assign(Object.assign({}, (0,_error__WEBPACK_IMPORTED_MODULE_0__.getError)(_constants__WEBPACK_IMPORTED_MODULE_1__.SERVER_ERROR)), { message: error });
    }
    if (typeof data !== "undefined") {
        error.data = data;
    }
    if ((0,_error__WEBPACK_IMPORTED_MODULE_0__.isReservedErrorCode)(error.code)) {
        error = (0,_error__WEBPACK_IMPORTED_MODULE_0__.getErrorByCode)(error.code);
    }
    return error;
}
//# sourceMappingURL=format.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DEFAULT_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR),
/* harmony export */   IBaseJsonRpcProvider: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IBaseJsonRpcProvider),
/* harmony export */   IEvents: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IEvents),
/* harmony export */   IJsonRpcConnection: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IJsonRpcConnection),
/* harmony export */   IJsonRpcProvider: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IJsonRpcProvider),
/* harmony export */   INTERNAL_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.INTERNAL_ERROR),
/* harmony export */   INVALID_PARAMS: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.INVALID_PARAMS),
/* harmony export */   INVALID_REQUEST: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.INVALID_REQUEST),
/* harmony export */   METHOD_NOT_FOUND: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.METHOD_NOT_FOUND),
/* harmony export */   PARSE_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.PARSE_ERROR),
/* harmony export */   RESERVED_ERROR_CODES: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.RESERVED_ERROR_CODES),
/* harmony export */   SERVER_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR),
/* harmony export */   SERVER_ERROR_CODE_RANGE: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR_CODE_RANGE),
/* harmony export */   STANDARD_ERROR_MAP: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP),
/* harmony export */   formatErrorMessage: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatErrorMessage),
/* harmony export */   formatJsonRpcError: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcError),
/* harmony export */   formatJsonRpcRequest: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest),
/* harmony export */   formatJsonRpcResult: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcResult),
/* harmony export */   getBigIntRpcId: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.getBigIntRpcId),
/* harmony export */   getError: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.getError),
/* harmony export */   getErrorByCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.getErrorByCode),
/* harmony export */   isHttpUrl: () => (/* reexport safe */ _url__WEBPACK_IMPORTED_MODULE_6__.isHttpUrl),
/* harmony export */   isJsonRpcError: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcError),
/* harmony export */   isJsonRpcPayload: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcPayload),
/* harmony export */   isJsonRpcRequest: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcRequest),
/* harmony export */   isJsonRpcResponse: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcResponse),
/* harmony export */   isJsonRpcResult: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcResult),
/* harmony export */   isJsonRpcValidationInvalid: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcValidationInvalid),
/* harmony export */   isLocalhostUrl: () => (/* reexport safe */ _url__WEBPACK_IMPORTED_MODULE_6__.isLocalhostUrl),
/* harmony export */   isReservedErrorCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.isReservedErrorCode),
/* harmony export */   isServerErrorCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.isServerErrorCode),
/* harmony export */   isValidDefaultRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidDefaultRoute),
/* harmony export */   isValidErrorCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.isValidErrorCode),
/* harmony export */   isValidLeadingWildcardRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidLeadingWildcardRoute),
/* harmony export */   isValidRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidRoute),
/* harmony export */   isValidTrailingWildcardRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidTrailingWildcardRoute),
/* harmony export */   isValidWildcardRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidWildcardRoute),
/* harmony export */   isWsUrl: () => (/* reexport safe */ _url__WEBPACK_IMPORTED_MODULE_6__.isWsUrl),
/* harmony export */   parseConnectionError: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.parseConnectionError),
/* harmony export */   payloadId: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.payloadId),
/* harmony export */   validateJsonRpcError: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.validateJsonRpcError)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js");
/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error */ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js");
/* harmony import */ var _env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./env */ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js");
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _env__WEBPACK_IMPORTED_MODULE_2__) if(["default","DEFAULT_ERROR","INTERNAL_ERROR","INVALID_PARAMS","INVALID_REQUEST","METHOD_NOT_FOUND","PARSE_ERROR","RESERVED_ERROR_CODES","SERVER_ERROR","SERVER_ERROR_CODE_RANGE","STANDARD_ERROR_MAP","getError","getErrorByCode","isReservedErrorCode","isServerErrorCode","isValidErrorCode","parseConnectionError","validateJsonRpcError"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _env__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _format__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./format */ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js");
/* harmony import */ var _routing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./routing */ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types */ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js");
/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./url */ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js");
/* harmony import */ var _validators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./validators */ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js");








//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isValidDefaultRoute: () => (/* binding */ isValidDefaultRoute),
/* harmony export */   isValidLeadingWildcardRoute: () => (/* binding */ isValidLeadingWildcardRoute),
/* harmony export */   isValidRoute: () => (/* binding */ isValidRoute),
/* harmony export */   isValidTrailingWildcardRoute: () => (/* binding */ isValidTrailingWildcardRoute),
/* harmony export */   isValidWildcardRoute: () => (/* binding */ isValidWildcardRoute)
/* harmony export */ });
function isValidRoute(route) {
    if (route.includes("*")) {
        return isValidWildcardRoute(route);
    }
    if (/\W/g.test(route)) {
        return false;
    }
    return true;
}
function isValidDefaultRoute(route) {
    return route === "*";
}
function isValidWildcardRoute(route) {
    if (isValidDefaultRoute(route)) {
        return true;
    }
    if (!route.includes("*")) {
        return false;
    }
    if (route.split("*").length !== 2) {
        return false;
    }
    if (route.split("*").filter(x => x.trim() === "").length !== 1) {
        return false;
    }
    return true;
}
function isValidLeadingWildcardRoute(route) {
    return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split("*")[0].trim();
}
function isValidTrailingWildcardRoute(route) {
    return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split("*")[1].trim();
}
//# sourceMappingURL=routing.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IBaseJsonRpcProvider: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IBaseJsonRpcProvider),
/* harmony export */   IEvents: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IEvents),
/* harmony export */   IJsonRpcConnection: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IJsonRpcConnection),
/* harmony export */   IJsonRpcProvider: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IJsonRpcProvider)
/* harmony export */ });
/* harmony import */ var _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/jsonrpc-types */ "./node_modules/@walletconnect/jsonrpc-types/dist/index.es.js");

//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isHttpUrl: () => (/* binding */ isHttpUrl),
/* harmony export */   isLocalhostUrl: () => (/* binding */ isLocalhostUrl),
/* harmony export */   isWsUrl: () => (/* binding */ isWsUrl)
/* harmony export */ });
const HTTP_REGEX = "^https?:";
const WS_REGEX = "^wss?:";
function getUrlProtocol(url) {
    const matches = url.match(new RegExp(/^\w+:/, "gi"));
    if (!matches || !matches.length)
        return;
    return matches[0];
}
function matchRegexProtocol(url, regex) {
    const protocol = getUrlProtocol(url);
    if (typeof protocol === "undefined")
        return false;
    return new RegExp(regex).test(protocol);
}
function isHttpUrl(url) {
    return matchRegexProtocol(url, HTTP_REGEX);
}
function isWsUrl(url) {
    return matchRegexProtocol(url, WS_REGEX);
}
function isLocalhostUrl(url) {
    return new RegExp("wss?://localhost(:d{2,5})?").test(url);
}
//# sourceMappingURL=url.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isJsonRpcError: () => (/* binding */ isJsonRpcError),
/* harmony export */   isJsonRpcPayload: () => (/* binding */ isJsonRpcPayload),
/* harmony export */   isJsonRpcRequest: () => (/* binding */ isJsonRpcRequest),
/* harmony export */   isJsonRpcResponse: () => (/* binding */ isJsonRpcResponse),
/* harmony export */   isJsonRpcResult: () => (/* binding */ isJsonRpcResult),
/* harmony export */   isJsonRpcValidationInvalid: () => (/* binding */ isJsonRpcValidationInvalid)
/* harmony export */ });
function isJsonRpcPayload(payload) {
    return (typeof payload === "object" &&
        "id" in payload &&
        "jsonrpc" in payload &&
        payload.jsonrpc === "2.0");
}
function isJsonRpcRequest(payload) {
    return isJsonRpcPayload(payload) && "method" in payload;
}
function isJsonRpcResponse(payload) {
    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));
}
function isJsonRpcResult(payload) {
    return "result" in payload;
}
function isJsonRpcError(payload) {
    return "error" in payload;
}
function isJsonRpcValidationInvalid(validation) {
    return "error" in validation && validation.valid === false;
}
//# sourceMappingURL=validators.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WsConnection: () => (/* binding */ f),
/* harmony export */   "default": () => (/* binding */ f)
/* harmony export */ });
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ "./node_modules/events/events.js");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/safe-json */ "./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/@walletconnect/safe-json/dist/esm/index.js");
/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js");
const v=()=>typeof WebSocket<"u"?WebSocket:typeof __webpack_require__.g<"u"&&typeof __webpack_require__.g.WebSocket<"u"?__webpack_require__.g.WebSocket:typeof window<"u"&&typeof window.WebSocket<"u"?window.WebSocket:typeof self<"u"&&typeof self.WebSocket<"u"?self.WebSocket:__webpack_require__(/*! ws */ "./node_modules/ws/browser.js"),w=()=>typeof WebSocket<"u"||typeof __webpack_require__.g<"u"&&typeof __webpack_require__.g.WebSocket<"u"||typeof window<"u"&&typeof window.WebSocket<"u"||typeof self<"u"&&typeof self.WebSocket<"u",d=r=>r.split("?")[0],h=10,b=v();class f{constructor(e){if(this.url=e,this.events=new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter,this.registering=!1,!(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isWsUrl)(e))throw new Error(`Provided URL is not compatible with WebSocket connection: ${e}`);this.url=e}get connected(){return typeof this.socket<"u"}get connecting(){return this.registering}on(e,t){this.events.on(e,t)}once(e,t){this.events.once(e,t)}off(e,t){this.events.off(e,t)}removeListener(e,t){this.events.removeListener(e,t)}async open(e=this.url){await this.register(e)}async close(){return new Promise((e,t)=>{if(typeof this.socket>"u"){t(new Error("Connection already closed"));return}this.socket.onclose=n=>{this.onClose(n),e()},this.socket.close()})}async send(e){typeof this.socket>"u"&&(this.socket=await this.register());try{this.socket.send((0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonStringify)(e))}catch(t){this.onError(e.id,t)}}register(e=this.url){if(!(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isWsUrl)(e))throw new Error(`Provided URL is not compatible with WebSocket connection: ${e}`);if(this.registering){const t=this.events.getMaxListeners();return(this.events.listenerCount("register_error")>=t||this.events.listenerCount("open")>=t)&&this.events.setMaxListeners(t+1),new Promise((n,s)=>{this.events.once("register_error",o=>{this.resetMaxListeners(),s(o)}),this.events.once("open",()=>{if(this.resetMaxListeners(),typeof this.socket>"u")return s(new Error("WebSocket connection is missing or invalid"));n(this.socket)})})}return this.url=e,this.registering=!0,new Promise((t,n)=>{const s=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isReactNative)()?void 0:{rejectUnauthorized:!(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isLocalhostUrl)(e)},o=new b(e,[],s);w()?o.onerror=i=>{const a=i;n(this.emitError(a.error))}:o.on("error",i=>{n(this.emitError(i))}),o.onopen=()=>{this.onOpen(o),t(o)}})}onOpen(e){e.onmessage=t=>this.onPayload(t),e.onclose=t=>this.onClose(t),this.socket=e,this.registering=!1,this.events.emit("open")}onClose(e){this.socket=void 0,this.registering=!1,this.events.emit("close",e)}onPayload(e){if(typeof e.data>"u")return;const t=typeof e.data=="string"?(0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonParse)(e.data):e.data;this.events.emit("payload",t)}onError(e,t){const n=this.parseError(t),s=n.message||n.toString(),o=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.formatJsonRpcError)(e,s);this.events.emit("payload",o)}parseError(e,t=this.url){return (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.parseConnectionError)(e,d(t),"WS")}resetMaxListeners(){this.events.getMaxListeners()>h&&this.events.setMaxListeners(h)}emitError(e){const t=this.parseError(new Error(e?.message||`WebSocket connection failed for host: ${d(this.url)}`));return this.events.emit("register_error",t),t}}
//# sourceMappingURL=index.es.js.map


/***/ }),

/***/ "./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/@walletconnect/safe-json/dist/esm/index.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/@walletconnect/safe-json/dist/esm/index.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   safeJsonParse: () => (/* binding */ safeJsonParse),
/* harmony export */   safeJsonStringify: () => (/* binding */ safeJsonStringify)
/* harmony export */ });
const JSONStringify = data => JSON.stringify(data, (_, value) => typeof value === "bigint" ? value.toString() + "n" : value);
const JSONParse = json => {
    const numbersBiggerThanMaxInt = /([\[:])?(\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\}\]])/g;
    const serializedData = json.replace(numbersBiggerThanMaxInt, "$1\"$2n\"$3");
    return JSON.parse(serializedData, (_, value) => {
        const isCustomFormatBigInt = typeof value === "string" && value.match(/^\d+n$/);
        if (isCustomFormatBigInt)
            return BigInt(value.substring(0, value.length - 1));
        return value;
    });
};
function safeJsonParse(value) {
    if (typeof value !== "string") {
        throw new Error(`Cannot safe json parse value of type ${typeof value}`);
    }
    try {
        return JSONParse(value);
    }
    catch (_a) {
        return value;
    }
}
function safeJsonStringify(value) {
    return typeof value === "string" ? value : JSONStringify(value) || "";
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/keyvaluestorage/dist/index.es.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@walletconnect/keyvaluestorage/dist/index.es.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   KeyValueStorage: () => (/* binding */ h),
/* harmony export */   "default": () => (/* binding */ h)
/* harmony export */ });
/* harmony import */ var unstorage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! unstorage */ "./node_modules/unstorage/dist/index.mjs");
/* harmony import */ var idb_keyval__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! idb-keyval */ "./node_modules/idb-keyval/dist/index.js");
/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/safe-json */ "./node_modules/@walletconnect/keyvaluestorage/node_modules/@walletconnect/safe-json/dist/esm/index.js");
function C(i){return i}const x="idb-keyval";var z=(i={})=>{const t=i.base&&i.base.length>0?`${i.base}:`:"",e=s=>t+s;let n;return i.dbName&&i.storeName&&(n=(0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.createStore)(i.dbName,i.storeName)),{name:x,options:i,async hasItem(s){return!(typeof await (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.get)(e(s),n)>"u")},async getItem(s){return await (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.get)(e(s),n)??null},setItem(s,a){return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.set)(e(s),a,n)},removeItem(s){return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.del)(e(s),n)},getKeys(){return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.keys)(n)},clear(){return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.clear)(n)}}};const D="WALLET_CONNECT_V2_INDEXED_DB",E="keyvaluestorage";class _{constructor(){this.indexedDb=(0,unstorage__WEBPACK_IMPORTED_MODULE_0__.createStorage)({driver:z({dbName:D,storeName:E})})}async getKeys(){return this.indexedDb.getKeys()}async getEntries(){return(await this.indexedDb.getItems(await this.indexedDb.getKeys())).map(t=>[t.key,t.value])}async getItem(t){const e=await this.indexedDb.getItem(t);if(e!==null)return e}async setItem(t,e){await this.indexedDb.setItem(t,(0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__.safeJsonStringify)(e))}async removeItem(t){await this.indexedDb.removeItem(t)}}var l=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof __webpack_require__.g<"u"?__webpack_require__.g:typeof self<"u"?self:{},c={exports:{}};(function(){let i;function t(){}i=t,i.prototype.getItem=function(e){return this.hasOwnProperty(e)?String(this[e]):null},i.prototype.setItem=function(e,n){this[e]=String(n)},i.prototype.removeItem=function(e){delete this[e]},i.prototype.clear=function(){const e=this;Object.keys(e).forEach(function(n){e[n]=void 0,delete e[n]})},i.prototype.key=function(e){return e=e||0,Object.keys(this)[e]},i.prototype.__defineGetter__("length",function(){return Object.keys(this).length}),typeof l<"u"&&l.localStorage?c.exports=l.localStorage:typeof window<"u"&&window.localStorage?c.exports=window.localStorage:c.exports=new t})();function k(i){var t;return[i[0],(0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__.safeJsonParse)((t=i[1])!=null?t:"")]}class K{constructor(){this.localStorage=c.exports}async getKeys(){return Object.keys(this.localStorage)}async getEntries(){return Object.entries(this.localStorage).map(k)}async getItem(t){const e=this.localStorage.getItem(t);if(e!==null)return (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__.safeJsonParse)(e)}async setItem(t,e){this.localStorage.setItem(t,(0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__.safeJsonStringify)(e))}async removeItem(t){this.localStorage.removeItem(t)}}const N="wc_storage_version",y=1,O=async(i,t,e)=>{const n=N,s=await t.getItem(n);if(s&&s>=y){e(t);return}const a=await i.getKeys();if(!a.length){e(t);return}const m=[];for(;a.length;){const r=a.shift();if(!r)continue;const o=r.toLowerCase();if(o.includes("wc@")||o.includes("walletconnect")||o.includes("wc_")||o.includes("wallet_connect")){const f=await i.getItem(r);await t.setItem(r,f),m.push(r)}}await t.setItem(n,y),e(t),j(i,m)},j=async(i,t)=>{t.length&&t.forEach(async e=>{await i.removeItem(e)})};class h{constructor(){this.initialized=!1,this.setInitialized=e=>{this.storage=e,this.initialized=!0};const t=new K;this.storage=t;try{const e=new _;O(t,e,this.setInitialized)}catch{this.initialized=!0}}async getKeys(){return await this.initialize(),this.storage.getKeys()}async getEntries(){return await this.initialize(),this.storage.getEntries()}async getItem(t){return await this.initialize(),this.storage.getItem(t)}async setItem(t,e){return await this.initialize(),this.storage.setItem(t,e)}async removeItem(t){return await this.initialize(),this.storage.removeItem(t)}async initialize(){this.initialized||await new Promise(t=>{const e=setInterval(()=>{this.initialized&&(clearInterval(e),t())},20)})}}
//# sourceMappingURL=index.es.js.map


/***/ }),

/***/ "./node_modules/@walletconnect/keyvaluestorage/node_modules/@walletconnect/safe-json/dist/esm/index.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/keyvaluestorage/node_modules/@walletconnect/safe-json/dist/esm/index.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   safeJsonParse: () => (/* binding */ safeJsonParse),
/* harmony export */   safeJsonStringify: () => (/* binding */ safeJsonStringify)
/* harmony export */ });
const JSONStringify = data => JSON.stringify(data, (_, value) => typeof value === "bigint" ? value.toString() + "n" : value);
const JSONParse = json => {
    const numbersBiggerThanMaxInt = /([\[:])?(\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\}\]])/g;
    const serializedData = json.replace(numbersBiggerThanMaxInt, "$1\"$2n\"$3");
    return JSON.parse(serializedData, (_, value) => {
        const isCustomFormatBigInt = typeof value === "string" && value.match(/^\d+n$/);
        if (isCustomFormatBigInt)
            return BigInt(value.substring(0, value.length - 1));
        return value;
    });
};
function safeJsonParse(value) {
    if (typeof value !== "string") {
        throw new Error(`Cannot safe json parse value of type ${typeof value}`);
    }
    try {
        return JSONParse(value);
    }
    catch (_a) {
        return value;
    }
}
function safeJsonStringify(value) {
    return typeof value === "string" ? value : JSONStringify(value) || "";
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/logger/dist/index.es.js":
/*!*************************************************************!*\
  !*** ./node_modules/@walletconnect/logger/dist/index.es.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MAX_LOG_SIZE_IN_BYTES_DEFAULT: () => (/* binding */ l),
/* harmony export */   PINO_CUSTOM_CONTEXT_KEY: () => (/* binding */ n),
/* harmony export */   PINO_LOGGER_DEFAULTS: () => (/* binding */ c),
/* harmony export */   formatChildLoggerContext: () => (/* binding */ w),
/* harmony export */   generateChildLogger: () => (/* binding */ E),
/* harmony export */   generateClientLogger: () => (/* binding */ C),
/* harmony export */   generatePlatformLogger: () => (/* binding */ A),
/* harmony export */   generateServerLogger: () => (/* binding */ I),
/* harmony export */   getBrowserLoggerContext: () => (/* binding */ v),
/* harmony export */   getDefaultLoggerOptions: () => (/* binding */ k),
/* harmony export */   getLoggerContext: () => (/* binding */ y),
/* harmony export */   pino: () => (/* reexport default from dynamic */ pino__WEBPACK_IMPORTED_MODULE_0___default.a),
/* harmony export */   setBrowserLoggerContext: () => (/* binding */ b)
/* harmony export */ });
/* harmony import */ var pino__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pino */ "./node_modules/pino/browser.js");
/* harmony import */ var pino__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pino__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/safe-json */ "./node_modules/@walletconnect/logger/node_modules/@walletconnect/safe-json/dist/esm/index.js");
const c={level:"info"},n="custom_context",l=1e3*1024;class O{constructor(e){this.nodeValue=e,this.sizeInBytes=new TextEncoder().encode(this.nodeValue).length,this.next=null}get value(){return this.nodeValue}get size(){return this.sizeInBytes}}class d{constructor(e){this.head=null,this.tail=null,this.lengthInNodes=0,this.maxSizeInBytes=e,this.sizeInBytes=0}append(e){const t=new O(e);if(t.size>this.maxSizeInBytes)throw new Error(`[LinkedList] Value too big to insert into list: ${e} with size ${t.size}`);for(;this.size+t.size>this.maxSizeInBytes;)this.shift();this.head?(this.tail&&(this.tail.next=t),this.tail=t):(this.head=t,this.tail=t),this.lengthInNodes++,this.sizeInBytes+=t.size}shift(){if(!this.head)return;const e=this.head;this.head=this.head.next,this.head||(this.tail=null),this.lengthInNodes--,this.sizeInBytes-=e.size}toArray(){const e=[];let t=this.head;for(;t!==null;)e.push(t.value),t=t.next;return e}get length(){return this.lengthInNodes}get size(){return this.sizeInBytes}toOrderedArray(){return Array.from(this)}[Symbol.iterator](){let e=this.head;return{next:()=>{if(!e)return{done:!0,value:null};const t=e.value;return e=e.next,{done:!1,value:t}}}}}class L{constructor(e,t=l){this.level=e??"error",this.levelValue=pino__WEBPACK_IMPORTED_MODULE_0__.levels.values[this.level],this.MAX_LOG_SIZE_IN_BYTES=t,this.logs=new d(this.MAX_LOG_SIZE_IN_BYTES)}forwardToConsole(e,t){t===pino__WEBPACK_IMPORTED_MODULE_0__.levels.values.error?console.error(e):t===pino__WEBPACK_IMPORTED_MODULE_0__.levels.values.warn?console.warn(e):t===pino__WEBPACK_IMPORTED_MODULE_0__.levels.values.debug?console.debug(e):t===pino__WEBPACK_IMPORTED_MODULE_0__.levels.values.trace?console.trace(e):console.log(e)}appendToLogs(e){this.logs.append((0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonStringify)({timestamp:new Date().toISOString(),log:e}));const t=typeof e=="string"?JSON.parse(e).level:e.level;t>=this.levelValue&&this.forwardToConsole(e,t)}getLogs(){return this.logs}clearLogs(){this.logs=new d(this.MAX_LOG_SIZE_IN_BYTES)}getLogArray(){return Array.from(this.logs)}logsToBlob(e){const t=this.getLogArray();return t.push((0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonStringify)({extraMetadata:e})),new Blob(t,{type:"application/json"})}}class m{constructor(e,t=l){this.baseChunkLogger=new L(e,t)}write(e){this.baseChunkLogger.appendToLogs(e)}getLogs(){return this.baseChunkLogger.getLogs()}clearLogs(){this.baseChunkLogger.clearLogs()}getLogArray(){return this.baseChunkLogger.getLogArray()}logsToBlob(e){return this.baseChunkLogger.logsToBlob(e)}downloadLogsBlobInBrowser(e){const t=URL.createObjectURL(this.logsToBlob(e)),o=document.createElement("a");o.href=t,o.download=`walletconnect-logs-${new Date().toISOString()}.txt`,document.body.appendChild(o),o.click(),document.body.removeChild(o),URL.revokeObjectURL(t)}}class B{constructor(e,t=l){this.baseChunkLogger=new L(e,t)}write(e){this.baseChunkLogger.appendToLogs(e)}getLogs(){return this.baseChunkLogger.getLogs()}clearLogs(){this.baseChunkLogger.clearLogs()}getLogArray(){return this.baseChunkLogger.getLogArray()}logsToBlob(e){return this.baseChunkLogger.logsToBlob(e)}}var x=Object.defineProperty,S=Object.defineProperties,_=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,T=Object.prototype.hasOwnProperty,z=Object.prototype.propertyIsEnumerable,f=(r,e,t)=>e in r?x(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,i=(r,e)=>{for(var t in e||(e={}))T.call(e,t)&&f(r,t,e[t]);if(p)for(var t of p(e))z.call(e,t)&&f(r,t,e[t]);return r},g=(r,e)=>S(r,_(e));function k(r){return g(i({},r),{level:r?.level||c.level})}function v(r,e=n){return r[e]||""}function b(r,e,t=n){return r[t]=e,r}function y(r,e=n){let t="";return typeof r.bindings>"u"?t=v(r,e):t=r.bindings().context||"",t}function w(r,e,t=n){const o=y(r,t);return o.trim()?`${o}/${e}`:e}function E(r,e,t=n){const o=w(r,e,t),a=r.child({context:o});return b(a,o,t)}function C(r){var e,t;const o=new m((e=r.opts)==null?void 0:e.level,r.maxSizeInBytes);return{logger:pino__WEBPACK_IMPORTED_MODULE_0___default()(g(i({},r.opts),{level:"trace",browser:g(i({},(t=r.opts)==null?void 0:t.browser),{write:a=>o.write(a)})})),chunkLoggerController:o}}function I(r){var e;const t=new B((e=r.opts)==null?void 0:e.level,r.maxSizeInBytes);return{logger:pino__WEBPACK_IMPORTED_MODULE_0___default()(g(i({},r.opts),{level:"trace"}),t),chunkLoggerController:t}}function A(r){return typeof r.loggerOverride<"u"&&typeof r.loggerOverride!="string"?{logger:r.loggerOverride,chunkLoggerController:null}:typeof window<"u"?C(r):I(r)}
//# sourceMappingURL=index.es.js.map


/***/ }),

/***/ "./node_modules/@walletconnect/logger/node_modules/@walletconnect/safe-json/dist/esm/index.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/logger/node_modules/@walletconnect/safe-json/dist/esm/index.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   safeJsonParse: () => (/* binding */ safeJsonParse),
/* harmony export */   safeJsonStringify: () => (/* binding */ safeJsonStringify)
/* harmony export */ });
const JSONStringify = data => JSON.stringify(data, (_, value) => typeof value === "bigint" ? value.toString() + "n" : value);
const JSONParse = json => {
    const numbersBiggerThanMaxInt = /([\[:])?(\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\}\]])/g;
    const serializedData = json.replace(numbersBiggerThanMaxInt, "$1\"$2n\"$3");
    return JSON.parse(serializedData, (_, value) => {
        const isCustomFormatBigInt = typeof value === "string" && value.match(/^\d+n$/);
        if (isCustomFormatBigInt)
            return BigInt(value.substring(0, value.length - 1));
        return value;
    });
};
function safeJsonParse(value) {
    if (typeof value !== "string") {
        throw new Error(`Cannot safe json parse value of type ${typeof value}`);
    }
    try {
        return JSONParse(value);
    }
    catch (_a) {
        return value;
    }
}
function safeJsonStringify(value) {
    return typeof value === "string" ? value : JSONStringify(value) || "";
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/relay-api/dist/index.es.js":
/*!****************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-api/dist/index.es.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RELAY_JSONRPC: () => (/* binding */ C),
/* harmony export */   isPublishMethod: () => (/* binding */ c),
/* harmony export */   isPublishParams: () => (/* binding */ h),
/* harmony export */   isPublishRequest: () => (/* binding */ P),
/* harmony export */   isSubscribeMethod: () => (/* binding */ b),
/* harmony export */   isSubscribeParams: () => (/* binding */ a),
/* harmony export */   isSubscribeRequest: () => (/* binding */ R),
/* harmony export */   isSubscriptionMethod: () => (/* binding */ m),
/* harmony export */   isSubscriptionParams: () => (/* binding */ d),
/* harmony export */   isSubscriptionRequest: () => (/* binding */ S),
/* harmony export */   isUnsubscribeMethod: () => (/* binding */ o),
/* harmony export */   isUnsubscribeParams: () => (/* binding */ p),
/* harmony export */   isUnsubscribeRequest: () => (/* binding */ _),
/* harmony export */   parsePublishRequest: () => (/* binding */ q),
/* harmony export */   parseSubscribeRequest: () => (/* binding */ g),
/* harmony export */   parseSubscriptionRequest: () => (/* binding */ k),
/* harmony export */   parseUnsubscribeRequest: () => (/* binding */ E)
/* harmony export */ });
function e(s,r,i="string"){if(!s[r]||typeof s[r]!==i)throw new Error(`Missing or invalid "${r}" param`)}function l(s,r){let i=!0;return r.forEach(t=>{t in s||(i=!1)}),i}function f(s,r){return Array.isArray(s)?s.length===r:Object.keys(s).length===r}function w(s,r){return Array.isArray(s)?s.length>=r:Object.keys(s).length>=r}function u(s,r,i){return(i.length?w(s,r.length):f(s,r.length))?l(s,r):!1}function n(s,r,i="_"){const t=s.split(i);return t[t.length-1].trim().toLowerCase()===r.trim().toLowerCase()}function R(s){return b(s.method)&&a(s.params)}function b(s){return n(s,"subscribe")}function a(s){return u(s,["topic"],[])}function P(s){return c(s.method)&&h(s.params)}function c(s){return n(s,"publish")}function h(s){return u(s,["message","topic","ttl"],["prompt","tag"])}function _(s){return o(s.method)&&p(s.params)}function o(s){return n(s,"unsubscribe")}function p(s){return u(s,["id","topic"],[])}function S(s){return m(s.method)&&d(s.params)}function m(s){return n(s,"subscription")}function d(s){return u(s,["id","data"],[])}function g(s){if(!b(s.method))throw new Error("JSON-RPC Request has invalid subscribe method");if(!a(s.params))throw new Error("JSON-RPC Request has invalid subscribe params");const r=s.params;return e(r,"topic"),r}function q(s){if(!c(s.method))throw new Error("JSON-RPC Request has invalid publish method");if(!h(s.params))throw new Error("JSON-RPC Request has invalid publish params");const r=s.params;return e(r,"topic"),e(r,"message"),e(r,"ttl","number"),r}function E(s){if(!o(s.method))throw new Error("JSON-RPC Request has invalid unsubscribe method");if(!p(s.params))throw new Error("JSON-RPC Request has invalid unsubscribe params");const r=s.params;return e(r,"id"),r}function k(s){if(!m(s.method))throw new Error("JSON-RPC Request has invalid subscription method");if(!d(s.params))throw new Error("JSON-RPC Request has invalid subscription params");const r=s.params;return e(r,"id"),e(r,"data"),r}const C={waku:{publish:"waku_publish",batchPublish:"waku_batchPublish",subscribe:"waku_subscribe",batchSubscribe:"waku_batchSubscribe",subscription:"waku_subscription",unsubscribe:"waku_unsubscribe",batchUnsubscribe:"waku_batchUnsubscribe",batchFetchMessages:"waku_batchFetchMessages"},irn:{publish:"irn_publish",batchPublish:"irn_batchPublish",subscribe:"irn_subscribe",batchSubscribe:"irn_batchSubscribe",subscription:"irn_subscription",unsubscribe:"irn_unsubscribe",batchUnsubscribe:"irn_batchUnsubscribe",batchFetchMessages:"irn_batchFetchMessages"},iridium:{publish:"iridium_publish",batchPublish:"iridium_batchPublish",subscribe:"iridium_subscribe",batchSubscribe:"iridium_batchSubscribe",subscription:"iridium_subscription",unsubscribe:"iridium_unsubscribe",batchUnsubscribe:"iridium_batchUnsubscribe",batchFetchMessages:"iridium_batchFetchMessages"}};
//# sourceMappingURL=index.es.js.map


/***/ }),

/***/ "./node_modules/@walletconnect/relay-auth/dist/index.es.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/dist/index.es.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DATA_ENCODING: () => (/* binding */ xt),
/* harmony export */   DID_DELIMITER: () => (/* binding */ Vt),
/* harmony export */   DID_METHOD: () => (/* binding */ Jt),
/* harmony export */   DID_PREFIX: () => (/* binding */ Yt),
/* harmony export */   JSON_ENCODING: () => (/* binding */ Gt),
/* harmony export */   JWT_DELIMITER: () => (/* binding */ ut),
/* harmony export */   JWT_ENCODING: () => (/* binding */ Dt),
/* harmony export */   JWT_IRIDIUM_ALG: () => (/* binding */ jt),
/* harmony export */   JWT_IRIDIUM_TYP: () => (/* binding */ Zt),
/* harmony export */   KEY_PAIR_SEED_LENGTH: () => (/* binding */ Ne),
/* harmony export */   MULTICODEC_ED25519_BASE: () => (/* binding */ Kt),
/* harmony export */   MULTICODEC_ED25519_ENCODING: () => (/* binding */ dt),
/* harmony export */   MULTICODEC_ED25519_HEADER: () => (/* binding */ Wt),
/* harmony export */   MULTICODEC_ED25519_LENGTH: () => (/* binding */ Fe),
/* harmony export */   decodeData: () => (/* binding */ Xo),
/* harmony export */   decodeIss: () => (/* binding */ tn),
/* harmony export */   decodeJSON: () => (/* binding */ lt),
/* harmony export */   decodeJWT: () => (/* binding */ sn),
/* harmony export */   decodeSig: () => (/* binding */ nn),
/* harmony export */   encodeData: () => (/* binding */ rn),
/* harmony export */   encodeIss: () => (/* binding */ Qe),
/* harmony export */   encodeJSON: () => (/* binding */ bt),
/* harmony export */   encodeJWT: () => (/* binding */ on),
/* harmony export */   encodeSig: () => (/* binding */ en),
/* harmony export */   generateKeyPair: () => (/* binding */ Po),
/* harmony export */   signJWT: () => (/* binding */ Qo),
/* harmony export */   verifyJWT: () => (/* binding */ ts)
/* harmony export */ });
/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/time */ "./node_modules/@walletconnect/time/dist/cjs/index.js");
/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/safe-json */ "./node_modules/@walletconnect/relay-auth/node_modules/@walletconnect/safe-json/dist/esm/index.js");
function En(t){return t instanceof Uint8Array||ArrayBuffer.isView(t)&&t.constructor.name==="Uint8Array"}function fe(t,...e){if(!En(t))throw new Error("Uint8Array expected");if(e.length>0&&!e.includes(t.length))throw new Error("Uint8Array expected of length "+e+", got length="+t.length)}function De(t,e=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(e&&t.finished)throw new Error("Hash#digest() has already been called")}function gn(t,e){fe(t);const n=e.outputLen;if(t.length<n)throw new Error("digestInto() expects output buffer of length at least "+n)}const it=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */const _t=t=>new DataView(t.buffer,t.byteOffset,t.byteLength);function yn(t){if(typeof t!="string")throw new Error("utf8ToBytes expected string, got "+typeof t);return new Uint8Array(new TextEncoder().encode(t))}function de(t){return typeof t=="string"&&(t=yn(t)),fe(t),t}class xn{clone(){return this._cloneInto()}}function Bn(t){const e=r=>t().update(de(r)).digest(),n=t();return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=()=>t(),e}function he(t=32){if(it&&typeof it.getRandomValues=="function")return it.getRandomValues(new Uint8Array(t));if(it&&typeof it.randomBytes=="function")return it.randomBytes(t);throw new Error("crypto.getRandomValues must be defined")}function Cn(t,e,n,r){if(typeof t.setBigUint64=="function")return t.setBigUint64(e,n,r);const o=BigInt(32),s=BigInt(4294967295),a=Number(n>>o&s),u=Number(n&s),i=r?4:0,D=r?0:4;t.setUint32(e+i,a,r),t.setUint32(e+D,u,r)}class An extends xn{constructor(e,n,r,o){super(),this.blockLen=e,this.outputLen=n,this.padOffset=r,this.isLE=o,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=_t(this.buffer)}update(e){De(this);const{view:n,buffer:r,blockLen:o}=this;e=de(e);const s=e.length;for(let a=0;a<s;){const u=Math.min(o-this.pos,s-a);if(u===o){const i=_t(e);for(;o<=s-a;a+=o)this.process(i,a);continue}r.set(e.subarray(a,a+u),this.pos),this.pos+=u,a+=u,this.pos===o&&(this.process(n,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){De(this),gn(e,this),this.finished=!0;const{buffer:n,view:r,blockLen:o,isLE:s}=this;let{pos:a}=this;n[a++]=128,this.buffer.subarray(a).fill(0),this.padOffset>o-a&&(this.process(r,0),a=0);for(let l=a;l<o;l++)n[l]=0;Cn(r,o-8,BigInt(this.length*8),s),this.process(r,0);const u=_t(e),i=this.outputLen;if(i%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const D=i/4,c=this.get();if(D>c.length)throw new Error("_sha2: outputLen bigger than state");for(let l=0;l<D;l++)u.setUint32(4*l,c[l],s)}digest(){const{buffer:e,outputLen:n}=this;this.digestInto(e);const r=e.slice(0,n);return this.destroy(),r}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:n,buffer:r,length:o,finished:s,destroyed:a,pos:u}=this;return e.length=o,e.pos=u,e.finished=s,e.destroyed=a,o%n&&e.buffer.set(r),e}}const wt=BigInt(2**32-1),St=BigInt(32);function le(t,e=!1){return e?{h:Number(t&wt),l:Number(t>>St&wt)}:{h:Number(t>>St&wt)|0,l:Number(t&wt)|0}}function mn(t,e=!1){let n=new Uint32Array(t.length),r=new Uint32Array(t.length);for(let o=0;o<t.length;o++){const{h:s,l:a}=le(t[o],e);[n[o],r[o]]=[s,a]}return[n,r]}const _n=(t,e)=>BigInt(t>>>0)<<St|BigInt(e>>>0),Sn=(t,e,n)=>t>>>n,vn=(t,e,n)=>t<<32-n|e>>>n,In=(t,e,n)=>t>>>n|e<<32-n,Un=(t,e,n)=>t<<32-n|e>>>n,Tn=(t,e,n)=>t<<64-n|e>>>n-32,Fn=(t,e,n)=>t>>>n-32|e<<64-n,Nn=(t,e)=>e,Ln=(t,e)=>t,On=(t,e,n)=>t<<n|e>>>32-n,Hn=(t,e,n)=>e<<n|t>>>32-n,zn=(t,e,n)=>e<<n-32|t>>>64-n,Mn=(t,e,n)=>t<<n-32|e>>>64-n;function qn(t,e,n,r){const o=(e>>>0)+(r>>>0);return{h:t+n+(o/2**32|0)|0,l:o|0}}const $n=(t,e,n)=>(t>>>0)+(e>>>0)+(n>>>0),kn=(t,e,n,r)=>e+n+r+(t/2**32|0)|0,Rn=(t,e,n,r)=>(t>>>0)+(e>>>0)+(n>>>0)+(r>>>0),jn=(t,e,n,r,o)=>e+n+r+o+(t/2**32|0)|0,Zn=(t,e,n,r,o)=>(t>>>0)+(e>>>0)+(n>>>0)+(r>>>0)+(o>>>0),Gn=(t,e,n,r,o,s)=>e+n+r+o+s+(t/2**32|0)|0,x={fromBig:le,split:mn,toBig:_n,shrSH:Sn,shrSL:vn,rotrSH:In,rotrSL:Un,rotrBH:Tn,rotrBL:Fn,rotr32H:Nn,rotr32L:Ln,rotlSH:On,rotlSL:Hn,rotlBH:zn,rotlBL:Mn,add:qn,add3L:$n,add3H:kn,add4L:Rn,add4H:jn,add5H:Gn,add5L:Zn},[Vn,Yn]=(()=>x.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(t=>BigInt(t))))(),P=new Uint32Array(80),Q=new Uint32Array(80);class Jn extends An{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){const{Ah:e,Al:n,Bh:r,Bl:o,Ch:s,Cl:a,Dh:u,Dl:i,Eh:D,El:c,Fh:l,Fl:p,Gh:w,Gl:h,Hh:g,Hl:S}=this;return[e,n,r,o,s,a,u,i,D,c,l,p,w,h,g,S]}set(e,n,r,o,s,a,u,i,D,c,l,p,w,h,g,S){this.Ah=e|0,this.Al=n|0,this.Bh=r|0,this.Bl=o|0,this.Ch=s|0,this.Cl=a|0,this.Dh=u|0,this.Dl=i|0,this.Eh=D|0,this.El=c|0,this.Fh=l|0,this.Fl=p|0,this.Gh=w|0,this.Gl=h|0,this.Hh=g|0,this.Hl=S|0}process(e,n){for(let d=0;d<16;d++,n+=4)P[d]=e.getUint32(n),Q[d]=e.getUint32(n+=4);for(let d=16;d<80;d++){const m=P[d-15]|0,F=Q[d-15]|0,q=x.rotrSH(m,F,1)^x.rotrSH(m,F,8)^x.shrSH(m,F,7),z=x.rotrSL(m,F,1)^x.rotrSL(m,F,8)^x.shrSL(m,F,7),I=P[d-2]|0,O=Q[d-2]|0,ot=x.rotrSH(I,O,19)^x.rotrBH(I,O,61)^x.shrSH(I,O,6),tt=x.rotrSL(I,O,19)^x.rotrBL(I,O,61)^x.shrSL(I,O,6),st=x.add4L(z,tt,Q[d-7],Q[d-16]),at=x.add4H(st,q,ot,P[d-7],P[d-16]);P[d]=at|0,Q[d]=st|0}let{Ah:r,Al:o,Bh:s,Bl:a,Ch:u,Cl:i,Dh:D,Dl:c,Eh:l,El:p,Fh:w,Fl:h,Gh:g,Gl:S,Hh:v,Hl:L}=this;for(let d=0;d<80;d++){const m=x.rotrSH(l,p,14)^x.rotrSH(l,p,18)^x.rotrBH(l,p,41),F=x.rotrSL(l,p,14)^x.rotrSL(l,p,18)^x.rotrBL(l,p,41),q=l&w^~l&g,z=p&h^~p&S,I=x.add5L(L,F,z,Yn[d],Q[d]),O=x.add5H(I,v,m,q,Vn[d],P[d]),ot=I|0,tt=x.rotrSH(r,o,28)^x.rotrBH(r,o,34)^x.rotrBH(r,o,39),st=x.rotrSL(r,o,28)^x.rotrBL(r,o,34)^x.rotrBL(r,o,39),at=r&s^r&u^s&u,Ct=o&a^o&i^a&i;v=g|0,L=S|0,g=w|0,S=h|0,w=l|0,h=p|0,{h:l,l:p}=x.add(D|0,c|0,O|0,ot|0),D=u|0,c=i|0,u=s|0,i=a|0,s=r|0,a=o|0;const At=x.add3L(ot,st,Ct);r=x.add3H(At,O,tt,at),o=At|0}({h:r,l:o}=x.add(this.Ah|0,this.Al|0,r|0,o|0)),{h:s,l:a}=x.add(this.Bh|0,this.Bl|0,s|0,a|0),{h:u,l:i}=x.add(this.Ch|0,this.Cl|0,u|0,i|0),{h:D,l:c}=x.add(this.Dh|0,this.Dl|0,D|0,c|0),{h:l,l:p}=x.add(this.Eh|0,this.El|0,l|0,p|0),{h:w,l:h}=x.add(this.Fh|0,this.Fl|0,w|0,h|0),{h:g,l:S}=x.add(this.Gh|0,this.Gl|0,g|0,S|0),{h:v,l:L}=x.add(this.Hh|0,this.Hl|0,v|0,L|0),this.set(r,o,s,a,u,i,D,c,l,p,w,h,g,S,v,L)}roundClean(){P.fill(0),Q.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const Kn=Bn(()=>new Jn);/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const vt=BigInt(0),be=BigInt(1),Wn=BigInt(2);function It(t){return t instanceof Uint8Array||ArrayBuffer.isView(t)&&t.constructor.name==="Uint8Array"}function Ut(t){if(!It(t))throw new Error("Uint8Array expected")}function Tt(t,e){if(typeof e!="boolean")throw new Error(t+" boolean expected, got "+e)}const Xn=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,"0"));function Ft(t){Ut(t);let e="";for(let n=0;n<t.length;n++)e+=Xn[t[n]];return e}function pe(t){if(typeof t!="string")throw new Error("hex string expected, got "+typeof t);return t===""?vt:BigInt("0x"+t)}const K={_0:48,_9:57,A:65,F:70,a:97,f:102};function we(t){if(t>=K._0&&t<=K._9)return t-K._0;if(t>=K.A&&t<=K.F)return t-(K.A-10);if(t>=K.a&&t<=K.f)return t-(K.a-10)}function Ee(t){if(typeof t!="string")throw new Error("hex string expected, got "+typeof t);const e=t.length,n=e/2;if(e%2)throw new Error("hex string expected, got unpadded hex of length "+e);const r=new Uint8Array(n);for(let o=0,s=0;o<n;o++,s+=2){const a=we(t.charCodeAt(s)),u=we(t.charCodeAt(s+1));if(a===void 0||u===void 0){const i=t[s]+t[s+1];throw new Error('hex string expected, got non-hex character "'+i+'" at index '+s)}r[o]=a*16+u}return r}function Pn(t){return pe(Ft(t))}function Et(t){return Ut(t),pe(Ft(Uint8Array.from(t).reverse()))}function ge(t,e){return Ee(t.toString(16).padStart(e*2,"0"))}function Nt(t,e){return ge(t,e).reverse()}function W(t,e,n){let r;if(typeof e=="string")try{r=Ee(e)}catch(s){throw new Error(t+" must be hex string or Uint8Array, cause: "+s)}else if(It(e))r=Uint8Array.from(e);else throw new Error(t+" must be hex string or Uint8Array");const o=r.length;if(typeof n=="number"&&o!==n)throw new Error(t+" of length "+n+" expected, got "+o);return r}function ye(...t){let e=0;for(let r=0;r<t.length;r++){const o=t[r];Ut(o),e+=o.length}const n=new Uint8Array(e);for(let r=0,o=0;r<t.length;r++){const s=t[r];n.set(s,o),o+=s.length}return n}const Lt=t=>typeof t=="bigint"&&vt<=t;function Qn(t,e,n){return Lt(t)&&Lt(e)&&Lt(n)&&e<=t&&t<n}function ft(t,e,n,r){if(!Qn(e,n,r))throw new Error("expected valid "+t+": "+n+" <= n < "+r+", got "+e)}function tr(t){let e;for(e=0;t>vt;t>>=be,e+=1);return e}const er=t=>(Wn<<BigInt(t-1))-be,nr={bigint:t=>typeof t=="bigint",function:t=>typeof t=="function",boolean:t=>typeof t=="boolean",string:t=>typeof t=="string",stringOrUint8Array:t=>typeof t=="string"||It(t),isSafeInteger:t=>Number.isSafeInteger(t),array:t=>Array.isArray(t),field:(t,e)=>e.Fp.isValid(t),hash:t=>typeof t=="function"&&Number.isSafeInteger(t.outputLen)};function Ot(t,e,n={}){const r=(o,s,a)=>{const u=nr[s];if(typeof u!="function")throw new Error("invalid validator function");const i=t[o];if(!(a&&i===void 0)&&!u(i,t))throw new Error("param "+String(o)+" is invalid. Expected "+s+", got "+i)};for(const[o,s]of Object.entries(e))r(o,s,!1);for(const[o,s]of Object.entries(n))r(o,s,!0);return t}function xe(t){const e=new WeakMap;return(n,...r)=>{const o=e.get(n);if(o!==void 0)return o;const s=t(n,...r);return e.set(n,s),s}}const M=BigInt(0),N=BigInt(1),nt=BigInt(2),rr=BigInt(3),Ht=BigInt(4),Be=BigInt(5),Ce=BigInt(8);function H(t,e){const n=t%e;return n>=M?n:e+n}function or(t,e,n){if(e<M)throw new Error("invalid exponent, negatives unsupported");if(n<=M)throw new Error("invalid modulus");if(n===N)return M;let r=N;for(;e>M;)e&N&&(r=r*t%n),t=t*t%n,e>>=N;return r}function J(t,e,n){let r=t;for(;e-- >M;)r*=r,r%=n;return r}function Ae(t,e){if(t===M)throw new Error("invert: expected non-zero number");if(e<=M)throw new Error("invert: expected positive modulus, got "+e);let n=H(t,e),r=e,o=M,s=N;for(;n!==M;){const u=r/n,i=r%n,D=o-s*u;r=n,n=i,o=s,s=D}if(r!==N)throw new Error("invert: does not exist");return H(o,e)}function sr(t){const e=(t-N)/nt;let n,r,o;for(n=t-N,r=0;n%nt===M;n/=nt,r++);for(o=nt;o<t&&or(o,e,t)!==t-N;o++)if(o>1e3)throw new Error("Cannot find square root: likely non-prime P");if(r===1){const a=(t+N)/Ht;return function(i,D){const c=i.pow(D,a);if(!i.eql(i.sqr(c),D))throw new Error("Cannot find square root");return c}}const s=(n+N)/nt;return function(u,i){if(u.pow(i,e)===u.neg(u.ONE))throw new Error("Cannot find square root");let D=r,c=u.pow(u.mul(u.ONE,o),n),l=u.pow(i,s),p=u.pow(i,n);for(;!u.eql(p,u.ONE);){if(u.eql(p,u.ZERO))return u.ZERO;let w=1;for(let g=u.sqr(p);w<D&&!u.eql(g,u.ONE);w++)g=u.sqr(g);const h=u.pow(c,N<<BigInt(D-w-1));c=u.sqr(h),l=u.mul(l,h),p=u.mul(p,c),D=w}return l}}function ir(t){if(t%Ht===rr){const e=(t+N)/Ht;return function(r,o){const s=r.pow(o,e);if(!r.eql(r.sqr(s),o))throw new Error("Cannot find square root");return s}}if(t%Ce===Be){const e=(t-Be)/Ce;return function(r,o){const s=r.mul(o,nt),a=r.pow(s,e),u=r.mul(o,a),i=r.mul(r.mul(u,nt),a),D=r.mul(u,r.sub(i,r.ONE));if(!r.eql(r.sqr(D),o))throw new Error("Cannot find square root");return D}}return sr(t)}const ur=(t,e)=>(H(t,e)&N)===N,cr=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function ar(t){const e={ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"},n=cr.reduce((r,o)=>(r[o]="function",r),e);return Ot(t,n)}function fr(t,e,n){if(n<M)throw new Error("invalid exponent, negatives unsupported");if(n===M)return t.ONE;if(n===N)return e;let r=t.ONE,o=e;for(;n>M;)n&N&&(r=t.mul(r,o)),o=t.sqr(o),n>>=N;return r}function Dr(t,e){const n=new Array(e.length),r=e.reduce((s,a,u)=>t.is0(a)?s:(n[u]=s,t.mul(s,a)),t.ONE),o=t.inv(r);return e.reduceRight((s,a,u)=>t.is0(a)?s:(n[u]=t.mul(s,n[u]),t.mul(s,a)),o),n}function me(t,e){const n=e!==void 0?e:t.toString(2).length,r=Math.ceil(n/8);return{nBitLength:n,nByteLength:r}}function _e(t,e,n=!1,r={}){if(t<=M)throw new Error("invalid field: expected ORDER > 0, got "+t);const{nBitLength:o,nByteLength:s}=me(t,e);if(s>2048)throw new Error("invalid field: expected ORDER of <= 2048 bytes");let a;const u=Object.freeze({ORDER:t,isLE:n,BITS:o,BYTES:s,MASK:er(o),ZERO:M,ONE:N,create:i=>H(i,t),isValid:i=>{if(typeof i!="bigint")throw new Error("invalid field element: expected bigint, got "+typeof i);return M<=i&&i<t},is0:i=>i===M,isOdd:i=>(i&N)===N,neg:i=>H(-i,t),eql:(i,D)=>i===D,sqr:i=>H(i*i,t),add:(i,D)=>H(i+D,t),sub:(i,D)=>H(i-D,t),mul:(i,D)=>H(i*D,t),pow:(i,D)=>fr(u,i,D),div:(i,D)=>H(i*Ae(D,t),t),sqrN:i=>i*i,addN:(i,D)=>i+D,subN:(i,D)=>i-D,mulN:(i,D)=>i*D,inv:i=>Ae(i,t),sqrt:r.sqrt||(i=>(a||(a=ir(t)),a(u,i))),invertBatch:i=>Dr(u,i),cmov:(i,D,c)=>c?D:i,toBytes:i=>n?Nt(i,s):ge(i,s),fromBytes:i=>{if(i.length!==s)throw new Error("Field.fromBytes: expected "+s+" bytes, got "+i.length);return n?Et(i):Pn(i)}});return Object.freeze(u)}const Se=BigInt(0),gt=BigInt(1);function zt(t,e){const n=e.negate();return t?n:e}function ve(t,e){if(!Number.isSafeInteger(t)||t<=0||t>e)throw new Error("invalid window size, expected [1.."+e+"], got W="+t)}function Mt(t,e){ve(t,e);const n=Math.ceil(e/t)+1,r=2**(t-1);return{windows:n,windowSize:r}}function dr(t,e){if(!Array.isArray(t))throw new Error("array expected");t.forEach((n,r)=>{if(!(n instanceof e))throw new Error("invalid point at index "+r)})}function hr(t,e){if(!Array.isArray(t))throw new Error("array of scalars expected");t.forEach((n,r)=>{if(!e.isValid(n))throw new Error("invalid scalar at index "+r)})}const qt=new WeakMap,Ie=new WeakMap;function $t(t){return Ie.get(t)||1}function lr(t,e){return{constTimeNegate:zt,hasPrecomputes(n){return $t(n)!==1},unsafeLadder(n,r,o=t.ZERO){let s=n;for(;r>Se;)r&gt&&(o=o.add(s)),s=s.double(),r>>=gt;return o},precomputeWindow(n,r){const{windows:o,windowSize:s}=Mt(r,e),a=[];let u=n,i=u;for(let D=0;D<o;D++){i=u,a.push(i);for(let c=1;c<s;c++)i=i.add(u),a.push(i);u=i.double()}return a},wNAF(n,r,o){const{windows:s,windowSize:a}=Mt(n,e);let u=t.ZERO,i=t.BASE;const D=BigInt(2**n-1),c=2**n,l=BigInt(n);for(let p=0;p<s;p++){const w=p*a;let h=Number(o&D);o>>=l,h>a&&(h-=c,o+=gt);const g=w,S=w+Math.abs(h)-1,v=p%2!==0,L=h<0;h===0?i=i.add(zt(v,r[g])):u=u.add(zt(L,r[S]))}return{p:u,f:i}},wNAFUnsafe(n,r,o,s=t.ZERO){const{windows:a,windowSize:u}=Mt(n,e),i=BigInt(2**n-1),D=2**n,c=BigInt(n);for(let l=0;l<a;l++){const p=l*u;if(o===Se)break;let w=Number(o&i);if(o>>=c,w>u&&(w-=D,o+=gt),w===0)continue;let h=r[p+Math.abs(w)-1];w<0&&(h=h.negate()),s=s.add(h)}return s},getPrecomputes(n,r,o){let s=qt.get(r);return s||(s=this.precomputeWindow(r,n),n!==1&&qt.set(r,o(s))),s},wNAFCached(n,r,o){const s=$t(n);return this.wNAF(s,this.getPrecomputes(s,n,o),r)},wNAFCachedUnsafe(n,r,o,s){const a=$t(n);return a===1?this.unsafeLadder(n,r,s):this.wNAFUnsafe(a,this.getPrecomputes(a,n,o),r,s)},setWindowSize(n,r){ve(r,e),Ie.set(n,r),qt.delete(n)}}}function br(t,e,n,r){if(dr(n,t),hr(r,e),n.length!==r.length)throw new Error("arrays of points and scalars must have equal length");const o=t.ZERO,s=tr(BigInt(n.length)),a=s>12?s-3:s>4?s-2:s?2:1,u=(1<<a)-1,i=new Array(u+1).fill(o),D=Math.floor((e.BITS-1)/a)*a;let c=o;for(let l=D;l>=0;l-=a){i.fill(o);for(let w=0;w<r.length;w++){const h=r[w],g=Number(h>>BigInt(l)&BigInt(u));i[g]=i[g].add(n[w])}let p=o;for(let w=i.length-1,h=o;w>0;w--)h=h.add(i[w]),p=p.add(h);if(c=c.add(p),l!==0)for(let w=0;w<a;w++)c=c.double()}return c}function pr(t){return ar(t.Fp),Ot(t,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...me(t.n,t.nBitLength),...t,p:t.Fp.ORDER})}const G=BigInt(0),j=BigInt(1),yt=BigInt(2),wr=BigInt(8),Er={zip215:!0};function gr(t){const e=pr(t);return Ot(t,{hash:"function",a:"bigint",d:"bigint",randomBytes:"function"},{adjustScalarBytes:"function",domain:"function",uvRatio:"function",mapToCurve:"function"}),Object.freeze({...e})}function yr(t){const e=gr(t),{Fp:n,n:r,prehash:o,hash:s,randomBytes:a,nByteLength:u,h:i}=e,D=yt<<BigInt(u*8)-j,c=n.create,l=_e(e.n,e.nBitLength),p=e.uvRatio||((y,f)=>{try{return{isValid:!0,value:n.sqrt(y*n.inv(f))}}catch{return{isValid:!1,value:G}}}),w=e.adjustScalarBytes||(y=>y),h=e.domain||((y,f,b)=>{if(Tt("phflag",b),f.length||b)throw new Error("Contexts/pre-hash are not supported");return y});function g(y,f){ft("coordinate "+y,f,G,D)}function S(y){if(!(y instanceof d))throw new Error("ExtendedPoint expected")}const v=xe((y,f)=>{const{ex:b,ey:E,ez:B}=y,C=y.is0();f==null&&(f=C?wr:n.inv(B));const A=c(b*f),U=c(E*f),_=c(B*f);if(C)return{x:G,y:j};if(_!==j)throw new Error("invZ was invalid");return{x:A,y:U}}),L=xe(y=>{const{a:f,d:b}=e;if(y.is0())throw new Error("bad point: ZERO");const{ex:E,ey:B,ez:C,et:A}=y,U=c(E*E),_=c(B*B),T=c(C*C),$=c(T*T),R=c(U*f),V=c(T*c(R+_)),Y=c($+c(b*c(U*_)));if(V!==Y)throw new Error("bad point: equation left != right (1)");const Z=c(E*B),X=c(C*A);if(Z!==X)throw new Error("bad point: equation left != right (2)");return!0});class d{constructor(f,b,E,B){this.ex=f,this.ey=b,this.ez=E,this.et=B,g("x",f),g("y",b),g("z",E),g("t",B),Object.freeze(this)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static fromAffine(f){if(f instanceof d)throw new Error("extended point not allowed");const{x:b,y:E}=f||{};return g("x",b),g("y",E),new d(b,E,j,c(b*E))}static normalizeZ(f){const b=n.invertBatch(f.map(E=>E.ez));return f.map((E,B)=>E.toAffine(b[B])).map(d.fromAffine)}static msm(f,b){return br(d,l,f,b)}_setWindowSize(f){q.setWindowSize(this,f)}assertValidity(){L(this)}equals(f){S(f);const{ex:b,ey:E,ez:B}=this,{ex:C,ey:A,ez:U}=f,_=c(b*U),T=c(C*B),$=c(E*U),R=c(A*B);return _===T&&$===R}is0(){return this.equals(d.ZERO)}negate(){return new d(c(-this.ex),this.ey,this.ez,c(-this.et))}double(){const{a:f}=e,{ex:b,ey:E,ez:B}=this,C=c(b*b),A=c(E*E),U=c(yt*c(B*B)),_=c(f*C),T=b+E,$=c(c(T*T)-C-A),R=_+A,V=R-U,Y=_-A,Z=c($*V),X=c(R*Y),et=c($*Y),pt=c(V*R);return new d(Z,X,pt,et)}add(f){S(f);const{a:b,d:E}=e,{ex:B,ey:C,ez:A,et:U}=this,{ex:_,ey:T,ez:$,et:R}=f;if(b===BigInt(-1)){const re=c((C-B)*(T+_)),oe=c((C+B)*(T-_)),mt=c(oe-re);if(mt===G)return this.double();const se=c(A*yt*R),ie=c(U*yt*$),ue=ie+se,ce=oe+re,ae=ie-se,Dn=c(ue*mt),dn=c(ce*ae),hn=c(ue*ae),ln=c(mt*ce);return new d(Dn,dn,ln,hn)}const V=c(B*_),Y=c(C*T),Z=c(U*E*R),X=c(A*$),et=c((B+C)*(_+T)-V-Y),pt=X-Z,ee=X+Z,ne=c(Y-b*V),un=c(et*pt),cn=c(ee*ne),an=c(et*ne),fn=c(pt*ee);return new d(un,cn,fn,an)}subtract(f){return this.add(f.negate())}wNAF(f){return q.wNAFCached(this,f,d.normalizeZ)}multiply(f){const b=f;ft("scalar",b,j,r);const{p:E,f:B}=this.wNAF(b);return d.normalizeZ([E,B])[0]}multiplyUnsafe(f,b=d.ZERO){const E=f;return ft("scalar",E,G,r),E===G?F:this.is0()||E===j?this:q.wNAFCachedUnsafe(this,E,d.normalizeZ,b)}isSmallOrder(){return this.multiplyUnsafe(i).is0()}isTorsionFree(){return q.unsafeLadder(this,r).is0()}toAffine(f){return v(this,f)}clearCofactor(){const{h:f}=e;return f===j?this:this.multiplyUnsafe(f)}static fromHex(f,b=!1){const{d:E,a:B}=e,C=n.BYTES;f=W("pointHex",f,C),Tt("zip215",b);const A=f.slice(),U=f[C-1];A[C-1]=U&-129;const _=Et(A),T=b?D:n.ORDER;ft("pointHex.y",_,G,T);const $=c(_*_),R=c($-j),V=c(E*$-B);let{isValid:Y,value:Z}=p(R,V);if(!Y)throw new Error("Point.fromHex: invalid y coordinate");const X=(Z&j)===j,et=(U&128)!==0;if(!b&&Z===G&&et)throw new Error("Point.fromHex: x=0 and x_0=1");return et!==X&&(Z=c(-Z)),d.fromAffine({x:Z,y:_})}static fromPrivateKey(f){return O(f).point}toRawBytes(){const{x:f,y:b}=this.toAffine(),E=Nt(b,n.BYTES);return E[E.length-1]|=f&j?128:0,E}toHex(){return Ft(this.toRawBytes())}}d.BASE=new d(e.Gx,e.Gy,j,c(e.Gx*e.Gy)),d.ZERO=new d(G,j,j,G);const{BASE:m,ZERO:F}=d,q=lr(d,u*8);function z(y){return H(y,r)}function I(y){return z(Et(y))}function O(y){const f=n.BYTES;y=W("private key",y,f);const b=W("hashed private key",s(y),2*f),E=w(b.slice(0,f)),B=b.slice(f,2*f),C=I(E),A=m.multiply(C),U=A.toRawBytes();return{head:E,prefix:B,scalar:C,point:A,pointBytes:U}}function ot(y){return O(y).pointBytes}function tt(y=new Uint8Array,...f){const b=ye(...f);return I(s(h(b,W("context",y),!!o)))}function st(y,f,b={}){y=W("message",y),o&&(y=o(y));const{prefix:E,scalar:B,pointBytes:C}=O(f),A=tt(b.context,E,y),U=m.multiply(A).toRawBytes(),_=tt(b.context,U,C,y),T=z(A+_*B);ft("signature.s",T,G,r);const $=ye(U,Nt(T,n.BYTES));return W("result",$,n.BYTES*2)}const at=Er;function Ct(y,f,b,E=at){const{context:B,zip215:C}=E,A=n.BYTES;y=W("signature",y,2*A),f=W("message",f),b=W("publicKey",b,A),C!==void 0&&Tt("zip215",C),o&&(f=o(f));const U=Et(y.slice(A,2*A));let _,T,$;try{_=d.fromHex(b,C),T=d.fromHex(y.slice(0,A),C),$=m.multiplyUnsafe(U)}catch{return!1}if(!C&&_.isSmallOrder())return!1;const R=tt(B,T.toRawBytes(),_.toRawBytes(),f);return T.add(_.multiplyUnsafe(R)).subtract($).clearCofactor().equals(d.ZERO)}return m._setWindowSize(8),{CURVE:e,getPublicKey:ot,sign:st,verify:Ct,ExtendedPoint:d,utils:{getExtendedPublicKey:O,randomPrivateKey:()=>a(n.BYTES),precompute(y=8,f=d.BASE){return f._setWindowSize(y),f.multiply(BigInt(3)),f}}}}BigInt(0),BigInt(1);const kt=BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949"),Ue=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752");BigInt(0);const xr=BigInt(1),Te=BigInt(2);BigInt(3);const Br=BigInt(5),Cr=BigInt(8);function Ar(t){const e=BigInt(10),n=BigInt(20),r=BigInt(40),o=BigInt(80),s=kt,u=t*t%s*t%s,i=J(u,Te,s)*u%s,D=J(i,xr,s)*t%s,c=J(D,Br,s)*D%s,l=J(c,e,s)*c%s,p=J(l,n,s)*l%s,w=J(p,r,s)*p%s,h=J(w,o,s)*w%s,g=J(h,o,s)*w%s,S=J(g,e,s)*c%s;return{pow_p_5_8:J(S,Te,s)*t%s,b2:u}}function mr(t){return t[0]&=248,t[31]&=127,t[31]|=64,t}function _r(t,e){const n=kt,r=H(e*e*e,n),o=H(r*r*e,n),s=Ar(t*o).pow_p_5_8;let a=H(t*r*s,n);const u=H(e*a*a,n),i=a,D=H(a*Ue,n),c=u===t,l=u===H(-t,n),p=u===H(-t*Ue,n);return c&&(a=i),(l||p)&&(a=D),ur(a,n)&&(a=H(-a,n)),{isValid:c||l,value:a}}const Sr=(()=>_e(kt,void 0,!0))(),vr=(()=>({a:BigInt(-1),d:BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),Fp:Sr,n:BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"),h:Cr,Gx:BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),Gy:BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"),hash:Kn,randomBytes:he,adjustScalarBytes:mr,uvRatio:_r}))(),Rt=(()=>yr(vr))(),jt="EdDSA",Zt="JWT",ut=".",Dt="base64url",Gt="utf8",xt="utf8",Vt=":",Yt="did",Jt="key",dt="base58btc",Kt="z",Wt="K36",Fe=32,Ne=32;function Xt(t){return globalThis.Buffer!=null?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):t}function Le(t=0){return globalThis.Buffer!=null&&globalThis.Buffer.allocUnsafe!=null?Xt(globalThis.Buffer.allocUnsafe(t)):new Uint8Array(t)}function Oe(t,e){e||(e=t.reduce((o,s)=>o+s.length,0));const n=Le(e);let r=0;for(const o of t)n.set(o,r),r+=o.length;return Xt(n)}function Ir(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var n=new Uint8Array(256),r=0;r<n.length;r++)n[r]=255;for(var o=0;o<t.length;o++){var s=t.charAt(o),a=s.charCodeAt(0);if(n[a]!==255)throw new TypeError(s+" is ambiguous");n[a]=o}var u=t.length,i=t.charAt(0),D=Math.log(u)/Math.log(256),c=Math.log(256)/Math.log(u);function l(h){if(h instanceof Uint8Array||(ArrayBuffer.isView(h)?h=new Uint8Array(h.buffer,h.byteOffset,h.byteLength):Array.isArray(h)&&(h=Uint8Array.from(h))),!(h instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(h.length===0)return"";for(var g=0,S=0,v=0,L=h.length;v!==L&&h[v]===0;)v++,g++;for(var d=(L-v)*c+1>>>0,m=new Uint8Array(d);v!==L;){for(var F=h[v],q=0,z=d-1;(F!==0||q<S)&&z!==-1;z--,q++)F+=256*m[z]>>>0,m[z]=F%u>>>0,F=F/u>>>0;if(F!==0)throw new Error("Non-zero carry");S=q,v++}for(var I=d-S;I!==d&&m[I]===0;)I++;for(var O=i.repeat(g);I<d;++I)O+=t.charAt(m[I]);return O}function p(h){if(typeof h!="string")throw new TypeError("Expected String");if(h.length===0)return new Uint8Array;var g=0;if(h[g]!==" "){for(var S=0,v=0;h[g]===i;)S++,g++;for(var L=(h.length-g)*D+1>>>0,d=new Uint8Array(L);h[g];){var m=n[h.charCodeAt(g)];if(m===255)return;for(var F=0,q=L-1;(m!==0||F<v)&&q!==-1;q--,F++)m+=u*d[q]>>>0,d[q]=m%256>>>0,m=m/256>>>0;if(m!==0)throw new Error("Non-zero carry");v=F,g++}if(h[g]!==" "){for(var z=L-v;z!==L&&d[z]===0;)z++;for(var I=new Uint8Array(S+(L-z)),O=S;z!==L;)I[O++]=d[z++];return I}}}function w(h){var g=p(h);if(g)return g;throw new Error(`Non-${e} character`)}return{encode:l,decodeUnsafe:p,decode:w}}var Ur=Ir,Tr=Ur;const He=t=>{if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")},Fr=t=>new TextEncoder().encode(t),Nr=t=>new TextDecoder().decode(t);class Lr{constructor(e,n,r){this.name=e,this.prefix=n,this.baseEncode=r}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}}class Or{constructor(e,n,r){if(this.name=e,this.prefix=n,n.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=n.codePointAt(0),this.baseDecode=r}decode(e){if(typeof e=="string"){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(e){return ze(this,e)}}class Hr{constructor(e){this.decoders=e}or(e){return ze(this,e)}decode(e){const n=e[0],r=this.decoders[n];if(r)return r.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}}const ze=(t,e)=>new Hr({...t.decoders||{[t.prefix]:t},...e.decoders||{[e.prefix]:e}});class zr{constructor(e,n,r,o){this.name=e,this.prefix=n,this.baseEncode=r,this.baseDecode=o,this.encoder=new Lr(e,n,r),this.decoder=new Or(e,n,o)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}}const Bt=({name:t,prefix:e,encode:n,decode:r})=>new zr(t,e,n,r),ht=({prefix:t,name:e,alphabet:n})=>{const{encode:r,decode:o}=Tr(n,e);return Bt({prefix:t,name:e,encode:r,decode:s=>He(o(s))})},Mr=(t,e,n,r)=>{const o={};for(let c=0;c<e.length;++c)o[e[c]]=c;let s=t.length;for(;t[s-1]==="=";)--s;const a=new Uint8Array(s*n/8|0);let u=0,i=0,D=0;for(let c=0;c<s;++c){const l=o[t[c]];if(l===void 0)throw new SyntaxError(`Non-${r} character`);i=i<<n|l,u+=n,u>=8&&(u-=8,a[D++]=255&i>>u)}if(u>=n||255&i<<8-u)throw new SyntaxError("Unexpected end of data");return a},qr=(t,e,n)=>{const r=e[e.length-1]==="=",o=(1<<n)-1;let s="",a=0,u=0;for(let i=0;i<t.length;++i)for(u=u<<8|t[i],a+=8;a>n;)a-=n,s+=e[o&u>>a];if(a&&(s+=e[o&u<<n-a]),r)for(;s.length*n&7;)s+="=";return s},k=({name:t,prefix:e,bitsPerChar:n,alphabet:r})=>Bt({prefix:e,name:t,encode(o){return qr(o,r,n)},decode(o){return Mr(o,r,n,t)}}),$r=Bt({prefix:"\0",name:"identity",encode:t=>Nr(t),decode:t=>Fr(t)});var kr=Object.freeze({__proto__:null,identity:$r});const Rr=k({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1});var jr=Object.freeze({__proto__:null,base2:Rr});const Zr=k({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3});var Gr=Object.freeze({__proto__:null,base8:Zr});const Vr=ht({prefix:"9",name:"base10",alphabet:"0123456789"});var Yr=Object.freeze({__proto__:null,base10:Vr});const Jr=k({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),Kr=k({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4});var Wr=Object.freeze({__proto__:null,base16:Jr,base16upper:Kr});const Xr=k({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),Pr=k({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),Qr=k({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),to=k({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),eo=k({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),no=k({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),ro=k({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),oo=k({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),so=k({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});var io=Object.freeze({__proto__:null,base32:Xr,base32upper:Pr,base32pad:Qr,base32padupper:to,base32hex:eo,base32hexupper:no,base32hexpad:ro,base32hexpadupper:oo,base32z:so});const uo=ht({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),co=ht({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"});var ao=Object.freeze({__proto__:null,base36:uo,base36upper:co});const fo=ht({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),Do=ht({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});var ho=Object.freeze({__proto__:null,base58btc:fo,base58flickr:Do});const lo=k({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),bo=k({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),po=k({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),wo=k({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6});var Eo=Object.freeze({__proto__:null,base64:lo,base64pad:bo,base64url:po,base64urlpad:wo});const Me=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),go=Me.reduce((t,e,n)=>(t[n]=e,t),[]),yo=Me.reduce((t,e,n)=>(t[e.codePointAt(0)]=n,t),[]);function xo(t){return t.reduce((e,n)=>(e+=go[n],e),"")}function Bo(t){const e=[];for(const n of t){const r=yo[n.codePointAt(0)];if(r===void 0)throw new Error(`Non-base256emoji character: ${n}`);e.push(r)}return new Uint8Array(e)}const Co=Bt({prefix:"\u{1F680}",name:"base256emoji",encode:xo,decode:Bo});var Ao=Object.freeze({__proto__:null,base256emoji:Co}),mo=$e,qe=128,_o=127,So=~_o,vo=Math.pow(2,31);function $e(t,e,n){e=e||[],n=n||0;for(var r=n;t>=vo;)e[n++]=t&255|qe,t/=128;for(;t&So;)e[n++]=t&255|qe,t>>>=7;return e[n]=t|0,$e.bytes=n-r+1,e}var Io=Pt,Uo=128,ke=127;function Pt(t,r){var n=0,r=r||0,o=0,s=r,a,u=t.length;do{if(s>=u)throw Pt.bytes=0,new RangeError("Could not decode varint");a=t[s++],n+=o<28?(a&ke)<<o:(a&ke)*Math.pow(2,o),o+=7}while(a>=Uo);return Pt.bytes=s-r,n}var To=Math.pow(2,7),Fo=Math.pow(2,14),No=Math.pow(2,21),Lo=Math.pow(2,28),Oo=Math.pow(2,35),Ho=Math.pow(2,42),zo=Math.pow(2,49),Mo=Math.pow(2,56),qo=Math.pow(2,63),$o=function(t){return t<To?1:t<Fo?2:t<No?3:t<Lo?4:t<Oo?5:t<Ho?6:t<zo?7:t<Mo?8:t<qo?9:10},ko={encode:mo,decode:Io,encodingLength:$o},Re=ko;const je=(t,e,n=0)=>(Re.encode(t,e,n),e),Ze=t=>Re.encodingLength(t),Qt=(t,e)=>{const n=e.byteLength,r=Ze(t),o=r+Ze(n),s=new Uint8Array(o+n);return je(t,s,0),je(n,s,r),s.set(e,o),new Ro(t,n,e,s)};class Ro{constructor(e,n,r,o){this.code=e,this.size=n,this.digest=r,this.bytes=o}}const Ge=({name:t,code:e,encode:n})=>new jo(t,e,n);class jo{constructor(e,n,r){this.name=e,this.code=n,this.encode=r}digest(e){if(e instanceof Uint8Array){const n=this.encode(e);return n instanceof Uint8Array?Qt(this.code,n):n.then(r=>Qt(this.code,r))}else throw Error("Unknown type, must be binary type")}}const Ve=t=>async e=>new Uint8Array(await crypto.subtle.digest(t,e)),Zo=Ge({name:"sha2-256",code:18,encode:Ve("SHA-256")}),Go=Ge({name:"sha2-512",code:19,encode:Ve("SHA-512")});var Vo=Object.freeze({__proto__:null,sha256:Zo,sha512:Go});const Ye=0,Yo="identity",Je=He,Jo=t=>Qt(Ye,Je(t)),Ko={code:Ye,name:Yo,encode:Je,digest:Jo};var Wo=Object.freeze({__proto__:null,identity:Ko});new TextEncoder,new TextDecoder;const Ke={...kr,...jr,...Gr,...Yr,...Wr,...io,...ao,...ho,...Eo,...Ao};({...Vo,...Wo});function We(t,e,n,r){return{name:t,prefix:e,encoder:{name:t,prefix:e,encode:n},decoder:{decode:r}}}const Xe=We("utf8","u",t=>"u"+new TextDecoder("utf8").decode(t),t=>new TextEncoder().encode(t.substring(1))),te=We("ascii","a",t=>{let e="a";for(let n=0;n<t.length;n++)e+=String.fromCharCode(t[n]);return e},t=>{t=t.substring(1);const e=Le(t.length);for(let n=0;n<t.length;n++)e[n]=t.charCodeAt(n);return e}),Pe={utf8:Xe,"utf-8":Xe,hex:Ke.base16,latin1:te,ascii:te,binary:te,...Ke};function ct(t,e="utf8"){const n=Pe[e];if(!n)throw new Error(`Unsupported encoding "${e}"`);return(e==="utf8"||e==="utf-8")&&globalThis.Buffer!=null&&globalThis.Buffer.from!=null?globalThis.Buffer.from(t.buffer,t.byteOffset,t.byteLength).toString("utf8"):n.encoder.encode(t).substring(1)}function rt(t,e="utf8"){const n=Pe[e];if(!n)throw new Error(`Unsupported encoding "${e}"`);return(e==="utf8"||e==="utf-8")&&globalThis.Buffer!=null&&globalThis.Buffer.from!=null?Xt(globalThis.Buffer.from(t,"utf-8")):n.decoder.decode(`${n.prefix}${t}`)}function lt(t){return (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonParse)(ct(rt(t,Dt),Gt))}function bt(t){return ct(rt((0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonStringify)(t),Gt),Dt)}function Qe(t){const e=rt(Wt,dt),n=Kt+ct(Oe([e,t]),dt);return[Yt,Jt,n].join(Vt)}function tn(t){const[e,n,r]=t.split(Vt);if(e!==Yt||n!==Jt)throw new Error('Issuer must be a DID with method "key"');if(r.slice(0,1)!==Kt)throw new Error("Issuer must be a key in mulicodec format");const o=rt(r.slice(1),dt);if(ct(o.slice(0,2),dt)!==Wt)throw new Error('Issuer must be a public key with type "Ed25519"');const s=o.slice(2);if(s.length!==Fe)throw new Error("Issuer must be a public key with length 32 bytes");return s}function en(t){return ct(t,Dt)}function nn(t){return rt(t,Dt)}function rn(t){return rt([bt(t.header),bt(t.payload)].join(ut),xt)}function Xo(t){const e=ct(t,xt).split(ut),n=lt(e[0]),r=lt(e[1]);return{header:n,payload:r}}function on(t){return[bt(t.header),bt(t.payload),en(t.signature)].join(ut)}function sn(t){const e=t.split(ut),n=lt(e[0]),r=lt(e[1]),o=nn(e[2]),s=rt(e.slice(0,2).join(ut),xt);return{header:n,payload:r,signature:o,data:s}}function Po(t=he(Ne)){const e=Rt.getPublicKey(t);return{secretKey:Oe([t,e]),publicKey:e}}async function Qo(t,e,n,r,o=(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.fromMiliseconds)(Date.now())){const s={alg:jt,typ:Zt},a=Qe(r.publicKey),u=o+n,i={iss:a,sub:t,aud:e,iat:o,exp:u},D=rn({header:s,payload:i}),c=Rt.sign(D,r.secretKey.slice(0,32));return on({header:s,payload:i,signature:c})}async function ts(t){const{header:e,payload:n,data:r,signature:o}=sn(t);if(e.alg!==jt||e.typ!==Zt)throw new Error("JWT must use EdDSA algorithm");const s=tn(n.iss);return Rt.verify(o,r,s)}
//# sourceMappingURL=index.es.js.map


/***/ }),

/***/ "./node_modules/@walletconnect/relay-auth/node_modules/@walletconnect/safe-json/dist/esm/index.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/@walletconnect/safe-json/dist/esm/index.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   safeJsonParse: () => (/* binding */ safeJsonParse),
/* harmony export */   safeJsonStringify: () => (/* binding */ safeJsonStringify)
/* harmony export */ });
const JSONStringify = data => JSON.stringify(data, (_, value) => typeof value === "bigint" ? value.toString() + "n" : value);
const JSONParse = json => {
    const numbersBiggerThanMaxInt = /([\[:])?(\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\}\]])/g;
    const serializedData = json.replace(numbersBiggerThanMaxInt, "$1\"$2n\"$3");
    return JSON.parse(serializedData, (_, value) => {
        const isCustomFormatBigInt = typeof value === "string" && value.match(/^\d+n$/);
        if (isCustomFormatBigInt)
            return BigInt(value.substring(0, value.length - 1));
        return value;
    });
};
function safeJsonParse(value) {
    if (typeof value !== "string") {
        throw new Error(`Cannot safe json parse value of type ${typeof value}`);
    }
    try {
        return JSONParse(value);
    }
    catch (_a) {
        return value;
    }
}
function safeJsonStringify(value) {
    return typeof value === "string" ? value : JSONStringify(value) || "";
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/dist/index.es.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/dist/index.es.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AUTH_CONTEXT: () => (/* binding */ ft),
/* harmony export */   AUTH_KEYS_CONTEXT: () => (/* binding */ Et),
/* harmony export */   AUTH_PAIRING_TOPIC_CONTEXT: () => (/* binding */ St),
/* harmony export */   AUTH_PROTOCOL: () => (/* binding */ _t),
/* harmony export */   AUTH_PUBLIC_KEY_NAME: () => (/* binding */ pe),
/* harmony export */   AUTH_REQUEST_CONTEXT: () => (/* binding */ Rt),
/* harmony export */   AUTH_STORAGE_PREFIX: () => (/* binding */ le),
/* harmony export */   AUTH_VERSION: () => (/* binding */ Ns),
/* harmony export */   ENGINE_CONTEXT: () => (/* binding */ gt),
/* harmony export */   ENGINE_QUEUE_STATES: () => (/* binding */ M),
/* harmony export */   ENGINE_RPC_OPTS: () => (/* binding */ P),
/* harmony export */   HISTORY_CONTEXT: () => (/* binding */ Ts),
/* harmony export */   HISTORY_EVENTS: () => (/* binding */ Is),
/* harmony export */   HISTORY_STORAGE_VERSION: () => (/* binding */ qs),
/* harmony export */   METHODS_TO_VERIFY: () => (/* binding */ mt),
/* harmony export */   PROPOSAL_CONTEXT: () => (/* binding */ dt),
/* harmony export */   PROPOSAL_EXPIRY: () => (/* binding */ Ps),
/* harmony export */   PROPOSAL_EXPIRY_MESSAGE: () => (/* binding */ Me),
/* harmony export */   REQUEST_CONTEXT: () => (/* binding */ wt),
/* harmony export */   SESSION_CONTEXT: () => (/* binding */ ut),
/* harmony export */   SESSION_EXPIRY: () => (/* binding */ B),
/* harmony export */   SESSION_REQUEST_EXPIRY_BOUNDARIES: () => (/* binding */ _e),
/* harmony export */   SIGN_CLIENT_CONTEXT: () => (/* binding */ De),
/* harmony export */   SIGN_CLIENT_DEFAULT: () => (/* binding */ me),
/* harmony export */   SIGN_CLIENT_EVENTS: () => (/* binding */ Rs),
/* harmony export */   SIGN_CLIENT_PROTOCOL: () => (/* binding */ Ce),
/* harmony export */   SIGN_CLIENT_STORAGE_OPTIONS: () => (/* binding */ vs),
/* harmony export */   SIGN_CLIENT_STORAGE_PREFIX: () => (/* binding */ we),
/* harmony export */   SIGN_CLIENT_VERSION: () => (/* binding */ ke),
/* harmony export */   SessionStore: () => (/* binding */ Qs),
/* harmony export */   SignClient: () => (/* binding */ Hs),
/* harmony export */   TVF_METHODS: () => (/* binding */ yt),
/* harmony export */   WALLETCONNECT_DEEPLINK_CHOICE: () => (/* binding */ Le),
/* harmony export */   "default": () => (/* binding */ fe)
/* harmony export */ });
/* harmony import */ var _walletconnect_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/core */ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/core/dist/index.es.js");
/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/logger */ "./node_modules/@walletconnect/logger/dist/index.es.js");
/* harmony import */ var _walletconnect_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/types */ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/types/dist/index.es.js");
/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/utils */ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/utils/dist/index.es.js");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! events */ "./node_modules/events/events.js");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @walletconnect/time */ "./node_modules/@walletconnect/time/dist/cjs/index.js");
/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js");
const Ce="wc",ke=2,De="client",we=`${Ce}@${ke}:${De}:`,me={name:De,logger:"error",controller:!1,relayUrl:"wss://relay.walletconnect.org"},Rs={session_proposal:"session_proposal",session_update:"session_update",session_extend:"session_extend",session_ping:"session_ping",session_delete:"session_delete",session_expire:"session_expire",session_request:"session_request",session_request_sent:"session_request_sent",session_event:"session_event",proposal_expire:"proposal_expire",session_authenticate:"session_authenticate",session_request_expire:"session_request_expire",session_connect:"session_connect"},vs={database:":memory:"},Le="WALLETCONNECT_DEEPLINK_CHOICE",Is={created:"history_created",updated:"history_updated",deleted:"history_deleted",sync:"history_sync"},Ts="history",qs="0.3",dt="proposal",Ps=_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.THIRTY_DAYS,Me="Proposal expired",ut="session",B=_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.SEVEN_DAYS,gt="engine",P={wc_sessionPropose:{req:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.FIVE_MINUTES,prompt:!0,tag:1100},res:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.FIVE_MINUTES,prompt:!1,tag:1101},reject:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.FIVE_MINUTES,prompt:!1,tag:1120},autoReject:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.FIVE_MINUTES,prompt:!1,tag:1121}},wc_sessionSettle:{req:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.FIVE_MINUTES,prompt:!1,tag:1102},res:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.FIVE_MINUTES,prompt:!1,tag:1103}},wc_sessionUpdate:{req:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.ONE_DAY,prompt:!1,tag:1104},res:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.ONE_DAY,prompt:!1,tag:1105}},wc_sessionExtend:{req:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.ONE_DAY,prompt:!1,tag:1106},res:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.ONE_DAY,prompt:!1,tag:1107}},wc_sessionRequest:{req:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.FIVE_MINUTES,prompt:!0,tag:1108},res:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.FIVE_MINUTES,prompt:!1,tag:1109}},wc_sessionEvent:{req:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.FIVE_MINUTES,prompt:!0,tag:1110},res:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.FIVE_MINUTES,prompt:!1,tag:1111}},wc_sessionDelete:{req:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.ONE_DAY,prompt:!1,tag:1112},res:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.ONE_DAY,prompt:!1,tag:1113}},wc_sessionPing:{req:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.ONE_DAY,prompt:!1,tag:1114},res:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.ONE_DAY,prompt:!1,tag:1115}},wc_sessionAuthenticate:{req:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.ONE_HOUR,prompt:!0,tag:1116},res:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.ONE_HOUR,prompt:!1,tag:1117},reject:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.FIVE_MINUTES,prompt:!1,tag:1118},autoReject:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.FIVE_MINUTES,prompt:!1,tag:1119}}},_e={min:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.FIVE_MINUTES,max:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.SEVEN_DAYS},M={idle:"IDLE",active:"ACTIVE"},yt={eth_sendTransaction:{key:""},eth_sendRawTransaction:{key:""},wallet_sendCalls:{key:""},solana_signTransaction:{key:"signature"},solana_signAllTransactions:{key:"transactions"},solana_signAndSendTransaction:{key:"signature"},sui_signAndExecuteTransaction:{key:"digest"},sui_signTransaction:{key:""},hedera_signAndExecuteTransaction:{key:"transactionId"},hedera_executeTransaction:{key:"transactionId"},near_signTransaction:{key:""},near_signTransactions:{key:""},tron_signTransaction:{key:"txID"},xrpl_signTransaction:{key:""},xrpl_signTransactionFor:{key:""},algo_signTxn:{key:""},sendTransfer:{key:"txid"},stacks_stxTransfer:{key:"txId"},polkadot_signTransaction:{key:""},cosmos_signDirect:{key:""}},wt="request",mt=["wc_sessionPropose","wc_sessionRequest","wc_authRequest","wc_sessionAuthenticate"],_t="wc",Ns=1.5,ft="auth",Et="authKeys",St="pairingTopics",Rt="requests",le=`${_t}@${1.5}:${ft}:`,pe=`${le}:PUB_KEY`;var Os=Object.defineProperty,bs=Object.defineProperties,As=Object.getOwnPropertyDescriptors,vt=Object.getOwnPropertySymbols,xs=Object.prototype.hasOwnProperty,Vs=Object.prototype.propertyIsEnumerable,$e=(E,o,t)=>o in E?Os(E,o,{enumerable:!0,configurable:!0,writable:!0,value:t}):E[o]=t,R=(E,o)=>{for(var t in o||(o={}))xs.call(o,t)&&$e(E,t,o[t]);if(vt)for(var t of vt(o))Vs.call(o,t)&&$e(E,t,o[t]);return E},O=(E,o)=>bs(E,As(o)),c=(E,o,t)=>$e(E,typeof o!="symbol"?o+"":o,t);class Cs extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_2__.IEngine{constructor(o){super(o),c(this,"name",gt),c(this,"events",new (events__WEBPACK_IMPORTED_MODULE_4___default())),c(this,"initialized",!1),c(this,"requestQueue",{state:M.idle,queue:[]}),c(this,"sessionRequestQueue",{state:M.idle,queue:[]}),c(this,"emittedSessionRequests",new _walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.LimitedSet({limit:500})),c(this,"requestQueueDelay",_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.ONE_SECOND),c(this,"expectedPairingMethodMap",new Map),c(this,"recentlyDeletedMap",new Map),c(this,"recentlyDeletedLimit",200),c(this,"relayMessageCache",[]),c(this,"pendingSessions",new Map),c(this,"init",async()=>{this.initialized||(await this.cleanup(),this.registerRelayerEvents(),this.registerExpirerEvents(),this.registerPairingEvents(),await this.registerLinkModeListeners(),this.client.core.pairing.register({methods:Object.keys(P)}),this.initialized=!0,setTimeout(async()=>{await this.processPendingMessageEvents(),this.sessionRequestQueue.queue=this.getPendingSessionRequests(),this.processSessionRequestQueue()},(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.toMiliseconds)(this.requestQueueDelay)))}),c(this,"connect",async t=>{this.isInitialized(),await this.confirmOnlineStateOrThrow();const e=O(R({},t),{requiredNamespaces:t.requiredNamespaces||{},optionalNamespaces:t.optionalNamespaces||{}});await this.isValidConnect(e),e.optionalNamespaces=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.mergeRequiredAndOptionalNamespaces)(e.requiredNamespaces,e.optionalNamespaces),e.requiredNamespaces={};const{pairingTopic:s,requiredNamespaces:i,optionalNamespaces:r,sessionProperties:n,scopedProperties:a,relays:l}=e;let p=s,h,u=!1;try{if(p){const T=this.client.core.pairing.pairings.get(p);this.client.logger.warn("connect() with existing pairing topic is deprecated and will be removed in the next major release."),u=T.active}}catch(T){throw this.client.logger.error(`connect() -> pairing.get(${p}) failed`),T}if(!p||!u){const{topic:T,uri:$}=await this.client.core.pairing.create({internal:{skipSubscribe:!0}});p=T,h=$}if(!p){const{message:T}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("NO_MATCHING_KEY",`connect() pairing topic: ${p}`);throw new Error(T)}const d=await this.client.core.crypto.generateKeyPair(),y=P.wc_sessionPropose.req.ttl||_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.FIVE_MINUTES,w=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.calcExpiry)(y),m=O(R(R({requiredNamespaces:i,optionalNamespaces:r,relays:l??[{protocol:_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.RELAYER_DEFAULT_PROTOCOL}],proposer:{publicKey:d,metadata:this.client.metadata},expiryTimestamp:w,pairingTopic:p},n&&{sessionProperties:n}),a&&{scopedProperties:a}),{id:(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.payloadId)()}),S=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.engineEvent)("session_connect",m.id),{reject:_,resolve:b,done:C}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.createDelayedPromise)(y,Me),I=({id:T})=>{T===m.id&&(this.client.events.off("proposal_expire",I),this.pendingSessions.delete(m.id),this.events.emit(S,{error:{message:Me,code:0}}))};return this.client.events.on("proposal_expire",I),this.events.once(S,({error:T,session:$})=>{this.client.events.off("proposal_expire",I),T?_(T):$&&b($)}),await this.sendProposeSession({proposal:m,publishOpts:{internal:{throwOnFailedPublish:!0},tvf:{correlationId:m.id}}}),await this.setProposal(m.id,m),{uri:h,approval:C}}),c(this,"pair",async t=>{this.isInitialized(),await this.confirmOnlineStateOrThrow();try{return await this.client.core.pairing.pair(t)}catch(e){throw this.client.logger.error("pair() failed"),e}}),c(this,"approve",async t=>{var e,s,i;const r=this.client.core.eventClient.createEvent({properties:{topic:(e=t?.id)==null?void 0:e.toString(),trace:[_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EVENT_CLIENT_SESSION_TRACES.session_approve_started]}});try{this.isInitialized(),await this.confirmOnlineStateOrThrow()}catch(N){throw r.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EVENT_CLIENT_SESSION_ERRORS.no_internet_connection),N}try{await this.isValidProposalId(t?.id)}catch(N){throw this.client.logger.error(`approve() -> proposal.get(${t?.id}) failed`),r.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EVENT_CLIENT_SESSION_ERRORS.proposal_not_found),N}try{await this.isValidApprove(t)}catch(N){throw this.client.logger.error("approve() -> isValidApprove() failed"),r.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EVENT_CLIENT_SESSION_ERRORS.session_approve_namespace_validation_failure),N}const{id:n,relayProtocol:a,namespaces:l,sessionProperties:p,scopedProperties:h,sessionConfig:u}=t,d=this.client.proposal.get(n);this.client.core.eventClient.deleteEvent({eventId:r.eventId});const{pairingTopic:y,proposer:w,requiredNamespaces:m,optionalNamespaces:S}=d;let _=(s=this.client.core.eventClient)==null?void 0:s.getEvent({topic:y});_||(_=(i=this.client.core.eventClient)==null?void 0:i.createEvent({type:_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EVENT_CLIENT_SESSION_TRACES.session_approve_started,properties:{topic:y,trace:[_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EVENT_CLIENT_SESSION_TRACES.session_approve_started,_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EVENT_CLIENT_SESSION_TRACES.session_namespaces_validation_success]}}));const b=await this.client.core.crypto.generateKeyPair(),C=w.publicKey,I=await this.client.core.crypto.generateSharedKey(b,C),T=R(R(R({relay:{protocol:a??"irn"},namespaces:l,controller:{publicKey:b,metadata:this.client.metadata},expiry:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.calcExpiry)(B)},p&&{sessionProperties:p}),h&&{scopedProperties:h}),u&&{sessionConfig:u}),$=_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.TRANSPORT_TYPES.relay;_.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EVENT_CLIENT_SESSION_TRACES.subscribing_session_topic);try{await this.client.core.relayer.subscribe(I,{transportType:$,internal:{skipSubscribe:!0}})}catch(N){throw _.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EVENT_CLIENT_SESSION_ERRORS.subscribe_session_topic_failure),N}_.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EVENT_CLIENT_SESSION_TRACES.subscribe_session_topic_success);const Ee=O(R({},T),{topic:I,requiredNamespaces:m,optionalNamespaces:S,pairingTopic:y,acknowledged:!1,self:T.controller,peer:{publicKey:w.publicKey,metadata:w.metadata},controller:b,transportType:_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.TRANSPORT_TYPES.relay});await this.client.session.set(I,Ee),_.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EVENT_CLIENT_SESSION_TRACES.store_session);try{await this.sendApproveSession({sessionTopic:I,proposal:d,pairingProposalResponse:{relay:{protocol:a??"irn"},responderPublicKey:b},sessionSettleRequest:T,publishOpts:{internal:{throwOnFailedPublish:!0},tvf:{correlationId:n}}}),_.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EVENT_CLIENT_SESSION_TRACES.session_approve_publish_success)}catch(N){throw this.client.logger.error(N),this.client.session.delete(I,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getSdkError)("USER_DISCONNECTED")),await this.client.core.relayer.unsubscribe(I),N}return this.client.core.eventClient.deleteEvent({eventId:_.eventId}),await this.client.core.pairing.updateMetadata({topic:y,metadata:w.metadata}),await this.deleteProposal(n),await this.client.core.pairing.activate({topic:y}),await this.setExpiry(I,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.calcExpiry)(B)),{topic:I,acknowledged:()=>Promise.resolve(this.client.session.get(I))}}),c(this,"reject",async t=>{this.isInitialized(),await this.confirmOnlineStateOrThrow();try{await this.isValidReject(t)}catch(r){throw this.client.logger.error("reject() -> isValidReject() failed"),r}const{id:e,reason:s}=t;let i;try{i=this.client.proposal.get(e).pairingTopic}catch(r){throw this.client.logger.error(`reject() -> proposal.get(${e}) failed`),r}i&&await this.sendError({id:e,topic:i,error:s,rpcOpts:P.wc_sessionPropose.reject}),await this.deleteProposal(e)}),c(this,"update",async t=>{this.isInitialized(),await this.confirmOnlineStateOrThrow();try{await this.isValidUpdate(t)}catch(h){throw this.client.logger.error("update() -> isValidUpdate() failed"),h}const{topic:e,namespaces:s}=t,{done:i,resolve:r,reject:n}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.createDelayedPromise)(),a=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.payloadId)(),l=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.getBigIntRpcId)().toString(),p=this.client.session.get(e).namespaces;return this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.engineEvent)("session_update",a),({error:h})=>{h?n(h):r()}),await this.client.session.update(e,{namespaces:s}),await this.sendRequest({topic:e,method:"wc_sessionUpdate",params:{namespaces:s},throwOnFailedPublish:!0,clientRpcId:a,relayRpcId:l}).catch(h=>{this.client.logger.error(h),this.client.session.update(e,{namespaces:p}),n(h)}),{acknowledged:i}}),c(this,"extend",async t=>{this.isInitialized(),await this.confirmOnlineStateOrThrow();try{await this.isValidExtend(t)}catch(a){throw this.client.logger.error("extend() -> isValidExtend() failed"),a}const{topic:e}=t,s=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.payloadId)(),{done:i,resolve:r,reject:n}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.createDelayedPromise)();return this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.engineEvent)("session_extend",s),({error:a})=>{a?n(a):r()}),await this.setExpiry(e,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.calcExpiry)(B)),this.sendRequest({topic:e,method:"wc_sessionExtend",params:{},clientRpcId:s,throwOnFailedPublish:!0}).catch(a=>{n(a)}),{acknowledged:i}}),c(this,"request",async t=>{this.isInitialized();try{await this.isValidRequest(t)}catch(m){throw this.client.logger.error("request() -> isValidRequest() failed"),m}const{chainId:e,request:s,topic:i,expiry:r=P.wc_sessionRequest.req.ttl}=t,n=this.client.session.get(i);n?.transportType===_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.TRANSPORT_TYPES.relay&&await this.confirmOnlineStateOrThrow();const a=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.payloadId)(),l=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.getBigIntRpcId)().toString(),{done:p,resolve:h,reject:u}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.createDelayedPromise)(r,"Request expired. Please try again.");this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.engineEvent)("session_request",a),({error:m,result:S})=>{m?u(m):h(S)});const d="wc_sessionRequest",y=this.getAppLinkIfEnabled(n.peer.metadata,n.transportType);if(y)return await this.sendRequest({clientRpcId:a,relayRpcId:l,topic:i,method:d,params:{request:O(R({},s),{expiryTimestamp:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.calcExpiry)(r)}),chainId:e},expiry:r,throwOnFailedPublish:!0,appLink:y}).catch(m=>u(m)),this.client.events.emit("session_request_sent",{topic:i,request:s,chainId:e,id:a}),await p();const w={request:O(R({},s),{expiryTimestamp:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.calcExpiry)(r)}),chainId:e};return await Promise.all([new Promise(async m=>{await this.sendRequest({clientRpcId:a,relayRpcId:l,topic:i,method:d,params:w,expiry:r,throwOnFailedPublish:!0,tvf:this.getTVFParams(a,w)}).catch(S=>u(S)),this.client.events.emit("session_request_sent",{topic:i,request:s,chainId:e,id:a}),m()}),new Promise(async m=>{var S;if(!((S=n.sessionConfig)!=null&&S.disableDeepLink)){const _=await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getDeepLink)(this.client.core.storage,Le);await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.handleDeeplinkRedirect)({id:a,topic:i,wcDeepLink:_})}m()}),p()]).then(m=>m[2])}),c(this,"respond",async t=>{this.isInitialized(),await this.isValidRespond(t);const{topic:e,response:s}=t,{id:i}=s,r=this.client.session.get(e);r.transportType===_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.TRANSPORT_TYPES.relay&&await this.confirmOnlineStateOrThrow();const n=this.getAppLinkIfEnabled(r.peer.metadata,r.transportType);(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.isJsonRpcResult)(s)?await this.sendResult({id:i,topic:e,result:s.result,throwOnFailedPublish:!0,appLink:n}):(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.isJsonRpcError)(s)&&await this.sendError({id:i,topic:e,error:s.error,appLink:n}),this.cleanupAfterResponse(t)}),c(this,"ping",async t=>{this.isInitialized(),await this.confirmOnlineStateOrThrow();try{await this.isValidPing(t)}catch(s){throw this.client.logger.error("ping() -> isValidPing() failed"),s}const{topic:e}=t;if(this.client.session.keys.includes(e)){const s=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.payloadId)(),i=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.getBigIntRpcId)().toString(),{done:r,resolve:n,reject:a}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.createDelayedPromise)();this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.engineEvent)("session_ping",s),({error:l})=>{l?a(l):n()}),await Promise.all([this.sendRequest({topic:e,method:"wc_sessionPing",params:{},throwOnFailedPublish:!0,clientRpcId:s,relayRpcId:i}),r()])}else this.client.core.pairing.pairings.keys.includes(e)&&(this.client.logger.warn("ping() on pairing topic is deprecated and will be removed in the next major release."),await this.client.core.pairing.ping({topic:e}))}),c(this,"emit",async t=>{this.isInitialized(),await this.confirmOnlineStateOrThrow(),await this.isValidEmit(t);const{topic:e,event:s,chainId:i}=t,r=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.getBigIntRpcId)().toString(),n=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.payloadId)();await this.sendRequest({topic:e,method:"wc_sessionEvent",params:{event:s,chainId:i},throwOnFailedPublish:!0,relayRpcId:r,clientRpcId:n})}),c(this,"disconnect",async t=>{this.isInitialized(),await this.confirmOnlineStateOrThrow(),await this.isValidDisconnect(t);const{topic:e}=t;if(this.client.session.keys.includes(e))await this.sendRequest({topic:e,method:"wc_sessionDelete",params:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getSdkError)("USER_DISCONNECTED"),throwOnFailedPublish:!0}),await this.deleteSession({topic:e,emitEvent:!1});else if(this.client.core.pairing.pairings.keys.includes(e))await this.client.core.pairing.disconnect({topic:e});else{const{message:s}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISMATCHED_TOPIC",`Session or pairing topic not found: ${e}`);throw new Error(s)}}),c(this,"find",t=>(this.isInitialized(),this.client.session.getAll().filter(e=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isSessionCompatible)(e,t)))),c(this,"getPendingSessionRequests",()=>this.client.pendingRequest.getAll()),c(this,"authenticate",async(t,e)=>{var s;this.isInitialized(),this.isValidAuthenticate(t);const i=e&&this.client.core.linkModeSupportedApps.includes(e)&&((s=this.client.metadata.redirect)==null?void 0:s.linkMode),r=i?_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.TRANSPORT_TYPES.link_mode:_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.TRANSPORT_TYPES.relay;r===_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.TRANSPORT_TYPES.relay&&await this.confirmOnlineStateOrThrow();const{chains:n,statement:a="",uri:l,domain:p,nonce:h,type:u,exp:d,nbf:y,methods:w=[],expiry:m}=t,S=[...t.resources||[]],{topic:_,uri:b}=await this.client.core.pairing.create({methods:["wc_sessionAuthenticate"],transportType:r});this.client.logger.info({message:"Generated new pairing",pairing:{topic:_,uri:b}});const C=await this.client.core.crypto.generateKeyPair(),I=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.hashKey)(C);if(await Promise.all([this.client.auth.authKeys.set(pe,{responseTopic:I,publicKey:C}),this.client.auth.pairingTopics.set(I,{topic:I,pairingTopic:_})]),await this.client.core.relayer.subscribe(I,{transportType:r}),this.client.logger.info(`sending request to new pairing topic: ${_}`),w.length>0){const{namespace:A}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.parseChainId)(n[0]);let k=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.createEncodedRecap)(A,"request",w);(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getRecapFromResources)(S)&&(k=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.mergeEncodedRecaps)(k,S.pop())),S.push(k)}const T=m&&m>P.wc_sessionAuthenticate.req.ttl?m:P.wc_sessionAuthenticate.req.ttl,$={authPayload:{type:u??"caip122",chains:n,statement:a,aud:l,domain:p,version:"1",nonce:h,iat:new Date().toISOString(),exp:d,nbf:y,resources:S},requester:{publicKey:C,metadata:this.client.metadata},expiryTimestamp:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.calcExpiry)(T)},Ee={eip155:{chains:n,methods:[...new Set(["personal_sign",...w])],events:["chainChanged","accountsChanged"]}},N={requiredNamespaces:{},optionalNamespaces:Ee,relays:[{protocol:"irn"}],pairingTopic:_,proposer:{publicKey:C,metadata:this.client.metadata},expiryTimestamp:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.calcExpiry)(P.wc_sessionPropose.req.ttl),id:(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.payloadId)()},{done:Tt,resolve:Ue,reject:Se}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.createDelayedPromise)(T,"Request expired"),se=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.payloadId)(),he=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.engineEvent)("session_connect",N.id),Re=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.engineEvent)("session_request",se),de=async({error:A,session:k})=>{this.events.off(Re,ve),A?Se(A):k&&Ue({session:k})},ve=async A=>{var k,Ge,je;if(await this.deletePendingAuthRequest(se,{message:"fulfilled",code:0}),A.error){const re=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getSdkError)("WC_METHOD_UNSUPPORTED","wc_sessionAuthenticate");return A.error.code===re.code?void 0:(this.events.off(he,de),Se(A.error.message))}await this.deleteProposal(N.id),this.events.off(he,de);const{cacaos:Fe,responder:H}=A.result,Te=[],Qe=[];for(const re of Fe){await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.validateSignedCacao)({cacao:re,projectId:this.client.core.projectId})||(this.client.logger.error(re,"Signature verification failed"),Se((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getSdkError)("SESSION_SETTLEMENT_FAILED","Signature verification failed")));const{p:qe}=re,Pe=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getRecapFromResources)(qe.resources),He=[(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getNamespacedDidChainId)(qe.iss)],qt=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getDidAddress)(qe.iss);if(Pe){const Ne=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getMethodsFromRecap)(Pe),Pt=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getChainsFromRecap)(Pe);Te.push(...Ne),He.push(...Pt)}for(const Ne of He)Qe.push(`${Ne}:${qt}`)}const ie=await this.client.core.crypto.generateSharedKey(C,H.publicKey);let ue;Te.length>0&&(ue={topic:ie,acknowledged:!0,self:{publicKey:C,metadata:this.client.metadata},peer:H,controller:H.publicKey,expiry:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.calcExpiry)(B),requiredNamespaces:{},optionalNamespaces:{},relay:{protocol:"irn"},pairingTopic:_,namespaces:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.buildNamespacesFromAuth)([...new Set(Te)],[...new Set(Qe)]),transportType:r},await this.client.core.relayer.subscribe(ie,{transportType:r}),await this.client.session.set(ie,ue),_&&await this.client.core.pairing.updateMetadata({topic:_,metadata:H.metadata}),ue=this.client.session.get(ie)),(k=this.client.metadata.redirect)!=null&&k.linkMode&&(Ge=H.metadata.redirect)!=null&&Ge.linkMode&&(je=H.metadata.redirect)!=null&&je.universal&&e&&(this.client.core.addLinkModeSupportedApp(H.metadata.redirect.universal),this.client.session.update(ie,{transportType:_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.TRANSPORT_TYPES.link_mode})),Ue({auths:Fe,session:ue})};this.events.once(he,de),this.events.once(Re,ve);let Ie;try{if(i){const A=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.formatJsonRpcRequest)("wc_sessionAuthenticate",$,se);this.client.core.history.set(_,A);const k=await this.client.core.crypto.encode("",A,{type:_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.TYPE_2,encoding:_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.BASE64URL});Ie=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getLinkModeURL)(e,_,k)}else await Promise.all([this.sendRequest({topic:_,method:"wc_sessionAuthenticate",params:$,expiry:t.expiry,throwOnFailedPublish:!0,clientRpcId:se}),this.sendRequest({topic:_,method:"wc_sessionPropose",params:N,expiry:P.wc_sessionPropose.req.ttl,throwOnFailedPublish:!0,clientRpcId:N.id})])}catch(A){throw this.events.off(he,de),this.events.off(Re,ve),A}return await this.setProposal(N.id,N),await this.setAuthRequest(se,{request:O(R({},$),{verifyContext:{}}),pairingTopic:_,transportType:r}),{uri:Ie??b,response:Tt}}),c(this,"approveSessionAuthenticate",async t=>{const{id:e,auths:s}=t,i=this.client.core.eventClient.createEvent({properties:{topic:e.toString(),trace:[_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EVENT_CLIENT_AUTHENTICATE_TRACES.authenticated_session_approve_started]}});try{this.isInitialized()}catch(m){throw i.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EVENT_CLIENT_AUTHENTICATE_ERRORS.no_internet_connection),m}const r=this.getPendingAuthRequest(e);if(!r)throw i.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EVENT_CLIENT_AUTHENTICATE_ERRORS.authenticated_session_pending_request_not_found),new Error(`Could not find pending auth request with id ${e}`);const n=r.transportType||_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.TRANSPORT_TYPES.relay;n===_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.TRANSPORT_TYPES.relay&&await this.confirmOnlineStateOrThrow();const a=r.requester.publicKey,l=await this.client.core.crypto.generateKeyPair(),p=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.hashKey)(a),h={type:_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.TYPE_1,receiverPublicKey:a,senderPublicKey:l},u=[],d=[];for(const m of s){if(!await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.validateSignedCacao)({cacao:m,projectId:this.client.core.projectId})){i.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EVENT_CLIENT_AUTHENTICATE_ERRORS.invalid_cacao);const I=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getSdkError)("SESSION_SETTLEMENT_FAILED","Signature verification failed");throw await this.sendError({id:e,topic:p,error:I,encodeOpts:h}),new Error(I.message)}i.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EVENT_CLIENT_AUTHENTICATE_TRACES.cacaos_verified);const{p:S}=m,_=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getRecapFromResources)(S.resources),b=[(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getNamespacedDidChainId)(S.iss)],C=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getDidAddress)(S.iss);if(_){const I=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getMethodsFromRecap)(_),T=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getChainsFromRecap)(_);u.push(...I),b.push(...T)}for(const I of b)d.push(`${I}:${C}`)}const y=await this.client.core.crypto.generateSharedKey(l,a);i.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EVENT_CLIENT_AUTHENTICATE_TRACES.create_authenticated_session_topic);let w;if(u?.length>0){w={topic:y,acknowledged:!0,self:{publicKey:l,metadata:this.client.metadata},peer:{publicKey:a,metadata:r.requester.metadata},controller:a,expiry:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.calcExpiry)(B),authentication:s,requiredNamespaces:{},optionalNamespaces:{},relay:{protocol:"irn"},pairingTopic:r.pairingTopic,namespaces:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.buildNamespacesFromAuth)([...new Set(u)],[...new Set(d)]),transportType:n},i.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EVENT_CLIENT_AUTHENTICATE_TRACES.subscribing_authenticated_session_topic);try{await this.client.core.relayer.subscribe(y,{transportType:n})}catch(m){throw i.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EVENT_CLIENT_AUTHENTICATE_ERRORS.subscribe_authenticated_session_topic_failure),m}i.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EVENT_CLIENT_AUTHENTICATE_TRACES.subscribe_authenticated_session_topic_success),await this.client.session.set(y,w),i.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EVENT_CLIENT_AUTHENTICATE_TRACES.store_authenticated_session),await this.client.core.pairing.updateMetadata({topic:r.pairingTopic,metadata:r.requester.metadata})}i.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EVENT_CLIENT_AUTHENTICATE_TRACES.publishing_authenticated_session_approve);try{await this.sendResult({topic:p,id:e,result:{cacaos:s,responder:{publicKey:l,metadata:this.client.metadata}},encodeOpts:h,throwOnFailedPublish:!0,appLink:this.getAppLinkIfEnabled(r.requester.metadata,n)})}catch(m){throw i.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EVENT_CLIENT_AUTHENTICATE_ERRORS.authenticated_session_approve_publish_failure),m}return await this.client.auth.requests.delete(e,{message:"fulfilled",code:0}),await this.client.core.pairing.activate({topic:r.pairingTopic}),this.client.core.eventClient.deleteEvent({eventId:i.eventId}),{session:w}}),c(this,"rejectSessionAuthenticate",async t=>{this.isInitialized();const{id:e,reason:s}=t,i=this.getPendingAuthRequest(e);if(!i)throw new Error(`Could not find pending auth request with id ${e}`);i.transportType===_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.TRANSPORT_TYPES.relay&&await this.confirmOnlineStateOrThrow();const r=i.requester.publicKey,n=await this.client.core.crypto.generateKeyPair(),a=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.hashKey)(r),l={type:_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.TYPE_1,receiverPublicKey:r,senderPublicKey:n};await this.sendError({id:e,topic:a,error:s,encodeOpts:l,rpcOpts:P.wc_sessionAuthenticate.reject,appLink:this.getAppLinkIfEnabled(i.requester.metadata,i.transportType)}),await this.client.auth.requests.delete(e,{message:"rejected",code:0}),await this.deleteProposal(e)}),c(this,"formatAuthMessage",t=>{this.isInitialized();const{request:e,iss:s}=t;return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.formatMessage)(e,s)}),c(this,"processRelayMessageCache",()=>{setTimeout(async()=>{if(this.relayMessageCache.length!==0)for(;this.relayMessageCache.length>0;)try{const t=this.relayMessageCache.shift();t&&await this.onRelayMessage(t)}catch(t){this.client.logger.error(t)}},50)}),c(this,"cleanupDuplicatePairings",async t=>{if(t.pairingTopic)try{const e=this.client.core.pairing.pairings.get(t.pairingTopic),s=this.client.core.pairing.pairings.getAll().filter(i=>{var r,n;return((r=i.peerMetadata)==null?void 0:r.url)&&((n=i.peerMetadata)==null?void 0:n.url)===t.peer.metadata.url&&i.topic&&i.topic!==e.topic});if(s.length===0)return;this.client.logger.info(`Cleaning up ${s.length} duplicate pairing(s)`),await Promise.all(s.map(i=>this.client.core.pairing.disconnect({topic:i.topic}))),this.client.logger.info("Duplicate pairings clean up finished")}catch(e){this.client.logger.error(e)}}),c(this,"deleteSession",async t=>{var e;const{topic:s,expirerHasDeleted:i=!1,emitEvent:r=!0,id:n=0}=t,{self:a}=this.client.session.get(s);await this.client.core.relayer.unsubscribe(s),await this.client.session.delete(s,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getSdkError)("USER_DISCONNECTED")),this.addToRecentlyDeleted(s,"session"),this.client.core.crypto.keychain.has(a.publicKey)&&await this.client.core.crypto.deleteKeyPair(a.publicKey),this.client.core.crypto.keychain.has(s)&&await this.client.core.crypto.deleteSymKey(s),i||this.client.core.expirer.del(s),this.client.core.storage.removeItem(Le).catch(l=>this.client.logger.warn(l)),this.getPendingSessionRequests().forEach(l=>{l.topic===s&&this.deletePendingSessionRequest(l.id,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getSdkError)("USER_DISCONNECTED"))}),s===((e=this.sessionRequestQueue.queue[0])==null?void 0:e.topic)&&(this.sessionRequestQueue.state=M.idle),r&&this.client.events.emit("session_delete",{id:n,topic:s})}),c(this,"deleteProposal",async(t,e)=>{if(e)try{const s=this.client.proposal.get(t),i=this.client.core.eventClient.getEvent({topic:s.pairingTopic});i?.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EVENT_CLIENT_SESSION_ERRORS.proposal_expired)}catch{}await Promise.all([this.client.proposal.delete(t,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getSdkError)("USER_DISCONNECTED")),e?Promise.resolve():this.client.core.expirer.del(t)]),this.addToRecentlyDeleted(t,"proposal")}),c(this,"deletePendingSessionRequest",async(t,e,s=!1)=>{await Promise.all([this.client.pendingRequest.delete(t,e),s?Promise.resolve():this.client.core.expirer.del(t)]),this.addToRecentlyDeleted(t,"request"),this.sessionRequestQueue.queue=this.sessionRequestQueue.queue.filter(i=>i.id!==t),s&&(this.sessionRequestQueue.state=M.idle,this.client.events.emit("session_request_expire",{id:t}))}),c(this,"deletePendingAuthRequest",async(t,e,s=!1)=>{await Promise.all([this.client.auth.requests.delete(t,e),s?Promise.resolve():this.client.core.expirer.del(t)])}),c(this,"setExpiry",async(t,e)=>{this.client.session.keys.includes(t)&&(this.client.core.expirer.set(t,e),await this.client.session.update(t,{expiry:e}))}),c(this,"setProposal",async(t,e)=>{this.client.core.expirer.set(t,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.calcExpiry)(P.wc_sessionPropose.req.ttl)),await this.client.proposal.set(t,e)}),c(this,"setAuthRequest",async(t,e)=>{const{request:s,pairingTopic:i,transportType:r=_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.TRANSPORT_TYPES.relay}=e;this.client.core.expirer.set(t,s.expiryTimestamp),await this.client.auth.requests.set(t,{authPayload:s.authPayload,requester:s.requester,expiryTimestamp:s.expiryTimestamp,id:t,pairingTopic:i,verifyContext:s.verifyContext,transportType:r})}),c(this,"setPendingSessionRequest",async t=>{const{id:e,topic:s,params:i,verifyContext:r}=t,n=i.request.expiryTimestamp||(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.calcExpiry)(P.wc_sessionRequest.req.ttl);this.client.core.expirer.set(e,n),await this.client.pendingRequest.set(e,{id:e,topic:s,params:i,verifyContext:r})}),c(this,"sendRequest",async t=>{const{topic:e,method:s,params:i,expiry:r,relayRpcId:n,clientRpcId:a,throwOnFailedPublish:l,appLink:p,tvf:h,publishOpts:u={}}=t,d=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.formatJsonRpcRequest)(s,i,a);let y;const w=!!p;try{const _=w?_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.BASE64URL:_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.BASE64;y=await this.client.core.crypto.encode(e,d,{encoding:_})}catch(_){throw await this.cleanup(),this.client.logger.error(`sendRequest() -> core.crypto.encode() for topic ${e} failed`),_}let m;if(mt.includes(s)){const _=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.hashMessage)(JSON.stringify(d)),b=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.hashMessage)(y);m=await this.client.core.verify.register({id:b,decryptedId:_})}const S=R(R({},P[s].req),u);if(S.attestation=m,r&&(S.ttl=r),n&&(S.id=n),this.client.core.history.set(e,d),w){const _=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getLinkModeURL)(p,e,y);await __webpack_require__.g.Linking.openURL(_,this.client.name)}else S.tvf=O(R({},h),{correlationId:d.id}),l?(S.internal=O(R({},S.internal),{throwOnFailedPublish:!0}),await this.client.core.relayer.publish(e,y,S)):this.client.core.relayer.publish(e,y,S).catch(_=>this.client.logger.error(_));return d.id}),c(this,"sendProposeSession",async t=>{const{proposal:e,publishOpts:s}=t,i=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.formatJsonRpcRequest)("wc_sessionPropose",e,e.id);this.client.core.history.set(e.pairingTopic,i);const r=await this.client.core.crypto.encode(e.pairingTopic,i,{encoding:_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.BASE64}),n=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.hashMessage)(JSON.stringify(i)),a=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.hashMessage)(r),l=await this.client.core.verify.register({id:a,decryptedId:n});await this.client.core.relayer.publishCustom({payload:{pairingTopic:e.pairingTopic,sessionProposal:r},opts:O(R({},s),{publishMethod:"wc_proposeSession",attestation:l})})}),c(this,"sendApproveSession",async t=>{const{sessionTopic:e,pairingProposalResponse:s,proposal:i,sessionSettleRequest:r,publishOpts:n}=t,a=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.formatJsonRpcResult)(i.id,s),l=await this.client.core.crypto.encode(i.pairingTopic,a,{encoding:_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.BASE64}),p=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.formatJsonRpcRequest)("wc_sessionSettle",r,n?.id),h=await this.client.core.crypto.encode(e,p,{encoding:_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.BASE64});this.client.core.history.set(e,p),await this.client.core.relayer.publishCustom({payload:{sessionTopic:e,pairingTopic:i.pairingTopic,sessionProposalResponse:l,sessionSettlementRequest:h},opts:O(R({},n),{publishMethod:"wc_approveSession"})})}),c(this,"sendResult",async t=>{const{id:e,topic:s,result:i,throwOnFailedPublish:r,encodeOpts:n,appLink:a}=t,l=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.formatJsonRpcResult)(e,i);let p;const h=a&&typeof(__webpack_require__.g==null?void 0:__webpack_require__.g.Linking)<"u";try{const y=h?_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.BASE64URL:_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.BASE64;p=await this.client.core.crypto.encode(s,l,O(R({},n||{}),{encoding:y}))}catch(y){throw await this.cleanup(),this.client.logger.error(`sendResult() -> core.crypto.encode() for topic ${s} failed`),y}let u,d;try{u=await this.client.core.history.get(s,e);const y=u.request;try{d=this.getTVFParams(e,y.params,i)}catch(w){this.client.logger.warn(`sendResult() -> getTVFParams() failed: ${w?.message}`)}}catch(y){throw this.client.logger.error(`sendResult() -> history.get(${s}, ${e}) failed`),y}if(h){const y=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getLinkModeURL)(a,s,p);await __webpack_require__.g.Linking.openURL(y,this.client.name)}else{const y=u.request.method,w=P[y].res;w.tvf=O(R({},d),{correlationId:e}),r?(w.internal=O(R({},w.internal),{throwOnFailedPublish:!0}),await this.client.core.relayer.publish(s,p,w)):this.client.core.relayer.publish(s,p,w).catch(m=>this.client.logger.error(m))}await this.client.core.history.resolve(l)}),c(this,"sendError",async t=>{const{id:e,topic:s,error:i,encodeOpts:r,rpcOpts:n,appLink:a}=t,l=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.formatJsonRpcError)(e,i);let p;const h=a&&typeof(__webpack_require__.g==null?void 0:__webpack_require__.g.Linking)<"u";try{const d=h?_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.BASE64URL:_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.BASE64;p=await this.client.core.crypto.encode(s,l,O(R({},r||{}),{encoding:d}))}catch(d){throw await this.cleanup(),this.client.logger.error(`sendError() -> core.crypto.encode() for topic ${s} failed`),d}let u;try{u=await this.client.core.history.get(s,e)}catch(d){throw this.client.logger.error(`sendError() -> history.get(${s}, ${e}) failed`),d}if(h){const d=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getLinkModeURL)(a,s,p);await __webpack_require__.g.Linking.openURL(d,this.client.name)}else{const d=u.request.method,y=n||P[d].res;this.client.core.relayer.publish(s,p,y)}await this.client.core.history.resolve(l)}),c(this,"cleanup",async()=>{const t=[],e=[];this.client.session.getAll().forEach(s=>{let i=!1;(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isExpired)(s.expiry)&&(i=!0),this.client.core.crypto.keychain.has(s.topic)||(i=!0),i&&t.push(s.topic)}),this.client.proposal.getAll().forEach(s=>{(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isExpired)(s.expiryTimestamp)&&e.push(s.id)}),await Promise.all([...t.map(s=>this.deleteSession({topic:s})),...e.map(s=>this.deleteProposal(s))])}),c(this,"onProviderMessageEvent",async t=>{!this.initialized||this.relayMessageCache.length>0?this.relayMessageCache.push(t):await this.onRelayMessage(t)}),c(this,"onRelayEventRequest",async t=>{this.requestQueue.queue.push(t),await this.processRequestsQueue()}),c(this,"processRequestsQueue",async()=>{if(this.requestQueue.state===M.active){this.client.logger.info("Request queue already active, skipping...");return}for(this.client.logger.info(`Request queue starting with ${this.requestQueue.queue.length} requests`);this.requestQueue.queue.length>0;){this.requestQueue.state=M.active;const t=this.requestQueue.queue.shift();if(t)try{await this.processRequest(t)}catch(e){this.client.logger.warn(e)}}this.requestQueue.state=M.idle}),c(this,"processRequest",async t=>{const{topic:e,payload:s,attestation:i,transportType:r,encryptedId:n}=t,a=s.method;if(!this.shouldIgnorePairingRequest({topic:e,requestMethod:a}))switch(a){case"wc_sessionPropose":return await this.onSessionProposeRequest({topic:e,payload:s,attestation:i,encryptedId:n});case"wc_sessionSettle":return await this.onSessionSettleRequest(e,s);case"wc_sessionUpdate":return await this.onSessionUpdateRequest(e,s);case"wc_sessionExtend":return await this.onSessionExtendRequest(e,s);case"wc_sessionPing":return await this.onSessionPingRequest(e,s);case"wc_sessionDelete":return await this.onSessionDeleteRequest(e,s);case"wc_sessionRequest":return await this.onSessionRequest({topic:e,payload:s,attestation:i,encryptedId:n,transportType:r});case"wc_sessionEvent":return await this.onSessionEventRequest(e,s);case"wc_sessionAuthenticate":return await this.onSessionAuthenticateRequest({topic:e,payload:s,attestation:i,encryptedId:n,transportType:r});default:return this.client.logger.info(`Unsupported request method ${a}`)}}),c(this,"onRelayEventResponse",async t=>{const{topic:e,payload:s,transportType:i}=t,r=(await this.client.core.history.get(e,s.id)).request.method;switch(r){case"wc_sessionPropose":return this.onSessionProposeResponse(e,s,i);case"wc_sessionSettle":return this.onSessionSettleResponse(e,s);case"wc_sessionUpdate":return this.onSessionUpdateResponse(e,s);case"wc_sessionExtend":return this.onSessionExtendResponse(e,s);case"wc_sessionPing":return this.onSessionPingResponse(e,s);case"wc_sessionRequest":return this.onSessionRequestResponse(e,s);case"wc_sessionAuthenticate":return this.onSessionAuthenticateResponse(e,s);default:return this.client.logger.info(`Unsupported response method ${r}`)}}),c(this,"onRelayEventUnknownPayload",t=>{const{topic:e}=t,{message:s}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`Decoded payload on topic ${e} is not identifiable as a JSON-RPC request or a response.`);throw new Error(s)}),c(this,"shouldIgnorePairingRequest",t=>{const{topic:e,requestMethod:s}=t,i=this.expectedPairingMethodMap.get(e);return!i||i.includes(s)?!1:!!(i.includes("wc_sessionAuthenticate")&&this.client.events.listenerCount("session_authenticate")>0)}),c(this,"onSessionProposeRequest",async t=>{const{topic:e,payload:s,attestation:i,encryptedId:r}=t,{params:n,id:a}=s;try{const l=this.client.core.eventClient.getEvent({topic:e});this.client.events.listenerCount("session_proposal")===0&&(console.warn("No listener for session_proposal event"),l?.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EVENT_CLIENT_PAIRING_ERRORS.proposal_listener_not_found)),this.isValidConnect(R({},s.params));const p=n.expiryTimestamp||(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.calcExpiry)(P.wc_sessionPropose.req.ttl),h=R({id:a,pairingTopic:e,expiryTimestamp:p,attestation:i,encryptedId:r},n);await this.setProposal(a,h);const u=await this.getVerifyContext({attestationId:i,hash:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.hashMessage)(JSON.stringify(s)),encryptedId:r,metadata:h.proposer.metadata});l?.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EVENT_CLIENT_PAIRING_TRACES.emit_session_proposal),this.client.events.emit("session_proposal",{id:a,params:h,verifyContext:u})}catch(l){await this.sendError({id:a,topic:e,error:l,rpcOpts:P.wc_sessionPropose.autoReject}),this.client.logger.error(l)}}),c(this,"onSessionProposeResponse",async(t,e,s)=>{const{id:i}=e;if((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.isJsonRpcResult)(e)){const{result:r}=e;this.client.logger.trace({type:"method",method:"onSessionProposeResponse",result:r});const n=this.client.proposal.get(i);this.client.logger.trace({type:"method",method:"onSessionProposeResponse",proposal:n});const a=n.proposer.publicKey;this.client.logger.trace({type:"method",method:"onSessionProposeResponse",selfPublicKey:a});const l=r.responderPublicKey;this.client.logger.trace({type:"method",method:"onSessionProposeResponse",peerPublicKey:l});const p=await this.client.core.crypto.generateSharedKey(a,l);this.pendingSessions.set(i,{sessionTopic:p,pairingTopic:t,proposalId:i,publicKey:a});const h=await this.client.core.relayer.subscribe(p,{transportType:s});this.client.logger.trace({type:"method",method:"onSessionProposeResponse",subscriptionId:h}),await this.client.core.pairing.activate({topic:t})}else if((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.isJsonRpcError)(e)){await this.deleteProposal(i);const r=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.engineEvent)("session_connect",i);if(this.events.listenerCount(r)===0)throw new Error(`emitting ${r} without any listeners, 954`);this.events.emit(r,{error:e.error})}}),c(this,"onSessionSettleRequest",async(t,e)=>{const{id:s,params:i}=e;try{this.isValidSessionSettleRequest(i);const{relay:r,controller:n,expiry:a,namespaces:l,sessionProperties:p,scopedProperties:h,sessionConfig:u}=e.params,d=[...this.pendingSessions.values()].find(m=>m.sessionTopic===t);if(!d)return this.client.logger.error(`Pending session not found for topic ${t}`);const y=this.client.proposal.get(d.proposalId),w=O(R(R(R({topic:t,relay:r,expiry:a,namespaces:l,acknowledged:!0,pairingTopic:d.pairingTopic,requiredNamespaces:y.requiredNamespaces,optionalNamespaces:y.optionalNamespaces,controller:n.publicKey,self:{publicKey:d.publicKey,metadata:this.client.metadata},peer:{publicKey:n.publicKey,metadata:n.metadata}},p&&{sessionProperties:p}),h&&{scopedProperties:h}),u&&{sessionConfig:u}),{transportType:_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.TRANSPORT_TYPES.relay});await this.client.session.set(w.topic,w),await this.setExpiry(w.topic,w.expiry),await this.client.core.pairing.updateMetadata({topic:d.pairingTopic,metadata:w.peer.metadata}),this.client.events.emit("session_connect",{session:w}),this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.engineEvent)("session_connect",d.proposalId),{session:w}),this.pendingSessions.delete(d.proposalId),this.deleteProposal(d.proposalId,!1),this.cleanupDuplicatePairings(w),await this.sendResult({id:e.id,topic:t,result:!0})}catch(r){await this.sendError({id:s,topic:t,error:r}),this.client.logger.error(r)}}),c(this,"onSessionSettleResponse",async(t,e)=>{const{id:s}=e;(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.isJsonRpcResult)(e)?(await this.client.session.update(t,{acknowledged:!0}),this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.engineEvent)("session_approve",s),{})):(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.isJsonRpcError)(e)&&(await this.client.session.delete(t,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getSdkError)("USER_DISCONNECTED")),this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.engineEvent)("session_approve",s),{error:e.error}))}),c(this,"onSessionUpdateRequest",async(t,e)=>{const{params:s,id:i}=e;try{const r=`${t}_session_update`,n=_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.MemoryStore.get(r);if(n&&this.isRequestOutOfSync(n,i)){this.client.logger.warn(`Discarding out of sync request - ${i}`),this.sendError({id:i,topic:t,error:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getSdkError)("INVALID_UPDATE_REQUEST")});return}this.isValidUpdate(R({topic:t},s));try{_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.MemoryStore.set(r,i),await this.client.session.update(t,{namespaces:s.namespaces}),await this.sendResult({id:i,topic:t,result:!0})}catch(a){throw _walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.MemoryStore.delete(r),a}this.client.events.emit("session_update",{id:i,topic:t,params:s})}catch(r){await this.sendError({id:i,topic:t,error:r}),this.client.logger.error(r)}}),c(this,"isRequestOutOfSync",(t,e)=>e.toString().slice(0,-3)<t.toString().slice(0,-3)),c(this,"onSessionUpdateResponse",(t,e)=>{const{id:s}=e,i=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.engineEvent)("session_update",s);if(this.events.listenerCount(i)===0)throw new Error(`emitting ${i} without any listeners`);(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.isJsonRpcResult)(e)?this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.engineEvent)("session_update",s),{}):(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.isJsonRpcError)(e)&&this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.engineEvent)("session_update",s),{error:e.error})}),c(this,"onSessionExtendRequest",async(t,e)=>{const{id:s}=e;try{this.isValidExtend({topic:t}),await this.setExpiry(t,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.calcExpiry)(B)),await this.sendResult({id:s,topic:t,result:!0}),this.client.events.emit("session_extend",{id:s,topic:t})}catch(i){await this.sendError({id:s,topic:t,error:i}),this.client.logger.error(i)}}),c(this,"onSessionExtendResponse",(t,e)=>{const{id:s}=e,i=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.engineEvent)("session_extend",s);if(this.events.listenerCount(i)===0)throw new Error(`emitting ${i} without any listeners`);(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.isJsonRpcResult)(e)?this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.engineEvent)("session_extend",s),{}):(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.isJsonRpcError)(e)&&this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.engineEvent)("session_extend",s),{error:e.error})}),c(this,"onSessionPingRequest",async(t,e)=>{const{id:s}=e;try{this.isValidPing({topic:t}),await this.sendResult({id:s,topic:t,result:!0,throwOnFailedPublish:!0}),this.client.events.emit("session_ping",{id:s,topic:t})}catch(i){await this.sendError({id:s,topic:t,error:i}),this.client.logger.error(i)}}),c(this,"onSessionPingResponse",(t,e)=>{const{id:s}=e,i=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.engineEvent)("session_ping",s);setTimeout(()=>{if(this.events.listenerCount(i)===0)throw new Error(`emitting ${i} without any listeners 2176`);(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.isJsonRpcResult)(e)?this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.engineEvent)("session_ping",s),{}):(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.isJsonRpcError)(e)&&this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.engineEvent)("session_ping",s),{error:e.error})},500)}),c(this,"onSessionDeleteRequest",async(t,e)=>{const{id:s}=e;try{this.isValidDisconnect({topic:t,reason:e.params}),await Promise.all([new Promise(i=>{this.client.core.relayer.once(_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.RELAYER_EVENTS.publish,async()=>{i(await this.deleteSession({topic:t,id:s}))})}),this.sendResult({id:s,topic:t,result:!0}),this.cleanupPendingSentRequestsForTopic({topic:t,error:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getSdkError)("USER_DISCONNECTED")})]).catch(i=>this.client.logger.error(i))}catch(i){this.client.logger.error(i)}}),c(this,"onSessionRequest",async t=>{var e,s,i;const{topic:r,payload:n,attestation:a,encryptedId:l,transportType:p}=t,{id:h,params:u}=n;try{await this.isValidRequest(R({topic:r},u));const d=this.client.session.get(r),y=await this.getVerifyContext({attestationId:a,hash:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.hashMessage)(JSON.stringify((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.formatJsonRpcRequest)("wc_sessionRequest",u,h))),encryptedId:l,metadata:d.peer.metadata,transportType:p}),w={id:h,topic:r,params:u,verifyContext:y};await this.setPendingSessionRequest(w),p===_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.TRANSPORT_TYPES.link_mode&&(e=d.peer.metadata.redirect)!=null&&e.universal&&this.client.core.addLinkModeSupportedApp((s=d.peer.metadata.redirect)==null?void 0:s.universal),(i=this.client.signConfig)!=null&&i.disableRequestQueue?this.emitSessionRequest(w):(this.addSessionRequestToSessionRequestQueue(w),this.processSessionRequestQueue())}catch(d){await this.sendError({id:h,topic:r,error:d}),this.client.logger.error(d)}}),c(this,"onSessionRequestResponse",(t,e)=>{const{id:s}=e,i=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.engineEvent)("session_request",s);if(this.events.listenerCount(i)===0)throw new Error(`emitting ${i} without any listeners`);(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.isJsonRpcResult)(e)?this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.engineEvent)("session_request",s),{result:e.result}):(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.isJsonRpcError)(e)&&this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.engineEvent)("session_request",s),{error:e.error})}),c(this,"onSessionEventRequest",async(t,e)=>{const{id:s,params:i}=e;try{const r=`${t}_session_event_${i.event.name}`,n=_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.MemoryStore.get(r);if(n&&this.isRequestOutOfSync(n,s)){this.client.logger.info(`Discarding out of sync request - ${s}`);return}this.isValidEmit(R({topic:t},i)),this.client.events.emit("session_event",{id:s,topic:t,params:i}),_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.MemoryStore.set(r,s)}catch(r){await this.sendError({id:s,topic:t,error:r}),this.client.logger.error(r)}}),c(this,"onSessionAuthenticateResponse",(t,e)=>{const{id:s}=e;this.client.logger.trace({type:"method",method:"onSessionAuthenticateResponse",topic:t,payload:e}),(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.isJsonRpcResult)(e)?this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.engineEvent)("session_request",s),{result:e.result}):(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.isJsonRpcError)(e)&&this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.engineEvent)("session_request",s),{error:e.error})}),c(this,"onSessionAuthenticateRequest",async t=>{var e;const{topic:s,payload:i,attestation:r,encryptedId:n,transportType:a}=t;try{const{requester:l,authPayload:p,expiryTimestamp:h}=i.params,u=await this.getVerifyContext({attestationId:r,hash:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.hashMessage)(JSON.stringify(i)),encryptedId:n,metadata:l.metadata,transportType:a}),d={requester:l,pairingTopic:s,id:i.id,authPayload:p,verifyContext:u,expiryTimestamp:h};await this.setAuthRequest(i.id,{request:d,pairingTopic:s,transportType:a}),a===_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.TRANSPORT_TYPES.link_mode&&(e=l.metadata.redirect)!=null&&e.universal&&this.client.core.addLinkModeSupportedApp(l.metadata.redirect.universal),this.client.events.emit("session_authenticate",{topic:s,params:i.params,id:i.id,verifyContext:u})}catch(l){this.client.logger.error(l);const p=i.params.requester.publicKey,h=await this.client.core.crypto.generateKeyPair(),u=this.getAppLinkIfEnabled(i.params.requester.metadata,a),d={type:_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.TYPE_1,receiverPublicKey:p,senderPublicKey:h};await this.sendError({id:i.id,topic:s,error:l,encodeOpts:d,rpcOpts:P.wc_sessionAuthenticate.autoReject,appLink:u})}}),c(this,"addSessionRequestToSessionRequestQueue",t=>{this.sessionRequestQueue.queue.push(t)}),c(this,"cleanupAfterResponse",t=>{this.deletePendingSessionRequest(t.response.id,{message:"fulfilled",code:0}),setTimeout(()=>{this.sessionRequestQueue.state=M.idle,this.processSessionRequestQueue()},(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.toMiliseconds)(this.requestQueueDelay))}),c(this,"cleanupPendingSentRequestsForTopic",({topic:t,error:e})=>{const s=this.client.core.history.pending;s.length>0&&s.filter(i=>i.topic===t&&i.request.method==="wc_sessionRequest").forEach(i=>{const r=i.request.id,n=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.engineEvent)("session_request",r);if(this.events.listenerCount(n)===0)throw new Error(`emitting ${n} without any listeners`);this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.engineEvent)("session_request",i.request.id),{error:e})})}),c(this,"processSessionRequestQueue",()=>{if(this.sessionRequestQueue.state===M.active){this.client.logger.info("session request queue is already active.");return}const t=this.sessionRequestQueue.queue[0];if(!t){this.client.logger.info("session request queue is empty.");return}try{this.emitSessionRequest(t)}catch(e){this.client.logger.error(e)}}),c(this,"emitSessionRequest",t=>{if(this.emittedSessionRequests.has(t.id)){this.client.logger.warn({id:t.id},`Skipping emitting \`session_request\` event for duplicate request. id: ${t.id}`);return}this.sessionRequestQueue.state=M.active,this.emittedSessionRequests.add(t.id),this.client.events.emit("session_request",t)}),c(this,"onPairingCreated",t=>{if(t.methods&&this.expectedPairingMethodMap.set(t.topic,t.methods),t.active)return;const e=this.client.proposal.getAll().find(s=>s.pairingTopic===t.topic);e&&this.onSessionProposeRequest({topic:t.topic,payload:(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.formatJsonRpcRequest)("wc_sessionPropose",O(R({},e),{requiredNamespaces:e.requiredNamespaces,optionalNamespaces:e.optionalNamespaces,relays:e.relays,proposer:e.proposer,sessionProperties:e.sessionProperties,scopedProperties:e.scopedProperties}),e.id),attestation:e.attestation,encryptedId:e.encryptedId})}),c(this,"isValidConnect",async t=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidParams)(t)){const{message:l}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`connect() params: ${JSON.stringify(t)}`);throw new Error(l)}const{pairingTopic:e,requiredNamespaces:s,optionalNamespaces:i,sessionProperties:r,scopedProperties:n,relays:a}=t;if((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(e)||await this.isValidPairingTopic(e),!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidRelays)(a,!0)){const{message:l}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`connect() relays: ${a}`);throw new Error(l)}if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(s)&&(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidObject)(s)!==0){const l="requiredNamespaces are deprecated and are automatically assigned to optionalNamespaces";["fatal","error","silent"].includes(this.client.logger.level)?console.warn(l):this.client.logger.warn(l),this.validateNamespaces(s,"requiredNamespaces")}if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(i)&&(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidObject)(i)!==0&&this.validateNamespaces(i,"optionalNamespaces"),(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(r)||this.validateSessionProps(r,"sessionProperties"),!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(n)){this.validateSessionProps(n,"scopedProperties");const l=Object.keys(s||{}).concat(Object.keys(i||{}));if(!Object.keys(n).every(p=>l.includes(p.split(":")[0])))throw new Error(`Scoped properties must be a subset of required/optional namespaces, received: ${JSON.stringify(n)}, required/optional namespaces: ${JSON.stringify(l)}`)}}),c(this,"validateNamespaces",(t,e)=>{const s=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidRequiredNamespaces)(t,"connect()",e);if(s)throw new Error(s.message)}),c(this,"isValidApprove",async t=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidParams)(t))throw new Error((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`approve() params: ${t}`).message);const{id:e,namespaces:s,relayProtocol:i,sessionProperties:r,scopedProperties:n}=t;this.checkRecentlyDeleted(e),await this.isValidProposalId(e);const a=this.client.proposal.get(e),l=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidNamespaces)(s,"approve()");if(l)throw new Error(l.message);const p=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isConformingNamespaces)(a.requiredNamespaces,s,"approve()");if(p)throw new Error(p.message);if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidString)(i,!0)){const{message:h}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`approve() relayProtocol: ${i}`);throw new Error(h)}if((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(r)||this.validateSessionProps(r,"sessionProperties"),!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(n)){this.validateSessionProps(n,"scopedProperties");const h=new Set(Object.keys(s));if(!Object.keys(n).every(u=>h.has(u.split(":")[0])))throw new Error(`Scoped properties must be a subset of approved namespaces, received: ${JSON.stringify(n)}, approved namespaces: ${Array.from(h).join(", ")}`)}}),c(this,"isValidReject",async t=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidParams)(t)){const{message:i}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`reject() params: ${t}`);throw new Error(i)}const{id:e,reason:s}=t;if(this.checkRecentlyDeleted(e),await this.isValidProposalId(e),!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidErrorReason)(s)){const{message:i}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`reject() reason: ${JSON.stringify(s)}`);throw new Error(i)}}),c(this,"isValidSessionSettleRequest",t=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidParams)(t)){const{message:l}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`onSessionSettleRequest() params: ${t}`);throw new Error(l)}const{relay:e,controller:s,namespaces:i,expiry:r}=t;if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidRelay)(e)){const{message:l}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID","onSessionSettleRequest() relay protocol should be a string");throw new Error(l)}const n=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidController)(s,"onSessionSettleRequest()");if(n)throw new Error(n.message);const a=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidNamespaces)(i,"onSessionSettleRequest()");if(a)throw new Error(a.message);if((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isExpired)(r)){const{message:l}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("EXPIRED","onSessionSettleRequest()");throw new Error(l)}}),c(this,"isValidUpdate",async t=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidParams)(t)){const{message:a}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`update() params: ${t}`);throw new Error(a)}const{topic:e,namespaces:s}=t;this.checkRecentlyDeleted(e),await this.isValidSessionTopic(e);const i=this.client.session.get(e),r=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidNamespaces)(s,"update()");if(r)throw new Error(r.message);const n=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isConformingNamespaces)(i.requiredNamespaces,s,"update()");if(n)throw new Error(n.message)}),c(this,"isValidExtend",async t=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidParams)(t)){const{message:s}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`extend() params: ${t}`);throw new Error(s)}const{topic:e}=t;this.checkRecentlyDeleted(e),await this.isValidSessionTopic(e)}),c(this,"isValidRequest",async t=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidParams)(t)){const{message:a}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`request() params: ${t}`);throw new Error(a)}const{topic:e,request:s,chainId:i,expiry:r}=t;this.checkRecentlyDeleted(e),await this.isValidSessionTopic(e);const{namespaces:n}=this.client.session.get(e);if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidNamespacesChainId)(n,i)){const{message:a}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`request() chainId: ${i}`);throw new Error(a)}if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidRequest)(s)){const{message:a}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`request() ${JSON.stringify(s)}`);throw new Error(a)}if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidNamespacesRequest)(n,i,s.method)){const{message:a}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`request() method: ${s.method}`);throw new Error(a)}if(r&&!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidRequestExpiry)(r,_e)){const{message:a}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`request() expiry: ${r}. Expiry must be a number (in seconds) between ${_e.min} and ${_e.max}`);throw new Error(a)}}),c(this,"isValidRespond",async t=>{var e;if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidParams)(t)){const{message:r}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`respond() params: ${t}`);throw new Error(r)}const{topic:s,response:i}=t;try{await this.isValidSessionTopic(s)}catch(r){throw(e=t?.response)!=null&&e.id&&this.cleanupAfterResponse(t),r}if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidResponse)(i)){const{message:r}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`respond() response: ${JSON.stringify(i)}`);throw new Error(r)}}),c(this,"isValidPing",async t=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidParams)(t)){const{message:s}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`ping() params: ${t}`);throw new Error(s)}const{topic:e}=t;await this.isValidSessionOrPairingTopic(e)}),c(this,"isValidEmit",async t=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidParams)(t)){const{message:n}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`emit() params: ${t}`);throw new Error(n)}const{topic:e,event:s,chainId:i}=t;await this.isValidSessionTopic(e);const{namespaces:r}=this.client.session.get(e);if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidNamespacesChainId)(r,i)){const{message:n}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`emit() chainId: ${i}`);throw new Error(n)}if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidEvent)(s)){const{message:n}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`emit() event: ${JSON.stringify(s)}`);throw new Error(n)}if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidNamespacesEvent)(r,i,s.name)){const{message:n}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`emit() event: ${JSON.stringify(s)}`);throw new Error(n)}}),c(this,"isValidDisconnect",async t=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidParams)(t)){const{message:s}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`disconnect() params: ${t}`);throw new Error(s)}const{topic:e}=t;await this.isValidSessionOrPairingTopic(e)}),c(this,"isValidAuthenticate",t=>{const{chains:e,uri:s,domain:i,nonce:r}=t;if(!Array.isArray(e)||e.length===0)throw new Error("chains is required and must be a non-empty array");if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidString)(s,!1))throw new Error("uri is required parameter");if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidString)(i,!1))throw new Error("domain is required parameter");if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidString)(r,!1))throw new Error("nonce is required parameter");if([...new Set(e.map(a=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.parseChainId)(a).namespace))].length>1)throw new Error("Multi-namespace requests are not supported. Please request single namespace only.");const{namespace:n}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.parseChainId)(e[0]);if(n!=="eip155")throw new Error("Only eip155 namespace is supported for authenticated sessions. Please use .connect() for non-eip155 chains.")}),c(this,"getVerifyContext",async t=>{const{attestationId:e,hash:s,encryptedId:i,metadata:r,transportType:n}=t,a={verified:{verifyUrl:r.verifyUrl||_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.VERIFY_SERVER,validation:"UNKNOWN",origin:r.url||""}};try{if(n===_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.TRANSPORT_TYPES.link_mode){const p=this.getAppLinkIfEnabled(r,n);return a.verified.validation=p&&new URL(p).origin===new URL(r.url).origin?"VALID":"INVALID",a}const l=await this.client.core.verify.resolve({attestationId:e,hash:s,encryptedId:i,verifyUrl:r.verifyUrl});l&&(a.verified.origin=l.origin,a.verified.isScam=l.isScam,a.verified.validation=l.origin===new URL(r.url).origin?"VALID":"INVALID")}catch(l){this.client.logger.warn(l)}return this.client.logger.debug(`Verify context: ${JSON.stringify(a)}`),a}),c(this,"validateSessionProps",(t,e)=>{Object.values(t).forEach((s,i)=>{if(s==null){const{message:r}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`${e} must contain an existing value for each key. Received: ${s} for key ${Object.keys(t)[i]}`);throw new Error(r)}})}),c(this,"getPendingAuthRequest",t=>{const e=this.client.auth.requests.get(t);return typeof e=="object"?e:void 0}),c(this,"addToRecentlyDeleted",(t,e)=>{if(this.recentlyDeletedMap.set(t,e),this.recentlyDeletedMap.size>=this.recentlyDeletedLimit){let s=0;const i=this.recentlyDeletedLimit/2;for(const r of this.recentlyDeletedMap.keys()){if(s++>=i)break;this.recentlyDeletedMap.delete(r)}}}),c(this,"checkRecentlyDeleted",t=>{const e=this.recentlyDeletedMap.get(t);if(e){const{message:s}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`Record was recently deleted - ${e}: ${t}`);throw new Error(s)}}),c(this,"isLinkModeEnabled",(t,e)=>{var s,i,r,n,a,l,p,h,u;return!t||e!==_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.TRANSPORT_TYPES.link_mode?!1:((i=(s=this.client.metadata)==null?void 0:s.redirect)==null?void 0:i.linkMode)===!0&&((n=(r=this.client.metadata)==null?void 0:r.redirect)==null?void 0:n.universal)!==void 0&&((l=(a=this.client.metadata)==null?void 0:a.redirect)==null?void 0:l.universal)!==""&&((p=t?.redirect)==null?void 0:p.universal)!==void 0&&((h=t?.redirect)==null?void 0:h.universal)!==""&&((u=t?.redirect)==null?void 0:u.linkMode)===!0&&this.client.core.linkModeSupportedApps.includes(t.redirect.universal)&&typeof(__webpack_require__.g==null?void 0:__webpack_require__.g.Linking)<"u"}),c(this,"getAppLinkIfEnabled",(t,e)=>{var s;return this.isLinkModeEnabled(t,e)?(s=t?.redirect)==null?void 0:s.universal:void 0}),c(this,"handleLinkModeMessage",({url:t})=>{if(!t||!t.includes("wc_ev")||!t.includes("topic"))return;const e=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getSearchParamFromURL)(t,"topic")||"",s=decodeURIComponent((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getSearchParamFromURL)(t,"wc_ev")||""),i=this.client.session.keys.includes(e);i&&this.client.session.update(e,{transportType:_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.TRANSPORT_TYPES.link_mode}),this.client.core.dispatchEnvelope({topic:e,message:s,sessionExists:i})}),c(this,"registerLinkModeListeners",async()=>{var t;if((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isTestRun)()||(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isReactNative)()&&(t=this.client.metadata.redirect)!=null&&t.linkMode){const e=__webpack_require__.g==null?void 0:__webpack_require__.g.Linking;if(typeof e<"u"){e.addEventListener("url",this.handleLinkModeMessage,this.client.name);const s=await e.getInitialURL();s&&setTimeout(()=>{this.handleLinkModeMessage({url:s})},50)}}}),c(this,"getTVFParams",(t,e,s)=>{var i,r,n;if(!((i=e.request)!=null&&i.method))return{};const a={correlationId:t,rpcMethods:[e.request.method],chainId:e.chainId};try{const l=this.extractTxHashesFromResult(e.request,s);a.txHashes=l,a.contractAddresses=this.isValidContractData(e.request.params)?[(n=(r=e.request.params)==null?void 0:r[0])==null?void 0:n.to]:[]}catch(l){this.client.logger.warn("Error getting TVF params",l)}return a}),c(this,"isValidContractData",t=>{var e;if(!t)return!1;try{const s=t?.data||((e=t?.[0])==null?void 0:e.data);if(!s.startsWith("0x"))return!1;const i=s.slice(2);return/^[0-9a-fA-F]*$/.test(i)?i.length%2===0:!1}catch{}return!1}),c(this,"extractTxHashesFromResult",(t,e)=>{var s;try{if(!e)return[];const i=t.method,r=yt[i];if(i==="sui_signTransaction")return[(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getSuiDigest)(e.transactionBytes)];if(i==="near_signTransaction")return[(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getNearTransactionIdFromSignedTransaction)(e)];if(i==="near_signTransactions")return e.map(a=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getNearTransactionIdFromSignedTransaction)(a));if(i==="xrpl_signTransactionFor"||i==="xrpl_signTransaction")return[(s=e.tx_json)==null?void 0:s.hash];if(i==="polkadot_signTransaction")return[(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.buildSignedExtrinsicHash)({transaction:t.params.transactionPayload,signature:e.signature})];if(i==="algo_signTxn")return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidArray)(e)?e.map(a=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getAlgorandTransactionId)(a)):[(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getAlgorandTransactionId)(e)];if(i==="cosmos_signDirect")return[(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getSignDirectHash)(e)];if(typeof e=="string")return[e];const n=e[r.key];if((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidArray)(n))return i==="solana_signAllTransactions"?n.map(a=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.extractSolanaTransactionId)(a)):n;if(typeof n=="string")return[n]}catch(i){this.client.logger.warn("Error extracting tx hashes from result",i)}return[]})}async processPendingMessageEvents(){try{const o=this.client.session.keys,t=this.client.core.relayer.messages.getWithoutAck(o);for(const[e,s]of Object.entries(t))for(const i of s)try{await this.onProviderMessageEvent({topic:e,message:i,publishedAt:Date.now()})}catch{this.client.logger.warn(`Error processing pending message event for topic: ${e}, message: ${i}`)}}catch(o){this.client.logger.warn("processPendingMessageEvents failed",o)}}isInitialized(){if(!this.initialized){const{message:o}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("NOT_INITIALIZED",this.name);throw new Error(o)}}async confirmOnlineStateOrThrow(){await this.client.core.relayer.confirmOnlineStateOrThrow()}registerRelayerEvents(){this.client.core.relayer.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.RELAYER_EVENTS.message,o=>{this.onProviderMessageEvent(o)})}async onRelayMessage(o){const{topic:t,message:e,attestation:s,transportType:i}=o,{publicKey:r}=this.client.auth.authKeys.keys.includes(pe)?this.client.auth.authKeys.get(pe):{responseTopic:void 0,publicKey:void 0};try{const n=await this.client.core.crypto.decode(t,e,{receiverPublicKey:r,encoding:i===_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.TRANSPORT_TYPES.link_mode?_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.BASE64URL:_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.BASE64});(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.isJsonRpcRequest)(n)?(this.client.core.history.set(t,n),await this.onRelayEventRequest({topic:t,payload:n,attestation:s,transportType:i,encryptedId:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.hashMessage)(e)})):(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_6__.isJsonRpcResponse)(n)?(await this.client.core.history.resolve(n),await this.onRelayEventResponse({topic:t,payload:n,transportType:i}),this.client.core.history.delete(t,n.id)):await this.onRelayEventUnknownPayload({topic:t,payload:n,transportType:i}),await this.client.core.relayer.messages.ack(t,e)}catch(n){this.client.logger.error(n)}}registerExpirerEvents(){this.client.core.expirer.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.EXPIRER_EVENTS.expired,async o=>{const{topic:t,id:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.parseExpirerTarget)(o.target);if(e&&this.client.pendingRequest.keys.includes(e))return await this.deletePendingSessionRequest(e,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("EXPIRED"),!0);if(e&&this.client.auth.requests.keys.includes(e))return await this.deletePendingAuthRequest(e,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("EXPIRED"),!0);t?this.client.session.keys.includes(t)&&(await this.deleteSession({topic:t,expirerHasDeleted:!0}),this.client.events.emit("session_expire",{topic:t})):e&&(await this.deleteProposal(e,!0),this.client.events.emit("proposal_expire",{id:e}))})}registerPairingEvents(){this.client.core.pairing.events.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.PAIRING_EVENTS.create,o=>this.onPairingCreated(o)),this.client.core.pairing.events.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.PAIRING_EVENTS.delete,o=>{this.addToRecentlyDeleted(o.topic,"pairing")})}isValidPairingTopic(o){if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidString)(o,!1)){const{message:t}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`pairing topic should be a string: ${o}`);throw new Error(t)}if(!this.client.core.pairing.pairings.keys.includes(o)){const{message:t}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("NO_MATCHING_KEY",`pairing topic doesn't exist: ${o}`);throw new Error(t)}if((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isExpired)(this.client.core.pairing.pairings.get(o).expiry)){const{message:t}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("EXPIRED",`pairing topic: ${o}`);throw new Error(t)}}async isValidSessionTopic(o){if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidString)(o,!1)){const{message:t}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`session topic should be a string: ${o}`);throw new Error(t)}if(this.checkRecentlyDeleted(o),!this.client.session.keys.includes(o)){const{message:t}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("NO_MATCHING_KEY",`session topic doesn't exist: ${o}`);throw new Error(t)}if((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isExpired)(this.client.session.get(o).expiry)){await this.deleteSession({topic:o});const{message:t}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("EXPIRED",`session topic: ${o}`);throw new Error(t)}if(!this.client.core.crypto.keychain.has(o)){const{message:t}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`session topic does not exist in keychain: ${o}`);throw await this.deleteSession({topic:o}),new Error(t)}}async isValidSessionOrPairingTopic(o){if(this.checkRecentlyDeleted(o),this.client.session.keys.includes(o))await this.isValidSessionTopic(o);else if(this.client.core.pairing.pairings.keys.includes(o))this.isValidPairingTopic(o);else if((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidString)(o,!1)){const{message:t}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("NO_MATCHING_KEY",`session or pairing topic doesn't exist: ${o}`);throw new Error(t)}else{const{message:t}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`session or pairing topic should be a string: ${o}`);throw new Error(t)}}async isValidProposalId(o){if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isValidId)(o)){const{message:t}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("MISSING_OR_INVALID",`proposal id should be a number: ${o}`);throw new Error(t)}if(!this.client.proposal.keys.includes(o)){const{message:t}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("NO_MATCHING_KEY",`proposal id doesn't exist: ${o}`);throw new Error(t)}if((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.isExpired)(this.client.proposal.get(o).expiryTimestamp)){await this.deleteProposal(o);const{message:t}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.getInternalError)("EXPIRED",`proposal id: ${o}`);throw new Error(t)}}}class ks extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.Store{constructor(o,t){super(o,t,dt,we),this.core=o,this.logger=t}}class It extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.Store{constructor(o,t){super(o,t,ut,we),this.core=o,this.logger=t}}class Ds extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.Store{constructor(o,t){super(o,t,wt,we,e=>e.id),this.core=o,this.logger=t}}class Ls extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.Store{constructor(o,t){super(o,t,Et,le,()=>pe),this.core=o,this.logger=t}}class Ms extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.Store{constructor(o,t){super(o,t,St,le),this.core=o,this.logger=t}}class $s extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.Store{constructor(o,t){super(o,t,Rt,le,e=>e.id),this.core=o,this.logger=t}}var Ks=Object.defineProperty,Us=(E,o,t)=>o in E?Ks(E,o,{enumerable:!0,configurable:!0,writable:!0,value:t}):E[o]=t,Ke=(E,o,t)=>Us(E,typeof o!="symbol"?o+"":o,t);class Gs{constructor(o,t){this.core=o,this.logger=t,Ke(this,"authKeys"),Ke(this,"pairingTopics"),Ke(this,"requests"),this.authKeys=new Ls(this.core,this.logger),this.pairingTopics=new Ms(this.core,this.logger),this.requests=new $s(this.core,this.logger)}async init(){await this.authKeys.init(),await this.pairingTopics.init(),await this.requests.init()}}var js=Object.defineProperty,Fs=(E,o,t)=>o in E?js(E,o,{enumerable:!0,configurable:!0,writable:!0,value:t}):E[o]=t,f=(E,o,t)=>Fs(E,typeof o!="symbol"?o+"":o,t);class fe extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_2__.ISignClient{constructor(o){super(o),f(this,"protocol",Ce),f(this,"version",ke),f(this,"name",me.name),f(this,"metadata"),f(this,"core"),f(this,"logger"),f(this,"events",new events__WEBPACK_IMPORTED_MODULE_4__.EventEmitter),f(this,"engine"),f(this,"session"),f(this,"proposal"),f(this,"pendingRequest"),f(this,"auth"),f(this,"signConfig"),f(this,"on",(e,s)=>this.events.on(e,s)),f(this,"once",(e,s)=>this.events.once(e,s)),f(this,"off",(e,s)=>this.events.off(e,s)),f(this,"removeListener",(e,s)=>this.events.removeListener(e,s)),f(this,"removeAllListeners",e=>this.events.removeAllListeners(e)),f(this,"connect",async e=>{try{return await this.engine.connect(e)}catch(s){throw this.logger.error(s.message),s}}),f(this,"pair",async e=>{try{return await this.engine.pair(e)}catch(s){throw this.logger.error(s.message),s}}),f(this,"approve",async e=>{try{return await this.engine.approve(e)}catch(s){throw this.logger.error(s.message),s}}),f(this,"reject",async e=>{try{return await this.engine.reject(e)}catch(s){throw this.logger.error(s.message),s}}),f(this,"update",async e=>{try{return await this.engine.update(e)}catch(s){throw this.logger.error(s.message),s}}),f(this,"extend",async e=>{try{return await this.engine.extend(e)}catch(s){throw this.logger.error(s.message),s}}),f(this,"request",async e=>{try{return await this.engine.request(e)}catch(s){throw this.logger.error(s.message),s}}),f(this,"respond",async e=>{try{return await this.engine.respond(e)}catch(s){throw this.logger.error(s.message),s}}),f(this,"ping",async e=>{try{return await this.engine.ping(e)}catch(s){throw this.logger.error(s.message),s}}),f(this,"emit",async e=>{try{return await this.engine.emit(e)}catch(s){throw this.logger.error(s.message),s}}),f(this,"disconnect",async e=>{try{return await this.engine.disconnect(e)}catch(s){throw this.logger.error(s.message),s}}),f(this,"find",e=>{try{return this.engine.find(e)}catch(s){throw this.logger.error(s.message),s}}),f(this,"getPendingSessionRequests",()=>{try{return this.engine.getPendingSessionRequests()}catch(e){throw this.logger.error(e.message),e}}),f(this,"authenticate",async(e,s)=>{try{return await this.engine.authenticate(e,s)}catch(i){throw this.logger.error(i.message),i}}),f(this,"formatAuthMessage",e=>{try{return this.engine.formatAuthMessage(e)}catch(s){throw this.logger.error(s.message),s}}),f(this,"approveSessionAuthenticate",async e=>{try{return await this.engine.approveSessionAuthenticate(e)}catch(s){throw this.logger.error(s.message),s}}),f(this,"rejectSessionAuthenticate",async e=>{try{return await this.engine.rejectSessionAuthenticate(e)}catch(s){throw this.logger.error(s.message),s}}),this.name=o?.name||me.name,this.metadata=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_3__.populateAppMetadata)(o?.metadata),this.signConfig=o?.signConfig;const t=typeof o?.logger<"u"&&typeof o?.logger!="string"?o.logger:(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_1__.pino)((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_1__.getDefaultLoggerOptions)({level:o?.logger||me.logger}));this.core=o?.core||new _walletconnect_core__WEBPACK_IMPORTED_MODULE_0__.Core(o),this.logger=(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_1__.generateChildLogger)(t,this.name),this.session=new It(this.core,this.logger),this.proposal=new ks(this.core,this.logger),this.pendingRequest=new Ds(this.core,this.logger),this.engine=new Cs(this),this.auth=new Gs(this.core,this.logger)}static async init(o){const t=new fe(o);return await t.initialize(),t}get context(){return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_1__.getLoggerContext)(this.logger)}get pairing(){return this.core.pairing.pairings}async initialize(){this.logger.trace("Initialized");try{await this.core.start(),await this.session.init(),await this.proposal.init(),await this.pendingRequest.init(),await this.auth.init(),await this.engine.init(),this.logger.info("SignClient Initialization Success")}catch(o){throw this.logger.info("SignClient Initialization Failure"),this.logger.error(o.message),o}}}const Qs=It,Hs=fe;
//# sourceMappingURL=index.es.js.map


/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/@noble/hashes/esm/_u64.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/@noble/hashes/esm/_u64.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   add: () => (/* binding */ add),
/* harmony export */   add3H: () => (/* binding */ add3H),
/* harmony export */   add3L: () => (/* binding */ add3L),
/* harmony export */   add4H: () => (/* binding */ add4H),
/* harmony export */   add4L: () => (/* binding */ add4L),
/* harmony export */   add5H: () => (/* binding */ add5H),
/* harmony export */   add5L: () => (/* binding */ add5L),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   fromBig: () => (/* binding */ fromBig),
/* harmony export */   rotlBH: () => (/* binding */ rotlBH),
/* harmony export */   rotlBL: () => (/* binding */ rotlBL),
/* harmony export */   rotlSH: () => (/* binding */ rotlSH),
/* harmony export */   rotlSL: () => (/* binding */ rotlSL),
/* harmony export */   rotr32H: () => (/* binding */ rotr32H),
/* harmony export */   rotr32L: () => (/* binding */ rotr32L),
/* harmony export */   rotrBH: () => (/* binding */ rotrBH),
/* harmony export */   rotrBL: () => (/* binding */ rotrBL),
/* harmony export */   rotrSH: () => (/* binding */ rotrSH),
/* harmony export */   rotrSL: () => (/* binding */ rotrSL),
/* harmony export */   shrSH: () => (/* binding */ shrSH),
/* harmony export */   shrSL: () => (/* binding */ shrSL),
/* harmony export */   split: () => (/* binding */ split),
/* harmony export */   toBig: () => (/* binding */ toBig)
/* harmony export */ });
/**
 * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.
 * @todo re-check https://issues.chromium.org/issues/42212588
 * @module
 */
const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);
const _32n = /* @__PURE__ */ BigInt(32);
function fromBig(n, le = false) {
    if (le)
        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };
    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };
}
function split(lst, le = false) {
    const len = lst.length;
    let Ah = new Uint32Array(len);
    let Al = new Uint32Array(len);
    for (let i = 0; i < len; i++) {
        const { h, l } = fromBig(lst[i], le);
        [Ah[i], Al[i]] = [h, l];
    }
    return [Ah, Al];
}
const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);
// for Shift in [0, 32)
const shrSH = (h, _l, s) => h >>> s;
const shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);
// Right rotate for Shift in [1, 32)
const rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));
const rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);
// Right rotate for Shift in (32, 64), NOTE: 32 is special case.
const rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));
const rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));
// Right rotate for shift===32 (just swaps l&h)
const rotr32H = (_h, l) => l;
const rotr32L = (h, _l) => h;
// Left rotate for Shift in [1, 32)
const rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));
const rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));
// Left rotate for Shift in (32, 64), NOTE: 32 is special case.
const rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));
const rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));
// JS uses 32-bit signed integers for bitwise operations which means we cannot
// simple take carry out of low bit sum by shift, we need to use division.
function add(Ah, Al, Bh, Bl) {
    const l = (Al >>> 0) + (Bl >>> 0);
    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };
}
// Addition with more than 2 elements
const add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);
const add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;
const add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);
const add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;
const add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);
const add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;
// prettier-ignore

// prettier-ignore
const u64 = {
    fromBig, split, toBig,
    shrSH, shrSL,
    rotrSH, rotrSL, rotrBH, rotrBL,
    rotr32H, rotr32L,
    rotlSH, rotlSL, rotlBH, rotlBL,
    add, add3L, add3H, add4L, add4H, add5H, add5L,
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (u64);
//# sourceMappingURL=_u64.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/@noble/hashes/esm/crypto.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/@noble/hashes/esm/crypto.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   crypto: () => (/* binding */ crypto)
/* harmony export */ });
const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;
//# sourceMappingURL=crypto.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/@noble/hashes/esm/sha3.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/@noble/hashes/esm/sha3.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Keccak: () => (/* binding */ Keccak),
/* harmony export */   keccakP: () => (/* binding */ keccakP),
/* harmony export */   keccak_224: () => (/* binding */ keccak_224),
/* harmony export */   keccak_256: () => (/* binding */ keccak_256),
/* harmony export */   keccak_384: () => (/* binding */ keccak_384),
/* harmony export */   keccak_512: () => (/* binding */ keccak_512),
/* harmony export */   sha3_224: () => (/* binding */ sha3_224),
/* harmony export */   sha3_256: () => (/* binding */ sha3_256),
/* harmony export */   sha3_384: () => (/* binding */ sha3_384),
/* harmony export */   sha3_512: () => (/* binding */ sha3_512),
/* harmony export */   shake128: () => (/* binding */ shake128),
/* harmony export */   shake256: () => (/* binding */ shake256)
/* harmony export */ });
/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_u64.js */ "./node_modules/@walletconnect/sign-client/node_modules/@noble/hashes/esm/_u64.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ "./node_modules/@walletconnect/sign-client/node_modules/@noble/hashes/esm/utils.js");
/**
 * SHA3 (keccak) hash function, based on a new "Sponge function" design.
 * Different from older hashes, the internal state is bigger than output size.
 *
 * Check out [FIPS-202](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf),
 * [Website](https://keccak.team/keccak.html),
 * [the differences between SHA-3 and Keccak](https://crypto.stackexchange.com/questions/15727/what-are-the-key-differences-between-the-draft-sha-3-standard-and-the-keccak-sub).
 *
 * Check out `sha3-addons` module for cSHAKE, k12, and others.
 * @module
 */

// prettier-ignore

// No __PURE__ annotations in sha3 header:
// EVERYTHING is in fact used on every export.
// Various per round constants calculations
const _0n = BigInt(0);
const _1n = BigInt(1);
const _2n = BigInt(2);
const _7n = BigInt(7);
const _256n = BigInt(256);
const _0x71n = BigInt(0x71);
const SHA3_PI = [];
const SHA3_ROTL = [];
const _SHA3_IOTA = [];
for (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {
    // Pi
    [x, y] = [y, (2 * x + 3 * y) % 5];
    SHA3_PI.push(2 * (5 * y + x));
    // Rotational
    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);
    // Iota
    let t = _0n;
    for (let j = 0; j < 7; j++) {
        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;
        if (R & _2n)
            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);
    }
    _SHA3_IOTA.push(t);
}
const IOTAS = (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.split)(_SHA3_IOTA, true);
const SHA3_IOTA_H = IOTAS[0];
const SHA3_IOTA_L = IOTAS[1];
// Left rotation (without 0, 32, 64)
const rotlH = (h, l, s) => (s > 32 ? (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlBH)(h, l, s) : (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlSH)(h, l, s));
const rotlL = (h, l, s) => (s > 32 ? (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlBL)(h, l, s) : (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlSL)(h, l, s));
/** `keccakf1600` internal function, additionally allows to adjust round count. */
function keccakP(s, rounds = 24) {
    const B = new Uint32Array(5 * 2);
    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)
    for (let round = 24 - rounds; round < 24; round++) {
        // Theta θ
        for (let x = 0; x < 10; x++)
            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];
        for (let x = 0; x < 10; x += 2) {
            const idx1 = (x + 8) % 10;
            const idx0 = (x + 2) % 10;
            const B0 = B[idx0];
            const B1 = B[idx0 + 1];
            const Th = rotlH(B0, B1, 1) ^ B[idx1];
            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];
            for (let y = 0; y < 50; y += 10) {
                s[x + y] ^= Th;
                s[x + y + 1] ^= Tl;
            }
        }
        // Rho (ρ) and Pi (π)
        let curH = s[2];
        let curL = s[3];
        for (let t = 0; t < 24; t++) {
            const shift = SHA3_ROTL[t];
            const Th = rotlH(curH, curL, shift);
            const Tl = rotlL(curH, curL, shift);
            const PI = SHA3_PI[t];
            curH = s[PI];
            curL = s[PI + 1];
            s[PI] = Th;
            s[PI + 1] = Tl;
        }
        // Chi (χ)
        for (let y = 0; y < 50; y += 10) {
            for (let x = 0; x < 10; x++)
                B[x] = s[y + x];
            for (let x = 0; x < 10; x++)
                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];
        }
        // Iota (ι)
        s[0] ^= SHA3_IOTA_H[round];
        s[1] ^= SHA3_IOTA_L[round];
    }
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.clean)(B);
}
/** Keccak sponge function. */
class Keccak extends _utils_js__WEBPACK_IMPORTED_MODULE_1__.Hash {
    // NOTE: we accept arguments in bytes instead of bits here.
    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {
        super();
        this.pos = 0;
        this.posOut = 0;
        this.finished = false;
        this.destroyed = false;
        this.enableXOF = false;
        this.blockLen = blockLen;
        this.suffix = suffix;
        this.outputLen = outputLen;
        this.enableXOF = enableXOF;
        this.rounds = rounds;
        // Can be passed from user as dkLen
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.anumber)(outputLen);
        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes
        // 0 < blockLen < 200
        if (!(0 < blockLen && blockLen < 200))
            throw new Error('only keccak-f1600 function is supported');
        this.state = new Uint8Array(200);
        this.state32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.u32)(this.state);
    }
    clone() {
        return this._cloneInto();
    }
    keccak() {
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.swap32IfBE)(this.state32);
        keccakP(this.state32, this.rounds);
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.swap32IfBE)(this.state32);
        this.posOut = 0;
        this.pos = 0;
    }
    update(data) {
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.aexists)(this);
        data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.toBytes)(data);
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.abytes)(data);
        const { blockLen, state } = this;
        const len = data.length;
        for (let pos = 0; pos < len;) {
            const take = Math.min(blockLen - this.pos, len - pos);
            for (let i = 0; i < take; i++)
                state[this.pos++] ^= data[pos++];
            if (this.pos === blockLen)
                this.keccak();
        }
        return this;
    }
    finish() {
        if (this.finished)
            return;
        this.finished = true;
        const { state, suffix, pos, blockLen } = this;
        // Do the padding
        state[pos] ^= suffix;
        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)
            this.keccak();
        state[blockLen - 1] ^= 0x80;
        this.keccak();
    }
    writeInto(out) {
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.aexists)(this, false);
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.abytes)(out);
        this.finish();
        const bufferOut = this.state;
        const { blockLen } = this;
        for (let pos = 0, len = out.length; pos < len;) {
            if (this.posOut >= blockLen)
                this.keccak();
            const take = Math.min(blockLen - this.posOut, len - pos);
            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);
            this.posOut += take;
            pos += take;
        }
        return out;
    }
    xofInto(out) {
        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF
        if (!this.enableXOF)
            throw new Error('XOF is not possible for this instance');
        return this.writeInto(out);
    }
    xof(bytes) {
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.anumber)(bytes);
        return this.xofInto(new Uint8Array(bytes));
    }
    digestInto(out) {
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.aoutput)(out, this);
        if (this.finished)
            throw new Error('digest() was already called');
        this.writeInto(out);
        this.destroy();
        return out;
    }
    digest() {
        return this.digestInto(new Uint8Array(this.outputLen));
    }
    destroy() {
        this.destroyed = true;
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.clean)(this.state);
    }
    _cloneInto(to) {
        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;
        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));
        to.state32.set(this.state32);
        to.pos = this.pos;
        to.posOut = this.posOut;
        to.finished = this.finished;
        to.rounds = rounds;
        // Suffix can change in cSHAKE
        to.suffix = suffix;
        to.outputLen = outputLen;
        to.enableXOF = enableXOF;
        to.destroyed = this.destroyed;
        return to;
    }
}
const gen = (suffix, blockLen, outputLen) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createHasher)(() => new Keccak(blockLen, suffix, outputLen));
/** SHA3-224 hash function. */
const sha3_224 = /* @__PURE__ */ (() => gen(0x06, 144, 224 / 8))();
/** SHA3-256 hash function. Different from keccak-256. */
const sha3_256 = /* @__PURE__ */ (() => gen(0x06, 136, 256 / 8))();
/** SHA3-384 hash function. */
const sha3_384 = /* @__PURE__ */ (() => gen(0x06, 104, 384 / 8))();
/** SHA3-512 hash function. */
const sha3_512 = /* @__PURE__ */ (() => gen(0x06, 72, 512 / 8))();
/** keccak-224 hash function. */
const keccak_224 = /* @__PURE__ */ (() => gen(0x01, 144, 224 / 8))();
/** keccak-256 hash function. Different from SHA3-256. */
const keccak_256 = /* @__PURE__ */ (() => gen(0x01, 136, 256 / 8))();
/** keccak-384 hash function. */
const keccak_384 = /* @__PURE__ */ (() => gen(0x01, 104, 384 / 8))();
/** keccak-512 hash function. */
const keccak_512 = /* @__PURE__ */ (() => gen(0x01, 72, 512 / 8))();
const genShake = (suffix, blockLen, outputLen) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createXOFer)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));
/** SHAKE128 XOF with 128-bit security. */
const shake128 = /* @__PURE__ */ (() => genShake(0x1f, 168, 128 / 8))();
/** SHAKE256 XOF with 256-bit security. */
const shake256 = /* @__PURE__ */ (() => genShake(0x1f, 136, 256 / 8))();
//# sourceMappingURL=sha3.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/@noble/hashes/esm/utils.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/@noble/hashes/esm/utils.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Hash: () => (/* binding */ Hash),
/* harmony export */   abytes: () => (/* binding */ abytes),
/* harmony export */   aexists: () => (/* binding */ aexists),
/* harmony export */   ahash: () => (/* binding */ ahash),
/* harmony export */   anumber: () => (/* binding */ anumber),
/* harmony export */   aoutput: () => (/* binding */ aoutput),
/* harmony export */   asyncLoop: () => (/* binding */ asyncLoop),
/* harmony export */   byteSwap: () => (/* binding */ byteSwap),
/* harmony export */   byteSwap32: () => (/* binding */ byteSwap32),
/* harmony export */   byteSwapIfBE: () => (/* binding */ byteSwapIfBE),
/* harmony export */   bytesToHex: () => (/* binding */ bytesToHex),
/* harmony export */   bytesToUtf8: () => (/* binding */ bytesToUtf8),
/* harmony export */   checkOpts: () => (/* binding */ checkOpts),
/* harmony export */   clean: () => (/* binding */ clean),
/* harmony export */   concatBytes: () => (/* binding */ concatBytes),
/* harmony export */   createHasher: () => (/* binding */ createHasher),
/* harmony export */   createOptHasher: () => (/* binding */ createOptHasher),
/* harmony export */   createView: () => (/* binding */ createView),
/* harmony export */   createXOFer: () => (/* binding */ createXOFer),
/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),
/* harmony export */   isBytes: () => (/* binding */ isBytes),
/* harmony export */   isLE: () => (/* binding */ isLE),
/* harmony export */   kdfInputToBytes: () => (/* binding */ kdfInputToBytes),
/* harmony export */   nextTick: () => (/* binding */ nextTick),
/* harmony export */   randomBytes: () => (/* binding */ randomBytes),
/* harmony export */   rotl: () => (/* binding */ rotl),
/* harmony export */   rotr: () => (/* binding */ rotr),
/* harmony export */   swap32IfBE: () => (/* binding */ swap32IfBE),
/* harmony export */   swap8IfBE: () => (/* binding */ swap8IfBE),
/* harmony export */   toBytes: () => (/* binding */ toBytes),
/* harmony export */   u32: () => (/* binding */ u32),
/* harmony export */   u8: () => (/* binding */ u8),
/* harmony export */   utf8ToBytes: () => (/* binding */ utf8ToBytes),
/* harmony export */   wrapConstructor: () => (/* binding */ wrapConstructor),
/* harmony export */   wrapConstructorWithOpts: () => (/* binding */ wrapConstructorWithOpts),
/* harmony export */   wrapXOFConstructorWithOpts: () => (/* binding */ wrapXOFConstructorWithOpts)
/* harmony export */ });
/* harmony import */ var _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/crypto */ "./node_modules/@walletconnect/sign-client/node_modules/@noble/hashes/esm/crypto.js");
/**
 * Utilities for hex, bytes, CSPRNG.
 * @module
 */
/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.
// node.js versions earlier than v19 don't declare it in global scope.
// For node.js, package.json#exports field mapping rewrites import
// from `crypto` to `cryptoNode`, which imports native module.
// Makes the utils un-importable in browsers without a bundler.
// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.

/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */
function isBytes(a) {
    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');
}
/** Asserts something is positive integer. */
function anumber(n) {
    if (!Number.isSafeInteger(n) || n < 0)
        throw new Error('positive integer expected, got ' + n);
}
/** Asserts something is Uint8Array. */
function abytes(b, ...lengths) {
    if (!isBytes(b))
        throw new Error('Uint8Array expected');
    if (lengths.length > 0 && !lengths.includes(b.length))
        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);
}
/** Asserts something is hash */
function ahash(h) {
    if (typeof h !== 'function' || typeof h.create !== 'function')
        throw new Error('Hash should be wrapped by utils.createHasher');
    anumber(h.outputLen);
    anumber(h.blockLen);
}
/** Asserts a hash instance has not been destroyed / finished */
function aexists(instance, checkFinished = true) {
    if (instance.destroyed)
        throw new Error('Hash instance has been destroyed');
    if (checkFinished && instance.finished)
        throw new Error('Hash#digest() has already been called');
}
/** Asserts output is properly-sized byte array */
function aoutput(out, instance) {
    abytes(out);
    const min = instance.outputLen;
    if (out.length < min) {
        throw new Error('digestInto() expects output buffer of length at least ' + min);
    }
}
/** Cast u8 / u16 / u32 to u8. */
function u8(arr) {
    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);
}
/** Cast u8 / u16 / u32 to u32. */
function u32(arr) {
    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));
}
/** Zeroize a byte array. Warning: JS provides no guarantees. */
function clean(...arrays) {
    for (let i = 0; i < arrays.length; i++) {
        arrays[i].fill(0);
    }
}
/** Create DataView of an array for easy byte-level manipulation. */
function createView(arr) {
    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);
}
/** The rotate right (circular right shift) operation for uint32 */
function rotr(word, shift) {
    return (word << (32 - shift)) | (word >>> shift);
}
/** The rotate left (circular left shift) operation for uint32 */
function rotl(word, shift) {
    return (word << shift) | ((word >>> (32 - shift)) >>> 0);
}
/** Is current platform little-endian? Most are. Big-Endian platform: IBM */
const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();
/** The byte swap operation for uint32 */
function byteSwap(word) {
    return (((word << 24) & 0xff000000) |
        ((word << 8) & 0xff0000) |
        ((word >>> 8) & 0xff00) |
        ((word >>> 24) & 0xff));
}
/** Conditionally byte swap if on a big-endian platform */
const swap8IfBE = isLE
    ? (n) => n
    : (n) => byteSwap(n);
/** @deprecated */
const byteSwapIfBE = swap8IfBE;
/** In place byte swap for Uint32Array */
function byteSwap32(arr) {
    for (let i = 0; i < arr.length; i++) {
        arr[i] = byteSwap(arr[i]);
    }
    return arr;
}
const swap32IfBE = isLE
    ? (u) => u
    : byteSwap32;
// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex
const hasHexBuiltin = /* @__PURE__ */ (() => 
// @ts-ignore
typeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();
// Array where index 0xf0 (240) is mapped to string 'f0'
const hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));
/**
 * Convert byte array to hex string. Uses built-in function, when available.
 * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'
 */
function bytesToHex(bytes) {
    abytes(bytes);
    // @ts-ignore
    if (hasHexBuiltin)
        return bytes.toHex();
    // pre-caching improves the speed 6x
    let hex = '';
    for (let i = 0; i < bytes.length; i++) {
        hex += hexes[bytes[i]];
    }
    return hex;
}
// We use optimized technique to convert hex string to byte array
const asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };
function asciiToBase16(ch) {
    if (ch >= asciis._0 && ch <= asciis._9)
        return ch - asciis._0; // '2' => 50-48
    if (ch >= asciis.A && ch <= asciis.F)
        return ch - (asciis.A - 10); // 'B' => 66-(65-10)
    if (ch >= asciis.a && ch <= asciis.f)
        return ch - (asciis.a - 10); // 'b' => 98-(97-10)
    return;
}
/**
 * Convert hex string to byte array. Uses built-in function, when available.
 * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])
 */
function hexToBytes(hex) {
    if (typeof hex !== 'string')
        throw new Error('hex string expected, got ' + typeof hex);
    // @ts-ignore
    if (hasHexBuiltin)
        return Uint8Array.fromHex(hex);
    const hl = hex.length;
    const al = hl / 2;
    if (hl % 2)
        throw new Error('hex string expected, got unpadded hex of length ' + hl);
    const array = new Uint8Array(al);
    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {
        const n1 = asciiToBase16(hex.charCodeAt(hi));
        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));
        if (n1 === undefined || n2 === undefined) {
            const char = hex[hi] + hex[hi + 1];
            throw new Error('hex string expected, got non-hex character "' + char + '" at index ' + hi);
        }
        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163
    }
    return array;
}
/**
 * There is no setImmediate in browser and setTimeout is slow.
 * Call of async fn will return Promise, which will be fullfiled only on
 * next scheduler queue processing step and this is exactly what we need.
 */
const nextTick = async () => { };
/** Returns control to thread each 'tick' ms to avoid blocking. */
async function asyncLoop(iters, tick, cb) {
    let ts = Date.now();
    for (let i = 0; i < iters; i++) {
        cb(i);
        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too
        const diff = Date.now() - ts;
        if (diff >= 0 && diff < tick)
            continue;
        await nextTick();
        ts += diff;
    }
}
/**
 * Converts string to bytes using UTF8 encoding.
 * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])
 */
function utf8ToBytes(str) {
    if (typeof str !== 'string')
        throw new Error('string expected');
    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809
}
/**
 * Converts bytes to string using UTF8 encoding.
 * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'
 */
function bytesToUtf8(bytes) {
    return new TextDecoder().decode(bytes);
}
/**
 * Normalizes (non-hex) string or Uint8Array to Uint8Array.
 * Warning: when Uint8Array is passed, it would NOT get copied.
 * Keep in mind for future mutable operations.
 */
function toBytes(data) {
    if (typeof data === 'string')
        data = utf8ToBytes(data);
    abytes(data);
    return data;
}
/**
 * Helper for KDFs: consumes uint8array or string.
 * When string is passed, does utf8 decoding, using TextDecoder.
 */
function kdfInputToBytes(data) {
    if (typeof data === 'string')
        data = utf8ToBytes(data);
    abytes(data);
    return data;
}
/** Copies several Uint8Arrays into one. */
function concatBytes(...arrays) {
    let sum = 0;
    for (let i = 0; i < arrays.length; i++) {
        const a = arrays[i];
        abytes(a);
        sum += a.length;
    }
    const res = new Uint8Array(sum);
    for (let i = 0, pad = 0; i < arrays.length; i++) {
        const a = arrays[i];
        res.set(a, pad);
        pad += a.length;
    }
    return res;
}
function checkOpts(defaults, opts) {
    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')
        throw new Error('options should be object or undefined');
    const merged = Object.assign(defaults, opts);
    return merged;
}
/** For runtime check if class implements interface */
class Hash {
}
/** Wraps hash function, creating an interface on top of it */
function createHasher(hashCons) {
    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();
    const tmp = hashCons();
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = () => hashCons();
    return hashC;
}
function createOptHasher(hashCons) {
    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();
    const tmp = hashCons({});
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = (opts) => hashCons(opts);
    return hashC;
}
function createXOFer(hashCons) {
    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();
    const tmp = hashCons({});
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = (opts) => hashCons(opts);
    return hashC;
}
const wrapConstructor = createHasher;
const wrapConstructorWithOpts = createOptHasher;
const wrapXOFConstructorWithOpts = createXOFer;
/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */
function randomBytes(bytesLength = 32) {
    if (_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto && typeof _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.getRandomValues === 'function') {
        return _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.getRandomValues(new Uint8Array(bytesLength));
    }
    // Legacy Node.js compatibility
    if (_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto && typeof _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.randomBytes === 'function') {
        return Uint8Array.from(_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.randomBytes(bytesLength));
    }
    throw new Error('crypto.getRandomValues must be defined');
}
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/@scure/base/lib/esm/index.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/@scure/base/lib/esm/index.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   base16: () => (/* binding */ base16),
/* harmony export */   base32: () => (/* binding */ base32),
/* harmony export */   base32crockford: () => (/* binding */ base32crockford),
/* harmony export */   base32hex: () => (/* binding */ base32hex),
/* harmony export */   base32hexnopad: () => (/* binding */ base32hexnopad),
/* harmony export */   base32nopad: () => (/* binding */ base32nopad),
/* harmony export */   base58: () => (/* binding */ base58),
/* harmony export */   base58check: () => (/* binding */ base58check),
/* harmony export */   base58flickr: () => (/* binding */ base58flickr),
/* harmony export */   base58xmr: () => (/* binding */ base58xmr),
/* harmony export */   base58xrp: () => (/* binding */ base58xrp),
/* harmony export */   base64: () => (/* binding */ base64),
/* harmony export */   base64nopad: () => (/* binding */ base64nopad),
/* harmony export */   base64url: () => (/* binding */ base64url),
/* harmony export */   base64urlnopad: () => (/* binding */ base64urlnopad),
/* harmony export */   bech32: () => (/* binding */ bech32),
/* harmony export */   bech32m: () => (/* binding */ bech32m),
/* harmony export */   bytes: () => (/* binding */ bytes),
/* harmony export */   bytesToString: () => (/* binding */ bytesToString),
/* harmony export */   createBase58check: () => (/* binding */ createBase58check),
/* harmony export */   hex: () => (/* binding */ hex),
/* harmony export */   str: () => (/* binding */ str),
/* harmony export */   stringToBytes: () => (/* binding */ stringToBytes),
/* harmony export */   utf8: () => (/* binding */ utf8),
/* harmony export */   utils: () => (/* binding */ utils)
/* harmony export */ });
/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */
function isBytes(a) {
    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');
}
/** Asserts something is Uint8Array. */
function abytes(b, ...lengths) {
    if (!isBytes(b))
        throw new Error('Uint8Array expected');
    if (lengths.length > 0 && !lengths.includes(b.length))
        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);
}
function isArrayOf(isString, arr) {
    if (!Array.isArray(arr))
        return false;
    if (arr.length === 0)
        return true;
    if (isString) {
        return arr.every((item) => typeof item === 'string');
    }
    else {
        return arr.every((item) => Number.isSafeInteger(item));
    }
}
// no abytes: seems to have 10% slowdown. Why?!
function afn(input) {
    if (typeof input !== 'function')
        throw new Error('function expected');
    return true;
}
function astr(label, input) {
    if (typeof input !== 'string')
        throw new Error(`${label}: string expected`);
    return true;
}
function anumber(n) {
    if (!Number.isSafeInteger(n))
        throw new Error(`invalid integer: ${n}`);
}
function aArr(input) {
    if (!Array.isArray(input))
        throw new Error('array expected');
}
function astrArr(label, input) {
    if (!isArrayOf(true, input))
        throw new Error(`${label}: array of strings expected`);
}
function anumArr(label, input) {
    if (!isArrayOf(false, input))
        throw new Error(`${label}: array of numbers expected`);
}
/**
 * @__NO_SIDE_EFFECTS__
 */
function chain(...args) {
    const id = (a) => a;
    // Wrap call in closure so JIT can inline calls
    const wrap = (a, b) => (c) => a(b(c));
    // Construct chain of args[-1].encode(args[-2].encode([...]))
    const encode = args.map((x) => x.encode).reduceRight(wrap, id);
    // Construct chain of args[0].decode(args[1].decode(...))
    const decode = args.map((x) => x.decode).reduce(wrap, id);
    return { encode, decode };
}
/**
 * Encodes integer radix representation to array of strings using alphabet and back.
 * Could also be array of strings.
 * @__NO_SIDE_EFFECTS__
 */
function alphabet(letters) {
    // mapping 1 to "b"
    const lettersA = typeof letters === 'string' ? letters.split('') : letters;
    const len = lettersA.length;
    astrArr('alphabet', lettersA);
    // mapping "b" to 1
    const indexes = new Map(lettersA.map((l, i) => [l, i]));
    return {
        encode: (digits) => {
            aArr(digits);
            return digits.map((i) => {
                if (!Number.isSafeInteger(i) || i < 0 || i >= len)
                    throw new Error(`alphabet.encode: digit index outside alphabet "${i}". Allowed: ${letters}`);
                return lettersA[i];
            });
        },
        decode: (input) => {
            aArr(input);
            return input.map((letter) => {
                astr('alphabet.decode', letter);
                const i = indexes.get(letter);
                if (i === undefined)
                    throw new Error(`Unknown letter: "${letter}". Allowed: ${letters}`);
                return i;
            });
        },
    };
}
/**
 * @__NO_SIDE_EFFECTS__
 */
function join(separator = '') {
    astr('join', separator);
    return {
        encode: (from) => {
            astrArr('join.decode', from);
            return from.join(separator);
        },
        decode: (to) => {
            astr('join.decode', to);
            return to.split(separator);
        },
    };
}
/**
 * Pad strings array so it has integer number of bits
 * @__NO_SIDE_EFFECTS__
 */
function padding(bits, chr = '=') {
    anumber(bits);
    astr('padding', chr);
    return {
        encode(data) {
            astrArr('padding.encode', data);
            while ((data.length * bits) % 8)
                data.push(chr);
            return data;
        },
        decode(input) {
            astrArr('padding.decode', input);
            let end = input.length;
            if ((end * bits) % 8)
                throw new Error('padding: invalid, string should have whole number of bytes');
            for (; end > 0 && input[end - 1] === chr; end--) {
                const last = end - 1;
                const byte = last * bits;
                if (byte % 8 === 0)
                    throw new Error('padding: invalid, string has too much padding');
            }
            return input.slice(0, end);
        },
    };
}
/**
 * @__NO_SIDE_EFFECTS__
 */
function normalize(fn) {
    afn(fn);
    return { encode: (from) => from, decode: (to) => fn(to) };
}
/**
 * Slow: O(n^2) time complexity
 */
function convertRadix(data, from, to) {
    // base 1 is impossible
    if (from < 2)
        throw new Error(`convertRadix: invalid from=${from}, base cannot be less than 2`);
    if (to < 2)
        throw new Error(`convertRadix: invalid to=${to}, base cannot be less than 2`);
    aArr(data);
    if (!data.length)
        return [];
    let pos = 0;
    const res = [];
    const digits = Array.from(data, (d) => {
        anumber(d);
        if (d < 0 || d >= from)
            throw new Error(`invalid integer: ${d}`);
        return d;
    });
    const dlen = digits.length;
    while (true) {
        let carry = 0;
        let done = true;
        for (let i = pos; i < dlen; i++) {
            const digit = digits[i];
            const fromCarry = from * carry;
            const digitBase = fromCarry + digit;
            if (!Number.isSafeInteger(digitBase) ||
                fromCarry / from !== carry ||
                digitBase - digit !== fromCarry) {
                throw new Error('convertRadix: carry overflow');
            }
            const div = digitBase / to;
            carry = digitBase % to;
            const rounded = Math.floor(div);
            digits[i] = rounded;
            if (!Number.isSafeInteger(rounded) || rounded * to + carry !== digitBase)
                throw new Error('convertRadix: carry overflow');
            if (!done)
                continue;
            else if (!rounded)
                pos = i;
            else
                done = false;
        }
        res.push(carry);
        if (done)
            break;
    }
    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)
        res.push(0);
    return res.reverse();
}
const gcd = (a, b) => (b === 0 ? a : gcd(b, a % b));
const radix2carry = /* @__NO_SIDE_EFFECTS__ */ (from, to) => from + (to - gcd(from, to));
const powers = /* @__PURE__ */ (() => {
    let res = [];
    for (let i = 0; i < 40; i++)
        res.push(2 ** i);
    return res;
})();
/**
 * Implemented with numbers, because BigInt is 5x slower
 */
function convertRadix2(data, from, to, padding) {
    aArr(data);
    if (from <= 0 || from > 32)
        throw new Error(`convertRadix2: wrong from=${from}`);
    if (to <= 0 || to > 32)
        throw new Error(`convertRadix2: wrong to=${to}`);
    if (radix2carry(from, to) > 32) {
        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);
    }
    let carry = 0;
    let pos = 0; // bitwise position in current element
    const max = powers[from];
    const mask = powers[to] - 1;
    const res = [];
    for (const n of data) {
        anumber(n);
        if (n >= max)
            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);
        carry = (carry << from) | n;
        if (pos + from > 32)
            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);
        pos += from;
        for (; pos >= to; pos -= to)
            res.push(((carry >> (pos - to)) & mask) >>> 0);
        const pow = powers[pos];
        if (pow === undefined)
            throw new Error('invalid carry');
        carry &= pow - 1; // clean carry, otherwise it will cause overflow
    }
    carry = (carry << (to - pos)) & mask;
    if (!padding && pos >= from)
        throw new Error('Excess padding');
    if (!padding && carry > 0)
        throw new Error(`Non-zero padding: ${carry}`);
    if (padding && pos > 0)
        res.push(carry >>> 0);
    return res;
}
/**
 * @__NO_SIDE_EFFECTS__
 */
function radix(num) {
    anumber(num);
    const _256 = 2 ** 8;
    return {
        encode: (bytes) => {
            if (!isBytes(bytes))
                throw new Error('radix.encode input should be Uint8Array');
            return convertRadix(Array.from(bytes), _256, num);
        },
        decode: (digits) => {
            anumArr('radix.decode', digits);
            return Uint8Array.from(convertRadix(digits, num, _256));
        },
    };
}
/**
 * If both bases are power of same number (like `2**8 <-> 2**64`),
 * there is a linear algorithm. For now we have implementation for power-of-two bases only.
 * @__NO_SIDE_EFFECTS__
 */
function radix2(bits, revPadding = false) {
    anumber(bits);
    if (bits <= 0 || bits > 32)
        throw new Error('radix2: bits should be in (0..32]');
    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)
        throw new Error('radix2: carry overflow');
    return {
        encode: (bytes) => {
            if (!isBytes(bytes))
                throw new Error('radix2.encode input should be Uint8Array');
            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);
        },
        decode: (digits) => {
            anumArr('radix2.decode', digits);
            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));
        },
    };
}
function unsafeWrapper(fn) {
    afn(fn);
    return function (...args) {
        try {
            return fn.apply(null, args);
        }
        catch (e) { }
    };
}
function checksum(len, fn) {
    anumber(len);
    afn(fn);
    return {
        encode(data) {
            if (!isBytes(data))
                throw new Error('checksum.encode: input should be Uint8Array');
            const sum = fn(data).slice(0, len);
            const res = new Uint8Array(data.length + len);
            res.set(data);
            res.set(sum, data.length);
            return res;
        },
        decode(data) {
            if (!isBytes(data))
                throw new Error('checksum.decode: input should be Uint8Array');
            const payload = data.slice(0, -len);
            const oldChecksum = data.slice(-len);
            const newChecksum = fn(payload).slice(0, len);
            for (let i = 0; i < len; i++)
                if (newChecksum[i] !== oldChecksum[i])
                    throw new Error('Invalid checksum');
            return payload;
        },
    };
}
// prettier-ignore
const utils = {
    alphabet, chain, checksum, convertRadix, convertRadix2, radix, radix2, join, padding,
};
// RFC 4648 aka RFC 3548
// ---------------------
/**
 * base16 encoding from RFC 4648.
 * @example
 * ```js
 * base16.encode(Uint8Array.from([0x12, 0xab]));
 * // => '12AB'
 * ```
 */
const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));
/**
 * base32 encoding from RFC 4648. Has padding.
 * Use `base32nopad` for unpadded version.
 * Also check out `base32hex`, `base32hexnopad`, `base32crockford`.
 * @example
 * ```js
 * base32.encode(Uint8Array.from([0x12, 0xab]));
 * // => 'CKVQ===='
 * base32.decode('CKVQ====');
 * // => Uint8Array.from([0x12, 0xab])
 * ```
 */
const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));
/**
 * base32 encoding from RFC 4648. No padding.
 * Use `base32` for padded version.
 * Also check out `base32hex`, `base32hexnopad`, `base32crockford`.
 * @example
 * ```js
 * base32nopad.encode(Uint8Array.from([0x12, 0xab]));
 * // => 'CKVQ'
 * base32nopad.decode('CKVQ');
 * // => Uint8Array.from([0x12, 0xab])
 * ```
 */
const base32nopad = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), join(''));
/**
 * base32 encoding from RFC 4648. Padded. Compared to ordinary `base32`, slightly different alphabet.
 * Use `base32hexnopad` for unpadded version.
 * @example
 * ```js
 * base32hex.encode(Uint8Array.from([0x12, 0xab]));
 * // => '2ALG===='
 * base32hex.decode('2ALG====');
 * // => Uint8Array.from([0x12, 0xab])
 * ```
 */
const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));
/**
 * base32 encoding from RFC 4648. No padding. Compared to ordinary `base32`, slightly different alphabet.
 * Use `base32hex` for padded version.
 * @example
 * ```js
 * base32hexnopad.encode(Uint8Array.from([0x12, 0xab]));
 * // => '2ALG'
 * base32hexnopad.decode('2ALG');
 * // => Uint8Array.from([0x12, 0xab])
 * ```
 */
const base32hexnopad = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), join(''));
/**
 * base32 encoding from RFC 4648. Doug Crockford's version.
 * https://www.crockford.com/base32.html
 * @example
 * ```js
 * base32crockford.encode(Uint8Array.from([0x12, 0xab]));
 * // => '2ANG'
 * base32crockford.decode('2ANG');
 * // => Uint8Array.from([0x12, 0xab])
 * ```
 */
const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));
// Built-in base64 conversion https://caniuse.com/mdn-javascript_builtins_uint8array_frombase64
// prettier-ignore
const hasBase64Builtin = /* @__PURE__ */ (() => typeof Uint8Array.from([]).toBase64 === 'function' &&
    typeof Uint8Array.fromBase64 === 'function')();
const decodeBase64Builtin = (s, isUrl) => {
    astr('base64', s);
    const re = isUrl ? /^[A-Za-z0-9=_-]+$/ : /^[A-Za-z0-9=+/]+$/;
    const alphabet = isUrl ? 'base64url' : 'base64';
    if (s.length > 0 && !re.test(s))
        throw new Error('invalid base64');
    return Uint8Array.fromBase64(s, { alphabet, lastChunkHandling: 'strict' });
};
/**
 * base64 from RFC 4648. Padded.
 * Use `base64nopad` for unpadded version.
 * Also check out `base64url`, `base64urlnopad`.
 * Falls back to built-in function, when available.
 * @example
 * ```js
 * base64.encode(Uint8Array.from([0x12, 0xab]));
 * // => 'Eqs='
 * base64.decode('Eqs=');
 * // => Uint8Array.from([0x12, 0xab])
 * ```
 */
// prettier-ignore
const base64 = hasBase64Builtin ? {
    encode(b) { abytes(b); return b.toBase64(); },
    decode(s) { return decodeBase64Builtin(s, false); },
} : chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));
/**
 * base64 from RFC 4648. No padding.
 * Use `base64` for padded version.
 * @example
 * ```js
 * base64nopad.encode(Uint8Array.from([0x12, 0xab]));
 * // => 'Eqs'
 * base64nopad.decode('Eqs');
 * // => Uint8Array.from([0x12, 0xab])
 * ```
 */
const base64nopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), join(''));
/**
 * base64 from RFC 4648, using URL-safe alphabet. Padded.
 * Use `base64urlnopad` for unpadded version.
 * Falls back to built-in function, when available.
 * @example
 * ```js
 * base64url.encode(Uint8Array.from([0x12, 0xab]));
 * // => 'Eqs='
 * base64url.decode('Eqs=');
 * // => Uint8Array.from([0x12, 0xab])
 * ```
 */
// prettier-ignore
const base64url = hasBase64Builtin ? {
    encode(b) { abytes(b); return b.toBase64({ alphabet: 'base64url' }); },
    decode(s) { return decodeBase64Builtin(s, true); },
} : chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));
/**
 * base64 from RFC 4648, using URL-safe alphabet. No padding.
 * Use `base64url` for padded version.
 * @example
 * ```js
 * base64urlnopad.encode(Uint8Array.from([0x12, 0xab]));
 * // => 'Eqs'
 * base64urlnopad.decode('Eqs');
 * // => Uint8Array.from([0x12, 0xab])
 * ```
 */
const base64urlnopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), join(''));
// base58 code
// -----------
const genBase58 = /* @__NO_SIDE_EFFECTS__ */ (abc) => chain(radix(58), alphabet(abc), join(''));
/**
 * base58: base64 without ambigous characters +, /, 0, O, I, l.
 * Quadratic (O(n^2)) - so, can't be used on large inputs.
 * @example
 * ```js
 * base58.decode('01abcdef');
 * // => '3UhJW'
 * ```
 */
const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');
/**
 * base58: flickr version. Check out `base58`.
 */
const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');
/**
 * base58: XRP version. Check out `base58`.
 */
const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');
// Data len (index) -> encoded block len
const XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];
/**
 * base58: XMR version. Check out `base58`.
 * Done in 8-byte blocks (which equals 11 chars in decoding). Last (non-full) block padded with '1' to size in XMR_BLOCK_LEN.
 * Block encoding significantly reduces quadratic complexity of base58.
 */
const base58xmr = {
    encode(data) {
        let res = '';
        for (let i = 0; i < data.length; i += 8) {
            const block = data.subarray(i, i + 8);
            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');
        }
        return res;
    },
    decode(str) {
        let res = [];
        for (let i = 0; i < str.length; i += 11) {
            const slice = str.slice(i, i + 11);
            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);
            const block = base58.decode(slice);
            for (let j = 0; j < block.length - blockLen; j++) {
                if (block[j] !== 0)
                    throw new Error('base58xmr: wrong padding');
            }
            res = res.concat(Array.from(block.slice(block.length - blockLen)));
        }
        return Uint8Array.from(res);
    },
};
/**
 * Method, which creates base58check encoder.
 * Requires function, calculating sha256.
 */
const createBase58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);
/**
 * Use `createBase58check` instead.
 * @deprecated
 */
const base58check = createBase58check;
const BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));
const POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];
function bech32Polymod(pre) {
    const b = pre >> 25;
    let chk = (pre & 0x1ffffff) << 5;
    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {
        if (((b >> i) & 1) === 1)
            chk ^= POLYMOD_GENERATORS[i];
    }
    return chk;
}
function bechChecksum(prefix, words, encodingConst = 1) {
    const len = prefix.length;
    let chk = 1;
    for (let i = 0; i < len; i++) {
        const c = prefix.charCodeAt(i);
        if (c < 33 || c > 126)
            throw new Error(`Invalid prefix (${prefix})`);
        chk = bech32Polymod(chk) ^ (c >> 5);
    }
    chk = bech32Polymod(chk);
    for (let i = 0; i < len; i++)
        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);
    for (let v of words)
        chk = bech32Polymod(chk) ^ v;
    for (let i = 0; i < 6; i++)
        chk = bech32Polymod(chk);
    chk ^= encodingConst;
    return BECH_ALPHABET.encode(convertRadix2([chk % powers[30]], 30, 5, false));
}
/**
 * @__NO_SIDE_EFFECTS__
 */
function genBech32(encoding) {
    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;
    const _words = radix2(5);
    const fromWords = _words.decode;
    const toWords = _words.encode;
    const fromWordsUnsafe = unsafeWrapper(fromWords);
    function encode(prefix, words, limit = 90) {
        astr('bech32.encode prefix', prefix);
        if (isBytes(words))
            words = Array.from(words);
        anumArr('bech32.encode', words);
        const plen = prefix.length;
        if (plen === 0)
            throw new TypeError(`Invalid prefix length ${plen}`);
        const actualLength = plen + 7 + words.length;
        if (limit !== false && actualLength > limit)
            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);
        const lowered = prefix.toLowerCase();
        const sum = bechChecksum(lowered, words, ENCODING_CONST);
        return `${lowered}1${BECH_ALPHABET.encode(words)}${sum}`;
    }
    function decode(str, limit = 90) {
        astr('bech32.decode input', str);
        const slen = str.length;
        if (slen < 8 || (limit !== false && slen > limit))
            throw new TypeError(`invalid string length: ${slen} (${str}). Expected (8..${limit})`);
        // don't allow mixed case
        const lowered = str.toLowerCase();
        if (str !== lowered && str !== str.toUpperCase())
            throw new Error(`String must be lowercase or uppercase`);
        const sepIndex = lowered.lastIndexOf('1');
        if (sepIndex === 0 || sepIndex === -1)
            throw new Error(`Letter "1" must be present between prefix and data only`);
        const prefix = lowered.slice(0, sepIndex);
        const data = lowered.slice(sepIndex + 1);
        if (data.length < 6)
            throw new Error('Data must be at least 6 characters long');
        const words = BECH_ALPHABET.decode(data).slice(0, -6);
        const sum = bechChecksum(prefix, words, ENCODING_CONST);
        if (!data.endsWith(sum))
            throw new Error(`Invalid checksum in ${str}: expected "${sum}"`);
        return { prefix, words };
    }
    const decodeUnsafe = unsafeWrapper(decode);
    function decodeToBytes(str) {
        const { prefix, words } = decode(str, false);
        return { prefix, words, bytes: fromWords(words) };
    }
    function encodeFromBytes(prefix, bytes) {
        return encode(prefix, toWords(bytes));
    }
    return {
        encode,
        decode,
        encodeFromBytes,
        decodeToBytes,
        decodeUnsafe,
        fromWords,
        fromWordsUnsafe,
        toWords,
    };
}
/**
 * bech32 from BIP 173. Operates on words.
 * For high-level, check out scure-btc-signer:
 * https://github.com/paulmillr/scure-btc-signer.
 */
const bech32 = genBech32('bech32');
/**
 * bech32m from BIP 350. Operates on words.
 * It was to mitigate `bech32` weaknesses.
 * For high-level, check out scure-btc-signer:
 * https://github.com/paulmillr/scure-btc-signer.
 */
const bech32m = genBech32('bech32m');
/**
 * UTF-8-to-byte decoder. Uses built-in TextDecoder / TextEncoder.
 * @example
 * ```js
 * const b = utf8.decode("hey"); // => new Uint8Array([ 104, 101, 121 ])
 * const str = utf8.encode(b); // "hey"
 * ```
 */
const utf8 = {
    encode: (data) => new TextDecoder().decode(data),
    decode: (str) => new TextEncoder().encode(str),
};
// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex
// prettier-ignore
const hasHexBuiltin = /* @__PURE__ */ (() => typeof Uint8Array.from([]).toHex === 'function' &&
    typeof Uint8Array.fromHex === 'function')();
// prettier-ignore
const hexBuiltin = {
    encode(data) { abytes(data); return data.toHex(); },
    decode(s) { astr('hex', s); return Uint8Array.fromHex(s); },
};
/**
 * hex string decoder. Uses built-in function, when available.
 * @example
 * ```js
 * const b = hex.decode("0102ff"); // => new Uint8Array([ 1, 2, 255 ])
 * const str = hex.encode(b); // "0102ff"
 * ```
 */
const hex = hasHexBuiltin
    ? hexBuiltin
    : chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {
        if (typeof s !== 'string' || s.length % 2 !== 0)
            throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);
        return s.toLowerCase();
    }));
// prettier-ignore
const CODERS = {
    utf8, hex, base16, base32, base64, base64url, base58, base58xmr
};
const coderTypeError = 'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';
/** @deprecated */
const bytesToString = (type, bytes) => {
    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))
        throw new TypeError(coderTypeError);
    if (!isBytes(bytes))
        throw new TypeError('bytesToString() expects Uint8Array');
    return CODERS[type].encode(bytes);
};
/** @deprecated */
const str = bytesToString; // as in python, but for bytes only
/** @deprecated */
const stringToBytes = (type, str) => {
    if (!CODERS.hasOwnProperty(type))
        throw new TypeError(coderTypeError);
    if (typeof str !== 'string')
        throw new TypeError('stringToBytes() expects string');
    return CODERS[type].decode(str);
};
/** @deprecated */
const bytes = stringToBytes;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/core/dist/index.es.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/core/dist/index.es.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CORE_CONTEXT: () => (/* binding */ pe),
/* harmony export */   CORE_DEFAULT: () => (/* binding */ It),
/* harmony export */   CORE_PROTOCOL: () => (/* binding */ Ue),
/* harmony export */   CORE_STORAGE_OPTIONS: () => (/* binding */ Tt),
/* harmony export */   CORE_STORAGE_PREFIX: () => (/* binding */ W),
/* harmony export */   CORE_VERSION: () => (/* binding */ Fe),
/* harmony export */   CRYPTO_CLIENT_SEED: () => (/* binding */ Me),
/* harmony export */   CRYPTO_CONTEXT: () => (/* binding */ Ct),
/* harmony export */   CRYPTO_JWT_TTL: () => (/* binding */ Pt),
/* harmony export */   Core: () => (/* binding */ ta),
/* harmony export */   Crypto: () => (/* binding */ Ei),
/* harmony export */   ECHO_CONTEXT: () => (/* binding */ Qt),
/* harmony export */   ECHO_URL: () => (/* binding */ ei),
/* harmony export */   EVENTS_CLIENT_API_URL: () => (/* binding */ ri),
/* harmony export */   EVENTS_STORAGE_CLEANUP_INTERVAL: () => (/* binding */ si),
/* harmony export */   EVENTS_STORAGE_CONTEXT: () => (/* binding */ ii),
/* harmony export */   EVENTS_STORAGE_VERSION: () => (/* binding */ ti),
/* harmony export */   EVENT_CLIENT_AUTHENTICATE_ERRORS: () => (/* binding */ ar),
/* harmony export */   EVENT_CLIENT_AUTHENTICATE_TRACES: () => (/* binding */ or),
/* harmony export */   EVENT_CLIENT_CONTEXT: () => (/* binding */ sr),
/* harmony export */   EVENT_CLIENT_PAIRING_ERRORS: () => (/* binding */ X),
/* harmony export */   EVENT_CLIENT_PAIRING_TRACES: () => (/* binding */ Y),
/* harmony export */   EVENT_CLIENT_SESSION_ERRORS: () => (/* binding */ nr),
/* harmony export */   EVENT_CLIENT_SESSION_TRACES: () => (/* binding */ rr),
/* harmony export */   EXPIRER_CONTEXT: () => (/* binding */ Wt),
/* harmony export */   EXPIRER_DEFAULT_TTL: () => (/* binding */ tr),
/* harmony export */   EXPIRER_EVENTS: () => (/* binding */ q),
/* harmony export */   EXPIRER_STORAGE_VERSION: () => (/* binding */ Ht),
/* harmony export */   EchoClient: () => (/* binding */ qi),
/* harmony export */   EventClient: () => (/* binding */ Wi),
/* harmony export */   Expirer: () => (/* binding */ Ki),
/* harmony export */   HISTORY_CONTEXT: () => (/* binding */ qt),
/* harmony export */   HISTORY_EVENTS: () => (/* binding */ V),
/* harmony export */   HISTORY_STORAGE_VERSION: () => (/* binding */ Gt),
/* harmony export */   JsonRpcHistory: () => (/* binding */ Mi),
/* harmony export */   KEYCHAIN_CONTEXT: () => (/* binding */ St),
/* harmony export */   KEYCHAIN_STORAGE_VERSION: () => (/* binding */ Ot),
/* harmony export */   KeyChain: () => (/* binding */ _i),
/* harmony export */   MESSAGES_CONTEXT: () => (/* binding */ Rt),
/* harmony export */   MESSAGES_STORAGE_VERSION: () => (/* binding */ At),
/* harmony export */   MESSAGE_DIRECTION: () => (/* binding */ ye),
/* harmony export */   MessageTracker: () => (/* binding */ Ti),
/* harmony export */   PAIRING_CONTEXT: () => (/* binding */ Bt),
/* harmony export */   PAIRING_DEFAULT_TTL: () => (/* binding */ er),
/* harmony export */   PAIRING_EVENTS: () => (/* binding */ ae),
/* harmony export */   PAIRING_RPC_OPTS: () => (/* binding */ oe),
/* harmony export */   PAIRING_STORAGE_VERSION: () => (/* binding */ Vt),
/* harmony export */   PENDING_SUB_RESOLUTION_TIMEOUT: () => (/* binding */ Qs),
/* harmony export */   PUBLISHER_CONTEXT: () => (/* binding */ Nt),
/* harmony export */   PUBLISHER_DEFAULT_TTL: () => (/* binding */ xt),
/* harmony export */   Pairing: () => (/* binding */ Fi),
/* harmony export */   RELAYER_CONTEXT: () => (/* binding */ Lt),
/* harmony export */   RELAYER_DEFAULT_LOGGER: () => (/* binding */ zt),
/* harmony export */   RELAYER_DEFAULT_PROTOCOL: () => (/* binding */ $t),
/* harmony export */   RELAYER_DEFAULT_RELAY_URL: () => (/* binding */ Ke),
/* harmony export */   RELAYER_EVENTS: () => (/* binding */ C),
/* harmony export */   RELAYER_PROVIDER_EVENTS: () => (/* binding */ M),
/* harmony export */   RELAYER_RECONNECT_TIMEOUT: () => (/* binding */ jt),
/* harmony export */   RELAYER_SDK_VERSION: () => (/* binding */ Pe),
/* harmony export */   RELAYER_STORAGE_OPTIONS: () => (/* binding */ Js),
/* harmony export */   RELAYER_SUBSCRIBER_SUFFIX: () => (/* binding */ kt),
/* harmony export */   RELAYER_TRANSPORT_CUTOFF: () => (/* binding */ Xs),
/* harmony export */   Relayer: () => (/* binding */ xi),
/* harmony export */   STORE_STORAGE_VERSION: () => (/* binding */ Ut),
/* harmony export */   SUBSCRIBER_CONTEXT: () => (/* binding */ Mt),
/* harmony export */   SUBSCRIBER_DEFAULT_TTL: () => (/* binding */ Zs),
/* harmony export */   SUBSCRIBER_EVENTS: () => (/* binding */ U),
/* harmony export */   SUBSCRIBER_STORAGE_VERSION: () => (/* binding */ Kt),
/* harmony export */   Store: () => (/* binding */ Ui),
/* harmony export */   Subscriber: () => (/* binding */ Oi),
/* harmony export */   TRANSPORT_TYPES: () => (/* binding */ ee),
/* harmony export */   TRUSTED_VERIFY_URLS: () => (/* binding */ Zt),
/* harmony export */   VERIFY_CONTEXT: () => (/* binding */ Yt),
/* harmony export */   VERIFY_SERVER: () => (/* binding */ be),
/* harmony export */   VERIFY_SERVER_V3: () => (/* binding */ Xt),
/* harmony export */   Verify: () => (/* binding */ Bi),
/* harmony export */   WALLETCONNECT_CLIENT_ID: () => (/* binding */ Ft),
/* harmony export */   WALLETCONNECT_LINK_MODE_APPS: () => (/* binding */ Be),
/* harmony export */   "default": () => (/* binding */ Oe)
/* harmony export */ });
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ "./node_modules/events/events.js");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/heartbeat */ "./node_modules/@walletconnect/heartbeat/dist/index.es.js");
/* harmony import */ var _walletconnect_keyvaluestorage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/keyvaluestorage */ "./node_modules/@walletconnect/keyvaluestorage/dist/index.es.js");
/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/logger */ "./node_modules/@walletconnect/logger/dist/index.es.js");
/* harmony import */ var _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @walletconnect/types */ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/types/dist/index.es.js");
/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @walletconnect/time */ "./node_modules/@walletconnect/time/dist/cjs/index.js");
/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @walletconnect/safe-json */ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/safe-json/dist/esm/index.js");
/* harmony import */ var _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @walletconnect/relay-auth */ "./node_modules/@walletconnect/relay-auth/dist/index.es.js");
/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @walletconnect/utils */ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/utils/dist/index.es.js");
/* harmony import */ var uint8arrays__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! uint8arrays */ "./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/index.js");
/* harmony import */ var _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @walletconnect/jsonrpc-provider */ "./node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js");
/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js");
/* harmony import */ var _walletconnect_jsonrpc_ws_connection__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @walletconnect/jsonrpc-ws-connection */ "./node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js");
/* harmony import */ var _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @walletconnect/window-getters */ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/window-getters/dist/cjs/index.js");
/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js")["Buffer"];
/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ "./node_modules/process/browser.js");
const Ue="wc",Fe=2,pe="core",W=`${Ue}@2:${pe}:`,It={name:pe,logger:"error"},Tt={database:":memory:"},Ct="crypto",Me="client_ed25519_seed",Pt=_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.ONE_DAY,St="keychain",Ot="0.3",Rt="messages",At="0.3",xt=_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.SIX_HOURS,Nt="publisher",$t="irn",zt="error",Ke="wss://relay.walletconnect.org",Lt="relayer",C={message:"relayer_message",message_ack:"relayer_message_ack",connect:"relayer_connect",disconnect:"relayer_disconnect",error:"relayer_error",connection_stalled:"relayer_connection_stalled",transport_closed:"relayer_transport_closed",publish:"relayer_publish"},kt="_subscription",M={payload:"payload",connect:"connect",disconnect:"disconnect",error:"error"},jt=.1,Js={database:":memory:"},Pe="2.21.8",Xs=1e4,ee={link_mode:"link_mode",relay:"relay"},ye={inbound:"inbound",outbound:"outbound"},Ut="0.3",Ft="WALLETCONNECT_CLIENT_ID",Be="WALLETCONNECT_LINK_MODE_APPS",U={created:"subscription_created",deleted:"subscription_deleted",expired:"subscription_expired",disabled:"subscription_disabled",sync:"subscription_sync",resubscribed:"subscription_resubscribed"},Zs=_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.THIRTY_DAYS,Mt="subscription",Kt="0.3",Qs=_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.FIVE_SECONDS*1e3,Bt="pairing",Vt="0.3",er=_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.THIRTY_DAYS,oe={wc_pairingDelete:{req:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.ONE_DAY,prompt:!1,tag:1e3},res:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.ONE_DAY,prompt:!1,tag:1001}},wc_pairingPing:{req:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.THIRTY_SECONDS,prompt:!1,tag:1002},res:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.THIRTY_SECONDS,prompt:!1,tag:1003}},unregistered_method:{req:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.ONE_DAY,prompt:!1,tag:0},res:{ttl:_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.ONE_DAY,prompt:!1,tag:0}}},ae={create:"pairing_create",expire:"pairing_expire",delete:"pairing_delete",ping:"pairing_ping"},V={created:"history_created",updated:"history_updated",deleted:"history_deleted",sync:"history_sync"},qt="history",Gt="0.3",Wt="expirer",q={created:"expirer_created",deleted:"expirer_deleted",expired:"expirer_expired",sync:"expirer_sync"},Ht="0.3",tr=_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.ONE_DAY,Yt="verify-api",ir="https://verify.walletconnect.com",Jt="https://verify.walletconnect.org",be=Jt,Xt=`${be}/v3`,Zt=[ir,Jt],Qt="echo",ei="https://echo.walletconnect.com",sr="event-client",Y={pairing_started:"pairing_started",pairing_uri_validation_success:"pairing_uri_validation_success",pairing_uri_not_expired:"pairing_uri_not_expired",store_new_pairing:"store_new_pairing",subscribing_pairing_topic:"subscribing_pairing_topic",subscribe_pairing_topic_success:"subscribe_pairing_topic_success",existing_pairing:"existing_pairing",pairing_not_expired:"pairing_not_expired",emit_inactive_pairing:"emit_inactive_pairing",emit_session_proposal:"emit_session_proposal",subscribing_to_pairing_topic:"subscribing_to_pairing_topic"},X={no_wss_connection:"no_wss_connection",no_internet_connection:"no_internet_connection",malformed_pairing_uri:"malformed_pairing_uri",active_pairing_already_exists:"active_pairing_already_exists",subscribe_pairing_topic_failure:"subscribe_pairing_topic_failure",pairing_expired:"pairing_expired",proposal_expired:"proposal_expired",proposal_listener_not_found:"proposal_listener_not_found"},rr={session_approve_started:"session_approve_started",proposal_not_expired:"proposal_not_expired",session_namespaces_validation_success:"session_namespaces_validation_success",create_session_topic:"create_session_topic",subscribing_session_topic:"subscribing_session_topic",subscribe_session_topic_success:"subscribe_session_topic_success",publishing_session_approve:"publishing_session_approve",session_approve_publish_success:"session_approve_publish_success",store_session:"store_session",publishing_session_settle:"publishing_session_settle",session_settle_publish_success:"session_settle_publish_success"},nr={no_internet_connection:"no_internet_connection",no_wss_connection:"no_wss_connection",proposal_expired:"proposal_expired",subscribe_session_topic_failure:"subscribe_session_topic_failure",session_approve_publish_failure:"session_approve_publish_failure",session_settle_publish_failure:"session_settle_publish_failure",session_approve_namespace_validation_failure:"session_approve_namespace_validation_failure",proposal_not_found:"proposal_not_found"},or={authenticated_session_approve_started:"authenticated_session_approve_started",authenticated_session_not_expired:"authenticated_session_not_expired",chains_caip2_compliant:"chains_caip2_compliant",chains_evm_compliant:"chains_evm_compliant",create_authenticated_session_topic:"create_authenticated_session_topic",cacaos_verified:"cacaos_verified",store_authenticated_session:"store_authenticated_session",subscribing_authenticated_session_topic:"subscribing_authenticated_session_topic",subscribe_authenticated_session_topic_success:"subscribe_authenticated_session_topic_success",publishing_authenticated_session_approve:"publishing_authenticated_session_approve",authenticated_session_approve_publish_success:"authenticated_session_approve_publish_success"},ar={no_internet_connection:"no_internet_connection",no_wss_connection:"no_wss_connection",missing_session_authenticate_request:"missing_session_authenticate_request",session_authenticate_request_expired:"session_authenticate_request_expired",chains_caip2_compliant_failure:"chains_caip2_compliant_failure",chains_evm_compliant_failure:"chains_evm_compliant_failure",invalid_cacao:"invalid_cacao",subscribe_authenticated_session_topic_failure:"subscribe_authenticated_session_topic_failure",authenticated_session_approve_publish_failure:"authenticated_session_approve_publish_failure",authenticated_session_pending_request_not_found:"authenticated_session_pending_request_not_found"},ti=.1,ii="event-client",si=86400,ri="https://pulse.walletconnect.org/batch";function cr(r,e){if(r.length>=255)throw new TypeError("Alphabet too long");for(var t=new Uint8Array(256),i=0;i<t.length;i++)t[i]=255;for(var s=0;s<r.length;s++){var n=r.charAt(s),o=n.charCodeAt(0);if(t[o]!==255)throw new TypeError(n+" is ambiguous");t[o]=s}var a=r.length,c=r.charAt(0),h=Math.log(a)/Math.log(256),l=Math.log(256)/Math.log(a);function p(u){if(u instanceof Uint8Array||(ArrayBuffer.isView(u)?u=new Uint8Array(u.buffer,u.byteOffset,u.byteLength):Array.isArray(u)&&(u=Uint8Array.from(u))),!(u instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(u.length===0)return"";for(var m=0,D=0,_=0,E=u.length;_!==E&&u[_]===0;)_++,m++;for(var L=(E-_)*l+1>>>0,I=new Uint8Array(L);_!==E;){for(var k=u[_],T=0,S=L-1;(k!==0||T<D)&&S!==-1;S--,T++)k+=256*I[S]>>>0,I[S]=k%a>>>0,k=k/a>>>0;if(k!==0)throw new Error("Non-zero carry");D=T,_++}for(var O=L-D;O!==L&&I[O]===0;)O++;for(var te=c.repeat(m);O<L;++O)te+=r.charAt(I[O]);return te}function y(u){if(typeof u!="string")throw new TypeError("Expected String");if(u.length===0)return new Uint8Array;var m=0;if(u[m]!==" "){for(var D=0,_=0;u[m]===c;)D++,m++;for(var E=(u.length-m)*h+1>>>0,L=new Uint8Array(E);u[m];){var I=t[u.charCodeAt(m)];if(I===255)return;for(var k=0,T=E-1;(I!==0||k<_)&&T!==-1;T--,k++)I+=a*L[T]>>>0,L[T]=I%256>>>0,I=I/256>>>0;if(I!==0)throw new Error("Non-zero carry");_=k,m++}if(u[m]!==" "){for(var S=E-_;S!==E&&L[S]===0;)S++;for(var O=new Uint8Array(D+(E-S)),te=D;S!==E;)O[te++]=L[S++];return O}}}function w(u){var m=y(u);if(m)return m;throw new Error(`Non-${e} character`)}return{encode:p,decodeUnsafe:y,decode:w}}var hr=cr,lr=hr;const ni=r=>{if(r instanceof Uint8Array&&r.constructor.name==="Uint8Array")return r;if(r instanceof ArrayBuffer)return new Uint8Array(r);if(ArrayBuffer.isView(r))return new Uint8Array(r.buffer,r.byteOffset,r.byteLength);throw new Error("Unknown type, must be binary type")},ur=r=>new TextEncoder().encode(r),dr=r=>new TextDecoder().decode(r);class gr{constructor(e,t,i){this.name=e,this.prefix=t,this.baseEncode=i}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}}class pr{constructor(e,t,i){if(this.name=e,this.prefix=t,t.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=t.codePointAt(0),this.baseDecode=i}decode(e){if(typeof e=="string"){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(e){return oi(this,e)}}class yr{constructor(e){this.decoders=e}or(e){return oi(this,e)}decode(e){const t=e[0],i=this.decoders[t];if(i)return i.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}}const oi=(r,e)=>new yr({...r.decoders||{[r.prefix]:r},...e.decoders||{[e.prefix]:e}});class br{constructor(e,t,i,s){this.name=e,this.prefix=t,this.baseEncode=i,this.baseDecode=s,this.encoder=new gr(e,t,i),this.decoder=new pr(e,t,s)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}}const Se=({name:r,prefix:e,encode:t,decode:i})=>new br(r,e,t,i),me=({prefix:r,name:e,alphabet:t})=>{const{encode:i,decode:s}=lr(t,e);return Se({prefix:r,name:e,encode:i,decode:n=>ni(s(n))})},mr=(r,e,t,i)=>{const s={};for(let l=0;l<e.length;++l)s[e[l]]=l;let n=r.length;for(;r[n-1]==="=";)--n;const o=new Uint8Array(n*t/8|0);let a=0,c=0,h=0;for(let l=0;l<n;++l){const p=s[r[l]];if(p===void 0)throw new SyntaxError(`Non-${i} character`);c=c<<t|p,a+=t,a>=8&&(a-=8,o[h++]=255&c>>a)}if(a>=t||255&c<<8-a)throw new SyntaxError("Unexpected end of data");return o},fr=(r,e,t)=>{const i=e[e.length-1]==="=",s=(1<<t)-1;let n="",o=0,a=0;for(let c=0;c<r.length;++c)for(a=a<<8|r[c],o+=8;o>t;)o-=t,n+=e[s&a>>o];if(o&&(n+=e[s&a<<t-o]),i)for(;n.length*t&7;)n+="=";return n},A=({name:r,prefix:e,bitsPerChar:t,alphabet:i})=>Se({prefix:e,name:r,encode(s){return fr(s,i,t)},decode(s){return mr(s,i,t,r)}}),Dr=Se({prefix:"\0",name:"identity",encode:r=>dr(r),decode:r=>ur(r)});var vr=Object.freeze({__proto__:null,identity:Dr});const wr=A({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1});var _r=Object.freeze({__proto__:null,base2:wr});const Er=A({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3});var Ir=Object.freeze({__proto__:null,base8:Er});const Tr=me({prefix:"9",name:"base10",alphabet:"0123456789"});var Cr=Object.freeze({__proto__:null,base10:Tr});const Pr=A({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),Sr=A({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4});var Or=Object.freeze({__proto__:null,base16:Pr,base16upper:Sr});const Rr=A({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),Ar=A({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),xr=A({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),Nr=A({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),$r=A({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),zr=A({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),Lr=A({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),kr=A({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),jr=A({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});var Ur=Object.freeze({__proto__:null,base32:Rr,base32upper:Ar,base32pad:xr,base32padupper:Nr,base32hex:$r,base32hexupper:zr,base32hexpad:Lr,base32hexpadupper:kr,base32z:jr});const Fr=me({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),Mr=me({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"});var Kr=Object.freeze({__proto__:null,base36:Fr,base36upper:Mr});const Br=me({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),Vr=me({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});var qr=Object.freeze({__proto__:null,base58btc:Br,base58flickr:Vr});const Gr=A({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),Wr=A({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),Hr=A({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),Yr=A({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6});var Jr=Object.freeze({__proto__:null,base64:Gr,base64pad:Wr,base64url:Hr,base64urlpad:Yr});const ai=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),Xr=ai.reduce((r,e,t)=>(r[t]=e,r),[]),Zr=ai.reduce((r,e,t)=>(r[e.codePointAt(0)]=t,r),[]);function Qr(r){return r.reduce((e,t)=>(e+=Xr[t],e),"")}function en(r){const e=[];for(const t of r){const i=Zr[t.codePointAt(0)];if(i===void 0)throw new Error(`Non-base256emoji character: ${t}`);e.push(i)}return new Uint8Array(e)}const tn=Se({prefix:"\u{1F680}",name:"base256emoji",encode:Qr,decode:en});var sn=Object.freeze({__proto__:null,base256emoji:tn}),rn=hi,ci=128,nn=127,on=~nn,an=Math.pow(2,31);function hi(r,e,t){e=e||[],t=t||0;for(var i=t;r>=an;)e[t++]=r&255|ci,r/=128;for(;r&on;)e[t++]=r&255|ci,r>>>=7;return e[t]=r|0,hi.bytes=t-i+1,e}var cn=Ve,hn=128,li=127;function Ve(r,i){var t=0,i=i||0,s=0,n=i,o,a=r.length;do{if(n>=a)throw Ve.bytes=0,new RangeError("Could not decode varint");o=r[n++],t+=s<28?(o&li)<<s:(o&li)*Math.pow(2,s),s+=7}while(o>=hn);return Ve.bytes=n-i,t}var ln=Math.pow(2,7),un=Math.pow(2,14),dn=Math.pow(2,21),gn=Math.pow(2,28),pn=Math.pow(2,35),yn=Math.pow(2,42),bn=Math.pow(2,49),mn=Math.pow(2,56),fn=Math.pow(2,63),Dn=function(r){return r<ln?1:r<un?2:r<dn?3:r<gn?4:r<pn?5:r<yn?6:r<bn?7:r<mn?8:r<fn?9:10},vn={encode:rn,decode:cn,encodingLength:Dn},ui=vn;const di=(r,e,t=0)=>(ui.encode(r,e,t),e),gi=r=>ui.encodingLength(r),qe=(r,e)=>{const t=e.byteLength,i=gi(r),s=i+gi(t),n=new Uint8Array(s+t);return di(r,n,0),di(t,n,i),n.set(e,s),new wn(r,t,e,n)};class wn{constructor(e,t,i,s){this.code=e,this.size=t,this.digest=i,this.bytes=s}}const pi=({name:r,code:e,encode:t})=>new _n(r,e,t);class _n{constructor(e,t,i){this.name=e,this.code=t,this.encode=i}digest(e){if(e instanceof Uint8Array){const t=this.encode(e);return t instanceof Uint8Array?qe(this.code,t):t.then(i=>qe(this.code,i))}else throw Error("Unknown type, must be binary type")}}const yi=r=>async e=>new Uint8Array(await crypto.subtle.digest(r,e)),En=pi({name:"sha2-256",code:18,encode:yi("SHA-256")}),In=pi({name:"sha2-512",code:19,encode:yi("SHA-512")});var Tn=Object.freeze({__proto__:null,sha256:En,sha512:In});const bi=0,Cn="identity",mi=ni,Pn=r=>qe(bi,mi(r)),Sn={code:bi,name:Cn,encode:mi,digest:Pn};var On=Object.freeze({__proto__:null,identity:Sn});new TextEncoder,new TextDecoder;const fi={...vr,..._r,...Ir,...Cr,...Or,...Ur,...Kr,...qr,...Jr,...sn};({...Tn,...On});function Di(r){return globalThis.Buffer!=null?new Uint8Array(r.buffer,r.byteOffset,r.byteLength):r}function Rn(r=0){return globalThis.Buffer!=null&&globalThis.Buffer.allocUnsafe!=null?Di(globalThis.Buffer.allocUnsafe(r)):new Uint8Array(r)}function vi(r,e,t,i){return{name:r,prefix:e,encoder:{name:r,prefix:e,encode:t},decoder:{decode:i}}}const wi=vi("utf8","u",r=>"u"+new TextDecoder("utf8").decode(r),r=>new TextEncoder().encode(r.substring(1))),Ge=vi("ascii","a",r=>{let e="a";for(let t=0;t<r.length;t++)e+=String.fromCharCode(r[t]);return e},r=>{r=r.substring(1);const e=Rn(r.length);for(let t=0;t<r.length;t++)e[t]=r.charCodeAt(t);return e}),An={utf8:wi,"utf-8":wi,hex:fi.base16,latin1:Ge,ascii:Ge,binary:Ge,...fi};function xn(r,e="utf8"){const t=An[e];if(!t)throw new Error(`Unsupported encoding "${e}"`);return(e==="utf8"||e==="utf-8")&&globalThis.Buffer!=null&&globalThis.Buffer.from!=null?Di(globalThis.Buffer.from(r,"utf-8")):t.decoder.decode(`${t.prefix}${r}`)}var Nn=Object.defineProperty,$n=(r,e,t)=>e in r?Nn(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,J=(r,e,t)=>$n(r,typeof e!="symbol"?e+"":e,t);class _i{constructor(e,t){this.core=e,this.logger=t,J(this,"keychain",new Map),J(this,"name",St),J(this,"version",Ot),J(this,"initialized",!1),J(this,"storagePrefix",W),J(this,"init",async()=>{if(!this.initialized){const i=await this.getKeyChain();typeof i<"u"&&(this.keychain=i),this.initialized=!0}}),J(this,"has",i=>(this.isInitialized(),this.keychain.has(i))),J(this,"set",async(i,s)=>{this.isInitialized(),this.keychain.set(i,s),await this.persist()}),J(this,"get",i=>{this.isInitialized();const s=this.keychain.get(i);if(typeof s>"u"){const{message:n}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NO_MATCHING_KEY",`${this.name}: ${i}`);throw new Error(n)}return s}),J(this,"del",async i=>{this.isInitialized(),this.keychain.delete(i),await this.persist()}),this.core=e,this.logger=(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t,this.name)}get context(){return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger)}get storageKey(){return this.storagePrefix+this.version+this.core.customStoragePrefix+"//"+this.name}async setKeyChain(e){await this.core.storage.setItem(this.storageKey,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.mapToObj)(e))}async getKeyChain(){const e=await this.core.storage.getItem(this.storageKey);return typeof e<"u"?(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.objToMap)(e):void 0}async persist(){await this.setKeyChain(this.keychain)}isInitialized(){if(!this.initialized){const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NOT_INITIALIZED",this.name);throw new Error(e)}}}var zn=Object.defineProperty,Ln=(r,e,t)=>e in r?zn(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,x=(r,e,t)=>Ln(r,typeof e!="symbol"?e+"":e,t);class Ei{constructor(e,t,i){this.core=e,this.logger=t,x(this,"name",Ct),x(this,"keychain"),x(this,"randomSessionIdentifier",(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.generateRandomBytes32)()),x(this,"initialized",!1),x(this,"init",async()=>{this.initialized||(await this.keychain.init(),this.initialized=!0)}),x(this,"hasKeys",s=>(this.isInitialized(),this.keychain.has(s))),x(this,"getClientId",async()=>{this.isInitialized();const s=await this.getClientSeed(),n=_walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_7__.generateKeyPair(s);return _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_7__.encodeIss(n.publicKey)}),x(this,"generateKeyPair",()=>{this.isInitialized();const s=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.generateKeyPair)();return this.setPrivateKey(s.publicKey,s.privateKey)}),x(this,"signJWT",async s=>{this.isInitialized();const n=await this.getClientSeed(),o=_walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_7__.generateKeyPair(n),a=this.randomSessionIdentifier,c=Pt;return await _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_7__.signJWT(a,s,c,o)}),x(this,"generateSharedKey",(s,n,o)=>{this.isInitialized();const a=this.getPrivateKey(s),c=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.deriveSymKey)(a,n);return this.setSymKey(c,o)}),x(this,"setSymKey",async(s,n)=>{this.isInitialized();const o=n||(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.hashKey)(s);return await this.keychain.set(o,s),o}),x(this,"deleteKeyPair",async s=>{this.isInitialized(),await this.keychain.del(s)}),x(this,"deleteSymKey",async s=>{this.isInitialized(),await this.keychain.del(s)}),x(this,"encode",async(s,n,o)=>{this.isInitialized();const a=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.validateEncoding)(o),c=(0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_6__.safeJsonStringify)(n);if((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isTypeTwoEnvelope)(a))return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.encodeTypeTwoEnvelope)(c,o?.encoding);if((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isTypeOneEnvelope)(a)){const y=a.senderPublicKey,w=a.receiverPublicKey;s=await this.generateSharedKey(y,w)}const h=this.getSymKey(s),{type:l,senderPublicKey:p}=a;return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.encrypt)({type:l,symKey:h,message:c,senderPublicKey:p,encoding:o?.encoding})}),x(this,"decode",async(s,n,o)=>{this.isInitialized();const a=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.validateDecoding)(n,o);if((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isTypeTwoEnvelope)(a)){const c=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.decodeTypeTwoEnvelope)(n,o?.encoding);return (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_6__.safeJsonParse)(c)}if((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isTypeOneEnvelope)(a)){const c=a.receiverPublicKey,h=a.senderPublicKey;s=await this.generateSharedKey(c,h)}try{const c=this.getSymKey(s),h=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.decrypt)({symKey:c,encoded:n,encoding:o?.encoding});return (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_6__.safeJsonParse)(h)}catch(c){this.logger.error(`Failed to decode message from topic: '${s}', clientId: '${await this.getClientId()}'`),this.logger.error(c)}}),x(this,"getPayloadType",(s,n=_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.BASE64)=>{const o=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.deserialize)({encoded:s,encoding:n});return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.decodeTypeByte)(o.type)}),x(this,"getPayloadSenderPublicKey",(s,n=_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.BASE64)=>{const o=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.deserialize)({encoded:s,encoding:n});return o.senderPublicKey?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(o.senderPublicKey,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.BASE16):void 0}),this.core=e,this.logger=(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t,this.name),this.keychain=i||new _i(this.core,this.logger)}get context(){return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger)}async setPrivateKey(e,t){return await this.keychain.set(e,t),e}getPrivateKey(e){return this.keychain.get(e)}async getClientSeed(){let e="";try{e=this.keychain.get(Me)}catch{e=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.generateRandomBytes32)(),await this.keychain.set(Me,e)}return xn(e,"base16")}getSymKey(e){return this.keychain.get(e)}isInitialized(){if(!this.initialized){const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NOT_INITIALIZED",this.name);throw new Error(e)}}}var kn=Object.defineProperty,jn=Object.defineProperties,Un=Object.getOwnPropertyDescriptors,Ii=Object.getOwnPropertySymbols,Fn=Object.prototype.hasOwnProperty,Mn=Object.prototype.propertyIsEnumerable,We=(r,e,t)=>e in r?kn(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,Kn=(r,e)=>{for(var t in e||(e={}))Fn.call(e,t)&&We(r,t,e[t]);if(Ii)for(var t of Ii(e))Mn.call(e,t)&&We(r,t,e[t]);return r},Bn=(r,e)=>jn(r,Un(e)),K=(r,e,t)=>We(r,typeof e!="symbol"?e+"":e,t);class Ti extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__.IMessageTracker{constructor(e,t){super(e,t),this.logger=e,this.core=t,K(this,"messages",new Map),K(this,"messagesWithoutClientAck",new Map),K(this,"name",Rt),K(this,"version",At),K(this,"initialized",!1),K(this,"storagePrefix",W),K(this,"init",async()=>{if(!this.initialized){this.logger.trace("Initialized");try{const i=await this.getRelayerMessages();typeof i<"u"&&(this.messages=i);const s=await this.getRelayerMessagesWithoutClientAck();typeof s<"u"&&(this.messagesWithoutClientAck=s),this.logger.debug(`Successfully Restored records for ${this.name}`),this.logger.trace({type:"method",method:"restore",size:this.messages.size})}catch(i){this.logger.debug(`Failed to Restore records for ${this.name}`),this.logger.error(i)}finally{this.initialized=!0}}}),K(this,"set",async(i,s,n)=>{this.isInitialized();const o=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.hashMessage)(s);let a=this.messages.get(i);if(typeof a>"u"&&(a={}),typeof a[o]<"u")return o;if(a[o]=s,this.messages.set(i,a),n===ye.inbound){const c=this.messagesWithoutClientAck.get(i)||{};this.messagesWithoutClientAck.set(i,Bn(Kn({},c),{[o]:s}))}return await this.persist(),o}),K(this,"get",i=>{this.isInitialized();let s=this.messages.get(i);return typeof s>"u"&&(s={}),s}),K(this,"getWithoutAck",i=>{this.isInitialized();const s={};for(const n of i){const o=this.messagesWithoutClientAck.get(n)||{};s[n]=Object.values(o)}return s}),K(this,"has",(i,s)=>{this.isInitialized();const n=this.get(i),o=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.hashMessage)(s);return typeof n[o]<"u"}),K(this,"ack",async(i,s)=>{this.isInitialized();const n=this.messagesWithoutClientAck.get(i);if(typeof n>"u")return;const o=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.hashMessage)(s);delete n[o],Object.keys(n).length===0?this.messagesWithoutClientAck.delete(i):this.messagesWithoutClientAck.set(i,n),await this.persist()}),K(this,"del",async i=>{this.isInitialized(),this.messages.delete(i),this.messagesWithoutClientAck.delete(i),await this.persist()}),this.logger=(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(e,this.name),this.core=t}get context(){return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger)}get storageKey(){return this.storagePrefix+this.version+this.core.customStoragePrefix+"//"+this.name}get storageKeyWithoutClientAck(){return this.storagePrefix+this.version+this.core.customStoragePrefix+"//"+this.name+"_withoutClientAck"}async setRelayerMessages(e){await this.core.storage.setItem(this.storageKey,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.mapToObj)(e))}async setRelayerMessagesWithoutClientAck(e){await this.core.storage.setItem(this.storageKeyWithoutClientAck,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.mapToObj)(e))}async getRelayerMessages(){const e=await this.core.storage.getItem(this.storageKey);return typeof e<"u"?(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.objToMap)(e):void 0}async getRelayerMessagesWithoutClientAck(){const e=await this.core.storage.getItem(this.storageKeyWithoutClientAck);return typeof e<"u"?(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.objToMap)(e):void 0}async persist(){await this.setRelayerMessages(this.messages),await this.setRelayerMessagesWithoutClientAck(this.messagesWithoutClientAck)}isInitialized(){if(!this.initialized){const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NOT_INITIALIZED",this.name);throw new Error(e)}}}var Vn=Object.defineProperty,qn=Object.defineProperties,Gn=Object.getOwnPropertyDescriptors,Ci=Object.getOwnPropertySymbols,Wn=Object.prototype.hasOwnProperty,Hn=Object.prototype.propertyIsEnumerable,He=(r,e,t)=>e in r?Vn(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,ce=(r,e)=>{for(var t in e||(e={}))Wn.call(e,t)&&He(r,t,e[t]);if(Ci)for(var t of Ci(e))Hn.call(e,t)&&He(r,t,e[t]);return r},Pi=(r,e)=>qn(r,Gn(e)),G=(r,e,t)=>He(r,typeof e!="symbol"?e+"":e,t);class Yn extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__.IPublisher{constructor(e,t){super(e,t),this.relayer=e,this.logger=t,G(this,"events",new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter),G(this,"name",Nt),G(this,"queue",new Map),G(this,"publishTimeout",(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.ONE_MINUTE)),G(this,"initialPublishTimeout",(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.ONE_SECOND*15)),G(this,"needsTransportRestart",!1),G(this,"publish",async(i,s,n)=>{var o,a,c,h,l;this.logger.debug("Publishing Payload"),this.logger.trace({type:"method",method:"publish",params:{topic:i,message:s,opts:n}});const p=n?.ttl||xt,y=n?.prompt||!1,w=n?.tag||0,u=n?.id||(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_11__.getBigIntRpcId)().toString(),m=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getRelayProtocolApi)((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getRelayProtocolName)().protocol),D={id:u,method:n?.publishMethod||m.publish,params:ce({topic:i,message:s,ttl:p,prompt:y,tag:w,attestation:n?.attestation},n?.tvf&&{tvf:n.tvf})},_=`Failed to publish payload, please try again. id:${u} tag:${w}`;try{(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isUndefined)((o=D.params)==null?void 0:o.prompt)&&((a=D.params)==null||delete a.prompt),(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isUndefined)((c=D.params)==null?void 0:c.tag)&&((h=D.params)==null||delete h.tag);const E=new Promise(async L=>{const I=({id:T})=>{var S;((S=D.id)==null?void 0:S.toString())===T.toString()&&(this.removeRequestFromQueue(T),this.relayer.events.removeListener(C.publish,I),L())};this.relayer.events.on(C.publish,I);const k=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.createExpiringPromise)(new Promise((T,S)=>{this.rpcPublish(D,n).then(T).catch(O=>{this.logger.warn(O,O?.message),S(O)})}),this.initialPublishTimeout,`Failed initial publish, retrying.... id:${u} tag:${w}`);try{await k,this.events.removeListener(C.publish,I)}catch(T){this.queue.set(u,{request:D,opts:n,attempt:1}),this.logger.warn(T,T?.message)}});this.logger.trace({type:"method",method:"publish",params:{id:u,topic:i,message:s,opts:n}}),await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.createExpiringPromise)(E,this.publishTimeout,_)}catch(E){if(this.logger.debug("Failed to Publish Payload"),this.logger.error(E),(l=n?.internal)!=null&&l.throwOnFailedPublish)throw E}finally{this.queue.delete(u)}}),G(this,"publishCustom",async i=>{var s,n,o,a,c;this.logger.debug("Publishing custom payload"),this.logger.trace({type:"method",method:"publishCustom",params:i});const{payload:h,opts:l={}}=i,{attestation:p,tvf:y,publishMethod:w,prompt:u,tag:m,ttl:D=_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.FIVE_MINUTES}=l,_=l.id||(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_11__.getBigIntRpcId)().toString(),E=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getRelayProtocolApi)((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getRelayProtocolName)().protocol),L=w||E.publish,I={id:_,method:L,params:ce(Pi(ce({},h),{ttl:D,prompt:u,tag:m,attestation:p}),y)},k=`Failed to publish custom payload, please try again. id:${_} tag:${m}`;try{(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isUndefined)((s=I.params)==null?void 0:s.prompt)&&((n=I.params)==null||delete n.prompt),(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isUndefined)((o=I.params)==null?void 0:o.tag)&&((a=I.params)==null||delete a.tag);const T=new Promise(async S=>{const O=({id:Z})=>{var _e;((_e=I.id)==null?void 0:_e.toString())===Z.toString()&&(this.removeRequestFromQueue(Z),this.relayer.events.removeListener(C.publish,O),S())};this.relayer.events.on(C.publish,O);const te=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.createExpiringPromise)(new Promise((Z,_e)=>{this.rpcPublish(I,l).then(Z).catch(Ee=>{this.logger.warn(Ee,Ee?.message),_e(Ee)})}),this.initialPublishTimeout,`Failed initial custom payload publish, retrying.... method:${L} id:${_} tag:${m}`);try{await te,this.events.removeListener(C.publish,O)}catch(Z){this.queue.set(_,{request:I,opts:l,attempt:1}),this.logger.warn(Z,Z?.message)}});this.logger.trace({type:"method",method:"publish",params:{id:_,payload:h,opts:l}}),await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.createExpiringPromise)(T,this.publishTimeout,k)}catch(T){if(this.logger.debug("Failed to Publish Payload"),this.logger.error(T),(c=l?.internal)!=null&&c.throwOnFailedPublish)throw T}finally{this.queue.delete(_)}}),G(this,"on",(i,s)=>{this.events.on(i,s)}),G(this,"once",(i,s)=>{this.events.once(i,s)}),G(this,"off",(i,s)=>{this.events.off(i,s)}),G(this,"removeListener",(i,s)=>{this.events.removeListener(i,s)}),this.relayer=e,this.logger=(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t,this.name),this.registerEventListeners()}get context(){return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger)}async rpcPublish(e,t){this.logger.debug("Outgoing Relay Payload"),this.logger.trace({type:"message",direction:"outgoing",request:e});const i=await this.relayer.request(e);return this.relayer.events.emit(C.publish,ce(ce({},e),t)),this.logger.debug("Successfully Published Payload"),i}removeRequestFromQueue(e){this.queue.delete(e)}checkQueue(){this.queue.forEach(async(e,t)=>{var i;const s=e.attempt+1;this.queue.set(t,Pi(ce({},e),{attempt:s})),this.logger.warn({},`Publisher: queue->publishing: ${e.request.id}, tag: ${(i=e.request.params)==null?void 0:i.tag}, attempt: ${s}`),await this.rpcPublish(e.request,e.opts),this.logger.warn({},`Publisher: queue->published: ${e.request.id}`)})}registerEventListeners(){this.relayer.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__.HEARTBEAT_EVENTS.pulse,()=>{if(this.needsTransportRestart){this.needsTransportRestart=!1,this.relayer.events.emit(C.connection_stalled);return}this.checkQueue()}),this.relayer.on(C.message_ack,e=>{this.removeRequestFromQueue(e.id.toString())})}}var Jn=Object.defineProperty,Xn=(r,e,t)=>e in r?Jn(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,he=(r,e,t)=>Xn(r,typeof e!="symbol"?e+"":e,t);class Zn{constructor(){he(this,"map",new Map),he(this,"set",(e,t)=>{const i=this.get(e);this.exists(e,t)||this.map.set(e,[...i,t])}),he(this,"get",e=>this.map.get(e)||[]),he(this,"exists",(e,t)=>this.get(e).includes(t)),he(this,"delete",(e,t)=>{if(typeof t>"u"){this.map.delete(e);return}if(!this.map.has(e))return;const i=this.get(e);if(!this.exists(e,t))return;const s=i.filter(n=>n!==t);if(!s.length){this.map.delete(e);return}this.map.set(e,s)}),he(this,"clear",()=>{this.map.clear()})}get topics(){return Array.from(this.map.keys())}}var Qn=Object.defineProperty,eo=Object.defineProperties,to=Object.getOwnPropertyDescriptors,Si=Object.getOwnPropertySymbols,io=Object.prototype.hasOwnProperty,so=Object.prototype.propertyIsEnumerable,Ye=(r,e,t)=>e in r?Qn(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,fe=(r,e)=>{for(var t in e||(e={}))io.call(e,t)&&Ye(r,t,e[t]);if(Si)for(var t of Si(e))so.call(e,t)&&Ye(r,t,e[t]);return r},Je=(r,e)=>eo(r,to(e)),f=(r,e,t)=>Ye(r,typeof e!="symbol"?e+"":e,t);class Oi extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__.ISubscriber{constructor(e,t){super(e,t),this.relayer=e,this.logger=t,f(this,"subscriptions",new Map),f(this,"topicMap",new Zn),f(this,"events",new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter),f(this,"name",Mt),f(this,"version",Kt),f(this,"pending",new Map),f(this,"cached",[]),f(this,"initialized",!1),f(this,"storagePrefix",W),f(this,"subscribeTimeout",(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.ONE_MINUTE)),f(this,"initialSubscribeTimeout",(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.ONE_SECOND*15)),f(this,"clientId"),f(this,"batchSubscribeTopicsLimit",500),f(this,"init",async()=>{this.initialized||(this.logger.trace("Initialized"),this.registerEventListeners(),await this.restore()),this.initialized=!0}),f(this,"subscribe",async(i,s)=>{var n;this.isInitialized(),this.logger.debug("Subscribing Topic"),this.logger.trace({type:"method",method:"subscribe",params:{topic:i,opts:s}});try{const o=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getRelayProtocolName)(s),a={topic:i,relay:o,transportType:s?.transportType};(n=s?.internal)!=null&&n.skipSubscribe||this.pending.set(i,a);const c=await this.rpcSubscribe(i,o,s);return typeof c=="string"&&(this.onSubscribe(c,a),this.logger.debug("Successfully Subscribed Topic"),this.logger.trace({type:"method",method:"subscribe",params:{topic:i,opts:s}})),c}catch(o){throw this.logger.debug("Failed to Subscribe Topic"),this.logger.error(o),o}}),f(this,"unsubscribe",async(i,s)=>{this.isInitialized(),typeof s?.id<"u"?await this.unsubscribeById(i,s.id,s):await this.unsubscribeByTopic(i,s)}),f(this,"isSubscribed",i=>new Promise(s=>{s(this.topicMap.topics.includes(i))})),f(this,"isKnownTopic",i=>new Promise(s=>{s(this.topicMap.topics.includes(i)||this.pending.has(i)||this.cached.some(n=>n.topic===i))})),f(this,"on",(i,s)=>{this.events.on(i,s)}),f(this,"once",(i,s)=>{this.events.once(i,s)}),f(this,"off",(i,s)=>{this.events.off(i,s)}),f(this,"removeListener",(i,s)=>{this.events.removeListener(i,s)}),f(this,"start",async()=>{await this.onConnect()}),f(this,"stop",async()=>{await this.onDisconnect()}),f(this,"restart",async()=>{await this.restore(),await this.onRestart()}),f(this,"checkPending",async()=>{if(this.pending.size===0&&(!this.initialized||!this.relayer.connected))return;const i=[];this.pending.forEach(s=>{i.push(s)}),await this.batchSubscribe(i)}),f(this,"registerEventListeners",()=>{this.relayer.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__.HEARTBEAT_EVENTS.pulse,async()=>{await this.checkPending()}),this.events.on(U.created,async i=>{const s=U.created;this.logger.info(`Emitting ${s}`),this.logger.debug({type:"event",event:s,data:i}),await this.persist()}),this.events.on(U.deleted,async i=>{const s=U.deleted;this.logger.info(`Emitting ${s}`),this.logger.debug({type:"event",event:s,data:i}),await this.persist()})}),this.relayer=e,this.logger=(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t,this.name),this.clientId=""}get context(){return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger)}get storageKey(){return this.storagePrefix+this.version+this.relayer.core.customStoragePrefix+"//"+this.name}get length(){return this.subscriptions.size}get ids(){return Array.from(this.subscriptions.keys())}get values(){return Array.from(this.subscriptions.values())}get topics(){return this.topicMap.topics}get hasAnyTopics(){return this.topicMap.topics.length>0||this.pending.size>0||this.cached.length>0||this.subscriptions.size>0}hasSubscription(e,t){let i=!1;try{i=this.getSubscription(e).topic===t}catch{}return i}reset(){this.cached=[],this.initialized=!0}onDisable(){this.values.length>0&&(this.cached=this.values),this.subscriptions.clear(),this.topicMap.clear()}async unsubscribeByTopic(e,t){const i=this.topicMap.get(e);await Promise.all(i.map(async s=>await this.unsubscribeById(e,s,t)))}async unsubscribeById(e,t,i){this.logger.debug("Unsubscribing Topic"),this.logger.trace({type:"method",method:"unsubscribe",params:{topic:e,id:t,opts:i}});try{const s=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getRelayProtocolName)(i);await this.restartToComplete({topic:e,id:t,relay:s}),await this.rpcUnsubscribe(e,t,s);const n=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getSdkError)("USER_DISCONNECTED",`${this.name}, ${e}`);await this.onUnsubscribe(e,t,n),this.logger.debug("Successfully Unsubscribed Topic"),this.logger.trace({type:"method",method:"unsubscribe",params:{topic:e,id:t,opts:i}})}catch(s){throw this.logger.debug("Failed to Unsubscribe Topic"),this.logger.error(s),s}}async rpcSubscribe(e,t,i){var s,n;const o=await this.getSubscriptionId(e);if((s=i?.internal)!=null&&s.skipSubscribe)return o;(!i||i?.transportType===ee.relay)&&await this.restartToComplete({topic:e,id:e,relay:t});const a={method:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getRelayProtocolApi)(t.protocol).subscribe,params:{topic:e}};this.logger.debug("Outgoing Relay Payload"),this.logger.trace({type:"payload",direction:"outgoing",request:a});const c=(n=i?.internal)==null?void 0:n.throwOnFailedPublish;try{if(i?.transportType===ee.link_mode)return setTimeout(()=>{(this.relayer.connected||this.relayer.connecting)&&this.relayer.request(a).catch(p=>this.logger.warn(p))},(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.ONE_SECOND)),o;const h=new Promise(async p=>{const y=w=>{w.topic===e&&(this.events.removeListener(U.created,y),p(w.id))};this.events.on(U.created,y);try{const w=await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.createExpiringPromise)(new Promise((u,m)=>{this.relayer.request(a).catch(D=>{this.logger.warn(D,D?.message),m(D)}).then(u)}),this.initialSubscribeTimeout,`Subscribing to ${e} failed, please try again`);this.events.removeListener(U.created,y),p(w)}catch{}}),l=await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.createExpiringPromise)(h,this.subscribeTimeout,`Subscribing to ${e} failed, please try again`);if(!l&&c)throw new Error(`Subscribing to ${e} failed, please try again`);return l?o:null}catch(h){if(this.logger.debug("Outgoing Relay Subscribe Payload stalled"),this.relayer.events.emit(C.connection_stalled),c)throw h}return null}async rpcBatchSubscribe(e){if(!e.length)return;const t=e[0].relay,i={method:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getRelayProtocolApi)(t.protocol).batchSubscribe,params:{topics:e.map(s=>s.topic)}};this.logger.debug("Outgoing Relay Payload"),this.logger.trace({type:"payload",direction:"outgoing",request:i});try{await await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.createExpiringPromise)(new Promise(s=>{this.relayer.request(i).catch(n=>this.logger.warn(n)).then(s)}),this.subscribeTimeout,"rpcBatchSubscribe failed, please try again")}catch{this.relayer.events.emit(C.connection_stalled)}}async rpcBatchFetchMessages(e){if(!e.length)return;const t=e[0].relay,i={method:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getRelayProtocolApi)(t.protocol).batchFetchMessages,params:{topics:e.map(n=>n.topic)}};this.logger.debug("Outgoing Relay Payload"),this.logger.trace({type:"payload",direction:"outgoing",request:i});let s;try{s=await await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.createExpiringPromise)(new Promise((n,o)=>{this.relayer.request(i).catch(a=>{this.logger.warn(a),o(a)}).then(n)}),this.subscribeTimeout,"rpcBatchFetchMessages failed, please try again")}catch{this.relayer.events.emit(C.connection_stalled)}return s}rpcUnsubscribe(e,t,i){const s={method:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getRelayProtocolApi)(i.protocol).unsubscribe,params:{topic:e,id:t}};return this.logger.debug("Outgoing Relay Payload"),this.logger.trace({type:"payload",direction:"outgoing",request:s}),this.relayer.request(s)}onSubscribe(e,t){this.setSubscription(e,Je(fe({},t),{id:e})),this.pending.delete(t.topic)}onBatchSubscribe(e){e.length&&e.forEach(t=>{this.setSubscription(t.id,fe({},t)),this.pending.delete(t.topic)})}async onUnsubscribe(e,t,i){this.events.removeAllListeners(t),this.hasSubscription(t,e)&&this.deleteSubscription(t,i),await this.relayer.messages.del(e)}async setRelayerSubscriptions(e){await this.relayer.core.storage.setItem(this.storageKey,e)}async getRelayerSubscriptions(){return await this.relayer.core.storage.getItem(this.storageKey)}setSubscription(e,t){this.logger.debug("Setting subscription"),this.logger.trace({type:"method",method:"setSubscription",id:e,subscription:t}),this.addSubscription(e,t)}addSubscription(e,t){this.subscriptions.set(e,fe({},t)),this.topicMap.set(t.topic,e),this.events.emit(U.created,t)}getSubscription(e){this.logger.debug("Getting subscription"),this.logger.trace({type:"method",method:"getSubscription",id:e});const t=this.subscriptions.get(e);if(!t){const{message:i}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NO_MATCHING_KEY",`${this.name}: ${e}`);throw new Error(i)}return t}deleteSubscription(e,t){this.logger.debug("Deleting subscription"),this.logger.trace({type:"method",method:"deleteSubscription",id:e,reason:t});const i=this.getSubscription(e);this.subscriptions.delete(e),this.topicMap.delete(i.topic,e),this.events.emit(U.deleted,Je(fe({},i),{reason:t}))}async persist(){await this.setRelayerSubscriptions(this.values),this.events.emit(U.sync)}async onRestart(){if(this.cached.length){const e=[...this.cached],t=Math.ceil(this.cached.length/this.batchSubscribeTopicsLimit);for(let i=0;i<t;i++){const s=e.splice(0,this.batchSubscribeTopicsLimit);await this.batchSubscribe(s)}}this.events.emit(U.resubscribed)}async restore(){try{const e=await this.getRelayerSubscriptions();if(typeof e>"u"||!e.length)return;if(this.subscriptions.size&&!e.every(t=>{var i;return t.topic===((i=this.subscriptions.get(t.id))==null?void 0:i.topic)})){const{message:t}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("RESTORE_WILL_OVERRIDE",this.name);throw this.logger.error(t),this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`),new Error(t)}this.cached=e,this.logger.debug(`Successfully Restored subscriptions for ${this.name}`),this.logger.trace({type:"method",method:"restore",subscriptions:this.values})}catch(e){this.logger.debug(`Failed to Restore subscriptions for ${this.name}`),this.logger.error(e)}}async batchSubscribe(e){e.length&&(await this.rpcBatchSubscribe(e),this.onBatchSubscribe(await Promise.all(e.map(async t=>Je(fe({},t),{id:await this.getSubscriptionId(t.topic)})))))}async batchFetchMessages(e){if(!e.length)return;this.logger.trace(`Fetching batch messages for ${e.length} subscriptions`);const t=await this.rpcBatchFetchMessages(e);t&&t.messages&&(await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.sleep)((0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.ONE_SECOND)),await this.relayer.handleBatchMessageEvents(t.messages))}async onConnect(){await this.restart(),this.reset()}onDisconnect(){this.onDisable()}isInitialized(){if(!this.initialized){const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NOT_INITIALIZED",this.name);throw new Error(e)}}async restartToComplete(e){!this.relayer.connected&&!this.relayer.connecting&&(this.cached.push(e),await this.relayer.transportOpen())}async getClientId(){return this.clientId||(this.clientId=await this.relayer.core.crypto.getClientId()),this.clientId}async getSubscriptionId(e){return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.hashMessage)(e+await this.getClientId())}}var ro=Object.defineProperty,Ri=Object.getOwnPropertySymbols,no=Object.prototype.hasOwnProperty,oo=Object.prototype.propertyIsEnumerable,Xe=(r,e,t)=>e in r?ro(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,Ai=(r,e)=>{for(var t in e||(e={}))no.call(e,t)&&Xe(r,t,e[t]);if(Ri)for(var t of Ri(e))oo.call(e,t)&&Xe(r,t,e[t]);return r},g=(r,e,t)=>Xe(r,typeof e!="symbol"?e+"":e,t);class xi extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__.IRelayer{constructor(e){super(e),g(this,"protocol","wc"),g(this,"version",2),g(this,"core"),g(this,"logger"),g(this,"events",new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter),g(this,"provider"),g(this,"messages"),g(this,"subscriber"),g(this,"publisher"),g(this,"name",Lt),g(this,"transportExplicitlyClosed",!1),g(this,"initialized",!1),g(this,"connectionAttemptInProgress",!1),g(this,"relayUrl"),g(this,"projectId"),g(this,"packageName"),g(this,"bundleId"),g(this,"hasExperiencedNetworkDisruption",!1),g(this,"pingTimeout"),g(this,"heartBeatTimeout",(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.THIRTY_SECONDS+_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.FIVE_SECONDS)),g(this,"reconnectTimeout"),g(this,"connectPromise"),g(this,"reconnectInProgress",!1),g(this,"requestsInFlight",[]),g(this,"connectTimeout",(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.ONE_SECOND*15)),g(this,"request",async t=>{var i,s;this.logger.debug("Publishing Request Payload");const n=t.id||(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_11__.getBigIntRpcId)().toString();await this.toEstablishConnection();try{this.logger.trace({id:n,method:t.method,topic:(i=t.params)==null?void 0:i.topic},"relayer.request - publishing...");const o=`${n}:${((s=t.params)==null?void 0:s.tag)||""}`;this.requestsInFlight.push(o);const a=await this.provider.request(t);return this.requestsInFlight=this.requestsInFlight.filter(c=>c!==o),a}catch(o){throw this.logger.debug(`Failed to Publish Request: ${n}`),o}}),g(this,"resetPingTimeout",()=>{(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isNode)()&&(clearTimeout(this.pingTimeout),this.pingTimeout=setTimeout(()=>{var t,i,s,n;try{this.logger.debug({},"pingTimeout: Connection stalled, terminating..."),(n=(s=(i=(t=this.provider)==null?void 0:t.connection)==null?void 0:i.socket)==null?void 0:s.terminate)==null||n.call(s)}catch(o){this.logger.warn(o,o?.message)}},this.heartBeatTimeout))}),g(this,"onPayloadHandler",t=>{this.onProviderPayload(t),this.resetPingTimeout()}),g(this,"onConnectHandler",()=>{this.logger.warn({},"Relayer connected \u{1F6DC}"),this.startPingTimeout(),this.events.emit(C.connect)}),g(this,"onDisconnectHandler",()=>{this.logger.warn({},"Relayer disconnected \u{1F6D1}"),this.requestsInFlight=[],this.onProviderDisconnect()}),g(this,"onProviderErrorHandler",t=>{this.logger.fatal(`Fatal socket error: ${t.message}`),this.events.emit(C.error,t),this.logger.fatal("Fatal socket error received, closing transport"),this.transportClose()}),g(this,"registerProviderListeners",()=>{this.provider.on(M.payload,this.onPayloadHandler),this.provider.on(M.connect,this.onConnectHandler),this.provider.on(M.disconnect,this.onDisconnectHandler),this.provider.on(M.error,this.onProviderErrorHandler)}),this.core=e.core,this.logger=typeof e.logger<"u"&&typeof e.logger!="string"?(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(e.logger,this.name):(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.pino)((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getDefaultLoggerOptions)({level:e.logger||zt})),this.messages=new Ti(this.logger,e.core),this.subscriber=new Oi(this,this.logger),this.publisher=new Yn(this,this.logger),this.projectId=e?.projectId,this.relayUrl=e?.relayUrl||Ke,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isAndroid)()?this.packageName=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getAppId)():(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isIos)()&&(this.bundleId=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getAppId)()),this.provider={}}async init(){this.logger.trace("Initialized"),this.registerEventListeners(),await Promise.all([this.messages.init(),this.subscriber.init()]),this.initialized=!0,this.transportOpen().catch(e=>this.logger.warn(e,e?.message))}get context(){return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger)}get connected(){var e,t,i;return((i=(t=(e=this.provider)==null?void 0:e.connection)==null?void 0:t.socket)==null?void 0:i.readyState)===1||!1}get connecting(){var e,t,i;return((i=(t=(e=this.provider)==null?void 0:e.connection)==null?void 0:t.socket)==null?void 0:i.readyState)===0||this.connectPromise!==void 0||!1}async publish(e,t,i){this.isInitialized(),await this.publisher.publish(e,t,i),await this.recordMessageEvent({topic:e,message:t,publishedAt:Date.now(),transportType:ee.relay},ye.outbound)}async publishCustom(e){this.isInitialized(),await this.publisher.publishCustom(e)}async subscribe(e,t){var i,s,n;this.isInitialized(),(!(t!=null&&t.transportType)||t?.transportType==="relay")&&await this.toEstablishConnection();const o=typeof((i=t?.internal)==null?void 0:i.throwOnFailedPublish)>"u"?!0:(s=t?.internal)==null?void 0:s.throwOnFailedPublish;let a=((n=this.subscriber.topicMap.get(e))==null?void 0:n[0])||"",c;const h=l=>{l.topic===e&&(this.subscriber.off(U.created,h),c())};return await Promise.all([new Promise(l=>{c=l,this.subscriber.on(U.created,h)}),new Promise(async(l,p)=>{a=await this.subscriber.subscribe(e,Ai({internal:{throwOnFailedPublish:o}},t)).catch(y=>{o&&p(y)})||a,l()})]),a}async unsubscribe(e,t){this.isInitialized(),await this.subscriber.unsubscribe(e,t)}on(e,t){this.events.on(e,t)}once(e,t){this.events.once(e,t)}off(e,t){this.events.off(e,t)}removeListener(e,t){this.events.removeListener(e,t)}async transportDisconnect(){this.provider.disconnect&&(this.hasExperiencedNetworkDisruption||this.connected)?await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.createExpiringPromise)(this.provider.disconnect(),2e3,"provider.disconnect()").catch(()=>this.onProviderDisconnect()):this.onProviderDisconnect()}async transportClose(){this.transportExplicitlyClosed=!0,await this.transportDisconnect()}async transportOpen(e){if(!this.subscriber.hasAnyTopics){this.logger.info("Starting WS connection skipped because the client has no topics to work with.");return}if(this.connectPromise?(this.logger.debug({},"Waiting for existing connection attempt to resolve..."),await this.connectPromise,this.logger.debug({},"Existing connection attempt resolved")):(this.connectPromise=new Promise(async(t,i)=>{await this.connect(e).then(t).catch(i).finally(()=>{this.connectPromise=void 0})}),await this.connectPromise),!this.connected)throw new Error(`Couldn't establish socket connection to the relay server: ${this.relayUrl}`)}async restartTransport(e){this.logger.debug({},"Restarting transport..."),!this.connectionAttemptInProgress&&(this.relayUrl=e||this.relayUrl,await this.confirmOnlineStateOrThrow(),await this.transportClose(),await this.transportOpen())}async confirmOnlineStateOrThrow(){if(!await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isOnline)())throw new Error("No internet connection detected. Please restart your network and try again.")}async handleBatchMessageEvents(e){if(e?.length===0){this.logger.trace("Batch message events is empty. Ignoring...");return}const t=e.sort((i,s)=>i.publishedAt-s.publishedAt);this.logger.debug(`Batch of ${t.length} message events sorted`);for(const i of t)try{await this.onMessageEvent(i)}catch(s){this.logger.warn(s,"Error while processing batch message event: "+s?.message)}this.logger.trace(`Batch of ${t.length} message events processed`)}async onLinkMessageEvent(e,t){const{topic:i}=e;if(!t.sessionExists){const s=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.FIVE_MINUTES),n={topic:i,expiry:s,relay:{protocol:"irn"},active:!1};await this.core.pairing.pairings.set(i,n)}this.events.emit(C.message,e),await this.recordMessageEvent(e,ye.inbound)}async connect(e){await this.confirmOnlineStateOrThrow(),e&&e!==this.relayUrl&&(this.relayUrl=e,await this.transportDisconnect()),this.connectionAttemptInProgress=!0,this.transportExplicitlyClosed=!1;let t=1;for(;t<6;){try{if(this.transportExplicitlyClosed)break;this.logger.debug({},`Connecting to ${this.relayUrl}, attempt: ${t}...`),await this.createProvider(),await new Promise(async(i,s)=>{const n=()=>{s(new Error("Connection interrupted while trying to connect"))};this.provider.once(M.disconnect,n),await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.createExpiringPromise)(new Promise((o,a)=>{this.provider.connect().then(o).catch(a)}),this.connectTimeout,`Socket stalled when trying to connect to ${this.relayUrl}`).catch(o=>{s(o)}).finally(()=>{this.provider.off(M.disconnect,n),clearTimeout(this.reconnectTimeout)}),await new Promise(async(o,a)=>{const c=()=>{s(new Error("Connection interrupted while trying to subscribe"))};this.provider.once(M.disconnect,c),await this.subscriber.start().then(o).catch(a).finally(()=>{this.provider.off(M.disconnect,c)})}),this.hasExperiencedNetworkDisruption=!1,i()})}catch(i){await this.subscriber.stop();const s=i;this.logger.warn({},s.message),this.hasExperiencedNetworkDisruption=!0}finally{this.connectionAttemptInProgress=!1}if(this.connected){this.logger.debug({},`Connected to ${this.relayUrl} successfully on attempt: ${t}`);break}await new Promise(i=>setTimeout(i,(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.toMiliseconds)(t*1))),t++}}startPingTimeout(){var e,t,i,s,n;if((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isNode)())try{(t=(e=this.provider)==null?void 0:e.connection)!=null&&t.socket&&((n=(s=(i=this.provider)==null?void 0:i.connection)==null?void 0:s.socket)==null||n.on("ping",()=>{this.resetPingTimeout()})),this.resetPingTimeout()}catch(o){this.logger.warn(o,o?.message)}}async createProvider(){this.provider.connection&&this.unregisterProviderListeners();const e=await this.core.crypto.signJWT(this.relayUrl);this.provider=new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_10__.JsonRpcProvider(new _walletconnect_jsonrpc_ws_connection__WEBPACK_IMPORTED_MODULE_12__["default"]((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.formatRelayRpcUrl)({sdkVersion:Pe,protocol:this.protocol,version:this.version,relayUrl:this.relayUrl,projectId:this.projectId,auth:e,useOnCloseEvent:!0,bundleId:this.bundleId,packageName:this.packageName}))),this.registerProviderListeners()}async recordMessageEvent(e,t){const{topic:i,message:s}=e;await this.messages.set(i,s,t)}async shouldIgnoreMessageEvent(e){const{topic:t,message:i}=e;if(!i||i.length===0)return this.logger.warn(`Ignoring invalid/empty message: ${i}`),!0;if(!await this.subscriber.isKnownTopic(t))return this.logger.warn(`Ignoring message for unknown topic ${t}`),!0;const s=this.messages.has(t,i);return s&&this.logger.warn(`Ignoring duplicate message: ${i}`),s}async onProviderPayload(e){if(this.logger.debug("Incoming Relay Payload"),this.logger.trace({type:"payload",direction:"incoming",payload:e}),(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_11__.isJsonRpcRequest)(e)){if(!e.method.endsWith(kt))return;const t=e.params,{topic:i,message:s,publishedAt:n,attestation:o}=t.data,a={topic:i,message:s,publishedAt:n,transportType:ee.relay,attestation:o};this.logger.debug("Emitting Relayer Payload"),this.logger.trace(Ai({type:"event",event:t.id},a)),this.events.emit(t.id,a),await this.acknowledgePayload(e),await this.onMessageEvent(a)}else (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_11__.isJsonRpcResponse)(e)&&this.events.emit(C.message_ack,e)}async onMessageEvent(e){await this.shouldIgnoreMessageEvent(e)||(await this.recordMessageEvent(e,ye.inbound),this.events.emit(C.message,e))}async acknowledgePayload(e){const t=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_11__.formatJsonRpcResult)(e.id,!0);await this.provider.connection.send(t)}unregisterProviderListeners(){this.provider.off(M.payload,this.onPayloadHandler),this.provider.off(M.connect,this.onConnectHandler),this.provider.off(M.disconnect,this.onDisconnectHandler),this.provider.off(M.error,this.onProviderErrorHandler),clearTimeout(this.pingTimeout)}async registerEventListeners(){let e=await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isOnline)();(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.subscribeToNetworkChange)(async t=>{e!==t&&(e=t,t?await this.transportOpen().catch(i=>this.logger.error(i,i?.message)):(this.hasExperiencedNetworkDisruption=!0,await this.transportDisconnect(),this.transportExplicitlyClosed=!1))}),this.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__.HEARTBEAT_EVENTS.pulse,async()=>{if(!this.transportExplicitlyClosed&&!this.connected&&(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isAppVisible)())try{await this.confirmOnlineStateOrThrow(),await this.transportOpen()}catch(t){this.logger.warn(t,t?.message)}})}async onProviderDisconnect(){clearTimeout(this.pingTimeout),this.events.emit(C.disconnect),this.connectionAttemptInProgress=!1,!this.reconnectInProgress&&(this.reconnectInProgress=!0,await this.subscriber.stop(),this.subscriber.hasAnyTopics&&(this.transportExplicitlyClosed||(this.reconnectTimeout=setTimeout(async()=>{await this.transportOpen().catch(e=>this.logger.error(e,e?.message)),this.reconnectTimeout=void 0,this.reconnectInProgress=!1},(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.toMiliseconds)(jt)))))}isInitialized(){if(!this.initialized){const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NOT_INITIALIZED",this.name);throw new Error(e)}}async toEstablishConnection(){if(await this.confirmOnlineStateOrThrow(),!this.connected){if(this.connectPromise){await this.connectPromise;return}await this.connect()}}}function ao(r,e){return r===e||Number.isNaN(r)&&Number.isNaN(e)}function Ni(r){return Object.getOwnPropertySymbols(r).filter(e=>Object.prototype.propertyIsEnumerable.call(r,e))}function $i(r){return r==null?r===void 0?"[object Undefined]":"[object Null]":Object.prototype.toString.call(r)}const co="[object RegExp]",ho="[object String]",lo="[object Number]",uo="[object Boolean]",zi="[object Arguments]",go="[object Symbol]",po="[object Date]",yo="[object Map]",bo="[object Set]",mo="[object Array]",fo="[object Function]",Do="[object ArrayBuffer]",Ze="[object Object]",vo="[object Error]",wo="[object DataView]",_o="[object Uint8Array]",Eo="[object Uint8ClampedArray]",Io="[object Uint16Array]",To="[object Uint32Array]",Co="[object BigUint64Array]",Po="[object Int8Array]",So="[object Int16Array]",Oo="[object Int32Array]",Ro="[object BigInt64Array]",Ao="[object Float32Array]",xo="[object Float64Array]";function No(){}function Li(r){if(!r||typeof r!="object")return!1;const e=Object.getPrototypeOf(r);return e===null||e===Object.prototype||Object.getPrototypeOf(e)===null?Object.prototype.toString.call(r)==="[object Object]":!1}function $o(r,e,t){return De(r,e,void 0,void 0,void 0,void 0,t)}function De(r,e,t,i,s,n,o){const a=o(r,e,t,i,s,n);if(a!==void 0)return a;if(typeof r==typeof e)switch(typeof r){case"bigint":case"string":case"boolean":case"symbol":case"undefined":return r===e;case"number":return r===e||Object.is(r,e);case"function":return r===e;case"object":return ve(r,e,n,o)}return ve(r,e,n,o)}function ve(r,e,t,i){if(Object.is(r,e))return!0;let s=$i(r),n=$i(e);if(s===zi&&(s=Ze),n===zi&&(n=Ze),s!==n)return!1;switch(s){case ho:return r.toString()===e.toString();case lo:{const c=r.valueOf(),h=e.valueOf();return ao(c,h)}case uo:case po:case go:return Object.is(r.valueOf(),e.valueOf());case co:return r.source===e.source&&r.flags===e.flags;case fo:return r===e}t=t??new Map;const o=t.get(r),a=t.get(e);if(o!=null&&a!=null)return o===e;t.set(r,e),t.set(e,r);try{switch(s){case yo:{if(r.size!==e.size)return!1;for(const[c,h]of r.entries())if(!e.has(c)||!De(h,e.get(c),c,r,e,t,i))return!1;return!0}case bo:{if(r.size!==e.size)return!1;const c=Array.from(r.values()),h=Array.from(e.values());for(let l=0;l<c.length;l++){const p=c[l],y=h.findIndex(w=>De(p,w,void 0,r,e,t,i));if(y===-1)return!1;h.splice(y,1)}return!0}case mo:case _o:case Eo:case Io:case To:case Co:case Po:case So:case Oo:case Ro:case Ao:case xo:{if(typeof Buffer<"u"&&Buffer.isBuffer(r)!==Buffer.isBuffer(e)||r.length!==e.length)return!1;for(let c=0;c<r.length;c++)if(!De(r[c],e[c],c,r,e,t,i))return!1;return!0}case Do:return r.byteLength!==e.byteLength?!1:ve(new Uint8Array(r),new Uint8Array(e),t,i);case wo:return r.byteLength!==e.byteLength||r.byteOffset!==e.byteOffset?!1:ve(new Uint8Array(r),new Uint8Array(e),t,i);case vo:return r.name===e.name&&r.message===e.message;case Ze:{if(!(ve(r.constructor,e.constructor,t,i)||Li(r)&&Li(e)))return!1;const h=[...Object.keys(r),...Ni(r)],l=[...Object.keys(e),...Ni(e)];if(h.length!==l.length)return!1;for(let p=0;p<h.length;p++){const y=h[p],w=r[y];if(!Object.hasOwn(e,y))return!1;const u=e[y];if(!De(w,u,y,r,e,t,i))return!1}return!0}default:return!1}}finally{t.delete(r),t.delete(e)}}function zo(r,e){return $o(r,e,No)}var Lo=Object.defineProperty,ki=Object.getOwnPropertySymbols,ko=Object.prototype.hasOwnProperty,jo=Object.prototype.propertyIsEnumerable,Qe=(r,e,t)=>e in r?Lo(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,ji=(r,e)=>{for(var t in e||(e={}))ko.call(e,t)&&Qe(r,t,e[t]);if(ki)for(var t of ki(e))jo.call(e,t)&&Qe(r,t,e[t]);return r},F=(r,e,t)=>Qe(r,typeof e!="symbol"?e+"":e,t);class Ui extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__.IStore{constructor(e,t,i,s=W,n=void 0){super(e,t,i,s),this.core=e,this.logger=t,this.name=i,F(this,"map",new Map),F(this,"version",Ut),F(this,"cached",[]),F(this,"initialized",!1),F(this,"getKey"),F(this,"storagePrefix",W),F(this,"recentlyDeleted",[]),F(this,"recentlyDeletedLimit",200),F(this,"init",async()=>{this.initialized||(this.logger.trace("Initialized"),await this.restore(),this.cached.forEach(o=>{this.getKey&&o!==null&&!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isUndefined)(o)?this.map.set(this.getKey(o),o):(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isProposalStruct)(o)?this.map.set(o.id,o):(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isSessionStruct)(o)&&this.map.set(o.topic,o)}),this.cached=[],this.initialized=!0)}),F(this,"set",async(o,a)=>{this.isInitialized(),this.map.has(o)?await this.update(o,a):(this.logger.debug("Setting value"),this.logger.trace({type:"method",method:"set",key:o,value:a}),this.map.set(o,a),await this.persist())}),F(this,"get",o=>(this.isInitialized(),this.logger.debug("Getting value"),this.logger.trace({type:"method",method:"get",key:o}),this.getData(o))),F(this,"getAll",o=>(this.isInitialized(),o?this.values.filter(a=>Object.keys(o).every(c=>zo(a[c],o[c]))):this.values)),F(this,"update",async(o,a)=>{this.isInitialized(),this.logger.debug("Updating value"),this.logger.trace({type:"method",method:"update",key:o,update:a});const c=ji(ji({},this.getData(o)),a);this.map.set(o,c),await this.persist()}),F(this,"delete",async(o,a)=>{this.isInitialized(),this.map.has(o)&&(this.logger.debug("Deleting value"),this.logger.trace({type:"method",method:"delete",key:o,reason:a}),this.map.delete(o),this.addToRecentlyDeleted(o),await this.persist())}),this.logger=(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t,this.name),this.storagePrefix=s,this.getKey=n}get context(){return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger)}get storageKey(){return this.storagePrefix+this.version+this.core.customStoragePrefix+"//"+this.name}get length(){return this.map.size}get keys(){return Array.from(this.map.keys())}get values(){return Array.from(this.map.values())}addToRecentlyDeleted(e){this.recentlyDeleted.push(e),this.recentlyDeleted.length>=this.recentlyDeletedLimit&&this.recentlyDeleted.splice(0,this.recentlyDeletedLimit/2)}async setDataStore(e){await this.core.storage.setItem(this.storageKey,e)}async getDataStore(){return await this.core.storage.getItem(this.storageKey)}getData(e){const t=this.map.get(e);if(!t){if(this.recentlyDeleted.includes(e)){const{message:s}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("MISSING_OR_INVALID",`Record was recently deleted - ${this.name}: ${e}`);throw this.logger.error(s),new Error(s)}const{message:i}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NO_MATCHING_KEY",`${this.name}: ${e}`);throw this.logger.error(i),new Error(i)}return t}async persist(){await this.setDataStore(this.values)}async restore(){try{const e=await this.getDataStore();if(typeof e>"u"||!e.length)return;if(this.map.size){const{message:t}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("RESTORE_WILL_OVERRIDE",this.name);throw this.logger.error(t),new Error(t)}this.cached=e,this.logger.debug(`Successfully Restored value for ${this.name}`),this.logger.trace({type:"method",method:"restore",value:this.values})}catch(e){this.logger.debug(`Failed to Restore value for ${this.name}`),this.logger.error(e)}}isInitialized(){if(!this.initialized){const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NOT_INITIALIZED",this.name);throw new Error(e)}}}var Uo=Object.defineProperty,Fo=(r,e,t)=>e in r?Uo(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,d=(r,e,t)=>Fo(r,typeof e!="symbol"?e+"":e,t);class Fi{constructor(e,t){this.core=e,this.logger=t,d(this,"name",Bt),d(this,"version",Vt),d(this,"events",new (events__WEBPACK_IMPORTED_MODULE_0___default())),d(this,"pairings"),d(this,"initialized",!1),d(this,"storagePrefix",W),d(this,"ignoredPayloadTypes",[_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.TYPE_1]),d(this,"registeredMethods",[]),d(this,"init",async()=>{this.initialized||(await this.pairings.init(),await this.cleanup(),this.registerRelayerEvents(),this.registerExpirerEvents(),this.initialized=!0,this.logger.trace("Initialized"))}),d(this,"register",({methods:i})=>{this.isInitialized(),this.registeredMethods=[...new Set([...this.registeredMethods,...i])]}),d(this,"create",async i=>{this.isInitialized();const s=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.generateRandomBytes32)(),n=await this.core.crypto.setSymKey(s),o=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.FIVE_MINUTES),a={protocol:$t},c={topic:n,expiry:o,relay:a,active:!1,methods:i?.methods},h=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.formatUri)({protocol:this.core.protocol,version:this.core.version,topic:n,symKey:s,relay:a,expiryTimestamp:o,methods:i?.methods});return this.events.emit(ae.create,c),this.core.expirer.set(n,o),await this.pairings.set(n,c),await this.core.relayer.subscribe(n,{transportType:i?.transportType,internal:i?.internal}),{topic:n,uri:h}}),d(this,"pair",async i=>{this.isInitialized();const s=this.core.eventClient.createEvent({properties:{topic:i?.uri,trace:[Y.pairing_started]}});this.isValidPair(i,s);const{topic:n,symKey:o,relay:a,expiryTimestamp:c,methods:h}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.parseUri)(i.uri);s.props.properties.topic=n,s.addTrace(Y.pairing_uri_validation_success),s.addTrace(Y.pairing_uri_not_expired);let l;if(this.pairings.keys.includes(n)){if(l=this.pairings.get(n),s.addTrace(Y.existing_pairing),l.active)throw s.setError(X.active_pairing_already_exists),new Error(`Pairing already exists: ${n}. Please try again with a new connection URI.`);s.addTrace(Y.pairing_not_expired)}const p=c||(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.FIVE_MINUTES),y={topic:n,relay:a,expiry:p,active:!1,methods:h};this.core.expirer.set(n,p),await this.pairings.set(n,y),s.addTrace(Y.store_new_pairing),i.activatePairing&&await this.activate({topic:n}),this.events.emit(ae.create,y),s.addTrace(Y.emit_inactive_pairing),this.core.crypto.keychain.has(n)||await this.core.crypto.setSymKey(o,n),s.addTrace(Y.subscribing_pairing_topic);try{await this.core.relayer.confirmOnlineStateOrThrow()}catch{s.setError(X.no_internet_connection)}try{await this.core.relayer.subscribe(n,{relay:a})}catch(w){throw s.setError(X.subscribe_pairing_topic_failure),w}return s.addTrace(Y.subscribe_pairing_topic_success),y}),d(this,"activate",async({topic:i})=>{this.isInitialized();const s=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.FIVE_MINUTES);this.core.expirer.set(i,s),await this.pairings.update(i,{active:!0,expiry:s})}),d(this,"ping",async i=>{this.isInitialized(),await this.isValidPing(i),this.logger.warn("ping() is deprecated and will be removed in the next major release.");const{topic:s}=i;if(this.pairings.keys.includes(s)){const n=await this.sendRequest(s,"wc_pairingPing",{}),{done:o,resolve:a,reject:c}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.createDelayedPromise)();this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.engineEvent)("pairing_ping",n),({error:h})=>{h?c(h):a()}),await o()}}),d(this,"updateExpiry",async({topic:i,expiry:s})=>{this.isInitialized(),await this.pairings.update(i,{expiry:s})}),d(this,"updateMetadata",async({topic:i,metadata:s})=>{this.isInitialized(),await this.pairings.update(i,{peerMetadata:s})}),d(this,"getPairings",()=>(this.isInitialized(),this.pairings.values)),d(this,"disconnect",async i=>{this.isInitialized(),await this.isValidDisconnect(i);const{topic:s}=i;this.pairings.keys.includes(s)&&(await this.sendRequest(s,"wc_pairingDelete",(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getSdkError)("USER_DISCONNECTED")),await this.deletePairing(s))}),d(this,"formatUriFromPairing",i=>{this.isInitialized();const{topic:s,relay:n,expiry:o,methods:a}=i,c=this.core.crypto.keychain.get(s);return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.formatUri)({protocol:this.core.protocol,version:this.core.version,topic:s,symKey:c,relay:n,expiryTimestamp:o,methods:a})}),d(this,"sendRequest",async(i,s,n)=>{const o=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_11__.formatJsonRpcRequest)(s,n),a=await this.core.crypto.encode(i,o),c=oe[s].req;return this.core.history.set(i,o),this.core.relayer.publish(i,a,c),o.id}),d(this,"sendResult",async(i,s,n)=>{const o=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_11__.formatJsonRpcResult)(i,n),a=await this.core.crypto.encode(s,o),c=(await this.core.history.get(s,i)).request.method,h=oe[c].res;await this.core.relayer.publish(s,a,h),await this.core.history.resolve(o)}),d(this,"sendError",async(i,s,n)=>{const o=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_11__.formatJsonRpcError)(i,n),a=await this.core.crypto.encode(s,o),c=(await this.core.history.get(s,i)).request.method,h=oe[c]?oe[c].res:oe.unregistered_method.res;await this.core.relayer.publish(s,a,h),await this.core.history.resolve(o)}),d(this,"deletePairing",async(i,s)=>{await this.core.relayer.unsubscribe(i),await Promise.all([this.pairings.delete(i,(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getSdkError)("USER_DISCONNECTED")),this.core.crypto.deleteSymKey(i),s?Promise.resolve():this.core.expirer.del(i)])}),d(this,"cleanup",async()=>{const i=this.pairings.getAll().filter(s=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isExpired)(s.expiry));await Promise.all(i.map(s=>this.deletePairing(s.topic)))}),d(this,"onRelayEventRequest",async i=>{const{topic:s,payload:n}=i;switch(n.method){case"wc_pairingPing":return await this.onPairingPingRequest(s,n);case"wc_pairingDelete":return await this.onPairingDeleteRequest(s,n);default:return await this.onUnknownRpcMethodRequest(s,n)}}),d(this,"onRelayEventResponse",async i=>{const{topic:s,payload:n}=i,o=(await this.core.history.get(s,n.id)).request.method;switch(o){case"wc_pairingPing":return this.onPairingPingResponse(s,n);default:return this.onUnknownRpcMethodResponse(o)}}),d(this,"onPairingPingRequest",async(i,s)=>{const{id:n}=s;try{this.isValidPing({topic:i}),await this.sendResult(n,i,!0),this.events.emit(ae.ping,{id:n,topic:i})}catch(o){await this.sendError(n,i,o),this.logger.error(o)}}),d(this,"onPairingPingResponse",(i,s)=>{const{id:n}=s;setTimeout(()=>{(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_11__.isJsonRpcResult)(s)?this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.engineEvent)("pairing_ping",n),{}):(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_11__.isJsonRpcError)(s)&&this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.engineEvent)("pairing_ping",n),{error:s.error})},500)}),d(this,"onPairingDeleteRequest",async(i,s)=>{const{id:n}=s;try{this.isValidDisconnect({topic:i}),await this.deletePairing(i),this.events.emit(ae.delete,{id:n,topic:i})}catch(o){await this.sendError(n,i,o),this.logger.error(o)}}),d(this,"onUnknownRpcMethodRequest",async(i,s)=>{const{id:n,method:o}=s;try{if(this.registeredMethods.includes(o))return;const a=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getSdkError)("WC_METHOD_UNSUPPORTED",o);await this.sendError(n,i,a),this.logger.error(a)}catch(a){await this.sendError(n,i,a),this.logger.error(a)}}),d(this,"onUnknownRpcMethodResponse",i=>{this.registeredMethods.includes(i)||this.logger.error((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getSdkError)("WC_METHOD_UNSUPPORTED",i))}),d(this,"isValidPair",(i,s)=>{var n;if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isValidParams)(i)){const{message:a}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("MISSING_OR_INVALID",`pair() params: ${i}`);throw s.setError(X.malformed_pairing_uri),new Error(a)}if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isValidUrl)(i.uri)){const{message:a}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("MISSING_OR_INVALID",`pair() uri: ${i.uri}`);throw s.setError(X.malformed_pairing_uri),new Error(a)}const o=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.parseUri)(i?.uri);if(!((n=o?.relay)!=null&&n.protocol)){const{message:a}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("MISSING_OR_INVALID","pair() uri#relay-protocol");throw s.setError(X.malformed_pairing_uri),new Error(a)}if(!(o!=null&&o.symKey)){const{message:a}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("MISSING_OR_INVALID","pair() uri#symKey");throw s.setError(X.malformed_pairing_uri),new Error(a)}if(o!=null&&o.expiryTimestamp&&(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.toMiliseconds)(o?.expiryTimestamp)<Date.now()){s.setError(X.pairing_expired);const{message:a}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("EXPIRED","pair() URI has expired. Please try again with a new connection URI.");throw new Error(a)}}),d(this,"isValidPing",async i=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isValidParams)(i)){const{message:n}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("MISSING_OR_INVALID",`ping() params: ${i}`);throw new Error(n)}const{topic:s}=i;await this.isValidPairingTopic(s)}),d(this,"isValidDisconnect",async i=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isValidParams)(i)){const{message:n}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("MISSING_OR_INVALID",`disconnect() params: ${i}`);throw new Error(n)}const{topic:s}=i;await this.isValidPairingTopic(s)}),d(this,"isValidPairingTopic",async i=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isValidString)(i,!1)){const{message:s}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("MISSING_OR_INVALID",`pairing topic should be a string: ${i}`);throw new Error(s)}if(!this.pairings.keys.includes(i)){const{message:s}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NO_MATCHING_KEY",`pairing topic doesn't exist: ${i}`);throw new Error(s)}if((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isExpired)(this.pairings.get(i).expiry)){await this.deletePairing(i);const{message:s}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("EXPIRED",`pairing topic: ${i}`);throw new Error(s)}}),this.core=e,this.logger=(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t,this.name),this.pairings=new Ui(this.core,this.logger,this.name,this.storagePrefix)}get context(){return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger)}isInitialized(){if(!this.initialized){const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NOT_INITIALIZED",this.name);throw new Error(e)}}registerRelayerEvents(){this.core.relayer.on(C.message,async e=>{const{topic:t,message:i,transportType:s}=e;if(this.pairings.keys.includes(t)&&s!==ee.link_mode&&!this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(i)))try{const n=await this.core.crypto.decode(t,i);(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_11__.isJsonRpcRequest)(n)?(this.core.history.set(t,n),await this.onRelayEventRequest({topic:t,payload:n})):(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_11__.isJsonRpcResponse)(n)&&(await this.core.history.resolve(n),await this.onRelayEventResponse({topic:t,payload:n}),this.core.history.delete(t,n.id)),await this.core.relayer.messages.ack(t,i)}catch(n){this.logger.error(n)}})}registerExpirerEvents(){this.core.expirer.on(q.expired,async e=>{const{topic:t}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.parseExpirerTarget)(e.target);t&&this.pairings.keys.includes(t)&&(await this.deletePairing(t,!0),this.events.emit(ae.expire,{topic:t}))})}}var Mo=Object.defineProperty,Ko=(r,e,t)=>e in r?Mo(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,N=(r,e,t)=>Ko(r,typeof e!="symbol"?e+"":e,t);class Mi extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__.IJsonRpcHistory{constructor(e,t){super(e,t),this.core=e,this.logger=t,N(this,"records",new Map),N(this,"events",new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter),N(this,"name",qt),N(this,"version",Gt),N(this,"cached",[]),N(this,"initialized",!1),N(this,"storagePrefix",W),N(this,"init",async()=>{this.initialized||(this.logger.trace("Initialized"),await this.restore(),this.cached.forEach(i=>this.records.set(i.id,i)),this.cached=[],this.registerEventListeners(),this.initialized=!0)}),N(this,"set",(i,s,n)=>{if(this.isInitialized(),this.logger.debug("Setting JSON-RPC request history record"),this.logger.trace({type:"method",method:"set",topic:i,request:s,chainId:n}),this.records.has(s.id))return;const o={id:s.id,topic:i,request:{method:s.method,params:s.params||null},chainId:n,expiry:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.THIRTY_DAYS)};this.records.set(o.id,o),this.persist(),this.events.emit(V.created,o)}),N(this,"resolve",async i=>{if(this.isInitialized(),this.logger.debug("Updating JSON-RPC response history record"),this.logger.trace({type:"method",method:"update",response:i}),!this.records.has(i.id))return;const s=await this.getRecord(i.id);typeof s.response>"u"&&(s.response=(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_11__.isJsonRpcError)(i)?{error:i.error}:{result:i.result},this.records.set(s.id,s),this.persist(),this.events.emit(V.updated,s))}),N(this,"get",async(i,s)=>(this.isInitialized(),this.logger.debug("Getting record"),this.logger.trace({type:"method",method:"get",topic:i,id:s}),await this.getRecord(s))),N(this,"delete",(i,s)=>{this.isInitialized(),this.logger.debug("Deleting record"),this.logger.trace({type:"method",method:"delete",id:s}),this.values.forEach(n=>{if(n.topic===i){if(typeof s<"u"&&n.id!==s)return;this.records.delete(n.id),this.events.emit(V.deleted,n)}}),this.persist()}),N(this,"exists",async(i,s)=>(this.isInitialized(),this.records.has(s)?(await this.getRecord(s)).topic===i:!1)),N(this,"on",(i,s)=>{this.events.on(i,s)}),N(this,"once",(i,s)=>{this.events.once(i,s)}),N(this,"off",(i,s)=>{this.events.off(i,s)}),N(this,"removeListener",(i,s)=>{this.events.removeListener(i,s)}),this.logger=(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t,this.name)}get context(){return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger)}get storageKey(){return this.storagePrefix+this.version+this.core.customStoragePrefix+"//"+this.name}get size(){return this.records.size}get keys(){return Array.from(this.records.keys())}get values(){return Array.from(this.records.values())}get pending(){const e=[];return this.values.forEach(t=>{if(typeof t.response<"u")return;const i={topic:t.topic,request:(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_11__.formatJsonRpcRequest)(t.request.method,t.request.params,t.id),chainId:t.chainId};return e.push(i)}),e}async setJsonRpcRecords(e){await this.core.storage.setItem(this.storageKey,e)}async getJsonRpcRecords(){return await this.core.storage.getItem(this.storageKey)}getRecord(e){this.isInitialized();const t=this.records.get(e);if(!t){const{message:i}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NO_MATCHING_KEY",`${this.name}: ${e}`);throw new Error(i)}return t}async persist(){await this.setJsonRpcRecords(this.values),this.events.emit(V.sync)}async restore(){try{const e=await this.getJsonRpcRecords();if(typeof e>"u"||!e.length)return;if(this.records.size){const{message:t}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("RESTORE_WILL_OVERRIDE",this.name);throw this.logger.error(t),new Error(t)}this.cached=e,this.logger.debug(`Successfully Restored records for ${this.name}`),this.logger.trace({type:"method",method:"restore",records:this.values})}catch(e){this.logger.debug(`Failed to Restore records for ${this.name}`),this.logger.error(e)}}registerEventListeners(){this.events.on(V.created,e=>{const t=V.created;this.logger.info(`Emitting ${t}`),this.logger.debug({type:"event",event:t,record:e})}),this.events.on(V.updated,e=>{const t=V.updated;this.logger.info(`Emitting ${t}`),this.logger.debug({type:"event",event:t,record:e})}),this.events.on(V.deleted,e=>{const t=V.deleted;this.logger.info(`Emitting ${t}`),this.logger.debug({type:"event",event:t,record:e})}),this.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__.HEARTBEAT_EVENTS.pulse,()=>{this.cleanup()})}cleanup(){try{this.isInitialized();let e=!1;this.records.forEach(t=>{(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.toMiliseconds)(t.expiry||0)-Date.now()<=0&&(this.logger.info(`Deleting expired history log: ${t.id}`),this.records.delete(t.id),this.events.emit(V.deleted,t,!1),e=!0)}),e&&this.persist()}catch(e){this.logger.warn(e)}}isInitialized(){if(!this.initialized){const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NOT_INITIALIZED",this.name);throw new Error(e)}}}var Bo=Object.defineProperty,Vo=(r,e,t)=>e in r?Bo(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,z=(r,e,t)=>Vo(r,typeof e!="symbol"?e+"":e,t);class Ki extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__.IExpirer{constructor(e,t){super(e,t),this.core=e,this.logger=t,z(this,"expirations",new Map),z(this,"events",new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter),z(this,"name",Wt),z(this,"version",Ht),z(this,"cached",[]),z(this,"initialized",!1),z(this,"storagePrefix",W),z(this,"init",async()=>{this.initialized||(this.logger.trace("Initialized"),await this.restore(),this.cached.forEach(i=>this.expirations.set(i.target,i)),this.cached=[],this.registerEventListeners(),this.initialized=!0)}),z(this,"has",i=>{try{const s=this.formatTarget(i);return typeof this.getExpiration(s)<"u"}catch{return!1}}),z(this,"set",(i,s)=>{this.isInitialized();const n=this.formatTarget(i),o={target:n,expiry:s};this.expirations.set(n,o),this.checkExpiry(n,o),this.events.emit(q.created,{target:n,expiration:o})}),z(this,"get",i=>{this.isInitialized();const s=this.formatTarget(i);return this.getExpiration(s)}),z(this,"del",i=>{if(this.isInitialized(),this.has(i)){const s=this.formatTarget(i),n=this.getExpiration(s);this.expirations.delete(s),this.events.emit(q.deleted,{target:s,expiration:n})}}),z(this,"on",(i,s)=>{this.events.on(i,s)}),z(this,"once",(i,s)=>{this.events.once(i,s)}),z(this,"off",(i,s)=>{this.events.off(i,s)}),z(this,"removeListener",(i,s)=>{this.events.removeListener(i,s)}),this.logger=(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t,this.name)}get context(){return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger)}get storageKey(){return this.storagePrefix+this.version+this.core.customStoragePrefix+"//"+this.name}get length(){return this.expirations.size}get keys(){return Array.from(this.expirations.keys())}get values(){return Array.from(this.expirations.values())}formatTarget(e){if(typeof e=="string")return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.formatTopicTarget)(e);if(typeof e=="number")return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.formatIdTarget)(e);const{message:t}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("UNKNOWN_TYPE",`Target type: ${typeof e}`);throw new Error(t)}async setExpirations(e){await this.core.storage.setItem(this.storageKey,e)}async getExpirations(){return await this.core.storage.getItem(this.storageKey)}async persist(){await this.setExpirations(this.values),this.events.emit(q.sync)}async restore(){try{const e=await this.getExpirations();if(typeof e>"u"||!e.length)return;if(this.expirations.size){const{message:t}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("RESTORE_WILL_OVERRIDE",this.name);throw this.logger.error(t),new Error(t)}this.cached=e,this.logger.debug(`Successfully Restored expirations for ${this.name}`),this.logger.trace({type:"method",method:"restore",expirations:this.values})}catch(e){this.logger.debug(`Failed to Restore expirations for ${this.name}`),this.logger.error(e)}}getExpiration(e){const t=this.expirations.get(e);if(!t){const{message:i}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NO_MATCHING_KEY",`${this.name}: ${e}`);throw this.logger.warn(i),new Error(i)}return t}checkExpiry(e,t){const{expiry:i}=t;(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.toMiliseconds)(i)-Date.now()<=0&&this.expire(e,t)}expire(e,t){this.expirations.delete(e),this.events.emit(q.expired,{target:e,expiration:t})}checkExpirations(){this.core.relayer.connected&&this.expirations.forEach((e,t)=>this.checkExpiry(t,e))}registerEventListeners(){this.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__.HEARTBEAT_EVENTS.pulse,()=>this.checkExpirations()),this.events.on(q.created,e=>{const t=q.created;this.logger.info(`Emitting ${t}`),this.logger.debug({type:"event",event:t,data:e}),this.persist()}),this.events.on(q.expired,e=>{const t=q.expired;this.logger.info(`Emitting ${t}`),this.logger.debug({type:"event",event:t,data:e}),this.persist()}),this.events.on(q.deleted,e=>{const t=q.deleted;this.logger.info(`Emitting ${t}`),this.logger.debug({type:"event",event:t,data:e}),this.persist()})}isInitialized(){if(!this.initialized){const{message:e}=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getInternalError)("NOT_INITIALIZED",this.name);throw new Error(e)}}}var qo=Object.defineProperty,Go=(r,e,t)=>e in r?qo(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,P=(r,e,t)=>Go(r,typeof e!="symbol"?e+"":e,t);class Bi extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__.IVerify{constructor(e,t,i){super(e,t,i),this.core=e,this.logger=t,this.store=i,P(this,"name",Yt),P(this,"abortController"),P(this,"isDevEnv"),P(this,"verifyUrlV3",Xt),P(this,"storagePrefix",W),P(this,"version",Fe),P(this,"publicKey"),P(this,"fetchPromise"),P(this,"init",async()=>{var s;this.isDevEnv||(this.publicKey=await this.store.getItem(this.storeKey),this.publicKey&&(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.toMiliseconds)((s=this.publicKey)==null?void 0:s.expiresAt)<Date.now()&&(this.logger.debug("verify v2 public key expired"),await this.removePublicKey()))}),P(this,"register",async s=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isBrowser)()||this.isDevEnv)return;const n=window.location.origin,{id:o,decryptedId:a}=s,c=`${this.verifyUrlV3}/attestation?projectId=${this.core.projectId}&origin=${n}&id=${o}&decryptedId=${a}`;try{const h=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_13__.getDocument)(),l=this.startAbortTimer(_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.ONE_SECOND*5),p=await new Promise((y,w)=>{const u=()=>{window.removeEventListener("message",D),h.body.removeChild(m),w("attestation aborted")};this.abortController.signal.addEventListener("abort",u);const m=h.createElement("iframe");m.src=c,m.style.display="none",m.addEventListener("error",u,{signal:this.abortController.signal});const D=_=>{if(_.data&&typeof _.data=="string")try{const E=JSON.parse(_.data);if(E.type==="verify_attestation"){if((0,_walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_7__.decodeJWT)(E.attestation).payload.id!==o)return;clearInterval(l),h.body.removeChild(m),this.abortController.signal.removeEventListener("abort",u),window.removeEventListener("message",D),y(E.attestation===null?"":E.attestation)}}catch(E){this.logger.warn(E)}};h.body.appendChild(m),window.addEventListener("message",D,{signal:this.abortController.signal})});return this.logger.debug("jwt attestation",p),p}catch(h){this.logger.warn(h)}return""}),P(this,"resolve",async s=>{if(this.isDevEnv)return"";const{attestationId:n,hash:o,encryptedId:a}=s;if(n===""){this.logger.debug("resolve: attestationId is empty, skipping");return}if(n){if((0,_walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_7__.decodeJWT)(n).payload.id!==a)return;const h=await this.isValidJwtAttestation(n);if(h){if(!h.isVerified){this.logger.warn("resolve: jwt attestation: origin url not verified");return}return h}}if(!o)return;const c=this.getVerifyUrl(s?.verifyUrl);return this.fetchAttestation(o,c)}),P(this,"fetchAttestation",async(s,n)=>{this.logger.debug(`resolving attestation: ${s} from url: ${n}`);const o=this.startAbortTimer(_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.ONE_SECOND*5),a=await fetch(`${n}/attestation/${s}?v2Supported=true`,{signal:this.abortController.signal});return clearTimeout(o),a.status===200?await a.json():void 0}),P(this,"getVerifyUrl",s=>{let n=s||be;return Zt.includes(n)||(this.logger.info(`verify url: ${n}, not included in trusted list, assigning default: ${be}`),n=be),n}),P(this,"fetchPublicKey",async()=>{try{this.logger.debug(`fetching public key from: ${this.verifyUrlV3}`);const s=this.startAbortTimer(_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.FIVE_SECONDS),n=await fetch(`${this.verifyUrlV3}/public-key`,{signal:this.abortController.signal});return clearTimeout(s),await n.json()}catch(s){this.logger.warn(s)}}),P(this,"persistPublicKey",async s=>{this.logger.debug("persisting public key to local storage",s),await this.store.setItem(this.storeKey,s),this.publicKey=s}),P(this,"removePublicKey",async()=>{this.logger.debug("removing verify v2 public key from storage"),await this.store.removeItem(this.storeKey),this.publicKey=void 0}),P(this,"isValidJwtAttestation",async s=>{const n=await this.getPublicKey();try{if(n)return this.validateAttestation(s,n)}catch(a){this.logger.error(a),this.logger.warn("error validating attestation")}const o=await this.fetchAndPersistPublicKey();try{if(o)return this.validateAttestation(s,o)}catch(a){this.logger.error(a),this.logger.warn("error validating attestation")}}),P(this,"getPublicKey",async()=>this.publicKey?this.publicKey:await this.fetchAndPersistPublicKey()),P(this,"fetchAndPersistPublicKey",async()=>{if(this.fetchPromise)return await this.fetchPromise,this.publicKey;this.fetchPromise=new Promise(async n=>{const o=await this.fetchPublicKey();o&&(await this.persistPublicKey(o),n(o))});const s=await this.fetchPromise;return this.fetchPromise=void 0,s}),P(this,"validateAttestation",(s,n)=>{const o=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.verifyP256Jwt)(s,n.publicKey),a={hasExpired:(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.toMiliseconds)(o.exp)<Date.now(),payload:o};if(a.hasExpired)throw this.logger.warn("resolve: jwt attestation expired"),new Error("JWT attestation expired");return{origin:a.payload.origin,isScam:a.payload.isScam,isVerified:a.payload.isVerified}}),this.logger=(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t,this.name),this.abortController=new AbortController,this.isDevEnv=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isTestRun)(),this.init()}get storeKey(){return this.storagePrefix+this.version+this.core.customStoragePrefix+"//verify:public:key"}get context(){return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger)}startAbortTimer(e){return this.abortController=new AbortController,setTimeout(()=>this.abortController.abort(),(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.toMiliseconds)(e))}}var Wo=Object.defineProperty,Ho=(r,e,t)=>e in r?Wo(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,Vi=(r,e,t)=>Ho(r,typeof e!="symbol"?e+"":e,t);class qi extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__.IEchoClient{constructor(e,t){super(e,t),this.projectId=e,this.logger=t,Vi(this,"context",Qt),Vi(this,"registerDeviceToken",async i=>{const{clientId:s,token:n,notificationType:o,enableEncrypted:a=!1}=i,c=`${ei}/${this.projectId}/clients`;await fetch(c,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({client_id:s,type:o,token:n,always_raw:a})})}),this.logger=(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t,this.context)}}var Yo=Object.defineProperty,Gi=Object.getOwnPropertySymbols,Jo=Object.prototype.hasOwnProperty,Xo=Object.prototype.propertyIsEnumerable,et=(r,e,t)=>e in r?Yo(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,we=(r,e)=>{for(var t in e||(e={}))Jo.call(e,t)&&et(r,t,e[t]);if(Gi)for(var t of Gi(e))Xo.call(e,t)&&et(r,t,e[t]);return r},R=(r,e,t)=>et(r,typeof e!="symbol"?e+"":e,t);class Wi extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__.IEventClient{constructor(e,t,i=!0){super(e,t,i),this.core=e,this.logger=t,R(this,"context",ii),R(this,"storagePrefix",W),R(this,"storageVersion",ti),R(this,"events",new Map),R(this,"shouldPersist",!1),R(this,"init",async()=>{if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.isTestRun)())try{const s={eventId:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.uuidv4)(),timestamp:Date.now(),domain:this.getAppDomain(),props:{event:"INIT",type:"",properties:{client_id:await this.core.crypto.getClientId(),user_agent:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.formatUA)(this.core.relayer.protocol,this.core.relayer.version,Pe)}}};await this.sendEvent([s])}catch(s){this.logger.warn(s)}}),R(this,"createEvent",s=>{const{event:n="ERROR",type:o="",properties:{topic:a,trace:c}}=s,h=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.uuidv4)(),l=this.core.projectId||"",p=Date.now(),y=we({eventId:h,timestamp:p,props:{event:n,type:o,properties:{topic:a,trace:c}},bundleId:l,domain:this.getAppDomain()},this.setMethods(h));return this.telemetryEnabled&&(this.events.set(h,y),this.shouldPersist=!0),y}),R(this,"getEvent",s=>{const{eventId:n,topic:o}=s;if(n)return this.events.get(n);const a=Array.from(this.events.values()).find(c=>c.props.properties.topic===o);if(a)return we(we({},a),this.setMethods(a.eventId))}),R(this,"deleteEvent",s=>{const{eventId:n}=s;this.events.delete(n),this.shouldPersist=!0}),R(this,"setEventListeners",()=>{this.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__.HEARTBEAT_EVENTS.pulse,async()=>{this.shouldPersist&&await this.persist(),this.events.forEach(s=>{(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.fromMiliseconds)(Date.now())-(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_5__.fromMiliseconds)(s.timestamp)>si&&(this.events.delete(s.eventId),this.shouldPersist=!0)})})}),R(this,"setMethods",s=>({addTrace:n=>this.addTrace(s,n),setError:n=>this.setError(s,n)})),R(this,"addTrace",(s,n)=>{const o=this.events.get(s);o&&(o.props.properties.trace.push(n),this.events.set(s,o),this.shouldPersist=!0)}),R(this,"setError",(s,n)=>{const o=this.events.get(s);o&&(o.props.type=n,o.timestamp=Date.now(),this.events.set(s,o),this.shouldPersist=!0)}),R(this,"persist",async()=>{await this.core.storage.setItem(this.storageKey,Array.from(this.events.values())),this.shouldPersist=!1}),R(this,"restore",async()=>{try{const s=await this.core.storage.getItem(this.storageKey)||[];if(!s.length)return;s.forEach(n=>{this.events.set(n.eventId,we(we({},n),this.setMethods(n.eventId)))})}catch(s){this.logger.warn(s)}}),R(this,"submit",async()=>{if(!this.telemetryEnabled||this.events.size===0)return;const s=[];for(const[n,o]of this.events)o.props.type&&s.push(o);if(s.length!==0)try{if((await this.sendEvent(s)).ok)for(const n of s)this.events.delete(n.eventId),this.shouldPersist=!0}catch(n){this.logger.warn(n)}}),R(this,"sendEvent",async s=>{const n=this.getAppDomain()?"":"&sp=desktop";return await fetch(`${ri}?projectId=${this.core.projectId}&st=events_sdk&sv=js-${Pe}${n}`,{method:"POST",body:JSON.stringify(s)})}),R(this,"getAppDomain",()=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_8__.getAppMetadata)().url),this.logger=(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t,this.context),this.telemetryEnabled=i,i?this.restore().then(async()=>{await this.submit(),this.setEventListeners()}):this.persist()}get storageKey(){return this.storagePrefix+this.storageVersion+this.core.customStoragePrefix+"//"+this.context}}var Zo=Object.defineProperty,Hi=Object.getOwnPropertySymbols,Qo=Object.prototype.hasOwnProperty,ea=Object.prototype.propertyIsEnumerable,tt=(r,e,t)=>e in r?Zo(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,Yi=(r,e)=>{for(var t in e||(e={}))Qo.call(e,t)&&tt(r,t,e[t]);if(Hi)for(var t of Hi(e))ea.call(e,t)&&tt(r,t,e[t]);return r},v=(r,e,t)=>tt(r,typeof e!="symbol"?e+"":e,t);class Oe extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__.ICore{constructor(e){var t;super(e),v(this,"protocol",Ue),v(this,"version",Fe),v(this,"name",pe),v(this,"relayUrl"),v(this,"projectId"),v(this,"customStoragePrefix"),v(this,"events",new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter),v(this,"logger"),v(this,"heartbeat"),v(this,"relayer"),v(this,"crypto"),v(this,"storage"),v(this,"history"),v(this,"expirer"),v(this,"pairing"),v(this,"verify"),v(this,"echoClient"),v(this,"linkModeSupportedApps"),v(this,"eventClient"),v(this,"initialized",!1),v(this,"logChunkController"),v(this,"on",(a,c)=>this.events.on(a,c)),v(this,"once",(a,c)=>this.events.once(a,c)),v(this,"off",(a,c)=>this.events.off(a,c)),v(this,"removeListener",(a,c)=>this.events.removeListener(a,c)),v(this,"dispatchEnvelope",({topic:a,message:c,sessionExists:h})=>{if(!a||!c)return;const l={topic:a,message:c,publishedAt:Date.now(),transportType:ee.link_mode};this.relayer.onLinkMessageEvent(l,{sessionExists:h})});const i=this.getGlobalCore(e?.customStoragePrefix);if(i)try{return this.customStoragePrefix=i.customStoragePrefix,this.logger=i.logger,this.heartbeat=i.heartbeat,this.crypto=i.crypto,this.history=i.history,this.expirer=i.expirer,this.storage=i.storage,this.relayer=i.relayer,this.pairing=i.pairing,this.verify=i.verify,this.echoClient=i.echoClient,this.linkModeSupportedApps=i.linkModeSupportedApps,this.eventClient=i.eventClient,this.initialized=i.initialized,this.logChunkController=i.logChunkController,i}catch(a){console.warn("Failed to copy global core",a)}this.projectId=e?.projectId,this.relayUrl=e?.relayUrl||Ke,this.customStoragePrefix=e!=null&&e.customStoragePrefix?`:${e.customStoragePrefix}`:"";const s=(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getDefaultLoggerOptions)({level:typeof e?.logger=="string"&&e.logger?e.logger:It.logger,name:pe}),{logger:n,chunkLoggerController:o}=(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generatePlatformLogger)({opts:s,maxSizeInBytes:e?.maxLogBlobSizeInBytes,loggerOverride:e?.logger});this.logChunkController=o,(t=this.logChunkController)!=null&&t.downloadLogsBlobInBrowser&&(window.downloadLogsBlobInBrowser=async()=>{var a,c;(a=this.logChunkController)!=null&&a.downloadLogsBlobInBrowser&&((c=this.logChunkController)==null||c.downloadLogsBlobInBrowser({clientId:await this.crypto.getClientId()}))}),this.logger=(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(n,this.name),this.heartbeat=new _walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__.HeartBeat,this.crypto=new Ei(this,this.logger,e?.keychain),this.history=new Mi(this,this.logger),this.expirer=new Ki(this,this.logger),this.storage=e!=null&&e.storage?e.storage:new _walletconnect_keyvaluestorage__WEBPACK_IMPORTED_MODULE_2__["default"](Yi(Yi({},Tt),e?.storageOptions)),this.relayer=new xi({core:this,logger:this.logger,relayUrl:this.relayUrl,projectId:this.projectId}),this.pairing=new Fi(this,this.logger),this.verify=new Bi(this,this.logger,this.storage),this.echoClient=new qi(this.projectId||"",this.logger),this.linkModeSupportedApps=[],this.eventClient=new Wi(this,this.logger,e?.telemetryEnabled),this.setGlobalCore(this)}static async init(e){const t=new Oe(e);await t.initialize();const i=await t.crypto.getClientId();return await t.storage.setItem(Ft,i),t}get context(){return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger)}async start(){this.initialized||await this.initialize()}async getLogsBlob(){var e;return(e=this.logChunkController)==null?void 0:e.logsToBlob({clientId:await this.crypto.getClientId()})}async addLinkModeSupportedApp(e){this.linkModeSupportedApps.includes(e)||(this.linkModeSupportedApps.push(e),await this.storage.setItem(Be,this.linkModeSupportedApps))}async initialize(){this.logger.trace("Initialized");try{await this.crypto.init(),await this.history.init(),await this.expirer.init(),await this.relayer.init(),await this.heartbeat.init(),await this.pairing.init(),this.linkModeSupportedApps=await this.storage.getItem(Be)||[],this.initialized=!0,this.logger.info("Core Initialization Success")}catch(e){throw this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`,e),this.logger.error(e.message),e}}getGlobalCore(e=""){try{if(this.isGlobalCoreDisabled())return;const t=`_walletConnectCore_${e}`,i=`${t}_count`;return globalThis[i]=(globalThis[i]||0)+1,globalThis[i]>1&&console.warn(`WalletConnect Core is already initialized. This is probably a mistake and can lead to unexpected behavior. Init() was called ${globalThis[i]} times.`),globalThis[t]}catch(t){console.warn("Failed to get global WalletConnect core",t);return}}setGlobalCore(e){var t;try{if(this.isGlobalCoreDisabled())return;const i=`_walletConnectCore_${((t=e.opts)==null?void 0:t.customStoragePrefix)||""}`;globalThis[i]=e}catch(i){console.warn("Failed to set global WalletConnect core",i)}}isGlobalCoreDisabled(){try{return typeof process<"u"&&({"MIX_WALLETCONNECT_PROJECT_ID":"d657fc2caf26f35212226268cf9745d0"}).DISABLE_GLOBAL_CORE==="true"}catch{return!0}}}const ta=Oe;
//# sourceMappingURL=index.es.js.map


/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/safe-json/dist/esm/index.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/safe-json/dist/esm/index.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   safeJsonParse: () => (/* binding */ safeJsonParse),
/* harmony export */   safeJsonStringify: () => (/* binding */ safeJsonStringify)
/* harmony export */ });
const JSONStringify = data => JSON.stringify(data, (_, value) => typeof value === "bigint" ? value.toString() + "n" : value);
const JSONParse = json => {
    const numbersBiggerThanMaxInt = /([\[:])?(\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\}\]])/g;
    const serializedData = json.replace(numbersBiggerThanMaxInt, "$1\"$2n\"$3");
    return JSON.parse(serializedData, (_, value) => {
        const isCustomFormatBigInt = typeof value === "string" && value.match(/^\d+n$/);
        if (isCustomFormatBigInt)
            return BigInt(value.substring(0, value.length - 1));
        return value;
    });
};
function safeJsonParse(value) {
    if (typeof value !== "string") {
        throw new Error(`Cannot safe json parse value of type ${typeof value}`);
    }
    try {
        return JSONParse(value);
    }
    catch (_a) {
        return value;
    }
}
function safeJsonStringify(value) {
    return typeof value === "string" ? value : JSONStringify(value) || "";
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/types/dist/index.es.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/types/dist/index.es.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ICore: () => (/* binding */ h),
/* harmony export */   ICrypto: () => (/* binding */ g),
/* harmony export */   IEchoClient: () => (/* binding */ O),
/* harmony export */   IEngine: () => (/* binding */ V),
/* harmony export */   IEngineEvents: () => (/* binding */ K),
/* harmony export */   IEventClient: () => (/* binding */ R),
/* harmony export */   IExpirer: () => (/* binding */ S),
/* harmony export */   IJsonRpcHistory: () => (/* binding */ I),
/* harmony export */   IKeyChain: () => (/* binding */ j),
/* harmony export */   IMessageTracker: () => (/* binding */ y),
/* harmony export */   IPairing: () => (/* binding */ $),
/* harmony export */   IPublisher: () => (/* binding */ m),
/* harmony export */   IRelayer: () => (/* binding */ d),
/* harmony export */   ISignClient: () => (/* binding */ J),
/* harmony export */   ISignClientEvents: () => (/* binding */ H),
/* harmony export */   IStore: () => (/* binding */ f),
/* harmony export */   ISubscriber: () => (/* binding */ P),
/* harmony export */   ISubscriberTopicMap: () => (/* binding */ C),
/* harmony export */   IVerify: () => (/* binding */ M)
/* harmony export */ });
/* harmony import */ var _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/events */ "./node_modules/@walletconnect/events/dist/esm/index.js");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events */ "./node_modules/events/events.js");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_1__);
var a=Object.defineProperty,u=(e,s,r)=>s in e?a(e,s,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[s]=r,c=(e,s,r)=>u(e,typeof s!="symbol"?s+"":s,r);class h extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents{constructor(s){super(),this.opts=s,c(this,"protocol","wc"),c(this,"version",2)}}class g{constructor(s,r,t){this.core=s,this.logger=r}}var p=Object.defineProperty,b=(e,s,r)=>s in e?p(e,s,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[s]=r,v=(e,s,r)=>b(e,typeof s!="symbol"?s+"":s,r);class I extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents{constructor(s,r){super(),this.core=s,this.logger=r,v(this,"records",new Map)}}class y{constructor(s,r){this.logger=s,this.core=r}}class m extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents{constructor(s,r){super(),this.relayer=s,this.logger=r}}class d extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents{constructor(s){super()}}class f{constructor(s,r,t,q){this.core=s,this.logger=r,this.name=t}}var E=Object.defineProperty,x=(e,s,r)=>s in e?E(e,s,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[s]=r,w=(e,s,r)=>x(e,typeof s!="symbol"?s+"":s,r);class C{constructor(){w(this,"map",new Map)}}class P extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents{constructor(s,r){super(),this.relayer=s,this.logger=r}}class j{constructor(s,r){this.core=s,this.logger=r}}class S extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents{constructor(s,r){super(),this.core=s,this.logger=r}}class ${constructor(s,r){this.logger=s,this.core=r}}class M{constructor(s,r,t){this.core=s,this.logger=r,this.store=t}}class O{constructor(s,r){this.projectId=s,this.logger=r}}class R{constructor(s,r,t){this.core=s,this.logger=r,this.telemetryEnabled=t}}var T=Object.defineProperty,k=(e,s,r)=>s in e?T(e,s,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[s]=r,i=(e,s,r)=>k(e,typeof s!="symbol"?s+"":s,r);class H extends (events__WEBPACK_IMPORTED_MODULE_1___default()){constructor(){super()}}class J{constructor(s){this.opts=s,i(this,"protocol","wc"),i(this,"version",2)}}class K extends events__WEBPACK_IMPORTED_MODULE_1__.EventEmitter{constructor(){super()}}class V{constructor(s){this.client=s}}
//# sourceMappingURL=index.es.js.map


/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/utils/dist/index.es.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/utils/dist/index.es.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BASE10: () => (/* binding */ $n),
/* harmony export */   BASE16: () => (/* binding */ tt),
/* harmony export */   BASE64: () => (/* binding */ Qt),
/* harmony export */   BASE64URL: () => (/* binding */ De),
/* harmony export */   COLON: () => (/* binding */ Hs),
/* harmony export */   DEFAULT_DEPTH: () => (/* binding */ We),
/* harmony export */   EMPTY_SPACE: () => (/* binding */ Ee),
/* harmony export */   ENV_MAP: () => (/* binding */ J),
/* harmony export */   INTERNAL_ERRORS: () => (/* binding */ Qo),
/* harmony export */   LimitedSet: () => (/* binding */ gi),
/* harmony export */   MemoryStore: () => (/* binding */ Ha),
/* harmony export */   ONE_THOUSAND: () => (/* binding */ Ds),
/* harmony export */   REACT_NATIVE_PRODUCT: () => (/* binding */ er),
/* harmony export */   RELAYER_DEFAULT_PROTOCOL: () => (/* binding */ Mo),
/* harmony export */   SDK_ERRORS: () => (/* binding */ Jo),
/* harmony export */   SDK_TYPE: () => (/* binding */ rr),
/* harmony export */   SLASH: () => (/* binding */ nr),
/* harmony export */   TYPE_0: () => (/* binding */ Cn),
/* harmony export */   TYPE_1: () => (/* binding */ ee),
/* harmony export */   TYPE_2: () => (/* binding */ ge),
/* harmony export */   UTF8: () => (/* binding */ te),
/* harmony export */   addResourceToRecap: () => (/* binding */ Yr),
/* harmony export */   addSignatureToExtrinsic: () => (/* binding */ bs),
/* harmony export */   appendToQueryString: () => (/* binding */ or),
/* harmony export */   assertType: () => (/* binding */ Zs),
/* harmony export */   assignAbilityToActions: () => (/* binding */ hn),
/* harmony export */   base64Decode: () => (/* binding */ Zr),
/* harmony export */   base64Encode: () => (/* binding */ Gr),
/* harmony export */   buildApprovedNamespaces: () => (/* binding */ pa),
/* harmony export */   buildAuthObject: () => (/* binding */ mf),
/* harmony export */   buildNamespacesFromAuth: () => (/* binding */ ga),
/* harmony export */   buildRecapStatement: () => (/* binding */ Jr),
/* harmony export */   buildSignedExtrinsicHash: () => (/* binding */ Ka),
/* harmony export */   calcExpiry: () => (/* binding */ ii),
/* harmony export */   capitalize: () => (/* binding */ ti),
/* harmony export */   capitalizeWord: () => (/* binding */ lr),
/* harmony export */   createDelayedPromise: () => (/* binding */ ei),
/* harmony export */   createEncodedRecap: () => (/* binding */ Ef),
/* harmony export */   createExpiringPromise: () => (/* binding */ ni),
/* harmony export */   createRecap: () => (/* binding */ Wr),
/* harmony export */   decodeRecap: () => (/* binding */ Lt),
/* harmony export */   decodeTypeByte: () => (/* binding */ Vt),
/* harmony export */   decodeTypeTwoEnvelope: () => (/* binding */ Yc),
/* harmony export */   decrypt: () => (/* binding */ Zc),
/* harmony export */   deriveExtrinsicHash: () => (/* binding */ ys),
/* harmony export */   deriveSymKey: () => (/* binding */ Kc),
/* harmony export */   deserialize: () => (/* binding */ Me),
/* harmony export */   encodeRecap: () => (/* binding */ Ne),
/* harmony export */   encodeTypeByte: () => (/* binding */ jn),
/* harmony export */   encodeTypeTwoEnvelope: () => (/* binding */ Wc),
/* harmony export */   encrypt: () => (/* binding */ Gc),
/* harmony export */   engineEvent: () => (/* binding */ ci),
/* harmony export */   enumify: () => (/* binding */ Qs),
/* harmony export */   extractSolanaTransactionId: () => (/* binding */ sf),
/* harmony export */   formatAccountId: () => (/* binding */ Zn),
/* harmony export */   formatAccountWithChain: () => (/* binding */ Os),
/* harmony export */   formatChainId: () => (/* binding */ Gn),
/* harmony export */   formatDeeplinkUrl: () => (/* binding */ dr),
/* harmony export */   formatExpirerTarget: () => (/* binding */ Xe),
/* harmony export */   formatIdTarget: () => (/* binding */ oi),
/* harmony export */   formatMessage: () => (/* binding */ qr),
/* harmony export */   formatMessageContext: () => (/* binding */ Ws),
/* harmony export */   formatRelayParams: () => (/* binding */ Ko),
/* harmony export */   formatRelayRpcUrl: () => (/* binding */ zs),
/* harmony export */   formatStatementFromRecap: () => (/* binding */ gn),
/* harmony export */   formatTopicTarget: () => (/* binding */ ri),
/* harmony export */   formatUA: () => (/* binding */ cr),
/* harmony export */   formatUri: () => (/* binding */ oa),
/* harmony export */   fromBase64: () => (/* binding */ Qe),
/* harmony export */   generateKeyPair: () => (/* binding */ Vc),
/* harmony export */   generateRandomBytes32: () => (/* binding */ qc),
/* harmony export */   getAccountsChains: () => (/* binding */ qt),
/* harmony export */   getAccountsFromNamespaces: () => (/* binding */ _s),
/* harmony export */   getAddressFromAccount: () => (/* binding */ Wn),
/* harmony export */   getAddressesFromAccounts: () => (/* binding */ Us),
/* harmony export */   getAlgorandTransactionId: () => (/* binding */ af),
/* harmony export */   getAppId: () => (/* binding */ qs),
/* harmony export */   getAppMetadata: () => (/* binding */ sr),
/* harmony export */   getBrowserOnlineStatus: () => (/* binding */ us),
/* harmony export */   getChainFromAccount: () => (/* binding */ Yn),
/* harmony export */   getChainsFromAccounts: () => (/* binding */ Xn),
/* harmony export */   getChainsFromNamespace: () => (/* binding */ ve),
/* harmony export */   getChainsFromNamespaces: () => (/* binding */ Ts),
/* harmony export */   getChainsFromRecap: () => (/* binding */ Af),
/* harmony export */   getChainsFromRequiredNamespaces: () => (/* binding */ Rs),
/* harmony export */   getCommonValuesInArrays: () => (/* binding */ Je),
/* harmony export */   getCryptoKeyFromKeyData: () => (/* binding */ Do),
/* harmony export */   getDecodedRecapFromResources: () => (/* binding */ Kr),
/* harmony export */   getDeepLink: () => (/* binding */ ui),
/* harmony export */   getDidAddress: () => (/* binding */ dn),
/* harmony export */   getDidAddressSegments: () => (/* binding */ Se),
/* harmony export */   getDidChainId: () => (/* binding */ Mr),
/* harmony export */   getEnvironment: () => (/* binding */ Pt),
/* harmony export */   getHttpUrl: () => (/* binding */ Gs),
/* harmony export */   getInternalError: () => (/* binding */ Et),
/* harmony export */   getJavascriptID: () => (/* binding */ fr),
/* harmony export */   getJavascriptOS: () => (/* binding */ ir),
/* harmony export */   getLastItems: () => (/* binding */ ur),
/* harmony export */   getLinkModeURL: () => (/* binding */ sa),
/* harmony export */   getMethodsFromRecap: () => (/* binding */ If),
/* harmony export */   getNamespacedDidChainId: () => (/* binding */ Vr),
/* harmony export */   getNamespacesChains: () => (/* binding */ Go),
/* harmony export */   getNamespacesEventsForChainId: () => (/* binding */ Wo),
/* harmony export */   getNamespacesFromAccounts: () => (/* binding */ Xo),
/* harmony export */   getNamespacesMethodsForChainId: () => (/* binding */ Zo),
/* harmony export */   getNearTransactionIdFromSignedTransaction: () => (/* binding */ cf),
/* harmony export */   getNearUint8ArrayFromBytes: () => (/* binding */ kr),
/* harmony export */   getNodeOnlineStatus: () => (/* binding */ ds),
/* harmony export */   getReCapActions: () => (/* binding */ zr),
/* harmony export */   getReactNativeOnlineStatus: () => (/* binding */ ls),
/* harmony export */   getRecapAbilitiesFromResource: () => (/* binding */ vf),
/* harmony export */   getRecapFromResources: () => (/* binding */ Oe),
/* harmony export */   getRecapResource: () => (/* binding */ Fr),
/* harmony export */   getRelayClientMetadata: () => (/* binding */ Fs),
/* harmony export */   getRelayProtocolApi: () => (/* binding */ na),
/* harmony export */   getRelayProtocolName: () => (/* binding */ ea),
/* harmony export */   getRequiredNamespacesFromNamespaces: () => (/* binding */ ha),
/* harmony export */   getSdkError: () => (/* binding */ Kt),
/* harmony export */   getSearchParamFromURL: () => (/* binding */ li),
/* harmony export */   getSignDirectHash: () => (/* binding */ uf),
/* harmony export */   getSuiDigest: () => (/* binding */ ff),
/* harmony export */   getUniqueValues: () => (/* binding */ Ge),
/* harmony export */   handleDeeplinkRedirect: () => (/* binding */ ai),
/* harmony export */   hasOverlap: () => (/* binding */ It),
/* harmony export */   hashEthereumMessage: () => (/* binding */ an),
/* harmony export */   hashKey: () => (/* binding */ Fc),
/* harmony export */   hashMessage: () => (/* binding */ zc),
/* harmony export */   isAndroid: () => (/* binding */ Ms),
/* harmony export */   isAppVisible: () => (/* binding */ Pa),
/* harmony export */   isBrowser: () => (/* binding */ zt),
/* harmony export */   isCaipNamespace: () => (/* binding */ Pn),
/* harmony export */   isConformingNamespaces: () => (/* binding */ cs),
/* harmony export */   isExpired: () => (/* binding */ fi),
/* harmony export */   isIframe: () => (/* binding */ gr),
/* harmony export */   isIos: () => (/* binding */ Vs),
/* harmony export */   isNode: () => (/* binding */ Ye),
/* harmony export */   isOnline: () => (/* binding */ ja),
/* harmony export */   isProposalStruct: () => (/* binding */ wa),
/* harmony export */   isReactNative: () => (/* binding */ Bt),
/* harmony export */   isRecap: () => (/* binding */ pn),
/* harmony export */   isSessionCompatible: () => (/* binding */ ya),
/* harmony export */   isSessionStruct: () => (/* binding */ xa),
/* harmony export */   isTelegram: () => (/* binding */ pr),
/* harmony export */   isTestRun: () => (/* binding */ hi),
/* harmony export */   isTypeOneEnvelope: () => (/* binding */ Jc),
/* harmony export */   isTypeTwoEnvelope: () => (/* binding */ Qc),
/* harmony export */   isUndefined: () => (/* binding */ kt),
/* harmony export */   isValidAccountId: () => (/* binding */ ts),
/* harmony export */   isValidAccounts: () => (/* binding */ rs),
/* harmony export */   isValidActions: () => (/* binding */ ss),
/* harmony export */   isValidArray: () => (/* binding */ me),
/* harmony export */   isValidChainId: () => (/* binding */ we),
/* harmony export */   isValidChains: () => (/* binding */ es),
/* harmony export */   isValidController: () => (/* binding */ va),
/* harmony export */   isValidEip1271Signature: () => (/* binding */ jr),
/* harmony export */   isValidEip191Signature: () => (/* binding */ Lr),
/* harmony export */   isValidErrorReason: () => (/* binding */ Sa),
/* harmony export */   isValidEvent: () => (/* binding */ Ua),
/* harmony export */   isValidId: () => (/* binding */ Ia),
/* harmony export */   isValidNamespaceAccounts: () => (/* binding */ os),
/* harmony export */   isValidNamespaceActions: () => (/* binding */ Dn),
/* harmony export */   isValidNamespaceChains: () => (/* binding */ ns),
/* harmony export */   isValidNamespaceMethodsOrEvents: () => (/* binding */ Hn),
/* harmony export */   isValidNamespaces: () => (/* binding */ is),
/* harmony export */   isValidNamespacesChainId: () => (/* binding */ _a),
/* harmony export */   isValidNamespacesEvent: () => (/* binding */ Ra),
/* harmony export */   isValidNamespacesRequest: () => (/* binding */ Ta),
/* harmony export */   isValidNumber: () => (/* binding */ qe),
/* harmony export */   isValidObject: () => (/* binding */ Ve),
/* harmony export */   isValidParams: () => (/* binding */ Aa),
/* harmony export */   isValidRecap: () => (/* binding */ bt),
/* harmony export */   isValidRelay: () => (/* binding */ fs),
/* harmony export */   isValidRelays: () => (/* binding */ Ba),
/* harmony export */   isValidRequest: () => (/* binding */ Na),
/* harmony export */   isValidRequestExpiry: () => (/* binding */ La),
/* harmony export */   isValidRequiredNamespaces: () => (/* binding */ Ea),
/* harmony export */   isValidResponse: () => (/* binding */ Oa),
/* harmony export */   isValidString: () => (/* binding */ it),
/* harmony export */   isValidUrl: () => (/* binding */ ma),
/* harmony export */   mapEntries: () => (/* binding */ Js),
/* harmony export */   mapToObj: () => (/* binding */ Ys),
/* harmony export */   mergeArrays: () => (/* binding */ ct),
/* harmony export */   mergeEncodedRecaps: () => (/* binding */ Bf),
/* harmony export */   mergeRecaps: () => (/* binding */ Xr),
/* harmony export */   mergeRequiredAndOptionalNamespaces: () => (/* binding */ ba),
/* harmony export */   normalizeNamespaces: () => (/* binding */ ye),
/* harmony export */   objToMap: () => (/* binding */ Xs),
/* harmony export */   openDeeplink: () => (/* binding */ hr),
/* harmony export */   parseAccountId: () => (/* binding */ ze),
/* harmony export */   parseChainId: () => (/* binding */ Fe),
/* harmony export */   parseContextNames: () => (/* binding */ ar),
/* harmony export */   parseExpirerTarget: () => (/* binding */ si),
/* harmony export */   parseNamespaceKey: () => (/* binding */ Yo),
/* harmony export */   parseRelayParams: () => (/* binding */ Vo),
/* harmony export */   parseTopic: () => (/* binding */ qo),
/* harmony export */   parseUri: () => (/* binding */ ra),
/* harmony export */   populateAppMetadata: () => (/* binding */ Ks),
/* harmony export */   populateAuthPayload: () => (/* binding */ wf),
/* harmony export */   recapHasResource: () => (/* binding */ xf),
/* harmony export */   serialize: () => (/* binding */ kn),
/* harmony export */   sleep: () => (/* binding */ pi),
/* harmony export */   ss58AddressToPublicKey: () => (/* binding */ gs),
/* harmony export */   subscribeToBrowserNetworkChange: () => (/* binding */ hs),
/* harmony export */   subscribeToNetworkChange: () => (/* binding */ ka),
/* harmony export */   subscribeToReactNativeNetworkChange: () => (/* binding */ ps),
/* harmony export */   toBase64: () => (/* binding */ br),
/* harmony export */   uuidv4: () => (/* binding */ di),
/* harmony export */   validateDecoding: () => (/* binding */ Xc),
/* harmony export */   validateEncoding: () => (/* binding */ Ho),
/* harmony export */   validateSignedCacao: () => (/* binding */ yf),
/* harmony export */   verifyP256Jwt: () => (/* binding */ ta),
/* harmony export */   verifySignature: () => (/* binding */ Cr)
/* harmony export */ });
/* harmony import */ var detect_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! detect-browser */ "./node_modules/@walletconnect/sign-client/node_modules/detect-browser/es/index.js");
/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/time */ "./node_modules/@walletconnect/time/dist/cjs/index.js");
/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/window-getters */ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/window-getters/dist/cjs/index.js");
/* harmony import */ var _walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/window-metadata */ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/window-metadata/dist/cjs/index.js");
/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/signature/recoverAddress.js");
/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! bs58 */ "./node_modules/@walletconnect/sign-client/node_modules/bs58/src/esm/index.js");
/* harmony import */ var _msgpack_msgpack__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @msgpack/msgpack */ "./node_modules/@msgpack/msgpack/dist.esm/encode.mjs");
/* harmony import */ var _msgpack_msgpack__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @msgpack/msgpack */ "./node_modules/@msgpack/msgpack/dist.esm/decode.mjs");
/* harmony import */ var _scure_base__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @scure/base */ "./node_modules/@walletconnect/sign-client/node_modules/@scure/base/lib/esm/index.js");
/* harmony import */ var _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @walletconnect/relay-auth */ "./node_modules/@walletconnect/relay-auth/dist/index.es.js");
/* harmony import */ var uint8arrays__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! uint8arrays */ "./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/index.js");
/* harmony import */ var _walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @walletconnect/relay-api */ "./node_modules/@walletconnect/relay-api/dist/index.es.js");
/* harmony import */ var blakejs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! blakejs */ "./node_modules/blakejs/index.js");
/* harmony import */ var blakejs__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(blakejs__WEBPACK_IMPORTED_MODULE_12__);
/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ "./node_modules/process/browser.js");
/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js")["Buffer"];
const xe=":";function Fe(t){const[e,n]=t.split(xe);return{namespace:e,reference:n}}function Gn(t){const{namespace:e,reference:n}=t;return[e,n].join(xe)}function ze(t){const[e,n,r]=t.split(xe);return{namespace:e,reference:n,address:r}}function Zn(t){const{namespace:e,reference:n,address:r}=t;return[e,n,r].join(xe)}function Ge(t,e){const n=[];return t.forEach(r=>{const o=e(r);n.includes(o)||n.push(o)}),n}function Wn(t){const{address:e}=ze(t);return e}function Yn(t){const{namespace:e,reference:n}=ze(t);return Gn({namespace:e,reference:n})}function Os(t,e){const{namespace:n,reference:r}=Fe(e);return Zn({namespace:n,reference:r,address:t})}function Us(t){return Ge(t,Wn)}function Xn(t){return Ge(t,Yn)}function _s(t,e=[]){const n=[];return Object.keys(t).forEach(r=>{if(e.length&&!e.includes(r))return;const o=t[r];n.push(...o.accounts)}),n}function Ts(t,e=[]){const n=[];return Object.keys(t).forEach(r=>{if(e.length&&!e.includes(r))return;const o=t[r];n.push(...Xn(o.accounts))}),n}function Rs(t,e=[]){const n=[];return Object.keys(t).forEach(r=>{if(e.length&&!e.includes(r))return;const o=t[r];n.push(...ve(r,o))}),n}function ve(t,e){return t.includes(":")?[t]:e.chains||[]}var $s=Object.defineProperty,Cs=Object.defineProperties,Ls=Object.getOwnPropertyDescriptors,Jn=Object.getOwnPropertySymbols,js=Object.prototype.hasOwnProperty,ks=Object.prototype.propertyIsEnumerable,Ze=(t,e,n)=>e in t?$s(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,Qn=(t,e)=>{for(var n in e||(e={}))js.call(e,n)&&Ze(t,n,e[n]);if(Jn)for(var n of Jn(e))ks.call(e,n)&&Ze(t,n,e[n]);return t},Ps=(t,e)=>Cs(t,Ls(e)),tr=(t,e,n)=>Ze(t,typeof e!="symbol"?e+"":e,n);const er="ReactNative",J={reactNative:"react-native",node:"node",browser:"browser",unknown:"unknown"},Ee=" ",Hs=":",nr="/",We=2,Ds=1e3,rr="js";function Ye(){return typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u"}function Bt(){return!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__.getDocument)()&&!!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__.getNavigator)()&&navigator.product===er}function Ms(){return Bt()&&typeof __webpack_require__.g<"u"&&typeof(__webpack_require__.g==null?void 0:__webpack_require__.g.Platform)<"u"&&(__webpack_require__.g==null?void 0:__webpack_require__.g.Platform.OS)==="android"}function Vs(){return Bt()&&typeof __webpack_require__.g<"u"&&typeof(__webpack_require__.g==null?void 0:__webpack_require__.g.Platform)<"u"&&(__webpack_require__.g==null?void 0:__webpack_require__.g.Platform.OS)==="ios"}function zt(){return!Ye()&&!!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__.getNavigator)()&&!!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__.getDocument)()}function Pt(){return Bt()?J.reactNative:Ye()?J.node:zt()?J.browser:J.unknown}function qs(){var t;try{return Bt()&&typeof __webpack_require__.g<"u"&&typeof(__webpack_require__.g==null?void 0:__webpack_require__.g.Application)<"u"?(t=__webpack_require__.g.Application)==null?void 0:t.applicationId:void 0}catch{return}}function or(t,e){const n=new URLSearchParams(t);for(const r of Object.keys(e).sort())if(e.hasOwnProperty(r)){const o=e[r];o!==void 0&&n.set(r,o)}return n.toString()}function Ks(t){var e,n;const r=sr();try{return t!=null&&t.url&&r.url&&new URL(t.url).host!==new URL(r.url).host&&(console.warn(`The configured WalletConnect 'metadata.url':${t.url} differs from the actual page url:${r.url}. This is probably unintended and can lead to issues.`),t.url=r.url),(e=t?.icons)!=null&&e.length&&t.icons.length>0&&(t.icons=t.icons.filter(o=>o!=="")),Ps(Qn(Qn({},r),t),{url:t?.url||r.url,name:t?.name||r.name,description:t?.description||r.description,icons:(n=t?.icons)!=null&&n.length&&t.icons.length>0?t.icons:r.icons})}catch(o){return console.warn("Error populating app metadata",o),t||r}}function sr(){return (0,_walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_3__.getWindowMetadata)()||{name:"",description:"",url:"",icons:[""]}}function Fs(t,e){var n;const r=Pt(),o={protocol:t,version:e,env:r};return r==="browser"&&(o.host=((n=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__.getLocation)())==null?void 0:n.host)||"unknown"),o}function ir(){if(Pt()===J.reactNative&&typeof __webpack_require__.g<"u"&&typeof(__webpack_require__.g==null?void 0:__webpack_require__.g.Platform)<"u"){const{OS:n,Version:r}=__webpack_require__.g.Platform;return[n,r].join("-")}const t=(0,detect_browser__WEBPACK_IMPORTED_MODULE_0__.detect)();if(t===null)return"unknown";const e=t.os?t.os.replace(" ","").toLowerCase():"unknown";return t.type==="browser"?[e,t.name,t.version].join("-"):[e,t.version].join("-")}function fr(){var t;const e=Pt();return e===J.browser?[e,((t=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__.getLocation)())==null?void 0:t.host)||"unknown"].join(":"):e}function cr(t,e,n){const r=ir(),o=fr();return[[t,e].join("-"),[rr,n].join("-"),r,o].join("/")}function zs({protocol:t,version:e,relayUrl:n,sdkVersion:r,auth:o,projectId:s,useOnCloseEvent:i,bundleId:f,packageName:a}){const l=n.split("?"),c=cr(t,e,r),u={auth:o,ua:c,projectId:s,useOnCloseEvent:i||void 0,packageName:a||void 0,bundleId:f||void 0},h=or(l[1]||"",u);return l[0]+"?"+h}function Gs(t){let e=(t.match(/^[^:]+(?=:\/\/)/gi)||[])[0];const n=typeof e<"u"?t.split("://")[1]:t;return e=e==="wss"?"https":"http",[e,n].join("://")}function Zs(t,e,n){if(!t[e]||typeof t[e]!==n)throw new Error(`Missing or invalid "${e}" param`)}function ar(t,e=We){return ur(t.split(nr),e)}function Ws(t){return ar(t).join(Ee)}function It(t,e){return t.filter(n=>e.includes(n)).length===t.length}function ur(t,e=We){return t.slice(Math.max(t.length-e,0))}function Ys(t){return Object.fromEntries(t.entries())}function Xs(t){return new Map(Object.entries(t))}function Js(t,e){const n={};return Object.keys(t).forEach(r=>{n[r]=e(t[r])}),n}const Qs=t=>t;function lr(t){return t.trim().replace(/^\w/,e=>e.toUpperCase())}function ti(t){return t.split(Ee).map(e=>lr(e)).join(Ee)}function ei(t=_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.FIVE_MINUTES,e){const n=(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.toMiliseconds)(t||_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.FIVE_MINUTES);let r,o,s,i;return{resolve:f=>{s&&r&&(clearTimeout(s),r(f),i=Promise.resolve(f))},reject:f=>{s&&o&&(clearTimeout(s),o(f))},done:()=>new Promise((f,a)=>{if(i)return f(i);s=setTimeout(()=>{const l=new Error(e);i=Promise.reject(l),a(l)},n),r=f,o=a})}}function ni(t,e,n){return new Promise(async(r,o)=>{const s=setTimeout(()=>o(new Error(n)),e);try{const i=await t;r(i)}catch(i){o(i)}clearTimeout(s)})}function Xe(t,e){if(typeof e=="string"&&e.startsWith(`${t}:`))return e;if(t.toLowerCase()==="topic"){if(typeof e!="string")throw new Error('Value must be "string" for expirer target type: topic');return`topic:${e}`}else if(t.toLowerCase()==="id"){if(typeof e!="number")throw new Error('Value must be "number" for expirer target type: id');return`id:${e}`}throw new Error(`Unknown expirer target type: ${t}`)}function ri(t){return Xe("topic",t)}function oi(t){return Xe("id",t)}function si(t){const[e,n]=t.split(":"),r={id:void 0,topic:void 0};if(e==="topic"&&typeof n=="string")r.topic=n;else if(e==="id"&&Number.isInteger(Number(n)))r.id=Number(n);else throw new Error(`Invalid target, expected id:number or topic:string, got ${e}:${n}`);return r}function ii(t,e){return (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.fromMiliseconds)((e||Date.now())+(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.toMiliseconds)(t))}function fi(t){return Date.now()>=(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.toMiliseconds)(t)}function ci(t,e){return`${t}${e?`:${e}`:""}`}function ct(t=[],e=[]){return[...new Set([...t,...e])]}async function ai({id:t,topic:e,wcDeepLink:n}){var r;try{if(!n)return;const o=typeof n=="string"?JSON.parse(n):n,s=o?.href;if(typeof s!="string")return;const i=dr(s,t,e),f=Pt();if(f===J.browser){if(!((r=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__.getDocument)())!=null&&r.hasFocus())){console.warn("Document does not have focus, skipping deeplink.");return}hr(i)}else f===J.reactNative&&typeof(__webpack_require__.g==null?void 0:__webpack_require__.g.Linking)<"u"&&await __webpack_require__.g.Linking.openURL(i)}catch(o){console.error(o)}}function dr(t,e,n){const r=`requestId=${e}&sessionTopic=${n}`;t.endsWith("/")&&(t=t.slice(0,-1));let o=`${t}`;if(t.startsWith("https://t.me")){const s=t.includes("?")?"&startapp=":"?startapp=";o=`${o}${s}${br(r,!0)}`}else o=`${o}/wc?${r}`;return o}function hr(t){let e="_self";gr()?e="_top":(pr()||t.startsWith("https://")||t.startsWith("http://"))&&(e="_blank"),window.open(t,e,"noreferrer noopener")}async function ui(t,e){let n="";try{if(zt()&&(n=localStorage.getItem(e),n))return n;n=await t.getItem(e)}catch(r){console.error(r)}return n}function Je(t,e){return t.filter(n=>e.includes(n))}function li(t,e){if(!t.includes(e))return null;const n=t.split(/([&,?,=])/),r=n.indexOf(e);return n[r+2]}function di(){return typeof crypto<"u"&&crypto!=null&&crypto.randomUUID?crypto.randomUUID():"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/gu,t=>{const e=Math.random()*16|0;return(t==="x"?e:e&3|8).toString(16)})}function hi(){return typeof process<"u"&&({"MIX_WALLETCONNECT_PROJECT_ID":"d657fc2caf26f35212226268cf9745d0"}).IS_VITEST==="true"}function pr(){return typeof window<"u"&&(!!window.TelegramWebviewProxy||!!window.Telegram||!!window.TelegramWebviewProxyProto)}function gr(){try{return window.self!==window.top}catch{return!1}}function br(t,e=!1){const n=Buffer.from(t).toString("base64");return e?n.replace(/[=]/g,""):n}function Qe(t){return Buffer.from(t,"base64").toString("utf-8")}function pi(t){return new Promise(e=>setTimeout(e,t))}class gi{constructor({limit:e}){tr(this,"limit"),tr(this,"set"),this.limit=e,this.set=new Set}add(e){if(!this.set.has(e)){if(this.set.size>=this.limit){const n=this.set.values().next().value;n&&this.set.delete(n)}this.set.add(e)}}has(e){return this.set.has(e)}}const Be=BigInt(2**32-1),yr=BigInt(32);function mr(t,e=!1){return e?{h:Number(t&Be),l:Number(t>>yr&Be)}:{h:Number(t>>yr&Be)|0,l:Number(t&Be)|0}}function wr(t,e=!1){const n=t.length;let r=new Uint32Array(n),o=new Uint32Array(n);for(let s=0;s<n;s++){const{h:i,l:f}=mr(t[s],e);[r[s],o[s]]=[i,f]}return[r,o]}const xr=(t,e,n)=>t>>>n,vr=(t,e,n)=>t<<32-n|e>>>n,At=(t,e,n)=>t>>>n|e<<32-n,St=(t,e,n)=>t<<32-n|e>>>n,se=(t,e,n)=>t<<64-n|e>>>n-32,ie=(t,e,n)=>t>>>n-32|e<<64-n,bi=(t,e)=>e,yi=(t,e)=>t,mi=(t,e,n)=>t<<n|e>>>32-n,wi=(t,e,n)=>e<<n|t>>>32-n,xi=(t,e,n)=>e<<n-32|t>>>64-n,vi=(t,e,n)=>t<<n-32|e>>>64-n;function dt(t,e,n,r){const o=(e>>>0)+(r>>>0);return{h:t+n+(o/2**32|0)|0,l:o|0}}const tn=(t,e,n)=>(t>>>0)+(e>>>0)+(n>>>0),en=(t,e,n,r)=>e+n+r+(t/2**32|0)|0,Ei=(t,e,n,r)=>(t>>>0)+(e>>>0)+(n>>>0)+(r>>>0),Bi=(t,e,n,r,o)=>e+n+r+o+(t/2**32|0)|0,Ii=(t,e,n,r,o)=>(t>>>0)+(e>>>0)+(n>>>0)+(r>>>0)+(o>>>0),Ai=(t,e,n,r,o,s)=>e+n+r+o+s+(t/2**32|0)|0,Gt=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;function nn(t){return t instanceof Uint8Array||ArrayBuffer.isView(t)&&t.constructor.name==="Uint8Array"}function mt(t){if(!Number.isSafeInteger(t)||t<0)throw new Error("positive integer expected, got "+t)}function at(t,...e){if(!nn(t))throw new Error("Uint8Array expected");if(e.length>0&&!e.includes(t.length))throw new Error("Uint8Array expected of length "+e+", got length="+t.length)}function rn(t){if(typeof t!="function"||typeof t.create!="function")throw new Error("Hash should be wrapped by utils.createHasher");mt(t.outputLen),mt(t.blockLen)}function Nt(t,e=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(e&&t.finished)throw new Error("Hash#digest() has already been called")}function on(t,e){at(t);const n=e.outputLen;if(t.length<n)throw new Error("digestInto() expects output buffer of length at least "+n)}function fe(t){return new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4))}function ut(...t){for(let e=0;e<t.length;e++)t[e].fill(0)}function sn(t){return new DataView(t.buffer,t.byteOffset,t.byteLength)}function gt(t,e){return t<<32-e|t>>>e}const Er=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;function Br(t){return t<<24&4278190080|t<<8&16711680|t>>>8&65280|t>>>24&255}const wt=Er?t=>t:t=>Br(t);function Si(t){for(let e=0;e<t.length;e++)t[e]=Br(t[e]);return t}const Ot=Er?t=>t:Si,Ir=typeof Uint8Array.from([]).toHex=="function"&&typeof Uint8Array.fromHex=="function",Ni=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,"0"));function ce(t){if(at(t),Ir)return t.toHex();let e="";for(let n=0;n<t.length;n++)e+=Ni[t[n]];return e}const xt={_0:48,_9:57,A:65,F:70,a:97,f:102};function Ar(t){if(t>=xt._0&&t<=xt._9)return t-xt._0;if(t>=xt.A&&t<=xt.F)return t-(xt.A-10);if(t>=xt.a&&t<=xt.f)return t-(xt.a-10)}function fn(t){if(typeof t!="string")throw new Error("hex string expected, got "+typeof t);if(Ir)return Uint8Array.fromHex(t);const e=t.length,n=e/2;if(e%2)throw new Error("hex string expected, got unpadded hex of length "+e);const r=new Uint8Array(n);for(let o=0,s=0;o<n;o++,s+=2){const i=Ar(t.charCodeAt(s)),f=Ar(t.charCodeAt(s+1));if(i===void 0||f===void 0){const a=t[s]+t[s+1];throw new Error('hex string expected, got non-hex character "'+a+'" at index '+s)}r[o]=i*16+f}return r}function Oi(t){if(typeof t!="string")throw new Error("string expected");return new Uint8Array(new TextEncoder().encode(t))}function ht(t){return typeof t=="string"&&(t=Oi(t)),at(t),t}function Ht(...t){let e=0;for(let r=0;r<t.length;r++){const o=t[r];at(o),e+=o.length}const n=new Uint8Array(e);for(let r=0,o=0;r<t.length;r++){const s=t[r];n.set(s,o),o+=s.length}return n}class Ie{}function ae(t){const e=r=>t().update(ht(r)).digest(),n=t();return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=()=>t(),e}function Ui(t){const e=(r,o)=>t(o).update(ht(r)).digest(),n=t({});return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=r=>t(r),e}function Zt(t=32){if(Gt&&typeof Gt.getRandomValues=="function")return Gt.getRandomValues(new Uint8Array(t));if(Gt&&typeof Gt.randomBytes=="function")return Uint8Array.from(Gt.randomBytes(t));throw new Error("crypto.getRandomValues must be defined")}const _i=BigInt(0),ue=BigInt(1),Ti=BigInt(2),Ri=BigInt(7),$i=BigInt(256),Ci=BigInt(113),Sr=[],Nr=[],Or=[];for(let t=0,e=ue,n=1,r=0;t<24;t++){[n,r]=[r,(2*n+3*r)%5],Sr.push(2*(5*r+n)),Nr.push((t+1)*(t+2)/2%64);let o=_i;for(let s=0;s<7;s++)e=(e<<ue^(e>>Ri)*Ci)%$i,e&Ti&&(o^=ue<<(ue<<BigInt(s))-ue);Or.push(o)}const Ur=wr(Or,!0),Li=Ur[0],ji=Ur[1],_r=(t,e,n)=>n>32?xi(t,e,n):mi(t,e,n),Tr=(t,e,n)=>n>32?vi(t,e,n):wi(t,e,n);function ki(t,e=24){const n=new Uint32Array(10);for(let r=24-e;r<24;r++){for(let i=0;i<10;i++)n[i]=t[i]^t[i+10]^t[i+20]^t[i+30]^t[i+40];for(let i=0;i<10;i+=2){const f=(i+8)%10,a=(i+2)%10,l=n[a],c=n[a+1],u=_r(l,c,1)^n[f],h=Tr(l,c,1)^n[f+1];for(let g=0;g<50;g+=10)t[i+g]^=u,t[i+g+1]^=h}let o=t[2],s=t[3];for(let i=0;i<24;i++){const f=Nr[i],a=_r(o,s,f),l=Tr(o,s,f),c=Sr[i];o=t[c],s=t[c+1],t[c]=a,t[c+1]=l}for(let i=0;i<50;i+=10){for(let f=0;f<10;f++)n[f]=t[i+f];for(let f=0;f<10;f++)t[i+f]^=~n[(f+2)%10]&n[(f+4)%10]}t[0]^=Li[r],t[1]^=ji[r]}ut(n)}class qn extends Ie{constructor(e,n,r,o=!1,s=24){if(super(),this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,this.enableXOF=!1,this.blockLen=e,this.suffix=n,this.outputLen=r,this.enableXOF=o,this.rounds=s,mt(r),!(0<e&&e<200))throw new Error("only keccak-f1600 function is supported");this.state=new Uint8Array(200),this.state32=fe(this.state)}clone(){return this._cloneInto()}keccak(){Ot(this.state32),ki(this.state32,this.rounds),Ot(this.state32),this.posOut=0,this.pos=0}update(e){Nt(this),e=ht(e),at(e);const{blockLen:n,state:r}=this,o=e.length;for(let s=0;s<o;){const i=Math.min(n-this.pos,o-s);for(let f=0;f<i;f++)r[this.pos++]^=e[s++];this.pos===n&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:e,suffix:n,pos:r,blockLen:o}=this;e[r]^=n,(n&128)!==0&&r===o-1&&this.keccak(),e[o-1]^=128,this.keccak()}writeInto(e){Nt(this,!1),at(e),this.finish();const n=this.state,{blockLen:r}=this;for(let o=0,s=e.length;o<s;){this.posOut>=r&&this.keccak();const i=Math.min(r-this.posOut,s-o);e.set(n.subarray(this.posOut,this.posOut+i),o),this.posOut+=i,o+=i}return e}xofInto(e){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){return mt(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(on(e,this),this.finished)throw new Error("digest() was already called");return this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,ut(this.state)}_cloneInto(e){const{blockLen:n,suffix:r,outputLen:o,rounds:s,enableXOF:i}=this;return e||(e=new qn(n,r,o,i,s)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=s,e.suffix=r,e.outputLen=o,e.enableXOF=i,e.destroyed=this.destroyed,e}}const Pi=(t,e,n)=>ae(()=>new qn(e,t,n)),Hi=Pi(1,136,256/8);function Di(t,e,n,r){if(typeof t.setBigUint64=="function")return t.setBigUint64(e,n,r);const o=BigInt(32),s=BigInt(4294967295),i=Number(n>>o&s),f=Number(n&s),a=r?4:0,l=r?0:4;t.setUint32(e+a,i,r),t.setUint32(e+l,f,r)}function Mi(t,e,n){return t&e^~t&n}function Vi(t,e,n){return t&e^t&n^e&n}class Rr extends Ie{constructor(e,n,r,o){super(),this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.blockLen=e,this.outputLen=n,this.padOffset=r,this.isLE=o,this.buffer=new Uint8Array(e),this.view=sn(this.buffer)}update(e){Nt(this),e=ht(e),at(e);const{view:n,buffer:r,blockLen:o}=this,s=e.length;for(let i=0;i<s;){const f=Math.min(o-this.pos,s-i);if(f===o){const a=sn(e);for(;o<=s-i;i+=o)this.process(a,i);continue}r.set(e.subarray(i,i+f),this.pos),this.pos+=f,i+=f,this.pos===o&&(this.process(n,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){Nt(this),on(e,this),this.finished=!0;const{buffer:n,view:r,blockLen:o,isLE:s}=this;let{pos:i}=this;n[i++]=128,ut(this.buffer.subarray(i)),this.padOffset>o-i&&(this.process(r,0),i=0);for(let u=i;u<o;u++)n[u]=0;Di(r,o-8,BigInt(this.length*8),s),this.process(r,0);const f=sn(e),a=this.outputLen;if(a%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const l=a/4,c=this.get();if(l>c.length)throw new Error("_sha2: outputLen bigger than state");for(let u=0;u<l;u++)f.setUint32(4*u,c[u],s)}digest(){const{buffer:e,outputLen:n}=this;this.digestInto(e);const r=e.slice(0,n);return this.destroy(),r}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:n,buffer:r,length:o,finished:s,destroyed:i,pos:f}=this;return e.destroyed=i,e.finished=s,e.length=o,e.pos=f,o%n&&e.buffer.set(r),e}clone(){return this._cloneInto()}}const Ut=Uint32Array.from([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),W=Uint32Array.from([3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]),Y=Uint32Array.from([1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209]),qi=Uint32Array.from([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),_t=new Uint32Array(64);class Ki extends Rr{constructor(e=32){super(64,e,8,!1),this.A=Ut[0]|0,this.B=Ut[1]|0,this.C=Ut[2]|0,this.D=Ut[3]|0,this.E=Ut[4]|0,this.F=Ut[5]|0,this.G=Ut[6]|0,this.H=Ut[7]|0}get(){const{A:e,B:n,C:r,D:o,E:s,F:i,G:f,H:a}=this;return[e,n,r,o,s,i,f,a]}set(e,n,r,o,s,i,f,a){this.A=e|0,this.B=n|0,this.C=r|0,this.D=o|0,this.E=s|0,this.F=i|0,this.G=f|0,this.H=a|0}process(e,n){for(let u=0;u<16;u++,n+=4)_t[u]=e.getUint32(n,!1);for(let u=16;u<64;u++){const h=_t[u-15],g=_t[u-2],w=gt(h,7)^gt(h,18)^h>>>3,y=gt(g,17)^gt(g,19)^g>>>10;_t[u]=y+_t[u-7]+w+_t[u-16]|0}let{A:r,B:o,C:s,D:i,E:f,F:a,G:l,H:c}=this;for(let u=0;u<64;u++){const h=gt(f,6)^gt(f,11)^gt(f,25),g=c+h+Mi(f,a,l)+qi[u]+_t[u]|0,y=(gt(r,2)^gt(r,13)^gt(r,22))+Vi(r,o,s)|0;c=l,l=a,a=f,f=i+g|0,i=s,s=o,o=r,r=g+y|0}r=r+this.A|0,o=o+this.B|0,s=s+this.C|0,i=i+this.D|0,f=f+this.E|0,a=a+this.F|0,l=l+this.G|0,c=c+this.H|0,this.set(r,o,s,i,f,a,l,c)}roundClean(){ut(_t)}destroy(){this.set(0,0,0,0,0,0,0,0),ut(this.buffer)}}const $r=wr(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(t=>BigInt(t))),Fi=$r[0],zi=$r[1],Tt=new Uint32Array(80),Rt=new Uint32Array(80);class cn extends Rr{constructor(e=64){super(128,e,16,!1),this.Ah=Y[0]|0,this.Al=Y[1]|0,this.Bh=Y[2]|0,this.Bl=Y[3]|0,this.Ch=Y[4]|0,this.Cl=Y[5]|0,this.Dh=Y[6]|0,this.Dl=Y[7]|0,this.Eh=Y[8]|0,this.El=Y[9]|0,this.Fh=Y[10]|0,this.Fl=Y[11]|0,this.Gh=Y[12]|0,this.Gl=Y[13]|0,this.Hh=Y[14]|0,this.Hl=Y[15]|0}get(){const{Ah:e,Al:n,Bh:r,Bl:o,Ch:s,Cl:i,Dh:f,Dl:a,Eh:l,El:c,Fh:u,Fl:h,Gh:g,Gl:w,Hh:y,Hl:x}=this;return[e,n,r,o,s,i,f,a,l,c,u,h,g,w,y,x]}set(e,n,r,o,s,i,f,a,l,c,u,h,g,w,y,x){this.Ah=e|0,this.Al=n|0,this.Bh=r|0,this.Bl=o|0,this.Ch=s|0,this.Cl=i|0,this.Dh=f|0,this.Dl=a|0,this.Eh=l|0,this.El=c|0,this.Fh=u|0,this.Fl=h|0,this.Gh=g|0,this.Gl=w|0,this.Hh=y|0,this.Hl=x|0}process(e,n){for(let L=0;L<16;L++,n+=4)Tt[L]=e.getUint32(n),Rt[L]=e.getUint32(n+=4);for(let L=16;L<80;L++){const V=Tt[L-15]|0,_=Rt[L-15]|0,k=At(V,_,1)^At(V,_,8)^xr(V,_,7),j=St(V,_,1)^St(V,_,8)^vr(V,_,7),$=Tt[L-2]|0,d=Rt[L-2]|0,m=At($,d,19)^se($,d,61)^xr($,d,6),p=St($,d,19)^ie($,d,61)^vr($,d,6),b=Ei(j,p,Rt[L-7],Rt[L-16]),v=Bi(b,k,m,Tt[L-7],Tt[L-16]);Tt[L]=v|0,Rt[L]=b|0}let{Ah:r,Al:o,Bh:s,Bl:i,Ch:f,Cl:a,Dh:l,Dl:c,Eh:u,El:h,Fh:g,Fl:w,Gh:y,Gl:x,Hh:R,Hl:M}=this;for(let L=0;L<80;L++){const V=At(u,h,14)^At(u,h,18)^se(u,h,41),_=St(u,h,14)^St(u,h,18)^ie(u,h,41),k=u&g^~u&y,j=h&w^~h&x,$=Ii(M,_,j,zi[L],Rt[L]),d=Ai($,R,V,k,Fi[L],Tt[L]),m=$|0,p=At(r,o,28)^se(r,o,34)^se(r,o,39),b=St(r,o,28)^ie(r,o,34)^ie(r,o,39),v=r&s^r&f^s&f,B=o&i^o&a^i&a;R=y|0,M=x|0,y=g|0,x=w|0,g=u|0,w=h|0,{h:u,l:h}=dt(l|0,c|0,d|0,m|0),l=f|0,c=a|0,f=s|0,a=i|0,s=r|0,i=o|0;const E=tn(m,b,B);r=en(E,d,p,v),o=E|0}({h:r,l:o}=dt(this.Ah|0,this.Al|0,r|0,o|0)),{h:s,l:i}=dt(this.Bh|0,this.Bl|0,s|0,i|0),{h:f,l:a}=dt(this.Ch|0,this.Cl|0,f|0,a|0),{h:l,l:c}=dt(this.Dh|0,this.Dl|0,l|0,c|0),{h:u,l:h}=dt(this.Eh|0,this.El|0,u|0,h|0),{h:g,l:w}=dt(this.Fh|0,this.Fl|0,g|0,w|0),{h:y,l:x}=dt(this.Gh|0,this.Gl|0,y|0,x|0),{h:R,l:M}=dt(this.Hh|0,this.Hl|0,R|0,M|0),this.set(r,o,s,i,f,a,l,c,u,h,g,w,y,x,R,M)}roundClean(){ut(Tt,Rt)}destroy(){ut(this.buffer),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}class Gi extends cn{constructor(){super(48),this.Ah=W[0]|0,this.Al=W[1]|0,this.Bh=W[2]|0,this.Bl=W[3]|0,this.Ch=W[4]|0,this.Cl=W[5]|0,this.Dh=W[6]|0,this.Dl=W[7]|0,this.Eh=W[8]|0,this.El=W[9]|0,this.Fh=W[10]|0,this.Fl=W[11]|0,this.Gh=W[12]|0,this.Gl=W[13]|0,this.Hh=W[14]|0,this.Hl=W[15]|0}}const X=Uint32Array.from([573645204,4230739756,2673172387,3360449730,596883563,1867755857,2520282905,1497426621,2519219938,2827943907,3193839141,1401305490,721525244,746961066,246885852,2177182882]);class Zi extends cn{constructor(){super(32),this.Ah=X[0]|0,this.Al=X[1]|0,this.Bh=X[2]|0,this.Bl=X[3]|0,this.Ch=X[4]|0,this.Cl=X[5]|0,this.Dh=X[6]|0,this.Dl=X[7]|0,this.Eh=X[8]|0,this.El=X[9]|0,this.Fh=X[10]|0,this.Fl=X[11]|0,this.Gh=X[12]|0,this.Gl=X[13]|0,this.Hh=X[14]|0,this.Hl=X[15]|0}}const Ae=ae(()=>new Ki),Wi=ae(()=>new cn),Yi=ae(()=>new Gi),Xi=ae(()=>new Zi),Ji=Uint8Array.from([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9]),F=Uint32Array.from([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),N=new Uint32Array(32);function $t(t,e,n,r,o,s){const i=o[s],f=o[s+1];let a=N[2*t],l=N[2*t+1],c=N[2*e],u=N[2*e+1],h=N[2*n],g=N[2*n+1],w=N[2*r],y=N[2*r+1],x=tn(a,c,i);l=en(x,l,u,f),a=x|0,{Dh:y,Dl:w}={Dh:y^l,Dl:w^a},{Dh:y,Dl:w}={Dh:bi(y,w),Dl:yi(y)},{h:g,l:h}=dt(g,h,y,w),{Bh:u,Bl:c}={Bh:u^g,Bl:c^h},{Bh:u,Bl:c}={Bh:At(u,c,24),Bl:St(u,c,24)},N[2*t]=a,N[2*t+1]=l,N[2*e]=c,N[2*e+1]=u,N[2*n]=h,N[2*n+1]=g,N[2*r]=w,N[2*r+1]=y}function Ct(t,e,n,r,o,s){const i=o[s],f=o[s+1];let a=N[2*t],l=N[2*t+1],c=N[2*e],u=N[2*e+1],h=N[2*n],g=N[2*n+1],w=N[2*r],y=N[2*r+1],x=tn(a,c,i);l=en(x,l,u,f),a=x|0,{Dh:y,Dl:w}={Dh:y^l,Dl:w^a},{Dh:y,Dl:w}={Dh:At(y,w,16),Dl:St(y,w,16)},{h:g,l:h}=dt(g,h,y,w),{Bh:u,Bl:c}={Bh:u^g,Bl:c^h},{Bh:u,Bl:c}={Bh:se(u,c,63),Bl:ie(u,c,63)},N[2*t]=a,N[2*t+1]=l,N[2*e]=c,N[2*e+1]=u,N[2*n]=h,N[2*n+1]=g,N[2*r]=w,N[2*r+1]=y}function Qi(t,e={},n,r,o){if(mt(n),t<0||t>n)throw new Error("outputLen bigger than keyLen");const{key:s,salt:i,personalization:f}=e;if(s!==void 0&&(s.length<1||s.length>n))throw new Error("key length must be undefined or 1.."+n);if(i!==void 0&&i.length!==r)throw new Error("salt must be undefined or "+r);if(f!==void 0&&f.length!==o)throw new Error("personalization must be undefined or "+o)}class tf extends Ie{constructor(e,n){super(),this.finished=!1,this.destroyed=!1,this.length=0,this.pos=0,mt(e),mt(n),this.blockLen=e,this.outputLen=n,this.buffer=new Uint8Array(e),this.buffer32=fe(this.buffer)}update(e){Nt(this),e=ht(e),at(e);const{blockLen:n,buffer:r,buffer32:o}=this,s=e.length,i=e.byteOffset,f=e.buffer;for(let a=0;a<s;){this.pos===n&&(Ot(o),this.compress(o,0,!1),Ot(o),this.pos=0);const l=Math.min(n-this.pos,s-a),c=i+a;if(l===n&&!(c%4)&&a+l<s){const u=new Uint32Array(f,c,Math.floor((s-a)/4));Ot(u);for(let h=0;a+n<s;h+=o.length,a+=n)this.length+=n,this.compress(u,h,!1);Ot(u);continue}r.set(e.subarray(a,a+l),this.pos),this.pos+=l,this.length+=l,a+=l}return this}digestInto(e){Nt(this),on(e,this);const{pos:n,buffer32:r}=this;this.finished=!0,ut(this.buffer.subarray(n)),Ot(r),this.compress(r,0,!0),Ot(r);const o=fe(e);this.get().forEach((s,i)=>o[i]=wt(s))}digest(){const{buffer:e,outputLen:n}=this;this.digestInto(e);const r=e.slice(0,n);return this.destroy(),r}_cloneInto(e){const{buffer:n,length:r,finished:o,destroyed:s,outputLen:i,pos:f}=this;return e||(e=new this.constructor({dkLen:i})),e.set(...this.get()),e.buffer.set(n),e.destroyed=s,e.finished=o,e.length=r,e.pos=f,e.outputLen=i,e}clone(){return this._cloneInto()}}class ef extends tf{constructor(e={}){const n=e.dkLen===void 0?64:e.dkLen;super(128,n),this.v0l=F[0]|0,this.v0h=F[1]|0,this.v1l=F[2]|0,this.v1h=F[3]|0,this.v2l=F[4]|0,this.v2h=F[5]|0,this.v3l=F[6]|0,this.v3h=F[7]|0,this.v4l=F[8]|0,this.v4h=F[9]|0,this.v5l=F[10]|0,this.v5h=F[11]|0,this.v6l=F[12]|0,this.v6h=F[13]|0,this.v7l=F[14]|0,this.v7h=F[15]|0,Qi(n,e,64,16,16);let{key:r,personalization:o,salt:s}=e,i=0;if(r!==void 0&&(r=ht(r),i=r.length),this.v0l^=this.outputLen|i<<8|65536|1<<24,s!==void 0){s=ht(s);const f=fe(s);this.v4l^=wt(f[0]),this.v4h^=wt(f[1]),this.v5l^=wt(f[2]),this.v5h^=wt(f[3])}if(o!==void 0){o=ht(o);const f=fe(o);this.v6l^=wt(f[0]),this.v6h^=wt(f[1]),this.v7l^=wt(f[2]),this.v7h^=wt(f[3])}if(r!==void 0){const f=new Uint8Array(this.blockLen);f.set(r),this.update(f)}}get(){let{v0l:e,v0h:n,v1l:r,v1h:o,v2l:s,v2h:i,v3l:f,v3h:a,v4l:l,v4h:c,v5l:u,v5h:h,v6l:g,v6h:w,v7l:y,v7h:x}=this;return[e,n,r,o,s,i,f,a,l,c,u,h,g,w,y,x]}set(e,n,r,o,s,i,f,a,l,c,u,h,g,w,y,x){this.v0l=e|0,this.v0h=n|0,this.v1l=r|0,this.v1h=o|0,this.v2l=s|0,this.v2h=i|0,this.v3l=f|0,this.v3h=a|0,this.v4l=l|0,this.v4h=c|0,this.v5l=u|0,this.v5h=h|0,this.v6l=g|0,this.v6h=w|0,this.v7l=y|0,this.v7h=x|0}compress(e,n,r){this.get().forEach((a,l)=>N[l]=a),N.set(F,16);let{h:o,l:s}=mr(BigInt(this.length));N[24]=F[8]^s,N[25]=F[9]^o,r&&(N[28]=~N[28],N[29]=~N[29]);let i=0;const f=Ji;for(let a=0;a<12;a++)$t(0,4,8,12,e,n+2*f[i++]),Ct(0,4,8,12,e,n+2*f[i++]),$t(1,5,9,13,e,n+2*f[i++]),Ct(1,5,9,13,e,n+2*f[i++]),$t(2,6,10,14,e,n+2*f[i++]),Ct(2,6,10,14,e,n+2*f[i++]),$t(3,7,11,15,e,n+2*f[i++]),Ct(3,7,11,15,e,n+2*f[i++]),$t(0,5,10,15,e,n+2*f[i++]),Ct(0,5,10,15,e,n+2*f[i++]),$t(1,6,11,12,e,n+2*f[i++]),Ct(1,6,11,12,e,n+2*f[i++]),$t(2,7,8,13,e,n+2*f[i++]),Ct(2,7,8,13,e,n+2*f[i++]),$t(3,4,9,14,e,n+2*f[i++]),Ct(3,4,9,14,e,n+2*f[i++]);this.v0l^=N[0]^N[16],this.v0h^=N[1]^N[17],this.v1l^=N[2]^N[18],this.v1h^=N[3]^N[19],this.v2l^=N[4]^N[20],this.v2h^=N[5]^N[21],this.v3l^=N[6]^N[22],this.v3h^=N[7]^N[23],this.v4l^=N[8]^N[24],this.v4h^=N[9]^N[25],this.v5l^=N[10]^N[26],this.v5h^=N[11]^N[27],this.v6l^=N[12]^N[28],this.v6h^=N[13]^N[29],this.v7l^=N[14]^N[30],this.v7h^=N[15]^N[31],ut(N)}destroy(){this.destroyed=!0,ut(this.buffer32),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const nf=Ui(t=>new ef(t)),rf="https://rpc.walletconnect.org/v1";function an(t){const e=`Ethereum Signed Message:
${t.length}`,n=new TextEncoder().encode(e+t);return"0x"+Buffer.from(Hi(n)).toString("hex")}async function Cr(t,e,n,r,o,s){switch(n.t){case"eip191":return await Lr(t,e,n.s);case"eip1271":return await jr(t,e,n.s,r,o,s);default:throw new Error(`verifySignature failed: Attempted to verify CacaoSignature with unknown type: ${n.t}`)}}async function Lr(t,e,n){return(await (0,viem__WEBPACK_IMPORTED_MODULE_4__.recoverAddress)({hash:an(e),signature:n})).toLowerCase()===t.toLowerCase()}async function jr(t,e,n,r,o,s){const i=Fe(r);if(!i.namespace||!i.reference)throw new Error(`isValidEip1271Signature failed: chainId must be in CAIP-2 format, received: ${r}`);try{const f="0x1626ba7e",a="0000000000000000000000000000000000000000000000000000000000000040",l=n.substring(2),c=(l.length/2).toString(16).padStart(64,"0"),u=(e.startsWith("0x")?e:an(e)).substring(2),h=f+u+a+c+l,g=await fetch(`${s||rf}/?chainId=${r}&projectId=${o}`,{headers:{"Content-Type":"application/json"},method:"POST",body:JSON.stringify({id:of(),jsonrpc:"2.0",method:"eth_call",params:[{to:t,data:h},"latest"]})}),{result:w}=await g.json();return w?w.slice(0,f.length).toLowerCase()===f.toLowerCase():!1}catch(f){return console.error("isValidEip1271Signature: ",f),!1}}function of(){return Date.now()+Math.floor(Math.random()*1e3)}function sf(t){const e=atob(t),n=new Uint8Array(e.length);for(let i=0;i<e.length;i++)n[i]=e.charCodeAt(i);const r=n[0];if(r===0)throw new Error("No signatures found");const o=1+r*64;if(n.length<o)throw new Error("Transaction data too short for claimed signature count");if(n.length<100)throw new Error("Transaction too short");const s=Buffer.from(t,"base64").slice(1,65);return bs58__WEBPACK_IMPORTED_MODULE_5__["default"].encode(s)}function ff(t){const e=new Uint8Array(Buffer.from(t,"base64")),n=Array.from("TransactionData::").map(s=>s.charCodeAt(0)),r=new Uint8Array(n.length+e.length);r.set(n),r.set(e,n.length);const o=nf(r,{dkLen:32});return bs58__WEBPACK_IMPORTED_MODULE_5__["default"].encode(o)}function cf(t){const e=new Uint8Array(Ae(kr(t)));return bs58__WEBPACK_IMPORTED_MODULE_5__["default"].encode(e)}function kr(t){if(t instanceof Uint8Array)return t;if(Array.isArray(t))return new Uint8Array(t);if(typeof t=="object"&&t!=null&&t.data)return new Uint8Array(Object.values(t.data));if(typeof t=="object"&&t)return new Uint8Array(Object.values(t));throw new Error("getNearUint8ArrayFromBytes: Unexpected result type from bytes array")}function af(t){const e=Buffer.from(t,"base64"),n=(0,_msgpack_msgpack__WEBPACK_IMPORTED_MODULE_7__.decode)(e).txn;if(!n)throw new Error("Invalid signed transaction: missing 'txn' field");const r=(0,_msgpack_msgpack__WEBPACK_IMPORTED_MODULE_6__.encode)(n),o=Buffer.from("TX"),s=Buffer.concat([o,Buffer.from(r)]),i=Xi(s);return _scure_base__WEBPACK_IMPORTED_MODULE_8__.base32.encode(i).replace(/=+$/,"")}function un(t){const e=[];let n=BigInt(t);for(;n>=BigInt(128);)e.push(Number(n&BigInt(127)|BigInt(128))),n>>=BigInt(7);return e.push(Number(n)),Buffer.from(e)}function uf(t){const e=Buffer.from(t.signed.bodyBytes,"base64"),n=Buffer.from(t.signed.authInfoBytes,"base64"),r=Buffer.from(t.signature.signature,"base64"),o=[];o.push(Buffer.from([10])),o.push(un(e.length)),o.push(e),o.push(Buffer.from([18])),o.push(un(n.length)),o.push(n),o.push(Buffer.from([26])),o.push(un(r.length)),o.push(r);const s=Buffer.concat(o),i=Ae(s);return Buffer.from(i).toString("hex").toUpperCase()}var lf=Object.defineProperty,df=Object.defineProperties,hf=Object.getOwnPropertyDescriptors,Pr=Object.getOwnPropertySymbols,pf=Object.prototype.hasOwnProperty,gf=Object.prototype.propertyIsEnumerable,Hr=(t,e,n)=>e in t?lf(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,ln=(t,e)=>{for(var n in e||(e={}))pf.call(e,n)&&Hr(t,n,e[n]);if(Pr)for(var n of Pr(e))gf.call(e,n)&&Hr(t,n,e[n]);return t},Dr=(t,e)=>df(t,hf(e));const bf="did:pkh:",Se=t=>t?.split(":"),Mr=t=>{const e=t&&Se(t);if(e)return t.includes(bf)?e[3]:e[1]},Vr=t=>{const e=t&&Se(t);if(e)return e[2]+":"+e[3]},dn=t=>{const e=t&&Se(t);if(e)return e.pop()};async function yf(t){const{cacao:e,projectId:n}=t,{s:r,p:o}=e,s=qr(o,o.iss),i=dn(o.iss);return await Cr(i,s,r,Vr(o.iss),n)}const qr=(t,e)=>{const n=`${t.domain} wants you to sign in with your Ethereum account:`,r=dn(e);if(!t.aud&&!t.uri)throw new Error("Either `aud` or `uri` is required to construct the message");let o=t.statement||void 0;const s=`URI: ${t.aud||t.uri}`,i=`Version: ${t.version}`,f=`Chain ID: ${Mr(e)}`,a=`Nonce: ${t.nonce}`,l=`Issued At: ${t.iat}`,c=t.exp?`Expiration Time: ${t.exp}`:void 0,u=t.nbf?`Not Before: ${t.nbf}`:void 0,h=t.requestId?`Request ID: ${t.requestId}`:void 0,g=t.resources?`Resources:${t.resources.map(y=>`
- ${y}`).join("")}`:void 0,w=Oe(t.resources);if(w){const y=Lt(w);o=gn(o,y)}return[n,r,"",o,"",s,i,f,a,l,c,u,h,g].filter(y=>y!=null).join(`
`)};function mf(t,e,n){return n.includes("did:pkh:")||(n=`did:pkh:${n}`),{h:{t:"caip122"},p:{iss:n,domain:t.domain,aud:t.aud,version:t.version,nonce:t.nonce,iat:t.iat,statement:t.statement,requestId:t.requestId,resources:t.resources,nbf:t.nbf,exp:t.exp},s:e}}function wf(t){var e;const{authPayload:n,chains:r,methods:o}=t,s=n.statement||"";if(!(r!=null&&r.length))return n;const i=n.chains,f=Je(i,r);if(!(f!=null&&f.length))throw new Error("No supported chains");const a=Kr(n.resources);if(!a)return n;bt(a);const l=Fr(a,"eip155");let c=n?.resources||[];if(l!=null&&l.length){const u=zr(l),h=Je(u,o);if(!(h!=null&&h.length))throw new Error(`Supported methods don't satisfy the requested: ${JSON.stringify(u)}, supported: ${JSON.stringify(o)}`);const g=hn("request",h,{chains:f}),w=Yr(a,"eip155",g);c=((e=n?.resources)==null?void 0:e.slice(0,-1))||[],c.push(Ne(w))}return Dr(ln({},n),{statement:Jr(s,Oe(c)),chains:f,resources:n!=null&&n.resources||c.length>0?c:void 0})}function Kr(t){const e=Oe(t);if(e&&pn(e))return Lt(e)}function xf(t,e){var n;return(n=t?.att)==null?void 0:n.hasOwnProperty(e)}function Fr(t,e){var n,r;return(n=t?.att)!=null&&n[e]?Object.keys((r=t?.att)==null?void 0:r[e]):[]}function vf(t){return t?.map(e=>Object.keys(e))||[]}function zr(t){return t?.map(e=>{var n;return(n=e.split("/"))==null?void 0:n[1]})||[]}function Gr(t){return Buffer.from(JSON.stringify(t)).toString("base64")}function Zr(t){return JSON.parse(Buffer.from(t,"base64").toString("utf-8"))}function bt(t){if(!t)throw new Error("No recap provided, value is undefined");if(!t.att)throw new Error("No `att` property found");const e=Object.keys(t.att);if(!(e!=null&&e.length))throw new Error("No resources found in `att` property");e.forEach(n=>{const r=t.att[n];if(Array.isArray(r))throw new Error(`Resource must be an object: ${n}`);if(typeof r!="object")throw new Error(`Resource must be an object: ${n}`);if(!Object.keys(r).length)throw new Error(`Resource object is empty: ${n}`);Object.keys(r).forEach(o=>{const s=r[o];if(!Array.isArray(s))throw new Error(`Ability limits ${o} must be an array of objects, found: ${s}`);if(!s.length)throw new Error(`Value of ${o} is empty array, must be an array with objects`);s.forEach(i=>{if(typeof i!="object")throw new Error(`Ability limits (${o}) must be an array of objects, found: ${i}`)})})})}function Wr(t,e,n,r={}){return n?.sort((o,s)=>o.localeCompare(s)),{att:{[t]:hn(e,n,r)}}}function Yr(t,e,n){var r;t.att[e]=ln({},n);const o=(r=Object.keys(t.att))==null?void 0:r.sort((i,f)=>i.localeCompare(f)),s={att:{}};return o.reduce((i,f)=>(i.att[f]=t.att[f],i),s)}function hn(t,e,n={}){e=e?.sort((o,s)=>o.localeCompare(s));const r=e.map(o=>({[`${t}/${o}`]:[n]}));return Object.assign({},...r)}function Ne(t){return bt(t),`urn:recap:${Gr(t).replace(/=/g,"")}`}function Lt(t){const e=Zr(t.replace("urn:recap:",""));return bt(e),e}function Ef(t,e,n){const r=Wr(t,e,n);return Ne(r)}function pn(t){return t&&t.includes("urn:recap:")}function Bf(t,e){const n=Lt(t),r=Lt(e),o=Xr(n,r);return Ne(o)}function Xr(t,e){bt(t),bt(e);const n=Object.keys(t.att).concat(Object.keys(e.att)).sort((o,s)=>o.localeCompare(s)),r={att:{}};return n.forEach(o=>{var s,i;Object.keys(((s=t.att)==null?void 0:s[o])||{}).concat(Object.keys(((i=e.att)==null?void 0:i[o])||{})).sort((f,a)=>f.localeCompare(a)).forEach(f=>{var a,l;r.att[o]=Dr(ln({},r.att[o]),{[f]:((a=t.att[o])==null?void 0:a[f])||((l=e.att[o])==null?void 0:l[f])})})}),r}function gn(t="",e){bt(e);const n="I further authorize the stated URI to perform the following actions on my behalf: ";if(t.includes(n))return t;const r=[];let o=0;Object.keys(e.att).forEach(f=>{const a=Object.keys(e.att[f]).map(u=>({ability:u.split("/")[0],action:u.split("/")[1]}));a.sort((u,h)=>u.action.localeCompare(h.action));const l={};a.forEach(u=>{l[u.ability]||(l[u.ability]=[]),l[u.ability].push(u.action)});const c=Object.keys(l).map(u=>(o++,`(${o}) '${u}': '${l[u].join("', '")}' for '${f}'.`));r.push(c.join(", ").replace(".,","."))});const s=r.join(" "),i=`${n}${s}`;return`${t?t+" ":""}${i}`}function If(t){var e;const n=Lt(t);bt(n);const r=(e=n.att)==null?void 0:e.eip155;return r?Object.keys(r).map(o=>o.split("/")[1]):[]}function Af(t){const e=Lt(t);bt(e);const n=[];return Object.values(e.att).forEach(r=>{Object.values(r).forEach(o=>{var s;(s=o?.[0])!=null&&s.chains&&n.push(o[0].chains)})}),[...new Set(n.flat())]}function Jr(t,e){if(!e)return t;const n=Lt(e);return bt(n),gn(t,n)}function Oe(t){if(!t)return;const e=t?.[t.length-1];return pn(e)?e:void 0}/*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */function Qr(t){return t instanceof Uint8Array||ArrayBuffer.isView(t)&&t.constructor.name==="Uint8Array"}function bn(t){if(typeof t!="boolean")throw new Error(`boolean expected, not ${t}`)}function yn(t){if(!Number.isSafeInteger(t)||t<0)throw new Error("positive integer expected, got "+t)}function nt(t,...e){if(!Qr(t))throw new Error("Uint8Array expected");if(e.length>0&&!e.includes(t.length))throw new Error("Uint8Array expected of length "+e+", got length="+t.length)}function to(t,e=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(e&&t.finished)throw new Error("Hash#digest() has already been called")}function Sf(t,e){nt(t);const n=e.outputLen;if(t.length<n)throw new Error("digestInto() expects output buffer of length at least "+n)}function jt(t){return new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4))}function Wt(...t){for(let e=0;e<t.length;e++)t[e].fill(0)}function Nf(t){return new DataView(t.buffer,t.byteOffset,t.byteLength)}const Of=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;function Uf(t){if(typeof t!="string")throw new Error("string expected");return new Uint8Array(new TextEncoder().encode(t))}function mn(t){if(typeof t=="string")t=Uf(t);else if(Qr(t))t=wn(t);else throw new Error("Uint8Array expected, got "+typeof t);return t}function _f(t,e){if(e==null||typeof e!="object")throw new Error("options must be defined");return Object.assign(t,e)}function Tf(t,e){if(t.length!==e.length)return!1;let n=0;for(let r=0;r<t.length;r++)n|=t[r]^e[r];return n===0}const Rf=(t,e)=>{function n(r,...o){if(nt(r),!Of)throw new Error("Non little-endian hardware is not yet supported");if(t.nonceLength!==void 0){const c=o[0];if(!c)throw new Error("nonce / iv required");t.varSizeNonce?nt(c):nt(c,t.nonceLength)}const s=t.tagLength;s&&o[1]!==void 0&&nt(o[1]);const i=e(r,...o),f=(c,u)=>{if(u!==void 0){if(c!==2)throw new Error("cipher output not supported");nt(u)}};let a=!1;return{encrypt(c,u){if(a)throw new Error("cannot encrypt() twice with same key + nonce");return a=!0,nt(c),f(i.encrypt.length,u),i.encrypt(c,u)},decrypt(c,u){if(nt(c),s&&c.length<s)throw new Error("invalid ciphertext length: smaller than tagLength="+s);return f(i.decrypt.length,u),i.decrypt(c,u)}}}return Object.assign(n,t),n};function eo(t,e,n=!0){if(e===void 0)return new Uint8Array(t);if(e.length!==t)throw new Error("invalid output length, expected "+t+", got: "+e.length);if(n&&!Cf(e))throw new Error("invalid output, must be aligned");return e}function no(t,e,n,r){if(typeof t.setBigUint64=="function")return t.setBigUint64(e,n,r);const o=BigInt(32),s=BigInt(4294967295),i=Number(n>>o&s),f=Number(n&s),a=r?4:0,l=r?0:4;t.setUint32(e+a,i,r),t.setUint32(e+l,f,r)}function $f(t,e,n){bn(n);const r=new Uint8Array(16),o=Nf(r);return no(o,0,BigInt(e),n),no(o,8,BigInt(t),n),r}function Cf(t){return t.byteOffset%4===0}function wn(t){return Uint8Array.from(t)}const ro=t=>Uint8Array.from(t.split("").map(e=>e.charCodeAt(0))),Lf=ro("expand 16-byte k"),jf=ro("expand 32-byte k"),kf=jt(Lf),Pf=jt(jf);function D(t,e){return t<<e|t>>>32-e}function xn(t){return t.byteOffset%4===0}const Ue=64,Hf=16,oo=2**32-1,so=new Uint32Array;function Df(t,e,n,r,o,s,i,f){const a=o.length,l=new Uint8Array(Ue),c=jt(l),u=xn(o)&&xn(s),h=u?jt(o):so,g=u?jt(s):so;for(let w=0;w<a;i++){if(t(e,n,r,c,i,f),i>=oo)throw new Error("arx: counter overflow");const y=Math.min(Ue,a-w);if(u&&y===Ue){const x=w/4;if(w%4!==0)throw new Error("arx: invalid block position");for(let R=0,M;R<Hf;R++)M=x+R,g[M]=h[M]^c[R];w+=Ue;continue}for(let x=0,R;x<y;x++)R=w+x,s[R]=o[R]^l[x];w+=y}}function Mf(t,e){const{allowShortKeys:n,extendNonceFn:r,counterLength:o,counterRight:s,rounds:i}=_f({allowShortKeys:!1,counterLength:8,counterRight:!1,rounds:20},e);if(typeof t!="function")throw new Error("core must be a function");return yn(o),yn(i),bn(s),bn(n),(f,a,l,c,u=0)=>{nt(f),nt(a),nt(l);const h=l.length;if(c===void 0&&(c=new Uint8Array(h)),nt(c),yn(u),u<0||u>=oo)throw new Error("arx: counter overflow");if(c.length<h)throw new Error(`arx: output (${c.length}) is shorter than data (${h})`);const g=[];let w=f.length,y,x;if(w===32)g.push(y=wn(f)),x=Pf;else if(w===16&&n)y=new Uint8Array(32),y.set(f),y.set(f,16),x=kf,g.push(y);else throw new Error(`arx: invalid 32-byte key, got length=${w}`);xn(a)||g.push(a=wn(a));const R=jt(y);if(r){if(a.length!==24)throw new Error("arx: extended nonce must be 24 bytes");r(x,R,jt(a.subarray(0,16)),R),a=a.subarray(16)}const M=16-o;if(M!==a.length)throw new Error(`arx: nonce must be ${M} or 16 bytes`);if(M!==12){const V=new Uint8Array(12);V.set(a,s?0:12-a.length),a=V,g.push(a)}const L=jt(a);return Df(t,x,R,L,l,c,u,i),Wt(...g),c}}const G=(t,e)=>t[e++]&255|(t[e++]&255)<<8;class Vf{constructor(e){this.blockLen=16,this.outputLen=16,this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.pos=0,this.finished=!1,e=mn(e),nt(e,32);const n=G(e,0),r=G(e,2),o=G(e,4),s=G(e,6),i=G(e,8),f=G(e,10),a=G(e,12),l=G(e,14);this.r[0]=n&8191,this.r[1]=(n>>>13|r<<3)&8191,this.r[2]=(r>>>10|o<<6)&7939,this.r[3]=(o>>>7|s<<9)&8191,this.r[4]=(s>>>4|i<<12)&255,this.r[5]=i>>>1&8190,this.r[6]=(i>>>14|f<<2)&8191,this.r[7]=(f>>>11|a<<5)&8065,this.r[8]=(a>>>8|l<<8)&8191,this.r[9]=l>>>5&127;for(let c=0;c<8;c++)this.pad[c]=G(e,16+2*c)}process(e,n,r=!1){const o=r?0:2048,{h:s,r:i}=this,f=i[0],a=i[1],l=i[2],c=i[3],u=i[4],h=i[5],g=i[6],w=i[7],y=i[8],x=i[9],R=G(e,n+0),M=G(e,n+2),L=G(e,n+4),V=G(e,n+6),_=G(e,n+8),k=G(e,n+10),j=G(e,n+12),$=G(e,n+14);let d=s[0]+(R&8191),m=s[1]+((R>>>13|M<<3)&8191),p=s[2]+((M>>>10|L<<6)&8191),b=s[3]+((L>>>7|V<<9)&8191),v=s[4]+((V>>>4|_<<12)&8191),B=s[5]+(_>>>1&8191),E=s[6]+((_>>>14|k<<2)&8191),I=s[7]+((k>>>11|j<<5)&8191),S=s[8]+((j>>>8|$<<8)&8191),O=s[9]+($>>>5|o),A=0,T=A+d*f+m*(5*x)+p*(5*y)+b*(5*w)+v*(5*g);A=T>>>13,T&=8191,T+=B*(5*h)+E*(5*u)+I*(5*c)+S*(5*l)+O*(5*a),A+=T>>>13,T&=8191;let U=A+d*a+m*f+p*(5*x)+b*(5*y)+v*(5*w);A=U>>>13,U&=8191,U+=B*(5*g)+E*(5*h)+I*(5*u)+S*(5*c)+O*(5*l),A+=U>>>13,U&=8191;let C=A+d*l+m*a+p*f+b*(5*x)+v*(5*y);A=C>>>13,C&=8191,C+=B*(5*w)+E*(5*g)+I*(5*h)+S*(5*u)+O*(5*c),A+=C>>>13,C&=8191;let H=A+d*c+m*l+p*a+b*f+v*(5*x);A=H>>>13,H&=8191,H+=B*(5*y)+E*(5*w)+I*(5*g)+S*(5*h)+O*(5*u),A+=H>>>13,H&=8191;let q=A+d*u+m*c+p*l+b*a+v*f;A=q>>>13,q&=8191,q+=B*(5*x)+E*(5*y)+I*(5*w)+S*(5*g)+O*(5*h),A+=q>>>13,q&=8191;let P=A+d*h+m*u+p*c+b*l+v*a;A=P>>>13,P&=8191,P+=B*f+E*(5*x)+I*(5*y)+S*(5*w)+O*(5*g),A+=P>>>13,P&=8191;let K=A+d*g+m*h+p*u+b*c+v*l;A=K>>>13,K&=8191,K+=B*a+E*f+I*(5*x)+S*(5*y)+O*(5*w),A+=K>>>13,K&=8191;let et=A+d*w+m*g+p*h+b*u+v*c;A=et>>>13,et&=8191,et+=B*l+E*a+I*f+S*(5*x)+O*(5*y),A+=et>>>13,et&=8191;let Z=A+d*y+m*w+p*g+b*h+v*u;A=Z>>>13,Z&=8191,Z+=B*c+E*l+I*a+S*f+O*(5*x),A+=Z>>>13,Z&=8191;let z=A+d*x+m*y+p*w+b*g+v*h;A=z>>>13,z&=8191,z+=B*u+E*c+I*l+S*a+O*f,A+=z>>>13,z&=8191,A=(A<<2)+A|0,A=A+T|0,T=A&8191,A=A>>>13,U+=A,s[0]=T,s[1]=U,s[2]=C,s[3]=H,s[4]=q,s[5]=P,s[6]=K,s[7]=et,s[8]=Z,s[9]=z}finalize(){const{h:e,pad:n}=this,r=new Uint16Array(10);let o=e[1]>>>13;e[1]&=8191;for(let f=2;f<10;f++)e[f]+=o,o=e[f]>>>13,e[f]&=8191;e[0]+=o*5,o=e[0]>>>13,e[0]&=8191,e[1]+=o,o=e[1]>>>13,e[1]&=8191,e[2]+=o,r[0]=e[0]+5,o=r[0]>>>13,r[0]&=8191;for(let f=1;f<10;f++)r[f]=e[f]+o,o=r[f]>>>13,r[f]&=8191;r[9]-=8192;let s=(o^1)-1;for(let f=0;f<10;f++)r[f]&=s;s=~s;for(let f=0;f<10;f++)e[f]=e[f]&s|r[f];e[0]=(e[0]|e[1]<<13)&65535,e[1]=(e[1]>>>3|e[2]<<10)&65535,e[2]=(e[2]>>>6|e[3]<<7)&65535,e[3]=(e[3]>>>9|e[4]<<4)&65535,e[4]=(e[4]>>>12|e[5]<<1|e[6]<<14)&65535,e[5]=(e[6]>>>2|e[7]<<11)&65535,e[6]=(e[7]>>>5|e[8]<<8)&65535,e[7]=(e[8]>>>8|e[9]<<5)&65535;let i=e[0]+n[0];e[0]=i&65535;for(let f=1;f<8;f++)i=(e[f]+n[f]|0)+(i>>>16)|0,e[f]=i&65535;Wt(r)}update(e){to(this),e=mn(e),nt(e);const{buffer:n,blockLen:r}=this,o=e.length;for(let s=0;s<o;){const i=Math.min(r-this.pos,o-s);if(i===r){for(;r<=o-s;s+=r)this.process(e,s);continue}n.set(e.subarray(s,s+i),this.pos),this.pos+=i,s+=i,this.pos===r&&(this.process(n,0,!1),this.pos=0)}return this}destroy(){Wt(this.h,this.r,this.buffer,this.pad)}digestInto(e){to(this),Sf(e,this),this.finished=!0;const{buffer:n,h:r}=this;let{pos:o}=this;if(o){for(n[o++]=1;o<16;o++)n[o]=0;this.process(n,0,!0)}this.finalize();let s=0;for(let i=0;i<8;i++)e[s++]=r[i]>>>0,e[s++]=r[i]>>>8;return e}digest(){const{buffer:e,outputLen:n}=this;this.digestInto(e);const r=e.slice(0,n);return this.destroy(),r}}function qf(t){const e=(r,o)=>t(o).update(mn(r)).digest(),n=t(new Uint8Array(32));return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=r=>t(r),e}const Kf=qf(t=>new Vf(t));function Ff(t,e,n,r,o,s=20){let i=t[0],f=t[1],a=t[2],l=t[3],c=e[0],u=e[1],h=e[2],g=e[3],w=e[4],y=e[5],x=e[6],R=e[7],M=o,L=n[0],V=n[1],_=n[2],k=i,j=f,$=a,d=l,m=c,p=u,b=h,v=g,B=w,E=y,I=x,S=R,O=M,A=L,T=V,U=_;for(let H=0;H<s;H+=2)k=k+m|0,O=D(O^k,16),B=B+O|0,m=D(m^B,12),k=k+m|0,O=D(O^k,8),B=B+O|0,m=D(m^B,7),j=j+p|0,A=D(A^j,16),E=E+A|0,p=D(p^E,12),j=j+p|0,A=D(A^j,8),E=E+A|0,p=D(p^E,7),$=$+b|0,T=D(T^$,16),I=I+T|0,b=D(b^I,12),$=$+b|0,T=D(T^$,8),I=I+T|0,b=D(b^I,7),d=d+v|0,U=D(U^d,16),S=S+U|0,v=D(v^S,12),d=d+v|0,U=D(U^d,8),S=S+U|0,v=D(v^S,7),k=k+p|0,U=D(U^k,16),I=I+U|0,p=D(p^I,12),k=k+p|0,U=D(U^k,8),I=I+U|0,p=D(p^I,7),j=j+b|0,O=D(O^j,16),S=S+O|0,b=D(b^S,12),j=j+b|0,O=D(O^j,8),S=S+O|0,b=D(b^S,7),$=$+v|0,A=D(A^$,16),B=B+A|0,v=D(v^B,12),$=$+v|0,A=D(A^$,8),B=B+A|0,v=D(v^B,7),d=d+m|0,T=D(T^d,16),E=E+T|0,m=D(m^E,12),d=d+m|0,T=D(T^d,8),E=E+T|0,m=D(m^E,7);let C=0;r[C++]=i+k|0,r[C++]=f+j|0,r[C++]=a+$|0,r[C++]=l+d|0,r[C++]=c+m|0,r[C++]=u+p|0,r[C++]=h+b|0,r[C++]=g+v|0,r[C++]=w+B|0,r[C++]=y+E|0,r[C++]=x+I|0,r[C++]=R+S|0,r[C++]=M+O|0,r[C++]=L+A|0,r[C++]=V+T|0,r[C++]=_+U|0}const zf=Mf(Ff,{counterRight:!1,counterLength:4,allowShortKeys:!1}),Gf=new Uint8Array(16),io=(t,e)=>{t.update(e);const n=e.length%16;n&&t.update(Gf.subarray(n))},Zf=new Uint8Array(32);function fo(t,e,n,r,o){const s=t(e,n,Zf),i=Kf.create(s);o&&io(i,o),io(i,r);const f=$f(r.length,o?o.length:0,!0);i.update(f);const a=i.digest();return Wt(s,f),a}const Wf=t=>(e,n,r)=>({encrypt(s,i){const f=s.length;i=eo(f+16,i,!1),i.set(s);const a=i.subarray(0,-16);t(e,n,a,a,1);const l=fo(t,e,n,a,r);return i.set(l,f),Wt(l),i},decrypt(s,i){i=eo(s.length-16,i,!1);const f=s.subarray(0,-16),a=s.subarray(-16),l=fo(t,e,n,f,r);if(!Tf(a,l))throw new Error("invalid tag");return i.set(s.subarray(0,-16)),t(e,n,i,i,1),Wt(l),i}}),co=Rf({blockSize:64,nonceLength:12,tagLength:16},Wf(zf));class ao extends Ie{constructor(e,n){super(),this.finished=!1,this.destroyed=!1,rn(e);const r=ht(n);if(this.iHash=e.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const o=this.blockLen,s=new Uint8Array(o);s.set(r.length>o?e.create().update(r).digest():r);for(let i=0;i<s.length;i++)s[i]^=54;this.iHash.update(s),this.oHash=e.create();for(let i=0;i<s.length;i++)s[i]^=106;this.oHash.update(s),ut(s)}update(e){return Nt(this),this.iHash.update(e),this}digestInto(e){Nt(this),at(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:n,iHash:r,finished:o,destroyed:s,blockLen:i,outputLen:f}=this;return e=e,e.finished=o,e.destroyed=s,e.blockLen=i,e.outputLen=f,e.oHash=n._cloneInto(e.oHash),e.iHash=r._cloneInto(e.iHash),e}clone(){return this._cloneInto()}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const _e=(t,e,n)=>new ao(t,e).update(n).digest();_e.create=(t,e)=>new ao(t,e);function Yf(t,e,n){return rn(t),n===void 0&&(n=new Uint8Array(t.outputLen)),_e(t,ht(n),ht(e))}const vn=Uint8Array.from([0]),uo=Uint8Array.of();function Xf(t,e,n,r=32){rn(t),mt(r);const o=t.outputLen;if(r>255*o)throw new Error("Length should be <= 255*HashLen");const s=Math.ceil(r/o);n===void 0&&(n=uo);const i=new Uint8Array(s*o),f=_e.create(t,e),a=f._cloneInto(),l=new Uint8Array(f.outputLen);for(let c=0;c<s;c++)vn[0]=c+1,a.update(c===0?uo:l).update(n).update(vn).digestInto(l),i.set(l,o*c),f._cloneInto(a);return f.destroy(),a.destroy(),ut(l,vn),i.slice(0,r)}const Jf=(t,e,n,r,o)=>Xf(t,Yf(t,e,n),r,o),Te=Ae,En=BigInt(0),Bn=BigInt(1);function Re(t,e){if(typeof e!="boolean")throw new Error(t+" boolean expected, got "+e)}function $e(t){const e=t.toString(16);return e.length&1?"0"+e:e}function lo(t){if(typeof t!="string")throw new Error("hex string expected, got "+typeof t);return t===""?En:BigInt("0x"+t)}function Ce(t){return lo(ce(t))}function Le(t){return at(t),lo(ce(Uint8Array.from(t).reverse()))}function In(t,e){return fn(t.toString(16).padStart(e*2,"0"))}function An(t,e){return In(t,e).reverse()}function rt(t,e,n){let r;if(typeof e=="string")try{r=fn(e)}catch(s){throw new Error(t+" must be hex string or Uint8Array, cause: "+s)}else if(nn(e))r=Uint8Array.from(e);else throw new Error(t+" must be hex string or Uint8Array");const o=r.length;if(typeof n=="number"&&o!==n)throw new Error(t+" of length "+n+" expected, got "+o);return r}const Sn=t=>typeof t=="bigint"&&En<=t;function Qf(t,e,n){return Sn(t)&&Sn(e)&&Sn(n)&&e<=t&&t<n}function Nn(t,e,n,r){if(!Qf(e,n,r))throw new Error("expected valid "+t+": "+n+" <= n < "+r+", got "+e)}function tc(t){let e;for(e=0;t>En;t>>=Bn,e+=1);return e}const je=t=>(Bn<<BigInt(t))-Bn;function ec(t,e,n){if(typeof t!="number"||t<2)throw new Error("hashLen must be a number");if(typeof e!="number"||e<2)throw new Error("qByteLen must be a number");if(typeof n!="function")throw new Error("hmacFn must be a function");const r=g=>new Uint8Array(g),o=g=>Uint8Array.of(g);let s=r(t),i=r(t),f=0;const a=()=>{s.fill(1),i.fill(0),f=0},l=(...g)=>n(i,s,...g),c=(g=r(0))=>{i=l(o(0),g),s=l(),g.length!==0&&(i=l(o(1),g),s=l())},u=()=>{if(f++>=1e3)throw new Error("drbg: tried 1000 values");let g=0;const w=[];for(;g<e;){s=l();const y=s.slice();w.push(y),g+=s.length}return Ht(...w)};return(g,w)=>{a(),c(g);let y;for(;!(y=w(u()));)c();return a(),y}}function ke(t,e,n={}){if(!t||typeof t!="object")throw new Error("expected valid options object");function r(o,s,i){const f=t[o];if(i&&f===void 0)return;const a=typeof f;if(a!==s||f===null)throw new Error(`param "${o}" is invalid: expected ${s}, got ${a}`)}Object.entries(e).forEach(([o,s])=>r(o,s,!1)),Object.entries(n).forEach(([o,s])=>r(o,s,!0))}function ho(t){const e=new WeakMap;return(n,...r)=>{const o=e.get(n);if(o!==void 0)return o;const s=t(n,...r);return e.set(n,s),s}}const ot=BigInt(0),Q=BigInt(1),Dt=BigInt(2),nc=BigInt(3),po=BigInt(4),go=BigInt(5),bo=BigInt(8);function lt(t,e){const n=t%e;return n>=ot?n:e+n}function pt(t,e,n){let r=t;for(;e-- >ot;)r*=r,r%=n;return r}function yo(t,e){if(t===ot)throw new Error("invert: expected non-zero number");if(e<=ot)throw new Error("invert: expected positive modulus, got "+e);let n=lt(t,e),r=e,o=ot,s=Q;for(;n!==ot;){const f=r/n,a=r%n,l=o-s*f;r=n,n=a,o=s,s=l}if(r!==Q)throw new Error("invert: does not exist");return lt(o,e)}function mo(t,e){const n=(t.ORDER+Q)/po,r=t.pow(e,n);if(!t.eql(t.sqr(r),e))throw new Error("Cannot find square root");return r}function rc(t,e){const n=(t.ORDER-go)/bo,r=t.mul(e,Dt),o=t.pow(r,n),s=t.mul(e,o),i=t.mul(t.mul(s,Dt),o),f=t.mul(s,t.sub(i,t.ONE));if(!t.eql(t.sqr(f),e))throw new Error("Cannot find square root");return f}function oc(t){if(t<BigInt(3))throw new Error("sqrt is not defined for small field");let e=t-Q,n=0;for(;e%Dt===ot;)e/=Dt,n++;let r=Dt;const o=Yt(t);for(;xo(o,r)===1;)if(r++>1e3)throw new Error("Cannot find square root: probably non-prime P");if(n===1)return mo;let s=o.pow(r,e);const i=(e+Q)/Dt;return function(a,l){if(a.is0(l))return l;if(xo(a,l)!==1)throw new Error("Cannot find square root");let c=n,u=a.mul(a.ONE,s),h=a.pow(l,e),g=a.pow(l,i);for(;!a.eql(h,a.ONE);){if(a.is0(h))return a.ZERO;let w=1,y=a.sqr(h);for(;!a.eql(y,a.ONE);)if(w++,y=a.sqr(y),w===c)throw new Error("Cannot find square root");const x=Q<<BigInt(c-w-1),R=a.pow(u,x);c=w,u=a.sqr(R),h=a.mul(h,u),g=a.mul(g,R)}return g}}function sc(t){return t%po===nc?mo:t%bo===go?rc:oc(t)}const ic=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function fc(t){const e={ORDER:"bigint",MASK:"bigint",BYTES:"number",BITS:"number"},n=ic.reduce((r,o)=>(r[o]="function",r),e);return ke(t,n),t}function cc(t,e,n){if(n<ot)throw new Error("invalid exponent, negatives unsupported");if(n===ot)return t.ONE;if(n===Q)return e;let r=t.ONE,o=e;for(;n>ot;)n&Q&&(r=t.mul(r,o)),o=t.sqr(o),n>>=Q;return r}function wo(t,e,n=!1){const r=new Array(e.length).fill(n?t.ZERO:void 0),o=e.reduce((i,f,a)=>t.is0(f)?i:(r[a]=i,t.mul(i,f)),t.ONE),s=t.inv(o);return e.reduceRight((i,f,a)=>t.is0(f)?i:(r[a]=t.mul(i,r[a]),t.mul(i,f)),s),r}function xo(t,e){const n=(t.ORDER-Q)/Dt,r=t.pow(e,n),o=t.eql(r,t.ONE),s=t.eql(r,t.ZERO),i=t.eql(r,t.neg(t.ONE));if(!o&&!s&&!i)throw new Error("invalid Legendre symbol result");return o?1:s?0:-1}function ac(t,e){e!==void 0&&mt(e);const n=e!==void 0?e:t.toString(2).length,r=Math.ceil(n/8);return{nBitLength:n,nByteLength:r}}function Yt(t,e,n=!1,r={}){if(t<=ot)throw new Error("invalid field: expected ORDER > 0, got "+t);let o,s;if(typeof e=="object"&&e!=null){if(r.sqrt||n)throw new Error("cannot specify opts in two arguments");const c=e;c.BITS&&(o=c.BITS),c.sqrt&&(s=c.sqrt),typeof c.isLE=="boolean"&&(n=c.isLE)}else typeof e=="number"&&(o=e),r.sqrt&&(s=r.sqrt);const{nBitLength:i,nByteLength:f}=ac(t,o);if(f>2048)throw new Error("invalid field: expected ORDER of <= 2048 bytes");let a;const l=Object.freeze({ORDER:t,isLE:n,BITS:i,BYTES:f,MASK:je(i),ZERO:ot,ONE:Q,create:c=>lt(c,t),isValid:c=>{if(typeof c!="bigint")throw new Error("invalid field element: expected bigint, got "+typeof c);return ot<=c&&c<t},is0:c=>c===ot,isValidNot0:c=>!l.is0(c)&&l.isValid(c),isOdd:c=>(c&Q)===Q,neg:c=>lt(-c,t),eql:(c,u)=>c===u,sqr:c=>lt(c*c,t),add:(c,u)=>lt(c+u,t),sub:(c,u)=>lt(c-u,t),mul:(c,u)=>lt(c*u,t),pow:(c,u)=>cc(l,c,u),div:(c,u)=>lt(c*yo(u,t),t),sqrN:c=>c*c,addN:(c,u)=>c+u,subN:(c,u)=>c-u,mulN:(c,u)=>c*u,inv:c=>yo(c,t),sqrt:s||(c=>(a||(a=sc(t)),a(l,c))),toBytes:c=>n?An(c,f):In(c,f),fromBytes:c=>{if(c.length!==f)throw new Error("Field.fromBytes: expected "+f+" bytes, got "+c.length);return n?Le(c):Ce(c)},invertBatch:c=>wo(l,c),cmov:(c,u,h)=>h?u:c});return Object.freeze(l)}function vo(t){if(typeof t!="bigint")throw new Error("field order must be bigint");const e=t.toString(2).length;return Math.ceil(e/8)}function Eo(t){const e=vo(t);return e+Math.ceil(e/2)}function uc(t,e,n=!1){const r=t.length,o=vo(e),s=Eo(e);if(r<16||r<s||r>1024)throw new Error("expected "+s+"-1024 bytes of input, got "+r);const i=n?Le(t):Ce(t),f=lt(i,e-Q)+Q;return n?An(f,o):In(f,o)}const Xt=BigInt(0),Mt=BigInt(1);function le(t,e){const n=e.negate();return t?n:e}function lc(t,e,n){const r=e==="pz"?i=>i.pz:i=>i.ez,o=wo(t.Fp,n.map(r));return n.map((i,f)=>i.toAffine(o[f])).map(t.fromAffine)}function Bo(t,e){if(!Number.isSafeInteger(t)||t<=0||t>e)throw new Error("invalid window size, expected [1.."+e+"], got W="+t)}function On(t,e){Bo(t,e);const n=Math.ceil(e/t)+1,r=2**(t-1),o=2**t,s=je(t),i=BigInt(t);return{windows:n,windowSize:r,mask:s,maxNumber:o,shiftBy:i}}function Io(t,e,n){const{windowSize:r,mask:o,maxNumber:s,shiftBy:i}=n;let f=Number(t&o),a=t>>i;f>r&&(f-=s,a+=Mt);const l=e*r,c=l+Math.abs(f)-1,u=f===0,h=f<0,g=e%2!==0;return{nextN:a,offset:c,isZero:u,isNeg:h,isNegF:g,offsetF:l}}function dc(t,e){if(!Array.isArray(t))throw new Error("array expected");t.forEach((n,r)=>{if(!(n instanceof e))throw new Error("invalid point at index "+r)})}function hc(t,e){if(!Array.isArray(t))throw new Error("array of scalars expected");t.forEach((n,r)=>{if(!e.isValid(n))throw new Error("invalid scalar at index "+r)})}const Un=new WeakMap,Ao=new WeakMap;function _n(t){return Ao.get(t)||1}function So(t){if(t!==Xt)throw new Error("invalid wNAF")}function pc(t,e){return{constTimeNegate:le,hasPrecomputes(n){return _n(n)!==1},unsafeLadder(n,r,o=t.ZERO){let s=n;for(;r>Xt;)r&Mt&&(o=o.add(s)),s=s.double(),r>>=Mt;return o},precomputeWindow(n,r){const{windows:o,windowSize:s}=On(r,e),i=[];let f=n,a=f;for(let l=0;l<o;l++){a=f,i.push(a);for(let c=1;c<s;c++)a=a.add(f),i.push(a);f=a.double()}return i},wNAF(n,r,o){let s=t.ZERO,i=t.BASE;const f=On(n,e);for(let a=0;a<f.windows;a++){const{nextN:l,offset:c,isZero:u,isNeg:h,isNegF:g,offsetF:w}=Io(o,a,f);o=l,u?i=i.add(le(g,r[w])):s=s.add(le(h,r[c]))}return So(o),{p:s,f:i}},wNAFUnsafe(n,r,o,s=t.ZERO){const i=On(n,e);for(let f=0;f<i.windows&&o!==Xt;f++){const{nextN:a,offset:l,isZero:c,isNeg:u}=Io(o,f,i);if(o=a,!c){const h=r[l];s=s.add(u?h.negate():h)}}return So(o),s},getPrecomputes(n,r,o){let s=Un.get(r);return s||(s=this.precomputeWindow(r,n),n!==1&&(typeof o=="function"&&(s=o(s)),Un.set(r,s))),s},wNAFCached(n,r,o){const s=_n(n);return this.wNAF(s,this.getPrecomputes(s,n,o),r)},wNAFCachedUnsafe(n,r,o,s){const i=_n(n);return i===1?this.unsafeLadder(n,r,s):this.wNAFUnsafe(i,this.getPrecomputes(i,n,o),r,s)},setWindowSize(n,r){Bo(r,e),Ao.set(n,r),Un.delete(n)}}}function gc(t,e,n,r){let o=e,s=t.ZERO,i=t.ZERO;for(;n>Xt||r>Xt;)n&Mt&&(s=s.add(o)),r&Mt&&(i=i.add(o)),o=o.double(),n>>=Mt,r>>=Mt;return{p1:s,p2:i}}function bc(t,e,n,r){dc(n,t),hc(r,e);const o=n.length,s=r.length;if(o!==s)throw new Error("arrays of points and scalars must have equal length");const i=t.ZERO,f=tc(BigInt(o));let a=1;f>12?a=f-3:f>4?a=f-2:f>0&&(a=2);const l=je(a),c=new Array(Number(l)+1).fill(i),u=Math.floor((e.BITS-1)/a)*a;let h=i;for(let g=u;g>=0;g-=a){c.fill(i);for(let y=0;y<s;y++){const x=r[y],R=Number(x>>BigInt(g)&l);c[R]=c[R].add(n[y])}let w=i;for(let y=c.length-1,x=i;y>0;y--)x=x.add(c[y]),w=w.add(x);if(h=h.add(w),g!==0)for(let y=0;y<a;y++)h=h.double()}return h}function No(t,e){if(e){if(e.ORDER!==t)throw new Error("Field.ORDER must match order: Fp == p, Fn == n");return fc(e),e}else return Yt(t)}function yc(t,e,n={}){if(!e||typeof e!="object")throw new Error(`expected valid ${t} CURVE object`);for(const f of["p","n","h"]){const a=e[f];if(!(typeof a=="bigint"&&a>Xt))throw new Error(`CURVE.${f} must be positive bigint`)}const r=No(e.p,n.Fp),o=No(e.n,n.Fn),i=["Gx","Gy","a",t==="weierstrass"?"b":"d"];for(const f of i)if(!r.isValid(e[f]))throw new Error(`CURVE.${f} must be valid field element of CURVE.Fp`);return{Fp:r,Fn:o}}BigInt(0),BigInt(1),BigInt(2),BigInt(8);const de=BigInt(0),Jt=BigInt(1),Pe=BigInt(2);function mc(t){return ke(t,{adjustScalarBytes:"function",powPminus2:"function"}),Object.freeze({...t})}function wc(t){const e=mc(t),{P:n,type:r,adjustScalarBytes:o,powPminus2:s,randomBytes:i}=e,f=r==="x25519";if(!f&&r!=="x448")throw new Error("invalid type");const a=i||Zt,l=f?255:448,c=f?32:56,u=BigInt(f?9:5),h=BigInt(f?121665:39081),g=f?Pe**BigInt(254):Pe**BigInt(447),w=f?BigInt(8)*Pe**BigInt(251)-Jt:BigInt(4)*Pe**BigInt(445)-Jt,y=g+w+Jt,x=d=>lt(d,n),R=M(u);function M(d){return An(x(d),c)}function L(d){const m=rt("u coordinate",d,c);return f&&(m[31]&=127),x(Le(m))}function V(d){return Le(o(rt("scalar",d,c)))}function _(d,m){const p=$(L(m),V(d));if(p===de)throw new Error("invalid private or public key received");return M(p)}function k(d){return _(d,R)}function j(d,m,p){const b=x(d*(m-p));return m=x(m-b),p=x(p+b),{x_2:m,x_3:p}}function $(d,m){Nn("u",d,de,n),Nn("scalar",m,g,y);const p=m,b=d;let v=Jt,B=de,E=d,I=Jt,S=de;for(let A=BigInt(l-1);A>=de;A--){const T=p>>A&Jt;S^=T,{x_2:v,x_3:E}=j(S,v,E),{x_2:B,x_3:I}=j(S,B,I),S=T;const U=v+B,C=x(U*U),H=v-B,q=x(H*H),P=C-q,K=E+I,et=E-I,Z=x(et*U),z=x(K*H),Ft=Z+z,yt=Z-z;E=x(Ft*Ft),I=x(b*x(yt*yt)),v=x(C*q),B=x(P*(C+x(h*P)))}({x_2:v,x_3:E}=j(S,v,E)),{x_2:B,x_3:I}=j(S,B,I);const O=s(B);return x(v*O)}return{scalarMult:_,scalarMultBase:k,getSharedSecret:(d,m)=>_(d,m),getPublicKey:d=>k(d),utils:{randomPrivateKey:()=>a(c)},GuBytes:R.slice()}}BigInt(0);const xc=BigInt(1),Oo=BigInt(2),vc=BigInt(3),Ec=BigInt(5),Bc=BigInt(8),Uo={p:BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed"),n:BigInt("0x1000000000000000000000000000000014def9dea2f79cd65812631a5cf5d3ed"),h:Bc,a:BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec"),d:BigInt("0x52036cee2b6ffe738cc740797779e89800700a4d4141d8ab75eb4dca135978a3"),Gx:BigInt("0x216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a"),Gy:BigInt("0x6666666666666666666666666666666666666666666666666666666666666658")};function Ic(t){const e=BigInt(10),n=BigInt(20),r=BigInt(40),o=BigInt(80),s=Uo.p,f=t*t%s*t%s,a=pt(f,Oo,s)*f%s,l=pt(a,xc,s)*t%s,c=pt(l,Ec,s)*l%s,u=pt(c,e,s)*c%s,h=pt(u,n,s)*u%s,g=pt(h,r,s)*h%s,w=pt(g,o,s)*g%s,y=pt(w,o,s)*g%s,x=pt(y,e,s)*c%s;return{pow_p_5_8:pt(x,Oo,s)*t%s,b2:f}}function Ac(t){return t[0]&=248,t[31]&=127,t[31]|=64,t}const Tn=(()=>{const t=Uo.p;return wc({P:t,type:"x25519",powPminus2:e=>{const{pow_p_5_8:n,b2:r}=Ic(e);return lt(pt(n,vc,t)*r,t)},adjustScalarBytes:Ac})})();function _o(t){t.lowS!==void 0&&Re("lowS",t.lowS),t.prehash!==void 0&&Re("prehash",t.prehash)}class Sc extends Error{constructor(e=""){super(e)}}const vt={Err:Sc,_tlv:{encode:(t,e)=>{const{Err:n}=vt;if(t<0||t>256)throw new n("tlv.encode: wrong tag");if(e.length&1)throw new n("tlv.encode: unpadded data");const r=e.length/2,o=$e(r);if(o.length/2&128)throw new n("tlv.encode: long form length too big");const s=r>127?$e(o.length/2|128):"";return $e(t)+s+o+e},decode(t,e){const{Err:n}=vt;let r=0;if(t<0||t>256)throw new n("tlv.encode: wrong tag");if(e.length<2||e[r++]!==t)throw new n("tlv.decode: wrong tlv");const o=e[r++],s=!!(o&128);let i=0;if(!s)i=o;else{const a=o&127;if(!a)throw new n("tlv.decode(long): indefinite length not supported");if(a>4)throw new n("tlv.decode(long): byte length is too big");const l=e.subarray(r,r+a);if(l.length!==a)throw new n("tlv.decode: length bytes not complete");if(l[0]===0)throw new n("tlv.decode(long): zero leftmost byte");for(const c of l)i=i<<8|c;if(r+=a,i<128)throw new n("tlv.decode(long): not minimal encoding")}const f=e.subarray(r,r+i);if(f.length!==i)throw new n("tlv.decode: wrong value length");return{v:f,l:e.subarray(r+i)}}},_int:{encode(t){const{Err:e}=vt;if(t<he)throw new e("integer: negative integers are not allowed");let n=$e(t);if(Number.parseInt(n[0],16)&8&&(n="00"+n),n.length&1)throw new e("unexpected DER parsing assertion: unpadded hex");return n},decode(t){const{Err:e}=vt;if(t[0]&128)throw new e("invalid signature integer: negative");if(t[0]===0&&!(t[1]&128))throw new e("invalid signature integer: unnecessary leading zero");return Ce(t)}},toSig(t){const{Err:e,_int:n,_tlv:r}=vt,o=rt("signature",t),{v:s,l:i}=r.decode(48,o);if(i.length)throw new e("invalid signature: left bytes after parsing");const{v:f,l:a}=r.decode(2,s),{v:l,l:c}=r.decode(2,a);if(c.length)throw new e("invalid signature: left bytes after parsing");return{r:n.decode(f),s:n.decode(l)}},hexFromSig(t){const{_tlv:e,_int:n}=vt,r=e.encode(2,n.encode(t.r)),o=e.encode(2,n.encode(t.s)),s=r+o;return e.encode(48,s)}},he=BigInt(0),pe=BigInt(1),Nc=BigInt(2),He=BigInt(3),Oc=BigInt(4);function Uc(t,e,n){function r(o){const s=t.sqr(o),i=t.mul(s,o);return t.add(t.add(i,t.mul(o,e)),n)}return r}function To(t,e,n){const{BYTES:r}=t;function o(s){let i;if(typeof s=="bigint")i=s;else{let f=rt("private key",s);if(e){if(!e.includes(f.length*2))throw new Error("invalid private key");const a=new Uint8Array(r);a.set(f,a.length-f.length),f=a}try{i=t.fromBytes(f)}catch{throw new Error(`invalid private key: expected ui8a of size ${r}, got ${typeof s}`)}}if(n&&(i=t.create(i)),!t.isValidNot0(i))throw new Error("invalid private key: out of range [1..N-1]");return i}return o}function _c(t,e={}){const{Fp:n,Fn:r}=yc("weierstrass",t,e),{h:o,n:s}=t;ke(e,{},{allowInfinityPoint:"boolean",clearCofactor:"function",isTorsionFree:"function",fromBytes:"function",toBytes:"function",endo:"object",wrapPrivateKey:"boolean"});const{endo:i}=e;if(i&&(!n.is0(t.a)||typeof i.beta!="bigint"||typeof i.splitScalar!="function"))throw new Error('invalid endo: expected "beta": bigint and "splitScalar": function');function f(){if(!n.isOdd)throw new Error("compression is not supported: Field does not have .isOdd()")}function a($,d,m){const{x:p,y:b}=d.toAffine(),v=n.toBytes(p);if(Re("isCompressed",m),m){f();const B=!n.isOdd(b);return Ht(Ro(B),v)}else return Ht(Uint8Array.of(4),v,n.toBytes(b))}function l($){at($);const d=n.BYTES,m=d+1,p=2*d+1,b=$.length,v=$[0],B=$.subarray(1);if(b===m&&(v===2||v===3)){const E=n.fromBytes(B);if(!n.isValid(E))throw new Error("bad point: is not on curve, wrong x");const I=h(E);let S;try{S=n.sqrt(I)}catch(T){const U=T instanceof Error?": "+T.message:"";throw new Error("bad point: is not on curve, sqrt error"+U)}f();const O=n.isOdd(S);return(v&1)===1!==O&&(S=n.neg(S)),{x:E,y:S}}else if(b===p&&v===4){const E=n.fromBytes(B.subarray(d*0,d*1)),I=n.fromBytes(B.subarray(d*1,d*2));if(!g(E,I))throw new Error("bad point: is not on curve");return{x:E,y:I}}else throw new Error(`bad point: got length ${b}, expected compressed=${m} or uncompressed=${p}`)}const c=e.toBytes||a,u=e.fromBytes||l,h=Uc(n,t.a,t.b);function g($,d){const m=n.sqr(d),p=h($);return n.eql(m,p)}if(!g(t.Gx,t.Gy))throw new Error("bad curve params: generator point");const w=n.mul(n.pow(t.a,He),Oc),y=n.mul(n.sqr(t.b),BigInt(27));if(n.is0(n.add(w,y)))throw new Error("bad curve params: a or b");function x($,d,m=!1){if(!n.isValid(d)||m&&n.is0(d))throw new Error(`bad point coordinate ${$}`);return d}function R($){if(!($ instanceof _))throw new Error("ProjectivePoint expected")}const M=ho(($,d)=>{const{px:m,py:p,pz:b}=$;if(n.eql(b,n.ONE))return{x:m,y:p};const v=$.is0();d==null&&(d=v?n.ONE:n.inv(b));const B=n.mul(m,d),E=n.mul(p,d),I=n.mul(b,d);if(v)return{x:n.ZERO,y:n.ZERO};if(!n.eql(I,n.ONE))throw new Error("invZ was invalid");return{x:B,y:E}}),L=ho($=>{if($.is0()){if(e.allowInfinityPoint&&!n.is0($.py))return;throw new Error("bad point: ZERO")}const{x:d,y:m}=$.toAffine();if(!n.isValid(d)||!n.isValid(m))throw new Error("bad point: x or y not field elements");if(!g(d,m))throw new Error("bad point: equation left != right");if(!$.isTorsionFree())throw new Error("bad point: not in prime-order subgroup");return!0});function V($,d,m,p,b){return m=new _(n.mul(m.px,$),m.py,m.pz),d=le(p,d),m=le(b,m),d.add(m)}class _{constructor(d,m,p){this.px=x("x",d),this.py=x("y",m,!0),this.pz=x("z",p),Object.freeze(this)}static fromAffine(d){const{x:m,y:p}=d||{};if(!d||!n.isValid(m)||!n.isValid(p))throw new Error("invalid affine point");if(d instanceof _)throw new Error("projective point not allowed");return n.is0(m)&&n.is0(p)?_.ZERO:new _(m,p,n.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(d){return lc(_,"pz",d)}static fromBytes(d){return at(d),_.fromHex(d)}static fromHex(d){const m=_.fromAffine(u(rt("pointHex",d)));return m.assertValidity(),m}static fromPrivateKey(d){const m=To(r,e.allowedPrivateKeyLengths,e.wrapPrivateKey);return _.BASE.multiply(m(d))}static msm(d,m){return bc(_,r,d,m)}precompute(d=8,m=!0){return j.setWindowSize(this,d),m||this.multiply(He),this}_setWindowSize(d){this.precompute(d)}assertValidity(){L(this)}hasEvenY(){const{y:d}=this.toAffine();if(!n.isOdd)throw new Error("Field doesn't support isOdd");return!n.isOdd(d)}equals(d){R(d);const{px:m,py:p,pz:b}=this,{px:v,py:B,pz:E}=d,I=n.eql(n.mul(m,E),n.mul(v,b)),S=n.eql(n.mul(p,E),n.mul(B,b));return I&&S}negate(){return new _(this.px,n.neg(this.py),this.pz)}double(){const{a:d,b:m}=t,p=n.mul(m,He),{px:b,py:v,pz:B}=this;let E=n.ZERO,I=n.ZERO,S=n.ZERO,O=n.mul(b,b),A=n.mul(v,v),T=n.mul(B,B),U=n.mul(b,v);return U=n.add(U,U),S=n.mul(b,B),S=n.add(S,S),E=n.mul(d,S),I=n.mul(p,T),I=n.add(E,I),E=n.sub(A,I),I=n.add(A,I),I=n.mul(E,I),E=n.mul(U,E),S=n.mul(p,S),T=n.mul(d,T),U=n.sub(O,T),U=n.mul(d,U),U=n.add(U,S),S=n.add(O,O),O=n.add(S,O),O=n.add(O,T),O=n.mul(O,U),I=n.add(I,O),T=n.mul(v,B),T=n.add(T,T),O=n.mul(T,U),E=n.sub(E,O),S=n.mul(T,A),S=n.add(S,S),S=n.add(S,S),new _(E,I,S)}add(d){R(d);const{px:m,py:p,pz:b}=this,{px:v,py:B,pz:E}=d;let I=n.ZERO,S=n.ZERO,O=n.ZERO;const A=t.a,T=n.mul(t.b,He);let U=n.mul(m,v),C=n.mul(p,B),H=n.mul(b,E),q=n.add(m,p),P=n.add(v,B);q=n.mul(q,P),P=n.add(U,C),q=n.sub(q,P),P=n.add(m,b);let K=n.add(v,E);return P=n.mul(P,K),K=n.add(U,H),P=n.sub(P,K),K=n.add(p,b),I=n.add(B,E),K=n.mul(K,I),I=n.add(C,H),K=n.sub(K,I),O=n.mul(A,P),I=n.mul(T,H),O=n.add(I,O),I=n.sub(C,O),O=n.add(C,O),S=n.mul(I,O),C=n.add(U,U),C=n.add(C,U),H=n.mul(A,H),P=n.mul(T,P),C=n.add(C,H),H=n.sub(U,H),H=n.mul(A,H),P=n.add(P,H),U=n.mul(C,P),S=n.add(S,U),U=n.mul(K,P),I=n.mul(q,I),I=n.sub(I,U),U=n.mul(q,C),O=n.mul(K,O),O=n.add(O,U),new _(I,S,O)}subtract(d){return this.add(d.negate())}is0(){return this.equals(_.ZERO)}multiply(d){const{endo:m}=e;if(!r.isValidNot0(d))throw new Error("invalid scalar: out of range");let p,b;const v=B=>j.wNAFCached(this,B,_.normalizeZ);if(m){const{k1neg:B,k1:E,k2neg:I,k2:S}=m.splitScalar(d),{p:O,f:A}=v(E),{p:T,f:U}=v(S);b=A.add(U),p=V(m.beta,O,T,B,I)}else{const{p:B,f:E}=v(d);p=B,b=E}return _.normalizeZ([p,b])[0]}multiplyUnsafe(d){const{endo:m}=e,p=this;if(!r.isValid(d))throw new Error("invalid scalar: out of range");if(d===he||p.is0())return _.ZERO;if(d===pe)return p;if(j.hasPrecomputes(this))return this.multiply(d);if(m){const{k1neg:b,k1:v,k2neg:B,k2:E}=m.splitScalar(d),{p1:I,p2:S}=gc(_,p,v,E);return V(m.beta,I,S,b,B)}else return j.wNAFCachedUnsafe(p,d)}multiplyAndAddUnsafe(d,m,p){const b=this.multiplyUnsafe(m).add(d.multiplyUnsafe(p));return b.is0()?void 0:b}toAffine(d){return M(this,d)}isTorsionFree(){const{isTorsionFree:d}=e;return o===pe?!0:d?d(_,this):j.wNAFCachedUnsafe(this,s).is0()}clearCofactor(){const{clearCofactor:d}=e;return o===pe?this:d?d(_,this):this.multiplyUnsafe(o)}toBytes(d=!0){return Re("isCompressed",d),this.assertValidity(),c(_,this,d)}toRawBytes(d=!0){return this.toBytes(d)}toHex(d=!0){return ce(this.toBytes(d))}toString(){return`<Point ${this.is0()?"ZERO":this.toHex()}>`}}_.BASE=new _(t.Gx,t.Gy,n.ONE),_.ZERO=new _(n.ZERO,n.ONE,n.ZERO),_.Fp=n,_.Fn=r;const k=r.BITS,j=pc(_,e.endo?Math.ceil(k/2):k);return _}function Ro(t){return Uint8Array.of(t?2:3)}function Tc(t,e,n={}){ke(e,{hash:"function"},{hmac:"function",lowS:"boolean",randomBytes:"function",bits2int:"function",bits2int_modN:"function"});const r=e.randomBytes||Zt,o=e.hmac||((p,...b)=>_e(e.hash,p,Ht(...b))),{Fp:s,Fn:i}=t,{ORDER:f,BITS:a}=i;function l(p){const b=f>>pe;return p>b}function c(p){return l(p)?i.neg(p):p}function u(p,b){if(!i.isValidNot0(b))throw new Error(`invalid signature ${p}: out of range 1..CURVE.n`)}class h{constructor(b,v,B){u("r",b),u("s",v),this.r=b,this.s=v,B!=null&&(this.recovery=B),Object.freeze(this)}static fromCompact(b){const v=i.BYTES,B=rt("compactSignature",b,v*2);return new h(i.fromBytes(B.subarray(0,v)),i.fromBytes(B.subarray(v,v*2)))}static fromDER(b){const{r:v,s:B}=vt.toSig(rt("DER",b));return new h(v,B)}assertValidity(){}addRecoveryBit(b){return new h(this.r,this.s,b)}recoverPublicKey(b){const v=s.ORDER,{r:B,s:E,recovery:I}=this;if(I==null||![0,1,2,3].includes(I))throw new Error("recovery id invalid");if(f*Nc<v&&I>1)throw new Error("recovery id is ambiguous for h>1 curve");const O=I===2||I===3?B+f:B;if(!s.isValid(O))throw new Error("recovery id 2 or 3 invalid");const A=s.toBytes(O),T=t.fromHex(Ht(Ro((I&1)===0),A)),U=i.inv(O),C=L(rt("msgHash",b)),H=i.create(-C*U),q=i.create(E*U),P=t.BASE.multiplyUnsafe(H).add(T.multiplyUnsafe(q));if(P.is0())throw new Error("point at infinify");return P.assertValidity(),P}hasHighS(){return l(this.s)}normalizeS(){return this.hasHighS()?new h(this.r,i.neg(this.s),this.recovery):this}toBytes(b){if(b==="compact")return Ht(i.toBytes(this.r),i.toBytes(this.s));if(b==="der")return fn(vt.hexFromSig(this));throw new Error("invalid format")}toDERRawBytes(){return this.toBytes("der")}toDERHex(){return ce(this.toBytes("der"))}toCompactRawBytes(){return this.toBytes("compact")}toCompactHex(){return ce(this.toBytes("compact"))}}const g=To(i,n.allowedPrivateKeyLengths,n.wrapPrivateKey),w={isValidPrivateKey(p){try{return g(p),!0}catch{return!1}},normPrivateKeyToScalar:g,randomPrivateKey:()=>{const p=f;return uc(r(Eo(p)),p)},precompute(p=8,b=t.BASE){return b.precompute(p,!1)}};function y(p,b=!0){return t.fromPrivateKey(p).toBytes(b)}function x(p){if(typeof p=="bigint")return!1;if(p instanceof t)return!0;const v=rt("key",p).length,B=s.BYTES,E=B+1,I=2*B+1;if(!(n.allowedPrivateKeyLengths||i.BYTES===E))return v===E||v===I}function R(p,b,v=!0){if(x(p)===!0)throw new Error("first arg must be private key");if(x(b)===!1)throw new Error("second arg must be public key");return t.fromHex(b).multiply(g(p)).toBytes(v)}const M=e.bits2int||function(p){if(p.length>8192)throw new Error("input is too large");const b=Ce(p),v=p.length*8-a;return v>0?b>>BigInt(v):b},L=e.bits2int_modN||function(p){return i.create(M(p))},V=je(a);function _(p){return Nn("num < 2^"+a,p,he,V),i.toBytes(p)}function k(p,b,v=j){if(["recovered","canonical"].some(q=>q in v))throw new Error("sign() legacy options not supported");const{hash:B}=e;let{lowS:E,prehash:I,extraEntropy:S}=v;E==null&&(E=!0),p=rt("msgHash",p),_o(v),I&&(p=rt("prehashed msgHash",B(p)));const O=L(p),A=g(b),T=[_(A),_(O)];if(S!=null&&S!==!1){const q=S===!0?r(s.BYTES):S;T.push(rt("extraEntropy",q))}const U=Ht(...T),C=O;function H(q){const P=M(q);if(!i.isValidNot0(P))return;const K=i.inv(P),et=t.BASE.multiply(P).toAffine(),Z=i.create(et.x);if(Z===he)return;const z=i.create(K*i.create(C+Z*A));if(z===he)return;let Ft=(et.x===Z?0:2)|Number(et.y&pe),yt=z;return E&&l(z)&&(yt=c(z),Ft^=1),new h(Z,yt,Ft)}return{seed:U,k2sig:H}}const j={lowS:e.lowS,prehash:!1},$={lowS:e.lowS,prehash:!1};function d(p,b,v=j){const{seed:B,k2sig:E}=k(p,b,v);return ec(e.hash.outputLen,i.BYTES,o)(B,E)}t.BASE.precompute(8);function m(p,b,v,B=$){const E=p;b=rt("msgHash",b),v=rt("publicKey",v),_o(B);const{lowS:I,prehash:S,format:O}=B;if("strict"in B)throw new Error("options.strict was renamed to lowS");if(O!==void 0&&!["compact","der","js"].includes(O))throw new Error('format must be "compact", "der" or "js"');const A=typeof E=="string"||nn(E),T=!A&&!O&&typeof E=="object"&&E!==null&&typeof E.r=="bigint"&&typeof E.s=="bigint";if(!A&&!T)throw new Error("invalid signature, expected Uint8Array, hex string or Signature instance");let U,C;try{if(T)if(O===void 0||O==="js")U=new h(E.r,E.s);else throw new Error("invalid format");if(A){try{O!=="compact"&&(U=h.fromDER(E))}catch(yt){if(!(yt instanceof vt.Err))throw yt}!U&&O!=="der"&&(U=h.fromCompact(E))}C=t.fromHex(v)}catch{return!1}if(!U||I&&U.hasHighS())return!1;S&&(b=e.hash(b));const{r:H,s:q}=U,P=L(b),K=i.inv(q),et=i.create(P*K),Z=i.create(H*K),z=t.BASE.multiplyUnsafe(et).add(C.multiplyUnsafe(Z));return z.is0()?!1:i.create(z.x)===H}return Object.freeze({getPublicKey:y,getSharedSecret:R,sign:d,verify:m,utils:w,Point:t,Signature:h})}function Rc(t){const e={a:t.a,b:t.b,p:t.Fp.ORDER,n:t.n,h:t.h,Gx:t.Gx,Gy:t.Gy},n=t.Fp,r=Yt(e.n,t.nBitLength),o={Fp:n,Fn:r,allowedPrivateKeyLengths:t.allowedPrivateKeyLengths,allowInfinityPoint:t.allowInfinityPoint,endo:t.endo,wrapPrivateKey:t.wrapPrivateKey,isTorsionFree:t.isTorsionFree,clearCofactor:t.clearCofactor,fromBytes:t.fromBytes,toBytes:t.toBytes};return{CURVE:e,curveOpts:o}}function $c(t){const{CURVE:e,curveOpts:n}=Rc(t),r={hash:t.hash,hmac:t.hmac,randomBytes:t.randomBytes,lowS:t.lowS,bits2int:t.bits2int,bits2int_modN:t.bits2int_modN};return{CURVE:e,curveOpts:n,ecdsaOpts:r}}function Cc(t,e){return Object.assign({},e,{ProjectivePoint:e.Point,CURVE:t})}function Lc(t){const{CURVE:e,curveOpts:n,ecdsaOpts:r}=$c(t),o=_c(e,n),s=Tc(o,r,n);return Cc(t,s)}function Rn(t,e){const n=r=>Lc({...t,hash:r});return{...n(e),create:n}}const $o={p:BigInt("0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff"),n:BigInt("0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551"),h:BigInt(1),a:BigInt("0xffffffff00000001000000000000000000000000fffffffffffffffffffffffc"),b:BigInt("0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b"),Gx:BigInt("0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296"),Gy:BigInt("0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5")},Co={p:BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000ffffffff"),n:BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffc7634d81f4372ddf581a0db248b0a77aecec196accc52973"),h:BigInt(1),a:BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000fffffffc"),b:BigInt("0xb3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aef"),Gx:BigInt("0xaa87ca22be8b05378eb1c71ef320ad746e1d3b628ba79b9859f741e082542a385502f25dbf55296c3a545e3872760ab7"),Gy:BigInt("0x3617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5f")},Lo={p:BigInt("0x1ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),n:BigInt("0x01fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa51868783bf2f966b7fcc0148f709a5d03bb5c9b8899c47aebb6fb71e91386409"),h:BigInt(1),a:BigInt("0x1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc"),b:BigInt("0x0051953eb9618e1c9a1f929a21a0b68540eea2da725b99b315f3b8b489918ef109e156193951ec7e937b1652c0bd3bb1bf073573df883d2c34f1ef451fd46b503f00"),Gx:BigInt("0x00c6858e06b70404e9cd9e3ecb662395b4429c648139053fb521f828af606b4d3dbaa14b5e77efe75928fe1dc127a2ffa8de3348b3c1856a429bf97e7e31c2e5bd66"),Gy:BigInt("0x011839296a789a3bc0045c8a5fb42c7d1bd998f54449579b446817afbd17273e662c97ee72995ef42640c550b9013fad0761353c7086a272c24088be94769fd16650")},jc=Yt($o.p),kc=Yt(Co.p),Pc=Yt(Lo.p),Hc=Rn({...$o,Fp:jc,lowS:!1},Ae);Rn({...Co,Fp:kc,lowS:!1},Yi),Rn({...Lo,Fp:Pc,lowS:!1,allowedPrivateKeyLengths:[130,131,132]},Wi);const Dc=Hc,$n="base10",tt="base16",Qt="base64pad",De="base64url",te="utf8",Cn=0,ee=1,ge=2,Mc=0,jo=1,be=12,Ln=32;function Vc(){const t=Tn.utils.randomPrivateKey(),e=Tn.getPublicKey(t);return{privateKey:(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(t,tt),publicKey:(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(e,tt)}}function qc(){const t=Zt(Ln);return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(t,tt)}function Kc(t,e){const n=Tn.getSharedSecret((0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(t,tt),(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(e,tt)),r=Jf(Te,n,void 0,void 0,Ln);return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(r,tt)}function Fc(t){const e=Te((0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(t,tt));return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(e,tt)}function zc(t){const e=Te((0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(t,te));return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(e,tt)}function jn(t){return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(`${t}`,$n)}function Vt(t){return Number((0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(t,$n))}function ko(t){return t.replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}function Po(t){const e=t.replace(/-/g,"+").replace(/_/g,"/"),n=(4-e.length%4)%4;return e+"=".repeat(n)}function Gc(t){const e=jn(typeof t.type<"u"?t.type:Cn);if(Vt(e)===ee&&typeof t.senderPublicKey>"u")throw new Error("Missing sender public key for type 1 envelope");const n=typeof t.senderPublicKey<"u"?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(t.senderPublicKey,tt):void 0,r=typeof t.iv<"u"?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(t.iv,tt):Zt(be),o=(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(t.symKey,tt),s=co(o,r).encrypt((0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(t.message,te)),i=kn({type:e,sealed:s,iv:r,senderPublicKey:n});return t.encoding===De?ko(i):i}function Zc(t){const e=(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(t.symKey,tt),{sealed:n,iv:r}=Me({encoded:t.encoded,encoding:t.encoding}),o=co(e,r).decrypt(n);if(o===null)throw new Error("Failed to decrypt");return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(o,te)}function Wc(t,e){const n=jn(ge),r=Zt(be),o=(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(t,te),s=kn({type:n,sealed:o,iv:r});return e===De?ko(s):s}function Yc(t,e){const{sealed:n}=Me({encoded:t,encoding:e});return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(n,te)}function kn(t){if(Vt(t.type)===ge)return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.concat)([t.type,t.sealed]),Qt);if(Vt(t.type)===ee){if(typeof t.senderPublicKey>"u")throw new Error("Missing sender public key for type 1 envelope");return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.concat)([t.type,t.senderPublicKey,t.iv,t.sealed]),Qt)}return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.concat)([t.type,t.iv,t.sealed]),Qt)}function Me(t){const e=(t.encoding||Qt)===De?Po(t.encoded):t.encoded,n=(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(e,Qt),r=n.slice(Mc,jo),o=jo;if(Vt(r)===ee){const a=o+Ln,l=a+be,c=n.slice(o,a),u=n.slice(a,l),h=n.slice(l);return{type:r,sealed:h,iv:u,senderPublicKey:c}}if(Vt(r)===ge){const a=n.slice(o),l=Zt(be);return{type:r,sealed:a,iv:l}}const s=o+be,i=n.slice(o,s),f=n.slice(s);return{type:r,sealed:f,iv:i}}function Xc(t,e){const n=Me({encoded:t,encoding:e?.encoding});return Ho({type:Vt(n.type),senderPublicKey:typeof n.senderPublicKey<"u"?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(n.senderPublicKey,tt):void 0,receiverPublicKey:e?.receiverPublicKey})}function Ho(t){const e=t?.type||Cn;if(e===ee){if(typeof t?.senderPublicKey>"u")throw new Error("missing sender public key");if(typeof t?.receiverPublicKey>"u")throw new Error("missing receiver public key")}return{type:e,senderPublicKey:t?.senderPublicKey,receiverPublicKey:t?.receiverPublicKey}}function Jc(t){return t.type===ee&&typeof t.senderPublicKey=="string"&&typeof t.receiverPublicKey=="string"}function Qc(t){return t.type===ge}function Do(t){const e=Buffer.from(t.x,"base64"),n=Buffer.from(t.y,"base64");return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.concat)([new Uint8Array([4]),e,n])}function ta(t,e){const[n,r,o]=t.split("."),s=Buffer.from(Po(o),"base64");if(s.length!==64)throw new Error("Invalid signature length");const i=s.slice(0,32),f=s.slice(32,64),a=`${n}.${r}`,l=Te(a),c=Do(e);if(!Dc.verify((0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.concat)([i,f]),l,c))throw new Error("Invalid signature");return (0,_walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_9__.decodeJWT)(t).payload}const Mo="irn";function ea(t){return t?.relay||{protocol:Mo}}function na(t){const e=_walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_11__.RELAY_JSONRPC[t];if(typeof e>"u")throw new Error(`Relay Protocol not supported: ${t}`);return e}function Vo(t,e="-"){const n={},r="relay"+e;return Object.keys(t).forEach(o=>{if(o.startsWith(r)){const s=o.replace(r,""),i=t[o];n[s]=i}}),n}function ra(t){if(!t.includes("wc:")){const l=Qe(t);l!=null&&l.includes("wc:")&&(t=l)}t=t.includes("wc://")?t.replace("wc://",""):t,t=t.includes("wc:")?t.replace("wc:",""):t;const e=t.indexOf(":"),n=t.indexOf("?")!==-1?t.indexOf("?"):void 0,r=t.substring(0,e),o=t.substring(e+1,n).split("@"),s=typeof n<"u"?t.substring(n):"",i=new URLSearchParams(s),f={};i.forEach((l,c)=>{f[c]=l});const a=typeof f.methods=="string"?f.methods.split(","):void 0;return{protocol:r,topic:qo(o[0]),version:parseInt(o[1],10),symKey:f.symKey,relay:Vo(f),methods:a,expiryTimestamp:f.expiryTimestamp?parseInt(f.expiryTimestamp,10):void 0}}function qo(t){return t.startsWith("//")?t.substring(2):t}function Ko(t,e="-"){const n="relay",r={};return Object.keys(t).forEach(o=>{const s=o,i=n+e+s;t[s]&&(r[i]=t[s])}),r}function oa(t){const e=new URLSearchParams,n=Ko(t.relay);Object.keys(n).sort().forEach(o=>{e.set(o,n[o])}),e.set("symKey",t.symKey),t.expiryTimestamp&&e.set("expiryTimestamp",t.expiryTimestamp.toString()),t.methods&&e.set("methods",t.methods.join(","));const r=e.toString();return`${t.protocol}:${t.topic}@${t.version}?${r}`}function sa(t,e,n){return`${t}?wc_ev=${n}&topic=${e}`}var ia=Object.defineProperty,fa=Object.defineProperties,ca=Object.getOwnPropertyDescriptors,Fo=Object.getOwnPropertySymbols,aa=Object.prototype.hasOwnProperty,ua=Object.prototype.propertyIsEnumerable,zo=(t,e,n)=>e in t?ia(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,la=(t,e)=>{for(var n in e||(e={}))aa.call(e,n)&&zo(t,n,e[n]);if(Fo)for(var n of Fo(e))ua.call(e,n)&&zo(t,n,e[n]);return t},da=(t,e)=>fa(t,ca(e));function qt(t){const e=[];return t.forEach(n=>{const[r,o]=n.split(":");e.push(`${r}:${o}`)}),e}function Go(t){const e=[];return Object.values(t).forEach(n=>{e.push(...qt(n.accounts))}),e}function Zo(t,e){const n=[];return Object.values(t).forEach(r=>{qt(r.accounts).includes(e)&&n.push(...r.methods)}),n}function Wo(t,e){const n=[];return Object.values(t).forEach(r=>{qt(r.accounts).includes(e)&&n.push(...r.events)}),n}function ha(t,e){const n=is(t,e);if(n)throw new Error(n.message);const r={};for(const[o,s]of Object.entries(t))r[o]={methods:s.methods,events:s.events,chains:s.accounts.map(i=>`${i.split(":")[0]}:${i.split(":")[1]}`)};return r}function pa(t){var e;const{proposal:{requiredNamespaces:n,optionalNamespaces:r={}},supportedNamespaces:o}=t,s=ye(n),i=ye(r),f={};Object.keys(o).forEach(c=>{const u=o[c].chains,h=o[c].methods,g=o[c].events,w=o[c].accounts;u.forEach(y=>{if(!w.some(x=>x.includes(y)))throw new Error(`No accounts provided for chain ${y} in namespace ${c}`)}),f[c]={chains:u,methods:h,events:g,accounts:w}});const a=cs(n,f,"approve()");if(a)throw new Error(a.message);const l={};if(!Object.keys(n).length&&!Object.keys(r).length)return f;Object.keys(s).forEach(c=>{const u=o[c].chains.filter(y=>{var x,R;return(R=(x=s[c])==null?void 0:x.chains)==null?void 0:R.includes(y)}),h=o[c].methods.filter(y=>{var x,R;return(R=(x=s[c])==null?void 0:x.methods)==null?void 0:R.includes(y)}),g=o[c].events.filter(y=>{var x,R;return(R=(x=s[c])==null?void 0:x.events)==null?void 0:R.includes(y)}),w=u.map(y=>o[c].accounts.filter(x=>x.includes(`${y}:`))).flat();l[c]={chains:u,methods:h,events:g,accounts:w}}),Object.keys(i).forEach(c=>{var u,h,g,w,y,x;if(!o[c])return;const R=(h=(u=i[c])==null?void 0:u.chains)==null?void 0:h.filter(_=>o[c].chains.includes(_)),M=o[c].methods.filter(_=>{var k,j;return(j=(k=i[c])==null?void 0:k.methods)==null?void 0:j.includes(_)}),L=o[c].events.filter(_=>{var k,j;return(j=(k=i[c])==null?void 0:k.events)==null?void 0:j.includes(_)}),V=R?.map(_=>o[c].accounts.filter(k=>k.includes(`${_}:`))).flat();l[c]={chains:ct((g=l[c])==null?void 0:g.chains,R),methods:ct((w=l[c])==null?void 0:w.methods,M),events:ct((y=l[c])==null?void 0:y.events,L),accounts:ct((x=l[c])==null?void 0:x.accounts,V)}});for(const[c,u]of Object.entries(l))(u.accounts.length===0||((e=u?.chains)==null?void 0:e.length)===0)&&delete l[c];return l}function Pn(t){return t.includes(":")}function Yo(t){return Pn(t)?t.split(":")[0]:t}function ye(t){var e,n,r;const o={};if(!Ve(t))return o;for(const[s,i]of Object.entries(t)){const f=Pn(s)?[s]:i.chains,a=i.methods||[],l=i.events||[],c=Yo(s);o[c]=da(la({},o[c]),{chains:ct(f,(e=o[c])==null?void 0:e.chains),methods:ct(a,(n=o[c])==null?void 0:n.methods),events:ct(l,(r=o[c])==null?void 0:r.events)})}return o}function Xo(t){const e={};return t?.forEach(n=>{var r;const[o,s]=n.split(":");e[o]||(e[o]={accounts:[],chains:[],events:[],methods:[]}),e[o].accounts.push(n),(r=e[o].chains)==null||r.push(`${o}:${s}`)}),e}function ga(t,e){e=e.map(r=>r.replace("did:pkh:",""));const n=Xo(e);for(const[r,o]of Object.entries(n))o.methods?o.methods=ct(o.methods,t):o.methods=t,o.events=["chainChanged","accountsChanged"];return n}function ba(t,e){var n,r,o,s,i,f;const a=ye(t),l=ye(e),c={},u=Object.keys(a).concat(Object.keys(l));for(const h of u)c[h]={chains:ct((n=a[h])==null?void 0:n.chains,(r=l[h])==null?void 0:r.chains),methods:ct((o=a[h])==null?void 0:o.methods,(s=l[h])==null?void 0:s.methods),events:ct((i=a[h])==null?void 0:i.events,(f=l[h])==null?void 0:f.events)};return c}const Jo={INVALID_METHOD:{message:"Invalid method.",code:1001},INVALID_EVENT:{message:"Invalid event.",code:1002},INVALID_UPDATE_REQUEST:{message:"Invalid update request.",code:1003},INVALID_EXTEND_REQUEST:{message:"Invalid extend request.",code:1004},INVALID_SESSION_SETTLE_REQUEST:{message:"Invalid session settle request.",code:1005},UNAUTHORIZED_METHOD:{message:"Unauthorized method.",code:3001},UNAUTHORIZED_EVENT:{message:"Unauthorized event.",code:3002},UNAUTHORIZED_UPDATE_REQUEST:{message:"Unauthorized update request.",code:3003},UNAUTHORIZED_EXTEND_REQUEST:{message:"Unauthorized extend request.",code:3004},USER_REJECTED:{message:"User rejected.",code:5e3},USER_REJECTED_CHAINS:{message:"User rejected chains.",code:5001},USER_REJECTED_METHODS:{message:"User rejected methods.",code:5002},USER_REJECTED_EVENTS:{message:"User rejected events.",code:5003},UNSUPPORTED_CHAINS:{message:"Unsupported chains.",code:5100},UNSUPPORTED_METHODS:{message:"Unsupported methods.",code:5101},UNSUPPORTED_EVENTS:{message:"Unsupported events.",code:5102},UNSUPPORTED_ACCOUNTS:{message:"Unsupported accounts.",code:5103},UNSUPPORTED_NAMESPACE_KEY:{message:"Unsupported namespace key.",code:5104},USER_DISCONNECTED:{message:"User disconnected.",code:6e3},SESSION_SETTLEMENT_FAILED:{message:"Session settlement failed.",code:7e3},WC_METHOD_UNSUPPORTED:{message:"Unsupported wc_ method.",code:10001}},Qo={NOT_INITIALIZED:{message:"Not initialized.",code:1},NO_MATCHING_KEY:{message:"No matching key.",code:2},RESTORE_WILL_OVERRIDE:{message:"Restore will override.",code:3},RESUBSCRIBED:{message:"Resubscribed.",code:4},MISSING_OR_INVALID:{message:"Missing or invalid.",code:5},EXPIRED:{message:"Expired.",code:6},UNKNOWN_TYPE:{message:"Unknown type.",code:7},MISMATCHED_TOPIC:{message:"Mismatched topic.",code:8},NON_CONFORMING_NAMESPACES:{message:"Non conforming namespaces.",code:9}};function Et(t,e){const{message:n,code:r}=Qo[t];return{message:e?`${n} ${e}`:n,code:r}}function Kt(t,e){const{message:n,code:r}=Jo[t];return{message:e?`${n} ${e}`:n,code:r}}function me(t,e){return Array.isArray(t)?typeof e<"u"&&t.length?t.every(e):!0:!1}function Ve(t){return Object.getPrototypeOf(t)===Object.prototype&&Object.keys(t).length}function kt(t){return typeof t>"u"}function it(t,e){return e&&kt(t)?!0:typeof t=="string"&&!!t.trim().length}function qe(t,e){return e&&kt(t)?!0:typeof t=="number"&&!isNaN(t)}function ya(t,e){const{requiredNamespaces:n}=e,r=Object.keys(t.namespaces),o=Object.keys(n);let s=!0;return It(o,r)?(r.forEach(i=>{const{accounts:f,methods:a,events:l}=t.namespaces[i],c=qt(f),u=n[i];(!It(ve(i,u),c)||!It(u.methods,a)||!It(u.events,l))&&(s=!1)}),s):!1}function we(t){return it(t,!1)&&t.includes(":")?t.split(":").length===2:!1}function ts(t){if(it(t,!1)&&t.includes(":")){const e=t.split(":");if(e.length===3){const n=e[0]+":"+e[1];return!!e[2]&&we(n)}}return!1}function ma(t){function e(n){try{return typeof new URL(n)<"u"}catch{return!1}}try{if(it(t,!1)){if(e(t))return!0;const n=Qe(t);return e(n)}}catch{}return!1}function wa(t){var e;return(e=t?.proposer)==null?void 0:e.publicKey}function xa(t){return t?.topic}function va(t,e){let n=null;return it(t?.publicKey,!1)||(n=Et("MISSING_OR_INVALID",`${e} controller public key should be a string`)),n}function Hn(t){let e=!0;return me(t)?t.length&&(e=t.every(n=>it(n,!1))):e=!1,e}function es(t,e,n){let r=null;return me(e)&&e.length?e.forEach(o=>{r||we(o)||(r=Kt("UNSUPPORTED_CHAINS",`${n}, chain ${o} should be a string and conform to "namespace:chainId" format`))}):we(t)||(r=Kt("UNSUPPORTED_CHAINS",`${n}, chains must be defined as "namespace:chainId" e.g. "eip155:1": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: ["eip155:1", "eip155:5"] }`)),r}function ns(t,e,n){let r=null;return Object.entries(t).forEach(([o,s])=>{if(r)return;const i=es(o,ve(o,s),`${e} ${n}`);i&&(r=i)}),r}function rs(t,e){let n=null;return me(t)?t.forEach(r=>{n||ts(r)||(n=Kt("UNSUPPORTED_ACCOUNTS",`${e}, account ${r} should be a string and conform to "namespace:chainId:address" format`))}):n=Kt("UNSUPPORTED_ACCOUNTS",`${e}, accounts should be an array of strings conforming to "namespace:chainId:address" format`),n}function os(t,e){let n=null;return Object.values(t).forEach(r=>{if(n)return;const o=rs(r?.accounts,`${e} namespace`);o&&(n=o)}),n}function ss(t,e){let n=null;return Hn(t?.methods)?Hn(t?.events)||(n=Kt("UNSUPPORTED_EVENTS",`${e}, events should be an array of strings or empty array for no events`)):n=Kt("UNSUPPORTED_METHODS",`${e}, methods should be an array of strings or empty array for no methods`),n}function Dn(t,e){let n=null;return Object.values(t).forEach(r=>{if(n)return;const o=ss(r,`${e}, namespace`);o&&(n=o)}),n}function Ea(t,e,n){let r=null;if(t&&Ve(t)){const o=Dn(t,e);o&&(r=o);const s=ns(t,e,n);s&&(r=s)}else r=Et("MISSING_OR_INVALID",`${e}, ${n} should be an object with data`);return r}function is(t,e){let n=null;if(t&&Ve(t)){const r=Dn(t,e);r&&(n=r);const o=os(t,e);o&&(n=o)}else n=Et("MISSING_OR_INVALID",`${e}, namespaces should be an object with data`);return n}function fs(t){return it(t.protocol,!0)}function Ba(t,e){let n=!1;return e&&!t?n=!0:t&&me(t)&&t.length&&t.forEach(r=>{n=fs(r)}),n}function Ia(t){return typeof t=="number"}function Aa(t){return typeof t<"u"&&typeof t!==null}function Sa(t){return!(!t||typeof t!="object"||!t.code||!qe(t.code,!1)||!t.message||!it(t.message,!1))}function Na(t){return!(kt(t)||!it(t.method,!1))}function Oa(t){return!(kt(t)||kt(t.result)&&kt(t.error)||!qe(t.id,!1)||!it(t.jsonrpc,!1))}function Ua(t){return!(kt(t)||!it(t.name,!1))}function _a(t,e){return!(!we(e)||!Go(t).includes(e))}function Ta(t,e,n){return it(n,!1)?Zo(t,e).includes(n):!1}function Ra(t,e,n){return it(n,!1)?Wo(t,e).includes(n):!1}function cs(t,e,n){let r=null;const o=$a(t),s=Ca(e),i=Object.keys(o),f=Object.keys(s),a=as(Object.keys(t)),l=as(Object.keys(e)),c=a.filter(u=>!l.includes(u));return c.length&&(r=Et("NON_CONFORMING_NAMESPACES",`${n} namespaces keys don't satisfy requiredNamespaces.
      Required: ${c.toString()}
      Received: ${Object.keys(e).toString()}`)),It(i,f)||(r=Et("NON_CONFORMING_NAMESPACES",`${n} namespaces chains don't satisfy required namespaces.
      Required: ${i.toString()}
      Approved: ${f.toString()}`)),Object.keys(e).forEach(u=>{if(!u.includes(":")||r)return;const h=qt(e[u].accounts);h.includes(u)||(r=Et("NON_CONFORMING_NAMESPACES",`${n} namespaces accounts don't satisfy namespace accounts for ${u}
        Required: ${u}
        Approved: ${h.toString()}`))}),i.forEach(u=>{r||(It(o[u].methods,s[u].methods)?It(o[u].events,s[u].events)||(r=Et("NON_CONFORMING_NAMESPACES",`${n} namespaces events don't satisfy namespace events for ${u}`)):r=Et("NON_CONFORMING_NAMESPACES",`${n} namespaces methods don't satisfy namespace methods for ${u}`))}),r}function $a(t){const e={};return Object.keys(t).forEach(n=>{var r;n.includes(":")?e[n]=t[n]:(r=t[n].chains)==null||r.forEach(o=>{e[o]={methods:t[n].methods,events:t[n].events}})}),e}function as(t){return[...new Set(t.map(e=>e.includes(":")?e.split(":")[0]:e))]}function Ca(t){const e={};return Object.keys(t).forEach(n=>{if(n.includes(":"))e[n]=t[n];else{const r=qt(t[n].accounts);r?.forEach(o=>{e[o]={accounts:t[n].accounts.filter(s=>s.includes(`${o}:`)),methods:t[n].methods,events:t[n].events}})}}),e}function La(t,e){return qe(t,!1)&&t<=e.max&&t>=e.min}function ja(){const t=Pt();return new Promise(e=>{switch(t){case J.browser:e(us());break;case J.reactNative:e(ls());break;case J.node:e(ds());break;default:e(!0)}})}function us(){return zt()&&navigator?.onLine}async function ls(){if(Bt()&&typeof __webpack_require__.g<"u"&&__webpack_require__.g!=null&&__webpack_require__.g.NetInfo){const t=await(__webpack_require__.g==null?void 0:__webpack_require__.g.NetInfo.fetch());return t?.isConnected}return!0}function ds(){return!0}function ka(t){switch(Pt()){case J.browser:hs(t);break;case J.reactNative:ps(t);break;case J.node:break}}function hs(t){!Bt()&&zt()&&(window.addEventListener("online",()=>t(!0)),window.addEventListener("offline",()=>t(!1)))}function ps(t){Bt()&&typeof __webpack_require__.g<"u"&&__webpack_require__.g!=null&&__webpack_require__.g.NetInfo&&__webpack_require__.g?.NetInfo.addEventListener(e=>t(e?.isConnected))}function Pa(){var t;return zt()&&(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__.getDocument)()?((t=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__.getDocument)())==null?void 0:t.visibilityState)==="visible":!0}const Mn={};class Ha{static get(e){return Mn[e]}static set(e,n){Mn[e]=n}static delete(e){delete Mn[e]}}function gs(t){const e=bs58__WEBPACK_IMPORTED_MODULE_5__["default"].decode(t);if(e.length<33)throw new Error("Too short to contain a public key");return e.slice(1,33)}function bs({publicKey:t,signature:e,payload:n}){var r;const o=Vn(n.method),s=128|parseInt(((r=n.version)==null?void 0:r.toString())||"4"),i=Ma(n.address),f=n.era==="00"?new Uint8Array([0]):Vn(n.era);if(f.length!==1&&f.length!==2)throw new Error("Invalid era length");const a=parseInt(n.nonce,16),l=new Uint8Array([a&255,a>>8&255]),c=BigInt(`0x${Da(n.tip)}`),u=qa(c),h=new Uint8Array([0,...t,i,...e,...f,...l,...u,...o]),g=Va(h.length+1);return new Uint8Array([...g,s,...h])}function ys(t){const e=Vn(t),n=(0,blakejs__WEBPACK_IMPORTED_MODULE_12__.blake2b)(e,void 0,32);return"0x"+Buffer.from(n).toString("hex")}function Vn(t){return new Uint8Array(t.replace(/^0x/,"").match(/.{1,2}/g).map(e=>parseInt(e,16)))}function Da(t){return t.startsWith("0x")?t.slice(2):t}function Ma(t){const e=bs58__WEBPACK_IMPORTED_MODULE_5__["default"].decode(t)[0];return e===42?0:e===60?2:1}function Va(t){if(t<64)return new Uint8Array([t<<2]);if(t<16384){const e=t<<2|1;return new Uint8Array([e&255,e>>8&255])}else if(t<1<<30){const e=t<<2|2;return new Uint8Array([e&255,e>>8&255,e>>16&255,e>>24&255])}else throw new Error("Compact encoding > 2^30 not supported")}function qa(t){if(t<BigInt(1)<<BigInt(6))return new Uint8Array([Number(t<<BigInt(2))]);if(t<BigInt(1)<<BigInt(14)){const e=t<<BigInt(2)|BigInt(1);return new Uint8Array([Number(e&BigInt(255)),Number(e>>BigInt(8)&BigInt(255))])}else if(t<BigInt(1)<<BigInt(30)){const e=t<<BigInt(2)|BigInt(2);return new Uint8Array([Number(e&BigInt(255)),Number(e>>BigInt(8)&BigInt(255)),Number(e>>BigInt(16)&BigInt(255)),Number(e>>BigInt(24)&BigInt(255))])}else throw new Error("BigInt compact encoding not supported > 2^30")}function Ka(t){const e=Uint8Array.from(Buffer.from(t.signature,"hex")),n=gs(t.transaction.address),r=bs({publicKey:n,signature:e,payload:t.transaction}),o=Buffer.from(r).toString("hex");return ys(o)}
//# sourceMappingURL=index.es.js.map


/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/window-getters/dist/cjs/index.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/window-getters/dist/cjs/index.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getLocalStorage = exports.getLocalStorageOrThrow = exports.getCrypto = exports.getCryptoOrThrow = exports.getLocation = exports.getLocationOrThrow = exports.getNavigator = exports.getNavigatorOrThrow = exports.getDocument = exports.getDocumentOrThrow = exports.getFromWindowOrThrow = exports.getFromWindow = void 0;
function getFromWindow(name) {
    let res = undefined;
    if (typeof window !== "undefined" && typeof window[name] !== "undefined") {
        res = window[name];
    }
    return res;
}
exports.getFromWindow = getFromWindow;
function getFromWindowOrThrow(name) {
    const res = getFromWindow(name);
    if (!res) {
        throw new Error(`${name} is not defined in Window`);
    }
    return res;
}
exports.getFromWindowOrThrow = getFromWindowOrThrow;
function getDocumentOrThrow() {
    return getFromWindowOrThrow("document");
}
exports.getDocumentOrThrow = getDocumentOrThrow;
function getDocument() {
    return getFromWindow("document");
}
exports.getDocument = getDocument;
function getNavigatorOrThrow() {
    return getFromWindowOrThrow("navigator");
}
exports.getNavigatorOrThrow = getNavigatorOrThrow;
function getNavigator() {
    return getFromWindow("navigator");
}
exports.getNavigator = getNavigator;
function getLocationOrThrow() {
    return getFromWindowOrThrow("location");
}
exports.getLocationOrThrow = getLocationOrThrow;
function getLocation() {
    return getFromWindow("location");
}
exports.getLocation = getLocation;
function getCryptoOrThrow() {
    return getFromWindowOrThrow("crypto");
}
exports.getCryptoOrThrow = getCryptoOrThrow;
function getCrypto() {
    return getFromWindow("crypto");
}
exports.getCrypto = getCrypto;
function getLocalStorageOrThrow() {
    return getFromWindowOrThrow("localStorage");
}
exports.getLocalStorageOrThrow = getLocalStorageOrThrow;
function getLocalStorage() {
    return getFromWindow("localStorage");
}
exports.getLocalStorage = getLocalStorage;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/window-metadata/dist/cjs/index.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/window-metadata/dist/cjs/index.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getWindowMetadata = void 0;
const window_getters_1 = __webpack_require__(/*! @walletconnect/window-getters */ "./node_modules/@walletconnect/sign-client/node_modules/@walletconnect/window-getters/dist/cjs/index.js");
function getWindowMetadata() {
    let doc;
    let loc;
    try {
        doc = window_getters_1.getDocumentOrThrow();
        loc = window_getters_1.getLocationOrThrow();
    }
    catch (e) {
        return null;
    }
    function getIcons() {
        const links = doc.getElementsByTagName("link");
        const icons = [];
        for (let i = 0; i < links.length; i++) {
            const link = links[i];
            const rel = link.getAttribute("rel");
            if (rel) {
                if (rel.toLowerCase().indexOf("icon") > -1) {
                    const href = link.getAttribute("href");
                    if (href) {
                        if (href.toLowerCase().indexOf("https:") === -1 &&
                            href.toLowerCase().indexOf("http:") === -1 &&
                            href.indexOf("//") !== 0) {
                            let absoluteHref = loc.protocol + "//" + loc.host;
                            if (href.indexOf("/") === 0) {
                                absoluteHref += href;
                            }
                            else {
                                const path = loc.pathname.split("/");
                                path.pop();
                                const finalPath = path.join("/");
                                absoluteHref += finalPath + "/" + href;
                            }
                            icons.push(absoluteHref);
                        }
                        else if (href.indexOf("//") === 0) {
                            const absoluteUrl = loc.protocol + href;
                            icons.push(absoluteUrl);
                        }
                        else {
                            icons.push(href);
                        }
                    }
                }
            }
        }
        return icons;
    }
    function getWindowMetadataOfAny(...args) {
        const metaTags = doc.getElementsByTagName("meta");
        for (let i = 0; i < metaTags.length; i++) {
            const tag = metaTags[i];
            const attributes = ["itemprop", "property", "name"]
                .map((target) => tag.getAttribute(target))
                .filter((attr) => {
                if (attr) {
                    return args.includes(attr);
                }
                return false;
            });
            if (attributes.length && attributes) {
                const content = tag.getAttribute("content");
                if (content) {
                    return content;
                }
            }
        }
        return "";
    }
    function getName() {
        let name = getWindowMetadataOfAny("name", "og:site_name", "og:title", "twitter:title");
        if (!name) {
            name = doc.title;
        }
        return name;
    }
    function getDescription() {
        const description = getWindowMetadataOfAny("description", "og:description", "twitter:description", "keywords");
        return description;
    }
    const name = getName();
    const description = getDescription();
    const url = loc.origin;
    const icons = getIcons();
    const meta = {
        description,
        url,
        icons,
        name,
    };
    return meta;
}
exports.getWindowMetadata = getWindowMetadata;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/base-x/src/esm/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/base-x/src/esm/index.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// base-x encoding / decoding
// Copyright (c) 2018 base-x contributors
// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)
// Distributed under the MIT software license, see the accompanying
// file LICENSE or http://www.opensource.org/licenses/mit-license.php.
function base (ALPHABET) {
  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }
  const BASE_MAP = new Uint8Array(256)
  for (let j = 0; j < BASE_MAP.length; j++) {
    BASE_MAP[j] = 255
  }
  for (let i = 0; i < ALPHABET.length; i++) {
    const x = ALPHABET.charAt(i)
    const xc = x.charCodeAt(0)
    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }
    BASE_MAP[xc] = i
  }
  const BASE = ALPHABET.length
  const LEADER = ALPHABET.charAt(0)
  const FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up
  const iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up
  function encode (source) {
    // eslint-disable-next-line no-empty
    if (source instanceof Uint8Array) { } else if (ArrayBuffer.isView(source)) {
      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)
    } else if (Array.isArray(source)) {
      source = Uint8Array.from(source)
    }
    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }
    if (source.length === 0) { return '' }
    // Skip & count leading zeroes.
    let zeroes = 0
    let length = 0
    let pbegin = 0
    const pend = source.length
    while (pbegin !== pend && source[pbegin] === 0) {
      pbegin++
      zeroes++
    }
    // Allocate enough space in big-endian base58 representation.
    const size = ((pend - pbegin) * iFACTOR + 1) >>> 0
    const b58 = new Uint8Array(size)
    // Process the bytes.
    while (pbegin !== pend) {
      let carry = source[pbegin]
      // Apply "b58 = b58 * 256 + ch".
      let i = 0
      for (let it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {
        carry += (256 * b58[it1]) >>> 0
        b58[it1] = (carry % BASE) >>> 0
        carry = (carry / BASE) >>> 0
      }
      if (carry !== 0) { throw new Error('Non-zero carry') }
      length = i
      pbegin++
    }
    // Skip leading zeroes in base58 result.
    let it2 = size - length
    while (it2 !== size && b58[it2] === 0) {
      it2++
    }
    // Translate the result into a string.
    let str = LEADER.repeat(zeroes)
    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }
    return str
  }
  function decodeUnsafe (source) {
    if (typeof source !== 'string') { throw new TypeError('Expected String') }
    if (source.length === 0) { return new Uint8Array() }
    let psz = 0
    // Skip and count leading '1's.
    let zeroes = 0
    let length = 0
    while (source[psz] === LEADER) {
      zeroes++
      psz++
    }
    // Allocate enough space in big-endian base256 representation.
    const size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.
    const b256 = new Uint8Array(size)
    // Process the characters.
    while (psz < source.length) {
      // Find code of next character
      const charCode = source.charCodeAt(psz)
      // Base map can not be indexed using char code
      if (charCode > 255) { return }
      // Decode character
      let carry = BASE_MAP[charCode]
      // Invalid character
      if (carry === 255) { return }
      let i = 0
      for (let it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {
        carry += (BASE * b256[it3]) >>> 0
        b256[it3] = (carry % 256) >>> 0
        carry = (carry / 256) >>> 0
      }
      if (carry !== 0) { throw new Error('Non-zero carry') }
      length = i
      psz++
    }
    // Skip leading zeroes in b256.
    let it4 = size - length
    while (it4 !== size && b256[it4] === 0) {
      it4++
    }
    const vch = new Uint8Array(zeroes + (size - it4))
    let j = zeroes
    while (it4 !== size) {
      vch[j++] = b256[it4++]
    }
    return vch
  }
  function decode (string) {
    const buffer = decodeUnsafe(string)
    if (buffer) { return buffer }
    throw new Error('Non-base' + BASE + ' character')
  }
  return {
    encode,
    decodeUnsafe,
    decode
  }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (base);


/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/bs58/src/esm/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/bs58/src/esm/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var base_x__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! base-x */ "./node_modules/@walletconnect/sign-client/node_modules/base-x/src/esm/index.js");

var ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,base_x__WEBPACK_IMPORTED_MODULE_0__["default"])(ALPHABET));


/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/detect-browser/es/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/detect-browser/es/index.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BotInfo: () => (/* binding */ BotInfo),
/* harmony export */   BrowserInfo: () => (/* binding */ BrowserInfo),
/* harmony export */   NodeInfo: () => (/* binding */ NodeInfo),
/* harmony export */   ReactNativeInfo: () => (/* binding */ ReactNativeInfo),
/* harmony export */   SearchBotDeviceInfo: () => (/* binding */ SearchBotDeviceInfo),
/* harmony export */   browserName: () => (/* binding */ browserName),
/* harmony export */   detect: () => (/* binding */ detect),
/* harmony export */   detectOS: () => (/* binding */ detectOS),
/* harmony export */   getNodeVersion: () => (/* binding */ getNodeVersion),
/* harmony export */   parseUserAgent: () => (/* binding */ parseUserAgent)
/* harmony export */ });
/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ "./node_modules/process/browser.js");
var __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var BrowserInfo = /** @class */ (function () {
    function BrowserInfo(name, version, os) {
        this.name = name;
        this.version = version;
        this.os = os;
        this.type = 'browser';
    }
    return BrowserInfo;
}());

var NodeInfo = /** @class */ (function () {
    function NodeInfo(version) {
        this.version = version;
        this.type = 'node';
        this.name = 'node';
        this.os = process.platform;
    }
    return NodeInfo;
}());

var SearchBotDeviceInfo = /** @class */ (function () {
    function SearchBotDeviceInfo(name, version, os, bot) {
        this.name = name;
        this.version = version;
        this.os = os;
        this.bot = bot;
        this.type = 'bot-device';
    }
    return SearchBotDeviceInfo;
}());

var BotInfo = /** @class */ (function () {
    function BotInfo() {
        this.type = 'bot';
        this.bot = true; // NOTE: deprecated test name instead
        this.name = 'bot';
        this.version = null;
        this.os = null;
    }
    return BotInfo;
}());

var ReactNativeInfo = /** @class */ (function () {
    function ReactNativeInfo() {
        this.type = 'react-native';
        this.name = 'react-native';
        this.version = null;
        this.os = null;
    }
    return ReactNativeInfo;
}());

// tslint:disable-next-line:max-line-length
var SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;
var SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/;
var REQUIRED_VERSION_PARTS = 3;
var userAgentRules = [
    ['aol', /AOLShield\/([0-9\._]+)/],
    ['edge', /Edge\/([0-9\._]+)/],
    ['edge-ios', /EdgiOS\/([0-9\._]+)/],
    ['yandexbrowser', /YaBrowser\/([0-9\._]+)/],
    ['kakaotalk', /KAKAOTALK\s([0-9\.]+)/],
    ['samsung', /SamsungBrowser\/([0-9\.]+)/],
    ['silk', /\bSilk\/([0-9._-]+)\b/],
    ['miui', /MiuiBrowser\/([0-9\.]+)$/],
    ['beaker', /BeakerBrowser\/([0-9\.]+)/],
    ['edge-chromium', /EdgA?\/([0-9\.]+)/],
    [
        'chromium-webview',
        /(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/,
    ],
    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
    ['phantomjs', /PhantomJS\/([0-9\.]+)(:?\s|$)/],
    ['crios', /CriOS\/([0-9\.]+)(:?\s|$)/],
    ['firefox', /Firefox\/([0-9\.]+)(?:\s|$)/],
    ['fxios', /FxiOS\/([0-9\.]+)/],
    ['opera-mini', /Opera Mini.*Version\/([0-9\.]+)/],
    ['opera', /Opera\/([0-9\.]+)(?:\s|$)/],
    ['opera', /OPR\/([0-9\.]+)(:?\s|$)/],
    ['pie', /^Microsoft Pocket Internet Explorer\/(\d+\.\d+)$/],
    ['pie', /^Mozilla\/\d\.\d+\s\(compatible;\s(?:MSP?IE|MSInternet Explorer) (\d+\.\d+);.*Windows CE.*\)$/],
    ['netfront', /^Mozilla\/\d\.\d+.*NetFront\/(\d.\d)/],
    ['ie', /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],
    ['ie', /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],
    ['ie', /MSIE\s(7\.0)/],
    ['bb10', /BB10;\sTouch.*Version\/([0-9\.]+)/],
    ['android', /Android\s([0-9\.]+)/],
    ['ios', /Version\/([0-9\._]+).*Mobile.*Safari.*/],
    ['safari', /Version\/([0-9\._]+).*Safari/],
    ['facebook', /FB[AS]V\/([0-9\.]+)/],
    ['instagram', /Instagram\s([0-9\.]+)/],
    ['ios-webview', /AppleWebKit\/([0-9\.]+).*Mobile/],
    ['ios-webview', /AppleWebKit\/([0-9\.]+).*Gecko\)$/],
    ['curl', /^curl\/([0-9\.]+)$/],
    ['searchbot', SEARCHBOX_UA_REGEX],
];
var operatingSystemRules = [
    ['iOS', /iP(hone|od|ad)/],
    ['Android OS', /Android/],
    ['BlackBerry OS', /BlackBerry|BB10/],
    ['Windows Mobile', /IEMobile/],
    ['Amazon OS', /Kindle/],
    ['Windows 3.11', /Win16/],
    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],
    ['Windows 98', /(Windows 98)|(Win98)/],
    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],
    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],
    ['Windows Server 2003', /(Windows NT 5.2)/],
    ['Windows Vista', /(Windows NT 6.0)/],
    ['Windows 7', /(Windows NT 6.1)/],
    ['Windows 8', /(Windows NT 6.2)/],
    ['Windows 8.1', /(Windows NT 6.3)/],
    ['Windows 10', /(Windows NT 10.0)/],
    ['Windows ME', /Windows ME/],
    ['Windows CE', /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],
    ['Open BSD', /OpenBSD/],
    ['Sun OS', /SunOS/],
    ['Chrome OS', /CrOS/],
    ['Linux', /(Linux)|(X11)/],
    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],
    ['QNX', /QNX/],
    ['BeOS', /BeOS/],
    ['OS/2', /OS\/2/],
];
function detect(userAgent) {
    if (!!userAgent) {
        return parseUserAgent(userAgent);
    }
    if (typeof document === 'undefined' &&
        typeof navigator !== 'undefined' &&
        navigator.product === 'ReactNative') {
        return new ReactNativeInfo();
    }
    if (typeof navigator !== 'undefined') {
        return parseUserAgent(navigator.userAgent);
    }
    return getNodeVersion();
}
function matchUserAgent(ua) {
    // opted for using reduce here rather than Array#first with a regex.test call
    // this is primarily because using the reduce we only perform the regex
    // execution once rather than once for the test and for the exec again below
    // probably something that needs to be benchmarked though
    return (ua !== '' &&
        userAgentRules.reduce(function (matched, _a) {
            var browser = _a[0], regex = _a[1];
            if (matched) {
                return matched;
            }
            var uaMatch = regex.exec(ua);
            return !!uaMatch && [browser, uaMatch];
        }, false));
}
function browserName(ua) {
    var data = matchUserAgent(ua);
    return data ? data[0] : null;
}
function parseUserAgent(ua) {
    var matchedRule = matchUserAgent(ua);
    if (!matchedRule) {
        return null;
    }
    var name = matchedRule[0], match = matchedRule[1];
    if (name === 'searchbot') {
        return new BotInfo();
    }
    // Do not use RegExp for split operation as some browser do not support it (See: http://blog.stevenlevithan.com/archives/cross-browser-split)
    var versionParts = match[1] && match[1].split('.').join('_').split('_').slice(0, 3);
    if (versionParts) {
        if (versionParts.length < REQUIRED_VERSION_PARTS) {
            versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);
        }
    }
    else {
        versionParts = [];
    }
    var version = versionParts.join('.');
    var os = detectOS(ua);
    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);
    if (searchBotMatch && searchBotMatch[1]) {
        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);
    }
    return new BrowserInfo(name, version, os);
}
function detectOS(ua) {
    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {
        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];
        var match = regex.exec(ua);
        if (match) {
            return os;
        }
    }
    return null;
}
function getNodeVersion() {
    var isNode = typeof process !== 'undefined' && process.version;
    return isNode ? new NodeInfo(process.version.slice(1)) : null;
}
function createVersionParts(count) {
    var output = [];
    for (var ii = 0; ii < count; ii++) {
        output.push('0');
    }
    return output;
}


/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/alloc.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/alloc.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   alloc: () => (/* binding */ alloc),
/* harmony export */   allocUnsafe: () => (/* binding */ allocUnsafe)
/* harmony export */ });
/* harmony import */ var _util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/as-uint8array.js */ "./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/util/as-uint8array.js");

function alloc(size = 0) {
  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {
    return (0,_util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_0__.asUint8Array)(globalThis.Buffer.alloc(size));
  }
  return new Uint8Array(size);
}
function allocUnsafe(size = 0) {
  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {
    return (0,_util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_0__.asUint8Array)(globalThis.Buffer.allocUnsafe(size));
  }
  return new Uint8Array(size);
}

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/compare.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/compare.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   compare: () => (/* binding */ compare)
/* harmony export */ });
function compare(a, b) {
  for (let i = 0; i < a.byteLength; i++) {
    if (a[i] < b[i]) {
      return -1;
    }
    if (a[i] > b[i]) {
      return 1;
    }
  }
  if (a.byteLength > b.byteLength) {
    return 1;
  }
  if (a.byteLength < b.byteLength) {
    return -1;
  }
  return 0;
}

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/concat.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/concat.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   concat: () => (/* binding */ concat)
/* harmony export */ });
/* harmony import */ var _alloc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./alloc.js */ "./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/alloc.js");
/* harmony import */ var _util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/as-uint8array.js */ "./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/util/as-uint8array.js");


function concat(arrays, length) {
  if (!length) {
    length = arrays.reduce((acc, curr) => acc + curr.length, 0);
  }
  const output = (0,_alloc_js__WEBPACK_IMPORTED_MODULE_0__.allocUnsafe)(length);
  let offset = 0;
  for (const arr of arrays) {
    output.set(arr, offset);
    offset += arr.length;
  }
  return (0,_util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_1__.asUint8Array)(output);
}

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/equals.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/equals.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   equals: () => (/* binding */ equals)
/* harmony export */ });
function equals(a, b) {
  if (a === b) {
    return true;
  }
  if (a.byteLength !== b.byteLength) {
    return false;
  }
  for (let i = 0; i < a.byteLength; i++) {
    if (a[i] !== b[i]) {
      return false;
    }
  }
  return true;
}

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/from-string.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/from-string.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   fromString: () => (/* binding */ fromString)
/* harmony export */ });
/* harmony import */ var _util_bases_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/bases.js */ "./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/util/bases.js");
/* harmony import */ var _util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/as-uint8array.js */ "./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/util/as-uint8array.js");


function fromString(string, encoding = 'utf8') {
  const base = _util_bases_js__WEBPACK_IMPORTED_MODULE_0__["default"][encoding];
  if (!base) {
    throw new Error(`Unsupported encoding "${ encoding }"`);
  }
  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return (0,_util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_1__.asUint8Array)(globalThis.Buffer.from(string, 'utf-8'));
  }
  return base.decoder.decode(`${ base.prefix }${ string }`);
}

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/index.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/index.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   compare: () => (/* reexport safe */ _compare_js__WEBPACK_IMPORTED_MODULE_0__.compare),
/* harmony export */   concat: () => (/* reexport safe */ _concat_js__WEBPACK_IMPORTED_MODULE_1__.concat),
/* harmony export */   equals: () => (/* reexport safe */ _equals_js__WEBPACK_IMPORTED_MODULE_2__.equals),
/* harmony export */   fromString: () => (/* reexport safe */ _from_string_js__WEBPACK_IMPORTED_MODULE_3__.fromString),
/* harmony export */   toString: () => (/* reexport safe */ _to_string_js__WEBPACK_IMPORTED_MODULE_4__.toString),
/* harmony export */   xor: () => (/* reexport safe */ _xor_js__WEBPACK_IMPORTED_MODULE_5__.xor)
/* harmony export */ });
/* harmony import */ var _compare_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compare.js */ "./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/compare.js");
/* harmony import */ var _concat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./concat.js */ "./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/concat.js");
/* harmony import */ var _equals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./equals.js */ "./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/equals.js");
/* harmony import */ var _from_string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./from-string.js */ "./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/from-string.js");
/* harmony import */ var _to_string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./to-string.js */ "./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/to-string.js");
/* harmony import */ var _xor_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./xor.js */ "./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/xor.js");








/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/to-string.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/to-string.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   toString: () => (/* binding */ toString)
/* harmony export */ });
/* harmony import */ var _util_bases_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/bases.js */ "./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/util/bases.js");

function toString(array, encoding = 'utf8') {
  const base = _util_bases_js__WEBPACK_IMPORTED_MODULE_0__["default"][encoding];
  if (!base) {
    throw new Error(`Unsupported encoding "${ encoding }"`);
  }
  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');
  }
  return base.encoder.encode(array).substring(1);
}

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/util/as-uint8array.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/util/as-uint8array.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   asUint8Array: () => (/* binding */ asUint8Array)
/* harmony export */ });
function asUint8Array(buf) {
  if (globalThis.Buffer != null) {
    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
  }
  return buf;
}

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/util/bases.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/util/bases.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var multiformats_basics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! multiformats/basics */ "./node_modules/multiformats/esm/src/basics.js");
/* harmony import */ var _alloc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../alloc.js */ "./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/alloc.js");


function createCodec(name, prefix, encode, decode) {
  return {
    name,
    prefix,
    encoder: {
      name,
      prefix,
      encode
    },
    decoder: { decode }
  };
}
const string = createCodec('utf8', 'u', buf => {
  const decoder = new TextDecoder('utf8');
  return 'u' + decoder.decode(buf);
}, str => {
  const encoder = new TextEncoder();
  return encoder.encode(str.substring(1));
});
const ascii = createCodec('ascii', 'a', buf => {
  let string = 'a';
  for (let i = 0; i < buf.length; i++) {
    string += String.fromCharCode(buf[i]);
  }
  return string;
}, str => {
  str = str.substring(1);
  const buf = (0,_alloc_js__WEBPACK_IMPORTED_MODULE_1__.allocUnsafe)(str.length);
  for (let i = 0; i < str.length; i++) {
    buf[i] = str.charCodeAt(i);
  }
  return buf;
});
const BASES = {
  utf8: string,
  'utf-8': string,
  hex: multiformats_basics__WEBPACK_IMPORTED_MODULE_0__.bases.base16,
  latin1: ascii,
  ascii: ascii,
  binary: ascii,
  ...multiformats_basics__WEBPACK_IMPORTED_MODULE_0__.bases
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BASES);

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/xor.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/xor.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   xor: () => (/* binding */ xor)
/* harmony export */ });
/* harmony import */ var _alloc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./alloc.js */ "./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/alloc.js");
/* harmony import */ var _util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/as-uint8array.js */ "./node_modules/@walletconnect/sign-client/node_modules/uint8arrays/esm/src/util/as-uint8array.js");


function xor(a, b) {
  if (a.length !== b.length) {
    throw new Error('Inputs should have the same length');
  }
  const result = (0,_alloc_js__WEBPACK_IMPORTED_MODULE_0__.allocUnsafe)(a.length);
  for (let i = 0; i < a.length; i++) {
    result[i] = a[i] ^ b[i];
  }
  return (0,_util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_1__.asUint8Array)(result);
}

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/accounts/utils/publicKeyToAddress.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/accounts/utils/publicKeyToAddress.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   publicKeyToAddress: () => (/* binding */ publicKeyToAddress)
/* harmony export */ });
/* harmony import */ var _utils_address_getAddress_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/address/getAddress.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/address/getAddress.js");
/* harmony import */ var _utils_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/hash/keccak256.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/hash/keccak256.js");


/**
 * @description Converts an ECDSA public key to an address.
 *
 * @param publicKey The public key to convert.
 *
 * @returns The address.
 */
function publicKeyToAddress(publicKey) {
    const address = (0,_utils_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)(`0x${publicKey.substring(4)}`).substring(26);
    return (0,_utils_address_getAddress_js__WEBPACK_IMPORTED_MODULE_0__.checksumAddress)(`0x${address}`);
}
//# sourceMappingURL=publicKeyToAddress.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/errors/address.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/errors/address.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InvalidAddressError: () => (/* binding */ InvalidAddressError)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/errors/base.js");

class InvalidAddressError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ address }) {
        super(`Address "${address}" is invalid.`, {
            metaMessages: [
                '- Address must be a hex value of 20 bytes (40 hex characters).',
                '- Address must match its checksum counterpart.',
            ],
            name: 'InvalidAddressError',
        });
    }
}
//# sourceMappingURL=address.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/errors/base.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/errors/base.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BaseError: () => (/* binding */ BaseError),
/* harmony export */   setErrorConfig: () => (/* binding */ setErrorConfig)
/* harmony export */ });
/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/errors/version.js");

let errorConfig = {
    getDocsUrl: ({ docsBaseUrl, docsPath = '', docsSlug, }) => docsPath
        ? `${docsBaseUrl ?? 'https://viem.sh'}${docsPath}${docsSlug ? `#${docsSlug}` : ''}`
        : undefined,
    version: `viem@${_version_js__WEBPACK_IMPORTED_MODULE_0__.version}`,
};
function setErrorConfig(config) {
    errorConfig = config;
}
class BaseError extends Error {
    constructor(shortMessage, args = {}) {
        const details = (() => {
            if (args.cause instanceof BaseError)
                return args.cause.details;
            if (args.cause?.message)
                return args.cause.message;
            return args.details;
        })();
        const docsPath = (() => {
            if (args.cause instanceof BaseError)
                return args.cause.docsPath || args.docsPath;
            return args.docsPath;
        })();
        const docsUrl = errorConfig.getDocsUrl?.({ ...args, docsPath });
        const message = [
            shortMessage || 'An error occurred.',
            '',
            ...(args.metaMessages ? [...args.metaMessages, ''] : []),
            ...(docsUrl ? [`Docs: ${docsUrl}`] : []),
            ...(details ? [`Details: ${details}`] : []),
            ...(errorConfig.version ? [`Version: ${errorConfig.version}`] : []),
        ].join('\n');
        super(message, args.cause ? { cause: args.cause } : undefined);
        Object.defineProperty(this, "details", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "docsPath", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "metaMessages", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "shortMessage", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "version", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'BaseError'
        });
        this.details = details;
        this.docsPath = docsPath;
        this.metaMessages = args.metaMessages;
        this.name = args.name ?? this.name;
        this.shortMessage = shortMessage;
        this.version = _version_js__WEBPACK_IMPORTED_MODULE_0__.version;
    }
    walk(fn) {
        return walk(this, fn);
    }
}
function walk(err, fn) {
    if (fn?.(err))
        return err;
    if (err &&
        typeof err === 'object' &&
        'cause' in err &&
        err.cause !== undefined)
        return walk(err.cause, fn);
    return fn ? null : err;
}
//# sourceMappingURL=base.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/errors/data.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/errors/data.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InvalidBytesLengthError: () => (/* binding */ InvalidBytesLengthError),
/* harmony export */   SizeExceedsPaddingSizeError: () => (/* binding */ SizeExceedsPaddingSizeError),
/* harmony export */   SliceOffsetOutOfBoundsError: () => (/* binding */ SliceOffsetOutOfBoundsError)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/errors/base.js");

class SliceOffsetOutOfBoundsError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ offset, position, size, }) {
        super(`Slice ${position === 'start' ? 'starting' : 'ending'} at offset "${offset}" is out-of-bounds (size: ${size}).`, { name: 'SliceOffsetOutOfBoundsError' });
    }
}
class SizeExceedsPaddingSizeError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ size, targetSize, type, }) {
        super(`${type.charAt(0).toUpperCase()}${type
            .slice(1)
            .toLowerCase()} size (${size}) exceeds padding size (${targetSize}).`, { name: 'SizeExceedsPaddingSizeError' });
    }
}
class InvalidBytesLengthError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ size, targetSize, type, }) {
        super(`${type.charAt(0).toUpperCase()}${type
            .slice(1)
            .toLowerCase()} is expected to be ${targetSize} ${type} long, but is ${size} ${type} long.`, { name: 'InvalidBytesLengthError' });
    }
}
//# sourceMappingURL=data.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/errors/encoding.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/errors/encoding.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IntegerOutOfRangeError: () => (/* binding */ IntegerOutOfRangeError),
/* harmony export */   InvalidBytesBooleanError: () => (/* binding */ InvalidBytesBooleanError),
/* harmony export */   InvalidHexBooleanError: () => (/* binding */ InvalidHexBooleanError),
/* harmony export */   InvalidHexValueError: () => (/* binding */ InvalidHexValueError),
/* harmony export */   SizeOverflowError: () => (/* binding */ SizeOverflowError)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/errors/base.js");

class IntegerOutOfRangeError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ max, min, signed, size, value, }) {
        super(`Number "${value}" is not in safe ${size ? `${size * 8}-bit ${signed ? 'signed' : 'unsigned'} ` : ''}integer range ${max ? `(${min} to ${max})` : `(above ${min})`}`, { name: 'IntegerOutOfRangeError' });
    }
}
class InvalidBytesBooleanError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor(bytes) {
        super(`Bytes value "${bytes}" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`, {
            name: 'InvalidBytesBooleanError',
        });
    }
}
class InvalidHexBooleanError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor(hex) {
        super(`Hex value "${hex}" is not a valid boolean. The hex value must be "0x0" (false) or "0x1" (true).`, { name: 'InvalidHexBooleanError' });
    }
}
class InvalidHexValueError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor(value) {
        super(`Hex value "${value}" is an odd length (${value.length}). It must be an even length.`, { name: 'InvalidHexValueError' });
    }
}
class SizeOverflowError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ givenSize, maxSize }) {
        super(`Size cannot exceed ${maxSize} bytes. Given size: ${givenSize} bytes.`, { name: 'SizeOverflowError' });
    }
}
//# sourceMappingURL=encoding.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/errors/version.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/errors/version.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   version: () => (/* binding */ version)
/* harmony export */ });
const version = '2.31.0';
//# sourceMappingURL=version.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/address/getAddress.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/address/getAddress.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   checksumAddress: () => (/* binding */ checksumAddress),
/* harmony export */   getAddress: () => (/* binding */ getAddress)
/* harmony export */ });
/* harmony import */ var _errors_address_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/address.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/errors/address.js");
/* harmony import */ var _encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../encoding/toBytes.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/encoding/toBytes.js");
/* harmony import */ var _hash_keccak256_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hash/keccak256.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/hash/keccak256.js");
/* harmony import */ var _lru_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lru.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/lru.js");
/* harmony import */ var _isAddress_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./isAddress.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/address/isAddress.js");





const checksumAddressCache = /*#__PURE__*/ new _lru_js__WEBPACK_IMPORTED_MODULE_3__.LruMap(8192);
function checksumAddress(address_, 
/**
 * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the
 * wider Ethereum ecosystem, meaning it will break when validated against an application/tool
 * that relies on EIP-55 checksum encoding (checksum without chainId).
 *
 * It is highly recommended to not use this feature unless you
 * know what you are doing.
 *
 * See more: https://github.com/ethereum/EIPs/issues/1121
 */
chainId) {
    if (checksumAddressCache.has(`${address_}.${chainId}`))
        return checksumAddressCache.get(`${address_}.${chainId}`);
    const hexAddress = chainId
        ? `${chainId}${address_.toLowerCase()}`
        : address_.substring(2).toLowerCase();
    const hash = (0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_2__.keccak256)((0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_1__.stringToBytes)(hexAddress), 'bytes');
    const address = (chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress).split('');
    for (let i = 0; i < 40; i += 2) {
        if (hash[i >> 1] >> 4 >= 8 && address[i]) {
            address[i] = address[i].toUpperCase();
        }
        if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {
            address[i + 1] = address[i + 1].toUpperCase();
        }
    }
    const result = `0x${address.join('')}`;
    checksumAddressCache.set(`${address_}.${chainId}`, result);
    return result;
}
function getAddress(address, 
/**
 * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the
 * wider Ethereum ecosystem, meaning it will break when validated against an application/tool
 * that relies on EIP-55 checksum encoding (checksum without chainId).
 *
 * It is highly recommended to not use this feature unless you
 * know what you are doing.
 *
 * See more: https://github.com/ethereum/EIPs/issues/1121
 */
chainId) {
    if (!(0,_isAddress_js__WEBPACK_IMPORTED_MODULE_4__.isAddress)(address, { strict: false }))
        throw new _errors_address_js__WEBPACK_IMPORTED_MODULE_0__.InvalidAddressError({ address });
    return checksumAddress(address, chainId);
}
//# sourceMappingURL=getAddress.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/address/isAddress.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/address/isAddress.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isAddress: () => (/* binding */ isAddress),
/* harmony export */   isAddressCache: () => (/* binding */ isAddressCache)
/* harmony export */ });
/* harmony import */ var _lru_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lru.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/lru.js");
/* harmony import */ var _getAddress_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getAddress.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/address/getAddress.js");


const addressRegex = /^0x[a-fA-F0-9]{40}$/;
/** @internal */
const isAddressCache = /*#__PURE__*/ new _lru_js__WEBPACK_IMPORTED_MODULE_0__.LruMap(8192);
function isAddress(address, options) {
    const { strict = true } = options ?? {};
    const cacheKey = `${address}.${strict}`;
    if (isAddressCache.has(cacheKey))
        return isAddressCache.get(cacheKey);
    const result = (() => {
        if (!addressRegex.test(address))
            return false;
        if (address.toLowerCase() === address)
            return true;
        if (strict)
            return (0,_getAddress_js__WEBPACK_IMPORTED_MODULE_1__.checksumAddress)(address) === address;
        return true;
    })();
    isAddressCache.set(cacheKey, result);
    return result;
}
//# sourceMappingURL=isAddress.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/data/isHex.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/data/isHex.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isHex: () => (/* binding */ isHex)
/* harmony export */ });
function isHex(value, { strict = true } = {}) {
    if (!value)
        return false;
    if (typeof value !== 'string')
        return false;
    return strict ? /^0x[0-9a-fA-F]*$/.test(value) : value.startsWith('0x');
}
//# sourceMappingURL=isHex.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/data/pad.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/data/pad.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   pad: () => (/* binding */ pad),
/* harmony export */   padBytes: () => (/* binding */ padBytes),
/* harmony export */   padHex: () => (/* binding */ padHex)
/* harmony export */ });
/* harmony import */ var _errors_data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/data.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/errors/data.js");

function pad(hexOrBytes, { dir, size = 32 } = {}) {
    if (typeof hexOrBytes === 'string')
        return padHex(hexOrBytes, { dir, size });
    return padBytes(hexOrBytes, { dir, size });
}
function padHex(hex_, { dir, size = 32 } = {}) {
    if (size === null)
        return hex_;
    const hex = hex_.replace('0x', '');
    if (hex.length > size * 2)
        throw new _errors_data_js__WEBPACK_IMPORTED_MODULE_0__.SizeExceedsPaddingSizeError({
            size: Math.ceil(hex.length / 2),
            targetSize: size,
            type: 'hex',
        });
    return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](size * 2, '0')}`;
}
function padBytes(bytes, { dir, size = 32 } = {}) {
    if (size === null)
        return bytes;
    if (bytes.length > size)
        throw new _errors_data_js__WEBPACK_IMPORTED_MODULE_0__.SizeExceedsPaddingSizeError({
            size: bytes.length,
            targetSize: size,
            type: 'bytes',
        });
    const paddedBytes = new Uint8Array(size);
    for (let i = 0; i < size; i++) {
        const padEnd = dir === 'right';
        paddedBytes[padEnd ? i : size - i - 1] =
            bytes[padEnd ? i : bytes.length - i - 1];
    }
    return paddedBytes;
}
//# sourceMappingURL=pad.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/data/size.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/data/size.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   size: () => (/* binding */ size)
/* harmony export */ });
/* harmony import */ var _isHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isHex.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/data/isHex.js");

/**
 * @description Retrieves the size of the value (in bytes).
 *
 * @param value The value (hex or byte array) to retrieve the size of.
 * @returns The size of the value (in bytes).
 */
function size(value) {
    if ((0,_isHex_js__WEBPACK_IMPORTED_MODULE_0__.isHex)(value, { strict: false }))
        return Math.ceil((value.length - 2) / 2);
    return value.length;
}
//# sourceMappingURL=size.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/data/trim.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/data/trim.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   trim: () => (/* binding */ trim)
/* harmony export */ });
function trim(hexOrBytes, { dir = 'left' } = {}) {
    let data = typeof hexOrBytes === 'string' ? hexOrBytes.replace('0x', '') : hexOrBytes;
    let sliceLength = 0;
    for (let i = 0; i < data.length - 1; i++) {
        if (data[dir === 'left' ? i : data.length - i - 1].toString() === '0')
            sliceLength++;
        else
            break;
    }
    data =
        dir === 'left'
            ? data.slice(sliceLength)
            : data.slice(0, data.length - sliceLength);
    if (typeof hexOrBytes === 'string') {
        if (data.length === 1 && dir === 'right')
            data = `${data}0`;
        return `0x${data.length % 2 === 1 ? `0${data}` : data}`;
    }
    return data;
}
//# sourceMappingURL=trim.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/encoding/fromHex.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/encoding/fromHex.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   assertSize: () => (/* binding */ assertSize),
/* harmony export */   fromHex: () => (/* binding */ fromHex),
/* harmony export */   hexToBigInt: () => (/* binding */ hexToBigInt),
/* harmony export */   hexToBool: () => (/* binding */ hexToBool),
/* harmony export */   hexToNumber: () => (/* binding */ hexToNumber),
/* harmony export */   hexToString: () => (/* binding */ hexToString)
/* harmony export */ });
/* harmony import */ var _errors_encoding_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/encoding.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/errors/encoding.js");
/* harmony import */ var _data_size_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/size.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/data/size.js");
/* harmony import */ var _data_trim_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/trim.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/data/trim.js");
/* harmony import */ var _toBytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./toBytes.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/encoding/toBytes.js");




function assertSize(hexOrBytes, { size }) {
    if ((0,_data_size_js__WEBPACK_IMPORTED_MODULE_1__.size)(hexOrBytes) > size)
        throw new _errors_encoding_js__WEBPACK_IMPORTED_MODULE_0__.SizeOverflowError({
            givenSize: (0,_data_size_js__WEBPACK_IMPORTED_MODULE_1__.size)(hexOrBytes),
            maxSize: size,
        });
}
/**
 * Decodes a hex string into a string, number, bigint, boolean, or byte array.
 *
 * - Docs: https://viem.sh/docs/utilities/fromHex
 * - Example: https://viem.sh/docs/utilities/fromHex#usage
 *
 * @param hex Hex string to decode.
 * @param toOrOpts Type to convert to or options.
 * @returns Decoded value.
 *
 * @example
 * import { fromHex } from 'viem'
 * const data = fromHex('0x1a4', 'number')
 * // 420
 *
 * @example
 * import { fromHex } from 'viem'
 * const data = fromHex('0x48656c6c6f20576f726c6421', 'string')
 * // 'Hello world'
 *
 * @example
 * import { fromHex } from 'viem'
 * const data = fromHex('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {
 *   size: 32,
 *   to: 'string'
 * })
 * // 'Hello world'
 */
function fromHex(hex, toOrOpts) {
    const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts;
    const to = opts.to;
    if (to === 'number')
        return hexToNumber(hex, opts);
    if (to === 'bigint')
        return hexToBigInt(hex, opts);
    if (to === 'string')
        return hexToString(hex, opts);
    if (to === 'boolean')
        return hexToBool(hex, opts);
    return (0,_toBytes_js__WEBPACK_IMPORTED_MODULE_3__.hexToBytes)(hex, opts);
}
/**
 * Decodes a hex value into a bigint.
 *
 * - Docs: https://viem.sh/docs/utilities/fromHex#hextobigint
 *
 * @param hex Hex value to decode.
 * @param opts Options.
 * @returns BigInt value.
 *
 * @example
 * import { hexToBigInt } from 'viem'
 * const data = hexToBigInt('0x1a4', { signed: true })
 * // 420n
 *
 * @example
 * import { hexToBigInt } from 'viem'
 * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })
 * // 420n
 */
function hexToBigInt(hex, opts = {}) {
    const { signed } = opts;
    if (opts.size)
        assertSize(hex, { size: opts.size });
    const value = BigInt(hex);
    if (!signed)
        return value;
    const size = (hex.length - 2) / 2;
    const max = (1n << (BigInt(size) * 8n - 1n)) - 1n;
    if (value <= max)
        return value;
    return value - BigInt(`0x${'f'.padStart(size * 2, 'f')}`) - 1n;
}
/**
 * Decodes a hex value into a boolean.
 *
 * - Docs: https://viem.sh/docs/utilities/fromHex#hextobool
 *
 * @param hex Hex value to decode.
 * @param opts Options.
 * @returns Boolean value.
 *
 * @example
 * import { hexToBool } from 'viem'
 * const data = hexToBool('0x01')
 * // true
 *
 * @example
 * import { hexToBool } from 'viem'
 * const data = hexToBool('0x0000000000000000000000000000000000000000000000000000000000000001', { size: 32 })
 * // true
 */
function hexToBool(hex_, opts = {}) {
    let hex = hex_;
    if (opts.size) {
        assertSize(hex, { size: opts.size });
        hex = (0,_data_trim_js__WEBPACK_IMPORTED_MODULE_2__.trim)(hex);
    }
    if ((0,_data_trim_js__WEBPACK_IMPORTED_MODULE_2__.trim)(hex) === '0x00')
        return false;
    if ((0,_data_trim_js__WEBPACK_IMPORTED_MODULE_2__.trim)(hex) === '0x01')
        return true;
    throw new _errors_encoding_js__WEBPACK_IMPORTED_MODULE_0__.InvalidHexBooleanError(hex);
}
/**
 * Decodes a hex string into a number.
 *
 * - Docs: https://viem.sh/docs/utilities/fromHex#hextonumber
 *
 * @param hex Hex value to decode.
 * @param opts Options.
 * @returns Number value.
 *
 * @example
 * import { hexToNumber } from 'viem'
 * const data = hexToNumber('0x1a4')
 * // 420
 *
 * @example
 * import { hexToNumber } from 'viem'
 * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })
 * // 420
 */
function hexToNumber(hex, opts = {}) {
    return Number(hexToBigInt(hex, opts));
}
/**
 * Decodes a hex value into a UTF-8 string.
 *
 * - Docs: https://viem.sh/docs/utilities/fromHex#hextostring
 *
 * @param hex Hex value to decode.
 * @param opts Options.
 * @returns String value.
 *
 * @example
 * import { hexToString } from 'viem'
 * const data = hexToString('0x48656c6c6f20576f726c6421')
 * // 'Hello world!'
 *
 * @example
 * import { hexToString } from 'viem'
 * const data = hexToString('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {
 *  size: 32,
 * })
 * // 'Hello world'
 */
function hexToString(hex, opts = {}) {
    let bytes = (0,_toBytes_js__WEBPACK_IMPORTED_MODULE_3__.hexToBytes)(hex);
    if (opts.size) {
        assertSize(bytes, { size: opts.size });
        bytes = (0,_data_trim_js__WEBPACK_IMPORTED_MODULE_2__.trim)(bytes, { dir: 'right' });
    }
    return new TextDecoder().decode(bytes);
}
//# sourceMappingURL=fromHex.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/encoding/toBytes.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/encoding/toBytes.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   boolToBytes: () => (/* binding */ boolToBytes),
/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),
/* harmony export */   numberToBytes: () => (/* binding */ numberToBytes),
/* harmony export */   stringToBytes: () => (/* binding */ stringToBytes),
/* harmony export */   toBytes: () => (/* binding */ toBytes)
/* harmony export */ });
/* harmony import */ var _errors_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/base.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/errors/base.js");
/* harmony import */ var _data_isHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/isHex.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/data/isHex.js");
/* harmony import */ var _data_pad_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/pad.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/data/pad.js");
/* harmony import */ var _fromHex_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fromHex.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/encoding/fromHex.js");
/* harmony import */ var _toHex_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./toHex.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/encoding/toHex.js");





const encoder = /*#__PURE__*/ new TextEncoder();
/**
 * Encodes a UTF-8 string, hex value, bigint, number or boolean to a byte array.
 *
 * - Docs: https://viem.sh/docs/utilities/toBytes
 * - Example: https://viem.sh/docs/utilities/toBytes#usage
 *
 * @param value Value to encode.
 * @param opts Options.
 * @returns Byte array value.
 *
 * @example
 * import { toBytes } from 'viem'
 * const data = toBytes('Hello world')
 * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])
 *
 * @example
 * import { toBytes } from 'viem'
 * const data = toBytes(420)
 * // Uint8Array([1, 164])
 *
 * @example
 * import { toBytes } from 'viem'
 * const data = toBytes(420, { size: 4 })
 * // Uint8Array([0, 0, 1, 164])
 */
function toBytes(value, opts = {}) {
    if (typeof value === 'number' || typeof value === 'bigint')
        return numberToBytes(value, opts);
    if (typeof value === 'boolean')
        return boolToBytes(value, opts);
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_1__.isHex)(value))
        return hexToBytes(value, opts);
    return stringToBytes(value, opts);
}
/**
 * Encodes a boolean into a byte array.
 *
 * - Docs: https://viem.sh/docs/utilities/toBytes#booltobytes
 *
 * @param value Boolean value to encode.
 * @param opts Options.
 * @returns Byte array value.
 *
 * @example
 * import { boolToBytes } from 'viem'
 * const data = boolToBytes(true)
 * // Uint8Array([1])
 *
 * @example
 * import { boolToBytes } from 'viem'
 * const data = boolToBytes(true, { size: 32 })
 * // Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])
 */
function boolToBytes(value, opts = {}) {
    const bytes = new Uint8Array(1);
    bytes[0] = Number(value);
    if (typeof opts.size === 'number') {
        (0,_fromHex_js__WEBPACK_IMPORTED_MODULE_3__.assertSize)(bytes, { size: opts.size });
        return (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_2__.pad)(bytes, { size: opts.size });
    }
    return bytes;
}
// We use very optimized technique to convert hex string to byte array
const charCodeMap = {
    zero: 48,
    nine: 57,
    A: 65,
    F: 70,
    a: 97,
    f: 102,
};
function charCodeToBase16(char) {
    if (char >= charCodeMap.zero && char <= charCodeMap.nine)
        return char - charCodeMap.zero;
    if (char >= charCodeMap.A && char <= charCodeMap.F)
        return char - (charCodeMap.A - 10);
    if (char >= charCodeMap.a && char <= charCodeMap.f)
        return char - (charCodeMap.a - 10);
    return undefined;
}
/**
 * Encodes a hex string into a byte array.
 *
 * - Docs: https://viem.sh/docs/utilities/toBytes#hextobytes
 *
 * @param hex Hex string to encode.
 * @param opts Options.
 * @returns Byte array value.
 *
 * @example
 * import { hexToBytes } from 'viem'
 * const data = hexToBytes('0x48656c6c6f20776f726c6421')
 * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])
 *
 * @example
 * import { hexToBytes } from 'viem'
 * const data = hexToBytes('0x48656c6c6f20776f726c6421', { size: 32 })
 * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
 */
function hexToBytes(hex_, opts = {}) {
    let hex = hex_;
    if (opts.size) {
        (0,_fromHex_js__WEBPACK_IMPORTED_MODULE_3__.assertSize)(hex, { size: opts.size });
        hex = (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_2__.pad)(hex, { dir: 'right', size: opts.size });
    }
    let hexString = hex.slice(2);
    if (hexString.length % 2)
        hexString = `0${hexString}`;
    const length = hexString.length / 2;
    const bytes = new Uint8Array(length);
    for (let index = 0, j = 0; index < length; index++) {
        const nibbleLeft = charCodeToBase16(hexString.charCodeAt(j++));
        const nibbleRight = charCodeToBase16(hexString.charCodeAt(j++));
        if (nibbleLeft === undefined || nibbleRight === undefined) {
            throw new _errors_base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError(`Invalid byte sequence ("${hexString[j - 2]}${hexString[j - 1]}" in "${hexString}").`);
        }
        bytes[index] = nibbleLeft * 16 + nibbleRight;
    }
    return bytes;
}
/**
 * Encodes a number into a byte array.
 *
 * - Docs: https://viem.sh/docs/utilities/toBytes#numbertobytes
 *
 * @param value Number to encode.
 * @param opts Options.
 * @returns Byte array value.
 *
 * @example
 * import { numberToBytes } from 'viem'
 * const data = numberToBytes(420)
 * // Uint8Array([1, 164])
 *
 * @example
 * import { numberToBytes } from 'viem'
 * const data = numberToBytes(420, { size: 4 })
 * // Uint8Array([0, 0, 1, 164])
 */
function numberToBytes(value, opts) {
    const hex = (0,_toHex_js__WEBPACK_IMPORTED_MODULE_4__.numberToHex)(value, opts);
    return hexToBytes(hex);
}
/**
 * Encodes a UTF-8 string into a byte array.
 *
 * - Docs: https://viem.sh/docs/utilities/toBytes#stringtobytes
 *
 * @param value String to encode.
 * @param opts Options.
 * @returns Byte array value.
 *
 * @example
 * import { stringToBytes } from 'viem'
 * const data = stringToBytes('Hello world!')
 * // Uint8Array([72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 33])
 *
 * @example
 * import { stringToBytes } from 'viem'
 * const data = stringToBytes('Hello world!', { size: 32 })
 * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
 */
function stringToBytes(value, opts = {}) {
    const bytes = encoder.encode(value);
    if (typeof opts.size === 'number') {
        (0,_fromHex_js__WEBPACK_IMPORTED_MODULE_3__.assertSize)(bytes, { size: opts.size });
        return (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_2__.pad)(bytes, { dir: 'right', size: opts.size });
    }
    return bytes;
}
//# sourceMappingURL=toBytes.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/encoding/toHex.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/encoding/toHex.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   boolToHex: () => (/* binding */ boolToHex),
/* harmony export */   bytesToHex: () => (/* binding */ bytesToHex),
/* harmony export */   numberToHex: () => (/* binding */ numberToHex),
/* harmony export */   stringToHex: () => (/* binding */ stringToHex),
/* harmony export */   toHex: () => (/* binding */ toHex)
/* harmony export */ });
/* harmony import */ var _errors_encoding_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/encoding.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/errors/encoding.js");
/* harmony import */ var _data_pad_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/pad.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/data/pad.js");
/* harmony import */ var _fromHex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fromHex.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/encoding/fromHex.js");



const hexes = /*#__PURE__*/ Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'));
/**
 * Encodes a string, number, bigint, or ByteArray into a hex string
 *
 * - Docs: https://viem.sh/docs/utilities/toHex
 * - Example: https://viem.sh/docs/utilities/toHex#usage
 *
 * @param value Value to encode.
 * @param opts Options.
 * @returns Hex value.
 *
 * @example
 * import { toHex } from 'viem'
 * const data = toHex('Hello world')
 * // '0x48656c6c6f20776f726c6421'
 *
 * @example
 * import { toHex } from 'viem'
 * const data = toHex(420)
 * // '0x1a4'
 *
 * @example
 * import { toHex } from 'viem'
 * const data = toHex('Hello world', { size: 32 })
 * // '0x48656c6c6f20776f726c64210000000000000000000000000000000000000000'
 */
function toHex(value, opts = {}) {
    if (typeof value === 'number' || typeof value === 'bigint')
        return numberToHex(value, opts);
    if (typeof value === 'string') {
        return stringToHex(value, opts);
    }
    if (typeof value === 'boolean')
        return boolToHex(value, opts);
    return bytesToHex(value, opts);
}
/**
 * Encodes a boolean into a hex string
 *
 * - Docs: https://viem.sh/docs/utilities/toHex#booltohex
 *
 * @param value Value to encode.
 * @param opts Options.
 * @returns Hex value.
 *
 * @example
 * import { boolToHex } from 'viem'
 * const data = boolToHex(true)
 * // '0x1'
 *
 * @example
 * import { boolToHex } from 'viem'
 * const data = boolToHex(false)
 * // '0x0'
 *
 * @example
 * import { boolToHex } from 'viem'
 * const data = boolToHex(true, { size: 32 })
 * // '0x0000000000000000000000000000000000000000000000000000000000000001'
 */
function boolToHex(value, opts = {}) {
    const hex = `0x${Number(value)}`;
    if (typeof opts.size === 'number') {
        (0,_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.assertSize)(hex, { size: opts.size });
        return (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_1__.pad)(hex, { size: opts.size });
    }
    return hex;
}
/**
 * Encodes a bytes array into a hex string
 *
 * - Docs: https://viem.sh/docs/utilities/toHex#bytestohex
 *
 * @param value Value to encode.
 * @param opts Options.
 * @returns Hex value.
 *
 * @example
 * import { bytesToHex } from 'viem'
 * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])
 * // '0x48656c6c6f20576f726c6421'
 *
 * @example
 * import { bytesToHex } from 'viem'
 * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]), { size: 32 })
 * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'
 */
function bytesToHex(value, opts = {}) {
    let string = '';
    for (let i = 0; i < value.length; i++) {
        string += hexes[value[i]];
    }
    const hex = `0x${string}`;
    if (typeof opts.size === 'number') {
        (0,_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.assertSize)(hex, { size: opts.size });
        return (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_1__.pad)(hex, { dir: 'right', size: opts.size });
    }
    return hex;
}
/**
 * Encodes a number or bigint into a hex string
 *
 * - Docs: https://viem.sh/docs/utilities/toHex#numbertohex
 *
 * @param value Value to encode.
 * @param opts Options.
 * @returns Hex value.
 *
 * @example
 * import { numberToHex } from 'viem'
 * const data = numberToHex(420)
 * // '0x1a4'
 *
 * @example
 * import { numberToHex } from 'viem'
 * const data = numberToHex(420, { size: 32 })
 * // '0x00000000000000000000000000000000000000000000000000000000000001a4'
 */
function numberToHex(value_, opts = {}) {
    const { signed, size } = opts;
    const value = BigInt(value_);
    let maxValue;
    if (size) {
        if (signed)
            maxValue = (1n << (BigInt(size) * 8n - 1n)) - 1n;
        else
            maxValue = 2n ** (BigInt(size) * 8n) - 1n;
    }
    else if (typeof value_ === 'number') {
        maxValue = BigInt(Number.MAX_SAFE_INTEGER);
    }
    const minValue = typeof maxValue === 'bigint' && signed ? -maxValue - 1n : 0;
    if ((maxValue && value > maxValue) || value < minValue) {
        const suffix = typeof value_ === 'bigint' ? 'n' : '';
        throw new _errors_encoding_js__WEBPACK_IMPORTED_MODULE_0__.IntegerOutOfRangeError({
            max: maxValue ? `${maxValue}${suffix}` : undefined,
            min: `${minValue}${suffix}`,
            signed,
            size,
            value: `${value_}${suffix}`,
        });
    }
    const hex = `0x${(signed && value < 0 ? (1n << BigInt(size * 8)) + BigInt(value) : value).toString(16)}`;
    if (size)
        return (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_1__.pad)(hex, { size });
    return hex;
}
const encoder = /*#__PURE__*/ new TextEncoder();
/**
 * Encodes a UTF-8 string into a hex string
 *
 * - Docs: https://viem.sh/docs/utilities/toHex#stringtohex
 *
 * @param value Value to encode.
 * @param opts Options.
 * @returns Hex value.
 *
 * @example
 * import { stringToHex } from 'viem'
 * const data = stringToHex('Hello World!')
 * // '0x48656c6c6f20576f726c6421'
 *
 * @example
 * import { stringToHex } from 'viem'
 * const data = stringToHex('Hello World!', { size: 32 })
 * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'
 */
function stringToHex(value_, opts = {}) {
    const value = encoder.encode(value_);
    return bytesToHex(value, opts);
}
//# sourceMappingURL=toHex.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/hash/keccak256.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/hash/keccak256.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   keccak256: () => (/* binding */ keccak256)
/* harmony export */ });
/* harmony import */ var _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/sha3 */ "./node_modules/@walletconnect/sign-client/node_modules/@noble/hashes/esm/sha3.js");
/* harmony import */ var _data_isHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/isHex.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/data/isHex.js");
/* harmony import */ var _encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../encoding/toBytes.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/encoding/toBytes.js");
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../encoding/toHex.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/encoding/toHex.js");




function keccak256(value, to_) {
    const to = to_ || 'hex';
    const bytes = (0,_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__.keccak_256)((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_1__.isHex)(value, { strict: false }) ? (0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(value) : value);
    if (to === 'bytes')
        return bytes;
    return (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_3__.toHex)(bytes);
}
//# sourceMappingURL=keccak256.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/lru.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/lru.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LruMap: () => (/* binding */ LruMap)
/* harmony export */ });
/**
 * Map with a LRU (Least recently used) policy.
 *
 * @link https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU
 */
class LruMap extends Map {
    constructor(size) {
        super();
        Object.defineProperty(this, "maxSize", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.maxSize = size;
    }
    get(key) {
        const value = super.get(key);
        if (super.has(key) && value !== undefined) {
            this.delete(key);
            super.set(key, value);
        }
        return value;
    }
    set(key, value) {
        super.set(key, value);
        if (this.maxSize && this.size > this.maxSize) {
            const firstKey = this.keys().next().value;
            if (firstKey)
                this.delete(firstKey);
        }
        return this;
    }
}
//# sourceMappingURL=lru.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/signature/recoverAddress.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/signature/recoverAddress.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   recoverAddress: () => (/* binding */ recoverAddress)
/* harmony export */ });
/* harmony import */ var _accounts_utils_publicKeyToAddress_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../accounts/utils/publicKeyToAddress.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/accounts/utils/publicKeyToAddress.js");
/* harmony import */ var _recoverPublicKey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./recoverPublicKey.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/signature/recoverPublicKey.js");


async function recoverAddress({ hash, signature, }) {
    return (0,_accounts_utils_publicKeyToAddress_js__WEBPACK_IMPORTED_MODULE_0__.publicKeyToAddress)(await (0,_recoverPublicKey_js__WEBPACK_IMPORTED_MODULE_1__.recoverPublicKey)({ hash, signature }));
}
//# sourceMappingURL=recoverAddress.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/signature/recoverPublicKey.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/signature/recoverPublicKey.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   recoverPublicKey: () => (/* binding */ recoverPublicKey)
/* harmony export */ });
/* harmony import */ var _data_isHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/isHex.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/data/isHex.js");
/* harmony import */ var _data_size_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/size.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/data/size.js");
/* harmony import */ var _encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../encoding/fromHex.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/encoding/fromHex.js");
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../encoding/toHex.js */ "./node_modules/@walletconnect/sign-client/node_modules/viem/_esm/utils/encoding/toHex.js");




async function recoverPublicKey({ hash, signature, }) {
    const hashHex = (0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_0__.isHex)(hash) ? hash : (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_3__.toHex)(hash);
    const { secp256k1 } = await __webpack_require__.e(/*! import() */ "node_modules_walletconnect_sign-client_node_modules_viem_node_modules_noble_curves_esm_secp256k1_js").then(__webpack_require__.bind(__webpack_require__, /*! @noble/curves/secp256k1 */ "./node_modules/@walletconnect/sign-client/node_modules/viem/node_modules/@noble/curves/esm/secp256k1.js"));
    const signature_ = (() => {
        // typeof signature: `Signature`
        if (typeof signature === 'object' && 'r' in signature && 's' in signature) {
            const { r, s, v, yParity } = signature;
            const yParityOrV = Number(yParity ?? v);
            const recoveryBit = toRecoveryBit(yParityOrV);
            return new secp256k1.Signature((0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.hexToBigInt)(r), (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.hexToBigInt)(s)).addRecoveryBit(recoveryBit);
        }
        // typeof signature: `Hex | ByteArray`
        const signatureHex = (0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_0__.isHex)(signature) ? signature : (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_3__.toHex)(signature);
        if ((0,_data_size_js__WEBPACK_IMPORTED_MODULE_1__.size)(signatureHex) !== 65)
            throw new Error('invalid signature length');
        const yParityOrV = (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.hexToNumber)(`0x${signatureHex.slice(130)}`);
        const recoveryBit = toRecoveryBit(yParityOrV);
        return secp256k1.Signature.fromCompact(signatureHex.substring(2, 130)).addRecoveryBit(recoveryBit);
    })();
    const publicKey = signature_
        .recoverPublicKey(hashHex.substring(2))
        .toHex(false);
    return `0x${publicKey}`;
}
function toRecoveryBit(yParityOrV) {
    if (yParityOrV === 0 || yParityOrV === 1)
        return yParityOrV;
    if (yParityOrV === 27)
        return 0;
    if (yParityOrV === 28)
        return 1;
    throw new Error('Invalid yParityOrV value');
}
//# sourceMappingURL=recoverPublicKey.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/time/dist/cjs/constants/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/constants/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
tslib_1.__exportStar(__webpack_require__(/*! ./misc */ "./node_modules/@walletconnect/time/dist/cjs/constants/misc.js"), exports);
tslib_1.__exportStar(__webpack_require__(/*! ./time */ "./node_modules/@walletconnect/time/dist/cjs/constants/time.js"), exports);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/time/dist/cjs/constants/misc.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/constants/misc.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ONE_THOUSAND = exports.ONE_HUNDRED = void 0;
exports.ONE_HUNDRED = 100;
exports.ONE_THOUSAND = 1000;
//# sourceMappingURL=misc.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/time/dist/cjs/constants/time.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/constants/time.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ONE_YEAR = exports.FOUR_WEEKS = exports.THREE_WEEKS = exports.TWO_WEEKS = exports.ONE_WEEK = exports.THIRTY_DAYS = exports.SEVEN_DAYS = exports.FIVE_DAYS = exports.THREE_DAYS = exports.ONE_DAY = exports.TWENTY_FOUR_HOURS = exports.TWELVE_HOURS = exports.SIX_HOURS = exports.THREE_HOURS = exports.ONE_HOUR = exports.SIXTY_MINUTES = exports.THIRTY_MINUTES = exports.TEN_MINUTES = exports.FIVE_MINUTES = exports.ONE_MINUTE = exports.SIXTY_SECONDS = exports.THIRTY_SECONDS = exports.TEN_SECONDS = exports.FIVE_SECONDS = exports.ONE_SECOND = void 0;
exports.ONE_SECOND = 1;
exports.FIVE_SECONDS = 5;
exports.TEN_SECONDS = 10;
exports.THIRTY_SECONDS = 30;
exports.SIXTY_SECONDS = 60;
exports.ONE_MINUTE = exports.SIXTY_SECONDS;
exports.FIVE_MINUTES = exports.ONE_MINUTE * 5;
exports.TEN_MINUTES = exports.ONE_MINUTE * 10;
exports.THIRTY_MINUTES = exports.ONE_MINUTE * 30;
exports.SIXTY_MINUTES = exports.ONE_MINUTE * 60;
exports.ONE_HOUR = exports.SIXTY_MINUTES;
exports.THREE_HOURS = exports.ONE_HOUR * 3;
exports.SIX_HOURS = exports.ONE_HOUR * 6;
exports.TWELVE_HOURS = exports.ONE_HOUR * 12;
exports.TWENTY_FOUR_HOURS = exports.ONE_HOUR * 24;
exports.ONE_DAY = exports.TWENTY_FOUR_HOURS;
exports.THREE_DAYS = exports.ONE_DAY * 3;
exports.FIVE_DAYS = exports.ONE_DAY * 5;
exports.SEVEN_DAYS = exports.ONE_DAY * 7;
exports.THIRTY_DAYS = exports.ONE_DAY * 30;
exports.ONE_WEEK = exports.SEVEN_DAYS;
exports.TWO_WEEKS = exports.ONE_WEEK * 2;
exports.THREE_WEEKS = exports.ONE_WEEK * 3;
exports.FOUR_WEEKS = exports.ONE_WEEK * 4;
exports.ONE_YEAR = exports.ONE_DAY * 365;
//# sourceMappingURL=time.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/time/dist/cjs/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
tslib_1.__exportStar(__webpack_require__(/*! ./utils */ "./node_modules/@walletconnect/time/dist/cjs/utils/index.js"), exports);
tslib_1.__exportStar(__webpack_require__(/*! ./watch */ "./node_modules/@walletconnect/time/dist/cjs/watch.js"), exports);
tslib_1.__exportStar(__webpack_require__(/*! ./types */ "./node_modules/@walletconnect/time/dist/cjs/types/index.js"), exports);
tslib_1.__exportStar(__webpack_require__(/*! ./constants */ "./node_modules/@walletconnect/time/dist/cjs/constants/index.js"), exports);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/time/dist/cjs/types/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/types/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
tslib_1.__exportStar(__webpack_require__(/*! ./watch */ "./node_modules/@walletconnect/time/dist/cjs/types/watch.js"), exports);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/time/dist/cjs/types/watch.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/types/watch.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.IWatch = void 0;
class IWatch {
}
exports.IWatch = IWatch;
//# sourceMappingURL=watch.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/time/dist/cjs/utils/convert.js":
/*!********************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/utils/convert.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fromMiliseconds = exports.toMiliseconds = void 0;
const constants_1 = __webpack_require__(/*! ../constants */ "./node_modules/@walletconnect/time/dist/cjs/constants/index.js");
function toMiliseconds(seconds) {
    return seconds * constants_1.ONE_THOUSAND;
}
exports.toMiliseconds = toMiliseconds;
function fromMiliseconds(miliseconds) {
    return Math.floor(miliseconds / constants_1.ONE_THOUSAND);
}
exports.fromMiliseconds = fromMiliseconds;
//# sourceMappingURL=convert.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/time/dist/cjs/utils/delay.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/utils/delay.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.delay = void 0;
function delay(timeout) {
    return new Promise(resolve => {
        setTimeout(() => {
            resolve(true);
        }, timeout);
    });
}
exports.delay = delay;
//# sourceMappingURL=delay.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/time/dist/cjs/utils/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/utils/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
tslib_1.__exportStar(__webpack_require__(/*! ./delay */ "./node_modules/@walletconnect/time/dist/cjs/utils/delay.js"), exports);
tslib_1.__exportStar(__webpack_require__(/*! ./convert */ "./node_modules/@walletconnect/time/dist/cjs/utils/convert.js"), exports);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/time/dist/cjs/watch.js":
/*!************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/watch.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Watch = void 0;
class Watch {
    constructor() {
        this.timestamps = new Map();
    }
    start(label) {
        if (this.timestamps.has(label)) {
            throw new Error(`Watch already started for label: ${label}`);
        }
        this.timestamps.set(label, { started: Date.now() });
    }
    stop(label) {
        const timestamp = this.get(label);
        if (typeof timestamp.elapsed !== "undefined") {
            throw new Error(`Watch already stopped for label: ${label}`);
        }
        const elapsed = Date.now() - timestamp.started;
        this.timestamps.set(label, { started: timestamp.started, elapsed });
    }
    get(label) {
        const timestamp = this.timestamps.get(label);
        if (typeof timestamp === "undefined") {
            throw new Error(`No timestamp found for label: ${label}`);
        }
        return timestamp;
    }
    elapsed(label) {
        const timestamp = this.get(label);
        const elapsed = timestamp.elapsed || Date.now() - timestamp.started;
        return elapsed;
    }
}
exports.Watch = Watch;
exports["default"] = Watch;
//# sourceMappingURL=watch.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/dist/index.es.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/dist/index.es.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UniversalProvider: () => (/* binding */ Bs),
/* harmony export */   "default": () => (/* binding */ J)
/* harmony export */ });
/* harmony import */ var _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/sign-client */ "./node_modules/@walletconnect/sign-client/dist/index.es.js");
/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/utils */ "./node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/utils/dist/index.es.js");
/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/logger */ "./node_modules/@walletconnect/logger/dist/index.es.js");
/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ "./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js");
/* harmony import */ var _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @walletconnect/jsonrpc-http-connection */ "./node_modules/@walletconnect/jsonrpc-http-connection/dist/index.es.js");
/* harmony import */ var _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @walletconnect/jsonrpc-provider */ "./node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! events */ "./node_modules/events/events.js");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_6__);
/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js")["Buffer"];
const pe="error",We="wss://relay.walletconnect.org",Ke="wc",Ve="universal_provider",x=`${Ke}@2:${Ve}:`,de="https://rpc.walletconnect.org/v1/",ue="generic",Ye=`${de}bundler`,$="call_status",Xe=86400,m={DEFAULT_CHAIN_CHANGED:"default_chain_changed"};function K(s){return s==null||typeof s!="object"&&typeof s!="function"}function le(s){return Object.getOwnPropertySymbols(s).filter(e=>Object.prototype.propertyIsEnumerable.call(s,e))}function fe(s){return s==null?s===void 0?"[object Undefined]":"[object Null]":Object.prototype.toString.call(s)}const Qe="[object RegExp]",me="[object String]",ve="[object Number]",ge="[object Boolean]",Pe="[object Arguments]",Ze="[object Symbol]",Te="[object Date]",et="[object Map]",tt="[object Set]",st="[object Array]",it="[object ArrayBuffer]",rt="[object Object]",nt="[object DataView]",at="[object Uint8Array]",ct="[object Uint8ClampedArray]",ot="[object Uint16Array]",ht="[object Uint32Array]",pt="[object Int8Array]",dt="[object Int16Array]",ut="[object Int32Array]",lt="[object Float32Array]",ft="[object Float64Array]";function V(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function mt(s,e){return O(s,void 0,s,new Map,e)}function O(s,e,t,i=new Map,n=void 0){const a=n?.(s,e,t,i);if(a!=null)return a;if(K(s))return s;if(i.has(s))return i.get(s);if(Array.isArray(s)){const r=new Array(s.length);i.set(s,r);for(let c=0;c<s.length;c++)r[c]=O(s[c],c,t,i,n);return Object.hasOwn(s,"index")&&(r.index=s.index),Object.hasOwn(s,"input")&&(r.input=s.input),r}if(s instanceof Date)return new Date(s.getTime());if(s instanceof RegExp){const r=new RegExp(s.source,s.flags);return r.lastIndex=s.lastIndex,r}if(s instanceof Map){const r=new Map;i.set(s,r);for(const[c,o]of s)r.set(c,O(o,c,t,i,n));return r}if(s instanceof Set){const r=new Set;i.set(s,r);for(const c of s)r.add(O(c,void 0,t,i,n));return r}if(typeof Buffer<"u"&&Buffer.isBuffer(s))return s.subarray();if(V(s)){const r=new(Object.getPrototypeOf(s)).constructor(s.length);i.set(s,r);for(let c=0;c<s.length;c++)r[c]=O(s[c],c,t,i,n);return r}if(s instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&s instanceof SharedArrayBuffer)return s.slice(0);if(s instanceof DataView){const r=new DataView(s.buffer.slice(0),s.byteOffset,s.byteLength);return i.set(s,r),y(r,s,t,i,n),r}if(typeof File<"u"&&s instanceof File){const r=new File([s],s.name,{type:s.type});return i.set(s,r),y(r,s,t,i,n),r}if(s instanceof Blob){const r=new Blob([s],{type:s.type});return i.set(s,r),y(r,s,t,i,n),r}if(s instanceof Error){const r=new s.constructor;return i.set(s,r),r.message=s.message,r.name=s.name,r.stack=s.stack,r.cause=s.cause,y(r,s,t,i,n),r}if(typeof s=="object"&&vt(s)){const r=Object.create(Object.getPrototypeOf(s));return i.set(s,r),y(r,s,t,i,n),r}return s}function y(s,e,t=s,i,n){const a=[...Object.keys(e),...le(e)];for(let r=0;r<a.length;r++){const c=a[r],o=Object.getOwnPropertyDescriptor(s,c);(o==null||o.writable)&&(s[c]=O(e[c],c,t,i,n))}}function vt(s){switch(fe(s)){case Pe:case st:case it:case nt:case ge:case Te:case lt:case ft:case pt:case dt:case ut:case et:case ve:case rt:case Qe:case tt:case me:case Ze:case at:case ct:case ot:case ht:return!0;default:return!1}}function gt(s,e){return mt(s,(t,i,n,a)=>{const r=e?.(t,i,n,a);if(r!=null)return r;if(typeof s=="object")switch(Object.prototype.toString.call(s)){case ve:case me:case ge:{const c=new s.constructor(s?.valueOf());return y(c,s),c}case Pe:{const c={};return y(c,s),c.length=s.length,c[Symbol.iterator]=s[Symbol.iterator],c}default:return}})}function we(s){return gt(s)}function ye(s){return s!==null&&typeof s=="object"&&fe(s)==="[object Arguments]"}function be(s){return typeof s=="object"&&s!==null}function Pt(){}function wt(s){return V(s)}function yt(s){if(typeof s!="object"||s==null)return!1;if(Object.getPrototypeOf(s)===null)return!0;if(Object.prototype.toString.call(s)!=="[object Object]"){const t=s[Symbol.toStringTag];return t==null||!Object.getOwnPropertyDescriptor(s,Symbol.toStringTag)?.writable?!1:s.toString()===`[object ${t}]`}let e=s;for(;Object.getPrototypeOf(e)!==null;)e=Object.getPrototypeOf(e);return Object.getPrototypeOf(s)===e}function bt(s){if(K(s))return s;if(Array.isArray(s)||V(s)||s instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&s instanceof SharedArrayBuffer)return s.slice(0);const e=Object.getPrototypeOf(s),t=e.constructor;if(s instanceof Date||s instanceof Map||s instanceof Set)return new t(s);if(s instanceof RegExp){const i=new t(s);return i.lastIndex=s.lastIndex,i}if(s instanceof DataView)return new t(s.buffer.slice(0));if(s instanceof Error){const i=new t(s.message);return i.stack=s.stack,i.name=s.name,i.cause=s.cause,i}if(typeof File<"u"&&s instanceof File)return new t([s],s.name,{type:s.type,lastModified:s.lastModified});if(typeof s=="object"){const i=Object.create(e);return Object.assign(i,s)}return s}function It(s,...e){const t=e.slice(0,-1),i=e[e.length-1];let n=s;for(let a=0;a<t.length;a++){const r=t[a];n=L(n,r,i,new Map)}return n}function L(s,e,t,i){if(K(s)&&(s=Object(s)),e==null||typeof e!="object")return s;if(i.has(e))return bt(i.get(e));if(i.set(e,s),Array.isArray(e)){e=e.slice();for(let a=0;a<e.length;a++)e[a]=e[a]??void 0}const n=[...Object.keys(e),...le(e)];for(let a=0;a<n.length;a++){const r=n[a];let c=e[r],o=s[r];if(ye(c)&&(c={...c}),ye(o)&&(o={...o}),typeof Buffer<"u"&&Buffer.isBuffer(c)&&(c=we(c)),Array.isArray(c))if(typeof o=="object"&&o!=null){const u=[],p=Reflect.ownKeys(o);for(let w=0;w<p.length;w++){const l=p[w];u[l]=o[l]}o=u}else o=[];const d=t(o,c,r,s,e,i);d!=null?s[r]=d:Array.isArray(c)||be(o)&&be(c)?s[r]=L(o,c,t,i):o==null&&yt(c)?s[r]=L({},c,t,i):o==null&&wt(c)?s[r]=we(c):(o===void 0||c!==void 0)&&(s[r]=c)}return s}function $t(s,...e){return It(s,...e,Pt)}var Ot=Object.defineProperty,Ct=Object.defineProperties,At=Object.getOwnPropertyDescriptors,Ie=Object.getOwnPropertySymbols,Et=Object.prototype.hasOwnProperty,Ht=Object.prototype.propertyIsEnumerable,$e=(s,e,t)=>e in s?Ot(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,M=(s,e)=>{for(var t in e||(e={}))Et.call(e,t)&&$e(s,t,e[t]);if(Ie)for(var t of Ie(e))Ht.call(e,t)&&$e(s,t,e[t]);return s},St=(s,e)=>Ct(s,At(e));function f(s,e,t){var i;const n=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.parseChainId)(s);return((i=e.rpcMap)==null?void 0:i[n.reference])||`${de}?chainId=${n.namespace}:${n.reference}&projectId=${t}`}function b(s){return s.includes(":")?s.split(":")[1]:s}function Oe(s){return s.map(e=>`${e.split(":")[0]}:${e.split(":")[1]}`)}function Nt(s,e){const t=Object.keys(e.namespaces).filter(n=>n.includes(s));if(!t.length)return[];const i=[];return t.forEach(n=>{const a=e.namespaces[n].accounts;i.push(...a)}),i}function Ce(s){return Object.fromEntries(Object.entries(s).filter(([e,t])=>{var i,n;return((i=t?.chains)==null?void 0:i.length)&&((n=t?.chains)==null?void 0:n.length)>0}))}function B(s={},e={}){const t=Ce(Ae(s)),i=Ce(Ae(e));return $t(t,i)}function Ae(s){var e,t,i,n,a;const r={};if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.isValidObject)(s))return r;for(const[c,o]of Object.entries(s)){const d=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.isCaipNamespace)(c)?[c]:o.chains,u=o.methods||[],p=o.events||[],w=o.rpcMap||{},l=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.parseNamespaceKey)(c);r[l]=St(M(M({},r[l]),o),{chains:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.mergeArrays)(d,(e=r[l])==null?void 0:e.chains),methods:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.mergeArrays)(u,(t=r[l])==null?void 0:t.methods),events:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.mergeArrays)(p,(i=r[l])==null?void 0:i.events)}),((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.isValidObject)(w)||(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.isValidObject)(((n=r[l])==null?void 0:n.rpcMap)||{}))&&(r[l].rpcMap=M(M({},w),(a=r[l])==null?void 0:a.rpcMap))}return r}function Ee(s){return s.includes(":")?s.split(":")[2]:s}function He(s){const e={};for(const[t,i]of Object.entries(s)){const n=i.methods||[],a=i.events||[],r=i.accounts||[],c=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.isCaipNamespace)(t)?[t]:i.chains?i.chains:Oe(i.accounts);e[t]={chains:c,methods:n,events:a,accounts:r}}return e}function Y(s){return typeof s=="number"?s:s.includes("0x")?parseInt(s,16):(s=s.includes(":")?s.split(":")[1]:s,isNaN(Number(s))?s:Number(s))}function qt(s){try{const e=JSON.parse(s);return typeof e=="object"&&e!==null&&!Array.isArray(e)}catch{return!1}}const Se={},h=s=>Se[s],X=(s,e)=>{Se[s]=e};var Dt=Object.defineProperty,Ne=Object.getOwnPropertySymbols,jt=Object.prototype.hasOwnProperty,Rt=Object.prototype.propertyIsEnumerable,qe=(s,e,t)=>e in s?Dt(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,De=(s,e)=>{for(var t in e||(e={}))jt.call(e,t)&&qe(s,t,e[t]);if(Ne)for(var t of Ne(e))Rt.call(e,t)&&qe(s,t,e[t]);return s};const je="eip155",_t=["atomic","flow-control","paymasterService","sessionKeys","auxiliaryFunds"],Ft=s=>s&&s.startsWith("0x")?BigInt(s).toString(10):s,Q=s=>s&&s.startsWith("0x")?s:`0x${BigInt(s).toString(16)}`,Re=s=>Object.keys(s).filter(e=>_t.includes(e)).reduce((e,t)=>(e[t]=Ut(s[t]),e),{}),Ut=s=>typeof s=="string"&&qt(s)?JSON.parse(s):s,xt=(s,e,t)=>{const{sessionProperties:i={},scopedProperties:n={}}=s,a={};if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.isValidObject)(n)&&!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.isValidObject)(i))return;const r=Re(i);for(const c of t){const o=Ft(c);if(!o)continue;a[Q(o)]=r;const d=n?.[`${je}:${o}`];if(d){const u=d?.[`${je}:${o}:${e}`];a[Q(o)]=De(De({},a[Q(o)]),Re(u||d))}}for(const[c,o]of Object.entries(a))Object.keys(o).length===0&&delete a[c];return Object.keys(a).length>0?a:void 0};var Lt=Object.defineProperty,Mt=(s,e,t)=>e in s?Lt(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,Bt=(s,e,t)=>Mt(s,typeof e!="symbol"?e+"":e,t);let Z;class re{constructor(e){Bt(this,"storage"),this.storage=e}async getItem(e){return await this.storage.getItem(e)}async setItem(e,t){return await this.storage.setItem(e,t)}async removeItem(e){return await this.storage.removeItem(e)}static getStorage(e){return Z||(Z=new re(e)),Z}}var Gt=Object.defineProperty,Jt=Object.defineProperties,zt=Object.getOwnPropertyDescriptors,_e=Object.getOwnPropertySymbols,kt=Object.prototype.hasOwnProperty,Wt=Object.prototype.propertyIsEnumerable,Fe=(s,e,t)=>e in s?Gt(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,Kt=(s,e)=>{for(var t in e||(e={}))kt.call(e,t)&&Fe(s,t,e[t]);if(_e)for(var t of _e(e))Wt.call(e,t)&&Fe(s,t,e[t]);return s},Vt=(s,e)=>Jt(s,zt(e));async function Yt(s,e){const t=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.parseChainId)(s.result.capabilities.caip345.caip2),i=s.result.capabilities.caip345.transactionHashes,n=await Promise.allSettled(i.map(p=>Xt(t.reference,p,e))),a=n.filter(p=>p.status==="fulfilled").map(p=>p.value).filter(p=>p);n.filter(p=>p.status==="rejected").forEach(p=>console.warn("Failed to fetch transaction receipt:",p.reason));const r=!a.length||a.some(p=>!p),c=a.every(p=>p?.status==="0x1"),o=a.every(p=>p?.status==="0x0"),d=a.some(p=>p?.status==="0x0");let u;return r?u=100:c?u=200:o?u=500:d&&(u=600),{id:s.result.id,version:s.request.version,atomic:s.request.atomicRequired,chainId:s.request.chainId,capabilities:s.result.capabilities,receipts:a,status:u}}async function Xt(s,e,t){return await t(parseInt(s)).request((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest)("eth_getTransactionReceipt",[e]))}async function Qt({sendCalls:s,storage:e}){const t=await e.getItem($);await e.setItem($,Vt(Kt({},t),{[s.result.id]:{request:s.request,result:s.result,expiry:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.calcExpiry)(Xe)}}))}async function Zt({resultId:s,storage:e}){const t=await e.getItem($);if(t){delete t[s],await e.setItem($,t);for(const i in t)(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.isExpired)(t[i].expiry)&&delete t[i];await e.setItem($,t)}}async function Tt({resultId:s,storage:e}){const t=await e.getItem($),i=t?.[s];if(i&&!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.isExpired)(i.expiry))return i;await Zt({resultId:s,storage:e})}var es=Object.defineProperty,ts=(s,e,t)=>e in s?es(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,C=(s,e,t)=>ts(s,typeof e!="symbol"?e+"":e,t);class ss{constructor(e){C(this,"name","polkadot"),C(this,"client"),C(this,"httpProviders"),C(this,"events"),C(this,"namespace"),C(this,"chainId"),this.namespace=e.namespace,this.events=h("events"),this.client=h("client"),this.chainId=this.getDefaultChain(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}requestAccounts(){return this.getAccounts()}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;const e=this.namespace.chains[0];if(!e)throw new Error("ChainId not found");return e.split(":")[1]}request(e){return this.namespace.methods.includes(e.request.method)?this.client.request(e):this.getHttpProvider().request(e.request)}setDefaultChain(e,t){this.httpProviders[e]||this.setHttpProvider(e,t),this.chainId=e,this.events.emit(m.DEFAULT_CHAIN_CHANGED,`${this.name}:${e}`)}getAccounts(){const e=this.namespace.accounts;return e?e.filter(t=>t.split(":")[1]===this.chainId.toString()).map(t=>t.split(":")[2])||[]:[]}createHttpProviders(){const e={};return this.namespace.chains.forEach(t=>{var i;const n=b(t);e[n]=this.createHttpProvider(n,(i=this.namespace.rpcMap)==null?void 0:i[t])}),e}getHttpProvider(){const e=`${this.name}:${this.chainId}`,t=this.httpProviders[e];if(typeof t>"u")throw new Error(`JSON-RPC provider for ${e} not found`);return t}setHttpProvider(e,t){const i=this.createHttpProvider(e,t);i&&(this.httpProviders[e]=i)}createHttpProvider(e,t){const i=t||f(e,this.namespace,this.client.core.projectId);if(!i)throw new Error(`No RPC url provided for chainId: ${e}`);return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_5__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_4__["default"](i,h("disableProviderPing")))}}var is=Object.defineProperty,rs=Object.defineProperties,ns=Object.getOwnPropertyDescriptors,Ue=Object.getOwnPropertySymbols,as=Object.prototype.hasOwnProperty,cs=Object.prototype.propertyIsEnumerable,T=(s,e,t)=>e in s?is(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,ee=(s,e)=>{for(var t in e||(e={}))as.call(e,t)&&T(s,t,e[t]);if(Ue)for(var t of Ue(e))cs.call(e,t)&&T(s,t,e[t]);return s},te=(s,e)=>rs(s,ns(e)),I=(s,e,t)=>T(s,typeof e!="symbol"?e+"":e,t);class os{constructor(e){I(this,"name","eip155"),I(this,"client"),I(this,"chainId"),I(this,"namespace"),I(this,"httpProviders"),I(this,"events"),I(this,"storage"),this.namespace=e.namespace,this.events=h("events"),this.client=h("client"),this.httpProviders=this.createHttpProviders(),this.chainId=parseInt(this.getDefaultChain()),this.storage=re.getStorage(this.client.core.storage)}async request(e){switch(e.request.method){case"eth_requestAccounts":return this.getAccounts();case"eth_accounts":return this.getAccounts();case"wallet_switchEthereumChain":return await this.handleSwitchChain(e);case"eth_chainId":return parseInt(this.getDefaultChain());case"wallet_getCapabilities":return await this.getCapabilities(e);case"wallet_getCallsStatus":return await this.getCallStatus(e);case"wallet_sendCalls":return await this.sendCalls(e)}return this.namespace.methods.includes(e.request.method)?await this.client.request(e):this.getHttpProvider().request(e.request)}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}setDefaultChain(e,t){this.httpProviders[e]||this.setHttpProvider(parseInt(e),t),this.chainId=parseInt(e),this.events.emit(m.DEFAULT_CHAIN_CHANGED,`${this.name}:${e}`)}requestAccounts(){return this.getAccounts()}getDefaultChain(){if(this.chainId)return this.chainId.toString();if(this.namespace.defaultChain)return this.namespace.defaultChain;const e=this.namespace.chains[0];if(!e)throw new Error("ChainId not found");return e.split(":")[1]}createHttpProvider(e,t){const i=t||f(`${this.name}:${e}`,this.namespace,this.client.core.projectId);if(!i)throw new Error(`No RPC url provided for chainId: ${e}`);return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_5__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_4__.HttpConnection(i,h("disableProviderPing")))}setHttpProvider(e,t){const i=this.createHttpProvider(e,t);i&&(this.httpProviders[e]=i)}createHttpProviders(){const e={};return this.namespace.chains.forEach(t=>{var i;const n=parseInt(b(t));e[n]=this.createHttpProvider(n,(i=this.namespace.rpcMap)==null?void 0:i[t])}),e}getAccounts(){const e=this.namespace.accounts;return e?[...new Set(e.filter(t=>t.split(":")[1]===this.chainId.toString()).map(t=>t.split(":")[2]))]:[]}getHttpProvider(e){const t=e||this.chainId;return this.httpProviders[t]||(this.httpProviders=te(ee({},this.httpProviders),{[t]:this.createHttpProvider(t)}),this.httpProviders[t])}async handleSwitchChain(e){var t,i;let n=e.request.params?(t=e.request.params[0])==null?void 0:t.chainId:"0x0";n=n.startsWith("0x")?n:`0x${n}`;const a=parseInt(n,16);if(this.isChainApproved(a))this.setDefaultChain(`${a}`);else if(this.namespace.methods.includes("wallet_switchEthereumChain"))await this.client.request({topic:e.topic,request:{method:e.request.method,params:[{chainId:n}]},chainId:(i=this.namespace.chains)==null?void 0:i[0]}),this.setDefaultChain(`${a}`);else throw new Error(`Failed to switch to chain 'eip155:${a}'. The chain is not approved or the wallet does not support 'wallet_switchEthereumChain' method.`);return null}isChainApproved(e){return this.namespace.chains.includes(`${this.name}:${e}`)}async getCapabilities(e){var t,i,n,a,r;const c=(i=(t=e.request)==null?void 0:t.params)==null?void 0:i[0],o=((a=(n=e.request)==null?void 0:n.params)==null?void 0:a[1])||[];if(!c)throw new Error("Missing address parameter in `wallet_getCapabilities` request");const d=this.client.session.get(e.topic),u=((r=d?.sessionProperties)==null?void 0:r.capabilities)||{},p=`${c}${o.join(",")}`,w=u?.[p];if(w)return w;let l;try{l=xt(d,c,o)}catch(z){console.warn("Failed to extract capabilities from session",z)}if(l)return l;const ne=await this.client.request(e);try{await this.client.session.update(e.topic,{sessionProperties:te(ee({},d.sessionProperties||{}),{capabilities:te(ee({},u||{}),{[p]:ne})})})}catch(z){console.warn("Failed to update session with capabilities",z)}return ne}async getCallStatus(e){var t,i,n;const a=this.client.session.get(e.topic),r=(t=a.sessionProperties)==null?void 0:t.bundler_name;if(r){const d=this.getBundlerUrl(e.chainId,r);try{return await this.getUserOperationReceipt(d,e)}catch(u){console.warn("Failed to fetch call status from bundler",u,d)}}const c=(i=a.sessionProperties)==null?void 0:i.bundler_url;if(c)try{return await this.getUserOperationReceipt(c,e)}catch(d){console.warn("Failed to fetch call status from custom bundler",d,c)}const o=await Tt({resultId:(n=e.request.params)==null?void 0:n[0],storage:this.storage});if(o)try{return await Yt(o,this.getHttpProvider.bind(this))}catch(d){console.warn("Failed to fetch call status from stored send calls",d,o)}if(this.namespace.methods.includes(e.request.method))return await this.client.request(e);throw new Error("Fetching call status not approved by the wallet.")}async getUserOperationReceipt(e,t){var i;const n=new URL(e),a=await fetch(n,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest)("eth_getUserOperationReceipt",[(i=t.request.params)==null?void 0:i[0]]))});if(!a.ok)throw new Error(`Failed to fetch user operation receipt - ${a.status}`);return await a.json()}getBundlerUrl(e,t){return`${Ye}?projectId=${this.client.core.projectId}&chainId=${e}&bundler=${t}`}async sendCalls(e){var t,i,n;const a=await this.client.request(e),r=(t=e.request.params)==null?void 0:t[0],c=a?.id,o=a?.capabilities||{},d=(i=o?.caip345)==null?void 0:i.caip2,u=(n=o?.caip345)==null?void 0:n.transactionHashes;return!c||!d||!(u!=null&&u.length)||await Qt({sendCalls:{request:r,result:a},storage:this.storage}),a}}var hs=Object.defineProperty,ps=(s,e,t)=>e in s?hs(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,A=(s,e,t)=>ps(s,typeof e!="symbol"?e+"":e,t);class ds{constructor(e){A(this,"name","solana"),A(this,"client"),A(this,"httpProviders"),A(this,"events"),A(this,"namespace"),A(this,"chainId"),this.namespace=e.namespace,this.events=h("events"),this.client=h("client"),this.chainId=this.getDefaultChain(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}requestAccounts(){return this.getAccounts()}request(e){return this.namespace.methods.includes(e.request.method)?this.client.request(e):this.getHttpProvider().request(e.request)}setDefaultChain(e,t){this.httpProviders[e]||this.setHttpProvider(e,t),this.chainId=e,this.events.emit(m.DEFAULT_CHAIN_CHANGED,`${this.name}:${e}`)}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;const e=this.namespace.chains[0];if(!e)throw new Error("ChainId not found");return e.split(":")[1]}getAccounts(){const e=this.namespace.accounts;return e?[...new Set(e.filter(t=>t.split(":")[1]===this.chainId.toString()).map(t=>t.split(":")[2]))]:[]}createHttpProviders(){const e={};return this.namespace.chains.forEach(t=>{var i;const n=b(t);e[n]=this.createHttpProvider(n,(i=this.namespace.rpcMap)==null?void 0:i[t])}),e}getHttpProvider(){const e=`${this.name}:${this.chainId}`,t=this.httpProviders[e];if(typeof t>"u")throw new Error(`JSON-RPC provider for ${e} not found`);return t}setHttpProvider(e,t){const i=this.createHttpProvider(e,t);i&&(this.httpProviders[e]=i)}createHttpProvider(e,t){const i=t||f(e,this.namespace,this.client.core.projectId);if(!i)throw new Error(`No RPC url provided for chainId: ${e}`);return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_5__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_4__["default"](i,h("disableProviderPing")))}}var us=Object.defineProperty,ls=(s,e,t)=>e in s?us(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,E=(s,e,t)=>ls(s,typeof e!="symbol"?e+"":e,t);class fs{constructor(e){E(this,"name","cosmos"),E(this,"client"),E(this,"httpProviders"),E(this,"events"),E(this,"namespace"),E(this,"chainId"),this.namespace=e.namespace,this.events=h("events"),this.client=h("client"),this.chainId=this.getDefaultChain(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}requestAccounts(){return this.getAccounts()}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;const e=this.namespace.chains[0];if(!e)throw new Error("ChainId not found");return e.split(":")[1]}request(e){return this.namespace.methods.includes(e.request.method)?this.client.request(e):this.getHttpProvider().request(e.request)}setDefaultChain(e,t){this.httpProviders[e]||this.setHttpProvider(e,t),this.chainId=e,this.events.emit(m.DEFAULT_CHAIN_CHANGED,`${this.name}:${this.chainId}`)}getAccounts(){const e=this.namespace.accounts;return e?[...new Set(e.filter(t=>t.split(":")[1]===this.chainId.toString()).map(t=>t.split(":")[2]))]:[]}createHttpProviders(){const e={};return this.namespace.chains.forEach(t=>{var i;const n=b(t);e[n]=this.createHttpProvider(n,(i=this.namespace.rpcMap)==null?void 0:i[t])}),e}getHttpProvider(){const e=`${this.name}:${this.chainId}`,t=this.httpProviders[e];if(typeof t>"u")throw new Error(`JSON-RPC provider for ${e} not found`);return t}setHttpProvider(e,t){const i=this.createHttpProvider(e,t);i&&(this.httpProviders[e]=i)}createHttpProvider(e,t){const i=t||f(e,this.namespace,this.client.core.projectId);if(!i)throw new Error(`No RPC url provided for chainId: ${e}`);return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_5__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_4__["default"](i,h("disableProviderPing")))}}var ms=Object.defineProperty,vs=(s,e,t)=>e in s?ms(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,H=(s,e,t)=>vs(s,typeof e!="symbol"?e+"":e,t);class gs{constructor(e){H(this,"name","algorand"),H(this,"client"),H(this,"httpProviders"),H(this,"events"),H(this,"namespace"),H(this,"chainId"),this.namespace=e.namespace,this.events=h("events"),this.client=h("client"),this.chainId=this.getDefaultChain(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}requestAccounts(){return this.getAccounts()}request(e){return this.namespace.methods.includes(e.request.method)?this.client.request(e):this.getHttpProvider().request(e.request)}setDefaultChain(e,t){if(!this.httpProviders[e]){const i=t||f(`${this.name}:${e}`,this.namespace,this.client.core.projectId);if(!i)throw new Error(`No RPC url provided for chainId: ${e}`);this.setHttpProvider(e,i)}this.chainId=e,this.events.emit(m.DEFAULT_CHAIN_CHANGED,`${this.name}:${this.chainId}`)}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;const e=this.namespace.chains[0];if(!e)throw new Error("ChainId not found");return e.split(":")[1]}getAccounts(){const e=this.namespace.accounts;return e?[...new Set(e.filter(t=>t.split(":")[1]===this.chainId.toString()).map(t=>t.split(":")[2]))]:[]}createHttpProviders(){const e={};return this.namespace.chains.forEach(t=>{var i;e[t]=this.createHttpProvider(t,(i=this.namespace.rpcMap)==null?void 0:i[t])}),e}getHttpProvider(){const e=`${this.name}:${this.chainId}`,t=this.httpProviders[e];if(typeof t>"u")throw new Error(`JSON-RPC provider for ${e} not found`);return t}setHttpProvider(e,t){const i=this.createHttpProvider(e,t);i&&(this.httpProviders[e]=i)}createHttpProvider(e,t){const i=t||f(e,this.namespace,this.client.core.projectId);return typeof i>"u"?void 0:new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_5__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_4__["default"](i,h("disableProviderPing")))}}var Ps=Object.defineProperty,ws=(s,e,t)=>e in s?Ps(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,S=(s,e,t)=>ws(s,typeof e!="symbol"?e+"":e,t);class ys{constructor(e){S(this,"name","cip34"),S(this,"client"),S(this,"httpProviders"),S(this,"events"),S(this,"namespace"),S(this,"chainId"),this.namespace=e.namespace,this.events=h("events"),this.client=h("client"),this.chainId=this.getDefaultChain(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}requestAccounts(){return this.getAccounts()}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;const e=this.namespace.chains[0];if(!e)throw new Error("ChainId not found");return e.split(":")[1]}request(e){return this.namespace.methods.includes(e.request.method)?this.client.request(e):this.getHttpProvider().request(e.request)}setDefaultChain(e,t){this.httpProviders[e]||this.setHttpProvider(e,t),this.chainId=e,this.events.emit(m.DEFAULT_CHAIN_CHANGED,`${this.name}:${this.chainId}`)}getAccounts(){const e=this.namespace.accounts;return e?[...new Set(e.filter(t=>t.split(":")[1]===this.chainId.toString()).map(t=>t.split(":")[2]))]:[]}createHttpProviders(){const e={};return this.namespace.chains.forEach(t=>{const i=this.getCardanoRPCUrl(t),n=b(t);e[n]=this.createHttpProvider(n,i)}),e}getHttpProvider(){const e=`${this.name}:${this.chainId}`,t=this.httpProviders[e];if(typeof t>"u")throw new Error(`JSON-RPC provider for ${e} not found`);return t}getCardanoRPCUrl(e){const t=this.namespace.rpcMap;if(t)return t[e]}setHttpProvider(e,t){const i=this.createHttpProvider(e,t);i&&(this.httpProviders[e]=i)}createHttpProvider(e,t){const i=t||this.getCardanoRPCUrl(e);if(!i)throw new Error(`No RPC url provided for chainId: ${e}`);return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_5__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_4__["default"](i,h("disableProviderPing")))}}var bs=Object.defineProperty,Is=(s,e,t)=>e in s?bs(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,N=(s,e,t)=>Is(s,typeof e!="symbol"?e+"":e,t);class $s{constructor(e){N(this,"name","elrond"),N(this,"client"),N(this,"httpProviders"),N(this,"events"),N(this,"namespace"),N(this,"chainId"),this.namespace=e.namespace,this.events=h("events"),this.client=h("client"),this.chainId=this.getDefaultChain(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}requestAccounts(){return this.getAccounts()}request(e){return this.namespace.methods.includes(e.request.method)?this.client.request(e):this.getHttpProvider().request(e.request)}setDefaultChain(e,t){this.httpProviders[e]||this.setHttpProvider(e,t),this.chainId=e,this.events.emit(m.DEFAULT_CHAIN_CHANGED,`${this.name}:${e}`)}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;const e=this.namespace.chains[0];if(!e)throw new Error("ChainId not found");return e.split(":")[1]}getAccounts(){const e=this.namespace.accounts;return e?[...new Set(e.filter(t=>t.split(":")[1]===this.chainId.toString()).map(t=>t.split(":")[2]))]:[]}createHttpProviders(){const e={};return this.namespace.chains.forEach(t=>{var i;const n=b(t);e[n]=this.createHttpProvider(n,(i=this.namespace.rpcMap)==null?void 0:i[t])}),e}getHttpProvider(){const e=`${this.name}:${this.chainId}`,t=this.httpProviders[e];if(typeof t>"u")throw new Error(`JSON-RPC provider for ${e} not found`);return t}setHttpProvider(e,t){const i=this.createHttpProvider(e,t);i&&(this.httpProviders[e]=i)}createHttpProvider(e,t){const i=t||f(e,this.namespace,this.client.core.projectId);if(!i)throw new Error(`No RPC url provided for chainId: ${e}`);return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_5__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_4__["default"](i,h("disableProviderPing")))}}var Os=Object.defineProperty,Cs=(s,e,t)=>e in s?Os(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,q=(s,e,t)=>Cs(s,typeof e!="symbol"?e+"":e,t);class As{constructor(e){q(this,"name","multiversx"),q(this,"client"),q(this,"httpProviders"),q(this,"events"),q(this,"namespace"),q(this,"chainId"),this.namespace=e.namespace,this.events=h("events"),this.client=h("client"),this.chainId=this.getDefaultChain(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}requestAccounts(){return this.getAccounts()}request(e){return this.namespace.methods.includes(e.request.method)?this.client.request(e):this.getHttpProvider().request(e.request)}setDefaultChain(e,t){this.httpProviders[e]||this.setHttpProvider(e,t),this.chainId=e,this.events.emit(m.DEFAULT_CHAIN_CHANGED,`${this.name}:${e}`)}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;const e=this.namespace.chains[0];if(!e)throw new Error("ChainId not found");return e.split(":")[1]}getAccounts(){const e=this.namespace.accounts;return e?[...new Set(e.filter(t=>t.split(":")[1]===this.chainId.toString()).map(t=>t.split(":")[2]))]:[]}createHttpProviders(){const e={};return this.namespace.chains.forEach(t=>{var i;const n=b(t);e[n]=this.createHttpProvider(n,(i=this.namespace.rpcMap)==null?void 0:i[t])}),e}getHttpProvider(){const e=`${this.name}:${this.chainId}`,t=this.httpProviders[e];if(typeof t>"u")throw new Error(`JSON-RPC provider for ${e} not found`);return t}setHttpProvider(e,t){const i=this.createHttpProvider(e,t);i&&(this.httpProviders[e]=i)}createHttpProvider(e,t){const i=t||f(e,this.namespace,this.client.core.projectId);if(!i)throw new Error(`No RPC url provided for chainId: ${e}`);return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_5__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_4__["default"](i,h("disableProviderPing")))}}var Es=Object.defineProperty,Hs=(s,e,t)=>e in s?Es(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,D=(s,e,t)=>Hs(s,typeof e!="symbol"?e+"":e,t);class Ss{constructor(e){D(this,"name","near"),D(this,"client"),D(this,"httpProviders"),D(this,"events"),D(this,"namespace"),D(this,"chainId"),this.namespace=e.namespace,this.events=h("events"),this.client=h("client"),this.chainId=this.getDefaultChain(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}requestAccounts(){return this.getAccounts()}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;const e=this.namespace.chains[0];if(!e)throw new Error("ChainId not found");return e.split(":")[1]}request(e){return this.namespace.methods.includes(e.request.method)?this.client.request(e):this.getHttpProvider().request(e.request)}setDefaultChain(e,t){if(this.chainId=e,!this.httpProviders[e]){const i=t||f(`${this.name}:${e}`,this.namespace);if(!i)throw new Error(`No RPC url provided for chainId: ${e}`);this.setHttpProvider(e,i)}this.events.emit(m.DEFAULT_CHAIN_CHANGED,`${this.name}:${this.chainId}`)}getAccounts(){const e=this.namespace.accounts;return e?e.filter(t=>t.split(":")[1]===this.chainId.toString()).map(t=>t.split(":")[2])||[]:[]}createHttpProviders(){const e={};return this.namespace.chains.forEach(t=>{var i;e[t]=this.createHttpProvider(t,(i=this.namespace.rpcMap)==null?void 0:i[t])}),e}getHttpProvider(){const e=`${this.name}:${this.chainId}`,t=this.httpProviders[e];if(typeof t>"u")throw new Error(`JSON-RPC provider for ${e} not found`);return t}setHttpProvider(e,t){const i=this.createHttpProvider(e,t);i&&(this.httpProviders[e]=i)}createHttpProvider(e,t){const i=t||f(e,this.namespace);return typeof i>"u"?void 0:new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_5__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_4__["default"](i,h("disableProviderPing")))}}var Ns=Object.defineProperty,qs=(s,e,t)=>e in s?Ns(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,j=(s,e,t)=>qs(s,typeof e!="symbol"?e+"":e,t);class Ds{constructor(e){j(this,"name","tezos"),j(this,"client"),j(this,"httpProviders"),j(this,"events"),j(this,"namespace"),j(this,"chainId"),this.namespace=e.namespace,this.events=h("events"),this.client=h("client"),this.chainId=this.getDefaultChain(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}requestAccounts(){return this.getAccounts()}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;const e=this.namespace.chains[0];if(!e)throw new Error("ChainId not found");return e.split(":")[1]}request(e){return this.namespace.methods.includes(e.request.method)?this.client.request(e):this.getHttpProvider().request(e.request)}setDefaultChain(e,t){if(this.chainId=e,!this.httpProviders[e]){const i=t||f(`${this.name}:${e}`,this.namespace);if(!i)throw new Error(`No RPC url provided for chainId: ${e}`);this.setHttpProvider(e,i)}this.events.emit(m.DEFAULT_CHAIN_CHANGED,`${this.name}:${this.chainId}`)}getAccounts(){const e=this.namespace.accounts;return e?e.filter(t=>t.split(":")[1]===this.chainId.toString()).map(t=>t.split(":")[2])||[]:[]}createHttpProviders(){const e={};return this.namespace.chains.forEach(t=>{e[t]=this.createHttpProvider(t)}),e}getHttpProvider(){const e=`${this.name}:${this.chainId}`,t=this.httpProviders[e];if(typeof t>"u")throw new Error(`JSON-RPC provider for ${e} not found`);return t}setHttpProvider(e,t){const i=this.createHttpProvider(e,t);i&&(this.httpProviders[e]=i)}createHttpProvider(e,t){const i=t||f(e,this.namespace);return typeof i>"u"?void 0:new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_5__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_4__["default"](i))}}var js=Object.defineProperty,Rs=(s,e,t)=>e in s?js(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,R=(s,e,t)=>Rs(s,typeof e!="symbol"?e+"":e,t);class _s{constructor(e){R(this,"name",ue),R(this,"client"),R(this,"httpProviders"),R(this,"events"),R(this,"namespace"),R(this,"chainId"),this.namespace=e.namespace,this.events=h("events"),this.client=h("client"),this.chainId=this.getDefaultChain(),this.name=this.getNamespaceName(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace.chains=[...new Set((this.namespace.chains||[]).concat(e.chains||[]))],this.namespace.accounts=[...new Set((this.namespace.accounts||[]).concat(e.accounts||[]))],this.namespace.methods=[...new Set((this.namespace.methods||[]).concat(e.methods||[]))],this.namespace.events=[...new Set((this.namespace.events||[]).concat(e.events||[]))],this.httpProviders=this.createHttpProviders()}requestAccounts(){return this.getAccounts()}request(e){return this.namespace.methods.includes(e.request.method)?this.client.request(e):this.getHttpProvider(e.chainId).request(e.request)}setDefaultChain(e,t){this.httpProviders[e]||this.setHttpProvider(e,t),this.chainId=e,this.events.emit(m.DEFAULT_CHAIN_CHANGED,`${this.name}:${e}`)}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;const e=this.namespace.chains[0];if(!e)throw new Error("ChainId not found");return e.split(":")[1]}getNamespaceName(){const e=this.namespace.chains[0];if(!e)throw new Error("ChainId not found");return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.parseChainId)(e).namespace}getAccounts(){const e=this.namespace.accounts;return e?[...new Set(e.filter(t=>t.split(":")[1]===this.chainId.toString()).map(t=>t.split(":")[2]))]:[]}createHttpProviders(){var e,t;const i={};return(t=(e=this.namespace)==null?void 0:e.accounts)==null||t.forEach(n=>{const a=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.parseChainId)(n);i[a.reference]=this.createHttpProvider(n)}),i}getHttpProvider(e){const t=this.httpProviders[e];if(typeof t>"u")throw new Error(`JSON-RPC provider for ${e} not found`);return t}setHttpProvider(e,t){const i=this.createHttpProvider(e,t);i&&(this.httpProviders[e]=i)}createHttpProvider(e,t){const i=t||f(e,this.namespace,this.client.core.projectId);if(!i)throw new Error(`No RPC url provided for chainId: ${e}`);return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_5__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_4__["default"](i,h("disableProviderPing")))}}var Fs=Object.defineProperty,Us=Object.defineProperties,xs=Object.getOwnPropertyDescriptors,xe=Object.getOwnPropertySymbols,Ls=Object.prototype.hasOwnProperty,Ms=Object.prototype.propertyIsEnumerable,se=(s,e,t)=>e in s?Fs(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,G=(s,e)=>{for(var t in e||(e={}))Ls.call(e,t)&&se(s,t,e[t]);if(xe)for(var t of xe(e))Ms.call(e,t)&&se(s,t,e[t]);return s},ie=(s,e)=>Us(s,xs(e)),v=(s,e,t)=>se(s,typeof e!="symbol"?e+"":e,t);class J{constructor(e){v(this,"client"),v(this,"namespaces"),v(this,"optionalNamespaces"),v(this,"sessionProperties"),v(this,"scopedProperties"),v(this,"events",new (events__WEBPACK_IMPORTED_MODULE_6___default())),v(this,"rpcProviders",{}),v(this,"session"),v(this,"providerOpts"),v(this,"logger"),v(this,"uri"),v(this,"disableProviderPing",!1),this.providerOpts=e,this.logger=typeof e?.logger<"u"&&typeof e?.logger!="string"?e.logger:(0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_2__.pino)((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_2__.getDefaultLoggerOptions)({level:e?.logger||pe})),this.disableProviderPing=e?.disableProviderPing||!1}static async init(e){const t=new J(e);return await t.initialize(),t}async request(e,t,i){const[n,a]=this.validateChain(t);if(!this.session)throw new Error("Please call connect() before request()");return await this.getProvider(n).request({request:G({},e),chainId:`${n}:${a}`,topic:this.session.topic,expiry:i})}sendAsync(e,t,i,n){const a=new Date().getTime();this.request(e,i,n).then(r=>t(null,(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcResult)(a,r))).catch(r=>t(r,void 0))}async enable(){if(!this.client)throw new Error("Sign Client not initialized");return this.session||await this.connect({namespaces:this.namespaces,optionalNamespaces:this.optionalNamespaces,sessionProperties:this.sessionProperties,scopedProperties:this.scopedProperties}),await this.requestAccounts()}async disconnect(){var e;if(!this.session)throw new Error("Please call connect() before enable()");await this.client.disconnect({topic:(e=this.session)==null?void 0:e.topic,reason:(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.getSdkError)("USER_DISCONNECTED")}),await this.cleanup()}async connect(e){if(!this.client)throw new Error("Sign Client not initialized");if(this.setNamespaces(e),this.cleanupPendingPairings(),!e.skipPairing)return await this.pair(e.pairingTopic)}async authenticate(e,t){if(!this.client)throw new Error("Sign Client not initialized");this.setNamespaces(e),await this.cleanupPendingPairings();const{uri:i,response:n}=await this.client.authenticate(e,t);i&&(this.uri=i,this.events.emit("display_uri",i));const a=await n();if(this.session=a.session,this.session){const r=He(this.session.namespaces);this.namespaces=B(this.namespaces,r),await this.persist("namespaces",this.namespaces),this.onConnect()}return a}on(e,t){this.events.on(e,t)}once(e,t){this.events.once(e,t)}removeListener(e,t){this.events.removeListener(e,t)}off(e,t){this.events.off(e,t)}get isWalletConnect(){return!0}async pair(e){const{uri:t,approval:i}=await this.client.connect({pairingTopic:e,requiredNamespaces:this.namespaces,optionalNamespaces:this.optionalNamespaces,sessionProperties:this.sessionProperties,scopedProperties:this.scopedProperties});t&&(this.uri=t,this.events.emit("display_uri",t));const n=await i();this.session=n;const a=He(n.namespaces);return this.namespaces=B(this.namespaces,a),await this.persist("namespaces",this.namespaces),await this.persist("optionalNamespaces",this.optionalNamespaces),this.onConnect(),this.session}setDefaultChain(e,t){try{if(!this.session)return;const[i,n]=this.validateChain(e);this.getProvider(i).setDefaultChain(n,t)}catch(i){if(!/Please call connect/.test(i.message))throw i}}async cleanupPendingPairings(e={}){try{this.logger.info("Cleaning up inactive pairings...");const t=this.client.pairing.getAll();if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.isValidArray)(t))return;for(const i of t)e.deletePairings?this.client.core.expirer.set(i.topic,0):await this.client.core.relayer.subscriber.unsubscribe(i.topic);this.logger.info(`Inactive pairings cleared: ${t.length}`)}catch(t){this.logger.warn("Failed to cleanup pending pairings",t)}}abortPairingAttempt(){this.logger.warn("abortPairingAttempt is deprecated. This is now a no-op.")}async checkStorage(){this.namespaces=await this.getFromStore("namespaces")||{},this.optionalNamespaces=await this.getFromStore("optionalNamespaces")||{},this.session&&this.createProviders()}async initialize(){this.logger.trace("Initialized"),await this.createClient(),await this.checkStorage(),this.registerEventListeners()}async createClient(){var e,t;if(this.client=this.providerOpts.client||await _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_0__["default"].init({core:this.providerOpts.core,logger:this.providerOpts.logger||pe,relayUrl:this.providerOpts.relayUrl||We,projectId:this.providerOpts.projectId,metadata:this.providerOpts.metadata,storageOptions:this.providerOpts.storageOptions,storage:this.providerOpts.storage,name:this.providerOpts.name,customStoragePrefix:this.providerOpts.customStoragePrefix,telemetryEnabled:this.providerOpts.telemetryEnabled}),this.providerOpts.session)try{this.session=this.client.session.get(this.providerOpts.session.topic)}catch(i){throw this.logger.error("Failed to get session",i),new Error(`The provided session: ${(t=(e=this.providerOpts)==null?void 0:e.session)==null?void 0:t.topic} doesn't exist in the Sign client`)}else{const i=this.client.session.getAll();this.session=i[0]}this.logger.trace("SignClient Initialized")}createProviders(){if(!this.client)throw new Error("Sign Client not initialized");if(!this.session)throw new Error("Session not initialized. Please call connect() before enable()");const e=[...new Set(Object.keys(this.session.namespaces).map(t=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.parseNamespaceKey)(t)))];X("client",this.client),X("events",this.events),X("disableProviderPing",this.disableProviderPing),e.forEach(t=>{if(!this.session)return;const i=Nt(t,this.session);if(i?.length===0)return;const n=Oe(i),a=B(this.namespaces,this.optionalNamespaces),r=ie(G({},a[t]),{accounts:i,chains:n});switch(t){case"eip155":this.rpcProviders[t]=new os({namespace:r});break;case"algorand":this.rpcProviders[t]=new gs({namespace:r});break;case"solana":this.rpcProviders[t]=new ds({namespace:r});break;case"cosmos":this.rpcProviders[t]=new fs({namespace:r});break;case"polkadot":this.rpcProviders[t]=new ss({namespace:r});break;case"cip34":this.rpcProviders[t]=new ys({namespace:r});break;case"elrond":this.rpcProviders[t]=new $s({namespace:r});break;case"multiversx":this.rpcProviders[t]=new As({namespace:r});break;case"near":this.rpcProviders[t]=new Ss({namespace:r});break;case"tezos":this.rpcProviders[t]=new Ds({namespace:r});break;default:this.rpcProviders[t]=new _s({namespace:r})}})}registerEventListeners(){if(typeof this.client>"u")throw new Error("Sign Client is not initialized");this.client.on("session_ping",e=>{var t;const{topic:i}=e;i===((t=this.session)==null?void 0:t.topic)&&this.events.emit("session_ping",e)}),this.client.on("session_event",e=>{var t;const{params:i,topic:n}=e;if(n!==((t=this.session)==null?void 0:t.topic))return;const{event:a}=i;if(a.name==="accountsChanged"){const r=a.data;r&&(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.isValidArray)(r)&&this.events.emit("accountsChanged",r.map(Ee))}else if(a.name==="chainChanged"){const r=i.chainId,c=i.event.data,o=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.parseNamespaceKey)(r),d=Y(r)!==Y(c)?`${o}:${Y(c)}`:r;this.onChainChanged(d)}else this.events.emit(a.name,a.data);this.events.emit("session_event",e)}),this.client.on("session_update",({topic:e,params:t})=>{var i,n;if(e!==((i=this.session)==null?void 0:i.topic))return;const{namespaces:a}=t,r=(n=this.client)==null?void 0:n.session.get(e);this.session=ie(G({},r),{namespaces:a}),this.onSessionUpdate(),this.events.emit("session_update",{topic:e,params:t})}),this.client.on("session_delete",async e=>{var t;e.topic===((t=this.session)==null?void 0:t.topic)&&(await this.cleanup(),this.events.emit("session_delete",e),this.events.emit("disconnect",ie(G({},(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.getSdkError)("USER_DISCONNECTED")),{data:e.topic})))}),this.on(m.DEFAULT_CHAIN_CHANGED,e=>{this.onChainChanged(e,!0)})}getProvider(e){return this.rpcProviders[e]||this.rpcProviders[ue]}onSessionUpdate(){Object.keys(this.rpcProviders).forEach(e=>{var t;this.getProvider(e).updateNamespace((t=this.session)==null?void 0:t.namespaces[e])})}setNamespaces(e){const{namespaces:t={},optionalNamespaces:i={},sessionProperties:n,scopedProperties:a}=e;this.optionalNamespaces=B(t,i),this.sessionProperties=n,this.scopedProperties=a}validateChain(e){const[t,i]=e?.split(":")||["",""];if(!this.namespaces||!Object.keys(this.namespaces).length)return[t,i];if(t&&!Object.keys(this.namespaces||{}).map(r=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.parseNamespaceKey)(r)).includes(t))throw new Error(`Namespace '${t}' is not configured. Please call connect() first with namespace config.`);if(t&&i)return[t,i];const n=(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.parseNamespaceKey)(Object.keys(this.namespaces)[0]),a=this.rpcProviders[n].getDefaultChain();return[n,a]}async requestAccounts(){const[e]=this.validateChain();return await this.getProvider(e).requestAccounts()}async onChainChanged(e,t=!1){if(!this.namespaces)return;const[i,n]=this.validateChain(e);if(!n)return;this.updateNamespaceChain(i,n);const a=this.getProvider(i).getDefaultChain();t?(this.events.emit("chainChanged",n),this.emitAccountsChangedOnChainChange({namespace:i,previousChainId:a,newChainId:e})):this.getProvider(i).setDefaultChain(n),await this.persist("namespaces",this.namespaces)}emitAccountsChangedOnChainChange({namespace:e,previousChainId:t,newChainId:i}){var n,a;try{if(t===i)return;const r=(a=(n=this.session)==null?void 0:n.namespaces[e])==null?void 0:a.accounts;if(!r)return;const c=r.filter(o=>o.includes(`${i}:`)).map(Ee);if(!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_1__.isValidArray)(c))return;this.events.emit("accountsChanged",c)}catch(r){this.logger.warn("Failed to emit accountsChanged on chain change",r)}}updateNamespaceChain(e,t){if(!this.namespaces)return;const i=this.namespaces[e]?e:`${e}:${t}`,n={chains:[],methods:[],events:[],defaultChain:t};this.namespaces[i]?this.namespaces[i]&&(this.namespaces[i].defaultChain=t):this.namespaces[i]=n}onConnect(){this.createProviders(),this.events.emit("connect",{session:this.session})}async cleanup(){this.namespaces=void 0,this.optionalNamespaces=void 0,this.sessionProperties=void 0,await this.deleteFromStore("namespaces"),await this.deleteFromStore("optionalNamespaces"),await this.deleteFromStore("sessionProperties"),this.session=void 0,this.cleanupPendingPairings({deletePairings:!0}),await this.cleanupStorage()}async persist(e,t){var i;const n=((i=this.session)==null?void 0:i.topic)||"";await this.client.core.storage.setItem(`${x}/${e}${n}`,t)}async getFromStore(e){var t;const i=((t=this.session)==null?void 0:t.topic)||"";return await this.client.core.storage.getItem(`${x}/${e}${i}`)}async deleteFromStore(e){var t;const i=((t=this.session)==null?void 0:t.topic)||"";await this.client.core.storage.removeItem(`${x}/${e}${i}`)}async cleanupStorage(){var e;try{if(((e=this.client)==null?void 0:e.session.length)>0)return;const t=await this.client.core.storage.getKeys();for(const i of t)i.startsWith(x)&&await this.client.core.storage.removeItem(i)}catch(t){this.logger.warn("Failed to cleanup storage",t)}}}const Bs=J;
//# sourceMappingURL=index.es.js.map


/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/@noble/hashes/esm/_u64.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/@noble/hashes/esm/_u64.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   add: () => (/* binding */ add),
/* harmony export */   add3H: () => (/* binding */ add3H),
/* harmony export */   add3L: () => (/* binding */ add3L),
/* harmony export */   add4H: () => (/* binding */ add4H),
/* harmony export */   add4L: () => (/* binding */ add4L),
/* harmony export */   add5H: () => (/* binding */ add5H),
/* harmony export */   add5L: () => (/* binding */ add5L),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   fromBig: () => (/* binding */ fromBig),
/* harmony export */   rotlBH: () => (/* binding */ rotlBH),
/* harmony export */   rotlBL: () => (/* binding */ rotlBL),
/* harmony export */   rotlSH: () => (/* binding */ rotlSH),
/* harmony export */   rotlSL: () => (/* binding */ rotlSL),
/* harmony export */   rotr32H: () => (/* binding */ rotr32H),
/* harmony export */   rotr32L: () => (/* binding */ rotr32L),
/* harmony export */   rotrBH: () => (/* binding */ rotrBH),
/* harmony export */   rotrBL: () => (/* binding */ rotrBL),
/* harmony export */   rotrSH: () => (/* binding */ rotrSH),
/* harmony export */   rotrSL: () => (/* binding */ rotrSL),
/* harmony export */   shrSH: () => (/* binding */ shrSH),
/* harmony export */   shrSL: () => (/* binding */ shrSL),
/* harmony export */   split: () => (/* binding */ split),
/* harmony export */   toBig: () => (/* binding */ toBig)
/* harmony export */ });
/**
 * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.
 * @todo re-check https://issues.chromium.org/issues/42212588
 * @module
 */
const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);
const _32n = /* @__PURE__ */ BigInt(32);
function fromBig(n, le = false) {
    if (le)
        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };
    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };
}
function split(lst, le = false) {
    const len = lst.length;
    let Ah = new Uint32Array(len);
    let Al = new Uint32Array(len);
    for (let i = 0; i < len; i++) {
        const { h, l } = fromBig(lst[i], le);
        [Ah[i], Al[i]] = [h, l];
    }
    return [Ah, Al];
}
const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);
// for Shift in [0, 32)
const shrSH = (h, _l, s) => h >>> s;
const shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);
// Right rotate for Shift in [1, 32)
const rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));
const rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);
// Right rotate for Shift in (32, 64), NOTE: 32 is special case.
const rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));
const rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));
// Right rotate for shift===32 (just swaps l&h)
const rotr32H = (_h, l) => l;
const rotr32L = (h, _l) => h;
// Left rotate for Shift in [1, 32)
const rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));
const rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));
// Left rotate for Shift in (32, 64), NOTE: 32 is special case.
const rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));
const rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));
// JS uses 32-bit signed integers for bitwise operations which means we cannot
// simple take carry out of low bit sum by shift, we need to use division.
function add(Ah, Al, Bh, Bl) {
    const l = (Al >>> 0) + (Bl >>> 0);
    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };
}
// Addition with more than 2 elements
const add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);
const add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;
const add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);
const add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;
const add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);
const add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;
// prettier-ignore

// prettier-ignore
const u64 = {
    fromBig, split, toBig,
    shrSH, shrSL,
    rotrSH, rotrSL, rotrBH, rotrBL,
    rotr32H, rotr32L,
    rotlSH, rotlSL, rotlBH, rotlBL,
    add, add3L, add3H, add4L, add4H, add5H, add5L,
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (u64);
//# sourceMappingURL=_u64.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/@noble/hashes/esm/crypto.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/@noble/hashes/esm/crypto.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   crypto: () => (/* binding */ crypto)
/* harmony export */ });
const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;
//# sourceMappingURL=crypto.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/@noble/hashes/esm/sha3.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/@noble/hashes/esm/sha3.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Keccak: () => (/* binding */ Keccak),
/* harmony export */   keccakP: () => (/* binding */ keccakP),
/* harmony export */   keccak_224: () => (/* binding */ keccak_224),
/* harmony export */   keccak_256: () => (/* binding */ keccak_256),
/* harmony export */   keccak_384: () => (/* binding */ keccak_384),
/* harmony export */   keccak_512: () => (/* binding */ keccak_512),
/* harmony export */   sha3_224: () => (/* binding */ sha3_224),
/* harmony export */   sha3_256: () => (/* binding */ sha3_256),
/* harmony export */   sha3_384: () => (/* binding */ sha3_384),
/* harmony export */   sha3_512: () => (/* binding */ sha3_512),
/* harmony export */   shake128: () => (/* binding */ shake128),
/* harmony export */   shake256: () => (/* binding */ shake256)
/* harmony export */ });
/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_u64.js */ "./node_modules/@walletconnect/universal-provider/node_modules/@noble/hashes/esm/_u64.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ "./node_modules/@walletconnect/universal-provider/node_modules/@noble/hashes/esm/utils.js");
/**
 * SHA3 (keccak) hash function, based on a new "Sponge function" design.
 * Different from older hashes, the internal state is bigger than output size.
 *
 * Check out [FIPS-202](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf),
 * [Website](https://keccak.team/keccak.html),
 * [the differences between SHA-3 and Keccak](https://crypto.stackexchange.com/questions/15727/what-are-the-key-differences-between-the-draft-sha-3-standard-and-the-keccak-sub).
 *
 * Check out `sha3-addons` module for cSHAKE, k12, and others.
 * @module
 */

// prettier-ignore

// No __PURE__ annotations in sha3 header:
// EVERYTHING is in fact used on every export.
// Various per round constants calculations
const _0n = BigInt(0);
const _1n = BigInt(1);
const _2n = BigInt(2);
const _7n = BigInt(7);
const _256n = BigInt(256);
const _0x71n = BigInt(0x71);
const SHA3_PI = [];
const SHA3_ROTL = [];
const _SHA3_IOTA = [];
for (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {
    // Pi
    [x, y] = [y, (2 * x + 3 * y) % 5];
    SHA3_PI.push(2 * (5 * y + x));
    // Rotational
    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);
    // Iota
    let t = _0n;
    for (let j = 0; j < 7; j++) {
        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;
        if (R & _2n)
            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);
    }
    _SHA3_IOTA.push(t);
}
const IOTAS = (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.split)(_SHA3_IOTA, true);
const SHA3_IOTA_H = IOTAS[0];
const SHA3_IOTA_L = IOTAS[1];
// Left rotation (without 0, 32, 64)
const rotlH = (h, l, s) => (s > 32 ? (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlBH)(h, l, s) : (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlSH)(h, l, s));
const rotlL = (h, l, s) => (s > 32 ? (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlBL)(h, l, s) : (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlSL)(h, l, s));
/** `keccakf1600` internal function, additionally allows to adjust round count. */
function keccakP(s, rounds = 24) {
    const B = new Uint32Array(5 * 2);
    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)
    for (let round = 24 - rounds; round < 24; round++) {
        // Theta θ
        for (let x = 0; x < 10; x++)
            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];
        for (let x = 0; x < 10; x += 2) {
            const idx1 = (x + 8) % 10;
            const idx0 = (x + 2) % 10;
            const B0 = B[idx0];
            const B1 = B[idx0 + 1];
            const Th = rotlH(B0, B1, 1) ^ B[idx1];
            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];
            for (let y = 0; y < 50; y += 10) {
                s[x + y] ^= Th;
                s[x + y + 1] ^= Tl;
            }
        }
        // Rho (ρ) and Pi (π)
        let curH = s[2];
        let curL = s[3];
        for (let t = 0; t < 24; t++) {
            const shift = SHA3_ROTL[t];
            const Th = rotlH(curH, curL, shift);
            const Tl = rotlL(curH, curL, shift);
            const PI = SHA3_PI[t];
            curH = s[PI];
            curL = s[PI + 1];
            s[PI] = Th;
            s[PI + 1] = Tl;
        }
        // Chi (χ)
        for (let y = 0; y < 50; y += 10) {
            for (let x = 0; x < 10; x++)
                B[x] = s[y + x];
            for (let x = 0; x < 10; x++)
                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];
        }
        // Iota (ι)
        s[0] ^= SHA3_IOTA_H[round];
        s[1] ^= SHA3_IOTA_L[round];
    }
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.clean)(B);
}
/** Keccak sponge function. */
class Keccak extends _utils_js__WEBPACK_IMPORTED_MODULE_1__.Hash {
    // NOTE: we accept arguments in bytes instead of bits here.
    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {
        super();
        this.pos = 0;
        this.posOut = 0;
        this.finished = false;
        this.destroyed = false;
        this.enableXOF = false;
        this.blockLen = blockLen;
        this.suffix = suffix;
        this.outputLen = outputLen;
        this.enableXOF = enableXOF;
        this.rounds = rounds;
        // Can be passed from user as dkLen
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.anumber)(outputLen);
        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes
        // 0 < blockLen < 200
        if (!(0 < blockLen && blockLen < 200))
            throw new Error('only keccak-f1600 function is supported');
        this.state = new Uint8Array(200);
        this.state32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.u32)(this.state);
    }
    clone() {
        return this._cloneInto();
    }
    keccak() {
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.swap32IfBE)(this.state32);
        keccakP(this.state32, this.rounds);
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.swap32IfBE)(this.state32);
        this.posOut = 0;
        this.pos = 0;
    }
    update(data) {
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.aexists)(this);
        data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.toBytes)(data);
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.abytes)(data);
        const { blockLen, state } = this;
        const len = data.length;
        for (let pos = 0; pos < len;) {
            const take = Math.min(blockLen - this.pos, len - pos);
            for (let i = 0; i < take; i++)
                state[this.pos++] ^= data[pos++];
            if (this.pos === blockLen)
                this.keccak();
        }
        return this;
    }
    finish() {
        if (this.finished)
            return;
        this.finished = true;
        const { state, suffix, pos, blockLen } = this;
        // Do the padding
        state[pos] ^= suffix;
        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)
            this.keccak();
        state[blockLen - 1] ^= 0x80;
        this.keccak();
    }
    writeInto(out) {
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.aexists)(this, false);
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.abytes)(out);
        this.finish();
        const bufferOut = this.state;
        const { blockLen } = this;
        for (let pos = 0, len = out.length; pos < len;) {
            if (this.posOut >= blockLen)
                this.keccak();
            const take = Math.min(blockLen - this.posOut, len - pos);
            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);
            this.posOut += take;
            pos += take;
        }
        return out;
    }
    xofInto(out) {
        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF
        if (!this.enableXOF)
            throw new Error('XOF is not possible for this instance');
        return this.writeInto(out);
    }
    xof(bytes) {
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.anumber)(bytes);
        return this.xofInto(new Uint8Array(bytes));
    }
    digestInto(out) {
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.aoutput)(out, this);
        if (this.finished)
            throw new Error('digest() was already called');
        this.writeInto(out);
        this.destroy();
        return out;
    }
    digest() {
        return this.digestInto(new Uint8Array(this.outputLen));
    }
    destroy() {
        this.destroyed = true;
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.clean)(this.state);
    }
    _cloneInto(to) {
        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;
        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));
        to.state32.set(this.state32);
        to.pos = this.pos;
        to.posOut = this.posOut;
        to.finished = this.finished;
        to.rounds = rounds;
        // Suffix can change in cSHAKE
        to.suffix = suffix;
        to.outputLen = outputLen;
        to.enableXOF = enableXOF;
        to.destroyed = this.destroyed;
        return to;
    }
}
const gen = (suffix, blockLen, outputLen) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createHasher)(() => new Keccak(blockLen, suffix, outputLen));
/** SHA3-224 hash function. */
const sha3_224 = /* @__PURE__ */ (() => gen(0x06, 144, 224 / 8))();
/** SHA3-256 hash function. Different from keccak-256. */
const sha3_256 = /* @__PURE__ */ (() => gen(0x06, 136, 256 / 8))();
/** SHA3-384 hash function. */
const sha3_384 = /* @__PURE__ */ (() => gen(0x06, 104, 384 / 8))();
/** SHA3-512 hash function. */
const sha3_512 = /* @__PURE__ */ (() => gen(0x06, 72, 512 / 8))();
/** keccak-224 hash function. */
const keccak_224 = /* @__PURE__ */ (() => gen(0x01, 144, 224 / 8))();
/** keccak-256 hash function. Different from SHA3-256. */
const keccak_256 = /* @__PURE__ */ (() => gen(0x01, 136, 256 / 8))();
/** keccak-384 hash function. */
const keccak_384 = /* @__PURE__ */ (() => gen(0x01, 104, 384 / 8))();
/** keccak-512 hash function. */
const keccak_512 = /* @__PURE__ */ (() => gen(0x01, 72, 512 / 8))();
const genShake = (suffix, blockLen, outputLen) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createXOFer)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));
/** SHAKE128 XOF with 128-bit security. */
const shake128 = /* @__PURE__ */ (() => genShake(0x1f, 168, 128 / 8))();
/** SHAKE256 XOF with 256-bit security. */
const shake256 = /* @__PURE__ */ (() => genShake(0x1f, 136, 256 / 8))();
//# sourceMappingURL=sha3.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/@noble/hashes/esm/utils.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/@noble/hashes/esm/utils.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Hash: () => (/* binding */ Hash),
/* harmony export */   abytes: () => (/* binding */ abytes),
/* harmony export */   aexists: () => (/* binding */ aexists),
/* harmony export */   ahash: () => (/* binding */ ahash),
/* harmony export */   anumber: () => (/* binding */ anumber),
/* harmony export */   aoutput: () => (/* binding */ aoutput),
/* harmony export */   asyncLoop: () => (/* binding */ asyncLoop),
/* harmony export */   byteSwap: () => (/* binding */ byteSwap),
/* harmony export */   byteSwap32: () => (/* binding */ byteSwap32),
/* harmony export */   byteSwapIfBE: () => (/* binding */ byteSwapIfBE),
/* harmony export */   bytesToHex: () => (/* binding */ bytesToHex),
/* harmony export */   bytesToUtf8: () => (/* binding */ bytesToUtf8),
/* harmony export */   checkOpts: () => (/* binding */ checkOpts),
/* harmony export */   clean: () => (/* binding */ clean),
/* harmony export */   concatBytes: () => (/* binding */ concatBytes),
/* harmony export */   createHasher: () => (/* binding */ createHasher),
/* harmony export */   createOptHasher: () => (/* binding */ createOptHasher),
/* harmony export */   createView: () => (/* binding */ createView),
/* harmony export */   createXOFer: () => (/* binding */ createXOFer),
/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),
/* harmony export */   isBytes: () => (/* binding */ isBytes),
/* harmony export */   isLE: () => (/* binding */ isLE),
/* harmony export */   kdfInputToBytes: () => (/* binding */ kdfInputToBytes),
/* harmony export */   nextTick: () => (/* binding */ nextTick),
/* harmony export */   randomBytes: () => (/* binding */ randomBytes),
/* harmony export */   rotl: () => (/* binding */ rotl),
/* harmony export */   rotr: () => (/* binding */ rotr),
/* harmony export */   swap32IfBE: () => (/* binding */ swap32IfBE),
/* harmony export */   swap8IfBE: () => (/* binding */ swap8IfBE),
/* harmony export */   toBytes: () => (/* binding */ toBytes),
/* harmony export */   u32: () => (/* binding */ u32),
/* harmony export */   u8: () => (/* binding */ u8),
/* harmony export */   utf8ToBytes: () => (/* binding */ utf8ToBytes),
/* harmony export */   wrapConstructor: () => (/* binding */ wrapConstructor),
/* harmony export */   wrapConstructorWithOpts: () => (/* binding */ wrapConstructorWithOpts),
/* harmony export */   wrapXOFConstructorWithOpts: () => (/* binding */ wrapXOFConstructorWithOpts)
/* harmony export */ });
/* harmony import */ var _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/crypto */ "./node_modules/@walletconnect/universal-provider/node_modules/@noble/hashes/esm/crypto.js");
/**
 * Utilities for hex, bytes, CSPRNG.
 * @module
 */
/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.
// node.js versions earlier than v19 don't declare it in global scope.
// For node.js, package.json#exports field mapping rewrites import
// from `crypto` to `cryptoNode`, which imports native module.
// Makes the utils un-importable in browsers without a bundler.
// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.

/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */
function isBytes(a) {
    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');
}
/** Asserts something is positive integer. */
function anumber(n) {
    if (!Number.isSafeInteger(n) || n < 0)
        throw new Error('positive integer expected, got ' + n);
}
/** Asserts something is Uint8Array. */
function abytes(b, ...lengths) {
    if (!isBytes(b))
        throw new Error('Uint8Array expected');
    if (lengths.length > 0 && !lengths.includes(b.length))
        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);
}
/** Asserts something is hash */
function ahash(h) {
    if (typeof h !== 'function' || typeof h.create !== 'function')
        throw new Error('Hash should be wrapped by utils.createHasher');
    anumber(h.outputLen);
    anumber(h.blockLen);
}
/** Asserts a hash instance has not been destroyed / finished */
function aexists(instance, checkFinished = true) {
    if (instance.destroyed)
        throw new Error('Hash instance has been destroyed');
    if (checkFinished && instance.finished)
        throw new Error('Hash#digest() has already been called');
}
/** Asserts output is properly-sized byte array */
function aoutput(out, instance) {
    abytes(out);
    const min = instance.outputLen;
    if (out.length < min) {
        throw new Error('digestInto() expects output buffer of length at least ' + min);
    }
}
/** Cast u8 / u16 / u32 to u8. */
function u8(arr) {
    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);
}
/** Cast u8 / u16 / u32 to u32. */
function u32(arr) {
    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));
}
/** Zeroize a byte array. Warning: JS provides no guarantees. */
function clean(...arrays) {
    for (let i = 0; i < arrays.length; i++) {
        arrays[i].fill(0);
    }
}
/** Create DataView of an array for easy byte-level manipulation. */
function createView(arr) {
    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);
}
/** The rotate right (circular right shift) operation for uint32 */
function rotr(word, shift) {
    return (word << (32 - shift)) | (word >>> shift);
}
/** The rotate left (circular left shift) operation for uint32 */
function rotl(word, shift) {
    return (word << shift) | ((word >>> (32 - shift)) >>> 0);
}
/** Is current platform little-endian? Most are. Big-Endian platform: IBM */
const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();
/** The byte swap operation for uint32 */
function byteSwap(word) {
    return (((word << 24) & 0xff000000) |
        ((word << 8) & 0xff0000) |
        ((word >>> 8) & 0xff00) |
        ((word >>> 24) & 0xff));
}
/** Conditionally byte swap if on a big-endian platform */
const swap8IfBE = isLE
    ? (n) => n
    : (n) => byteSwap(n);
/** @deprecated */
const byteSwapIfBE = swap8IfBE;
/** In place byte swap for Uint32Array */
function byteSwap32(arr) {
    for (let i = 0; i < arr.length; i++) {
        arr[i] = byteSwap(arr[i]);
    }
    return arr;
}
const swap32IfBE = isLE
    ? (u) => u
    : byteSwap32;
// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex
const hasHexBuiltin = /* @__PURE__ */ (() => 
// @ts-ignore
typeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();
// Array where index 0xf0 (240) is mapped to string 'f0'
const hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));
/**
 * Convert byte array to hex string. Uses built-in function, when available.
 * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'
 */
function bytesToHex(bytes) {
    abytes(bytes);
    // @ts-ignore
    if (hasHexBuiltin)
        return bytes.toHex();
    // pre-caching improves the speed 6x
    let hex = '';
    for (let i = 0; i < bytes.length; i++) {
        hex += hexes[bytes[i]];
    }
    return hex;
}
// We use optimized technique to convert hex string to byte array
const asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };
function asciiToBase16(ch) {
    if (ch >= asciis._0 && ch <= asciis._9)
        return ch - asciis._0; // '2' => 50-48
    if (ch >= asciis.A && ch <= asciis.F)
        return ch - (asciis.A - 10); // 'B' => 66-(65-10)
    if (ch >= asciis.a && ch <= asciis.f)
        return ch - (asciis.a - 10); // 'b' => 98-(97-10)
    return;
}
/**
 * Convert hex string to byte array. Uses built-in function, when available.
 * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])
 */
function hexToBytes(hex) {
    if (typeof hex !== 'string')
        throw new Error('hex string expected, got ' + typeof hex);
    // @ts-ignore
    if (hasHexBuiltin)
        return Uint8Array.fromHex(hex);
    const hl = hex.length;
    const al = hl / 2;
    if (hl % 2)
        throw new Error('hex string expected, got unpadded hex of length ' + hl);
    const array = new Uint8Array(al);
    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {
        const n1 = asciiToBase16(hex.charCodeAt(hi));
        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));
        if (n1 === undefined || n2 === undefined) {
            const char = hex[hi] + hex[hi + 1];
            throw new Error('hex string expected, got non-hex character "' + char + '" at index ' + hi);
        }
        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163
    }
    return array;
}
/**
 * There is no setImmediate in browser and setTimeout is slow.
 * Call of async fn will return Promise, which will be fullfiled only on
 * next scheduler queue processing step and this is exactly what we need.
 */
const nextTick = async () => { };
/** Returns control to thread each 'tick' ms to avoid blocking. */
async function asyncLoop(iters, tick, cb) {
    let ts = Date.now();
    for (let i = 0; i < iters; i++) {
        cb(i);
        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too
        const diff = Date.now() - ts;
        if (diff >= 0 && diff < tick)
            continue;
        await nextTick();
        ts += diff;
    }
}
/**
 * Converts string to bytes using UTF8 encoding.
 * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])
 */
function utf8ToBytes(str) {
    if (typeof str !== 'string')
        throw new Error('string expected');
    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809
}
/**
 * Converts bytes to string using UTF8 encoding.
 * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'
 */
function bytesToUtf8(bytes) {
    return new TextDecoder().decode(bytes);
}
/**
 * Normalizes (non-hex) string or Uint8Array to Uint8Array.
 * Warning: when Uint8Array is passed, it would NOT get copied.
 * Keep in mind for future mutable operations.
 */
function toBytes(data) {
    if (typeof data === 'string')
        data = utf8ToBytes(data);
    abytes(data);
    return data;
}
/**
 * Helper for KDFs: consumes uint8array or string.
 * When string is passed, does utf8 decoding, using TextDecoder.
 */
function kdfInputToBytes(data) {
    if (typeof data === 'string')
        data = utf8ToBytes(data);
    abytes(data);
    return data;
}
/** Copies several Uint8Arrays into one. */
function concatBytes(...arrays) {
    let sum = 0;
    for (let i = 0; i < arrays.length; i++) {
        const a = arrays[i];
        abytes(a);
        sum += a.length;
    }
    const res = new Uint8Array(sum);
    for (let i = 0, pad = 0; i < arrays.length; i++) {
        const a = arrays[i];
        res.set(a, pad);
        pad += a.length;
    }
    return res;
}
function checkOpts(defaults, opts) {
    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')
        throw new Error('options should be object or undefined');
    const merged = Object.assign(defaults, opts);
    return merged;
}
/** For runtime check if class implements interface */
class Hash {
}
/** Wraps hash function, creating an interface on top of it */
function createHasher(hashCons) {
    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();
    const tmp = hashCons();
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = () => hashCons();
    return hashC;
}
function createOptHasher(hashCons) {
    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();
    const tmp = hashCons({});
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = (opts) => hashCons(opts);
    return hashC;
}
function createXOFer(hashCons) {
    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();
    const tmp = hashCons({});
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = (opts) => hashCons(opts);
    return hashC;
}
const wrapConstructor = createHasher;
const wrapConstructorWithOpts = createOptHasher;
const wrapXOFConstructorWithOpts = createXOFer;
/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */
function randomBytes(bytesLength = 32) {
    if (_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto && typeof _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.getRandomValues === 'function') {
        return _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.getRandomValues(new Uint8Array(bytesLength));
    }
    // Legacy Node.js compatibility
    if (_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto && typeof _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.randomBytes === 'function') {
        return Uint8Array.from(_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.randomBytes(bytesLength));
    }
    throw new Error('crypto.getRandomValues must be defined');
}
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/@scure/base/lib/esm/index.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/@scure/base/lib/esm/index.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   base16: () => (/* binding */ base16),
/* harmony export */   base32: () => (/* binding */ base32),
/* harmony export */   base32crockford: () => (/* binding */ base32crockford),
/* harmony export */   base32hex: () => (/* binding */ base32hex),
/* harmony export */   base32hexnopad: () => (/* binding */ base32hexnopad),
/* harmony export */   base32nopad: () => (/* binding */ base32nopad),
/* harmony export */   base58: () => (/* binding */ base58),
/* harmony export */   base58check: () => (/* binding */ base58check),
/* harmony export */   base58flickr: () => (/* binding */ base58flickr),
/* harmony export */   base58xmr: () => (/* binding */ base58xmr),
/* harmony export */   base58xrp: () => (/* binding */ base58xrp),
/* harmony export */   base64: () => (/* binding */ base64),
/* harmony export */   base64nopad: () => (/* binding */ base64nopad),
/* harmony export */   base64url: () => (/* binding */ base64url),
/* harmony export */   base64urlnopad: () => (/* binding */ base64urlnopad),
/* harmony export */   bech32: () => (/* binding */ bech32),
/* harmony export */   bech32m: () => (/* binding */ bech32m),
/* harmony export */   bytes: () => (/* binding */ bytes),
/* harmony export */   bytesToString: () => (/* binding */ bytesToString),
/* harmony export */   createBase58check: () => (/* binding */ createBase58check),
/* harmony export */   hex: () => (/* binding */ hex),
/* harmony export */   str: () => (/* binding */ str),
/* harmony export */   stringToBytes: () => (/* binding */ stringToBytes),
/* harmony export */   utf8: () => (/* binding */ utf8),
/* harmony export */   utils: () => (/* binding */ utils)
/* harmony export */ });
/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */
function isBytes(a) {
    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');
}
/** Asserts something is Uint8Array. */
function abytes(b, ...lengths) {
    if (!isBytes(b))
        throw new Error('Uint8Array expected');
    if (lengths.length > 0 && !lengths.includes(b.length))
        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);
}
function isArrayOf(isString, arr) {
    if (!Array.isArray(arr))
        return false;
    if (arr.length === 0)
        return true;
    if (isString) {
        return arr.every((item) => typeof item === 'string');
    }
    else {
        return arr.every((item) => Number.isSafeInteger(item));
    }
}
// no abytes: seems to have 10% slowdown. Why?!
function afn(input) {
    if (typeof input !== 'function')
        throw new Error('function expected');
    return true;
}
function astr(label, input) {
    if (typeof input !== 'string')
        throw new Error(`${label}: string expected`);
    return true;
}
function anumber(n) {
    if (!Number.isSafeInteger(n))
        throw new Error(`invalid integer: ${n}`);
}
function aArr(input) {
    if (!Array.isArray(input))
        throw new Error('array expected');
}
function astrArr(label, input) {
    if (!isArrayOf(true, input))
        throw new Error(`${label}: array of strings expected`);
}
function anumArr(label, input) {
    if (!isArrayOf(false, input))
        throw new Error(`${label}: array of numbers expected`);
}
/**
 * @__NO_SIDE_EFFECTS__
 */
function chain(...args) {
    const id = (a) => a;
    // Wrap call in closure so JIT can inline calls
    const wrap = (a, b) => (c) => a(b(c));
    // Construct chain of args[-1].encode(args[-2].encode([...]))
    const encode = args.map((x) => x.encode).reduceRight(wrap, id);
    // Construct chain of args[0].decode(args[1].decode(...))
    const decode = args.map((x) => x.decode).reduce(wrap, id);
    return { encode, decode };
}
/**
 * Encodes integer radix representation to array of strings using alphabet and back.
 * Could also be array of strings.
 * @__NO_SIDE_EFFECTS__
 */
function alphabet(letters) {
    // mapping 1 to "b"
    const lettersA = typeof letters === 'string' ? letters.split('') : letters;
    const len = lettersA.length;
    astrArr('alphabet', lettersA);
    // mapping "b" to 1
    const indexes = new Map(lettersA.map((l, i) => [l, i]));
    return {
        encode: (digits) => {
            aArr(digits);
            return digits.map((i) => {
                if (!Number.isSafeInteger(i) || i < 0 || i >= len)
                    throw new Error(`alphabet.encode: digit index outside alphabet "${i}". Allowed: ${letters}`);
                return lettersA[i];
            });
        },
        decode: (input) => {
            aArr(input);
            return input.map((letter) => {
                astr('alphabet.decode', letter);
                const i = indexes.get(letter);
                if (i === undefined)
                    throw new Error(`Unknown letter: "${letter}". Allowed: ${letters}`);
                return i;
            });
        },
    };
}
/**
 * @__NO_SIDE_EFFECTS__
 */
function join(separator = '') {
    astr('join', separator);
    return {
        encode: (from) => {
            astrArr('join.decode', from);
            return from.join(separator);
        },
        decode: (to) => {
            astr('join.decode', to);
            return to.split(separator);
        },
    };
}
/**
 * Pad strings array so it has integer number of bits
 * @__NO_SIDE_EFFECTS__
 */
function padding(bits, chr = '=') {
    anumber(bits);
    astr('padding', chr);
    return {
        encode(data) {
            astrArr('padding.encode', data);
            while ((data.length * bits) % 8)
                data.push(chr);
            return data;
        },
        decode(input) {
            astrArr('padding.decode', input);
            let end = input.length;
            if ((end * bits) % 8)
                throw new Error('padding: invalid, string should have whole number of bytes');
            for (; end > 0 && input[end - 1] === chr; end--) {
                const last = end - 1;
                const byte = last * bits;
                if (byte % 8 === 0)
                    throw new Error('padding: invalid, string has too much padding');
            }
            return input.slice(0, end);
        },
    };
}
/**
 * @__NO_SIDE_EFFECTS__
 */
function normalize(fn) {
    afn(fn);
    return { encode: (from) => from, decode: (to) => fn(to) };
}
/**
 * Slow: O(n^2) time complexity
 */
function convertRadix(data, from, to) {
    // base 1 is impossible
    if (from < 2)
        throw new Error(`convertRadix: invalid from=${from}, base cannot be less than 2`);
    if (to < 2)
        throw new Error(`convertRadix: invalid to=${to}, base cannot be less than 2`);
    aArr(data);
    if (!data.length)
        return [];
    let pos = 0;
    const res = [];
    const digits = Array.from(data, (d) => {
        anumber(d);
        if (d < 0 || d >= from)
            throw new Error(`invalid integer: ${d}`);
        return d;
    });
    const dlen = digits.length;
    while (true) {
        let carry = 0;
        let done = true;
        for (let i = pos; i < dlen; i++) {
            const digit = digits[i];
            const fromCarry = from * carry;
            const digitBase = fromCarry + digit;
            if (!Number.isSafeInteger(digitBase) ||
                fromCarry / from !== carry ||
                digitBase - digit !== fromCarry) {
                throw new Error('convertRadix: carry overflow');
            }
            const div = digitBase / to;
            carry = digitBase % to;
            const rounded = Math.floor(div);
            digits[i] = rounded;
            if (!Number.isSafeInteger(rounded) || rounded * to + carry !== digitBase)
                throw new Error('convertRadix: carry overflow');
            if (!done)
                continue;
            else if (!rounded)
                pos = i;
            else
                done = false;
        }
        res.push(carry);
        if (done)
            break;
    }
    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)
        res.push(0);
    return res.reverse();
}
const gcd = (a, b) => (b === 0 ? a : gcd(b, a % b));
const radix2carry = /* @__NO_SIDE_EFFECTS__ */ (from, to) => from + (to - gcd(from, to));
const powers = /* @__PURE__ */ (() => {
    let res = [];
    for (let i = 0; i < 40; i++)
        res.push(2 ** i);
    return res;
})();
/**
 * Implemented with numbers, because BigInt is 5x slower
 */
function convertRadix2(data, from, to, padding) {
    aArr(data);
    if (from <= 0 || from > 32)
        throw new Error(`convertRadix2: wrong from=${from}`);
    if (to <= 0 || to > 32)
        throw new Error(`convertRadix2: wrong to=${to}`);
    if (radix2carry(from, to) > 32) {
        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);
    }
    let carry = 0;
    let pos = 0; // bitwise position in current element
    const max = powers[from];
    const mask = powers[to] - 1;
    const res = [];
    for (const n of data) {
        anumber(n);
        if (n >= max)
            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);
        carry = (carry << from) | n;
        if (pos + from > 32)
            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);
        pos += from;
        for (; pos >= to; pos -= to)
            res.push(((carry >> (pos - to)) & mask) >>> 0);
        const pow = powers[pos];
        if (pow === undefined)
            throw new Error('invalid carry');
        carry &= pow - 1; // clean carry, otherwise it will cause overflow
    }
    carry = (carry << (to - pos)) & mask;
    if (!padding && pos >= from)
        throw new Error('Excess padding');
    if (!padding && carry > 0)
        throw new Error(`Non-zero padding: ${carry}`);
    if (padding && pos > 0)
        res.push(carry >>> 0);
    return res;
}
/**
 * @__NO_SIDE_EFFECTS__
 */
function radix(num) {
    anumber(num);
    const _256 = 2 ** 8;
    return {
        encode: (bytes) => {
            if (!isBytes(bytes))
                throw new Error('radix.encode input should be Uint8Array');
            return convertRadix(Array.from(bytes), _256, num);
        },
        decode: (digits) => {
            anumArr('radix.decode', digits);
            return Uint8Array.from(convertRadix(digits, num, _256));
        },
    };
}
/**
 * If both bases are power of same number (like `2**8 <-> 2**64`),
 * there is a linear algorithm. For now we have implementation for power-of-two bases only.
 * @__NO_SIDE_EFFECTS__
 */
function radix2(bits, revPadding = false) {
    anumber(bits);
    if (bits <= 0 || bits > 32)
        throw new Error('radix2: bits should be in (0..32]');
    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)
        throw new Error('radix2: carry overflow');
    return {
        encode: (bytes) => {
            if (!isBytes(bytes))
                throw new Error('radix2.encode input should be Uint8Array');
            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);
        },
        decode: (digits) => {
            anumArr('radix2.decode', digits);
            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));
        },
    };
}
function unsafeWrapper(fn) {
    afn(fn);
    return function (...args) {
        try {
            return fn.apply(null, args);
        }
        catch (e) { }
    };
}
function checksum(len, fn) {
    anumber(len);
    afn(fn);
    return {
        encode(data) {
            if (!isBytes(data))
                throw new Error('checksum.encode: input should be Uint8Array');
            const sum = fn(data).slice(0, len);
            const res = new Uint8Array(data.length + len);
            res.set(data);
            res.set(sum, data.length);
            return res;
        },
        decode(data) {
            if (!isBytes(data))
                throw new Error('checksum.decode: input should be Uint8Array');
            const payload = data.slice(0, -len);
            const oldChecksum = data.slice(-len);
            const newChecksum = fn(payload).slice(0, len);
            for (let i = 0; i < len; i++)
                if (newChecksum[i] !== oldChecksum[i])
                    throw new Error('Invalid checksum');
            return payload;
        },
    };
}
// prettier-ignore
const utils = {
    alphabet, chain, checksum, convertRadix, convertRadix2, radix, radix2, join, padding,
};
// RFC 4648 aka RFC 3548
// ---------------------
/**
 * base16 encoding from RFC 4648.
 * @example
 * ```js
 * base16.encode(Uint8Array.from([0x12, 0xab]));
 * // => '12AB'
 * ```
 */
const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));
/**
 * base32 encoding from RFC 4648. Has padding.
 * Use `base32nopad` for unpadded version.
 * Also check out `base32hex`, `base32hexnopad`, `base32crockford`.
 * @example
 * ```js
 * base32.encode(Uint8Array.from([0x12, 0xab]));
 * // => 'CKVQ===='
 * base32.decode('CKVQ====');
 * // => Uint8Array.from([0x12, 0xab])
 * ```
 */
const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));
/**
 * base32 encoding from RFC 4648. No padding.
 * Use `base32` for padded version.
 * Also check out `base32hex`, `base32hexnopad`, `base32crockford`.
 * @example
 * ```js
 * base32nopad.encode(Uint8Array.from([0x12, 0xab]));
 * // => 'CKVQ'
 * base32nopad.decode('CKVQ');
 * // => Uint8Array.from([0x12, 0xab])
 * ```
 */
const base32nopad = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), join(''));
/**
 * base32 encoding from RFC 4648. Padded. Compared to ordinary `base32`, slightly different alphabet.
 * Use `base32hexnopad` for unpadded version.
 * @example
 * ```js
 * base32hex.encode(Uint8Array.from([0x12, 0xab]));
 * // => '2ALG===='
 * base32hex.decode('2ALG====');
 * // => Uint8Array.from([0x12, 0xab])
 * ```
 */
const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));
/**
 * base32 encoding from RFC 4648. No padding. Compared to ordinary `base32`, slightly different alphabet.
 * Use `base32hex` for padded version.
 * @example
 * ```js
 * base32hexnopad.encode(Uint8Array.from([0x12, 0xab]));
 * // => '2ALG'
 * base32hexnopad.decode('2ALG');
 * // => Uint8Array.from([0x12, 0xab])
 * ```
 */
const base32hexnopad = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), join(''));
/**
 * base32 encoding from RFC 4648. Doug Crockford's version.
 * https://www.crockford.com/base32.html
 * @example
 * ```js
 * base32crockford.encode(Uint8Array.from([0x12, 0xab]));
 * // => '2ANG'
 * base32crockford.decode('2ANG');
 * // => Uint8Array.from([0x12, 0xab])
 * ```
 */
const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));
// Built-in base64 conversion https://caniuse.com/mdn-javascript_builtins_uint8array_frombase64
// prettier-ignore
const hasBase64Builtin = /* @__PURE__ */ (() => typeof Uint8Array.from([]).toBase64 === 'function' &&
    typeof Uint8Array.fromBase64 === 'function')();
const decodeBase64Builtin = (s, isUrl) => {
    astr('base64', s);
    const re = isUrl ? /^[A-Za-z0-9=_-]+$/ : /^[A-Za-z0-9=+/]+$/;
    const alphabet = isUrl ? 'base64url' : 'base64';
    if (s.length > 0 && !re.test(s))
        throw new Error('invalid base64');
    return Uint8Array.fromBase64(s, { alphabet, lastChunkHandling: 'strict' });
};
/**
 * base64 from RFC 4648. Padded.
 * Use `base64nopad` for unpadded version.
 * Also check out `base64url`, `base64urlnopad`.
 * Falls back to built-in function, when available.
 * @example
 * ```js
 * base64.encode(Uint8Array.from([0x12, 0xab]));
 * // => 'Eqs='
 * base64.decode('Eqs=');
 * // => Uint8Array.from([0x12, 0xab])
 * ```
 */
// prettier-ignore
const base64 = hasBase64Builtin ? {
    encode(b) { abytes(b); return b.toBase64(); },
    decode(s) { return decodeBase64Builtin(s, false); },
} : chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));
/**
 * base64 from RFC 4648. No padding.
 * Use `base64` for padded version.
 * @example
 * ```js
 * base64nopad.encode(Uint8Array.from([0x12, 0xab]));
 * // => 'Eqs'
 * base64nopad.decode('Eqs');
 * // => Uint8Array.from([0x12, 0xab])
 * ```
 */
const base64nopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), join(''));
/**
 * base64 from RFC 4648, using URL-safe alphabet. Padded.
 * Use `base64urlnopad` for unpadded version.
 * Falls back to built-in function, when available.
 * @example
 * ```js
 * base64url.encode(Uint8Array.from([0x12, 0xab]));
 * // => 'Eqs='
 * base64url.decode('Eqs=');
 * // => Uint8Array.from([0x12, 0xab])
 * ```
 */
// prettier-ignore
const base64url = hasBase64Builtin ? {
    encode(b) { abytes(b); return b.toBase64({ alphabet: 'base64url' }); },
    decode(s) { return decodeBase64Builtin(s, true); },
} : chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));
/**
 * base64 from RFC 4648, using URL-safe alphabet. No padding.
 * Use `base64url` for padded version.
 * @example
 * ```js
 * base64urlnopad.encode(Uint8Array.from([0x12, 0xab]));
 * // => 'Eqs'
 * base64urlnopad.decode('Eqs');
 * // => Uint8Array.from([0x12, 0xab])
 * ```
 */
const base64urlnopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), join(''));
// base58 code
// -----------
const genBase58 = /* @__NO_SIDE_EFFECTS__ */ (abc) => chain(radix(58), alphabet(abc), join(''));
/**
 * base58: base64 without ambigous characters +, /, 0, O, I, l.
 * Quadratic (O(n^2)) - so, can't be used on large inputs.
 * @example
 * ```js
 * base58.decode('01abcdef');
 * // => '3UhJW'
 * ```
 */
const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');
/**
 * base58: flickr version. Check out `base58`.
 */
const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');
/**
 * base58: XRP version. Check out `base58`.
 */
const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');
// Data len (index) -> encoded block len
const XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];
/**
 * base58: XMR version. Check out `base58`.
 * Done in 8-byte blocks (which equals 11 chars in decoding). Last (non-full) block padded with '1' to size in XMR_BLOCK_LEN.
 * Block encoding significantly reduces quadratic complexity of base58.
 */
const base58xmr = {
    encode(data) {
        let res = '';
        for (let i = 0; i < data.length; i += 8) {
            const block = data.subarray(i, i + 8);
            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');
        }
        return res;
    },
    decode(str) {
        let res = [];
        for (let i = 0; i < str.length; i += 11) {
            const slice = str.slice(i, i + 11);
            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);
            const block = base58.decode(slice);
            for (let j = 0; j < block.length - blockLen; j++) {
                if (block[j] !== 0)
                    throw new Error('base58xmr: wrong padding');
            }
            res = res.concat(Array.from(block.slice(block.length - blockLen)));
        }
        return Uint8Array.from(res);
    },
};
/**
 * Method, which creates base58check encoder.
 * Requires function, calculating sha256.
 */
const createBase58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);
/**
 * Use `createBase58check` instead.
 * @deprecated
 */
const base58check = createBase58check;
const BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));
const POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];
function bech32Polymod(pre) {
    const b = pre >> 25;
    let chk = (pre & 0x1ffffff) << 5;
    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {
        if (((b >> i) & 1) === 1)
            chk ^= POLYMOD_GENERATORS[i];
    }
    return chk;
}
function bechChecksum(prefix, words, encodingConst = 1) {
    const len = prefix.length;
    let chk = 1;
    for (let i = 0; i < len; i++) {
        const c = prefix.charCodeAt(i);
        if (c < 33 || c > 126)
            throw new Error(`Invalid prefix (${prefix})`);
        chk = bech32Polymod(chk) ^ (c >> 5);
    }
    chk = bech32Polymod(chk);
    for (let i = 0; i < len; i++)
        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);
    for (let v of words)
        chk = bech32Polymod(chk) ^ v;
    for (let i = 0; i < 6; i++)
        chk = bech32Polymod(chk);
    chk ^= encodingConst;
    return BECH_ALPHABET.encode(convertRadix2([chk % powers[30]], 30, 5, false));
}
/**
 * @__NO_SIDE_EFFECTS__
 */
function genBech32(encoding) {
    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;
    const _words = radix2(5);
    const fromWords = _words.decode;
    const toWords = _words.encode;
    const fromWordsUnsafe = unsafeWrapper(fromWords);
    function encode(prefix, words, limit = 90) {
        astr('bech32.encode prefix', prefix);
        if (isBytes(words))
            words = Array.from(words);
        anumArr('bech32.encode', words);
        const plen = prefix.length;
        if (plen === 0)
            throw new TypeError(`Invalid prefix length ${plen}`);
        const actualLength = plen + 7 + words.length;
        if (limit !== false && actualLength > limit)
            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);
        const lowered = prefix.toLowerCase();
        const sum = bechChecksum(lowered, words, ENCODING_CONST);
        return `${lowered}1${BECH_ALPHABET.encode(words)}${sum}`;
    }
    function decode(str, limit = 90) {
        astr('bech32.decode input', str);
        const slen = str.length;
        if (slen < 8 || (limit !== false && slen > limit))
            throw new TypeError(`invalid string length: ${slen} (${str}). Expected (8..${limit})`);
        // don't allow mixed case
        const lowered = str.toLowerCase();
        if (str !== lowered && str !== str.toUpperCase())
            throw new Error(`String must be lowercase or uppercase`);
        const sepIndex = lowered.lastIndexOf('1');
        if (sepIndex === 0 || sepIndex === -1)
            throw new Error(`Letter "1" must be present between prefix and data only`);
        const prefix = lowered.slice(0, sepIndex);
        const data = lowered.slice(sepIndex + 1);
        if (data.length < 6)
            throw new Error('Data must be at least 6 characters long');
        const words = BECH_ALPHABET.decode(data).slice(0, -6);
        const sum = bechChecksum(prefix, words, ENCODING_CONST);
        if (!data.endsWith(sum))
            throw new Error(`Invalid checksum in ${str}: expected "${sum}"`);
        return { prefix, words };
    }
    const decodeUnsafe = unsafeWrapper(decode);
    function decodeToBytes(str) {
        const { prefix, words } = decode(str, false);
        return { prefix, words, bytes: fromWords(words) };
    }
    function encodeFromBytes(prefix, bytes) {
        return encode(prefix, toWords(bytes));
    }
    return {
        encode,
        decode,
        encodeFromBytes,
        decodeToBytes,
        decodeUnsafe,
        fromWords,
        fromWordsUnsafe,
        toWords,
    };
}
/**
 * bech32 from BIP 173. Operates on words.
 * For high-level, check out scure-btc-signer:
 * https://github.com/paulmillr/scure-btc-signer.
 */
const bech32 = genBech32('bech32');
/**
 * bech32m from BIP 350. Operates on words.
 * It was to mitigate `bech32` weaknesses.
 * For high-level, check out scure-btc-signer:
 * https://github.com/paulmillr/scure-btc-signer.
 */
const bech32m = genBech32('bech32m');
/**
 * UTF-8-to-byte decoder. Uses built-in TextDecoder / TextEncoder.
 * @example
 * ```js
 * const b = utf8.decode("hey"); // => new Uint8Array([ 104, 101, 121 ])
 * const str = utf8.encode(b); // "hey"
 * ```
 */
const utf8 = {
    encode: (data) => new TextDecoder().decode(data),
    decode: (str) => new TextEncoder().encode(str),
};
// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex
// prettier-ignore
const hasHexBuiltin = /* @__PURE__ */ (() => typeof Uint8Array.from([]).toHex === 'function' &&
    typeof Uint8Array.fromHex === 'function')();
// prettier-ignore
const hexBuiltin = {
    encode(data) { abytes(data); return data.toHex(); },
    decode(s) { astr('hex', s); return Uint8Array.fromHex(s); },
};
/**
 * hex string decoder. Uses built-in function, when available.
 * @example
 * ```js
 * const b = hex.decode("0102ff"); // => new Uint8Array([ 1, 2, 255 ])
 * const str = hex.encode(b); // "0102ff"
 * ```
 */
const hex = hasHexBuiltin
    ? hexBuiltin
    : chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {
        if (typeof s !== 'string' || s.length % 2 !== 0)
            throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);
        return s.toLowerCase();
    }));
// prettier-ignore
const CODERS = {
    utf8, hex, base16, base32, base64, base64url, base58, base58xmr
};
const coderTypeError = 'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';
/** @deprecated */
const bytesToString = (type, bytes) => {
    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))
        throw new TypeError(coderTypeError);
    if (!isBytes(bytes))
        throw new TypeError('bytesToString() expects Uint8Array');
    return CODERS[type].encode(bytes);
};
/** @deprecated */
const str = bytesToString; // as in python, but for bytes only
/** @deprecated */
const stringToBytes = (type, str) => {
    if (!CODERS.hasOwnProperty(type))
        throw new TypeError(coderTypeError);
    if (typeof str !== 'string')
        throw new TypeError('stringToBytes() expects string');
    return CODERS[type].decode(str);
};
/** @deprecated */
const bytes = stringToBytes;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/utils/dist/index.es.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/utils/dist/index.es.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BASE10: () => (/* binding */ $n),
/* harmony export */   BASE16: () => (/* binding */ tt),
/* harmony export */   BASE64: () => (/* binding */ Qt),
/* harmony export */   BASE64URL: () => (/* binding */ De),
/* harmony export */   COLON: () => (/* binding */ Hs),
/* harmony export */   DEFAULT_DEPTH: () => (/* binding */ We),
/* harmony export */   EMPTY_SPACE: () => (/* binding */ Ee),
/* harmony export */   ENV_MAP: () => (/* binding */ J),
/* harmony export */   INTERNAL_ERRORS: () => (/* binding */ Qo),
/* harmony export */   LimitedSet: () => (/* binding */ gi),
/* harmony export */   MemoryStore: () => (/* binding */ Ha),
/* harmony export */   ONE_THOUSAND: () => (/* binding */ Ds),
/* harmony export */   REACT_NATIVE_PRODUCT: () => (/* binding */ er),
/* harmony export */   RELAYER_DEFAULT_PROTOCOL: () => (/* binding */ Mo),
/* harmony export */   SDK_ERRORS: () => (/* binding */ Jo),
/* harmony export */   SDK_TYPE: () => (/* binding */ rr),
/* harmony export */   SLASH: () => (/* binding */ nr),
/* harmony export */   TYPE_0: () => (/* binding */ Cn),
/* harmony export */   TYPE_1: () => (/* binding */ ee),
/* harmony export */   TYPE_2: () => (/* binding */ ge),
/* harmony export */   UTF8: () => (/* binding */ te),
/* harmony export */   addResourceToRecap: () => (/* binding */ Yr),
/* harmony export */   addSignatureToExtrinsic: () => (/* binding */ bs),
/* harmony export */   appendToQueryString: () => (/* binding */ or),
/* harmony export */   assertType: () => (/* binding */ Zs),
/* harmony export */   assignAbilityToActions: () => (/* binding */ hn),
/* harmony export */   base64Decode: () => (/* binding */ Zr),
/* harmony export */   base64Encode: () => (/* binding */ Gr),
/* harmony export */   buildApprovedNamespaces: () => (/* binding */ pa),
/* harmony export */   buildAuthObject: () => (/* binding */ mf),
/* harmony export */   buildNamespacesFromAuth: () => (/* binding */ ga),
/* harmony export */   buildRecapStatement: () => (/* binding */ Jr),
/* harmony export */   buildSignedExtrinsicHash: () => (/* binding */ Ka),
/* harmony export */   calcExpiry: () => (/* binding */ ii),
/* harmony export */   capitalize: () => (/* binding */ ti),
/* harmony export */   capitalizeWord: () => (/* binding */ lr),
/* harmony export */   createDelayedPromise: () => (/* binding */ ei),
/* harmony export */   createEncodedRecap: () => (/* binding */ Ef),
/* harmony export */   createExpiringPromise: () => (/* binding */ ni),
/* harmony export */   createRecap: () => (/* binding */ Wr),
/* harmony export */   decodeRecap: () => (/* binding */ Lt),
/* harmony export */   decodeTypeByte: () => (/* binding */ Vt),
/* harmony export */   decodeTypeTwoEnvelope: () => (/* binding */ Yc),
/* harmony export */   decrypt: () => (/* binding */ Zc),
/* harmony export */   deriveExtrinsicHash: () => (/* binding */ ys),
/* harmony export */   deriveSymKey: () => (/* binding */ Kc),
/* harmony export */   deserialize: () => (/* binding */ Me),
/* harmony export */   encodeRecap: () => (/* binding */ Ne),
/* harmony export */   encodeTypeByte: () => (/* binding */ jn),
/* harmony export */   encodeTypeTwoEnvelope: () => (/* binding */ Wc),
/* harmony export */   encrypt: () => (/* binding */ Gc),
/* harmony export */   engineEvent: () => (/* binding */ ci),
/* harmony export */   enumify: () => (/* binding */ Qs),
/* harmony export */   extractSolanaTransactionId: () => (/* binding */ sf),
/* harmony export */   formatAccountId: () => (/* binding */ Zn),
/* harmony export */   formatAccountWithChain: () => (/* binding */ Os),
/* harmony export */   formatChainId: () => (/* binding */ Gn),
/* harmony export */   formatDeeplinkUrl: () => (/* binding */ dr),
/* harmony export */   formatExpirerTarget: () => (/* binding */ Xe),
/* harmony export */   formatIdTarget: () => (/* binding */ oi),
/* harmony export */   formatMessage: () => (/* binding */ qr),
/* harmony export */   formatMessageContext: () => (/* binding */ Ws),
/* harmony export */   formatRelayParams: () => (/* binding */ Ko),
/* harmony export */   formatRelayRpcUrl: () => (/* binding */ zs),
/* harmony export */   formatStatementFromRecap: () => (/* binding */ gn),
/* harmony export */   formatTopicTarget: () => (/* binding */ ri),
/* harmony export */   formatUA: () => (/* binding */ cr),
/* harmony export */   formatUri: () => (/* binding */ oa),
/* harmony export */   fromBase64: () => (/* binding */ Qe),
/* harmony export */   generateKeyPair: () => (/* binding */ Vc),
/* harmony export */   generateRandomBytes32: () => (/* binding */ qc),
/* harmony export */   getAccountsChains: () => (/* binding */ qt),
/* harmony export */   getAccountsFromNamespaces: () => (/* binding */ _s),
/* harmony export */   getAddressFromAccount: () => (/* binding */ Wn),
/* harmony export */   getAddressesFromAccounts: () => (/* binding */ Us),
/* harmony export */   getAlgorandTransactionId: () => (/* binding */ af),
/* harmony export */   getAppId: () => (/* binding */ qs),
/* harmony export */   getAppMetadata: () => (/* binding */ sr),
/* harmony export */   getBrowserOnlineStatus: () => (/* binding */ us),
/* harmony export */   getChainFromAccount: () => (/* binding */ Yn),
/* harmony export */   getChainsFromAccounts: () => (/* binding */ Xn),
/* harmony export */   getChainsFromNamespace: () => (/* binding */ ve),
/* harmony export */   getChainsFromNamespaces: () => (/* binding */ Ts),
/* harmony export */   getChainsFromRecap: () => (/* binding */ Af),
/* harmony export */   getChainsFromRequiredNamespaces: () => (/* binding */ Rs),
/* harmony export */   getCommonValuesInArrays: () => (/* binding */ Je),
/* harmony export */   getCryptoKeyFromKeyData: () => (/* binding */ Do),
/* harmony export */   getDecodedRecapFromResources: () => (/* binding */ Kr),
/* harmony export */   getDeepLink: () => (/* binding */ ui),
/* harmony export */   getDidAddress: () => (/* binding */ dn),
/* harmony export */   getDidAddressSegments: () => (/* binding */ Se),
/* harmony export */   getDidChainId: () => (/* binding */ Mr),
/* harmony export */   getEnvironment: () => (/* binding */ Pt),
/* harmony export */   getHttpUrl: () => (/* binding */ Gs),
/* harmony export */   getInternalError: () => (/* binding */ Et),
/* harmony export */   getJavascriptID: () => (/* binding */ fr),
/* harmony export */   getJavascriptOS: () => (/* binding */ ir),
/* harmony export */   getLastItems: () => (/* binding */ ur),
/* harmony export */   getLinkModeURL: () => (/* binding */ sa),
/* harmony export */   getMethodsFromRecap: () => (/* binding */ If),
/* harmony export */   getNamespacedDidChainId: () => (/* binding */ Vr),
/* harmony export */   getNamespacesChains: () => (/* binding */ Go),
/* harmony export */   getNamespacesEventsForChainId: () => (/* binding */ Wo),
/* harmony export */   getNamespacesFromAccounts: () => (/* binding */ Xo),
/* harmony export */   getNamespacesMethodsForChainId: () => (/* binding */ Zo),
/* harmony export */   getNearTransactionIdFromSignedTransaction: () => (/* binding */ cf),
/* harmony export */   getNearUint8ArrayFromBytes: () => (/* binding */ kr),
/* harmony export */   getNodeOnlineStatus: () => (/* binding */ ds),
/* harmony export */   getReCapActions: () => (/* binding */ zr),
/* harmony export */   getReactNativeOnlineStatus: () => (/* binding */ ls),
/* harmony export */   getRecapAbilitiesFromResource: () => (/* binding */ vf),
/* harmony export */   getRecapFromResources: () => (/* binding */ Oe),
/* harmony export */   getRecapResource: () => (/* binding */ Fr),
/* harmony export */   getRelayClientMetadata: () => (/* binding */ Fs),
/* harmony export */   getRelayProtocolApi: () => (/* binding */ na),
/* harmony export */   getRelayProtocolName: () => (/* binding */ ea),
/* harmony export */   getRequiredNamespacesFromNamespaces: () => (/* binding */ ha),
/* harmony export */   getSdkError: () => (/* binding */ Kt),
/* harmony export */   getSearchParamFromURL: () => (/* binding */ li),
/* harmony export */   getSignDirectHash: () => (/* binding */ uf),
/* harmony export */   getSuiDigest: () => (/* binding */ ff),
/* harmony export */   getUniqueValues: () => (/* binding */ Ge),
/* harmony export */   handleDeeplinkRedirect: () => (/* binding */ ai),
/* harmony export */   hasOverlap: () => (/* binding */ It),
/* harmony export */   hashEthereumMessage: () => (/* binding */ an),
/* harmony export */   hashKey: () => (/* binding */ Fc),
/* harmony export */   hashMessage: () => (/* binding */ zc),
/* harmony export */   isAndroid: () => (/* binding */ Ms),
/* harmony export */   isAppVisible: () => (/* binding */ Pa),
/* harmony export */   isBrowser: () => (/* binding */ zt),
/* harmony export */   isCaipNamespace: () => (/* binding */ Pn),
/* harmony export */   isConformingNamespaces: () => (/* binding */ cs),
/* harmony export */   isExpired: () => (/* binding */ fi),
/* harmony export */   isIframe: () => (/* binding */ gr),
/* harmony export */   isIos: () => (/* binding */ Vs),
/* harmony export */   isNode: () => (/* binding */ Ye),
/* harmony export */   isOnline: () => (/* binding */ ja),
/* harmony export */   isProposalStruct: () => (/* binding */ wa),
/* harmony export */   isReactNative: () => (/* binding */ Bt),
/* harmony export */   isRecap: () => (/* binding */ pn),
/* harmony export */   isSessionCompatible: () => (/* binding */ ya),
/* harmony export */   isSessionStruct: () => (/* binding */ xa),
/* harmony export */   isTelegram: () => (/* binding */ pr),
/* harmony export */   isTestRun: () => (/* binding */ hi),
/* harmony export */   isTypeOneEnvelope: () => (/* binding */ Jc),
/* harmony export */   isTypeTwoEnvelope: () => (/* binding */ Qc),
/* harmony export */   isUndefined: () => (/* binding */ kt),
/* harmony export */   isValidAccountId: () => (/* binding */ ts),
/* harmony export */   isValidAccounts: () => (/* binding */ rs),
/* harmony export */   isValidActions: () => (/* binding */ ss),
/* harmony export */   isValidArray: () => (/* binding */ me),
/* harmony export */   isValidChainId: () => (/* binding */ we),
/* harmony export */   isValidChains: () => (/* binding */ es),
/* harmony export */   isValidController: () => (/* binding */ va),
/* harmony export */   isValidEip1271Signature: () => (/* binding */ jr),
/* harmony export */   isValidEip191Signature: () => (/* binding */ Lr),
/* harmony export */   isValidErrorReason: () => (/* binding */ Sa),
/* harmony export */   isValidEvent: () => (/* binding */ Ua),
/* harmony export */   isValidId: () => (/* binding */ Ia),
/* harmony export */   isValidNamespaceAccounts: () => (/* binding */ os),
/* harmony export */   isValidNamespaceActions: () => (/* binding */ Dn),
/* harmony export */   isValidNamespaceChains: () => (/* binding */ ns),
/* harmony export */   isValidNamespaceMethodsOrEvents: () => (/* binding */ Hn),
/* harmony export */   isValidNamespaces: () => (/* binding */ is),
/* harmony export */   isValidNamespacesChainId: () => (/* binding */ _a),
/* harmony export */   isValidNamespacesEvent: () => (/* binding */ Ra),
/* harmony export */   isValidNamespacesRequest: () => (/* binding */ Ta),
/* harmony export */   isValidNumber: () => (/* binding */ qe),
/* harmony export */   isValidObject: () => (/* binding */ Ve),
/* harmony export */   isValidParams: () => (/* binding */ Aa),
/* harmony export */   isValidRecap: () => (/* binding */ bt),
/* harmony export */   isValidRelay: () => (/* binding */ fs),
/* harmony export */   isValidRelays: () => (/* binding */ Ba),
/* harmony export */   isValidRequest: () => (/* binding */ Na),
/* harmony export */   isValidRequestExpiry: () => (/* binding */ La),
/* harmony export */   isValidRequiredNamespaces: () => (/* binding */ Ea),
/* harmony export */   isValidResponse: () => (/* binding */ Oa),
/* harmony export */   isValidString: () => (/* binding */ it),
/* harmony export */   isValidUrl: () => (/* binding */ ma),
/* harmony export */   mapEntries: () => (/* binding */ Js),
/* harmony export */   mapToObj: () => (/* binding */ Ys),
/* harmony export */   mergeArrays: () => (/* binding */ ct),
/* harmony export */   mergeEncodedRecaps: () => (/* binding */ Bf),
/* harmony export */   mergeRecaps: () => (/* binding */ Xr),
/* harmony export */   mergeRequiredAndOptionalNamespaces: () => (/* binding */ ba),
/* harmony export */   normalizeNamespaces: () => (/* binding */ ye),
/* harmony export */   objToMap: () => (/* binding */ Xs),
/* harmony export */   openDeeplink: () => (/* binding */ hr),
/* harmony export */   parseAccountId: () => (/* binding */ ze),
/* harmony export */   parseChainId: () => (/* binding */ Fe),
/* harmony export */   parseContextNames: () => (/* binding */ ar),
/* harmony export */   parseExpirerTarget: () => (/* binding */ si),
/* harmony export */   parseNamespaceKey: () => (/* binding */ Yo),
/* harmony export */   parseRelayParams: () => (/* binding */ Vo),
/* harmony export */   parseTopic: () => (/* binding */ qo),
/* harmony export */   parseUri: () => (/* binding */ ra),
/* harmony export */   populateAppMetadata: () => (/* binding */ Ks),
/* harmony export */   populateAuthPayload: () => (/* binding */ wf),
/* harmony export */   recapHasResource: () => (/* binding */ xf),
/* harmony export */   serialize: () => (/* binding */ kn),
/* harmony export */   sleep: () => (/* binding */ pi),
/* harmony export */   ss58AddressToPublicKey: () => (/* binding */ gs),
/* harmony export */   subscribeToBrowserNetworkChange: () => (/* binding */ hs),
/* harmony export */   subscribeToNetworkChange: () => (/* binding */ ka),
/* harmony export */   subscribeToReactNativeNetworkChange: () => (/* binding */ ps),
/* harmony export */   toBase64: () => (/* binding */ br),
/* harmony export */   uuidv4: () => (/* binding */ di),
/* harmony export */   validateDecoding: () => (/* binding */ Xc),
/* harmony export */   validateEncoding: () => (/* binding */ Ho),
/* harmony export */   validateSignedCacao: () => (/* binding */ yf),
/* harmony export */   verifyP256Jwt: () => (/* binding */ ta),
/* harmony export */   verifySignature: () => (/* binding */ Cr)
/* harmony export */ });
/* harmony import */ var detect_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! detect-browser */ "./node_modules/@walletconnect/universal-provider/node_modules/detect-browser/es/index.js");
/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/time */ "./node_modules/@walletconnect/time/dist/cjs/index.js");
/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/window-getters */ "./node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/window-getters/dist/cjs/index.js");
/* harmony import */ var _walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/window-metadata */ "./node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/window-metadata/dist/cjs/index.js");
/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/signature/recoverAddress.js");
/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! bs58 */ "./node_modules/@walletconnect/universal-provider/node_modules/bs58/src/esm/index.js");
/* harmony import */ var _msgpack_msgpack__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @msgpack/msgpack */ "./node_modules/@msgpack/msgpack/dist.esm/encode.mjs");
/* harmony import */ var _msgpack_msgpack__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @msgpack/msgpack */ "./node_modules/@msgpack/msgpack/dist.esm/decode.mjs");
/* harmony import */ var _scure_base__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @scure/base */ "./node_modules/@walletconnect/universal-provider/node_modules/@scure/base/lib/esm/index.js");
/* harmony import */ var _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @walletconnect/relay-auth */ "./node_modules/@walletconnect/relay-auth/dist/index.es.js");
/* harmony import */ var uint8arrays__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! uint8arrays */ "./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/index.js");
/* harmony import */ var _walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @walletconnect/relay-api */ "./node_modules/@walletconnect/relay-api/dist/index.es.js");
/* harmony import */ var blakejs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! blakejs */ "./node_modules/blakejs/index.js");
/* harmony import */ var blakejs__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(blakejs__WEBPACK_IMPORTED_MODULE_12__);
/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ "./node_modules/process/browser.js");
/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js")["Buffer"];
const xe=":";function Fe(t){const[e,n]=t.split(xe);return{namespace:e,reference:n}}function Gn(t){const{namespace:e,reference:n}=t;return[e,n].join(xe)}function ze(t){const[e,n,r]=t.split(xe);return{namespace:e,reference:n,address:r}}function Zn(t){const{namespace:e,reference:n,address:r}=t;return[e,n,r].join(xe)}function Ge(t,e){const n=[];return t.forEach(r=>{const o=e(r);n.includes(o)||n.push(o)}),n}function Wn(t){const{address:e}=ze(t);return e}function Yn(t){const{namespace:e,reference:n}=ze(t);return Gn({namespace:e,reference:n})}function Os(t,e){const{namespace:n,reference:r}=Fe(e);return Zn({namespace:n,reference:r,address:t})}function Us(t){return Ge(t,Wn)}function Xn(t){return Ge(t,Yn)}function _s(t,e=[]){const n=[];return Object.keys(t).forEach(r=>{if(e.length&&!e.includes(r))return;const o=t[r];n.push(...o.accounts)}),n}function Ts(t,e=[]){const n=[];return Object.keys(t).forEach(r=>{if(e.length&&!e.includes(r))return;const o=t[r];n.push(...Xn(o.accounts))}),n}function Rs(t,e=[]){const n=[];return Object.keys(t).forEach(r=>{if(e.length&&!e.includes(r))return;const o=t[r];n.push(...ve(r,o))}),n}function ve(t,e){return t.includes(":")?[t]:e.chains||[]}var $s=Object.defineProperty,Cs=Object.defineProperties,Ls=Object.getOwnPropertyDescriptors,Jn=Object.getOwnPropertySymbols,js=Object.prototype.hasOwnProperty,ks=Object.prototype.propertyIsEnumerable,Ze=(t,e,n)=>e in t?$s(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,Qn=(t,e)=>{for(var n in e||(e={}))js.call(e,n)&&Ze(t,n,e[n]);if(Jn)for(var n of Jn(e))ks.call(e,n)&&Ze(t,n,e[n]);return t},Ps=(t,e)=>Cs(t,Ls(e)),tr=(t,e,n)=>Ze(t,typeof e!="symbol"?e+"":e,n);const er="ReactNative",J={reactNative:"react-native",node:"node",browser:"browser",unknown:"unknown"},Ee=" ",Hs=":",nr="/",We=2,Ds=1e3,rr="js";function Ye(){return typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u"}function Bt(){return!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__.getDocument)()&&!!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__.getNavigator)()&&navigator.product===er}function Ms(){return Bt()&&typeof __webpack_require__.g<"u"&&typeof(__webpack_require__.g==null?void 0:__webpack_require__.g.Platform)<"u"&&(__webpack_require__.g==null?void 0:__webpack_require__.g.Platform.OS)==="android"}function Vs(){return Bt()&&typeof __webpack_require__.g<"u"&&typeof(__webpack_require__.g==null?void 0:__webpack_require__.g.Platform)<"u"&&(__webpack_require__.g==null?void 0:__webpack_require__.g.Platform.OS)==="ios"}function zt(){return!Ye()&&!!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__.getNavigator)()&&!!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__.getDocument)()}function Pt(){return Bt()?J.reactNative:Ye()?J.node:zt()?J.browser:J.unknown}function qs(){var t;try{return Bt()&&typeof __webpack_require__.g<"u"&&typeof(__webpack_require__.g==null?void 0:__webpack_require__.g.Application)<"u"?(t=__webpack_require__.g.Application)==null?void 0:t.applicationId:void 0}catch{return}}function or(t,e){const n=new URLSearchParams(t);for(const r of Object.keys(e).sort())if(e.hasOwnProperty(r)){const o=e[r];o!==void 0&&n.set(r,o)}return n.toString()}function Ks(t){var e,n;const r=sr();try{return t!=null&&t.url&&r.url&&new URL(t.url).host!==new URL(r.url).host&&(console.warn(`The configured WalletConnect 'metadata.url':${t.url} differs from the actual page url:${r.url}. This is probably unintended and can lead to issues.`),t.url=r.url),(e=t?.icons)!=null&&e.length&&t.icons.length>0&&(t.icons=t.icons.filter(o=>o!=="")),Ps(Qn(Qn({},r),t),{url:t?.url||r.url,name:t?.name||r.name,description:t?.description||r.description,icons:(n=t?.icons)!=null&&n.length&&t.icons.length>0?t.icons:r.icons})}catch(o){return console.warn("Error populating app metadata",o),t||r}}function sr(){return (0,_walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_3__.getWindowMetadata)()||{name:"",description:"",url:"",icons:[""]}}function Fs(t,e){var n;const r=Pt(),o={protocol:t,version:e,env:r};return r==="browser"&&(o.host=((n=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__.getLocation)())==null?void 0:n.host)||"unknown"),o}function ir(){if(Pt()===J.reactNative&&typeof __webpack_require__.g<"u"&&typeof(__webpack_require__.g==null?void 0:__webpack_require__.g.Platform)<"u"){const{OS:n,Version:r}=__webpack_require__.g.Platform;return[n,r].join("-")}const t=(0,detect_browser__WEBPACK_IMPORTED_MODULE_0__.detect)();if(t===null)return"unknown";const e=t.os?t.os.replace(" ","").toLowerCase():"unknown";return t.type==="browser"?[e,t.name,t.version].join("-"):[e,t.version].join("-")}function fr(){var t;const e=Pt();return e===J.browser?[e,((t=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__.getLocation)())==null?void 0:t.host)||"unknown"].join(":"):e}function cr(t,e,n){const r=ir(),o=fr();return[[t,e].join("-"),[rr,n].join("-"),r,o].join("/")}function zs({protocol:t,version:e,relayUrl:n,sdkVersion:r,auth:o,projectId:s,useOnCloseEvent:i,bundleId:f,packageName:a}){const l=n.split("?"),c=cr(t,e,r),u={auth:o,ua:c,projectId:s,useOnCloseEvent:i||void 0,packageName:a||void 0,bundleId:f||void 0},h=or(l[1]||"",u);return l[0]+"?"+h}function Gs(t){let e=(t.match(/^[^:]+(?=:\/\/)/gi)||[])[0];const n=typeof e<"u"?t.split("://")[1]:t;return e=e==="wss"?"https":"http",[e,n].join("://")}function Zs(t,e,n){if(!t[e]||typeof t[e]!==n)throw new Error(`Missing or invalid "${e}" param`)}function ar(t,e=We){return ur(t.split(nr),e)}function Ws(t){return ar(t).join(Ee)}function It(t,e){return t.filter(n=>e.includes(n)).length===t.length}function ur(t,e=We){return t.slice(Math.max(t.length-e,0))}function Ys(t){return Object.fromEntries(t.entries())}function Xs(t){return new Map(Object.entries(t))}function Js(t,e){const n={};return Object.keys(t).forEach(r=>{n[r]=e(t[r])}),n}const Qs=t=>t;function lr(t){return t.trim().replace(/^\w/,e=>e.toUpperCase())}function ti(t){return t.split(Ee).map(e=>lr(e)).join(Ee)}function ei(t=_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.FIVE_MINUTES,e){const n=(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.toMiliseconds)(t||_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.FIVE_MINUTES);let r,o,s,i;return{resolve:f=>{s&&r&&(clearTimeout(s),r(f),i=Promise.resolve(f))},reject:f=>{s&&o&&(clearTimeout(s),o(f))},done:()=>new Promise((f,a)=>{if(i)return f(i);s=setTimeout(()=>{const l=new Error(e);i=Promise.reject(l),a(l)},n),r=f,o=a})}}function ni(t,e,n){return new Promise(async(r,o)=>{const s=setTimeout(()=>o(new Error(n)),e);try{const i=await t;r(i)}catch(i){o(i)}clearTimeout(s)})}function Xe(t,e){if(typeof e=="string"&&e.startsWith(`${t}:`))return e;if(t.toLowerCase()==="topic"){if(typeof e!="string")throw new Error('Value must be "string" for expirer target type: topic');return`topic:${e}`}else if(t.toLowerCase()==="id"){if(typeof e!="number")throw new Error('Value must be "number" for expirer target type: id');return`id:${e}`}throw new Error(`Unknown expirer target type: ${t}`)}function ri(t){return Xe("topic",t)}function oi(t){return Xe("id",t)}function si(t){const[e,n]=t.split(":"),r={id:void 0,topic:void 0};if(e==="topic"&&typeof n=="string")r.topic=n;else if(e==="id"&&Number.isInteger(Number(n)))r.id=Number(n);else throw new Error(`Invalid target, expected id:number or topic:string, got ${e}:${n}`);return r}function ii(t,e){return (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.fromMiliseconds)((e||Date.now())+(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.toMiliseconds)(t))}function fi(t){return Date.now()>=(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.toMiliseconds)(t)}function ci(t,e){return`${t}${e?`:${e}`:""}`}function ct(t=[],e=[]){return[...new Set([...t,...e])]}async function ai({id:t,topic:e,wcDeepLink:n}){var r;try{if(!n)return;const o=typeof n=="string"?JSON.parse(n):n,s=o?.href;if(typeof s!="string")return;const i=dr(s,t,e),f=Pt();if(f===J.browser){if(!((r=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__.getDocument)())!=null&&r.hasFocus())){console.warn("Document does not have focus, skipping deeplink.");return}hr(i)}else f===J.reactNative&&typeof(__webpack_require__.g==null?void 0:__webpack_require__.g.Linking)<"u"&&await __webpack_require__.g.Linking.openURL(i)}catch(o){console.error(o)}}function dr(t,e,n){const r=`requestId=${e}&sessionTopic=${n}`;t.endsWith("/")&&(t=t.slice(0,-1));let o=`${t}`;if(t.startsWith("https://t.me")){const s=t.includes("?")?"&startapp=":"?startapp=";o=`${o}${s}${br(r,!0)}`}else o=`${o}/wc?${r}`;return o}function hr(t){let e="_self";gr()?e="_top":(pr()||t.startsWith("https://")||t.startsWith("http://"))&&(e="_blank"),window.open(t,e,"noreferrer noopener")}async function ui(t,e){let n="";try{if(zt()&&(n=localStorage.getItem(e),n))return n;n=await t.getItem(e)}catch(r){console.error(r)}return n}function Je(t,e){return t.filter(n=>e.includes(n))}function li(t,e){if(!t.includes(e))return null;const n=t.split(/([&,?,=])/),r=n.indexOf(e);return n[r+2]}function di(){return typeof crypto<"u"&&crypto!=null&&crypto.randomUUID?crypto.randomUUID():"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/gu,t=>{const e=Math.random()*16|0;return(t==="x"?e:e&3|8).toString(16)})}function hi(){return typeof process<"u"&&({"MIX_WALLETCONNECT_PROJECT_ID":"d657fc2caf26f35212226268cf9745d0"}).IS_VITEST==="true"}function pr(){return typeof window<"u"&&(!!window.TelegramWebviewProxy||!!window.Telegram||!!window.TelegramWebviewProxyProto)}function gr(){try{return window.self!==window.top}catch{return!1}}function br(t,e=!1){const n=Buffer.from(t).toString("base64");return e?n.replace(/[=]/g,""):n}function Qe(t){return Buffer.from(t,"base64").toString("utf-8")}function pi(t){return new Promise(e=>setTimeout(e,t))}class gi{constructor({limit:e}){tr(this,"limit"),tr(this,"set"),this.limit=e,this.set=new Set}add(e){if(!this.set.has(e)){if(this.set.size>=this.limit){const n=this.set.values().next().value;n&&this.set.delete(n)}this.set.add(e)}}has(e){return this.set.has(e)}}const Be=BigInt(2**32-1),yr=BigInt(32);function mr(t,e=!1){return e?{h:Number(t&Be),l:Number(t>>yr&Be)}:{h:Number(t>>yr&Be)|0,l:Number(t&Be)|0}}function wr(t,e=!1){const n=t.length;let r=new Uint32Array(n),o=new Uint32Array(n);for(let s=0;s<n;s++){const{h:i,l:f}=mr(t[s],e);[r[s],o[s]]=[i,f]}return[r,o]}const xr=(t,e,n)=>t>>>n,vr=(t,e,n)=>t<<32-n|e>>>n,At=(t,e,n)=>t>>>n|e<<32-n,St=(t,e,n)=>t<<32-n|e>>>n,se=(t,e,n)=>t<<64-n|e>>>n-32,ie=(t,e,n)=>t>>>n-32|e<<64-n,bi=(t,e)=>e,yi=(t,e)=>t,mi=(t,e,n)=>t<<n|e>>>32-n,wi=(t,e,n)=>e<<n|t>>>32-n,xi=(t,e,n)=>e<<n-32|t>>>64-n,vi=(t,e,n)=>t<<n-32|e>>>64-n;function dt(t,e,n,r){const o=(e>>>0)+(r>>>0);return{h:t+n+(o/2**32|0)|0,l:o|0}}const tn=(t,e,n)=>(t>>>0)+(e>>>0)+(n>>>0),en=(t,e,n,r)=>e+n+r+(t/2**32|0)|0,Ei=(t,e,n,r)=>(t>>>0)+(e>>>0)+(n>>>0)+(r>>>0),Bi=(t,e,n,r,o)=>e+n+r+o+(t/2**32|0)|0,Ii=(t,e,n,r,o)=>(t>>>0)+(e>>>0)+(n>>>0)+(r>>>0)+(o>>>0),Ai=(t,e,n,r,o,s)=>e+n+r+o+s+(t/2**32|0)|0,Gt=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;function nn(t){return t instanceof Uint8Array||ArrayBuffer.isView(t)&&t.constructor.name==="Uint8Array"}function mt(t){if(!Number.isSafeInteger(t)||t<0)throw new Error("positive integer expected, got "+t)}function at(t,...e){if(!nn(t))throw new Error("Uint8Array expected");if(e.length>0&&!e.includes(t.length))throw new Error("Uint8Array expected of length "+e+", got length="+t.length)}function rn(t){if(typeof t!="function"||typeof t.create!="function")throw new Error("Hash should be wrapped by utils.createHasher");mt(t.outputLen),mt(t.blockLen)}function Nt(t,e=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(e&&t.finished)throw new Error("Hash#digest() has already been called")}function on(t,e){at(t);const n=e.outputLen;if(t.length<n)throw new Error("digestInto() expects output buffer of length at least "+n)}function fe(t){return new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4))}function ut(...t){for(let e=0;e<t.length;e++)t[e].fill(0)}function sn(t){return new DataView(t.buffer,t.byteOffset,t.byteLength)}function gt(t,e){return t<<32-e|t>>>e}const Er=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;function Br(t){return t<<24&4278190080|t<<8&16711680|t>>>8&65280|t>>>24&255}const wt=Er?t=>t:t=>Br(t);function Si(t){for(let e=0;e<t.length;e++)t[e]=Br(t[e]);return t}const Ot=Er?t=>t:Si,Ir=typeof Uint8Array.from([]).toHex=="function"&&typeof Uint8Array.fromHex=="function",Ni=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,"0"));function ce(t){if(at(t),Ir)return t.toHex();let e="";for(let n=0;n<t.length;n++)e+=Ni[t[n]];return e}const xt={_0:48,_9:57,A:65,F:70,a:97,f:102};function Ar(t){if(t>=xt._0&&t<=xt._9)return t-xt._0;if(t>=xt.A&&t<=xt.F)return t-(xt.A-10);if(t>=xt.a&&t<=xt.f)return t-(xt.a-10)}function fn(t){if(typeof t!="string")throw new Error("hex string expected, got "+typeof t);if(Ir)return Uint8Array.fromHex(t);const e=t.length,n=e/2;if(e%2)throw new Error("hex string expected, got unpadded hex of length "+e);const r=new Uint8Array(n);for(let o=0,s=0;o<n;o++,s+=2){const i=Ar(t.charCodeAt(s)),f=Ar(t.charCodeAt(s+1));if(i===void 0||f===void 0){const a=t[s]+t[s+1];throw new Error('hex string expected, got non-hex character "'+a+'" at index '+s)}r[o]=i*16+f}return r}function Oi(t){if(typeof t!="string")throw new Error("string expected");return new Uint8Array(new TextEncoder().encode(t))}function ht(t){return typeof t=="string"&&(t=Oi(t)),at(t),t}function Ht(...t){let e=0;for(let r=0;r<t.length;r++){const o=t[r];at(o),e+=o.length}const n=new Uint8Array(e);for(let r=0,o=0;r<t.length;r++){const s=t[r];n.set(s,o),o+=s.length}return n}class Ie{}function ae(t){const e=r=>t().update(ht(r)).digest(),n=t();return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=()=>t(),e}function Ui(t){const e=(r,o)=>t(o).update(ht(r)).digest(),n=t({});return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=r=>t(r),e}function Zt(t=32){if(Gt&&typeof Gt.getRandomValues=="function")return Gt.getRandomValues(new Uint8Array(t));if(Gt&&typeof Gt.randomBytes=="function")return Uint8Array.from(Gt.randomBytes(t));throw new Error("crypto.getRandomValues must be defined")}const _i=BigInt(0),ue=BigInt(1),Ti=BigInt(2),Ri=BigInt(7),$i=BigInt(256),Ci=BigInt(113),Sr=[],Nr=[],Or=[];for(let t=0,e=ue,n=1,r=0;t<24;t++){[n,r]=[r,(2*n+3*r)%5],Sr.push(2*(5*r+n)),Nr.push((t+1)*(t+2)/2%64);let o=_i;for(let s=0;s<7;s++)e=(e<<ue^(e>>Ri)*Ci)%$i,e&Ti&&(o^=ue<<(ue<<BigInt(s))-ue);Or.push(o)}const Ur=wr(Or,!0),Li=Ur[0],ji=Ur[1],_r=(t,e,n)=>n>32?xi(t,e,n):mi(t,e,n),Tr=(t,e,n)=>n>32?vi(t,e,n):wi(t,e,n);function ki(t,e=24){const n=new Uint32Array(10);for(let r=24-e;r<24;r++){for(let i=0;i<10;i++)n[i]=t[i]^t[i+10]^t[i+20]^t[i+30]^t[i+40];for(let i=0;i<10;i+=2){const f=(i+8)%10,a=(i+2)%10,l=n[a],c=n[a+1],u=_r(l,c,1)^n[f],h=Tr(l,c,1)^n[f+1];for(let g=0;g<50;g+=10)t[i+g]^=u,t[i+g+1]^=h}let o=t[2],s=t[3];for(let i=0;i<24;i++){const f=Nr[i],a=_r(o,s,f),l=Tr(o,s,f),c=Sr[i];o=t[c],s=t[c+1],t[c]=a,t[c+1]=l}for(let i=0;i<50;i+=10){for(let f=0;f<10;f++)n[f]=t[i+f];for(let f=0;f<10;f++)t[i+f]^=~n[(f+2)%10]&n[(f+4)%10]}t[0]^=Li[r],t[1]^=ji[r]}ut(n)}class qn extends Ie{constructor(e,n,r,o=!1,s=24){if(super(),this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,this.enableXOF=!1,this.blockLen=e,this.suffix=n,this.outputLen=r,this.enableXOF=o,this.rounds=s,mt(r),!(0<e&&e<200))throw new Error("only keccak-f1600 function is supported");this.state=new Uint8Array(200),this.state32=fe(this.state)}clone(){return this._cloneInto()}keccak(){Ot(this.state32),ki(this.state32,this.rounds),Ot(this.state32),this.posOut=0,this.pos=0}update(e){Nt(this),e=ht(e),at(e);const{blockLen:n,state:r}=this,o=e.length;for(let s=0;s<o;){const i=Math.min(n-this.pos,o-s);for(let f=0;f<i;f++)r[this.pos++]^=e[s++];this.pos===n&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:e,suffix:n,pos:r,blockLen:o}=this;e[r]^=n,(n&128)!==0&&r===o-1&&this.keccak(),e[o-1]^=128,this.keccak()}writeInto(e){Nt(this,!1),at(e),this.finish();const n=this.state,{blockLen:r}=this;for(let o=0,s=e.length;o<s;){this.posOut>=r&&this.keccak();const i=Math.min(r-this.posOut,s-o);e.set(n.subarray(this.posOut,this.posOut+i),o),this.posOut+=i,o+=i}return e}xofInto(e){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){return mt(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(on(e,this),this.finished)throw new Error("digest() was already called");return this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,ut(this.state)}_cloneInto(e){const{blockLen:n,suffix:r,outputLen:o,rounds:s,enableXOF:i}=this;return e||(e=new qn(n,r,o,i,s)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=s,e.suffix=r,e.outputLen=o,e.enableXOF=i,e.destroyed=this.destroyed,e}}const Pi=(t,e,n)=>ae(()=>new qn(e,t,n)),Hi=Pi(1,136,256/8);function Di(t,e,n,r){if(typeof t.setBigUint64=="function")return t.setBigUint64(e,n,r);const o=BigInt(32),s=BigInt(4294967295),i=Number(n>>o&s),f=Number(n&s),a=r?4:0,l=r?0:4;t.setUint32(e+a,i,r),t.setUint32(e+l,f,r)}function Mi(t,e,n){return t&e^~t&n}function Vi(t,e,n){return t&e^t&n^e&n}class Rr extends Ie{constructor(e,n,r,o){super(),this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.blockLen=e,this.outputLen=n,this.padOffset=r,this.isLE=o,this.buffer=new Uint8Array(e),this.view=sn(this.buffer)}update(e){Nt(this),e=ht(e),at(e);const{view:n,buffer:r,blockLen:o}=this,s=e.length;for(let i=0;i<s;){const f=Math.min(o-this.pos,s-i);if(f===o){const a=sn(e);for(;o<=s-i;i+=o)this.process(a,i);continue}r.set(e.subarray(i,i+f),this.pos),this.pos+=f,i+=f,this.pos===o&&(this.process(n,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){Nt(this),on(e,this),this.finished=!0;const{buffer:n,view:r,blockLen:o,isLE:s}=this;let{pos:i}=this;n[i++]=128,ut(this.buffer.subarray(i)),this.padOffset>o-i&&(this.process(r,0),i=0);for(let u=i;u<o;u++)n[u]=0;Di(r,o-8,BigInt(this.length*8),s),this.process(r,0);const f=sn(e),a=this.outputLen;if(a%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const l=a/4,c=this.get();if(l>c.length)throw new Error("_sha2: outputLen bigger than state");for(let u=0;u<l;u++)f.setUint32(4*u,c[u],s)}digest(){const{buffer:e,outputLen:n}=this;this.digestInto(e);const r=e.slice(0,n);return this.destroy(),r}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:n,buffer:r,length:o,finished:s,destroyed:i,pos:f}=this;return e.destroyed=i,e.finished=s,e.length=o,e.pos=f,o%n&&e.buffer.set(r),e}clone(){return this._cloneInto()}}const Ut=Uint32Array.from([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),W=Uint32Array.from([3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]),Y=Uint32Array.from([1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209]),qi=Uint32Array.from([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),_t=new Uint32Array(64);class Ki extends Rr{constructor(e=32){super(64,e,8,!1),this.A=Ut[0]|0,this.B=Ut[1]|0,this.C=Ut[2]|0,this.D=Ut[3]|0,this.E=Ut[4]|0,this.F=Ut[5]|0,this.G=Ut[6]|0,this.H=Ut[7]|0}get(){const{A:e,B:n,C:r,D:o,E:s,F:i,G:f,H:a}=this;return[e,n,r,o,s,i,f,a]}set(e,n,r,o,s,i,f,a){this.A=e|0,this.B=n|0,this.C=r|0,this.D=o|0,this.E=s|0,this.F=i|0,this.G=f|0,this.H=a|0}process(e,n){for(let u=0;u<16;u++,n+=4)_t[u]=e.getUint32(n,!1);for(let u=16;u<64;u++){const h=_t[u-15],g=_t[u-2],w=gt(h,7)^gt(h,18)^h>>>3,y=gt(g,17)^gt(g,19)^g>>>10;_t[u]=y+_t[u-7]+w+_t[u-16]|0}let{A:r,B:o,C:s,D:i,E:f,F:a,G:l,H:c}=this;for(let u=0;u<64;u++){const h=gt(f,6)^gt(f,11)^gt(f,25),g=c+h+Mi(f,a,l)+qi[u]+_t[u]|0,y=(gt(r,2)^gt(r,13)^gt(r,22))+Vi(r,o,s)|0;c=l,l=a,a=f,f=i+g|0,i=s,s=o,o=r,r=g+y|0}r=r+this.A|0,o=o+this.B|0,s=s+this.C|0,i=i+this.D|0,f=f+this.E|0,a=a+this.F|0,l=l+this.G|0,c=c+this.H|0,this.set(r,o,s,i,f,a,l,c)}roundClean(){ut(_t)}destroy(){this.set(0,0,0,0,0,0,0,0),ut(this.buffer)}}const $r=wr(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(t=>BigInt(t))),Fi=$r[0],zi=$r[1],Tt=new Uint32Array(80),Rt=new Uint32Array(80);class cn extends Rr{constructor(e=64){super(128,e,16,!1),this.Ah=Y[0]|0,this.Al=Y[1]|0,this.Bh=Y[2]|0,this.Bl=Y[3]|0,this.Ch=Y[4]|0,this.Cl=Y[5]|0,this.Dh=Y[6]|0,this.Dl=Y[7]|0,this.Eh=Y[8]|0,this.El=Y[9]|0,this.Fh=Y[10]|0,this.Fl=Y[11]|0,this.Gh=Y[12]|0,this.Gl=Y[13]|0,this.Hh=Y[14]|0,this.Hl=Y[15]|0}get(){const{Ah:e,Al:n,Bh:r,Bl:o,Ch:s,Cl:i,Dh:f,Dl:a,Eh:l,El:c,Fh:u,Fl:h,Gh:g,Gl:w,Hh:y,Hl:x}=this;return[e,n,r,o,s,i,f,a,l,c,u,h,g,w,y,x]}set(e,n,r,o,s,i,f,a,l,c,u,h,g,w,y,x){this.Ah=e|0,this.Al=n|0,this.Bh=r|0,this.Bl=o|0,this.Ch=s|0,this.Cl=i|0,this.Dh=f|0,this.Dl=a|0,this.Eh=l|0,this.El=c|0,this.Fh=u|0,this.Fl=h|0,this.Gh=g|0,this.Gl=w|0,this.Hh=y|0,this.Hl=x|0}process(e,n){for(let L=0;L<16;L++,n+=4)Tt[L]=e.getUint32(n),Rt[L]=e.getUint32(n+=4);for(let L=16;L<80;L++){const V=Tt[L-15]|0,_=Rt[L-15]|0,k=At(V,_,1)^At(V,_,8)^xr(V,_,7),j=St(V,_,1)^St(V,_,8)^vr(V,_,7),$=Tt[L-2]|0,d=Rt[L-2]|0,m=At($,d,19)^se($,d,61)^xr($,d,6),p=St($,d,19)^ie($,d,61)^vr($,d,6),b=Ei(j,p,Rt[L-7],Rt[L-16]),v=Bi(b,k,m,Tt[L-7],Tt[L-16]);Tt[L]=v|0,Rt[L]=b|0}let{Ah:r,Al:o,Bh:s,Bl:i,Ch:f,Cl:a,Dh:l,Dl:c,Eh:u,El:h,Fh:g,Fl:w,Gh:y,Gl:x,Hh:R,Hl:M}=this;for(let L=0;L<80;L++){const V=At(u,h,14)^At(u,h,18)^se(u,h,41),_=St(u,h,14)^St(u,h,18)^ie(u,h,41),k=u&g^~u&y,j=h&w^~h&x,$=Ii(M,_,j,zi[L],Rt[L]),d=Ai($,R,V,k,Fi[L],Tt[L]),m=$|0,p=At(r,o,28)^se(r,o,34)^se(r,o,39),b=St(r,o,28)^ie(r,o,34)^ie(r,o,39),v=r&s^r&f^s&f,B=o&i^o&a^i&a;R=y|0,M=x|0,y=g|0,x=w|0,g=u|0,w=h|0,{h:u,l:h}=dt(l|0,c|0,d|0,m|0),l=f|0,c=a|0,f=s|0,a=i|0,s=r|0,i=o|0;const E=tn(m,b,B);r=en(E,d,p,v),o=E|0}({h:r,l:o}=dt(this.Ah|0,this.Al|0,r|0,o|0)),{h:s,l:i}=dt(this.Bh|0,this.Bl|0,s|0,i|0),{h:f,l:a}=dt(this.Ch|0,this.Cl|0,f|0,a|0),{h:l,l:c}=dt(this.Dh|0,this.Dl|0,l|0,c|0),{h:u,l:h}=dt(this.Eh|0,this.El|0,u|0,h|0),{h:g,l:w}=dt(this.Fh|0,this.Fl|0,g|0,w|0),{h:y,l:x}=dt(this.Gh|0,this.Gl|0,y|0,x|0),{h:R,l:M}=dt(this.Hh|0,this.Hl|0,R|0,M|0),this.set(r,o,s,i,f,a,l,c,u,h,g,w,y,x,R,M)}roundClean(){ut(Tt,Rt)}destroy(){ut(this.buffer),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}class Gi extends cn{constructor(){super(48),this.Ah=W[0]|0,this.Al=W[1]|0,this.Bh=W[2]|0,this.Bl=W[3]|0,this.Ch=W[4]|0,this.Cl=W[5]|0,this.Dh=W[6]|0,this.Dl=W[7]|0,this.Eh=W[8]|0,this.El=W[9]|0,this.Fh=W[10]|0,this.Fl=W[11]|0,this.Gh=W[12]|0,this.Gl=W[13]|0,this.Hh=W[14]|0,this.Hl=W[15]|0}}const X=Uint32Array.from([573645204,4230739756,2673172387,3360449730,596883563,1867755857,2520282905,1497426621,2519219938,2827943907,3193839141,1401305490,721525244,746961066,246885852,2177182882]);class Zi extends cn{constructor(){super(32),this.Ah=X[0]|0,this.Al=X[1]|0,this.Bh=X[2]|0,this.Bl=X[3]|0,this.Ch=X[4]|0,this.Cl=X[5]|0,this.Dh=X[6]|0,this.Dl=X[7]|0,this.Eh=X[8]|0,this.El=X[9]|0,this.Fh=X[10]|0,this.Fl=X[11]|0,this.Gh=X[12]|0,this.Gl=X[13]|0,this.Hh=X[14]|0,this.Hl=X[15]|0}}const Ae=ae(()=>new Ki),Wi=ae(()=>new cn),Yi=ae(()=>new Gi),Xi=ae(()=>new Zi),Ji=Uint8Array.from([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9]),F=Uint32Array.from([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),N=new Uint32Array(32);function $t(t,e,n,r,o,s){const i=o[s],f=o[s+1];let a=N[2*t],l=N[2*t+1],c=N[2*e],u=N[2*e+1],h=N[2*n],g=N[2*n+1],w=N[2*r],y=N[2*r+1],x=tn(a,c,i);l=en(x,l,u,f),a=x|0,{Dh:y,Dl:w}={Dh:y^l,Dl:w^a},{Dh:y,Dl:w}={Dh:bi(y,w),Dl:yi(y)},{h:g,l:h}=dt(g,h,y,w),{Bh:u,Bl:c}={Bh:u^g,Bl:c^h},{Bh:u,Bl:c}={Bh:At(u,c,24),Bl:St(u,c,24)},N[2*t]=a,N[2*t+1]=l,N[2*e]=c,N[2*e+1]=u,N[2*n]=h,N[2*n+1]=g,N[2*r]=w,N[2*r+1]=y}function Ct(t,e,n,r,o,s){const i=o[s],f=o[s+1];let a=N[2*t],l=N[2*t+1],c=N[2*e],u=N[2*e+1],h=N[2*n],g=N[2*n+1],w=N[2*r],y=N[2*r+1],x=tn(a,c,i);l=en(x,l,u,f),a=x|0,{Dh:y,Dl:w}={Dh:y^l,Dl:w^a},{Dh:y,Dl:w}={Dh:At(y,w,16),Dl:St(y,w,16)},{h:g,l:h}=dt(g,h,y,w),{Bh:u,Bl:c}={Bh:u^g,Bl:c^h},{Bh:u,Bl:c}={Bh:se(u,c,63),Bl:ie(u,c,63)},N[2*t]=a,N[2*t+1]=l,N[2*e]=c,N[2*e+1]=u,N[2*n]=h,N[2*n+1]=g,N[2*r]=w,N[2*r+1]=y}function Qi(t,e={},n,r,o){if(mt(n),t<0||t>n)throw new Error("outputLen bigger than keyLen");const{key:s,salt:i,personalization:f}=e;if(s!==void 0&&(s.length<1||s.length>n))throw new Error("key length must be undefined or 1.."+n);if(i!==void 0&&i.length!==r)throw new Error("salt must be undefined or "+r);if(f!==void 0&&f.length!==o)throw new Error("personalization must be undefined or "+o)}class tf extends Ie{constructor(e,n){super(),this.finished=!1,this.destroyed=!1,this.length=0,this.pos=0,mt(e),mt(n),this.blockLen=e,this.outputLen=n,this.buffer=new Uint8Array(e),this.buffer32=fe(this.buffer)}update(e){Nt(this),e=ht(e),at(e);const{blockLen:n,buffer:r,buffer32:o}=this,s=e.length,i=e.byteOffset,f=e.buffer;for(let a=0;a<s;){this.pos===n&&(Ot(o),this.compress(o,0,!1),Ot(o),this.pos=0);const l=Math.min(n-this.pos,s-a),c=i+a;if(l===n&&!(c%4)&&a+l<s){const u=new Uint32Array(f,c,Math.floor((s-a)/4));Ot(u);for(let h=0;a+n<s;h+=o.length,a+=n)this.length+=n,this.compress(u,h,!1);Ot(u);continue}r.set(e.subarray(a,a+l),this.pos),this.pos+=l,this.length+=l,a+=l}return this}digestInto(e){Nt(this),on(e,this);const{pos:n,buffer32:r}=this;this.finished=!0,ut(this.buffer.subarray(n)),Ot(r),this.compress(r,0,!0),Ot(r);const o=fe(e);this.get().forEach((s,i)=>o[i]=wt(s))}digest(){const{buffer:e,outputLen:n}=this;this.digestInto(e);const r=e.slice(0,n);return this.destroy(),r}_cloneInto(e){const{buffer:n,length:r,finished:o,destroyed:s,outputLen:i,pos:f}=this;return e||(e=new this.constructor({dkLen:i})),e.set(...this.get()),e.buffer.set(n),e.destroyed=s,e.finished=o,e.length=r,e.pos=f,e.outputLen=i,e}clone(){return this._cloneInto()}}class ef extends tf{constructor(e={}){const n=e.dkLen===void 0?64:e.dkLen;super(128,n),this.v0l=F[0]|0,this.v0h=F[1]|0,this.v1l=F[2]|0,this.v1h=F[3]|0,this.v2l=F[4]|0,this.v2h=F[5]|0,this.v3l=F[6]|0,this.v3h=F[7]|0,this.v4l=F[8]|0,this.v4h=F[9]|0,this.v5l=F[10]|0,this.v5h=F[11]|0,this.v6l=F[12]|0,this.v6h=F[13]|0,this.v7l=F[14]|0,this.v7h=F[15]|0,Qi(n,e,64,16,16);let{key:r,personalization:o,salt:s}=e,i=0;if(r!==void 0&&(r=ht(r),i=r.length),this.v0l^=this.outputLen|i<<8|65536|1<<24,s!==void 0){s=ht(s);const f=fe(s);this.v4l^=wt(f[0]),this.v4h^=wt(f[1]),this.v5l^=wt(f[2]),this.v5h^=wt(f[3])}if(o!==void 0){o=ht(o);const f=fe(o);this.v6l^=wt(f[0]),this.v6h^=wt(f[1]),this.v7l^=wt(f[2]),this.v7h^=wt(f[3])}if(r!==void 0){const f=new Uint8Array(this.blockLen);f.set(r),this.update(f)}}get(){let{v0l:e,v0h:n,v1l:r,v1h:o,v2l:s,v2h:i,v3l:f,v3h:a,v4l:l,v4h:c,v5l:u,v5h:h,v6l:g,v6h:w,v7l:y,v7h:x}=this;return[e,n,r,o,s,i,f,a,l,c,u,h,g,w,y,x]}set(e,n,r,o,s,i,f,a,l,c,u,h,g,w,y,x){this.v0l=e|0,this.v0h=n|0,this.v1l=r|0,this.v1h=o|0,this.v2l=s|0,this.v2h=i|0,this.v3l=f|0,this.v3h=a|0,this.v4l=l|0,this.v4h=c|0,this.v5l=u|0,this.v5h=h|0,this.v6l=g|0,this.v6h=w|0,this.v7l=y|0,this.v7h=x|0}compress(e,n,r){this.get().forEach((a,l)=>N[l]=a),N.set(F,16);let{h:o,l:s}=mr(BigInt(this.length));N[24]=F[8]^s,N[25]=F[9]^o,r&&(N[28]=~N[28],N[29]=~N[29]);let i=0;const f=Ji;for(let a=0;a<12;a++)$t(0,4,8,12,e,n+2*f[i++]),Ct(0,4,8,12,e,n+2*f[i++]),$t(1,5,9,13,e,n+2*f[i++]),Ct(1,5,9,13,e,n+2*f[i++]),$t(2,6,10,14,e,n+2*f[i++]),Ct(2,6,10,14,e,n+2*f[i++]),$t(3,7,11,15,e,n+2*f[i++]),Ct(3,7,11,15,e,n+2*f[i++]),$t(0,5,10,15,e,n+2*f[i++]),Ct(0,5,10,15,e,n+2*f[i++]),$t(1,6,11,12,e,n+2*f[i++]),Ct(1,6,11,12,e,n+2*f[i++]),$t(2,7,8,13,e,n+2*f[i++]),Ct(2,7,8,13,e,n+2*f[i++]),$t(3,4,9,14,e,n+2*f[i++]),Ct(3,4,9,14,e,n+2*f[i++]);this.v0l^=N[0]^N[16],this.v0h^=N[1]^N[17],this.v1l^=N[2]^N[18],this.v1h^=N[3]^N[19],this.v2l^=N[4]^N[20],this.v2h^=N[5]^N[21],this.v3l^=N[6]^N[22],this.v3h^=N[7]^N[23],this.v4l^=N[8]^N[24],this.v4h^=N[9]^N[25],this.v5l^=N[10]^N[26],this.v5h^=N[11]^N[27],this.v6l^=N[12]^N[28],this.v6h^=N[13]^N[29],this.v7l^=N[14]^N[30],this.v7h^=N[15]^N[31],ut(N)}destroy(){this.destroyed=!0,ut(this.buffer32),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const nf=Ui(t=>new ef(t)),rf="https://rpc.walletconnect.org/v1";function an(t){const e=`Ethereum Signed Message:
${t.length}`,n=new TextEncoder().encode(e+t);return"0x"+Buffer.from(Hi(n)).toString("hex")}async function Cr(t,e,n,r,o,s){switch(n.t){case"eip191":return await Lr(t,e,n.s);case"eip1271":return await jr(t,e,n.s,r,o,s);default:throw new Error(`verifySignature failed: Attempted to verify CacaoSignature with unknown type: ${n.t}`)}}async function Lr(t,e,n){return(await (0,viem__WEBPACK_IMPORTED_MODULE_4__.recoverAddress)({hash:an(e),signature:n})).toLowerCase()===t.toLowerCase()}async function jr(t,e,n,r,o,s){const i=Fe(r);if(!i.namespace||!i.reference)throw new Error(`isValidEip1271Signature failed: chainId must be in CAIP-2 format, received: ${r}`);try{const f="0x1626ba7e",a="0000000000000000000000000000000000000000000000000000000000000040",l=n.substring(2),c=(l.length/2).toString(16).padStart(64,"0"),u=(e.startsWith("0x")?e:an(e)).substring(2),h=f+u+a+c+l,g=await fetch(`${s||rf}/?chainId=${r}&projectId=${o}`,{headers:{"Content-Type":"application/json"},method:"POST",body:JSON.stringify({id:of(),jsonrpc:"2.0",method:"eth_call",params:[{to:t,data:h},"latest"]})}),{result:w}=await g.json();return w?w.slice(0,f.length).toLowerCase()===f.toLowerCase():!1}catch(f){return console.error("isValidEip1271Signature: ",f),!1}}function of(){return Date.now()+Math.floor(Math.random()*1e3)}function sf(t){const e=atob(t),n=new Uint8Array(e.length);for(let i=0;i<e.length;i++)n[i]=e.charCodeAt(i);const r=n[0];if(r===0)throw new Error("No signatures found");const o=1+r*64;if(n.length<o)throw new Error("Transaction data too short for claimed signature count");if(n.length<100)throw new Error("Transaction too short");const s=Buffer.from(t,"base64").slice(1,65);return bs58__WEBPACK_IMPORTED_MODULE_5__["default"].encode(s)}function ff(t){const e=new Uint8Array(Buffer.from(t,"base64")),n=Array.from("TransactionData::").map(s=>s.charCodeAt(0)),r=new Uint8Array(n.length+e.length);r.set(n),r.set(e,n.length);const o=nf(r,{dkLen:32});return bs58__WEBPACK_IMPORTED_MODULE_5__["default"].encode(o)}function cf(t){const e=new Uint8Array(Ae(kr(t)));return bs58__WEBPACK_IMPORTED_MODULE_5__["default"].encode(e)}function kr(t){if(t instanceof Uint8Array)return t;if(Array.isArray(t))return new Uint8Array(t);if(typeof t=="object"&&t!=null&&t.data)return new Uint8Array(Object.values(t.data));if(typeof t=="object"&&t)return new Uint8Array(Object.values(t));throw new Error("getNearUint8ArrayFromBytes: Unexpected result type from bytes array")}function af(t){const e=Buffer.from(t,"base64"),n=(0,_msgpack_msgpack__WEBPACK_IMPORTED_MODULE_7__.decode)(e).txn;if(!n)throw new Error("Invalid signed transaction: missing 'txn' field");const r=(0,_msgpack_msgpack__WEBPACK_IMPORTED_MODULE_6__.encode)(n),o=Buffer.from("TX"),s=Buffer.concat([o,Buffer.from(r)]),i=Xi(s);return _scure_base__WEBPACK_IMPORTED_MODULE_8__.base32.encode(i).replace(/=+$/,"")}function un(t){const e=[];let n=BigInt(t);for(;n>=BigInt(128);)e.push(Number(n&BigInt(127)|BigInt(128))),n>>=BigInt(7);return e.push(Number(n)),Buffer.from(e)}function uf(t){const e=Buffer.from(t.signed.bodyBytes,"base64"),n=Buffer.from(t.signed.authInfoBytes,"base64"),r=Buffer.from(t.signature.signature,"base64"),o=[];o.push(Buffer.from([10])),o.push(un(e.length)),o.push(e),o.push(Buffer.from([18])),o.push(un(n.length)),o.push(n),o.push(Buffer.from([26])),o.push(un(r.length)),o.push(r);const s=Buffer.concat(o),i=Ae(s);return Buffer.from(i).toString("hex").toUpperCase()}var lf=Object.defineProperty,df=Object.defineProperties,hf=Object.getOwnPropertyDescriptors,Pr=Object.getOwnPropertySymbols,pf=Object.prototype.hasOwnProperty,gf=Object.prototype.propertyIsEnumerable,Hr=(t,e,n)=>e in t?lf(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,ln=(t,e)=>{for(var n in e||(e={}))pf.call(e,n)&&Hr(t,n,e[n]);if(Pr)for(var n of Pr(e))gf.call(e,n)&&Hr(t,n,e[n]);return t},Dr=(t,e)=>df(t,hf(e));const bf="did:pkh:",Se=t=>t?.split(":"),Mr=t=>{const e=t&&Se(t);if(e)return t.includes(bf)?e[3]:e[1]},Vr=t=>{const e=t&&Se(t);if(e)return e[2]+":"+e[3]},dn=t=>{const e=t&&Se(t);if(e)return e.pop()};async function yf(t){const{cacao:e,projectId:n}=t,{s:r,p:o}=e,s=qr(o,o.iss),i=dn(o.iss);return await Cr(i,s,r,Vr(o.iss),n)}const qr=(t,e)=>{const n=`${t.domain} wants you to sign in with your Ethereum account:`,r=dn(e);if(!t.aud&&!t.uri)throw new Error("Either `aud` or `uri` is required to construct the message");let o=t.statement||void 0;const s=`URI: ${t.aud||t.uri}`,i=`Version: ${t.version}`,f=`Chain ID: ${Mr(e)}`,a=`Nonce: ${t.nonce}`,l=`Issued At: ${t.iat}`,c=t.exp?`Expiration Time: ${t.exp}`:void 0,u=t.nbf?`Not Before: ${t.nbf}`:void 0,h=t.requestId?`Request ID: ${t.requestId}`:void 0,g=t.resources?`Resources:${t.resources.map(y=>`
- ${y}`).join("")}`:void 0,w=Oe(t.resources);if(w){const y=Lt(w);o=gn(o,y)}return[n,r,"",o,"",s,i,f,a,l,c,u,h,g].filter(y=>y!=null).join(`
`)};function mf(t,e,n){return n.includes("did:pkh:")||(n=`did:pkh:${n}`),{h:{t:"caip122"},p:{iss:n,domain:t.domain,aud:t.aud,version:t.version,nonce:t.nonce,iat:t.iat,statement:t.statement,requestId:t.requestId,resources:t.resources,nbf:t.nbf,exp:t.exp},s:e}}function wf(t){var e;const{authPayload:n,chains:r,methods:o}=t,s=n.statement||"";if(!(r!=null&&r.length))return n;const i=n.chains,f=Je(i,r);if(!(f!=null&&f.length))throw new Error("No supported chains");const a=Kr(n.resources);if(!a)return n;bt(a);const l=Fr(a,"eip155");let c=n?.resources||[];if(l!=null&&l.length){const u=zr(l),h=Je(u,o);if(!(h!=null&&h.length))throw new Error(`Supported methods don't satisfy the requested: ${JSON.stringify(u)}, supported: ${JSON.stringify(o)}`);const g=hn("request",h,{chains:f}),w=Yr(a,"eip155",g);c=((e=n?.resources)==null?void 0:e.slice(0,-1))||[],c.push(Ne(w))}return Dr(ln({},n),{statement:Jr(s,Oe(c)),chains:f,resources:n!=null&&n.resources||c.length>0?c:void 0})}function Kr(t){const e=Oe(t);if(e&&pn(e))return Lt(e)}function xf(t,e){var n;return(n=t?.att)==null?void 0:n.hasOwnProperty(e)}function Fr(t,e){var n,r;return(n=t?.att)!=null&&n[e]?Object.keys((r=t?.att)==null?void 0:r[e]):[]}function vf(t){return t?.map(e=>Object.keys(e))||[]}function zr(t){return t?.map(e=>{var n;return(n=e.split("/"))==null?void 0:n[1]})||[]}function Gr(t){return Buffer.from(JSON.stringify(t)).toString("base64")}function Zr(t){return JSON.parse(Buffer.from(t,"base64").toString("utf-8"))}function bt(t){if(!t)throw new Error("No recap provided, value is undefined");if(!t.att)throw new Error("No `att` property found");const e=Object.keys(t.att);if(!(e!=null&&e.length))throw new Error("No resources found in `att` property");e.forEach(n=>{const r=t.att[n];if(Array.isArray(r))throw new Error(`Resource must be an object: ${n}`);if(typeof r!="object")throw new Error(`Resource must be an object: ${n}`);if(!Object.keys(r).length)throw new Error(`Resource object is empty: ${n}`);Object.keys(r).forEach(o=>{const s=r[o];if(!Array.isArray(s))throw new Error(`Ability limits ${o} must be an array of objects, found: ${s}`);if(!s.length)throw new Error(`Value of ${o} is empty array, must be an array with objects`);s.forEach(i=>{if(typeof i!="object")throw new Error(`Ability limits (${o}) must be an array of objects, found: ${i}`)})})})}function Wr(t,e,n,r={}){return n?.sort((o,s)=>o.localeCompare(s)),{att:{[t]:hn(e,n,r)}}}function Yr(t,e,n){var r;t.att[e]=ln({},n);const o=(r=Object.keys(t.att))==null?void 0:r.sort((i,f)=>i.localeCompare(f)),s={att:{}};return o.reduce((i,f)=>(i.att[f]=t.att[f],i),s)}function hn(t,e,n={}){e=e?.sort((o,s)=>o.localeCompare(s));const r=e.map(o=>({[`${t}/${o}`]:[n]}));return Object.assign({},...r)}function Ne(t){return bt(t),`urn:recap:${Gr(t).replace(/=/g,"")}`}function Lt(t){const e=Zr(t.replace("urn:recap:",""));return bt(e),e}function Ef(t,e,n){const r=Wr(t,e,n);return Ne(r)}function pn(t){return t&&t.includes("urn:recap:")}function Bf(t,e){const n=Lt(t),r=Lt(e),o=Xr(n,r);return Ne(o)}function Xr(t,e){bt(t),bt(e);const n=Object.keys(t.att).concat(Object.keys(e.att)).sort((o,s)=>o.localeCompare(s)),r={att:{}};return n.forEach(o=>{var s,i;Object.keys(((s=t.att)==null?void 0:s[o])||{}).concat(Object.keys(((i=e.att)==null?void 0:i[o])||{})).sort((f,a)=>f.localeCompare(a)).forEach(f=>{var a,l;r.att[o]=Dr(ln({},r.att[o]),{[f]:((a=t.att[o])==null?void 0:a[f])||((l=e.att[o])==null?void 0:l[f])})})}),r}function gn(t="",e){bt(e);const n="I further authorize the stated URI to perform the following actions on my behalf: ";if(t.includes(n))return t;const r=[];let o=0;Object.keys(e.att).forEach(f=>{const a=Object.keys(e.att[f]).map(u=>({ability:u.split("/")[0],action:u.split("/")[1]}));a.sort((u,h)=>u.action.localeCompare(h.action));const l={};a.forEach(u=>{l[u.ability]||(l[u.ability]=[]),l[u.ability].push(u.action)});const c=Object.keys(l).map(u=>(o++,`(${o}) '${u}': '${l[u].join("', '")}' for '${f}'.`));r.push(c.join(", ").replace(".,","."))});const s=r.join(" "),i=`${n}${s}`;return`${t?t+" ":""}${i}`}function If(t){var e;const n=Lt(t);bt(n);const r=(e=n.att)==null?void 0:e.eip155;return r?Object.keys(r).map(o=>o.split("/")[1]):[]}function Af(t){const e=Lt(t);bt(e);const n=[];return Object.values(e.att).forEach(r=>{Object.values(r).forEach(o=>{var s;(s=o?.[0])!=null&&s.chains&&n.push(o[0].chains)})}),[...new Set(n.flat())]}function Jr(t,e){if(!e)return t;const n=Lt(e);return bt(n),gn(t,n)}function Oe(t){if(!t)return;const e=t?.[t.length-1];return pn(e)?e:void 0}/*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */function Qr(t){return t instanceof Uint8Array||ArrayBuffer.isView(t)&&t.constructor.name==="Uint8Array"}function bn(t){if(typeof t!="boolean")throw new Error(`boolean expected, not ${t}`)}function yn(t){if(!Number.isSafeInteger(t)||t<0)throw new Error("positive integer expected, got "+t)}function nt(t,...e){if(!Qr(t))throw new Error("Uint8Array expected");if(e.length>0&&!e.includes(t.length))throw new Error("Uint8Array expected of length "+e+", got length="+t.length)}function to(t,e=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(e&&t.finished)throw new Error("Hash#digest() has already been called")}function Sf(t,e){nt(t);const n=e.outputLen;if(t.length<n)throw new Error("digestInto() expects output buffer of length at least "+n)}function jt(t){return new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4))}function Wt(...t){for(let e=0;e<t.length;e++)t[e].fill(0)}function Nf(t){return new DataView(t.buffer,t.byteOffset,t.byteLength)}const Of=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;function Uf(t){if(typeof t!="string")throw new Error("string expected");return new Uint8Array(new TextEncoder().encode(t))}function mn(t){if(typeof t=="string")t=Uf(t);else if(Qr(t))t=wn(t);else throw new Error("Uint8Array expected, got "+typeof t);return t}function _f(t,e){if(e==null||typeof e!="object")throw new Error("options must be defined");return Object.assign(t,e)}function Tf(t,e){if(t.length!==e.length)return!1;let n=0;for(let r=0;r<t.length;r++)n|=t[r]^e[r];return n===0}const Rf=(t,e)=>{function n(r,...o){if(nt(r),!Of)throw new Error("Non little-endian hardware is not yet supported");if(t.nonceLength!==void 0){const c=o[0];if(!c)throw new Error("nonce / iv required");t.varSizeNonce?nt(c):nt(c,t.nonceLength)}const s=t.tagLength;s&&o[1]!==void 0&&nt(o[1]);const i=e(r,...o),f=(c,u)=>{if(u!==void 0){if(c!==2)throw new Error("cipher output not supported");nt(u)}};let a=!1;return{encrypt(c,u){if(a)throw new Error("cannot encrypt() twice with same key + nonce");return a=!0,nt(c),f(i.encrypt.length,u),i.encrypt(c,u)},decrypt(c,u){if(nt(c),s&&c.length<s)throw new Error("invalid ciphertext length: smaller than tagLength="+s);return f(i.decrypt.length,u),i.decrypt(c,u)}}}return Object.assign(n,t),n};function eo(t,e,n=!0){if(e===void 0)return new Uint8Array(t);if(e.length!==t)throw new Error("invalid output length, expected "+t+", got: "+e.length);if(n&&!Cf(e))throw new Error("invalid output, must be aligned");return e}function no(t,e,n,r){if(typeof t.setBigUint64=="function")return t.setBigUint64(e,n,r);const o=BigInt(32),s=BigInt(4294967295),i=Number(n>>o&s),f=Number(n&s),a=r?4:0,l=r?0:4;t.setUint32(e+a,i,r),t.setUint32(e+l,f,r)}function $f(t,e,n){bn(n);const r=new Uint8Array(16),o=Nf(r);return no(o,0,BigInt(e),n),no(o,8,BigInt(t),n),r}function Cf(t){return t.byteOffset%4===0}function wn(t){return Uint8Array.from(t)}const ro=t=>Uint8Array.from(t.split("").map(e=>e.charCodeAt(0))),Lf=ro("expand 16-byte k"),jf=ro("expand 32-byte k"),kf=jt(Lf),Pf=jt(jf);function D(t,e){return t<<e|t>>>32-e}function xn(t){return t.byteOffset%4===0}const Ue=64,Hf=16,oo=2**32-1,so=new Uint32Array;function Df(t,e,n,r,o,s,i,f){const a=o.length,l=new Uint8Array(Ue),c=jt(l),u=xn(o)&&xn(s),h=u?jt(o):so,g=u?jt(s):so;for(let w=0;w<a;i++){if(t(e,n,r,c,i,f),i>=oo)throw new Error("arx: counter overflow");const y=Math.min(Ue,a-w);if(u&&y===Ue){const x=w/4;if(w%4!==0)throw new Error("arx: invalid block position");for(let R=0,M;R<Hf;R++)M=x+R,g[M]=h[M]^c[R];w+=Ue;continue}for(let x=0,R;x<y;x++)R=w+x,s[R]=o[R]^l[x];w+=y}}function Mf(t,e){const{allowShortKeys:n,extendNonceFn:r,counterLength:o,counterRight:s,rounds:i}=_f({allowShortKeys:!1,counterLength:8,counterRight:!1,rounds:20},e);if(typeof t!="function")throw new Error("core must be a function");return yn(o),yn(i),bn(s),bn(n),(f,a,l,c,u=0)=>{nt(f),nt(a),nt(l);const h=l.length;if(c===void 0&&(c=new Uint8Array(h)),nt(c),yn(u),u<0||u>=oo)throw new Error("arx: counter overflow");if(c.length<h)throw new Error(`arx: output (${c.length}) is shorter than data (${h})`);const g=[];let w=f.length,y,x;if(w===32)g.push(y=wn(f)),x=Pf;else if(w===16&&n)y=new Uint8Array(32),y.set(f),y.set(f,16),x=kf,g.push(y);else throw new Error(`arx: invalid 32-byte key, got length=${w}`);xn(a)||g.push(a=wn(a));const R=jt(y);if(r){if(a.length!==24)throw new Error("arx: extended nonce must be 24 bytes");r(x,R,jt(a.subarray(0,16)),R),a=a.subarray(16)}const M=16-o;if(M!==a.length)throw new Error(`arx: nonce must be ${M} or 16 bytes`);if(M!==12){const V=new Uint8Array(12);V.set(a,s?0:12-a.length),a=V,g.push(a)}const L=jt(a);return Df(t,x,R,L,l,c,u,i),Wt(...g),c}}const G=(t,e)=>t[e++]&255|(t[e++]&255)<<8;class Vf{constructor(e){this.blockLen=16,this.outputLen=16,this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.pos=0,this.finished=!1,e=mn(e),nt(e,32);const n=G(e,0),r=G(e,2),o=G(e,4),s=G(e,6),i=G(e,8),f=G(e,10),a=G(e,12),l=G(e,14);this.r[0]=n&8191,this.r[1]=(n>>>13|r<<3)&8191,this.r[2]=(r>>>10|o<<6)&7939,this.r[3]=(o>>>7|s<<9)&8191,this.r[4]=(s>>>4|i<<12)&255,this.r[5]=i>>>1&8190,this.r[6]=(i>>>14|f<<2)&8191,this.r[7]=(f>>>11|a<<5)&8065,this.r[8]=(a>>>8|l<<8)&8191,this.r[9]=l>>>5&127;for(let c=0;c<8;c++)this.pad[c]=G(e,16+2*c)}process(e,n,r=!1){const o=r?0:2048,{h:s,r:i}=this,f=i[0],a=i[1],l=i[2],c=i[3],u=i[4],h=i[5],g=i[6],w=i[7],y=i[8],x=i[9],R=G(e,n+0),M=G(e,n+2),L=G(e,n+4),V=G(e,n+6),_=G(e,n+8),k=G(e,n+10),j=G(e,n+12),$=G(e,n+14);let d=s[0]+(R&8191),m=s[1]+((R>>>13|M<<3)&8191),p=s[2]+((M>>>10|L<<6)&8191),b=s[3]+((L>>>7|V<<9)&8191),v=s[4]+((V>>>4|_<<12)&8191),B=s[5]+(_>>>1&8191),E=s[6]+((_>>>14|k<<2)&8191),I=s[7]+((k>>>11|j<<5)&8191),S=s[8]+((j>>>8|$<<8)&8191),O=s[9]+($>>>5|o),A=0,T=A+d*f+m*(5*x)+p*(5*y)+b*(5*w)+v*(5*g);A=T>>>13,T&=8191,T+=B*(5*h)+E*(5*u)+I*(5*c)+S*(5*l)+O*(5*a),A+=T>>>13,T&=8191;let U=A+d*a+m*f+p*(5*x)+b*(5*y)+v*(5*w);A=U>>>13,U&=8191,U+=B*(5*g)+E*(5*h)+I*(5*u)+S*(5*c)+O*(5*l),A+=U>>>13,U&=8191;let C=A+d*l+m*a+p*f+b*(5*x)+v*(5*y);A=C>>>13,C&=8191,C+=B*(5*w)+E*(5*g)+I*(5*h)+S*(5*u)+O*(5*c),A+=C>>>13,C&=8191;let H=A+d*c+m*l+p*a+b*f+v*(5*x);A=H>>>13,H&=8191,H+=B*(5*y)+E*(5*w)+I*(5*g)+S*(5*h)+O*(5*u),A+=H>>>13,H&=8191;let q=A+d*u+m*c+p*l+b*a+v*f;A=q>>>13,q&=8191,q+=B*(5*x)+E*(5*y)+I*(5*w)+S*(5*g)+O*(5*h),A+=q>>>13,q&=8191;let P=A+d*h+m*u+p*c+b*l+v*a;A=P>>>13,P&=8191,P+=B*f+E*(5*x)+I*(5*y)+S*(5*w)+O*(5*g),A+=P>>>13,P&=8191;let K=A+d*g+m*h+p*u+b*c+v*l;A=K>>>13,K&=8191,K+=B*a+E*f+I*(5*x)+S*(5*y)+O*(5*w),A+=K>>>13,K&=8191;let et=A+d*w+m*g+p*h+b*u+v*c;A=et>>>13,et&=8191,et+=B*l+E*a+I*f+S*(5*x)+O*(5*y),A+=et>>>13,et&=8191;let Z=A+d*y+m*w+p*g+b*h+v*u;A=Z>>>13,Z&=8191,Z+=B*c+E*l+I*a+S*f+O*(5*x),A+=Z>>>13,Z&=8191;let z=A+d*x+m*y+p*w+b*g+v*h;A=z>>>13,z&=8191,z+=B*u+E*c+I*l+S*a+O*f,A+=z>>>13,z&=8191,A=(A<<2)+A|0,A=A+T|0,T=A&8191,A=A>>>13,U+=A,s[0]=T,s[1]=U,s[2]=C,s[3]=H,s[4]=q,s[5]=P,s[6]=K,s[7]=et,s[8]=Z,s[9]=z}finalize(){const{h:e,pad:n}=this,r=new Uint16Array(10);let o=e[1]>>>13;e[1]&=8191;for(let f=2;f<10;f++)e[f]+=o,o=e[f]>>>13,e[f]&=8191;e[0]+=o*5,o=e[0]>>>13,e[0]&=8191,e[1]+=o,o=e[1]>>>13,e[1]&=8191,e[2]+=o,r[0]=e[0]+5,o=r[0]>>>13,r[0]&=8191;for(let f=1;f<10;f++)r[f]=e[f]+o,o=r[f]>>>13,r[f]&=8191;r[9]-=8192;let s=(o^1)-1;for(let f=0;f<10;f++)r[f]&=s;s=~s;for(let f=0;f<10;f++)e[f]=e[f]&s|r[f];e[0]=(e[0]|e[1]<<13)&65535,e[1]=(e[1]>>>3|e[2]<<10)&65535,e[2]=(e[2]>>>6|e[3]<<7)&65535,e[3]=(e[3]>>>9|e[4]<<4)&65535,e[4]=(e[4]>>>12|e[5]<<1|e[6]<<14)&65535,e[5]=(e[6]>>>2|e[7]<<11)&65535,e[6]=(e[7]>>>5|e[8]<<8)&65535,e[7]=(e[8]>>>8|e[9]<<5)&65535;let i=e[0]+n[0];e[0]=i&65535;for(let f=1;f<8;f++)i=(e[f]+n[f]|0)+(i>>>16)|0,e[f]=i&65535;Wt(r)}update(e){to(this),e=mn(e),nt(e);const{buffer:n,blockLen:r}=this,o=e.length;for(let s=0;s<o;){const i=Math.min(r-this.pos,o-s);if(i===r){for(;r<=o-s;s+=r)this.process(e,s);continue}n.set(e.subarray(s,s+i),this.pos),this.pos+=i,s+=i,this.pos===r&&(this.process(n,0,!1),this.pos=0)}return this}destroy(){Wt(this.h,this.r,this.buffer,this.pad)}digestInto(e){to(this),Sf(e,this),this.finished=!0;const{buffer:n,h:r}=this;let{pos:o}=this;if(o){for(n[o++]=1;o<16;o++)n[o]=0;this.process(n,0,!0)}this.finalize();let s=0;for(let i=0;i<8;i++)e[s++]=r[i]>>>0,e[s++]=r[i]>>>8;return e}digest(){const{buffer:e,outputLen:n}=this;this.digestInto(e);const r=e.slice(0,n);return this.destroy(),r}}function qf(t){const e=(r,o)=>t(o).update(mn(r)).digest(),n=t(new Uint8Array(32));return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=r=>t(r),e}const Kf=qf(t=>new Vf(t));function Ff(t,e,n,r,o,s=20){let i=t[0],f=t[1],a=t[2],l=t[3],c=e[0],u=e[1],h=e[2],g=e[3],w=e[4],y=e[5],x=e[6],R=e[7],M=o,L=n[0],V=n[1],_=n[2],k=i,j=f,$=a,d=l,m=c,p=u,b=h,v=g,B=w,E=y,I=x,S=R,O=M,A=L,T=V,U=_;for(let H=0;H<s;H+=2)k=k+m|0,O=D(O^k,16),B=B+O|0,m=D(m^B,12),k=k+m|0,O=D(O^k,8),B=B+O|0,m=D(m^B,7),j=j+p|0,A=D(A^j,16),E=E+A|0,p=D(p^E,12),j=j+p|0,A=D(A^j,8),E=E+A|0,p=D(p^E,7),$=$+b|0,T=D(T^$,16),I=I+T|0,b=D(b^I,12),$=$+b|0,T=D(T^$,8),I=I+T|0,b=D(b^I,7),d=d+v|0,U=D(U^d,16),S=S+U|0,v=D(v^S,12),d=d+v|0,U=D(U^d,8),S=S+U|0,v=D(v^S,7),k=k+p|0,U=D(U^k,16),I=I+U|0,p=D(p^I,12),k=k+p|0,U=D(U^k,8),I=I+U|0,p=D(p^I,7),j=j+b|0,O=D(O^j,16),S=S+O|0,b=D(b^S,12),j=j+b|0,O=D(O^j,8),S=S+O|0,b=D(b^S,7),$=$+v|0,A=D(A^$,16),B=B+A|0,v=D(v^B,12),$=$+v|0,A=D(A^$,8),B=B+A|0,v=D(v^B,7),d=d+m|0,T=D(T^d,16),E=E+T|0,m=D(m^E,12),d=d+m|0,T=D(T^d,8),E=E+T|0,m=D(m^E,7);let C=0;r[C++]=i+k|0,r[C++]=f+j|0,r[C++]=a+$|0,r[C++]=l+d|0,r[C++]=c+m|0,r[C++]=u+p|0,r[C++]=h+b|0,r[C++]=g+v|0,r[C++]=w+B|0,r[C++]=y+E|0,r[C++]=x+I|0,r[C++]=R+S|0,r[C++]=M+O|0,r[C++]=L+A|0,r[C++]=V+T|0,r[C++]=_+U|0}const zf=Mf(Ff,{counterRight:!1,counterLength:4,allowShortKeys:!1}),Gf=new Uint8Array(16),io=(t,e)=>{t.update(e);const n=e.length%16;n&&t.update(Gf.subarray(n))},Zf=new Uint8Array(32);function fo(t,e,n,r,o){const s=t(e,n,Zf),i=Kf.create(s);o&&io(i,o),io(i,r);const f=$f(r.length,o?o.length:0,!0);i.update(f);const a=i.digest();return Wt(s,f),a}const Wf=t=>(e,n,r)=>({encrypt(s,i){const f=s.length;i=eo(f+16,i,!1),i.set(s);const a=i.subarray(0,-16);t(e,n,a,a,1);const l=fo(t,e,n,a,r);return i.set(l,f),Wt(l),i},decrypt(s,i){i=eo(s.length-16,i,!1);const f=s.subarray(0,-16),a=s.subarray(-16),l=fo(t,e,n,f,r);if(!Tf(a,l))throw new Error("invalid tag");return i.set(s.subarray(0,-16)),t(e,n,i,i,1),Wt(l),i}}),co=Rf({blockSize:64,nonceLength:12,tagLength:16},Wf(zf));class ao extends Ie{constructor(e,n){super(),this.finished=!1,this.destroyed=!1,rn(e);const r=ht(n);if(this.iHash=e.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const o=this.blockLen,s=new Uint8Array(o);s.set(r.length>o?e.create().update(r).digest():r);for(let i=0;i<s.length;i++)s[i]^=54;this.iHash.update(s),this.oHash=e.create();for(let i=0;i<s.length;i++)s[i]^=106;this.oHash.update(s),ut(s)}update(e){return Nt(this),this.iHash.update(e),this}digestInto(e){Nt(this),at(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:n,iHash:r,finished:o,destroyed:s,blockLen:i,outputLen:f}=this;return e=e,e.finished=o,e.destroyed=s,e.blockLen=i,e.outputLen=f,e.oHash=n._cloneInto(e.oHash),e.iHash=r._cloneInto(e.iHash),e}clone(){return this._cloneInto()}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const _e=(t,e,n)=>new ao(t,e).update(n).digest();_e.create=(t,e)=>new ao(t,e);function Yf(t,e,n){return rn(t),n===void 0&&(n=new Uint8Array(t.outputLen)),_e(t,ht(n),ht(e))}const vn=Uint8Array.from([0]),uo=Uint8Array.of();function Xf(t,e,n,r=32){rn(t),mt(r);const o=t.outputLen;if(r>255*o)throw new Error("Length should be <= 255*HashLen");const s=Math.ceil(r/o);n===void 0&&(n=uo);const i=new Uint8Array(s*o),f=_e.create(t,e),a=f._cloneInto(),l=new Uint8Array(f.outputLen);for(let c=0;c<s;c++)vn[0]=c+1,a.update(c===0?uo:l).update(n).update(vn).digestInto(l),i.set(l,o*c),f._cloneInto(a);return f.destroy(),a.destroy(),ut(l,vn),i.slice(0,r)}const Jf=(t,e,n,r,o)=>Xf(t,Yf(t,e,n),r,o),Te=Ae,En=BigInt(0),Bn=BigInt(1);function Re(t,e){if(typeof e!="boolean")throw new Error(t+" boolean expected, got "+e)}function $e(t){const e=t.toString(16);return e.length&1?"0"+e:e}function lo(t){if(typeof t!="string")throw new Error("hex string expected, got "+typeof t);return t===""?En:BigInt("0x"+t)}function Ce(t){return lo(ce(t))}function Le(t){return at(t),lo(ce(Uint8Array.from(t).reverse()))}function In(t,e){return fn(t.toString(16).padStart(e*2,"0"))}function An(t,e){return In(t,e).reverse()}function rt(t,e,n){let r;if(typeof e=="string")try{r=fn(e)}catch(s){throw new Error(t+" must be hex string or Uint8Array, cause: "+s)}else if(nn(e))r=Uint8Array.from(e);else throw new Error(t+" must be hex string or Uint8Array");const o=r.length;if(typeof n=="number"&&o!==n)throw new Error(t+" of length "+n+" expected, got "+o);return r}const Sn=t=>typeof t=="bigint"&&En<=t;function Qf(t,e,n){return Sn(t)&&Sn(e)&&Sn(n)&&e<=t&&t<n}function Nn(t,e,n,r){if(!Qf(e,n,r))throw new Error("expected valid "+t+": "+n+" <= n < "+r+", got "+e)}function tc(t){let e;for(e=0;t>En;t>>=Bn,e+=1);return e}const je=t=>(Bn<<BigInt(t))-Bn;function ec(t,e,n){if(typeof t!="number"||t<2)throw new Error("hashLen must be a number");if(typeof e!="number"||e<2)throw new Error("qByteLen must be a number");if(typeof n!="function")throw new Error("hmacFn must be a function");const r=g=>new Uint8Array(g),o=g=>Uint8Array.of(g);let s=r(t),i=r(t),f=0;const a=()=>{s.fill(1),i.fill(0),f=0},l=(...g)=>n(i,s,...g),c=(g=r(0))=>{i=l(o(0),g),s=l(),g.length!==0&&(i=l(o(1),g),s=l())},u=()=>{if(f++>=1e3)throw new Error("drbg: tried 1000 values");let g=0;const w=[];for(;g<e;){s=l();const y=s.slice();w.push(y),g+=s.length}return Ht(...w)};return(g,w)=>{a(),c(g);let y;for(;!(y=w(u()));)c();return a(),y}}function ke(t,e,n={}){if(!t||typeof t!="object")throw new Error("expected valid options object");function r(o,s,i){const f=t[o];if(i&&f===void 0)return;const a=typeof f;if(a!==s||f===null)throw new Error(`param "${o}" is invalid: expected ${s}, got ${a}`)}Object.entries(e).forEach(([o,s])=>r(o,s,!1)),Object.entries(n).forEach(([o,s])=>r(o,s,!0))}function ho(t){const e=new WeakMap;return(n,...r)=>{const o=e.get(n);if(o!==void 0)return o;const s=t(n,...r);return e.set(n,s),s}}const ot=BigInt(0),Q=BigInt(1),Dt=BigInt(2),nc=BigInt(3),po=BigInt(4),go=BigInt(5),bo=BigInt(8);function lt(t,e){const n=t%e;return n>=ot?n:e+n}function pt(t,e,n){let r=t;for(;e-- >ot;)r*=r,r%=n;return r}function yo(t,e){if(t===ot)throw new Error("invert: expected non-zero number");if(e<=ot)throw new Error("invert: expected positive modulus, got "+e);let n=lt(t,e),r=e,o=ot,s=Q;for(;n!==ot;){const f=r/n,a=r%n,l=o-s*f;r=n,n=a,o=s,s=l}if(r!==Q)throw new Error("invert: does not exist");return lt(o,e)}function mo(t,e){const n=(t.ORDER+Q)/po,r=t.pow(e,n);if(!t.eql(t.sqr(r),e))throw new Error("Cannot find square root");return r}function rc(t,e){const n=(t.ORDER-go)/bo,r=t.mul(e,Dt),o=t.pow(r,n),s=t.mul(e,o),i=t.mul(t.mul(s,Dt),o),f=t.mul(s,t.sub(i,t.ONE));if(!t.eql(t.sqr(f),e))throw new Error("Cannot find square root");return f}function oc(t){if(t<BigInt(3))throw new Error("sqrt is not defined for small field");let e=t-Q,n=0;for(;e%Dt===ot;)e/=Dt,n++;let r=Dt;const o=Yt(t);for(;xo(o,r)===1;)if(r++>1e3)throw new Error("Cannot find square root: probably non-prime P");if(n===1)return mo;let s=o.pow(r,e);const i=(e+Q)/Dt;return function(a,l){if(a.is0(l))return l;if(xo(a,l)!==1)throw new Error("Cannot find square root");let c=n,u=a.mul(a.ONE,s),h=a.pow(l,e),g=a.pow(l,i);for(;!a.eql(h,a.ONE);){if(a.is0(h))return a.ZERO;let w=1,y=a.sqr(h);for(;!a.eql(y,a.ONE);)if(w++,y=a.sqr(y),w===c)throw new Error("Cannot find square root");const x=Q<<BigInt(c-w-1),R=a.pow(u,x);c=w,u=a.sqr(R),h=a.mul(h,u),g=a.mul(g,R)}return g}}function sc(t){return t%po===nc?mo:t%bo===go?rc:oc(t)}const ic=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function fc(t){const e={ORDER:"bigint",MASK:"bigint",BYTES:"number",BITS:"number"},n=ic.reduce((r,o)=>(r[o]="function",r),e);return ke(t,n),t}function cc(t,e,n){if(n<ot)throw new Error("invalid exponent, negatives unsupported");if(n===ot)return t.ONE;if(n===Q)return e;let r=t.ONE,o=e;for(;n>ot;)n&Q&&(r=t.mul(r,o)),o=t.sqr(o),n>>=Q;return r}function wo(t,e,n=!1){const r=new Array(e.length).fill(n?t.ZERO:void 0),o=e.reduce((i,f,a)=>t.is0(f)?i:(r[a]=i,t.mul(i,f)),t.ONE),s=t.inv(o);return e.reduceRight((i,f,a)=>t.is0(f)?i:(r[a]=t.mul(i,r[a]),t.mul(i,f)),s),r}function xo(t,e){const n=(t.ORDER-Q)/Dt,r=t.pow(e,n),o=t.eql(r,t.ONE),s=t.eql(r,t.ZERO),i=t.eql(r,t.neg(t.ONE));if(!o&&!s&&!i)throw new Error("invalid Legendre symbol result");return o?1:s?0:-1}function ac(t,e){e!==void 0&&mt(e);const n=e!==void 0?e:t.toString(2).length,r=Math.ceil(n/8);return{nBitLength:n,nByteLength:r}}function Yt(t,e,n=!1,r={}){if(t<=ot)throw new Error("invalid field: expected ORDER > 0, got "+t);let o,s;if(typeof e=="object"&&e!=null){if(r.sqrt||n)throw new Error("cannot specify opts in two arguments");const c=e;c.BITS&&(o=c.BITS),c.sqrt&&(s=c.sqrt),typeof c.isLE=="boolean"&&(n=c.isLE)}else typeof e=="number"&&(o=e),r.sqrt&&(s=r.sqrt);const{nBitLength:i,nByteLength:f}=ac(t,o);if(f>2048)throw new Error("invalid field: expected ORDER of <= 2048 bytes");let a;const l=Object.freeze({ORDER:t,isLE:n,BITS:i,BYTES:f,MASK:je(i),ZERO:ot,ONE:Q,create:c=>lt(c,t),isValid:c=>{if(typeof c!="bigint")throw new Error("invalid field element: expected bigint, got "+typeof c);return ot<=c&&c<t},is0:c=>c===ot,isValidNot0:c=>!l.is0(c)&&l.isValid(c),isOdd:c=>(c&Q)===Q,neg:c=>lt(-c,t),eql:(c,u)=>c===u,sqr:c=>lt(c*c,t),add:(c,u)=>lt(c+u,t),sub:(c,u)=>lt(c-u,t),mul:(c,u)=>lt(c*u,t),pow:(c,u)=>cc(l,c,u),div:(c,u)=>lt(c*yo(u,t),t),sqrN:c=>c*c,addN:(c,u)=>c+u,subN:(c,u)=>c-u,mulN:(c,u)=>c*u,inv:c=>yo(c,t),sqrt:s||(c=>(a||(a=sc(t)),a(l,c))),toBytes:c=>n?An(c,f):In(c,f),fromBytes:c=>{if(c.length!==f)throw new Error("Field.fromBytes: expected "+f+" bytes, got "+c.length);return n?Le(c):Ce(c)},invertBatch:c=>wo(l,c),cmov:(c,u,h)=>h?u:c});return Object.freeze(l)}function vo(t){if(typeof t!="bigint")throw new Error("field order must be bigint");const e=t.toString(2).length;return Math.ceil(e/8)}function Eo(t){const e=vo(t);return e+Math.ceil(e/2)}function uc(t,e,n=!1){const r=t.length,o=vo(e),s=Eo(e);if(r<16||r<s||r>1024)throw new Error("expected "+s+"-1024 bytes of input, got "+r);const i=n?Le(t):Ce(t),f=lt(i,e-Q)+Q;return n?An(f,o):In(f,o)}const Xt=BigInt(0),Mt=BigInt(1);function le(t,e){const n=e.negate();return t?n:e}function lc(t,e,n){const r=e==="pz"?i=>i.pz:i=>i.ez,o=wo(t.Fp,n.map(r));return n.map((i,f)=>i.toAffine(o[f])).map(t.fromAffine)}function Bo(t,e){if(!Number.isSafeInteger(t)||t<=0||t>e)throw new Error("invalid window size, expected [1.."+e+"], got W="+t)}function On(t,e){Bo(t,e);const n=Math.ceil(e/t)+1,r=2**(t-1),o=2**t,s=je(t),i=BigInt(t);return{windows:n,windowSize:r,mask:s,maxNumber:o,shiftBy:i}}function Io(t,e,n){const{windowSize:r,mask:o,maxNumber:s,shiftBy:i}=n;let f=Number(t&o),a=t>>i;f>r&&(f-=s,a+=Mt);const l=e*r,c=l+Math.abs(f)-1,u=f===0,h=f<0,g=e%2!==0;return{nextN:a,offset:c,isZero:u,isNeg:h,isNegF:g,offsetF:l}}function dc(t,e){if(!Array.isArray(t))throw new Error("array expected");t.forEach((n,r)=>{if(!(n instanceof e))throw new Error("invalid point at index "+r)})}function hc(t,e){if(!Array.isArray(t))throw new Error("array of scalars expected");t.forEach((n,r)=>{if(!e.isValid(n))throw new Error("invalid scalar at index "+r)})}const Un=new WeakMap,Ao=new WeakMap;function _n(t){return Ao.get(t)||1}function So(t){if(t!==Xt)throw new Error("invalid wNAF")}function pc(t,e){return{constTimeNegate:le,hasPrecomputes(n){return _n(n)!==1},unsafeLadder(n,r,o=t.ZERO){let s=n;for(;r>Xt;)r&Mt&&(o=o.add(s)),s=s.double(),r>>=Mt;return o},precomputeWindow(n,r){const{windows:o,windowSize:s}=On(r,e),i=[];let f=n,a=f;for(let l=0;l<o;l++){a=f,i.push(a);for(let c=1;c<s;c++)a=a.add(f),i.push(a);f=a.double()}return i},wNAF(n,r,o){let s=t.ZERO,i=t.BASE;const f=On(n,e);for(let a=0;a<f.windows;a++){const{nextN:l,offset:c,isZero:u,isNeg:h,isNegF:g,offsetF:w}=Io(o,a,f);o=l,u?i=i.add(le(g,r[w])):s=s.add(le(h,r[c]))}return So(o),{p:s,f:i}},wNAFUnsafe(n,r,o,s=t.ZERO){const i=On(n,e);for(let f=0;f<i.windows&&o!==Xt;f++){const{nextN:a,offset:l,isZero:c,isNeg:u}=Io(o,f,i);if(o=a,!c){const h=r[l];s=s.add(u?h.negate():h)}}return So(o),s},getPrecomputes(n,r,o){let s=Un.get(r);return s||(s=this.precomputeWindow(r,n),n!==1&&(typeof o=="function"&&(s=o(s)),Un.set(r,s))),s},wNAFCached(n,r,o){const s=_n(n);return this.wNAF(s,this.getPrecomputes(s,n,o),r)},wNAFCachedUnsafe(n,r,o,s){const i=_n(n);return i===1?this.unsafeLadder(n,r,s):this.wNAFUnsafe(i,this.getPrecomputes(i,n,o),r,s)},setWindowSize(n,r){Bo(r,e),Ao.set(n,r),Un.delete(n)}}}function gc(t,e,n,r){let o=e,s=t.ZERO,i=t.ZERO;for(;n>Xt||r>Xt;)n&Mt&&(s=s.add(o)),r&Mt&&(i=i.add(o)),o=o.double(),n>>=Mt,r>>=Mt;return{p1:s,p2:i}}function bc(t,e,n,r){dc(n,t),hc(r,e);const o=n.length,s=r.length;if(o!==s)throw new Error("arrays of points and scalars must have equal length");const i=t.ZERO,f=tc(BigInt(o));let a=1;f>12?a=f-3:f>4?a=f-2:f>0&&(a=2);const l=je(a),c=new Array(Number(l)+1).fill(i),u=Math.floor((e.BITS-1)/a)*a;let h=i;for(let g=u;g>=0;g-=a){c.fill(i);for(let y=0;y<s;y++){const x=r[y],R=Number(x>>BigInt(g)&l);c[R]=c[R].add(n[y])}let w=i;for(let y=c.length-1,x=i;y>0;y--)x=x.add(c[y]),w=w.add(x);if(h=h.add(w),g!==0)for(let y=0;y<a;y++)h=h.double()}return h}function No(t,e){if(e){if(e.ORDER!==t)throw new Error("Field.ORDER must match order: Fp == p, Fn == n");return fc(e),e}else return Yt(t)}function yc(t,e,n={}){if(!e||typeof e!="object")throw new Error(`expected valid ${t} CURVE object`);for(const f of["p","n","h"]){const a=e[f];if(!(typeof a=="bigint"&&a>Xt))throw new Error(`CURVE.${f} must be positive bigint`)}const r=No(e.p,n.Fp),o=No(e.n,n.Fn),i=["Gx","Gy","a",t==="weierstrass"?"b":"d"];for(const f of i)if(!r.isValid(e[f]))throw new Error(`CURVE.${f} must be valid field element of CURVE.Fp`);return{Fp:r,Fn:o}}BigInt(0),BigInt(1),BigInt(2),BigInt(8);const de=BigInt(0),Jt=BigInt(1),Pe=BigInt(2);function mc(t){return ke(t,{adjustScalarBytes:"function",powPminus2:"function"}),Object.freeze({...t})}function wc(t){const e=mc(t),{P:n,type:r,adjustScalarBytes:o,powPminus2:s,randomBytes:i}=e,f=r==="x25519";if(!f&&r!=="x448")throw new Error("invalid type");const a=i||Zt,l=f?255:448,c=f?32:56,u=BigInt(f?9:5),h=BigInt(f?121665:39081),g=f?Pe**BigInt(254):Pe**BigInt(447),w=f?BigInt(8)*Pe**BigInt(251)-Jt:BigInt(4)*Pe**BigInt(445)-Jt,y=g+w+Jt,x=d=>lt(d,n),R=M(u);function M(d){return An(x(d),c)}function L(d){const m=rt("u coordinate",d,c);return f&&(m[31]&=127),x(Le(m))}function V(d){return Le(o(rt("scalar",d,c)))}function _(d,m){const p=$(L(m),V(d));if(p===de)throw new Error("invalid private or public key received");return M(p)}function k(d){return _(d,R)}function j(d,m,p){const b=x(d*(m-p));return m=x(m-b),p=x(p+b),{x_2:m,x_3:p}}function $(d,m){Nn("u",d,de,n),Nn("scalar",m,g,y);const p=m,b=d;let v=Jt,B=de,E=d,I=Jt,S=de;for(let A=BigInt(l-1);A>=de;A--){const T=p>>A&Jt;S^=T,{x_2:v,x_3:E}=j(S,v,E),{x_2:B,x_3:I}=j(S,B,I),S=T;const U=v+B,C=x(U*U),H=v-B,q=x(H*H),P=C-q,K=E+I,et=E-I,Z=x(et*U),z=x(K*H),Ft=Z+z,yt=Z-z;E=x(Ft*Ft),I=x(b*x(yt*yt)),v=x(C*q),B=x(P*(C+x(h*P)))}({x_2:v,x_3:E}=j(S,v,E)),{x_2:B,x_3:I}=j(S,B,I);const O=s(B);return x(v*O)}return{scalarMult:_,scalarMultBase:k,getSharedSecret:(d,m)=>_(d,m),getPublicKey:d=>k(d),utils:{randomPrivateKey:()=>a(c)},GuBytes:R.slice()}}BigInt(0);const xc=BigInt(1),Oo=BigInt(2),vc=BigInt(3),Ec=BigInt(5),Bc=BigInt(8),Uo={p:BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed"),n:BigInt("0x1000000000000000000000000000000014def9dea2f79cd65812631a5cf5d3ed"),h:Bc,a:BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec"),d:BigInt("0x52036cee2b6ffe738cc740797779e89800700a4d4141d8ab75eb4dca135978a3"),Gx:BigInt("0x216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a"),Gy:BigInt("0x6666666666666666666666666666666666666666666666666666666666666658")};function Ic(t){const e=BigInt(10),n=BigInt(20),r=BigInt(40),o=BigInt(80),s=Uo.p,f=t*t%s*t%s,a=pt(f,Oo,s)*f%s,l=pt(a,xc,s)*t%s,c=pt(l,Ec,s)*l%s,u=pt(c,e,s)*c%s,h=pt(u,n,s)*u%s,g=pt(h,r,s)*h%s,w=pt(g,o,s)*g%s,y=pt(w,o,s)*g%s,x=pt(y,e,s)*c%s;return{pow_p_5_8:pt(x,Oo,s)*t%s,b2:f}}function Ac(t){return t[0]&=248,t[31]&=127,t[31]|=64,t}const Tn=(()=>{const t=Uo.p;return wc({P:t,type:"x25519",powPminus2:e=>{const{pow_p_5_8:n,b2:r}=Ic(e);return lt(pt(n,vc,t)*r,t)},adjustScalarBytes:Ac})})();function _o(t){t.lowS!==void 0&&Re("lowS",t.lowS),t.prehash!==void 0&&Re("prehash",t.prehash)}class Sc extends Error{constructor(e=""){super(e)}}const vt={Err:Sc,_tlv:{encode:(t,e)=>{const{Err:n}=vt;if(t<0||t>256)throw new n("tlv.encode: wrong tag");if(e.length&1)throw new n("tlv.encode: unpadded data");const r=e.length/2,o=$e(r);if(o.length/2&128)throw new n("tlv.encode: long form length too big");const s=r>127?$e(o.length/2|128):"";return $e(t)+s+o+e},decode(t,e){const{Err:n}=vt;let r=0;if(t<0||t>256)throw new n("tlv.encode: wrong tag");if(e.length<2||e[r++]!==t)throw new n("tlv.decode: wrong tlv");const o=e[r++],s=!!(o&128);let i=0;if(!s)i=o;else{const a=o&127;if(!a)throw new n("tlv.decode(long): indefinite length not supported");if(a>4)throw new n("tlv.decode(long): byte length is too big");const l=e.subarray(r,r+a);if(l.length!==a)throw new n("tlv.decode: length bytes not complete");if(l[0]===0)throw new n("tlv.decode(long): zero leftmost byte");for(const c of l)i=i<<8|c;if(r+=a,i<128)throw new n("tlv.decode(long): not minimal encoding")}const f=e.subarray(r,r+i);if(f.length!==i)throw new n("tlv.decode: wrong value length");return{v:f,l:e.subarray(r+i)}}},_int:{encode(t){const{Err:e}=vt;if(t<he)throw new e("integer: negative integers are not allowed");let n=$e(t);if(Number.parseInt(n[0],16)&8&&(n="00"+n),n.length&1)throw new e("unexpected DER parsing assertion: unpadded hex");return n},decode(t){const{Err:e}=vt;if(t[0]&128)throw new e("invalid signature integer: negative");if(t[0]===0&&!(t[1]&128))throw new e("invalid signature integer: unnecessary leading zero");return Ce(t)}},toSig(t){const{Err:e,_int:n,_tlv:r}=vt,o=rt("signature",t),{v:s,l:i}=r.decode(48,o);if(i.length)throw new e("invalid signature: left bytes after parsing");const{v:f,l:a}=r.decode(2,s),{v:l,l:c}=r.decode(2,a);if(c.length)throw new e("invalid signature: left bytes after parsing");return{r:n.decode(f),s:n.decode(l)}},hexFromSig(t){const{_tlv:e,_int:n}=vt,r=e.encode(2,n.encode(t.r)),o=e.encode(2,n.encode(t.s)),s=r+o;return e.encode(48,s)}},he=BigInt(0),pe=BigInt(1),Nc=BigInt(2),He=BigInt(3),Oc=BigInt(4);function Uc(t,e,n){function r(o){const s=t.sqr(o),i=t.mul(s,o);return t.add(t.add(i,t.mul(o,e)),n)}return r}function To(t,e,n){const{BYTES:r}=t;function o(s){let i;if(typeof s=="bigint")i=s;else{let f=rt("private key",s);if(e){if(!e.includes(f.length*2))throw new Error("invalid private key");const a=new Uint8Array(r);a.set(f,a.length-f.length),f=a}try{i=t.fromBytes(f)}catch{throw new Error(`invalid private key: expected ui8a of size ${r}, got ${typeof s}`)}}if(n&&(i=t.create(i)),!t.isValidNot0(i))throw new Error("invalid private key: out of range [1..N-1]");return i}return o}function _c(t,e={}){const{Fp:n,Fn:r}=yc("weierstrass",t,e),{h:o,n:s}=t;ke(e,{},{allowInfinityPoint:"boolean",clearCofactor:"function",isTorsionFree:"function",fromBytes:"function",toBytes:"function",endo:"object",wrapPrivateKey:"boolean"});const{endo:i}=e;if(i&&(!n.is0(t.a)||typeof i.beta!="bigint"||typeof i.splitScalar!="function"))throw new Error('invalid endo: expected "beta": bigint and "splitScalar": function');function f(){if(!n.isOdd)throw new Error("compression is not supported: Field does not have .isOdd()")}function a($,d,m){const{x:p,y:b}=d.toAffine(),v=n.toBytes(p);if(Re("isCompressed",m),m){f();const B=!n.isOdd(b);return Ht(Ro(B),v)}else return Ht(Uint8Array.of(4),v,n.toBytes(b))}function l($){at($);const d=n.BYTES,m=d+1,p=2*d+1,b=$.length,v=$[0],B=$.subarray(1);if(b===m&&(v===2||v===3)){const E=n.fromBytes(B);if(!n.isValid(E))throw new Error("bad point: is not on curve, wrong x");const I=h(E);let S;try{S=n.sqrt(I)}catch(T){const U=T instanceof Error?": "+T.message:"";throw new Error("bad point: is not on curve, sqrt error"+U)}f();const O=n.isOdd(S);return(v&1)===1!==O&&(S=n.neg(S)),{x:E,y:S}}else if(b===p&&v===4){const E=n.fromBytes(B.subarray(d*0,d*1)),I=n.fromBytes(B.subarray(d*1,d*2));if(!g(E,I))throw new Error("bad point: is not on curve");return{x:E,y:I}}else throw new Error(`bad point: got length ${b}, expected compressed=${m} or uncompressed=${p}`)}const c=e.toBytes||a,u=e.fromBytes||l,h=Uc(n,t.a,t.b);function g($,d){const m=n.sqr(d),p=h($);return n.eql(m,p)}if(!g(t.Gx,t.Gy))throw new Error("bad curve params: generator point");const w=n.mul(n.pow(t.a,He),Oc),y=n.mul(n.sqr(t.b),BigInt(27));if(n.is0(n.add(w,y)))throw new Error("bad curve params: a or b");function x($,d,m=!1){if(!n.isValid(d)||m&&n.is0(d))throw new Error(`bad point coordinate ${$}`);return d}function R($){if(!($ instanceof _))throw new Error("ProjectivePoint expected")}const M=ho(($,d)=>{const{px:m,py:p,pz:b}=$;if(n.eql(b,n.ONE))return{x:m,y:p};const v=$.is0();d==null&&(d=v?n.ONE:n.inv(b));const B=n.mul(m,d),E=n.mul(p,d),I=n.mul(b,d);if(v)return{x:n.ZERO,y:n.ZERO};if(!n.eql(I,n.ONE))throw new Error("invZ was invalid");return{x:B,y:E}}),L=ho($=>{if($.is0()){if(e.allowInfinityPoint&&!n.is0($.py))return;throw new Error("bad point: ZERO")}const{x:d,y:m}=$.toAffine();if(!n.isValid(d)||!n.isValid(m))throw new Error("bad point: x or y not field elements");if(!g(d,m))throw new Error("bad point: equation left != right");if(!$.isTorsionFree())throw new Error("bad point: not in prime-order subgroup");return!0});function V($,d,m,p,b){return m=new _(n.mul(m.px,$),m.py,m.pz),d=le(p,d),m=le(b,m),d.add(m)}class _{constructor(d,m,p){this.px=x("x",d),this.py=x("y",m,!0),this.pz=x("z",p),Object.freeze(this)}static fromAffine(d){const{x:m,y:p}=d||{};if(!d||!n.isValid(m)||!n.isValid(p))throw new Error("invalid affine point");if(d instanceof _)throw new Error("projective point not allowed");return n.is0(m)&&n.is0(p)?_.ZERO:new _(m,p,n.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(d){return lc(_,"pz",d)}static fromBytes(d){return at(d),_.fromHex(d)}static fromHex(d){const m=_.fromAffine(u(rt("pointHex",d)));return m.assertValidity(),m}static fromPrivateKey(d){const m=To(r,e.allowedPrivateKeyLengths,e.wrapPrivateKey);return _.BASE.multiply(m(d))}static msm(d,m){return bc(_,r,d,m)}precompute(d=8,m=!0){return j.setWindowSize(this,d),m||this.multiply(He),this}_setWindowSize(d){this.precompute(d)}assertValidity(){L(this)}hasEvenY(){const{y:d}=this.toAffine();if(!n.isOdd)throw new Error("Field doesn't support isOdd");return!n.isOdd(d)}equals(d){R(d);const{px:m,py:p,pz:b}=this,{px:v,py:B,pz:E}=d,I=n.eql(n.mul(m,E),n.mul(v,b)),S=n.eql(n.mul(p,E),n.mul(B,b));return I&&S}negate(){return new _(this.px,n.neg(this.py),this.pz)}double(){const{a:d,b:m}=t,p=n.mul(m,He),{px:b,py:v,pz:B}=this;let E=n.ZERO,I=n.ZERO,S=n.ZERO,O=n.mul(b,b),A=n.mul(v,v),T=n.mul(B,B),U=n.mul(b,v);return U=n.add(U,U),S=n.mul(b,B),S=n.add(S,S),E=n.mul(d,S),I=n.mul(p,T),I=n.add(E,I),E=n.sub(A,I),I=n.add(A,I),I=n.mul(E,I),E=n.mul(U,E),S=n.mul(p,S),T=n.mul(d,T),U=n.sub(O,T),U=n.mul(d,U),U=n.add(U,S),S=n.add(O,O),O=n.add(S,O),O=n.add(O,T),O=n.mul(O,U),I=n.add(I,O),T=n.mul(v,B),T=n.add(T,T),O=n.mul(T,U),E=n.sub(E,O),S=n.mul(T,A),S=n.add(S,S),S=n.add(S,S),new _(E,I,S)}add(d){R(d);const{px:m,py:p,pz:b}=this,{px:v,py:B,pz:E}=d;let I=n.ZERO,S=n.ZERO,O=n.ZERO;const A=t.a,T=n.mul(t.b,He);let U=n.mul(m,v),C=n.mul(p,B),H=n.mul(b,E),q=n.add(m,p),P=n.add(v,B);q=n.mul(q,P),P=n.add(U,C),q=n.sub(q,P),P=n.add(m,b);let K=n.add(v,E);return P=n.mul(P,K),K=n.add(U,H),P=n.sub(P,K),K=n.add(p,b),I=n.add(B,E),K=n.mul(K,I),I=n.add(C,H),K=n.sub(K,I),O=n.mul(A,P),I=n.mul(T,H),O=n.add(I,O),I=n.sub(C,O),O=n.add(C,O),S=n.mul(I,O),C=n.add(U,U),C=n.add(C,U),H=n.mul(A,H),P=n.mul(T,P),C=n.add(C,H),H=n.sub(U,H),H=n.mul(A,H),P=n.add(P,H),U=n.mul(C,P),S=n.add(S,U),U=n.mul(K,P),I=n.mul(q,I),I=n.sub(I,U),U=n.mul(q,C),O=n.mul(K,O),O=n.add(O,U),new _(I,S,O)}subtract(d){return this.add(d.negate())}is0(){return this.equals(_.ZERO)}multiply(d){const{endo:m}=e;if(!r.isValidNot0(d))throw new Error("invalid scalar: out of range");let p,b;const v=B=>j.wNAFCached(this,B,_.normalizeZ);if(m){const{k1neg:B,k1:E,k2neg:I,k2:S}=m.splitScalar(d),{p:O,f:A}=v(E),{p:T,f:U}=v(S);b=A.add(U),p=V(m.beta,O,T,B,I)}else{const{p:B,f:E}=v(d);p=B,b=E}return _.normalizeZ([p,b])[0]}multiplyUnsafe(d){const{endo:m}=e,p=this;if(!r.isValid(d))throw new Error("invalid scalar: out of range");if(d===he||p.is0())return _.ZERO;if(d===pe)return p;if(j.hasPrecomputes(this))return this.multiply(d);if(m){const{k1neg:b,k1:v,k2neg:B,k2:E}=m.splitScalar(d),{p1:I,p2:S}=gc(_,p,v,E);return V(m.beta,I,S,b,B)}else return j.wNAFCachedUnsafe(p,d)}multiplyAndAddUnsafe(d,m,p){const b=this.multiplyUnsafe(m).add(d.multiplyUnsafe(p));return b.is0()?void 0:b}toAffine(d){return M(this,d)}isTorsionFree(){const{isTorsionFree:d}=e;return o===pe?!0:d?d(_,this):j.wNAFCachedUnsafe(this,s).is0()}clearCofactor(){const{clearCofactor:d}=e;return o===pe?this:d?d(_,this):this.multiplyUnsafe(o)}toBytes(d=!0){return Re("isCompressed",d),this.assertValidity(),c(_,this,d)}toRawBytes(d=!0){return this.toBytes(d)}toHex(d=!0){return ce(this.toBytes(d))}toString(){return`<Point ${this.is0()?"ZERO":this.toHex()}>`}}_.BASE=new _(t.Gx,t.Gy,n.ONE),_.ZERO=new _(n.ZERO,n.ONE,n.ZERO),_.Fp=n,_.Fn=r;const k=r.BITS,j=pc(_,e.endo?Math.ceil(k/2):k);return _}function Ro(t){return Uint8Array.of(t?2:3)}function Tc(t,e,n={}){ke(e,{hash:"function"},{hmac:"function",lowS:"boolean",randomBytes:"function",bits2int:"function",bits2int_modN:"function"});const r=e.randomBytes||Zt,o=e.hmac||((p,...b)=>_e(e.hash,p,Ht(...b))),{Fp:s,Fn:i}=t,{ORDER:f,BITS:a}=i;function l(p){const b=f>>pe;return p>b}function c(p){return l(p)?i.neg(p):p}function u(p,b){if(!i.isValidNot0(b))throw new Error(`invalid signature ${p}: out of range 1..CURVE.n`)}class h{constructor(b,v,B){u("r",b),u("s",v),this.r=b,this.s=v,B!=null&&(this.recovery=B),Object.freeze(this)}static fromCompact(b){const v=i.BYTES,B=rt("compactSignature",b,v*2);return new h(i.fromBytes(B.subarray(0,v)),i.fromBytes(B.subarray(v,v*2)))}static fromDER(b){const{r:v,s:B}=vt.toSig(rt("DER",b));return new h(v,B)}assertValidity(){}addRecoveryBit(b){return new h(this.r,this.s,b)}recoverPublicKey(b){const v=s.ORDER,{r:B,s:E,recovery:I}=this;if(I==null||![0,1,2,3].includes(I))throw new Error("recovery id invalid");if(f*Nc<v&&I>1)throw new Error("recovery id is ambiguous for h>1 curve");const O=I===2||I===3?B+f:B;if(!s.isValid(O))throw new Error("recovery id 2 or 3 invalid");const A=s.toBytes(O),T=t.fromHex(Ht(Ro((I&1)===0),A)),U=i.inv(O),C=L(rt("msgHash",b)),H=i.create(-C*U),q=i.create(E*U),P=t.BASE.multiplyUnsafe(H).add(T.multiplyUnsafe(q));if(P.is0())throw new Error("point at infinify");return P.assertValidity(),P}hasHighS(){return l(this.s)}normalizeS(){return this.hasHighS()?new h(this.r,i.neg(this.s),this.recovery):this}toBytes(b){if(b==="compact")return Ht(i.toBytes(this.r),i.toBytes(this.s));if(b==="der")return fn(vt.hexFromSig(this));throw new Error("invalid format")}toDERRawBytes(){return this.toBytes("der")}toDERHex(){return ce(this.toBytes("der"))}toCompactRawBytes(){return this.toBytes("compact")}toCompactHex(){return ce(this.toBytes("compact"))}}const g=To(i,n.allowedPrivateKeyLengths,n.wrapPrivateKey),w={isValidPrivateKey(p){try{return g(p),!0}catch{return!1}},normPrivateKeyToScalar:g,randomPrivateKey:()=>{const p=f;return uc(r(Eo(p)),p)},precompute(p=8,b=t.BASE){return b.precompute(p,!1)}};function y(p,b=!0){return t.fromPrivateKey(p).toBytes(b)}function x(p){if(typeof p=="bigint")return!1;if(p instanceof t)return!0;const v=rt("key",p).length,B=s.BYTES,E=B+1,I=2*B+1;if(!(n.allowedPrivateKeyLengths||i.BYTES===E))return v===E||v===I}function R(p,b,v=!0){if(x(p)===!0)throw new Error("first arg must be private key");if(x(b)===!1)throw new Error("second arg must be public key");return t.fromHex(b).multiply(g(p)).toBytes(v)}const M=e.bits2int||function(p){if(p.length>8192)throw new Error("input is too large");const b=Ce(p),v=p.length*8-a;return v>0?b>>BigInt(v):b},L=e.bits2int_modN||function(p){return i.create(M(p))},V=je(a);function _(p){return Nn("num < 2^"+a,p,he,V),i.toBytes(p)}function k(p,b,v=j){if(["recovered","canonical"].some(q=>q in v))throw new Error("sign() legacy options not supported");const{hash:B}=e;let{lowS:E,prehash:I,extraEntropy:S}=v;E==null&&(E=!0),p=rt("msgHash",p),_o(v),I&&(p=rt("prehashed msgHash",B(p)));const O=L(p),A=g(b),T=[_(A),_(O)];if(S!=null&&S!==!1){const q=S===!0?r(s.BYTES):S;T.push(rt("extraEntropy",q))}const U=Ht(...T),C=O;function H(q){const P=M(q);if(!i.isValidNot0(P))return;const K=i.inv(P),et=t.BASE.multiply(P).toAffine(),Z=i.create(et.x);if(Z===he)return;const z=i.create(K*i.create(C+Z*A));if(z===he)return;let Ft=(et.x===Z?0:2)|Number(et.y&pe),yt=z;return E&&l(z)&&(yt=c(z),Ft^=1),new h(Z,yt,Ft)}return{seed:U,k2sig:H}}const j={lowS:e.lowS,prehash:!1},$={lowS:e.lowS,prehash:!1};function d(p,b,v=j){const{seed:B,k2sig:E}=k(p,b,v);return ec(e.hash.outputLen,i.BYTES,o)(B,E)}t.BASE.precompute(8);function m(p,b,v,B=$){const E=p;b=rt("msgHash",b),v=rt("publicKey",v),_o(B);const{lowS:I,prehash:S,format:O}=B;if("strict"in B)throw new Error("options.strict was renamed to lowS");if(O!==void 0&&!["compact","der","js"].includes(O))throw new Error('format must be "compact", "der" or "js"');const A=typeof E=="string"||nn(E),T=!A&&!O&&typeof E=="object"&&E!==null&&typeof E.r=="bigint"&&typeof E.s=="bigint";if(!A&&!T)throw new Error("invalid signature, expected Uint8Array, hex string or Signature instance");let U,C;try{if(T)if(O===void 0||O==="js")U=new h(E.r,E.s);else throw new Error("invalid format");if(A){try{O!=="compact"&&(U=h.fromDER(E))}catch(yt){if(!(yt instanceof vt.Err))throw yt}!U&&O!=="der"&&(U=h.fromCompact(E))}C=t.fromHex(v)}catch{return!1}if(!U||I&&U.hasHighS())return!1;S&&(b=e.hash(b));const{r:H,s:q}=U,P=L(b),K=i.inv(q),et=i.create(P*K),Z=i.create(H*K),z=t.BASE.multiplyUnsafe(et).add(C.multiplyUnsafe(Z));return z.is0()?!1:i.create(z.x)===H}return Object.freeze({getPublicKey:y,getSharedSecret:R,sign:d,verify:m,utils:w,Point:t,Signature:h})}function Rc(t){const e={a:t.a,b:t.b,p:t.Fp.ORDER,n:t.n,h:t.h,Gx:t.Gx,Gy:t.Gy},n=t.Fp,r=Yt(e.n,t.nBitLength),o={Fp:n,Fn:r,allowedPrivateKeyLengths:t.allowedPrivateKeyLengths,allowInfinityPoint:t.allowInfinityPoint,endo:t.endo,wrapPrivateKey:t.wrapPrivateKey,isTorsionFree:t.isTorsionFree,clearCofactor:t.clearCofactor,fromBytes:t.fromBytes,toBytes:t.toBytes};return{CURVE:e,curveOpts:o}}function $c(t){const{CURVE:e,curveOpts:n}=Rc(t),r={hash:t.hash,hmac:t.hmac,randomBytes:t.randomBytes,lowS:t.lowS,bits2int:t.bits2int,bits2int_modN:t.bits2int_modN};return{CURVE:e,curveOpts:n,ecdsaOpts:r}}function Cc(t,e){return Object.assign({},e,{ProjectivePoint:e.Point,CURVE:t})}function Lc(t){const{CURVE:e,curveOpts:n,ecdsaOpts:r}=$c(t),o=_c(e,n),s=Tc(o,r,n);return Cc(t,s)}function Rn(t,e){const n=r=>Lc({...t,hash:r});return{...n(e),create:n}}const $o={p:BigInt("0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff"),n:BigInt("0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551"),h:BigInt(1),a:BigInt("0xffffffff00000001000000000000000000000000fffffffffffffffffffffffc"),b:BigInt("0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b"),Gx:BigInt("0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296"),Gy:BigInt("0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5")},Co={p:BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000ffffffff"),n:BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffc7634d81f4372ddf581a0db248b0a77aecec196accc52973"),h:BigInt(1),a:BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000fffffffc"),b:BigInt("0xb3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aef"),Gx:BigInt("0xaa87ca22be8b05378eb1c71ef320ad746e1d3b628ba79b9859f741e082542a385502f25dbf55296c3a545e3872760ab7"),Gy:BigInt("0x3617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5f")},Lo={p:BigInt("0x1ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),n:BigInt("0x01fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa51868783bf2f966b7fcc0148f709a5d03bb5c9b8899c47aebb6fb71e91386409"),h:BigInt(1),a:BigInt("0x1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc"),b:BigInt("0x0051953eb9618e1c9a1f929a21a0b68540eea2da725b99b315f3b8b489918ef109e156193951ec7e937b1652c0bd3bb1bf073573df883d2c34f1ef451fd46b503f00"),Gx:BigInt("0x00c6858e06b70404e9cd9e3ecb662395b4429c648139053fb521f828af606b4d3dbaa14b5e77efe75928fe1dc127a2ffa8de3348b3c1856a429bf97e7e31c2e5bd66"),Gy:BigInt("0x011839296a789a3bc0045c8a5fb42c7d1bd998f54449579b446817afbd17273e662c97ee72995ef42640c550b9013fad0761353c7086a272c24088be94769fd16650")},jc=Yt($o.p),kc=Yt(Co.p),Pc=Yt(Lo.p),Hc=Rn({...$o,Fp:jc,lowS:!1},Ae);Rn({...Co,Fp:kc,lowS:!1},Yi),Rn({...Lo,Fp:Pc,lowS:!1,allowedPrivateKeyLengths:[130,131,132]},Wi);const Dc=Hc,$n="base10",tt="base16",Qt="base64pad",De="base64url",te="utf8",Cn=0,ee=1,ge=2,Mc=0,jo=1,be=12,Ln=32;function Vc(){const t=Tn.utils.randomPrivateKey(),e=Tn.getPublicKey(t);return{privateKey:(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(t,tt),publicKey:(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(e,tt)}}function qc(){const t=Zt(Ln);return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(t,tt)}function Kc(t,e){const n=Tn.getSharedSecret((0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(t,tt),(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(e,tt)),r=Jf(Te,n,void 0,void 0,Ln);return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(r,tt)}function Fc(t){const e=Te((0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(t,tt));return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(e,tt)}function zc(t){const e=Te((0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(t,te));return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(e,tt)}function jn(t){return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(`${t}`,$n)}function Vt(t){return Number((0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(t,$n))}function ko(t){return t.replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}function Po(t){const e=t.replace(/-/g,"+").replace(/_/g,"/"),n=(4-e.length%4)%4;return e+"=".repeat(n)}function Gc(t){const e=jn(typeof t.type<"u"?t.type:Cn);if(Vt(e)===ee&&typeof t.senderPublicKey>"u")throw new Error("Missing sender public key for type 1 envelope");const n=typeof t.senderPublicKey<"u"?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(t.senderPublicKey,tt):void 0,r=typeof t.iv<"u"?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(t.iv,tt):Zt(be),o=(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(t.symKey,tt),s=co(o,r).encrypt((0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(t.message,te)),i=kn({type:e,sealed:s,iv:r,senderPublicKey:n});return t.encoding===De?ko(i):i}function Zc(t){const e=(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(t.symKey,tt),{sealed:n,iv:r}=Me({encoded:t.encoded,encoding:t.encoding}),o=co(e,r).decrypt(n);if(o===null)throw new Error("Failed to decrypt");return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(o,te)}function Wc(t,e){const n=jn(ge),r=Zt(be),o=(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(t,te),s=kn({type:n,sealed:o,iv:r});return e===De?ko(s):s}function Yc(t,e){const{sealed:n}=Me({encoded:t,encoding:e});return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(n,te)}function kn(t){if(Vt(t.type)===ge)return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.concat)([t.type,t.sealed]),Qt);if(Vt(t.type)===ee){if(typeof t.senderPublicKey>"u")throw new Error("Missing sender public key for type 1 envelope");return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.concat)([t.type,t.senderPublicKey,t.iv,t.sealed]),Qt)}return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.concat)([t.type,t.iv,t.sealed]),Qt)}function Me(t){const e=(t.encoding||Qt)===De?Po(t.encoded):t.encoded,n=(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.fromString)(e,Qt),r=n.slice(Mc,jo),o=jo;if(Vt(r)===ee){const a=o+Ln,l=a+be,c=n.slice(o,a),u=n.slice(a,l),h=n.slice(l);return{type:r,sealed:h,iv:u,senderPublicKey:c}}if(Vt(r)===ge){const a=n.slice(o),l=Zt(be);return{type:r,sealed:a,iv:l}}const s=o+be,i=n.slice(o,s),f=n.slice(s);return{type:r,sealed:f,iv:i}}function Xc(t,e){const n=Me({encoded:t,encoding:e?.encoding});return Ho({type:Vt(n.type),senderPublicKey:typeof n.senderPublicKey<"u"?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.toString)(n.senderPublicKey,tt):void 0,receiverPublicKey:e?.receiverPublicKey})}function Ho(t){const e=t?.type||Cn;if(e===ee){if(typeof t?.senderPublicKey>"u")throw new Error("missing sender public key");if(typeof t?.receiverPublicKey>"u")throw new Error("missing receiver public key")}return{type:e,senderPublicKey:t?.senderPublicKey,receiverPublicKey:t?.receiverPublicKey}}function Jc(t){return t.type===ee&&typeof t.senderPublicKey=="string"&&typeof t.receiverPublicKey=="string"}function Qc(t){return t.type===ge}function Do(t){const e=Buffer.from(t.x,"base64"),n=Buffer.from(t.y,"base64");return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.concat)([new Uint8Array([4]),e,n])}function ta(t,e){const[n,r,o]=t.split("."),s=Buffer.from(Po(o),"base64");if(s.length!==64)throw new Error("Invalid signature length");const i=s.slice(0,32),f=s.slice(32,64),a=`${n}.${r}`,l=Te(a),c=Do(e);if(!Dc.verify((0,uint8arrays__WEBPACK_IMPORTED_MODULE_10__.concat)([i,f]),l,c))throw new Error("Invalid signature");return (0,_walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_9__.decodeJWT)(t).payload}const Mo="irn";function ea(t){return t?.relay||{protocol:Mo}}function na(t){const e=_walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_11__.RELAY_JSONRPC[t];if(typeof e>"u")throw new Error(`Relay Protocol not supported: ${t}`);return e}function Vo(t,e="-"){const n={},r="relay"+e;return Object.keys(t).forEach(o=>{if(o.startsWith(r)){const s=o.replace(r,""),i=t[o];n[s]=i}}),n}function ra(t){if(!t.includes("wc:")){const l=Qe(t);l!=null&&l.includes("wc:")&&(t=l)}t=t.includes("wc://")?t.replace("wc://",""):t,t=t.includes("wc:")?t.replace("wc:",""):t;const e=t.indexOf(":"),n=t.indexOf("?")!==-1?t.indexOf("?"):void 0,r=t.substring(0,e),o=t.substring(e+1,n).split("@"),s=typeof n<"u"?t.substring(n):"",i=new URLSearchParams(s),f={};i.forEach((l,c)=>{f[c]=l});const a=typeof f.methods=="string"?f.methods.split(","):void 0;return{protocol:r,topic:qo(o[0]),version:parseInt(o[1],10),symKey:f.symKey,relay:Vo(f),methods:a,expiryTimestamp:f.expiryTimestamp?parseInt(f.expiryTimestamp,10):void 0}}function qo(t){return t.startsWith("//")?t.substring(2):t}function Ko(t,e="-"){const n="relay",r={};return Object.keys(t).forEach(o=>{const s=o,i=n+e+s;t[s]&&(r[i]=t[s])}),r}function oa(t){const e=new URLSearchParams,n=Ko(t.relay);Object.keys(n).sort().forEach(o=>{e.set(o,n[o])}),e.set("symKey",t.symKey),t.expiryTimestamp&&e.set("expiryTimestamp",t.expiryTimestamp.toString()),t.methods&&e.set("methods",t.methods.join(","));const r=e.toString();return`${t.protocol}:${t.topic}@${t.version}?${r}`}function sa(t,e,n){return`${t}?wc_ev=${n}&topic=${e}`}var ia=Object.defineProperty,fa=Object.defineProperties,ca=Object.getOwnPropertyDescriptors,Fo=Object.getOwnPropertySymbols,aa=Object.prototype.hasOwnProperty,ua=Object.prototype.propertyIsEnumerable,zo=(t,e,n)=>e in t?ia(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,la=(t,e)=>{for(var n in e||(e={}))aa.call(e,n)&&zo(t,n,e[n]);if(Fo)for(var n of Fo(e))ua.call(e,n)&&zo(t,n,e[n]);return t},da=(t,e)=>fa(t,ca(e));function qt(t){const e=[];return t.forEach(n=>{const[r,o]=n.split(":");e.push(`${r}:${o}`)}),e}function Go(t){const e=[];return Object.values(t).forEach(n=>{e.push(...qt(n.accounts))}),e}function Zo(t,e){const n=[];return Object.values(t).forEach(r=>{qt(r.accounts).includes(e)&&n.push(...r.methods)}),n}function Wo(t,e){const n=[];return Object.values(t).forEach(r=>{qt(r.accounts).includes(e)&&n.push(...r.events)}),n}function ha(t,e){const n=is(t,e);if(n)throw new Error(n.message);const r={};for(const[o,s]of Object.entries(t))r[o]={methods:s.methods,events:s.events,chains:s.accounts.map(i=>`${i.split(":")[0]}:${i.split(":")[1]}`)};return r}function pa(t){var e;const{proposal:{requiredNamespaces:n,optionalNamespaces:r={}},supportedNamespaces:o}=t,s=ye(n),i=ye(r),f={};Object.keys(o).forEach(c=>{const u=o[c].chains,h=o[c].methods,g=o[c].events,w=o[c].accounts;u.forEach(y=>{if(!w.some(x=>x.includes(y)))throw new Error(`No accounts provided for chain ${y} in namespace ${c}`)}),f[c]={chains:u,methods:h,events:g,accounts:w}});const a=cs(n,f,"approve()");if(a)throw new Error(a.message);const l={};if(!Object.keys(n).length&&!Object.keys(r).length)return f;Object.keys(s).forEach(c=>{const u=o[c].chains.filter(y=>{var x,R;return(R=(x=s[c])==null?void 0:x.chains)==null?void 0:R.includes(y)}),h=o[c].methods.filter(y=>{var x,R;return(R=(x=s[c])==null?void 0:x.methods)==null?void 0:R.includes(y)}),g=o[c].events.filter(y=>{var x,R;return(R=(x=s[c])==null?void 0:x.events)==null?void 0:R.includes(y)}),w=u.map(y=>o[c].accounts.filter(x=>x.includes(`${y}:`))).flat();l[c]={chains:u,methods:h,events:g,accounts:w}}),Object.keys(i).forEach(c=>{var u,h,g,w,y,x;if(!o[c])return;const R=(h=(u=i[c])==null?void 0:u.chains)==null?void 0:h.filter(_=>o[c].chains.includes(_)),M=o[c].methods.filter(_=>{var k,j;return(j=(k=i[c])==null?void 0:k.methods)==null?void 0:j.includes(_)}),L=o[c].events.filter(_=>{var k,j;return(j=(k=i[c])==null?void 0:k.events)==null?void 0:j.includes(_)}),V=R?.map(_=>o[c].accounts.filter(k=>k.includes(`${_}:`))).flat();l[c]={chains:ct((g=l[c])==null?void 0:g.chains,R),methods:ct((w=l[c])==null?void 0:w.methods,M),events:ct((y=l[c])==null?void 0:y.events,L),accounts:ct((x=l[c])==null?void 0:x.accounts,V)}});for(const[c,u]of Object.entries(l))(u.accounts.length===0||((e=u?.chains)==null?void 0:e.length)===0)&&delete l[c];return l}function Pn(t){return t.includes(":")}function Yo(t){return Pn(t)?t.split(":")[0]:t}function ye(t){var e,n,r;const o={};if(!Ve(t))return o;for(const[s,i]of Object.entries(t)){const f=Pn(s)?[s]:i.chains,a=i.methods||[],l=i.events||[],c=Yo(s);o[c]=da(la({},o[c]),{chains:ct(f,(e=o[c])==null?void 0:e.chains),methods:ct(a,(n=o[c])==null?void 0:n.methods),events:ct(l,(r=o[c])==null?void 0:r.events)})}return o}function Xo(t){const e={};return t?.forEach(n=>{var r;const[o,s]=n.split(":");e[o]||(e[o]={accounts:[],chains:[],events:[],methods:[]}),e[o].accounts.push(n),(r=e[o].chains)==null||r.push(`${o}:${s}`)}),e}function ga(t,e){e=e.map(r=>r.replace("did:pkh:",""));const n=Xo(e);for(const[r,o]of Object.entries(n))o.methods?o.methods=ct(o.methods,t):o.methods=t,o.events=["chainChanged","accountsChanged"];return n}function ba(t,e){var n,r,o,s,i,f;const a=ye(t),l=ye(e),c={},u=Object.keys(a).concat(Object.keys(l));for(const h of u)c[h]={chains:ct((n=a[h])==null?void 0:n.chains,(r=l[h])==null?void 0:r.chains),methods:ct((o=a[h])==null?void 0:o.methods,(s=l[h])==null?void 0:s.methods),events:ct((i=a[h])==null?void 0:i.events,(f=l[h])==null?void 0:f.events)};return c}const Jo={INVALID_METHOD:{message:"Invalid method.",code:1001},INVALID_EVENT:{message:"Invalid event.",code:1002},INVALID_UPDATE_REQUEST:{message:"Invalid update request.",code:1003},INVALID_EXTEND_REQUEST:{message:"Invalid extend request.",code:1004},INVALID_SESSION_SETTLE_REQUEST:{message:"Invalid session settle request.",code:1005},UNAUTHORIZED_METHOD:{message:"Unauthorized method.",code:3001},UNAUTHORIZED_EVENT:{message:"Unauthorized event.",code:3002},UNAUTHORIZED_UPDATE_REQUEST:{message:"Unauthorized update request.",code:3003},UNAUTHORIZED_EXTEND_REQUEST:{message:"Unauthorized extend request.",code:3004},USER_REJECTED:{message:"User rejected.",code:5e3},USER_REJECTED_CHAINS:{message:"User rejected chains.",code:5001},USER_REJECTED_METHODS:{message:"User rejected methods.",code:5002},USER_REJECTED_EVENTS:{message:"User rejected events.",code:5003},UNSUPPORTED_CHAINS:{message:"Unsupported chains.",code:5100},UNSUPPORTED_METHODS:{message:"Unsupported methods.",code:5101},UNSUPPORTED_EVENTS:{message:"Unsupported events.",code:5102},UNSUPPORTED_ACCOUNTS:{message:"Unsupported accounts.",code:5103},UNSUPPORTED_NAMESPACE_KEY:{message:"Unsupported namespace key.",code:5104},USER_DISCONNECTED:{message:"User disconnected.",code:6e3},SESSION_SETTLEMENT_FAILED:{message:"Session settlement failed.",code:7e3},WC_METHOD_UNSUPPORTED:{message:"Unsupported wc_ method.",code:10001}},Qo={NOT_INITIALIZED:{message:"Not initialized.",code:1},NO_MATCHING_KEY:{message:"No matching key.",code:2},RESTORE_WILL_OVERRIDE:{message:"Restore will override.",code:3},RESUBSCRIBED:{message:"Resubscribed.",code:4},MISSING_OR_INVALID:{message:"Missing or invalid.",code:5},EXPIRED:{message:"Expired.",code:6},UNKNOWN_TYPE:{message:"Unknown type.",code:7},MISMATCHED_TOPIC:{message:"Mismatched topic.",code:8},NON_CONFORMING_NAMESPACES:{message:"Non conforming namespaces.",code:9}};function Et(t,e){const{message:n,code:r}=Qo[t];return{message:e?`${n} ${e}`:n,code:r}}function Kt(t,e){const{message:n,code:r}=Jo[t];return{message:e?`${n} ${e}`:n,code:r}}function me(t,e){return Array.isArray(t)?typeof e<"u"&&t.length?t.every(e):!0:!1}function Ve(t){return Object.getPrototypeOf(t)===Object.prototype&&Object.keys(t).length}function kt(t){return typeof t>"u"}function it(t,e){return e&&kt(t)?!0:typeof t=="string"&&!!t.trim().length}function qe(t,e){return e&&kt(t)?!0:typeof t=="number"&&!isNaN(t)}function ya(t,e){const{requiredNamespaces:n}=e,r=Object.keys(t.namespaces),o=Object.keys(n);let s=!0;return It(o,r)?(r.forEach(i=>{const{accounts:f,methods:a,events:l}=t.namespaces[i],c=qt(f),u=n[i];(!It(ve(i,u),c)||!It(u.methods,a)||!It(u.events,l))&&(s=!1)}),s):!1}function we(t){return it(t,!1)&&t.includes(":")?t.split(":").length===2:!1}function ts(t){if(it(t,!1)&&t.includes(":")){const e=t.split(":");if(e.length===3){const n=e[0]+":"+e[1];return!!e[2]&&we(n)}}return!1}function ma(t){function e(n){try{return typeof new URL(n)<"u"}catch{return!1}}try{if(it(t,!1)){if(e(t))return!0;const n=Qe(t);return e(n)}}catch{}return!1}function wa(t){var e;return(e=t?.proposer)==null?void 0:e.publicKey}function xa(t){return t?.topic}function va(t,e){let n=null;return it(t?.publicKey,!1)||(n=Et("MISSING_OR_INVALID",`${e} controller public key should be a string`)),n}function Hn(t){let e=!0;return me(t)?t.length&&(e=t.every(n=>it(n,!1))):e=!1,e}function es(t,e,n){let r=null;return me(e)&&e.length?e.forEach(o=>{r||we(o)||(r=Kt("UNSUPPORTED_CHAINS",`${n}, chain ${o} should be a string and conform to "namespace:chainId" format`))}):we(t)||(r=Kt("UNSUPPORTED_CHAINS",`${n}, chains must be defined as "namespace:chainId" e.g. "eip155:1": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: ["eip155:1", "eip155:5"] }`)),r}function ns(t,e,n){let r=null;return Object.entries(t).forEach(([o,s])=>{if(r)return;const i=es(o,ve(o,s),`${e} ${n}`);i&&(r=i)}),r}function rs(t,e){let n=null;return me(t)?t.forEach(r=>{n||ts(r)||(n=Kt("UNSUPPORTED_ACCOUNTS",`${e}, account ${r} should be a string and conform to "namespace:chainId:address" format`))}):n=Kt("UNSUPPORTED_ACCOUNTS",`${e}, accounts should be an array of strings conforming to "namespace:chainId:address" format`),n}function os(t,e){let n=null;return Object.values(t).forEach(r=>{if(n)return;const o=rs(r?.accounts,`${e} namespace`);o&&(n=o)}),n}function ss(t,e){let n=null;return Hn(t?.methods)?Hn(t?.events)||(n=Kt("UNSUPPORTED_EVENTS",`${e}, events should be an array of strings or empty array for no events`)):n=Kt("UNSUPPORTED_METHODS",`${e}, methods should be an array of strings or empty array for no methods`),n}function Dn(t,e){let n=null;return Object.values(t).forEach(r=>{if(n)return;const o=ss(r,`${e}, namespace`);o&&(n=o)}),n}function Ea(t,e,n){let r=null;if(t&&Ve(t)){const o=Dn(t,e);o&&(r=o);const s=ns(t,e,n);s&&(r=s)}else r=Et("MISSING_OR_INVALID",`${e}, ${n} should be an object with data`);return r}function is(t,e){let n=null;if(t&&Ve(t)){const r=Dn(t,e);r&&(n=r);const o=os(t,e);o&&(n=o)}else n=Et("MISSING_OR_INVALID",`${e}, namespaces should be an object with data`);return n}function fs(t){return it(t.protocol,!0)}function Ba(t,e){let n=!1;return e&&!t?n=!0:t&&me(t)&&t.length&&t.forEach(r=>{n=fs(r)}),n}function Ia(t){return typeof t=="number"}function Aa(t){return typeof t<"u"&&typeof t!==null}function Sa(t){return!(!t||typeof t!="object"||!t.code||!qe(t.code,!1)||!t.message||!it(t.message,!1))}function Na(t){return!(kt(t)||!it(t.method,!1))}function Oa(t){return!(kt(t)||kt(t.result)&&kt(t.error)||!qe(t.id,!1)||!it(t.jsonrpc,!1))}function Ua(t){return!(kt(t)||!it(t.name,!1))}function _a(t,e){return!(!we(e)||!Go(t).includes(e))}function Ta(t,e,n){return it(n,!1)?Zo(t,e).includes(n):!1}function Ra(t,e,n){return it(n,!1)?Wo(t,e).includes(n):!1}function cs(t,e,n){let r=null;const o=$a(t),s=Ca(e),i=Object.keys(o),f=Object.keys(s),a=as(Object.keys(t)),l=as(Object.keys(e)),c=a.filter(u=>!l.includes(u));return c.length&&(r=Et("NON_CONFORMING_NAMESPACES",`${n} namespaces keys don't satisfy requiredNamespaces.
      Required: ${c.toString()}
      Received: ${Object.keys(e).toString()}`)),It(i,f)||(r=Et("NON_CONFORMING_NAMESPACES",`${n} namespaces chains don't satisfy required namespaces.
      Required: ${i.toString()}
      Approved: ${f.toString()}`)),Object.keys(e).forEach(u=>{if(!u.includes(":")||r)return;const h=qt(e[u].accounts);h.includes(u)||(r=Et("NON_CONFORMING_NAMESPACES",`${n} namespaces accounts don't satisfy namespace accounts for ${u}
        Required: ${u}
        Approved: ${h.toString()}`))}),i.forEach(u=>{r||(It(o[u].methods,s[u].methods)?It(o[u].events,s[u].events)||(r=Et("NON_CONFORMING_NAMESPACES",`${n} namespaces events don't satisfy namespace events for ${u}`)):r=Et("NON_CONFORMING_NAMESPACES",`${n} namespaces methods don't satisfy namespace methods for ${u}`))}),r}function $a(t){const e={};return Object.keys(t).forEach(n=>{var r;n.includes(":")?e[n]=t[n]:(r=t[n].chains)==null||r.forEach(o=>{e[o]={methods:t[n].methods,events:t[n].events}})}),e}function as(t){return[...new Set(t.map(e=>e.includes(":")?e.split(":")[0]:e))]}function Ca(t){const e={};return Object.keys(t).forEach(n=>{if(n.includes(":"))e[n]=t[n];else{const r=qt(t[n].accounts);r?.forEach(o=>{e[o]={accounts:t[n].accounts.filter(s=>s.includes(`${o}:`)),methods:t[n].methods,events:t[n].events}})}}),e}function La(t,e){return qe(t,!1)&&t<=e.max&&t>=e.min}function ja(){const t=Pt();return new Promise(e=>{switch(t){case J.browser:e(us());break;case J.reactNative:e(ls());break;case J.node:e(ds());break;default:e(!0)}})}function us(){return zt()&&navigator?.onLine}async function ls(){if(Bt()&&typeof __webpack_require__.g<"u"&&__webpack_require__.g!=null&&__webpack_require__.g.NetInfo){const t=await(__webpack_require__.g==null?void 0:__webpack_require__.g.NetInfo.fetch());return t?.isConnected}return!0}function ds(){return!0}function ka(t){switch(Pt()){case J.browser:hs(t);break;case J.reactNative:ps(t);break;case J.node:break}}function hs(t){!Bt()&&zt()&&(window.addEventListener("online",()=>t(!0)),window.addEventListener("offline",()=>t(!1)))}function ps(t){Bt()&&typeof __webpack_require__.g<"u"&&__webpack_require__.g!=null&&__webpack_require__.g.NetInfo&&__webpack_require__.g?.NetInfo.addEventListener(e=>t(e?.isConnected))}function Pa(){var t;return zt()&&(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__.getDocument)()?((t=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_2__.getDocument)())==null?void 0:t.visibilityState)==="visible":!0}const Mn={};class Ha{static get(e){return Mn[e]}static set(e,n){Mn[e]=n}static delete(e){delete Mn[e]}}function gs(t){const e=bs58__WEBPACK_IMPORTED_MODULE_5__["default"].decode(t);if(e.length<33)throw new Error("Too short to contain a public key");return e.slice(1,33)}function bs({publicKey:t,signature:e,payload:n}){var r;const o=Vn(n.method),s=128|parseInt(((r=n.version)==null?void 0:r.toString())||"4"),i=Ma(n.address),f=n.era==="00"?new Uint8Array([0]):Vn(n.era);if(f.length!==1&&f.length!==2)throw new Error("Invalid era length");const a=parseInt(n.nonce,16),l=new Uint8Array([a&255,a>>8&255]),c=BigInt(`0x${Da(n.tip)}`),u=qa(c),h=new Uint8Array([0,...t,i,...e,...f,...l,...u,...o]),g=Va(h.length+1);return new Uint8Array([...g,s,...h])}function ys(t){const e=Vn(t),n=(0,blakejs__WEBPACK_IMPORTED_MODULE_12__.blake2b)(e,void 0,32);return"0x"+Buffer.from(n).toString("hex")}function Vn(t){return new Uint8Array(t.replace(/^0x/,"").match(/.{1,2}/g).map(e=>parseInt(e,16)))}function Da(t){return t.startsWith("0x")?t.slice(2):t}function Ma(t){const e=bs58__WEBPACK_IMPORTED_MODULE_5__["default"].decode(t)[0];return e===42?0:e===60?2:1}function Va(t){if(t<64)return new Uint8Array([t<<2]);if(t<16384){const e=t<<2|1;return new Uint8Array([e&255,e>>8&255])}else if(t<1<<30){const e=t<<2|2;return new Uint8Array([e&255,e>>8&255,e>>16&255,e>>24&255])}else throw new Error("Compact encoding > 2^30 not supported")}function qa(t){if(t<BigInt(1)<<BigInt(6))return new Uint8Array([Number(t<<BigInt(2))]);if(t<BigInt(1)<<BigInt(14)){const e=t<<BigInt(2)|BigInt(1);return new Uint8Array([Number(e&BigInt(255)),Number(e>>BigInt(8)&BigInt(255))])}else if(t<BigInt(1)<<BigInt(30)){const e=t<<BigInt(2)|BigInt(2);return new Uint8Array([Number(e&BigInt(255)),Number(e>>BigInt(8)&BigInt(255)),Number(e>>BigInt(16)&BigInt(255)),Number(e>>BigInt(24)&BigInt(255))])}else throw new Error("BigInt compact encoding not supported > 2^30")}function Ka(t){const e=Uint8Array.from(Buffer.from(t.signature,"hex")),n=gs(t.transaction.address),r=bs({publicKey:n,signature:e,payload:t.transaction}),o=Buffer.from(r).toString("hex");return ys(o)}
//# sourceMappingURL=index.es.js.map


/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/window-getters/dist/cjs/index.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/window-getters/dist/cjs/index.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getLocalStorage = exports.getLocalStorageOrThrow = exports.getCrypto = exports.getCryptoOrThrow = exports.getLocation = exports.getLocationOrThrow = exports.getNavigator = exports.getNavigatorOrThrow = exports.getDocument = exports.getDocumentOrThrow = exports.getFromWindowOrThrow = exports.getFromWindow = void 0;
function getFromWindow(name) {
    let res = undefined;
    if (typeof window !== "undefined" && typeof window[name] !== "undefined") {
        res = window[name];
    }
    return res;
}
exports.getFromWindow = getFromWindow;
function getFromWindowOrThrow(name) {
    const res = getFromWindow(name);
    if (!res) {
        throw new Error(`${name} is not defined in Window`);
    }
    return res;
}
exports.getFromWindowOrThrow = getFromWindowOrThrow;
function getDocumentOrThrow() {
    return getFromWindowOrThrow("document");
}
exports.getDocumentOrThrow = getDocumentOrThrow;
function getDocument() {
    return getFromWindow("document");
}
exports.getDocument = getDocument;
function getNavigatorOrThrow() {
    return getFromWindowOrThrow("navigator");
}
exports.getNavigatorOrThrow = getNavigatorOrThrow;
function getNavigator() {
    return getFromWindow("navigator");
}
exports.getNavigator = getNavigator;
function getLocationOrThrow() {
    return getFromWindowOrThrow("location");
}
exports.getLocationOrThrow = getLocationOrThrow;
function getLocation() {
    return getFromWindow("location");
}
exports.getLocation = getLocation;
function getCryptoOrThrow() {
    return getFromWindowOrThrow("crypto");
}
exports.getCryptoOrThrow = getCryptoOrThrow;
function getCrypto() {
    return getFromWindow("crypto");
}
exports.getCrypto = getCrypto;
function getLocalStorageOrThrow() {
    return getFromWindowOrThrow("localStorage");
}
exports.getLocalStorageOrThrow = getLocalStorageOrThrow;
function getLocalStorage() {
    return getFromWindow("localStorage");
}
exports.getLocalStorage = getLocalStorage;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/window-metadata/dist/cjs/index.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/window-metadata/dist/cjs/index.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getWindowMetadata = void 0;
const window_getters_1 = __webpack_require__(/*! @walletconnect/window-getters */ "./node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/window-getters/dist/cjs/index.js");
function getWindowMetadata() {
    let doc;
    let loc;
    try {
        doc = window_getters_1.getDocumentOrThrow();
        loc = window_getters_1.getLocationOrThrow();
    }
    catch (e) {
        return null;
    }
    function getIcons() {
        const links = doc.getElementsByTagName("link");
        const icons = [];
        for (let i = 0; i < links.length; i++) {
            const link = links[i];
            const rel = link.getAttribute("rel");
            if (rel) {
                if (rel.toLowerCase().indexOf("icon") > -1) {
                    const href = link.getAttribute("href");
                    if (href) {
                        if (href.toLowerCase().indexOf("https:") === -1 &&
                            href.toLowerCase().indexOf("http:") === -1 &&
                            href.indexOf("//") !== 0) {
                            let absoluteHref = loc.protocol + "//" + loc.host;
                            if (href.indexOf("/") === 0) {
                                absoluteHref += href;
                            }
                            else {
                                const path = loc.pathname.split("/");
                                path.pop();
                                const finalPath = path.join("/");
                                absoluteHref += finalPath + "/" + href;
                            }
                            icons.push(absoluteHref);
                        }
                        else if (href.indexOf("//") === 0) {
                            const absoluteUrl = loc.protocol + href;
                            icons.push(absoluteUrl);
                        }
                        else {
                            icons.push(href);
                        }
                    }
                }
            }
        }
        return icons;
    }
    function getWindowMetadataOfAny(...args) {
        const metaTags = doc.getElementsByTagName("meta");
        for (let i = 0; i < metaTags.length; i++) {
            const tag = metaTags[i];
            const attributes = ["itemprop", "property", "name"]
                .map((target) => tag.getAttribute(target))
                .filter((attr) => {
                if (attr) {
                    return args.includes(attr);
                }
                return false;
            });
            if (attributes.length && attributes) {
                const content = tag.getAttribute("content");
                if (content) {
                    return content;
                }
            }
        }
        return "";
    }
    function getName() {
        let name = getWindowMetadataOfAny("name", "og:site_name", "og:title", "twitter:title");
        if (!name) {
            name = doc.title;
        }
        return name;
    }
    function getDescription() {
        const description = getWindowMetadataOfAny("description", "og:description", "twitter:description", "keywords");
        return description;
    }
    const name = getName();
    const description = getDescription();
    const url = loc.origin;
    const icons = getIcons();
    const meta = {
        description,
        url,
        icons,
        name,
    };
    return meta;
}
exports.getWindowMetadata = getWindowMetadata;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/base-x/src/esm/index.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/base-x/src/esm/index.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// base-x encoding / decoding
// Copyright (c) 2018 base-x contributors
// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)
// Distributed under the MIT software license, see the accompanying
// file LICENSE or http://www.opensource.org/licenses/mit-license.php.
function base (ALPHABET) {
  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }
  const BASE_MAP = new Uint8Array(256)
  for (let j = 0; j < BASE_MAP.length; j++) {
    BASE_MAP[j] = 255
  }
  for (let i = 0; i < ALPHABET.length; i++) {
    const x = ALPHABET.charAt(i)
    const xc = x.charCodeAt(0)
    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }
    BASE_MAP[xc] = i
  }
  const BASE = ALPHABET.length
  const LEADER = ALPHABET.charAt(0)
  const FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up
  const iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up
  function encode (source) {
    // eslint-disable-next-line no-empty
    if (source instanceof Uint8Array) { } else if (ArrayBuffer.isView(source)) {
      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)
    } else if (Array.isArray(source)) {
      source = Uint8Array.from(source)
    }
    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }
    if (source.length === 0) { return '' }
    // Skip & count leading zeroes.
    let zeroes = 0
    let length = 0
    let pbegin = 0
    const pend = source.length
    while (pbegin !== pend && source[pbegin] === 0) {
      pbegin++
      zeroes++
    }
    // Allocate enough space in big-endian base58 representation.
    const size = ((pend - pbegin) * iFACTOR + 1) >>> 0
    const b58 = new Uint8Array(size)
    // Process the bytes.
    while (pbegin !== pend) {
      let carry = source[pbegin]
      // Apply "b58 = b58 * 256 + ch".
      let i = 0
      for (let it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {
        carry += (256 * b58[it1]) >>> 0
        b58[it1] = (carry % BASE) >>> 0
        carry = (carry / BASE) >>> 0
      }
      if (carry !== 0) { throw new Error('Non-zero carry') }
      length = i
      pbegin++
    }
    // Skip leading zeroes in base58 result.
    let it2 = size - length
    while (it2 !== size && b58[it2] === 0) {
      it2++
    }
    // Translate the result into a string.
    let str = LEADER.repeat(zeroes)
    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }
    return str
  }
  function decodeUnsafe (source) {
    if (typeof source !== 'string') { throw new TypeError('Expected String') }
    if (source.length === 0) { return new Uint8Array() }
    let psz = 0
    // Skip and count leading '1's.
    let zeroes = 0
    let length = 0
    while (source[psz] === LEADER) {
      zeroes++
      psz++
    }
    // Allocate enough space in big-endian base256 representation.
    const size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.
    const b256 = new Uint8Array(size)
    // Process the characters.
    while (psz < source.length) {
      // Find code of next character
      const charCode = source.charCodeAt(psz)
      // Base map can not be indexed using char code
      if (charCode > 255) { return }
      // Decode character
      let carry = BASE_MAP[charCode]
      // Invalid character
      if (carry === 255) { return }
      let i = 0
      for (let it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {
        carry += (BASE * b256[it3]) >>> 0
        b256[it3] = (carry % 256) >>> 0
        carry = (carry / 256) >>> 0
      }
      if (carry !== 0) { throw new Error('Non-zero carry') }
      length = i
      psz++
    }
    // Skip leading zeroes in b256.
    let it4 = size - length
    while (it4 !== size && b256[it4] === 0) {
      it4++
    }
    const vch = new Uint8Array(zeroes + (size - it4))
    let j = zeroes
    while (it4 !== size) {
      vch[j++] = b256[it4++]
    }
    return vch
  }
  function decode (string) {
    const buffer = decodeUnsafe(string)
    if (buffer) { return buffer }
    throw new Error('Non-base' + BASE + ' character')
  }
  return {
    encode,
    decodeUnsafe,
    decode
  }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (base);


/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/bs58/src/esm/index.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/bs58/src/esm/index.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var base_x__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! base-x */ "./node_modules/@walletconnect/universal-provider/node_modules/base-x/src/esm/index.js");

var ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,base_x__WEBPACK_IMPORTED_MODULE_0__["default"])(ALPHABET));


/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/detect-browser/es/index.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/detect-browser/es/index.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BotInfo: () => (/* binding */ BotInfo),
/* harmony export */   BrowserInfo: () => (/* binding */ BrowserInfo),
/* harmony export */   NodeInfo: () => (/* binding */ NodeInfo),
/* harmony export */   ReactNativeInfo: () => (/* binding */ ReactNativeInfo),
/* harmony export */   SearchBotDeviceInfo: () => (/* binding */ SearchBotDeviceInfo),
/* harmony export */   browserName: () => (/* binding */ browserName),
/* harmony export */   detect: () => (/* binding */ detect),
/* harmony export */   detectOS: () => (/* binding */ detectOS),
/* harmony export */   getNodeVersion: () => (/* binding */ getNodeVersion),
/* harmony export */   parseUserAgent: () => (/* binding */ parseUserAgent)
/* harmony export */ });
/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ "./node_modules/process/browser.js");
var __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var BrowserInfo = /** @class */ (function () {
    function BrowserInfo(name, version, os) {
        this.name = name;
        this.version = version;
        this.os = os;
        this.type = 'browser';
    }
    return BrowserInfo;
}());

var NodeInfo = /** @class */ (function () {
    function NodeInfo(version) {
        this.version = version;
        this.type = 'node';
        this.name = 'node';
        this.os = process.platform;
    }
    return NodeInfo;
}());

var SearchBotDeviceInfo = /** @class */ (function () {
    function SearchBotDeviceInfo(name, version, os, bot) {
        this.name = name;
        this.version = version;
        this.os = os;
        this.bot = bot;
        this.type = 'bot-device';
    }
    return SearchBotDeviceInfo;
}());

var BotInfo = /** @class */ (function () {
    function BotInfo() {
        this.type = 'bot';
        this.bot = true; // NOTE: deprecated test name instead
        this.name = 'bot';
        this.version = null;
        this.os = null;
    }
    return BotInfo;
}());

var ReactNativeInfo = /** @class */ (function () {
    function ReactNativeInfo() {
        this.type = 'react-native';
        this.name = 'react-native';
        this.version = null;
        this.os = null;
    }
    return ReactNativeInfo;
}());

// tslint:disable-next-line:max-line-length
var SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;
var SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/;
var REQUIRED_VERSION_PARTS = 3;
var userAgentRules = [
    ['aol', /AOLShield\/([0-9\._]+)/],
    ['edge', /Edge\/([0-9\._]+)/],
    ['edge-ios', /EdgiOS\/([0-9\._]+)/],
    ['yandexbrowser', /YaBrowser\/([0-9\._]+)/],
    ['kakaotalk', /KAKAOTALK\s([0-9\.]+)/],
    ['samsung', /SamsungBrowser\/([0-9\.]+)/],
    ['silk', /\bSilk\/([0-9._-]+)\b/],
    ['miui', /MiuiBrowser\/([0-9\.]+)$/],
    ['beaker', /BeakerBrowser\/([0-9\.]+)/],
    ['edge-chromium', /EdgA?\/([0-9\.]+)/],
    [
        'chromium-webview',
        /(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/,
    ],
    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
    ['phantomjs', /PhantomJS\/([0-9\.]+)(:?\s|$)/],
    ['crios', /CriOS\/([0-9\.]+)(:?\s|$)/],
    ['firefox', /Firefox\/([0-9\.]+)(?:\s|$)/],
    ['fxios', /FxiOS\/([0-9\.]+)/],
    ['opera-mini', /Opera Mini.*Version\/([0-9\.]+)/],
    ['opera', /Opera\/([0-9\.]+)(?:\s|$)/],
    ['opera', /OPR\/([0-9\.]+)(:?\s|$)/],
    ['pie', /^Microsoft Pocket Internet Explorer\/(\d+\.\d+)$/],
    ['pie', /^Mozilla\/\d\.\d+\s\(compatible;\s(?:MSP?IE|MSInternet Explorer) (\d+\.\d+);.*Windows CE.*\)$/],
    ['netfront', /^Mozilla\/\d\.\d+.*NetFront\/(\d.\d)/],
    ['ie', /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],
    ['ie', /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],
    ['ie', /MSIE\s(7\.0)/],
    ['bb10', /BB10;\sTouch.*Version\/([0-9\.]+)/],
    ['android', /Android\s([0-9\.]+)/],
    ['ios', /Version\/([0-9\._]+).*Mobile.*Safari.*/],
    ['safari', /Version\/([0-9\._]+).*Safari/],
    ['facebook', /FB[AS]V\/([0-9\.]+)/],
    ['instagram', /Instagram\s([0-9\.]+)/],
    ['ios-webview', /AppleWebKit\/([0-9\.]+).*Mobile/],
    ['ios-webview', /AppleWebKit\/([0-9\.]+).*Gecko\)$/],
    ['curl', /^curl\/([0-9\.]+)$/],
    ['searchbot', SEARCHBOX_UA_REGEX],
];
var operatingSystemRules = [
    ['iOS', /iP(hone|od|ad)/],
    ['Android OS', /Android/],
    ['BlackBerry OS', /BlackBerry|BB10/],
    ['Windows Mobile', /IEMobile/],
    ['Amazon OS', /Kindle/],
    ['Windows 3.11', /Win16/],
    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],
    ['Windows 98', /(Windows 98)|(Win98)/],
    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],
    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],
    ['Windows Server 2003', /(Windows NT 5.2)/],
    ['Windows Vista', /(Windows NT 6.0)/],
    ['Windows 7', /(Windows NT 6.1)/],
    ['Windows 8', /(Windows NT 6.2)/],
    ['Windows 8.1', /(Windows NT 6.3)/],
    ['Windows 10', /(Windows NT 10.0)/],
    ['Windows ME', /Windows ME/],
    ['Windows CE', /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],
    ['Open BSD', /OpenBSD/],
    ['Sun OS', /SunOS/],
    ['Chrome OS', /CrOS/],
    ['Linux', /(Linux)|(X11)/],
    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],
    ['QNX', /QNX/],
    ['BeOS', /BeOS/],
    ['OS/2', /OS\/2/],
];
function detect(userAgent) {
    if (!!userAgent) {
        return parseUserAgent(userAgent);
    }
    if (typeof document === 'undefined' &&
        typeof navigator !== 'undefined' &&
        navigator.product === 'ReactNative') {
        return new ReactNativeInfo();
    }
    if (typeof navigator !== 'undefined') {
        return parseUserAgent(navigator.userAgent);
    }
    return getNodeVersion();
}
function matchUserAgent(ua) {
    // opted for using reduce here rather than Array#first with a regex.test call
    // this is primarily because using the reduce we only perform the regex
    // execution once rather than once for the test and for the exec again below
    // probably something that needs to be benchmarked though
    return (ua !== '' &&
        userAgentRules.reduce(function (matched, _a) {
            var browser = _a[0], regex = _a[1];
            if (matched) {
                return matched;
            }
            var uaMatch = regex.exec(ua);
            return !!uaMatch && [browser, uaMatch];
        }, false));
}
function browserName(ua) {
    var data = matchUserAgent(ua);
    return data ? data[0] : null;
}
function parseUserAgent(ua) {
    var matchedRule = matchUserAgent(ua);
    if (!matchedRule) {
        return null;
    }
    var name = matchedRule[0], match = matchedRule[1];
    if (name === 'searchbot') {
        return new BotInfo();
    }
    // Do not use RegExp for split operation as some browser do not support it (See: http://blog.stevenlevithan.com/archives/cross-browser-split)
    var versionParts = match[1] && match[1].split('.').join('_').split('_').slice(0, 3);
    if (versionParts) {
        if (versionParts.length < REQUIRED_VERSION_PARTS) {
            versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);
        }
    }
    else {
        versionParts = [];
    }
    var version = versionParts.join('.');
    var os = detectOS(ua);
    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);
    if (searchBotMatch && searchBotMatch[1]) {
        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);
    }
    return new BrowserInfo(name, version, os);
}
function detectOS(ua) {
    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {
        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];
        var match = regex.exec(ua);
        if (match) {
            return os;
        }
    }
    return null;
}
function getNodeVersion() {
    var isNode = typeof process !== 'undefined' && process.version;
    return isNode ? new NodeInfo(process.version.slice(1)) : null;
}
function createVersionParts(count) {
    var output = [];
    for (var ii = 0; ii < count; ii++) {
        output.push('0');
    }
    return output;
}


/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/alloc.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/alloc.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   alloc: () => (/* binding */ alloc),
/* harmony export */   allocUnsafe: () => (/* binding */ allocUnsafe)
/* harmony export */ });
/* harmony import */ var _util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/as-uint8array.js */ "./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/util/as-uint8array.js");

function alloc(size = 0) {
  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {
    return (0,_util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_0__.asUint8Array)(globalThis.Buffer.alloc(size));
  }
  return new Uint8Array(size);
}
function allocUnsafe(size = 0) {
  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {
    return (0,_util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_0__.asUint8Array)(globalThis.Buffer.allocUnsafe(size));
  }
  return new Uint8Array(size);
}

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/compare.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/compare.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   compare: () => (/* binding */ compare)
/* harmony export */ });
function compare(a, b) {
  for (let i = 0; i < a.byteLength; i++) {
    if (a[i] < b[i]) {
      return -1;
    }
    if (a[i] > b[i]) {
      return 1;
    }
  }
  if (a.byteLength > b.byteLength) {
    return 1;
  }
  if (a.byteLength < b.byteLength) {
    return -1;
  }
  return 0;
}

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/concat.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/concat.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   concat: () => (/* binding */ concat)
/* harmony export */ });
/* harmony import */ var _alloc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./alloc.js */ "./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/alloc.js");
/* harmony import */ var _util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/as-uint8array.js */ "./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/util/as-uint8array.js");


function concat(arrays, length) {
  if (!length) {
    length = arrays.reduce((acc, curr) => acc + curr.length, 0);
  }
  const output = (0,_alloc_js__WEBPACK_IMPORTED_MODULE_0__.allocUnsafe)(length);
  let offset = 0;
  for (const arr of arrays) {
    output.set(arr, offset);
    offset += arr.length;
  }
  return (0,_util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_1__.asUint8Array)(output);
}

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/equals.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/equals.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   equals: () => (/* binding */ equals)
/* harmony export */ });
function equals(a, b) {
  if (a === b) {
    return true;
  }
  if (a.byteLength !== b.byteLength) {
    return false;
  }
  for (let i = 0; i < a.byteLength; i++) {
    if (a[i] !== b[i]) {
      return false;
    }
  }
  return true;
}

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/from-string.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/from-string.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   fromString: () => (/* binding */ fromString)
/* harmony export */ });
/* harmony import */ var _util_bases_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/bases.js */ "./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/util/bases.js");
/* harmony import */ var _util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/as-uint8array.js */ "./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/util/as-uint8array.js");


function fromString(string, encoding = 'utf8') {
  const base = _util_bases_js__WEBPACK_IMPORTED_MODULE_0__["default"][encoding];
  if (!base) {
    throw new Error(`Unsupported encoding "${ encoding }"`);
  }
  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return (0,_util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_1__.asUint8Array)(globalThis.Buffer.from(string, 'utf-8'));
  }
  return base.decoder.decode(`${ base.prefix }${ string }`);
}

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/index.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/index.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   compare: () => (/* reexport safe */ _compare_js__WEBPACK_IMPORTED_MODULE_0__.compare),
/* harmony export */   concat: () => (/* reexport safe */ _concat_js__WEBPACK_IMPORTED_MODULE_1__.concat),
/* harmony export */   equals: () => (/* reexport safe */ _equals_js__WEBPACK_IMPORTED_MODULE_2__.equals),
/* harmony export */   fromString: () => (/* reexport safe */ _from_string_js__WEBPACK_IMPORTED_MODULE_3__.fromString),
/* harmony export */   toString: () => (/* reexport safe */ _to_string_js__WEBPACK_IMPORTED_MODULE_4__.toString),
/* harmony export */   xor: () => (/* reexport safe */ _xor_js__WEBPACK_IMPORTED_MODULE_5__.xor)
/* harmony export */ });
/* harmony import */ var _compare_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compare.js */ "./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/compare.js");
/* harmony import */ var _concat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./concat.js */ "./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/concat.js");
/* harmony import */ var _equals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./equals.js */ "./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/equals.js");
/* harmony import */ var _from_string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./from-string.js */ "./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/from-string.js");
/* harmony import */ var _to_string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./to-string.js */ "./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/to-string.js");
/* harmony import */ var _xor_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./xor.js */ "./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/xor.js");








/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/to-string.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/to-string.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   toString: () => (/* binding */ toString)
/* harmony export */ });
/* harmony import */ var _util_bases_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/bases.js */ "./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/util/bases.js");

function toString(array, encoding = 'utf8') {
  const base = _util_bases_js__WEBPACK_IMPORTED_MODULE_0__["default"][encoding];
  if (!base) {
    throw new Error(`Unsupported encoding "${ encoding }"`);
  }
  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');
  }
  return base.encoder.encode(array).substring(1);
}

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/util/as-uint8array.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/util/as-uint8array.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   asUint8Array: () => (/* binding */ asUint8Array)
/* harmony export */ });
function asUint8Array(buf) {
  if (globalThis.Buffer != null) {
    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
  }
  return buf;
}

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/util/bases.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/util/bases.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var multiformats_basics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! multiformats/basics */ "./node_modules/multiformats/esm/src/basics.js");
/* harmony import */ var _alloc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../alloc.js */ "./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/alloc.js");


function createCodec(name, prefix, encode, decode) {
  return {
    name,
    prefix,
    encoder: {
      name,
      prefix,
      encode
    },
    decoder: { decode }
  };
}
const string = createCodec('utf8', 'u', buf => {
  const decoder = new TextDecoder('utf8');
  return 'u' + decoder.decode(buf);
}, str => {
  const encoder = new TextEncoder();
  return encoder.encode(str.substring(1));
});
const ascii = createCodec('ascii', 'a', buf => {
  let string = 'a';
  for (let i = 0; i < buf.length; i++) {
    string += String.fromCharCode(buf[i]);
  }
  return string;
}, str => {
  str = str.substring(1);
  const buf = (0,_alloc_js__WEBPACK_IMPORTED_MODULE_1__.allocUnsafe)(str.length);
  for (let i = 0; i < str.length; i++) {
    buf[i] = str.charCodeAt(i);
  }
  return buf;
});
const BASES = {
  utf8: string,
  'utf-8': string,
  hex: multiformats_basics__WEBPACK_IMPORTED_MODULE_0__.bases.base16,
  latin1: ascii,
  ascii: ascii,
  binary: ascii,
  ...multiformats_basics__WEBPACK_IMPORTED_MODULE_0__.bases
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BASES);

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/xor.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/xor.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   xor: () => (/* binding */ xor)
/* harmony export */ });
/* harmony import */ var _alloc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./alloc.js */ "./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/alloc.js");
/* harmony import */ var _util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/as-uint8array.js */ "./node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/util/as-uint8array.js");


function xor(a, b) {
  if (a.length !== b.length) {
    throw new Error('Inputs should have the same length');
  }
  const result = (0,_alloc_js__WEBPACK_IMPORTED_MODULE_0__.allocUnsafe)(a.length);
  for (let i = 0; i < a.length; i++) {
    result[i] = a[i] ^ b[i];
  }
  return (0,_util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_1__.asUint8Array)(result);
}

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/accounts/utils/publicKeyToAddress.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/accounts/utils/publicKeyToAddress.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   publicKeyToAddress: () => (/* binding */ publicKeyToAddress)
/* harmony export */ });
/* harmony import */ var _utils_address_getAddress_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/address/getAddress.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/address/getAddress.js");
/* harmony import */ var _utils_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/hash/keccak256.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/hash/keccak256.js");


/**
 * @description Converts an ECDSA public key to an address.
 *
 * @param publicKey The public key to convert.
 *
 * @returns The address.
 */
function publicKeyToAddress(publicKey) {
    const address = (0,_utils_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)(`0x${publicKey.substring(4)}`).substring(26);
    return (0,_utils_address_getAddress_js__WEBPACK_IMPORTED_MODULE_0__.checksumAddress)(`0x${address}`);
}
//# sourceMappingURL=publicKeyToAddress.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/errors/address.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/errors/address.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InvalidAddressError: () => (/* binding */ InvalidAddressError)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/errors/base.js");

class InvalidAddressError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ address }) {
        super(`Address "${address}" is invalid.`, {
            metaMessages: [
                '- Address must be a hex value of 20 bytes (40 hex characters).',
                '- Address must match its checksum counterpart.',
            ],
            name: 'InvalidAddressError',
        });
    }
}
//# sourceMappingURL=address.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/errors/base.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/errors/base.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BaseError: () => (/* binding */ BaseError),
/* harmony export */   setErrorConfig: () => (/* binding */ setErrorConfig)
/* harmony export */ });
/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/errors/version.js");

let errorConfig = {
    getDocsUrl: ({ docsBaseUrl, docsPath = '', docsSlug, }) => docsPath
        ? `${docsBaseUrl ?? 'https://viem.sh'}${docsPath}${docsSlug ? `#${docsSlug}` : ''}`
        : undefined,
    version: `viem@${_version_js__WEBPACK_IMPORTED_MODULE_0__.version}`,
};
function setErrorConfig(config) {
    errorConfig = config;
}
class BaseError extends Error {
    constructor(shortMessage, args = {}) {
        const details = (() => {
            if (args.cause instanceof BaseError)
                return args.cause.details;
            if (args.cause?.message)
                return args.cause.message;
            return args.details;
        })();
        const docsPath = (() => {
            if (args.cause instanceof BaseError)
                return args.cause.docsPath || args.docsPath;
            return args.docsPath;
        })();
        const docsUrl = errorConfig.getDocsUrl?.({ ...args, docsPath });
        const message = [
            shortMessage || 'An error occurred.',
            '',
            ...(args.metaMessages ? [...args.metaMessages, ''] : []),
            ...(docsUrl ? [`Docs: ${docsUrl}`] : []),
            ...(details ? [`Details: ${details}`] : []),
            ...(errorConfig.version ? [`Version: ${errorConfig.version}`] : []),
        ].join('\n');
        super(message, args.cause ? { cause: args.cause } : undefined);
        Object.defineProperty(this, "details", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "docsPath", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "metaMessages", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "shortMessage", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "version", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'BaseError'
        });
        this.details = details;
        this.docsPath = docsPath;
        this.metaMessages = args.metaMessages;
        this.name = args.name ?? this.name;
        this.shortMessage = shortMessage;
        this.version = _version_js__WEBPACK_IMPORTED_MODULE_0__.version;
    }
    walk(fn) {
        return walk(this, fn);
    }
}
function walk(err, fn) {
    if (fn?.(err))
        return err;
    if (err &&
        typeof err === 'object' &&
        'cause' in err &&
        err.cause !== undefined)
        return walk(err.cause, fn);
    return fn ? null : err;
}
//# sourceMappingURL=base.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/errors/data.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/errors/data.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InvalidBytesLengthError: () => (/* binding */ InvalidBytesLengthError),
/* harmony export */   SizeExceedsPaddingSizeError: () => (/* binding */ SizeExceedsPaddingSizeError),
/* harmony export */   SliceOffsetOutOfBoundsError: () => (/* binding */ SliceOffsetOutOfBoundsError)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/errors/base.js");

class SliceOffsetOutOfBoundsError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ offset, position, size, }) {
        super(`Slice ${position === 'start' ? 'starting' : 'ending'} at offset "${offset}" is out-of-bounds (size: ${size}).`, { name: 'SliceOffsetOutOfBoundsError' });
    }
}
class SizeExceedsPaddingSizeError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ size, targetSize, type, }) {
        super(`${type.charAt(0).toUpperCase()}${type
            .slice(1)
            .toLowerCase()} size (${size}) exceeds padding size (${targetSize}).`, { name: 'SizeExceedsPaddingSizeError' });
    }
}
class InvalidBytesLengthError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ size, targetSize, type, }) {
        super(`${type.charAt(0).toUpperCase()}${type
            .slice(1)
            .toLowerCase()} is expected to be ${targetSize} ${type} long, but is ${size} ${type} long.`, { name: 'InvalidBytesLengthError' });
    }
}
//# sourceMappingURL=data.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/errors/encoding.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/errors/encoding.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IntegerOutOfRangeError: () => (/* binding */ IntegerOutOfRangeError),
/* harmony export */   InvalidBytesBooleanError: () => (/* binding */ InvalidBytesBooleanError),
/* harmony export */   InvalidHexBooleanError: () => (/* binding */ InvalidHexBooleanError),
/* harmony export */   InvalidHexValueError: () => (/* binding */ InvalidHexValueError),
/* harmony export */   SizeOverflowError: () => (/* binding */ SizeOverflowError)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/errors/base.js");

class IntegerOutOfRangeError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ max, min, signed, size, value, }) {
        super(`Number "${value}" is not in safe ${size ? `${size * 8}-bit ${signed ? 'signed' : 'unsigned'} ` : ''}integer range ${max ? `(${min} to ${max})` : `(above ${min})`}`, { name: 'IntegerOutOfRangeError' });
    }
}
class InvalidBytesBooleanError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor(bytes) {
        super(`Bytes value "${bytes}" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`, {
            name: 'InvalidBytesBooleanError',
        });
    }
}
class InvalidHexBooleanError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor(hex) {
        super(`Hex value "${hex}" is not a valid boolean. The hex value must be "0x0" (false) or "0x1" (true).`, { name: 'InvalidHexBooleanError' });
    }
}
class InvalidHexValueError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor(value) {
        super(`Hex value "${value}" is an odd length (${value.length}). It must be an even length.`, { name: 'InvalidHexValueError' });
    }
}
class SizeOverflowError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {
    constructor({ givenSize, maxSize }) {
        super(`Size cannot exceed ${maxSize} bytes. Given size: ${givenSize} bytes.`, { name: 'SizeOverflowError' });
    }
}
//# sourceMappingURL=encoding.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/errors/version.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/errors/version.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   version: () => (/* binding */ version)
/* harmony export */ });
const version = '2.31.0';
//# sourceMappingURL=version.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/address/getAddress.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/address/getAddress.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   checksumAddress: () => (/* binding */ checksumAddress),
/* harmony export */   getAddress: () => (/* binding */ getAddress)
/* harmony export */ });
/* harmony import */ var _errors_address_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/address.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/errors/address.js");
/* harmony import */ var _encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../encoding/toBytes.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/encoding/toBytes.js");
/* harmony import */ var _hash_keccak256_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hash/keccak256.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/hash/keccak256.js");
/* harmony import */ var _lru_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lru.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/lru.js");
/* harmony import */ var _isAddress_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./isAddress.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/address/isAddress.js");





const checksumAddressCache = /*#__PURE__*/ new _lru_js__WEBPACK_IMPORTED_MODULE_3__.LruMap(8192);
function checksumAddress(address_, 
/**
 * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the
 * wider Ethereum ecosystem, meaning it will break when validated against an application/tool
 * that relies on EIP-55 checksum encoding (checksum without chainId).
 *
 * It is highly recommended to not use this feature unless you
 * know what you are doing.
 *
 * See more: https://github.com/ethereum/EIPs/issues/1121
 */
chainId) {
    if (checksumAddressCache.has(`${address_}.${chainId}`))
        return checksumAddressCache.get(`${address_}.${chainId}`);
    const hexAddress = chainId
        ? `${chainId}${address_.toLowerCase()}`
        : address_.substring(2).toLowerCase();
    const hash = (0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_2__.keccak256)((0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_1__.stringToBytes)(hexAddress), 'bytes');
    const address = (chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress).split('');
    for (let i = 0; i < 40; i += 2) {
        if (hash[i >> 1] >> 4 >= 8 && address[i]) {
            address[i] = address[i].toUpperCase();
        }
        if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {
            address[i + 1] = address[i + 1].toUpperCase();
        }
    }
    const result = `0x${address.join('')}`;
    checksumAddressCache.set(`${address_}.${chainId}`, result);
    return result;
}
function getAddress(address, 
/**
 * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the
 * wider Ethereum ecosystem, meaning it will break when validated against an application/tool
 * that relies on EIP-55 checksum encoding (checksum without chainId).
 *
 * It is highly recommended to not use this feature unless you
 * know what you are doing.
 *
 * See more: https://github.com/ethereum/EIPs/issues/1121
 */
chainId) {
    if (!(0,_isAddress_js__WEBPACK_IMPORTED_MODULE_4__.isAddress)(address, { strict: false }))
        throw new _errors_address_js__WEBPACK_IMPORTED_MODULE_0__.InvalidAddressError({ address });
    return checksumAddress(address, chainId);
}
//# sourceMappingURL=getAddress.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/address/isAddress.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/address/isAddress.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isAddress: () => (/* binding */ isAddress),
/* harmony export */   isAddressCache: () => (/* binding */ isAddressCache)
/* harmony export */ });
/* harmony import */ var _lru_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lru.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/lru.js");
/* harmony import */ var _getAddress_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getAddress.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/address/getAddress.js");


const addressRegex = /^0x[a-fA-F0-9]{40}$/;
/** @internal */
const isAddressCache = /*#__PURE__*/ new _lru_js__WEBPACK_IMPORTED_MODULE_0__.LruMap(8192);
function isAddress(address, options) {
    const { strict = true } = options ?? {};
    const cacheKey = `${address}.${strict}`;
    if (isAddressCache.has(cacheKey))
        return isAddressCache.get(cacheKey);
    const result = (() => {
        if (!addressRegex.test(address))
            return false;
        if (address.toLowerCase() === address)
            return true;
        if (strict)
            return (0,_getAddress_js__WEBPACK_IMPORTED_MODULE_1__.checksumAddress)(address) === address;
        return true;
    })();
    isAddressCache.set(cacheKey, result);
    return result;
}
//# sourceMappingURL=isAddress.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/data/isHex.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/data/isHex.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isHex: () => (/* binding */ isHex)
/* harmony export */ });
function isHex(value, { strict = true } = {}) {
    if (!value)
        return false;
    if (typeof value !== 'string')
        return false;
    return strict ? /^0x[0-9a-fA-F]*$/.test(value) : value.startsWith('0x');
}
//# sourceMappingURL=isHex.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/data/pad.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/data/pad.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   pad: () => (/* binding */ pad),
/* harmony export */   padBytes: () => (/* binding */ padBytes),
/* harmony export */   padHex: () => (/* binding */ padHex)
/* harmony export */ });
/* harmony import */ var _errors_data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/data.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/errors/data.js");

function pad(hexOrBytes, { dir, size = 32 } = {}) {
    if (typeof hexOrBytes === 'string')
        return padHex(hexOrBytes, { dir, size });
    return padBytes(hexOrBytes, { dir, size });
}
function padHex(hex_, { dir, size = 32 } = {}) {
    if (size === null)
        return hex_;
    const hex = hex_.replace('0x', '');
    if (hex.length > size * 2)
        throw new _errors_data_js__WEBPACK_IMPORTED_MODULE_0__.SizeExceedsPaddingSizeError({
            size: Math.ceil(hex.length / 2),
            targetSize: size,
            type: 'hex',
        });
    return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](size * 2, '0')}`;
}
function padBytes(bytes, { dir, size = 32 } = {}) {
    if (size === null)
        return bytes;
    if (bytes.length > size)
        throw new _errors_data_js__WEBPACK_IMPORTED_MODULE_0__.SizeExceedsPaddingSizeError({
            size: bytes.length,
            targetSize: size,
            type: 'bytes',
        });
    const paddedBytes = new Uint8Array(size);
    for (let i = 0; i < size; i++) {
        const padEnd = dir === 'right';
        paddedBytes[padEnd ? i : size - i - 1] =
            bytes[padEnd ? i : bytes.length - i - 1];
    }
    return paddedBytes;
}
//# sourceMappingURL=pad.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/data/size.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/data/size.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   size: () => (/* binding */ size)
/* harmony export */ });
/* harmony import */ var _isHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isHex.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/data/isHex.js");

/**
 * @description Retrieves the size of the value (in bytes).
 *
 * @param value The value (hex or byte array) to retrieve the size of.
 * @returns The size of the value (in bytes).
 */
function size(value) {
    if ((0,_isHex_js__WEBPACK_IMPORTED_MODULE_0__.isHex)(value, { strict: false }))
        return Math.ceil((value.length - 2) / 2);
    return value.length;
}
//# sourceMappingURL=size.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/data/trim.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/data/trim.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   trim: () => (/* binding */ trim)
/* harmony export */ });
function trim(hexOrBytes, { dir = 'left' } = {}) {
    let data = typeof hexOrBytes === 'string' ? hexOrBytes.replace('0x', '') : hexOrBytes;
    let sliceLength = 0;
    for (let i = 0; i < data.length - 1; i++) {
        if (data[dir === 'left' ? i : data.length - i - 1].toString() === '0')
            sliceLength++;
        else
            break;
    }
    data =
        dir === 'left'
            ? data.slice(sliceLength)
            : data.slice(0, data.length - sliceLength);
    if (typeof hexOrBytes === 'string') {
        if (data.length === 1 && dir === 'right')
            data = `${data}0`;
        return `0x${data.length % 2 === 1 ? `0${data}` : data}`;
    }
    return data;
}
//# sourceMappingURL=trim.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/encoding/fromHex.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/encoding/fromHex.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   assertSize: () => (/* binding */ assertSize),
/* harmony export */   fromHex: () => (/* binding */ fromHex),
/* harmony export */   hexToBigInt: () => (/* binding */ hexToBigInt),
/* harmony export */   hexToBool: () => (/* binding */ hexToBool),
/* harmony export */   hexToNumber: () => (/* binding */ hexToNumber),
/* harmony export */   hexToString: () => (/* binding */ hexToString)
/* harmony export */ });
/* harmony import */ var _errors_encoding_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/encoding.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/errors/encoding.js");
/* harmony import */ var _data_size_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/size.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/data/size.js");
/* harmony import */ var _data_trim_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/trim.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/data/trim.js");
/* harmony import */ var _toBytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./toBytes.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/encoding/toBytes.js");




function assertSize(hexOrBytes, { size }) {
    if ((0,_data_size_js__WEBPACK_IMPORTED_MODULE_1__.size)(hexOrBytes) > size)
        throw new _errors_encoding_js__WEBPACK_IMPORTED_MODULE_0__.SizeOverflowError({
            givenSize: (0,_data_size_js__WEBPACK_IMPORTED_MODULE_1__.size)(hexOrBytes),
            maxSize: size,
        });
}
/**
 * Decodes a hex string into a string, number, bigint, boolean, or byte array.
 *
 * - Docs: https://viem.sh/docs/utilities/fromHex
 * - Example: https://viem.sh/docs/utilities/fromHex#usage
 *
 * @param hex Hex string to decode.
 * @param toOrOpts Type to convert to or options.
 * @returns Decoded value.
 *
 * @example
 * import { fromHex } from 'viem'
 * const data = fromHex('0x1a4', 'number')
 * // 420
 *
 * @example
 * import { fromHex } from 'viem'
 * const data = fromHex('0x48656c6c6f20576f726c6421', 'string')
 * // 'Hello world'
 *
 * @example
 * import { fromHex } from 'viem'
 * const data = fromHex('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {
 *   size: 32,
 *   to: 'string'
 * })
 * // 'Hello world'
 */
function fromHex(hex, toOrOpts) {
    const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts;
    const to = opts.to;
    if (to === 'number')
        return hexToNumber(hex, opts);
    if (to === 'bigint')
        return hexToBigInt(hex, opts);
    if (to === 'string')
        return hexToString(hex, opts);
    if (to === 'boolean')
        return hexToBool(hex, opts);
    return (0,_toBytes_js__WEBPACK_IMPORTED_MODULE_3__.hexToBytes)(hex, opts);
}
/**
 * Decodes a hex value into a bigint.
 *
 * - Docs: https://viem.sh/docs/utilities/fromHex#hextobigint
 *
 * @param hex Hex value to decode.
 * @param opts Options.
 * @returns BigInt value.
 *
 * @example
 * import { hexToBigInt } from 'viem'
 * const data = hexToBigInt('0x1a4', { signed: true })
 * // 420n
 *
 * @example
 * import { hexToBigInt } from 'viem'
 * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })
 * // 420n
 */
function hexToBigInt(hex, opts = {}) {
    const { signed } = opts;
    if (opts.size)
        assertSize(hex, { size: opts.size });
    const value = BigInt(hex);
    if (!signed)
        return value;
    const size = (hex.length - 2) / 2;
    const max = (1n << (BigInt(size) * 8n - 1n)) - 1n;
    if (value <= max)
        return value;
    return value - BigInt(`0x${'f'.padStart(size * 2, 'f')}`) - 1n;
}
/**
 * Decodes a hex value into a boolean.
 *
 * - Docs: https://viem.sh/docs/utilities/fromHex#hextobool
 *
 * @param hex Hex value to decode.
 * @param opts Options.
 * @returns Boolean value.
 *
 * @example
 * import { hexToBool } from 'viem'
 * const data = hexToBool('0x01')
 * // true
 *
 * @example
 * import { hexToBool } from 'viem'
 * const data = hexToBool('0x0000000000000000000000000000000000000000000000000000000000000001', { size: 32 })
 * // true
 */
function hexToBool(hex_, opts = {}) {
    let hex = hex_;
    if (opts.size) {
        assertSize(hex, { size: opts.size });
        hex = (0,_data_trim_js__WEBPACK_IMPORTED_MODULE_2__.trim)(hex);
    }
    if ((0,_data_trim_js__WEBPACK_IMPORTED_MODULE_2__.trim)(hex) === '0x00')
        return false;
    if ((0,_data_trim_js__WEBPACK_IMPORTED_MODULE_2__.trim)(hex) === '0x01')
        return true;
    throw new _errors_encoding_js__WEBPACK_IMPORTED_MODULE_0__.InvalidHexBooleanError(hex);
}
/**
 * Decodes a hex string into a number.
 *
 * - Docs: https://viem.sh/docs/utilities/fromHex#hextonumber
 *
 * @param hex Hex value to decode.
 * @param opts Options.
 * @returns Number value.
 *
 * @example
 * import { hexToNumber } from 'viem'
 * const data = hexToNumber('0x1a4')
 * // 420
 *
 * @example
 * import { hexToNumber } from 'viem'
 * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })
 * // 420
 */
function hexToNumber(hex, opts = {}) {
    return Number(hexToBigInt(hex, opts));
}
/**
 * Decodes a hex value into a UTF-8 string.
 *
 * - Docs: https://viem.sh/docs/utilities/fromHex#hextostring
 *
 * @param hex Hex value to decode.
 * @param opts Options.
 * @returns String value.
 *
 * @example
 * import { hexToString } from 'viem'
 * const data = hexToString('0x48656c6c6f20576f726c6421')
 * // 'Hello world!'
 *
 * @example
 * import { hexToString } from 'viem'
 * const data = hexToString('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {
 *  size: 32,
 * })
 * // 'Hello world'
 */
function hexToString(hex, opts = {}) {
    let bytes = (0,_toBytes_js__WEBPACK_IMPORTED_MODULE_3__.hexToBytes)(hex);
    if (opts.size) {
        assertSize(bytes, { size: opts.size });
        bytes = (0,_data_trim_js__WEBPACK_IMPORTED_MODULE_2__.trim)(bytes, { dir: 'right' });
    }
    return new TextDecoder().decode(bytes);
}
//# sourceMappingURL=fromHex.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/encoding/toBytes.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/encoding/toBytes.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   boolToBytes: () => (/* binding */ boolToBytes),
/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),
/* harmony export */   numberToBytes: () => (/* binding */ numberToBytes),
/* harmony export */   stringToBytes: () => (/* binding */ stringToBytes),
/* harmony export */   toBytes: () => (/* binding */ toBytes)
/* harmony export */ });
/* harmony import */ var _errors_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/base.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/errors/base.js");
/* harmony import */ var _data_isHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/isHex.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/data/isHex.js");
/* harmony import */ var _data_pad_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/pad.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/data/pad.js");
/* harmony import */ var _fromHex_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fromHex.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/encoding/fromHex.js");
/* harmony import */ var _toHex_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./toHex.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/encoding/toHex.js");





const encoder = /*#__PURE__*/ new TextEncoder();
/**
 * Encodes a UTF-8 string, hex value, bigint, number or boolean to a byte array.
 *
 * - Docs: https://viem.sh/docs/utilities/toBytes
 * - Example: https://viem.sh/docs/utilities/toBytes#usage
 *
 * @param value Value to encode.
 * @param opts Options.
 * @returns Byte array value.
 *
 * @example
 * import { toBytes } from 'viem'
 * const data = toBytes('Hello world')
 * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])
 *
 * @example
 * import { toBytes } from 'viem'
 * const data = toBytes(420)
 * // Uint8Array([1, 164])
 *
 * @example
 * import { toBytes } from 'viem'
 * const data = toBytes(420, { size: 4 })
 * // Uint8Array([0, 0, 1, 164])
 */
function toBytes(value, opts = {}) {
    if (typeof value === 'number' || typeof value === 'bigint')
        return numberToBytes(value, opts);
    if (typeof value === 'boolean')
        return boolToBytes(value, opts);
    if ((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_1__.isHex)(value))
        return hexToBytes(value, opts);
    return stringToBytes(value, opts);
}
/**
 * Encodes a boolean into a byte array.
 *
 * - Docs: https://viem.sh/docs/utilities/toBytes#booltobytes
 *
 * @param value Boolean value to encode.
 * @param opts Options.
 * @returns Byte array value.
 *
 * @example
 * import { boolToBytes } from 'viem'
 * const data = boolToBytes(true)
 * // Uint8Array([1])
 *
 * @example
 * import { boolToBytes } from 'viem'
 * const data = boolToBytes(true, { size: 32 })
 * // Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])
 */
function boolToBytes(value, opts = {}) {
    const bytes = new Uint8Array(1);
    bytes[0] = Number(value);
    if (typeof opts.size === 'number') {
        (0,_fromHex_js__WEBPACK_IMPORTED_MODULE_3__.assertSize)(bytes, { size: opts.size });
        return (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_2__.pad)(bytes, { size: opts.size });
    }
    return bytes;
}
// We use very optimized technique to convert hex string to byte array
const charCodeMap = {
    zero: 48,
    nine: 57,
    A: 65,
    F: 70,
    a: 97,
    f: 102,
};
function charCodeToBase16(char) {
    if (char >= charCodeMap.zero && char <= charCodeMap.nine)
        return char - charCodeMap.zero;
    if (char >= charCodeMap.A && char <= charCodeMap.F)
        return char - (charCodeMap.A - 10);
    if (char >= charCodeMap.a && char <= charCodeMap.f)
        return char - (charCodeMap.a - 10);
    return undefined;
}
/**
 * Encodes a hex string into a byte array.
 *
 * - Docs: https://viem.sh/docs/utilities/toBytes#hextobytes
 *
 * @param hex Hex string to encode.
 * @param opts Options.
 * @returns Byte array value.
 *
 * @example
 * import { hexToBytes } from 'viem'
 * const data = hexToBytes('0x48656c6c6f20776f726c6421')
 * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])
 *
 * @example
 * import { hexToBytes } from 'viem'
 * const data = hexToBytes('0x48656c6c6f20776f726c6421', { size: 32 })
 * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
 */
function hexToBytes(hex_, opts = {}) {
    let hex = hex_;
    if (opts.size) {
        (0,_fromHex_js__WEBPACK_IMPORTED_MODULE_3__.assertSize)(hex, { size: opts.size });
        hex = (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_2__.pad)(hex, { dir: 'right', size: opts.size });
    }
    let hexString = hex.slice(2);
    if (hexString.length % 2)
        hexString = `0${hexString}`;
    const length = hexString.length / 2;
    const bytes = new Uint8Array(length);
    for (let index = 0, j = 0; index < length; index++) {
        const nibbleLeft = charCodeToBase16(hexString.charCodeAt(j++));
        const nibbleRight = charCodeToBase16(hexString.charCodeAt(j++));
        if (nibbleLeft === undefined || nibbleRight === undefined) {
            throw new _errors_base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError(`Invalid byte sequence ("${hexString[j - 2]}${hexString[j - 1]}" in "${hexString}").`);
        }
        bytes[index] = nibbleLeft * 16 + nibbleRight;
    }
    return bytes;
}
/**
 * Encodes a number into a byte array.
 *
 * - Docs: https://viem.sh/docs/utilities/toBytes#numbertobytes
 *
 * @param value Number to encode.
 * @param opts Options.
 * @returns Byte array value.
 *
 * @example
 * import { numberToBytes } from 'viem'
 * const data = numberToBytes(420)
 * // Uint8Array([1, 164])
 *
 * @example
 * import { numberToBytes } from 'viem'
 * const data = numberToBytes(420, { size: 4 })
 * // Uint8Array([0, 0, 1, 164])
 */
function numberToBytes(value, opts) {
    const hex = (0,_toHex_js__WEBPACK_IMPORTED_MODULE_4__.numberToHex)(value, opts);
    return hexToBytes(hex);
}
/**
 * Encodes a UTF-8 string into a byte array.
 *
 * - Docs: https://viem.sh/docs/utilities/toBytes#stringtobytes
 *
 * @param value String to encode.
 * @param opts Options.
 * @returns Byte array value.
 *
 * @example
 * import { stringToBytes } from 'viem'
 * const data = stringToBytes('Hello world!')
 * // Uint8Array([72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 33])
 *
 * @example
 * import { stringToBytes } from 'viem'
 * const data = stringToBytes('Hello world!', { size: 32 })
 * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
 */
function stringToBytes(value, opts = {}) {
    const bytes = encoder.encode(value);
    if (typeof opts.size === 'number') {
        (0,_fromHex_js__WEBPACK_IMPORTED_MODULE_3__.assertSize)(bytes, { size: opts.size });
        return (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_2__.pad)(bytes, { dir: 'right', size: opts.size });
    }
    return bytes;
}
//# sourceMappingURL=toBytes.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/encoding/toHex.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/encoding/toHex.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   boolToHex: () => (/* binding */ boolToHex),
/* harmony export */   bytesToHex: () => (/* binding */ bytesToHex),
/* harmony export */   numberToHex: () => (/* binding */ numberToHex),
/* harmony export */   stringToHex: () => (/* binding */ stringToHex),
/* harmony export */   toHex: () => (/* binding */ toHex)
/* harmony export */ });
/* harmony import */ var _errors_encoding_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/encoding.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/errors/encoding.js");
/* harmony import */ var _data_pad_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/pad.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/data/pad.js");
/* harmony import */ var _fromHex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fromHex.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/encoding/fromHex.js");



const hexes = /*#__PURE__*/ Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'));
/**
 * Encodes a string, number, bigint, or ByteArray into a hex string
 *
 * - Docs: https://viem.sh/docs/utilities/toHex
 * - Example: https://viem.sh/docs/utilities/toHex#usage
 *
 * @param value Value to encode.
 * @param opts Options.
 * @returns Hex value.
 *
 * @example
 * import { toHex } from 'viem'
 * const data = toHex('Hello world')
 * // '0x48656c6c6f20776f726c6421'
 *
 * @example
 * import { toHex } from 'viem'
 * const data = toHex(420)
 * // '0x1a4'
 *
 * @example
 * import { toHex } from 'viem'
 * const data = toHex('Hello world', { size: 32 })
 * // '0x48656c6c6f20776f726c64210000000000000000000000000000000000000000'
 */
function toHex(value, opts = {}) {
    if (typeof value === 'number' || typeof value === 'bigint')
        return numberToHex(value, opts);
    if (typeof value === 'string') {
        return stringToHex(value, opts);
    }
    if (typeof value === 'boolean')
        return boolToHex(value, opts);
    return bytesToHex(value, opts);
}
/**
 * Encodes a boolean into a hex string
 *
 * - Docs: https://viem.sh/docs/utilities/toHex#booltohex
 *
 * @param value Value to encode.
 * @param opts Options.
 * @returns Hex value.
 *
 * @example
 * import { boolToHex } from 'viem'
 * const data = boolToHex(true)
 * // '0x1'
 *
 * @example
 * import { boolToHex } from 'viem'
 * const data = boolToHex(false)
 * // '0x0'
 *
 * @example
 * import { boolToHex } from 'viem'
 * const data = boolToHex(true, { size: 32 })
 * // '0x0000000000000000000000000000000000000000000000000000000000000001'
 */
function boolToHex(value, opts = {}) {
    const hex = `0x${Number(value)}`;
    if (typeof opts.size === 'number') {
        (0,_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.assertSize)(hex, { size: opts.size });
        return (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_1__.pad)(hex, { size: opts.size });
    }
    return hex;
}
/**
 * Encodes a bytes array into a hex string
 *
 * - Docs: https://viem.sh/docs/utilities/toHex#bytestohex
 *
 * @param value Value to encode.
 * @param opts Options.
 * @returns Hex value.
 *
 * @example
 * import { bytesToHex } from 'viem'
 * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])
 * // '0x48656c6c6f20576f726c6421'
 *
 * @example
 * import { bytesToHex } from 'viem'
 * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]), { size: 32 })
 * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'
 */
function bytesToHex(value, opts = {}) {
    let string = '';
    for (let i = 0; i < value.length; i++) {
        string += hexes[value[i]];
    }
    const hex = `0x${string}`;
    if (typeof opts.size === 'number') {
        (0,_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.assertSize)(hex, { size: opts.size });
        return (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_1__.pad)(hex, { dir: 'right', size: opts.size });
    }
    return hex;
}
/**
 * Encodes a number or bigint into a hex string
 *
 * - Docs: https://viem.sh/docs/utilities/toHex#numbertohex
 *
 * @param value Value to encode.
 * @param opts Options.
 * @returns Hex value.
 *
 * @example
 * import { numberToHex } from 'viem'
 * const data = numberToHex(420)
 * // '0x1a4'
 *
 * @example
 * import { numberToHex } from 'viem'
 * const data = numberToHex(420, { size: 32 })
 * // '0x00000000000000000000000000000000000000000000000000000000000001a4'
 */
function numberToHex(value_, opts = {}) {
    const { signed, size } = opts;
    const value = BigInt(value_);
    let maxValue;
    if (size) {
        if (signed)
            maxValue = (1n << (BigInt(size) * 8n - 1n)) - 1n;
        else
            maxValue = 2n ** (BigInt(size) * 8n) - 1n;
    }
    else if (typeof value_ === 'number') {
        maxValue = BigInt(Number.MAX_SAFE_INTEGER);
    }
    const minValue = typeof maxValue === 'bigint' && signed ? -maxValue - 1n : 0;
    if ((maxValue && value > maxValue) || value < minValue) {
        const suffix = typeof value_ === 'bigint' ? 'n' : '';
        throw new _errors_encoding_js__WEBPACK_IMPORTED_MODULE_0__.IntegerOutOfRangeError({
            max: maxValue ? `${maxValue}${suffix}` : undefined,
            min: `${minValue}${suffix}`,
            signed,
            size,
            value: `${value_}${suffix}`,
        });
    }
    const hex = `0x${(signed && value < 0 ? (1n << BigInt(size * 8)) + BigInt(value) : value).toString(16)}`;
    if (size)
        return (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_1__.pad)(hex, { size });
    return hex;
}
const encoder = /*#__PURE__*/ new TextEncoder();
/**
 * Encodes a UTF-8 string into a hex string
 *
 * - Docs: https://viem.sh/docs/utilities/toHex#stringtohex
 *
 * @param value Value to encode.
 * @param opts Options.
 * @returns Hex value.
 *
 * @example
 * import { stringToHex } from 'viem'
 * const data = stringToHex('Hello World!')
 * // '0x48656c6c6f20576f726c6421'
 *
 * @example
 * import { stringToHex } from 'viem'
 * const data = stringToHex('Hello World!', { size: 32 })
 * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'
 */
function stringToHex(value_, opts = {}) {
    const value = encoder.encode(value_);
    return bytesToHex(value, opts);
}
//# sourceMappingURL=toHex.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/hash/keccak256.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/hash/keccak256.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   keccak256: () => (/* binding */ keccak256)
/* harmony export */ });
/* harmony import */ var _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/sha3 */ "./node_modules/@walletconnect/universal-provider/node_modules/@noble/hashes/esm/sha3.js");
/* harmony import */ var _data_isHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/isHex.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/data/isHex.js");
/* harmony import */ var _encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../encoding/toBytes.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/encoding/toBytes.js");
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../encoding/toHex.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/encoding/toHex.js");




function keccak256(value, to_) {
    const to = to_ || 'hex';
    const bytes = (0,_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__.keccak_256)((0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_1__.isHex)(value, { strict: false }) ? (0,_encoding_toBytes_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(value) : value);
    if (to === 'bytes')
        return bytes;
    return (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_3__.toHex)(bytes);
}
//# sourceMappingURL=keccak256.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/lru.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/lru.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LruMap: () => (/* binding */ LruMap)
/* harmony export */ });
/**
 * Map with a LRU (Least recently used) policy.
 *
 * @link https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU
 */
class LruMap extends Map {
    constructor(size) {
        super();
        Object.defineProperty(this, "maxSize", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.maxSize = size;
    }
    get(key) {
        const value = super.get(key);
        if (super.has(key) && value !== undefined) {
            this.delete(key);
            super.set(key, value);
        }
        return value;
    }
    set(key, value) {
        super.set(key, value);
        if (this.maxSize && this.size > this.maxSize) {
            const firstKey = this.keys().next().value;
            if (firstKey)
                this.delete(firstKey);
        }
        return this;
    }
}
//# sourceMappingURL=lru.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/signature/recoverAddress.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/signature/recoverAddress.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   recoverAddress: () => (/* binding */ recoverAddress)
/* harmony export */ });
/* harmony import */ var _accounts_utils_publicKeyToAddress_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../accounts/utils/publicKeyToAddress.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/accounts/utils/publicKeyToAddress.js");
/* harmony import */ var _recoverPublicKey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./recoverPublicKey.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/signature/recoverPublicKey.js");


async function recoverAddress({ hash, signature, }) {
    return (0,_accounts_utils_publicKeyToAddress_js__WEBPACK_IMPORTED_MODULE_0__.publicKeyToAddress)(await (0,_recoverPublicKey_js__WEBPACK_IMPORTED_MODULE_1__.recoverPublicKey)({ hash, signature }));
}
//# sourceMappingURL=recoverAddress.js.map

/***/ }),

/***/ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/signature/recoverPublicKey.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/signature/recoverPublicKey.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   recoverPublicKey: () => (/* binding */ recoverPublicKey)
/* harmony export */ });
/* harmony import */ var _data_isHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/isHex.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/data/isHex.js");
/* harmony import */ var _data_size_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/size.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/data/size.js");
/* harmony import */ var _encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../encoding/fromHex.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/encoding/fromHex.js");
/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../encoding/toHex.js */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/_esm/utils/encoding/toHex.js");




async function recoverPublicKey({ hash, signature, }) {
    const hashHex = (0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_0__.isHex)(hash) ? hash : (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_3__.toHex)(hash);
    const { secp256k1 } = await __webpack_require__.e(/*! import() */ "node_modules_walletconnect_universal-provider_node_modules_viem_node_modules_noble_curves_esm-94c37a").then(__webpack_require__.bind(__webpack_require__, /*! @noble/curves/secp256k1 */ "./node_modules/@walletconnect/universal-provider/node_modules/viem/node_modules/@noble/curves/esm/secp256k1.js"));
    const signature_ = (() => {
        // typeof signature: `Signature`
        if (typeof signature === 'object' && 'r' in signature && 's' in signature) {
            const { r, s, v, yParity } = signature;
            const yParityOrV = Number(yParity ?? v);
            const recoveryBit = toRecoveryBit(yParityOrV);
            return new secp256k1.Signature((0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.hexToBigInt)(r), (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.hexToBigInt)(s)).addRecoveryBit(recoveryBit);
        }
        // typeof signature: `Hex | ByteArray`
        const signatureHex = (0,_data_isHex_js__WEBPACK_IMPORTED_MODULE_0__.isHex)(signature) ? signature : (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_3__.toHex)(signature);
        if ((0,_data_size_js__WEBPACK_IMPORTED_MODULE_1__.size)(signatureHex) !== 65)
            throw new Error('invalid signature length');
        const yParityOrV = (0,_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.hexToNumber)(`0x${signatureHex.slice(130)}`);
        const recoveryBit = toRecoveryBit(yParityOrV);
        return secp256k1.Signature.fromCompact(signatureHex.substring(2, 130)).addRecoveryBit(recoveryBit);
    })();
    const publicKey = signature_
        .recoverPublicKey(hashHex.substring(2))
        .toHex(false);
    return `0x${publicKey}`;
}
function toRecoveryBit(yParityOrV) {
    if (yParityOrV === 0 || yParityOrV === 1)
        return yParityOrV;
    if (yParityOrV === 27)
        return 0;
    if (yParityOrV === 28)
        return 1;
    throw new Error('Invalid yParityOrV value');
}
//# sourceMappingURL=recoverPublicKey.js.map

/***/ }),

/***/ "./node_modules/abitype/dist/chunk-NHABU752.mjs":
/*!******************************************************!*\
  !*** ./node_modules/abitype/dist/chunk-NHABU752.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __publicField: () => (/* binding */ __publicField)
/* harmony export */ });
var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};




/***/ }),

/***/ "./node_modules/abitype/dist/chunk-WP7KDV47.mjs":
/*!******************************************************!*\
  !*** ./node_modules/abitype/dist/chunk-WP7KDV47.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   bytesRegex: () => (/* binding */ bytesRegex),
/* harmony export */   execTyped: () => (/* binding */ execTyped),
/* harmony export */   integerRegex: () => (/* binding */ integerRegex),
/* harmony export */   isTupleRegex: () => (/* binding */ isTupleRegex)
/* harmony export */ });
// src/regex.ts
function execTyped(regex, string) {
  const match = regex.exec(string);
  return match?.groups;
}
var bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/;
var integerRegex = /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;
var isTupleRegex = /^\(.+?\).*?$/;




/***/ }),

/***/ "./node_modules/abitype/dist/index.mjs":
/*!*********************************************!*\
  !*** ./node_modules/abitype/dist/index.mjs ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BaseError: () => (/* binding */ BaseError),
/* harmony export */   narrow: () => (/* binding */ narrow),
/* harmony export */   parseAbi: () => (/* binding */ parseAbi),
/* harmony export */   parseAbiItem: () => (/* binding */ parseAbiItem),
/* harmony export */   parseAbiParameter: () => (/* binding */ parseAbiParameter2),
/* harmony export */   parseAbiParameters: () => (/* binding */ parseAbiParameters)
/* harmony export */ });
/* harmony import */ var _chunk_WP7KDV47_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-WP7KDV47.mjs */ "./node_modules/abitype/dist/chunk-WP7KDV47.mjs");
/* harmony import */ var _chunk_NHABU752_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-NHABU752.mjs */ "./node_modules/abitype/dist/chunk-NHABU752.mjs");



// package.json
var name = "abitype";
var version = "0.7.1";

// src/errors.ts
var BaseError = class extends Error {
  constructor(shortMessage, args = {}) {
    const details = args.cause instanceof BaseError ? args.cause.details : args.cause?.message ? args.cause.message : args.details;
    const docsPath = args.cause instanceof BaseError ? args.cause.docsPath || args.docsPath : args.docsPath;
    const message = [
      shortMessage || "An error occurred.",
      "",
      ...args.metaMessages ? [...args.metaMessages, ""] : [],
      ...docsPath ? [`Docs: https://abitype.dev${docsPath}`] : [],
      ...details ? [`Details: ${details}`] : [],
      `Version: ${name}@${version}`
    ].join("\n");
    super(message);
    (0,_chunk_NHABU752_mjs__WEBPACK_IMPORTED_MODULE_1__.__publicField)(this, "details");
    (0,_chunk_NHABU752_mjs__WEBPACK_IMPORTED_MODULE_1__.__publicField)(this, "docsPath");
    (0,_chunk_NHABU752_mjs__WEBPACK_IMPORTED_MODULE_1__.__publicField)(this, "metaMessages");
    (0,_chunk_NHABU752_mjs__WEBPACK_IMPORTED_MODULE_1__.__publicField)(this, "shortMessage");
    (0,_chunk_NHABU752_mjs__WEBPACK_IMPORTED_MODULE_1__.__publicField)(this, "name", "AbiTypeError");
    if (args.cause)
      this.cause = args.cause;
    this.details = details;
    this.docsPath = docsPath;
    this.metaMessages = args.metaMessages;
    this.shortMessage = shortMessage;
  }
};

// src/narrow.ts
function narrow(value) {
  return value;
}

// src/human-readable/runtime/signatures.ts
var errorSignatureRegex = /^error (?<name>[a-zA-Z0-9_]+)\((?<parameters>.*?)\)$/;
function isErrorSignature(signature) {
  return errorSignatureRegex.test(signature);
}
function execErrorSignature(signature) {
  return (0,_chunk_WP7KDV47_mjs__WEBPACK_IMPORTED_MODULE_0__.execTyped)(
    errorSignatureRegex,
    signature
  );
}
var eventSignatureRegex = /^event (?<name>[a-zA-Z0-9_]+)\((?<parameters>.*?)\)$/;
function isEventSignature(signature) {
  return eventSignatureRegex.test(signature);
}
function execEventSignature(signature) {
  return (0,_chunk_WP7KDV47_mjs__WEBPACK_IMPORTED_MODULE_0__.execTyped)(
    eventSignatureRegex,
    signature
  );
}
var functionSignatureRegex = /^function (?<name>[a-zA-Z0-9_]+)\((?<parameters>.*?)\)(?: (?<scope>external|public{1}))?(?: (?<stateMutability>pure|view|nonpayable|payable{1}))?(?: returns \((?<returns>.*?)\))?$/;
function isFunctionSignature(signature) {
  return functionSignatureRegex.test(signature);
}
function execFunctionSignature(signature) {
  return (0,_chunk_WP7KDV47_mjs__WEBPACK_IMPORTED_MODULE_0__.execTyped)(functionSignatureRegex, signature);
}
var structSignatureRegex = /^struct (?<name>[a-zA-Z0-9_]+) \{(?<properties>.*?)\}$/;
function isStructSignature(signature) {
  return structSignatureRegex.test(signature);
}
function execStructSignature(signature) {
  return (0,_chunk_WP7KDV47_mjs__WEBPACK_IMPORTED_MODULE_0__.execTyped)(
    structSignatureRegex,
    signature
  );
}
var constructorSignatureRegex = /^constructor\((?<parameters>.*?)\)(?:\s(?<stateMutability>payable{1}))?$/;
function isConstructorSignature(signature) {
  return constructorSignatureRegex.test(signature);
}
function execConstructorSignature(signature) {
  return (0,_chunk_WP7KDV47_mjs__WEBPACK_IMPORTED_MODULE_0__.execTyped)(constructorSignatureRegex, signature);
}
var fallbackSignatureRegex = /^fallback\(\)$/;
function isFallbackSignature(signature) {
  return fallbackSignatureRegex.test(signature);
}
var receiveSignatureRegex = /^receive\(\) external payable$/;
function isReceiveSignature(signature) {
  return receiveSignatureRegex.test(signature);
}
var modifiers = /* @__PURE__ */ new Set([
  "memory",
  "indexed",
  "storage",
  "calldata"
]);
var eventModifiers = /* @__PURE__ */ new Set(["indexed"]);
var functionModifiers = /* @__PURE__ */ new Set([
  "calldata",
  "memory",
  "storage"
]);

// src/human-readable/runtime/cache.ts
function getParameterCacheKey(param, type) {
  if (type)
    return `${type}:${param}`;
  return param;
}
var parameterCache = /* @__PURE__ */ new Map([
  // Unnamed
  ["address", { type: "address" }],
  ["bool", { type: "bool" }],
  ["bytes", { type: "bytes" }],
  ["bytes32", { type: "bytes32" }],
  ["int", { type: "int256" }],
  ["int256", { type: "int256" }],
  ["string", { type: "string" }],
  ["uint", { type: "uint256" }],
  ["uint8", { type: "uint8" }],
  ["uint16", { type: "uint16" }],
  ["uint24", { type: "uint24" }],
  ["uint32", { type: "uint32" }],
  ["uint64", { type: "uint64" }],
  ["uint96", { type: "uint96" }],
  ["uint112", { type: "uint112" }],
  ["uint160", { type: "uint160" }],
  ["uint192", { type: "uint192" }],
  ["uint256", { type: "uint256" }],
  // Named
  ["address owner", { type: "address", name: "owner" }],
  ["address to", { type: "address", name: "to" }],
  ["bool approved", { type: "bool", name: "approved" }],
  ["bytes _data", { type: "bytes", name: "_data" }],
  ["bytes data", { type: "bytes", name: "data" }],
  ["bytes signature", { type: "bytes", name: "signature" }],
  ["bytes32 hash", { type: "bytes32", name: "hash" }],
  ["bytes32 r", { type: "bytes32", name: "r" }],
  ["bytes32 root", { type: "bytes32", name: "root" }],
  ["bytes32 s", { type: "bytes32", name: "s" }],
  ["string name", { type: "string", name: "name" }],
  ["string symbol", { type: "string", name: "symbol" }],
  ["string tokenURI", { type: "string", name: "tokenURI" }],
  ["uint tokenId", { type: "uint256", name: "tokenId" }],
  ["uint8 v", { type: "uint8", name: "v" }],
  ["uint256 balance", { type: "uint256", name: "balance" }],
  ["uint256 tokenId", { type: "uint256", name: "tokenId" }],
  ["uint256 value", { type: "uint256", name: "value" }],
  // Indexed
  [
    "event:address indexed from",
    { type: "address", name: "from", indexed: true }
  ],
  ["event:address indexed to", { type: "address", name: "to", indexed: true }],
  [
    "event:uint indexed tokenId",
    { type: "uint256", name: "tokenId", indexed: true }
  ],
  [
    "event:uint256 indexed tokenId",
    { type: "uint256", name: "tokenId", indexed: true }
  ]
]);

// src/human-readable/runtime/utils.ts
function parseSignature(signature, structs = {}) {
  if (isFunctionSignature(signature)) {
    const match = execFunctionSignature(signature);
    if (!match)
      throw new BaseError("Invalid function signature.", {
        details: signature
      });
    const inputParams = splitParameters(match.parameters);
    const inputs = [];
    const inputLength = inputParams.length;
    for (let i = 0; i < inputLength; i++) {
      inputs.push(
        parseAbiParameter(inputParams[i], {
          modifiers: functionModifiers,
          structs,
          type: "function"
        })
      );
    }
    const outputs = [];
    if (match.returns) {
      const outputParams = splitParameters(match.returns);
      const outputLength = outputParams.length;
      for (let i = 0; i < outputLength; i++) {
        outputs.push(
          parseAbiParameter(outputParams[i], {
            modifiers: functionModifiers,
            structs,
            type: "function"
          })
        );
      }
    }
    return {
      name: match.name,
      type: "function",
      stateMutability: match.stateMutability ?? "nonpayable",
      inputs,
      outputs
    };
  }
  if (isEventSignature(signature)) {
    const match = execEventSignature(signature);
    if (!match)
      throw new BaseError("Invalid event signature.", {
        details: signature
      });
    const params = splitParameters(match.parameters);
    const abiParameters = [];
    const length = params.length;
    for (let i = 0; i < length; i++) {
      abiParameters.push(
        parseAbiParameter(params[i], {
          modifiers: eventModifiers,
          structs,
          type: "event"
        })
      );
    }
    return { name: match.name, type: "event", inputs: abiParameters };
  }
  if (isErrorSignature(signature)) {
    const match = execErrorSignature(signature);
    if (!match)
      throw new BaseError("Invalid error signature.", {
        details: signature
      });
    const params = splitParameters(match.parameters);
    const abiParameters = [];
    const length = params.length;
    for (let i = 0; i < length; i++) {
      abiParameters.push(
        parseAbiParameter(params[i], { structs, type: "error" })
      );
    }
    return { name: match.name, type: "error", inputs: abiParameters };
  }
  if (isConstructorSignature(signature)) {
    const match = execConstructorSignature(signature);
    if (!match)
      throw new BaseError("Invalid constructor signature.", {
        details: signature
      });
    const params = splitParameters(match.parameters);
    const abiParameters = [];
    const length = params.length;
    for (let i = 0; i < length; i++) {
      abiParameters.push(
        parseAbiParameter(params[i], { structs, type: "constructor" })
      );
    }
    return {
      type: "constructor",
      stateMutability: match.stateMutability ?? "nonpayable",
      inputs: abiParameters
    };
  }
  if (isFallbackSignature(signature))
    return { type: "fallback" };
  if (isReceiveSignature(signature))
    return {
      type: "receive",
      stateMutability: "payable"
    };
  throw new BaseError("Unknown signature.", {
    details: signature
  });
}
var abiParameterWithoutTupleRegex = /^(?<type>[a-zA-Z0-9_]+?)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z0-9_]+))?$/;
var abiParameterWithTupleRegex = /^\((?<type>.+?)\)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z0-9_]+))?$/;
var dynamicIntegerRegex = /^u?int$/;
function parseAbiParameter(param, options) {
  const parameterCacheKey = getParameterCacheKey(param, options?.type);
  if (parameterCache.has(parameterCacheKey))
    return parameterCache.get(parameterCacheKey);
  const isTuple = _chunk_WP7KDV47_mjs__WEBPACK_IMPORTED_MODULE_0__.isTupleRegex.test(param);
  const match = (0,_chunk_WP7KDV47_mjs__WEBPACK_IMPORTED_MODULE_0__.execTyped)(
    isTuple ? abiParameterWithTupleRegex : abiParameterWithoutTupleRegex,
    param
  );
  if (!match)
    throw new BaseError("Invalid ABI parameter.", {
      details: param
    });
  if (match.name && isSolidityKeyword(match.name))
    throw new BaseError("Invalid ABI parameter.", {
      details: param,
      metaMessages: [
        `"${match.name}" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`
      ]
    });
  const name2 = match.name ? { name: match.name } : {};
  const indexed = match.modifier === "indexed" ? { indexed: true } : {};
  const structs = options?.structs ?? {};
  let type;
  let components = {};
  if (isTuple) {
    type = "tuple";
    const params = splitParameters(match.type);
    const components_ = [];
    const length = params.length;
    for (let i = 0; i < length; i++) {
      components_.push(parseAbiParameter(params[i], { structs }));
    }
    components = { components: components_ };
  } else if (match.type in structs) {
    type = "tuple";
    components = { components: structs[match.type] };
  } else if (dynamicIntegerRegex.test(match.type)) {
    type = `${match.type}256`;
  } else {
    type = match.type;
    if (!(options?.type === "struct") && !isSolidityType(type))
      throw new BaseError("Unknown type.", {
        metaMessages: [`Type "${type}" is not a valid ABI type.`]
      });
  }
  if (match.modifier) {
    if (!options?.modifiers?.has?.(match.modifier))
      throw new BaseError("Invalid ABI parameter.", {
        details: param,
        metaMessages: [
          `Modifier "${match.modifier}" not allowed${options?.type ? ` in "${options.type}" type` : ""}.`
        ]
      });
    if (functionModifiers.has(match.modifier) && !isValidDataLocation(type, !!match.array))
      throw new BaseError("Invalid ABI parameter.", {
        details: param,
        metaMessages: [
          `Modifier "${match.modifier}" not allowed${options?.type ? ` in "${options.type}" type` : ""}.`,
          `Data location can only be specified for array, struct, or mapping types, but "${match.modifier}" was given.`
        ]
      });
  }
  const abiParameter = {
    type: `${type}${match.array ?? ""}`,
    ...name2,
    ...indexed,
    ...components
  };
  parameterCache.set(parameterCacheKey, abiParameter);
  return abiParameter;
}
function splitParameters(params, result = [], current = "", depth = 0) {
  if (params === "") {
    if (current === "")
      return result;
    if (depth !== 0)
      throw new BaseError("Unbalanced parentheses.", {
        metaMessages: [
          `"${current.trim()}" has too many ${depth > 0 ? "opening" : "closing"} parentheses.`
        ],
        details: `Depth "${depth}"`
      });
    return [...result, current.trim()];
  }
  const length = params.length;
  for (let i = 0; i < length; i++) {
    const char = params[i];
    const tail = params.slice(i + 1);
    switch (char) {
      case ",":
        return depth === 0 ? splitParameters(tail, [...result, current.trim()]) : splitParameters(tail, result, `${current}${char}`, depth);
      case "(":
        return splitParameters(tail, result, `${current}${char}`, depth + 1);
      case ")":
        return splitParameters(tail, result, `${current}${char}`, depth - 1);
      default:
        return splitParameters(tail, result, `${current}${char}`, depth);
    }
  }
  return [];
}
function isSolidityType(type) {
  return type === "address" || type === "bool" || type === "function" || type === "string" || _chunk_WP7KDV47_mjs__WEBPACK_IMPORTED_MODULE_0__.bytesRegex.test(type) || _chunk_WP7KDV47_mjs__WEBPACK_IMPORTED_MODULE_0__.integerRegex.test(type);
}
var protectedKeywordsRegex = /^(?:after|alias|anonymous|apply|auto|byte|calldata|case|catch|constant|copyof|default|defined|error|event|external|false|final|function|immutable|implements|in|indexed|inline|internal|let|mapping|match|memory|mutable|null|of|override|partial|private|promise|public|pure|reference|relocatable|return|returns|sizeof|static|storage|struct|super|supports|switch|this|true|try|typedef|typeof|var|view|virtual)$/;
function isSolidityKeyword(name2) {
  return name2 === "address" || name2 === "bool" || name2 === "function" || name2 === "string" || name2 === "tuple" || _chunk_WP7KDV47_mjs__WEBPACK_IMPORTED_MODULE_0__.bytesRegex.test(name2) || _chunk_WP7KDV47_mjs__WEBPACK_IMPORTED_MODULE_0__.integerRegex.test(name2) || protectedKeywordsRegex.test(name2);
}
function isValidDataLocation(type, isArray) {
  return isArray || type === "bytes" || type === "string" || type === "tuple";
}

// src/human-readable/runtime/structs.ts
function parseStructs(signatures) {
  const shallowStructs = {};
  const signaturesLength = signatures.length;
  for (let i = 0; i < signaturesLength; i++) {
    const signature = signatures[i];
    if (!isStructSignature(signature))
      continue;
    const match = execStructSignature(signature);
    if (!match)
      throw new BaseError("Invalid struct signature.", {
        details: signature
      });
    const properties = match.properties.split(";");
    const components = [];
    const propertiesLength = properties.length;
    for (let k = 0; k < propertiesLength; k++) {
      const property = properties[k];
      const trimmed = property.trim();
      if (!trimmed)
        continue;
      const abiParameter = parseAbiParameter(trimmed, {
        type: "struct"
      });
      components.push(abiParameter);
    }
    if (!components.length)
      throw new BaseError("Invalid struct signature.", {
        details: signature,
        metaMessages: ["No properties exist."]
      });
    shallowStructs[match.name] = components;
  }
  const resolvedStructs = {};
  const entries = Object.entries(shallowStructs);
  const entriesLength = entries.length;
  for (let i = 0; i < entriesLength; i++) {
    const [name2, parameters] = entries[i];
    resolvedStructs[name2] = resolveStructs(parameters, shallowStructs);
  }
  return resolvedStructs;
}
var typeWithoutTupleRegex = /^(?<type>[a-zA-Z0-9_]+?)(?<array>(?:\[\d*?\])+?)?$/;
function resolveStructs(abiParameters, structs, ancestors = /* @__PURE__ */ new Set()) {
  const components = [];
  const length = abiParameters.length;
  for (let i = 0; i < length; i++) {
    const abiParameter = abiParameters[i];
    const isTuple = _chunk_WP7KDV47_mjs__WEBPACK_IMPORTED_MODULE_0__.isTupleRegex.test(abiParameter.type);
    if (isTuple)
      components.push(abiParameter);
    else {
      const match = (0,_chunk_WP7KDV47_mjs__WEBPACK_IMPORTED_MODULE_0__.execTyped)(
        typeWithoutTupleRegex,
        abiParameter.type
      );
      if (!match?.type)
        throw new BaseError("Invalid ABI parameter.", {
          details: JSON.stringify(abiParameter, null, 2),
          metaMessages: ["ABI parameter type is invalid."]
        });
      const { array, type } = match;
      if (type in structs) {
        if (ancestors.has(type))
          throw new BaseError("Circular reference detected.", {
            metaMessages: [`Struct "${type}" is a circular reference.`]
          });
        components.push({
          ...abiParameter,
          type: `tuple${array ?? ""}`,
          components: resolveStructs(
            structs[type] ?? [],
            structs,
            /* @__PURE__ */ new Set([...ancestors, type])
          )
        });
      } else {
        if (isSolidityType(type))
          components.push(abiParameter);
        else
          throw new BaseError("Unknown type.", {
            metaMessages: [
              `Type "${type}" is not a valid ABI type. Perhaps you forgot to include a struct signature?`
            ]
          });
      }
    }
  }
  return components;
}

// src/human-readable/parseAbi.ts
function parseAbi(signatures) {
  const structs = parseStructs(signatures);
  const abi = [];
  const length = signatures.length;
  for (let i = 0; i < length; i++) {
    const signature = signatures[i];
    if (isStructSignature(signature))
      continue;
    abi.push(parseSignature(signature, structs));
  }
  return abi;
}

// src/human-readable/parseAbiItem.ts
function parseAbiItem(signature) {
  let abiItem;
  if (typeof signature === "string")
    abiItem = parseSignature(signature);
  else {
    const structs = parseStructs(signature);
    const length = signature.length;
    for (let i = 0; i < length; i++) {
      const signature_ = signature[i];
      if (isStructSignature(signature_))
        continue;
      abiItem = parseSignature(signature_, structs);
      break;
    }
  }
  if (!abiItem)
    throw new BaseError("Failed to parse ABI item.", {
      details: `parseAbiItem(${JSON.stringify(signature, null, 2)})`,
      docsPath: "/api/human.html#parseabiitem-1"
    });
  return abiItem;
}

// src/human-readable/parseAbiParameter.ts
function parseAbiParameter2(param) {
  let abiParameter;
  if (typeof param === "string")
    abiParameter = parseAbiParameter(param, {
      modifiers
    });
  else {
    const structs = parseStructs(param);
    const length = param.length;
    for (let i = 0; i < length; i++) {
      const signature = param[i];
      if (isStructSignature(signature))
        continue;
      abiParameter = parseAbiParameter(signature, { modifiers, structs });
      break;
    }
  }
  if (!abiParameter)
    throw new BaseError("Failed to parse ABI parameter.", {
      details: `parseAbiParameter(${JSON.stringify(param, null, 2)})`,
      docsPath: "/api/human.html#parseabiparameter-1"
    });
  return abiParameter;
}

// src/human-readable/parseAbiParameters.ts
function parseAbiParameters(params) {
  const abiParameters = [];
  if (typeof params === "string") {
    const parameters = splitParameters(params);
    const length = parameters.length;
    for (let i = 0; i < length; i++) {
      abiParameters.push(parseAbiParameter(parameters[i], { modifiers }));
    }
  } else {
    const structs = parseStructs(params);
    const length = params.length;
    for (let i = 0; i < length; i++) {
      const signature = params[i];
      if (isStructSignature(signature))
        continue;
      const parameters = splitParameters(signature);
      const length2 = parameters.length;
      for (let k = 0; k < length2; k++) {
        abiParameters.push(
          parseAbiParameter(parameters[k], { modifiers, structs })
        );
      }
    }
  }
  if (abiParameters.length === 0)
    throw new BaseError("Failed to parse ABI parameters.", {
      details: `parseAbiParameters(${JSON.stringify(params, null, 2)})`,
      docsPath: "/api/human.html#parseabiparameters-1"
    });
  return abiParameters;
}



/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),

/***/ "./node_modules/blakejs/blake2b.js":
/*!*****************************************!*\
  !*** ./node_modules/blakejs/blake2b.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Blake2B in pure Javascript
// Adapted from the reference implementation in RFC7693
// Ported to Javascript by DC - https://github.com/dcposch

const util = __webpack_require__(/*! ./util */ "./node_modules/blakejs/util.js")

// 64-bit unsigned addition
// Sets v[a,a+1] += v[b,b+1]
// v should be a Uint32Array
function ADD64AA (v, a, b) {
  const o0 = v[a] + v[b]
  let o1 = v[a + 1] + v[b + 1]
  if (o0 >= 0x100000000) {
    o1++
  }
  v[a] = o0
  v[a + 1] = o1
}

// 64-bit unsigned addition
// Sets v[a,a+1] += b
// b0 is the low 32 bits of b, b1 represents the high 32 bits
function ADD64AC (v, a, b0, b1) {
  let o0 = v[a] + b0
  if (b0 < 0) {
    o0 += 0x100000000
  }
  let o1 = v[a + 1] + b1
  if (o0 >= 0x100000000) {
    o1++
  }
  v[a] = o0
  v[a + 1] = o1
}

// Little-endian byte access
function B2B_GET32 (arr, i) {
  return arr[i] ^ (arr[i + 1] << 8) ^ (arr[i + 2] << 16) ^ (arr[i + 3] << 24)
}

// G Mixing function
// The ROTRs are inlined for speed
function B2B_G (a, b, c, d, ix, iy) {
  const x0 = m[ix]
  const x1 = m[ix + 1]
  const y0 = m[iy]
  const y1 = m[iy + 1]

  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s
  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits

  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits
  let xor0 = v[d] ^ v[a]
  let xor1 = v[d + 1] ^ v[a + 1]
  v[d] = xor1
  v[d + 1] = xor0

  ADD64AA(v, c, d)

  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits
  xor0 = v[b] ^ v[c]
  xor1 = v[b + 1] ^ v[c + 1]
  v[b] = (xor0 >>> 24) ^ (xor1 << 8)
  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)

  ADD64AA(v, a, b)
  ADD64AC(v, a, y0, y1)

  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits
  xor0 = v[d] ^ v[a]
  xor1 = v[d + 1] ^ v[a + 1]
  v[d] = (xor0 >>> 16) ^ (xor1 << 16)
  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)

  ADD64AA(v, c, d)

  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits
  xor0 = v[b] ^ v[c]
  xor1 = v[b + 1] ^ v[c + 1]
  v[b] = (xor1 >>> 31) ^ (xor0 << 1)
  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)
}

// Initialization Vector
const BLAKE2B_IV32 = new Uint32Array([
  0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372,
  0x5f1d36f1, 0xa54ff53a, 0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c,
  0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19
])

const SIGMA8 = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13,
  6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1,
  9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4,
  10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5,
  15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7,
  14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2,
  13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0,
  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6,
  1, 12, 0, 2, 11, 7, 5, 3
]

// These are offsets into a uint64 buffer.
// Multiply them all by 2 to make them offsets into a uint32 buffer,
// because this is Javascript and we don't have uint64s
const SIGMA82 = new Uint8Array(
  SIGMA8.map(function (x) {
    return x * 2
  })
)

// Compression function. 'last' flag indicates last block.
// Note we're representing 16 uint64s as 32 uint32s
const v = new Uint32Array(32)
const m = new Uint32Array(32)
function blake2bCompress (ctx, last) {
  let i = 0

  // init work variables
  for (i = 0; i < 16; i++) {
    v[i] = ctx.h[i]
    v[i + 16] = BLAKE2B_IV32[i]
  }

  // low 64 bits of offset
  v[24] = v[24] ^ ctx.t
  v[25] = v[25] ^ (ctx.t / 0x100000000)
  // high 64 bits not supported, offset may not be higher than 2**53-1

  // last block flag set ?
  if (last) {
    v[28] = ~v[28]
    v[29] = ~v[29]
  }

  // get little-endian words
  for (i = 0; i < 32; i++) {
    m[i] = B2B_GET32(ctx.b, 4 * i)
  }

  // twelve rounds of mixing
  // uncomment the DebugPrint calls to log the computation
  // and match the RFC sample documentation
  // util.debugPrint('          m[16]', m, 64)
  for (i = 0; i < 12; i++) {
    // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)
    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])
    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])
    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])
    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])
    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])
    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])
    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])
    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])
  }
  // util.debugPrint('   (i=12) v[16]', v, 64)

  for (i = 0; i < 16; i++) {
    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]
  }
  // util.debugPrint('h[8]', ctx.h, 64)
}

// reusable parameterBlock
const parameterBlock = new Uint8Array([
  0,
  0,
  0,
  0, //  0: outlen, keylen, fanout, depth
  0,
  0,
  0,
  0, //  4: leaf length, sequential mode
  0,
  0,
  0,
  0, //  8: node offset
  0,
  0,
  0,
  0, // 12: node offset
  0,
  0,
  0,
  0, // 16: node depth, inner length, rfu
  0,
  0,
  0,
  0, // 20: rfu
  0,
  0,
  0,
  0, // 24: rfu
  0,
  0,
  0,
  0, // 28: rfu
  0,
  0,
  0,
  0, // 32: salt
  0,
  0,
  0,
  0, // 36: salt
  0,
  0,
  0,
  0, // 40: salt
  0,
  0,
  0,
  0, // 44: salt
  0,
  0,
  0,
  0, // 48: personal
  0,
  0,
  0,
  0, // 52: personal
  0,
  0,
  0,
  0, // 56: personal
  0,
  0,
  0,
  0 // 60: personal
])

// Creates a BLAKE2b hashing context
// Requires an output length between 1 and 64 bytes
// Takes an optional Uint8Array key
// Takes an optinal Uint8Array salt
// Takes an optinal Uint8Array personal
function blake2bInit (outlen, key, salt, personal) {
  if (outlen === 0 || outlen > 64) {
    throw new Error('Illegal output length, expected 0 < length <= 64')
  }
  if (key && key.length > 64) {
    throw new Error('Illegal key, expected Uint8Array with 0 < length <= 64')
  }
  if (salt && salt.length !== 16) {
    throw new Error('Illegal salt, expected Uint8Array with length is 16')
  }
  if (personal && personal.length !== 16) {
    throw new Error('Illegal personal, expected Uint8Array with length is 16')
  }

  // state, 'param block'
  const ctx = {
    b: new Uint8Array(128),
    h: new Uint32Array(16),
    t: 0, // input count
    c: 0, // pointer within buffer
    outlen: outlen // output length in bytes
  }

  // initialize parameterBlock before usage
  parameterBlock.fill(0)
  parameterBlock[0] = outlen
  if (key) parameterBlock[1] = key.length
  parameterBlock[2] = 1 // fanout
  parameterBlock[3] = 1 // depth
  if (salt) parameterBlock.set(salt, 32)
  if (personal) parameterBlock.set(personal, 48)

  // initialize hash state
  for (let i = 0; i < 16; i++) {
    ctx.h[i] = BLAKE2B_IV32[i] ^ B2B_GET32(parameterBlock, i * 4)
  }

  // key the hash, if applicable
  if (key) {
    blake2bUpdate(ctx, key)
    // at the end
    ctx.c = 128
  }

  return ctx
}

// Updates a BLAKE2b streaming hash
// Requires hash context and Uint8Array (byte array)
function blake2bUpdate (ctx, input) {
  for (let i = 0; i < input.length; i++) {
    if (ctx.c === 128) {
      // buffer full ?
      ctx.t += ctx.c // add counters
      blake2bCompress(ctx, false) // compress (not last)
      ctx.c = 0 // counter to zero
    }
    ctx.b[ctx.c++] = input[i]
  }
}

// Completes a BLAKE2b streaming hash
// Returns a Uint8Array containing the message digest
function blake2bFinal (ctx) {
  ctx.t += ctx.c // mark last block offset

  while (ctx.c < 128) {
    // fill up with zeros
    ctx.b[ctx.c++] = 0
  }
  blake2bCompress(ctx, true) // final block flag = 1

  // little endian convert and store
  const out = new Uint8Array(ctx.outlen)
  for (let i = 0; i < ctx.outlen; i++) {
    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))
  }
  return out
}

// Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array
//
// Returns a n-byte Uint8Array
//
// Parameters:
// - input - the input bytes, as a string, Buffer or Uint8Array
// - key - optional key Uint8Array, up to 64 bytes
// - outlen - optional output length in bytes, default 64
// - salt - optional salt bytes, string, Buffer or Uint8Array
// - personal - optional personal bytes, string, Buffer or Uint8Array
function blake2b (input, key, outlen, salt, personal) {
  // preprocess inputs
  outlen = outlen || 64
  input = util.normalizeInput(input)
  if (salt) {
    salt = util.normalizeInput(salt)
  }
  if (personal) {
    personal = util.normalizeInput(personal)
  }

  // do the math
  const ctx = blake2bInit(outlen, key, salt, personal)
  blake2bUpdate(ctx, input)
  return blake2bFinal(ctx)
}

// Computes the BLAKE2B hash of a string or byte array
//
// Returns an n-byte hash in hex, all lowercase
//
// Parameters:
// - input - the input bytes, as a string, Buffer, or Uint8Array
// - key - optional key Uint8Array, up to 64 bytes
// - outlen - optional output length in bytes, default 64
// - salt - optional salt bytes, string, Buffer or Uint8Array
// - personal - optional personal bytes, string, Buffer or Uint8Array
function blake2bHex (input, key, outlen, salt, personal) {
  const output = blake2b(input, key, outlen, salt, personal)
  return util.toHex(output)
}

module.exports = {
  blake2b: blake2b,
  blake2bHex: blake2bHex,
  blake2bInit: blake2bInit,
  blake2bUpdate: blake2bUpdate,
  blake2bFinal: blake2bFinal
}


/***/ }),

/***/ "./node_modules/blakejs/blake2s.js":
/*!*****************************************!*\
  !*** ./node_modules/blakejs/blake2s.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// BLAKE2s hash function in pure Javascript
// Adapted from the reference implementation in RFC7693
// Ported to Javascript by DC - https://github.com/dcposch

const util = __webpack_require__(/*! ./util */ "./node_modules/blakejs/util.js")

// Little-endian byte access.
// Expects a Uint8Array and an index
// Returns the little-endian uint32 at v[i..i+3]
function B2S_GET32 (v, i) {
  return v[i] ^ (v[i + 1] << 8) ^ (v[i + 2] << 16) ^ (v[i + 3] << 24)
}

// Mixing function G.
function B2S_G (a, b, c, d, x, y) {
  v[a] = v[a] + v[b] + x
  v[d] = ROTR32(v[d] ^ v[a], 16)
  v[c] = v[c] + v[d]
  v[b] = ROTR32(v[b] ^ v[c], 12)
  v[a] = v[a] + v[b] + y
  v[d] = ROTR32(v[d] ^ v[a], 8)
  v[c] = v[c] + v[d]
  v[b] = ROTR32(v[b] ^ v[c], 7)
}

// 32-bit right rotation
// x should be a uint32
// y must be between 1 and 31, inclusive
function ROTR32 (x, y) {
  return (x >>> y) ^ (x << (32 - y))
}

// Initialization Vector.
const BLAKE2S_IV = new Uint32Array([
  0x6a09e667,
  0xbb67ae85,
  0x3c6ef372,
  0xa54ff53a,
  0x510e527f,
  0x9b05688c,
  0x1f83d9ab,
  0x5be0cd19
])

const SIGMA = new Uint8Array([
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  14,
  10,
  4,
  8,
  9,
  15,
  13,
  6,
  1,
  12,
  0,
  2,
  11,
  7,
  5,
  3,
  11,
  8,
  12,
  0,
  5,
  2,
  15,
  13,
  10,
  14,
  3,
  6,
  7,
  1,
  9,
  4,
  7,
  9,
  3,
  1,
  13,
  12,
  11,
  14,
  2,
  6,
  5,
  10,
  4,
  0,
  15,
  8,
  9,
  0,
  5,
  7,
  2,
  4,
  10,
  15,
  14,
  1,
  11,
  12,
  6,
  8,
  3,
  13,
  2,
  12,
  6,
  10,
  0,
  11,
  8,
  3,
  4,
  13,
  7,
  5,
  15,
  14,
  1,
  9,
  12,
  5,
  1,
  15,
  14,
  13,
  4,
  10,
  0,
  7,
  6,
  3,
  9,
  2,
  8,
  11,
  13,
  11,
  7,
  14,
  12,
  1,
  3,
  9,
  5,
  0,
  15,
  4,
  8,
  6,
  2,
  10,
  6,
  15,
  14,
  9,
  11,
  3,
  0,
  8,
  12,
  2,
  13,
  7,
  1,
  4,
  10,
  5,
  10,
  2,
  8,
  4,
  7,
  6,
  1,
  5,
  15,
  11,
  9,
  14,
  3,
  12,
  13,
  0
])

// Compression function. "last" flag indicates last block
const v = new Uint32Array(16)
const m = new Uint32Array(16)
function blake2sCompress (ctx, last) {
  let i = 0
  for (i = 0; i < 8; i++) {
    // init work variables
    v[i] = ctx.h[i]
    v[i + 8] = BLAKE2S_IV[i]
  }

  v[12] ^= ctx.t // low 32 bits of offset
  v[13] ^= ctx.t / 0x100000000 // high 32 bits
  if (last) {
    // last block flag set ?
    v[14] = ~v[14]
  }

  for (i = 0; i < 16; i++) {
    // get little-endian words
    m[i] = B2S_GET32(ctx.b, 4 * i)
  }

  // ten rounds of mixing
  // uncomment the DebugPrint calls to log the computation
  // and match the RFC sample documentation
  // util.debugPrint('          m[16]', m, 32)
  for (i = 0; i < 10; i++) {
    // util.debugPrint('   (i=' + i + ')  v[16]', v, 32)
    B2S_G(0, 4, 8, 12, m[SIGMA[i * 16 + 0]], m[SIGMA[i * 16 + 1]])
    B2S_G(1, 5, 9, 13, m[SIGMA[i * 16 + 2]], m[SIGMA[i * 16 + 3]])
    B2S_G(2, 6, 10, 14, m[SIGMA[i * 16 + 4]], m[SIGMA[i * 16 + 5]])
    B2S_G(3, 7, 11, 15, m[SIGMA[i * 16 + 6]], m[SIGMA[i * 16 + 7]])
    B2S_G(0, 5, 10, 15, m[SIGMA[i * 16 + 8]], m[SIGMA[i * 16 + 9]])
    B2S_G(1, 6, 11, 12, m[SIGMA[i * 16 + 10]], m[SIGMA[i * 16 + 11]])
    B2S_G(2, 7, 8, 13, m[SIGMA[i * 16 + 12]], m[SIGMA[i * 16 + 13]])
    B2S_G(3, 4, 9, 14, m[SIGMA[i * 16 + 14]], m[SIGMA[i * 16 + 15]])
  }
  // util.debugPrint('   (i=10) v[16]', v, 32)

  for (i = 0; i < 8; i++) {
    ctx.h[i] ^= v[i] ^ v[i + 8]
  }
  // util.debugPrint('h[8]', ctx.h, 32)
}

// Creates a BLAKE2s hashing context
// Requires an output length between 1 and 32 bytes
// Takes an optional Uint8Array key
function blake2sInit (outlen, key) {
  if (!(outlen > 0 && outlen <= 32)) {
    throw new Error('Incorrect output length, should be in [1, 32]')
  }
  const keylen = key ? key.length : 0
  if (key && !(keylen > 0 && keylen <= 32)) {
    throw new Error('Incorrect key length, should be in [1, 32]')
  }

  const ctx = {
    h: new Uint32Array(BLAKE2S_IV), // hash state
    b: new Uint8Array(64), // input block
    c: 0, // pointer within block
    t: 0, // input count
    outlen: outlen // output length in bytes
  }
  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen

  if (keylen > 0) {
    blake2sUpdate(ctx, key)
    ctx.c = 64 // at the end
  }

  return ctx
}

// Updates a BLAKE2s streaming hash
// Requires hash context and Uint8Array (byte array)
function blake2sUpdate (ctx, input) {
  for (let i = 0; i < input.length; i++) {
    if (ctx.c === 64) {
      // buffer full ?
      ctx.t += ctx.c // add counters
      blake2sCompress(ctx, false) // compress (not last)
      ctx.c = 0 // counter to zero
    }
    ctx.b[ctx.c++] = input[i]
  }
}

// Completes a BLAKE2s streaming hash
// Returns a Uint8Array containing the message digest
function blake2sFinal (ctx) {
  ctx.t += ctx.c // mark last block offset
  while (ctx.c < 64) {
    // fill up with zeros
    ctx.b[ctx.c++] = 0
  }
  blake2sCompress(ctx, true) // final block flag = 1

  // little endian convert and store
  const out = new Uint8Array(ctx.outlen)
  for (let i = 0; i < ctx.outlen; i++) {
    out[i] = (ctx.h[i >> 2] >> (8 * (i & 3))) & 0xff
  }
  return out
}

// Computes the BLAKE2S hash of a string or byte array, and returns a Uint8Array
//
// Returns a n-byte Uint8Array
//
// Parameters:
// - input - the input bytes, as a string, Buffer, or Uint8Array
// - key - optional key Uint8Array, up to 32 bytes
// - outlen - optional output length in bytes, default 64
function blake2s (input, key, outlen) {
  // preprocess inputs
  outlen = outlen || 32
  input = util.normalizeInput(input)

  // do the math
  const ctx = blake2sInit(outlen, key)
  blake2sUpdate(ctx, input)
  return blake2sFinal(ctx)
}

// Computes the BLAKE2S hash of a string or byte array
//
// Returns an n-byte hash in hex, all lowercase
//
// Parameters:
// - input - the input bytes, as a string, Buffer, or Uint8Array
// - key - optional key Uint8Array, up to 32 bytes
// - outlen - optional output length in bytes, default 64
function blake2sHex (input, key, outlen) {
  const output = blake2s(input, key, outlen)
  return util.toHex(output)
}

module.exports = {
  blake2s: blake2s,
  blake2sHex: blake2sHex,
  blake2sInit: blake2sInit,
  blake2sUpdate: blake2sUpdate,
  blake2sFinal: blake2sFinal
}


/***/ }),

/***/ "./node_modules/blakejs/index.js":
/*!***************************************!*\
  !*** ./node_modules/blakejs/index.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const b2b = __webpack_require__(/*! ./blake2b */ "./node_modules/blakejs/blake2b.js")
const b2s = __webpack_require__(/*! ./blake2s */ "./node_modules/blakejs/blake2s.js")

module.exports = {
  blake2b: b2b.blake2b,
  blake2bHex: b2b.blake2bHex,
  blake2bInit: b2b.blake2bInit,
  blake2bUpdate: b2b.blake2bUpdate,
  blake2bFinal: b2b.blake2bFinal,
  blake2s: b2s.blake2s,
  blake2sHex: b2s.blake2sHex,
  blake2sInit: b2s.blake2sInit,
  blake2sUpdate: b2s.blake2sUpdate,
  blake2sFinal: b2s.blake2sFinal
}


/***/ }),

/***/ "./node_modules/blakejs/util.js":
/*!**************************************!*\
  !*** ./node_modules/blakejs/util.js ***!
  \**************************************/
/***/ ((module) => {

const ERROR_MSG_INPUT = 'Input must be an string, Buffer or Uint8Array'

// For convenience, let people hash a string, not just a Uint8Array
function normalizeInput (input) {
  let ret
  if (input instanceof Uint8Array) {
    ret = input
  } else if (typeof input === 'string') {
    const encoder = new TextEncoder()
    ret = encoder.encode(input)
  } else {
    throw new Error(ERROR_MSG_INPUT)
  }
  return ret
}

// Converts a Uint8Array to a hexadecimal string
// For example, toHex([255, 0, 255]) returns "ff00ff"
function toHex (bytes) {
  return Array.prototype.map
    .call(bytes, function (n) {
      return (n < 16 ? '0' : '') + n.toString(16)
    })
    .join('')
}

// Converts any value in [0...2^32-1] to an 8-character hex string
function uint32ToHex (val) {
  return (0x100000000 + val).toString(16).substring(1)
}

// For debugging: prints out hash state in the same format as the RFC
// sample computation exactly, so that you can diff
function debugPrint (label, arr, size) {
  let msg = '\n' + label + ' = '
  for (let i = 0; i < arr.length; i += 2) {
    if (size === 32) {
      msg += uint32ToHex(arr[i]).toUpperCase()
      msg += ' '
      msg += uint32ToHex(arr[i + 1]).toUpperCase()
    } else if (size === 64) {
      msg += uint32ToHex(arr[i + 1]).toUpperCase()
      msg += uint32ToHex(arr[i]).toUpperCase()
    } else throw new Error('Invalid size ' + size)
    if (i % 6 === 4) {
      msg += '\n' + new Array(label.length + 4).join(' ')
    } else if (i < arr.length - 2) {
      msg += ' '
    }
  }
  console.log(msg)
}

// For performance testing: generates N bytes of input, hashes M times
// Measures and prints MB/second hash performance each time
function testSpeed (hashFn, N, M) {
  let startMs = new Date().getTime()

  const input = new Uint8Array(N)
  for (let i = 0; i < N; i++) {
    input[i] = i % 256
  }
  const genMs = new Date().getTime()
  console.log('Generated random input in ' + (genMs - startMs) + 'ms')
  startMs = genMs

  for (let i = 0; i < M; i++) {
    const hashHex = hashFn(input)
    const hashMs = new Date().getTime()
    const ms = hashMs - startMs
    startMs = hashMs
    console.log('Hashed in ' + ms + 'ms: ' + hashHex.substring(0, 20) + '...')
    console.log(
      Math.round((N / (1 << 20) / (ms / 1000)) * 100) / 100 + ' MB PER SECOND'
    )
  }
}

module.exports = {
  normalizeInput: normalizeInput,
  toHex: toHex,
  debugPrint: debugPrint,
  testSpeed: testSpeed
}


/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



const base64 = __webpack_require__(/*! base64-js */ "./node_modules/base64-js/index.js")
const ieee754 = __webpack_require__(/*! ieee754 */ "./node_modules/ieee754/index.js")
const customInspectSymbol =
  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation
    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation
    : null

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

const K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    const arr = new Uint8Array(1)
    const proto = { foo: function () { return 42 } }
    Object.setPrototypeOf(proto, Uint8Array.prototype)
    Object.setPrototypeOf(arr, proto)
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"')
  }
  // Return an augmented `Uint8Array` instance
  const buf = new Uint8Array(length)
  Object.setPrototypeOf(buf, Buffer.prototype)
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError(
        'The "string" argument must be of type string. Received type number'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  if (ArrayBuffer.isView(value)) {
    return fromArrayView(value)
  }

  if (value == null) {
    throw new TypeError(
      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
      'or Array-like Object. Received type ' + (typeof value)
    )
  }

  if (isInstance(value, ArrayBuffer) ||
      (value && isInstance(value.buffer, ArrayBuffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof SharedArrayBuffer !== 'undefined' &&
      (isInstance(value, SharedArrayBuffer) ||
      (value && isInstance(value.buffer, SharedArrayBuffer)))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'number') {
    throw new TypeError(
      'The "value" argument must not be of type number. Received type number'
    )
  }

  const valueOf = value.valueOf && value.valueOf()
  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length)
  }

  const b = fromObject(value)
  if (b) return b

  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&
      typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)
  }

  throw new TypeError(
    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
    'or Array-like Object. Received type ' + (typeof value)
  )
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)
Object.setPrototypeOf(Buffer, Uint8Array)

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpreted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  const length = byteLength(string, encoding) | 0
  let buf = createBuffer(length)

  const actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  const length = array.length < 0 ? 0 : checked(array.length) | 0
  const buf = createBuffer(length)
  for (let i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayView (arrayView) {
  if (isInstance(arrayView, Uint8Array)) {
    const copy = new Uint8Array(arrayView)
    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)
  }
  return fromArrayLike(arrayView)
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  let buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  Object.setPrototypeOf(buf, Buffer.prototype)

  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    const len = checked(obj.length) | 0
    const buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0)
    }
    return fromArrayLike(obj)
  }

  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data)
  }
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true &&
    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
}

Buffer.compare = function compare (a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError(
      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
    )
  }

  if (a === b) return 0

  let x = a.length
  let y = b.length

  for (let i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  let i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  const buffer = Buffer.allocUnsafe(length)
  let pos = 0
  for (i = 0; i < list.length; ++i) {
    let buf = list[i]
    if (isInstance(buf, Uint8Array)) {
      if (pos + buf.length > buffer.length) {
        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)
        buf.copy(buffer, pos)
      } else {
        Uint8Array.prototype.set.call(
          buffer,
          buf,
          pos
        )
      }
    } else if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    } else {
      buf.copy(buffer, pos)
    }
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    throw new TypeError(
      'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
      'Received type ' + typeof string
    )
  }

  const len = string.length
  const mustMatch = (arguments.length > 2 && arguments[2] === true)
  if (!mustMatch && len === 0) return 0

  // Use a for loop to avoid recursion
  let loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
        }
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  let loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  const i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  const len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (let i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  const len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (let i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  const len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (let i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  const length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  let str = ''
  const max = exports.INSPECT_MAX_BYTES
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
  if (this.length > max) str += ' ... '
  return '<Buffer ' + str + '>'
}
if (customInspectSymbol) {
  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength)
  }
  if (!Buffer.isBuffer(target)) {
    throw new TypeError(
      'The "target" argument must be one of type Buffer or Uint8Array. ' +
      'Received type ' + (typeof target)
    )
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  let x = thisEnd - thisStart
  let y = end - start
  const len = Math.min(x, y)

  const thisCopy = this.slice(thisStart, thisEnd)
  const targetCopy = target.slice(start, end)

  for (let i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  let indexSize = 1
  let arrLength = arr.length
  let valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  let i
  if (dir) {
    let foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      let found = true
      for (let j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  const remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  const strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  let i
  for (i = 0; i < length; ++i) {
    const parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  const remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  let loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
      case 'latin1':
      case 'binary':
        return asciiWrite(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  const res = []

  let i = start
  while (i < end) {
    const firstByte = buf[i]
    let codePoint = null
    let bytesPerSequence = (firstByte > 0xEF)
      ? 4
      : (firstByte > 0xDF)
          ? 3
          : (firstByte > 0xBF)
              ? 2
              : 1

    if (i + bytesPerSequence <= end) {
      let secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
const MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  const len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  let res = ''
  let i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  let ret = ''
  end = Math.min(buf.length, end)

  for (let i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  let ret = ''
  end = Math.min(buf.length, end)

  for (let i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  const len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  let out = ''
  for (let i = start; i < end; ++i) {
    out += hexSliceLookupTable[buf[i]]
  }
  return out
}

function utf16leSlice (buf, start, end) {
  const bytes = buf.slice(start, end)
  let res = ''
  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)
  for (let i = 0; i < bytes.length - 1; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  const len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  const newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  Object.setPrototypeOf(newBuf, Buffer.prototype)

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUintLE =
Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  let val = this[offset]
  let mul = 1
  let i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUintBE =
Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  let val = this[offset + --byteLength]
  let mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUint8 =
Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUint16LE =
Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUint16BE =
Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUint32LE =
Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUint32BE =
Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {
  offset = offset >>> 0
  validateNumber(offset, 'offset')
  const first = this[offset]
  const last = this[offset + 7]
  if (first === undefined || last === undefined) {
    boundsError(offset, this.length - 8)
  }

  const lo = first +
    this[++offset] * 2 ** 8 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 24

  const hi = this[++offset] +
    this[++offset] * 2 ** 8 +
    this[++offset] * 2 ** 16 +
    last * 2 ** 24

  return BigInt(lo) + (BigInt(hi) << BigInt(32))
})

Buffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {
  offset = offset >>> 0
  validateNumber(offset, 'offset')
  const first = this[offset]
  const last = this[offset + 7]
  if (first === undefined || last === undefined) {
    boundsError(offset, this.length - 8)
  }

  const hi = first * 2 ** 24 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 8 +
    this[++offset]

  const lo = this[++offset] * 2 ** 24 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 8 +
    last

  return (BigInt(hi) << BigInt(32)) + BigInt(lo)
})

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  let val = this[offset]
  let mul = 1
  let i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  let i = byteLength
  let mul = 1
  let val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  const val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  const val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {
  offset = offset >>> 0
  validateNumber(offset, 'offset')
  const first = this[offset]
  const last = this[offset + 7]
  if (first === undefined || last === undefined) {
    boundsError(offset, this.length - 8)
  }

  const val = this[offset + 4] +
    this[offset + 5] * 2 ** 8 +
    this[offset + 6] * 2 ** 16 +
    (last << 24) // Overflow

  return (BigInt(val) << BigInt(32)) +
    BigInt(first +
    this[++offset] * 2 ** 8 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 24)
})

Buffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {
  offset = offset >>> 0
  validateNumber(offset, 'offset')
  const first = this[offset]
  const last = this[offset + 7]
  if (first === undefined || last === undefined) {
    boundsError(offset, this.length - 8)
  }

  const val = (first << 24) + // Overflow
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 8 +
    this[++offset]

  return (BigInt(val) << BigInt(32)) +
    BigInt(this[++offset] * 2 ** 24 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 8 +
    last)
})

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUintLE =
Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    const maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  let mul = 1
  let i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUintBE =
Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    const maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  let i = byteLength - 1
  let mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUint8 =
Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUint16LE =
Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUint16BE =
Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUint32LE =
Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUint32BE =
Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function wrtBigUInt64LE (buf, value, offset, min, max) {
  checkIntBI(value, min, max, buf, offset, 7)

  let lo = Number(value & BigInt(0xffffffff))
  buf[offset++] = lo
  lo = lo >> 8
  buf[offset++] = lo
  lo = lo >> 8
  buf[offset++] = lo
  lo = lo >> 8
  buf[offset++] = lo
  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))
  buf[offset++] = hi
  hi = hi >> 8
  buf[offset++] = hi
  hi = hi >> 8
  buf[offset++] = hi
  hi = hi >> 8
  buf[offset++] = hi
  return offset
}

function wrtBigUInt64BE (buf, value, offset, min, max) {
  checkIntBI(value, min, max, buf, offset, 7)

  let lo = Number(value & BigInt(0xffffffff))
  buf[offset + 7] = lo
  lo = lo >> 8
  buf[offset + 6] = lo
  lo = lo >> 8
  buf[offset + 5] = lo
  lo = lo >> 8
  buf[offset + 4] = lo
  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))
  buf[offset + 3] = hi
  hi = hi >> 8
  buf[offset + 2] = hi
  hi = hi >> 8
  buf[offset + 1] = hi
  hi = hi >> 8
  buf[offset] = hi
  return offset + 8
}

Buffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {
  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))
})

Buffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {
  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))
})

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    const limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  let i = 0
  let mul = 1
  let sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    const limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  let i = byteLength - 1
  let mul = 1
  let sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {
  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))
})

Buffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {
  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))
})

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  const len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      const code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  } else if (typeof val === 'boolean') {
    val = Number(val)
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  let i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    const bytes = Buffer.isBuffer(val)
      ? val
      : Buffer.from(val, encoding)
    const len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// CUSTOM ERRORS
// =============

// Simplified versions from Node, changed for Buffer-only usage
const errors = {}
function E (sym, getMessage, Base) {
  errors[sym] = class NodeError extends Base {
    constructor () {
      super()

      Object.defineProperty(this, 'message', {
        value: getMessage.apply(this, arguments),
        writable: true,
        configurable: true
      })

      // Add the error code to the name to include it in the stack trace.
      this.name = `${this.name} [${sym}]`
      // Access the stack to generate the error message including the error code
      // from the name.
      this.stack // eslint-disable-line no-unused-expressions
      // Reset the name to the actual name.
      delete this.name
    }

    get code () {
      return sym
    }

    set code (value) {
      Object.defineProperty(this, 'code', {
        configurable: true,
        enumerable: true,
        value,
        writable: true
      })
    }

    toString () {
      return `${this.name} [${sym}]: ${this.message}`
    }
  }
}

E('ERR_BUFFER_OUT_OF_BOUNDS',
  function (name) {
    if (name) {
      return `${name} is outside of buffer bounds`
    }

    return 'Attempt to access memory outside buffer bounds'
  }, RangeError)
E('ERR_INVALID_ARG_TYPE',
  function (name, actual) {
    return `The "${name}" argument must be of type number. Received type ${typeof actual}`
  }, TypeError)
E('ERR_OUT_OF_RANGE',
  function (str, range, input) {
    let msg = `The value of "${str}" is out of range.`
    let received = input
    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {
      received = addNumericalSeparator(String(input))
    } else if (typeof input === 'bigint') {
      received = String(input)
      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {
        received = addNumericalSeparator(received)
      }
      received += 'n'
    }
    msg += ` It must be ${range}. Received ${received}`
    return msg
  }, RangeError)

function addNumericalSeparator (val) {
  let res = ''
  let i = val.length
  const start = val[0] === '-' ? 1 : 0
  for (; i >= start + 4; i -= 3) {
    res = `_${val.slice(i - 3, i)}${res}`
  }
  return `${val.slice(0, i)}${res}`
}

// CHECK FUNCTIONS
// ===============

function checkBounds (buf, offset, byteLength) {
  validateNumber(offset, 'offset')
  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {
    boundsError(offset, buf.length - (byteLength + 1))
  }
}

function checkIntBI (value, min, max, buf, offset, byteLength) {
  if (value > max || value < min) {
    const n = typeof min === 'bigint' ? 'n' : ''
    let range
    if (byteLength > 3) {
      if (min === 0 || min === BigInt(0)) {
        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`
      } else {
        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +
                `${(byteLength + 1) * 8 - 1}${n}`
      }
    } else {
      range = `>= ${min}${n} and <= ${max}${n}`
    }
    throw new errors.ERR_OUT_OF_RANGE('value', range, value)
  }
  checkBounds(buf, offset, byteLength)
}

function validateNumber (value, name) {
  if (typeof value !== 'number') {
    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)
  }
}

function boundsError (value, length, type) {
  if (Math.floor(value) !== value) {
    validateNumber(value, type)
    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)
  }

  if (length < 0) {
    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()
  }

  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',
                                    `>= ${type ? 1 : 0} and <= ${length}`,
                                    value)
}

// HELPER FUNCTIONS
// ================

const INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  let codePoint
  const length = string.length
  let leadSurrogate = null
  const bytes = []

  for (let i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  const byteArray = []
  for (let i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  let c, hi, lo
  const byteArray = []
  for (let i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  let i
  for (i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance (obj, type) {
  return obj instanceof type ||
    (obj != null && obj.constructor != null && obj.constructor.name != null &&
      obj.constructor.name === type.name)
}
function numberIsNaN (obj) {
  // For IE11 support
  return obj !== obj // eslint-disable-line no-self-compare
}

// Create lookup table for `toString('hex')`
// See: https://github.com/feross/buffer/issues/219
const hexSliceLookupTable = (function () {
  const alphabet = '0123456789abcdef'
  const table = new Array(256)
  for (let i = 0; i < 16; ++i) {
    const i16 = i * 16
    for (let j = 0; j < 16; ++j) {
      table[i16 + j] = alphabet[i] + alphabet[j]
    }
  }
  return table
})()

// Return not function with Error if BigInt not supported
function defineBigIntMethod (fn) {
  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn
}

function BufferBigIntNotDefined () {
  throw new Error('BigInt not supported')
}


/***/ }),

/***/ "./node_modules/crc-32/crc32.js":
/*!**************************************!*\
  !*** ./node_modules/crc-32/crc32.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports) => {

/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */
/* vim: set ts=2: */
/*exported CRC32 */
var CRC32;
(function (factory) {
	/*jshint ignore:start */
	/*eslint-disable */
	if(typeof DO_NOT_EXPORT_CRC === 'undefined') {
		if(true) {
			factory(exports);
		} else // removed by dead control flow
{}
	} else {
		factory(CRC32 = {});
	}
	/*eslint-enable */
	/*jshint ignore:end */
}(function(CRC32) {
CRC32.version = '1.2.2';
/*global Int32Array */
function signed_crc_table() {
	var c = 0, table = new Array(256);

	for(var n =0; n != 256; ++n){
		c = n;
		c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
		c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
		c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
		c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
		c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
		c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
		c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
		c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
		table[n] = c;
	}

	return typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;
}

var T0 = signed_crc_table();
function slice_by_16_tables(T) {
	var c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;

	for(n = 0; n != 256; ++n) table[n] = T[n];
	for(n = 0; n != 256; ++n) {
		v = T[n];
		for(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];
	}
	var out = [];
	for(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);
	return out;
}
var TT = slice_by_16_tables(T0);
var T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];
var T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];
var Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];
function crc32_bstr(bstr, seed) {
	var C = seed ^ -1;
	for(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];
	return ~C;
}

function crc32_buf(B, seed) {
	var C = seed ^ -1, L = B.length - 15, i = 0;
	for(; i < L;) C =
		Tf[B[i++] ^ (C & 255)] ^
		Te[B[i++] ^ ((C >> 8) & 255)] ^
		Td[B[i++] ^ ((C >> 16) & 255)] ^
		Tc[B[i++] ^ (C >>> 24)] ^
		Tb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^
		T7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^
		T3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];
	L += 15;
	while(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];
	return ~C;
}

function crc32_str(str, seed) {
	var C = seed ^ -1;
	for(var i = 0, L = str.length, c = 0, d = 0; i < L;) {
		c = str.charCodeAt(i++);
		if(c < 0x80) {
			C = (C>>>8) ^ T0[(C^c)&0xFF];
		} else if(c < 0x800) {
			C = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];
			C = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];
		} else if(c >= 0xD800 && c < 0xE000) {
			c = (c&1023)+64; d = str.charCodeAt(i++)&1023;
			C = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];
			C = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];
			C = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];
			C = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];
		} else {
			C = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];
			C = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];
			C = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];
		}
	}
	return ~C;
}
CRC32.table = T0;
// $FlowIgnore
CRC32.bstr = crc32_bstr;
// $FlowIgnore
CRC32.buf = crc32_buf;
// $FlowIgnore
CRC32.str = crc32_str;
}));


/***/ }),

/***/ "./node_modules/destr/dist/index.mjs":
/*!*******************************************!*\
  !*** ./node_modules/destr/dist/index.mjs ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ destr),
/* harmony export */   destr: () => (/* binding */ destr),
/* harmony export */   safeDestr: () => (/* binding */ safeDestr)
/* harmony export */ });
const suspectProtoRx = /"(?:_|\\u0{2}5[Ff]){2}(?:p|\\u0{2}70)(?:r|\\u0{2}72)(?:o|\\u0{2}6[Ff])(?:t|\\u0{2}74)(?:o|\\u0{2}6[Ff])(?:_|\\u0{2}5[Ff]){2}"\s*:/;
const suspectConstructorRx = /"(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)"\s*:/;
const JsonSigRx = /^\s*["[{]|^\s*-?\d{1,16}(\.\d{1,17})?([Ee][+-]?\d+)?\s*$/;
function jsonParseTransform(key, value) {
  if (key === "__proto__" || key === "constructor" && value && typeof value === "object" && "prototype" in value) {
    warnKeyDropped(key);
    return;
  }
  return value;
}
function warnKeyDropped(key) {
  console.warn(`[destr] Dropping "${key}" key to prevent prototype pollution.`);
}
function destr(value, options = {}) {
  if (typeof value !== "string") {
    return value;
  }
  if (value[0] === '"' && value[value.length - 1] === '"' && value.indexOf("\\") === -1) {
    return value.slice(1, -1);
  }
  const _value = value.trim();
  if (_value.length <= 9) {
    switch (_value.toLowerCase()) {
      case "true": {
        return true;
      }
      case "false": {
        return false;
      }
      case "undefined": {
        return void 0;
      }
      case "null": {
        return null;
      }
      case "nan": {
        return Number.NaN;
      }
      case "infinity": {
        return Number.POSITIVE_INFINITY;
      }
      case "-infinity": {
        return Number.NEGATIVE_INFINITY;
      }
    }
  }
  if (!JsonSigRx.test(value)) {
    if (options.strict) {
      throw new SyntaxError("[destr] Invalid JSON");
    }
    return value;
  }
  try {
    if (suspectProtoRx.test(value) || suspectConstructorRx.test(value)) {
      if (options.strict) {
        throw new Error("[destr] Possible prototype pollution");
      }
      return JSON.parse(value, jsonParseTransform);
    }
    return JSON.parse(value);
  } catch (error) {
    if (options.strict) {
      throw error;
    }
    return value;
  }
}
function safeDestr(value, options = {}) {
  return destr(value, { ...options, strict: true });
}




/***/ }),

/***/ "./node_modules/events/events.js":
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/***/ ((module) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var R = typeof Reflect === 'object' ? Reflect : null
var ReflectApply = R && typeof R.apply === 'function'
  ? R.apply
  : function ReflectApply(target, receiver, args) {
    return Function.prototype.apply.call(target, receiver, args);
  }

var ReflectOwnKeys
if (R && typeof R.ownKeys === 'function') {
  ReflectOwnKeys = R.ownKeys
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target)
      .concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}

function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}

var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
}

function EventEmitter() {
  EventEmitter.init.call(this);
}
module.exports = EventEmitter;
module.exports.once = once;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

function checkListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }
}

Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function() {
    return defaultMaxListeners;
  },
  set: function(arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }
    defaultMaxListeners = arg;
  }
});

EventEmitter.init = function() {

  if (this._events === undefined ||
      this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
};

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }
  this._maxListeners = n;
  return this;
};

function _getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return _getMaxListeners(this);
};

EventEmitter.prototype.emit = function emit(type) {
  var args = [];
  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);
  var doError = (type === 'error');

  var events = this._events;
  if (events !== undefined)
    doError = (doError && events.error === undefined);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    var er;
    if (args.length > 0)
      er = args[0];
    if (er instanceof Error) {
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    }
    // At least give some kind of context to the user
    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }

  var handler = events[type];

  if (handler === undefined)
    return false;

  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      ReflectApply(listeners[i], this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  checkListener(listener);

  events = target._events;
  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type,
                  listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
        prepend ? [listener, existing] : [existing, listener];
      // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    }

    // Check for listener leak
    m = _getMaxListeners(target);
    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true;
      // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax
      var w = new Error('Possible EventEmitter memory leak detected. ' +
                          existing.length + ' ' + String(type) + ' listeners ' +
                          'added. Use emitter.setMaxListeners() to ' +
                          'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    if (arguments.length === 0)
      return this.listener.call(this.target);
    return this.listener.apply(this.target, arguments);
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  checkListener(listener);
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      checkListener(listener);
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      checkListener(listener);

      events = this._events;
      if (events === undefined)
        return this;

      list = events[type];
      if (list === undefined)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = Object.create(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else {
          spliceOne(list, position);
        }

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener !== undefined)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (events === undefined)
        return this;

      // not listening for removeListener, no need to emit
      if (events.removeListener === undefined) {
        if (arguments.length === 0) {
          this._events = Object.create(null);
          this._eventsCount = 0;
        } else if (events[type] !== undefined) {
          if (--this._eventsCount === 0)
            this._events = Object.create(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = Object.keys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = Object.create(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners !== undefined) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

function _listeners(target, type, unwrap) {
  var events = target._events;

  if (events === undefined)
    return [];

  var evlistener = events[type];
  if (evlistener === undefined)
    return [];

  if (typeof evlistener === 'function')
    return unwrap ? [evlistener.listener || evlistener] : [evlistener];

  return unwrap ?
    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events !== undefined) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function spliceOne(list, index) {
  for (; index + 1 < list.length; index++)
    list[index] = list[index + 1];
  list.pop();
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}

function once(emitter, name) {
  return new Promise(function (resolve, reject) {
    function errorListener(err) {
      emitter.removeListener(name, resolver);
      reject(err);
    }

    function resolver() {
      if (typeof emitter.removeListener === 'function') {
        emitter.removeListener('error', errorListener);
      }
      resolve([].slice.call(arguments));
    };

    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });
    if (name !== 'error') {
      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });
    }
  });
}

function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
  if (typeof emitter.on === 'function') {
    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);
  }
}

function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
  if (typeof emitter.on === 'function') {
    if (flags.once) {
      emitter.once(name, listener);
    } else {
      emitter.on(name, listener);
    }
  } else if (typeof emitter.addEventListener === 'function') {
    // EventTarget does not have `error` event semantics like Node
    // EventEmitters, we do not listen for `error` events here.
    emitter.addEventListener(name, function wrapListener(arg) {
      // IE does not have builtin `{ once: true }` support so we
      // have to do it manually.
      if (flags.once) {
        emitter.removeEventListener(name, wrapListener);
      }
      listener(arg);
    });
  } else {
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
  }
}


/***/ }),

/***/ "./node_modules/idb-keyval/dist/index.js":
/*!***********************************************!*\
  !*** ./node_modules/idb-keyval/dist/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   clear: () => (/* binding */ clear),
/* harmony export */   createStore: () => (/* binding */ createStore),
/* harmony export */   del: () => (/* binding */ del),
/* harmony export */   delMany: () => (/* binding */ delMany),
/* harmony export */   entries: () => (/* binding */ entries),
/* harmony export */   get: () => (/* binding */ get),
/* harmony export */   getMany: () => (/* binding */ getMany),
/* harmony export */   keys: () => (/* binding */ keys),
/* harmony export */   promisifyRequest: () => (/* binding */ promisifyRequest),
/* harmony export */   set: () => (/* binding */ set),
/* harmony export */   setMany: () => (/* binding */ setMany),
/* harmony export */   update: () => (/* binding */ update),
/* harmony export */   values: () => (/* binding */ values)
/* harmony export */ });
function promisifyRequest(request) {
    return new Promise((resolve, reject) => {
        // @ts-ignore - file size hacks
        request.oncomplete = request.onsuccess = () => resolve(request.result);
        // @ts-ignore - file size hacks
        request.onabort = request.onerror = () => reject(request.error);
    });
}
function createStore(dbName, storeName) {
    let dbp;
    const getDB = () => {
        if (dbp)
            return dbp;
        const request = indexedDB.open(dbName);
        request.onupgradeneeded = () => request.result.createObjectStore(storeName);
        dbp = promisifyRequest(request);
        dbp.then((db) => {
            // It seems like Safari sometimes likes to just close the connection.
            // It's supposed to fire this event when that happens. Let's hope it does!
            db.onclose = () => (dbp = undefined);
        }, () => { });
        return dbp;
    };
    return (txMode, callback) => getDB().then((db) => callback(db.transaction(storeName, txMode).objectStore(storeName)));
}
let defaultGetStoreFunc;
function defaultGetStore() {
    if (!defaultGetStoreFunc) {
        defaultGetStoreFunc = createStore('keyval-store', 'keyval');
    }
    return defaultGetStoreFunc;
}
/**
 * Get a value by its key.
 *
 * @param key
 * @param customStore Method to get a custom store. Use with caution (see the docs).
 */
function get(key, customStore = defaultGetStore()) {
    return customStore('readonly', (store) => promisifyRequest(store.get(key)));
}
/**
 * Set a value with a key.
 *
 * @param key
 * @param value
 * @param customStore Method to get a custom store. Use with caution (see the docs).
 */
function set(key, value, customStore = defaultGetStore()) {
    return customStore('readwrite', (store) => {
        store.put(value, key);
        return promisifyRequest(store.transaction);
    });
}
/**
 * Set multiple values at once. This is faster than calling set() multiple times.
 * It's also atomic – if one of the pairs can't be added, none will be added.
 *
 * @param entries Array of entries, where each entry is an array of `[key, value]`.
 * @param customStore Method to get a custom store. Use with caution (see the docs).
 */
function setMany(entries, customStore = defaultGetStore()) {
    return customStore('readwrite', (store) => {
        entries.forEach((entry) => store.put(entry[1], entry[0]));
        return promisifyRequest(store.transaction);
    });
}
/**
 * Get multiple values by their keys
 *
 * @param keys
 * @param customStore Method to get a custom store. Use with caution (see the docs).
 */
function getMany(keys, customStore = defaultGetStore()) {
    return customStore('readonly', (store) => Promise.all(keys.map((key) => promisifyRequest(store.get(key)))));
}
/**
 * Update a value. This lets you see the old value and update it as an atomic operation.
 *
 * @param key
 * @param updater A callback that takes the old value and returns a new value.
 * @param customStore Method to get a custom store. Use with caution (see the docs).
 */
function update(key, updater, customStore = defaultGetStore()) {
    return customStore('readwrite', (store) => 
    // Need to create the promise manually.
    // If I try to chain promises, the transaction closes in browsers
    // that use a promise polyfill (IE10/11).
    new Promise((resolve, reject) => {
        store.get(key).onsuccess = function () {
            try {
                store.put(updater(this.result), key);
                resolve(promisifyRequest(store.transaction));
            }
            catch (err) {
                reject(err);
            }
        };
    }));
}
/**
 * Delete a particular key from the store.
 *
 * @param key
 * @param customStore Method to get a custom store. Use with caution (see the docs).
 */
function del(key, customStore = defaultGetStore()) {
    return customStore('readwrite', (store) => {
        store.delete(key);
        return promisifyRequest(store.transaction);
    });
}
/**
 * Delete multiple keys at once.
 *
 * @param keys List of keys to delete.
 * @param customStore Method to get a custom store. Use with caution (see the docs).
 */
function delMany(keys, customStore = defaultGetStore()) {
    return customStore('readwrite', (store) => {
        keys.forEach((key) => store.delete(key));
        return promisifyRequest(store.transaction);
    });
}
/**
 * Clear all values in the store.
 *
 * @param customStore Method to get a custom store. Use with caution (see the docs).
 */
function clear(customStore = defaultGetStore()) {
    return customStore('readwrite', (store) => {
        store.clear();
        return promisifyRequest(store.transaction);
    });
}
function eachCursor(store, callback) {
    store.openCursor().onsuccess = function () {
        if (!this.result)
            return;
        callback(this.result);
        this.result.continue();
    };
    return promisifyRequest(store.transaction);
}
/**
 * Get all keys in the store.
 *
 * @param customStore Method to get a custom store. Use with caution (see the docs).
 */
function keys(customStore = defaultGetStore()) {
    return customStore('readonly', (store) => {
        // Fast path for modern browsers
        if (store.getAllKeys) {
            return promisifyRequest(store.getAllKeys());
        }
        const items = [];
        return eachCursor(store, (cursor) => items.push(cursor.key)).then(() => items);
    });
}
/**
 * Get all values in the store.
 *
 * @param customStore Method to get a custom store. Use with caution (see the docs).
 */
function values(customStore = defaultGetStore()) {
    return customStore('readonly', (store) => {
        // Fast path for modern browsers
        if (store.getAll) {
            return promisifyRequest(store.getAll());
        }
        const items = [];
        return eachCursor(store, (cursor) => items.push(cursor.value)).then(() => items);
    });
}
/**
 * Get all entries in the store. Each entry is an array of `[key, value]`.
 *
 * @param customStore Method to get a custom store. Use with caution (see the docs).
 */
function entries(customStore = defaultGetStore()) {
    return customStore('readonly', (store) => {
        // Fast path for modern browsers
        // (although, hopefully we'll get a simpler path some day)
        if (store.getAll && store.getAllKeys) {
            return Promise.all([
                promisifyRequest(store.getAllKeys()),
                promisifyRequest(store.getAll()),
            ]).then(([keys, values]) => keys.map((key, i) => [key, values[i]]));
        }
        const items = [];
        return customStore('readonly', (store) => eachCursor(store, (cursor) => items.push([cursor.key, cursor.value])).then(() => items));
    });
}




/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports) => {

/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),

/***/ "./node_modules/isomorphic-ws/browser.js":
/*!***********************************************!*\
  !*** ./node_modules/isomorphic-ws/browser.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// https://github.com/maxogden/websocket-stream/blob/48dc3ddf943e5ada668c31ccd94e9186f02fafbd/ws-fallback.js

var ws = null

if (typeof WebSocket !== 'undefined') {
  ws = WebSocket
} else if (typeof MozWebSocket !== 'undefined') {
  ws = MozWebSocket
} else if (typeof __webpack_require__.g !== 'undefined') {
  ws = __webpack_require__.g.WebSocket || __webpack_require__.g.MozWebSocket
} else if (typeof window !== 'undefined') {
  ws = window.WebSocket || window.MozWebSocket
} else if (typeof self !== 'undefined') {
  ws = self.WebSocket || self.MozWebSocket
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ws);


/***/ }),

/***/ "./node_modules/multiformats/esm/src/bases/base.js":
/*!*********************************************************!*\
  !*** ./node_modules/multiformats/esm/src/bases/base.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Codec: () => (/* binding */ Codec),
/* harmony export */   baseX: () => (/* binding */ baseX),
/* harmony export */   from: () => (/* binding */ from),
/* harmony export */   or: () => (/* binding */ or),
/* harmony export */   rfc4648: () => (/* binding */ rfc4648)
/* harmony export */ });
/* harmony import */ var _vendor_base_x_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../vendor/base-x.js */ "./node_modules/multiformats/esm/vendor/base-x.js");
/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bytes.js */ "./node_modules/multiformats/esm/src/bytes.js");


class Encoder {
  constructor(name, prefix, baseEncode) {
    this.name = name;
    this.prefix = prefix;
    this.baseEncode = baseEncode;
  }
  encode(bytes) {
    if (bytes instanceof Uint8Array) {
      return `${ this.prefix }${ this.baseEncode(bytes) }`;
    } else {
      throw Error('Unknown type, must be binary type');
    }
  }
}
class Decoder {
  constructor(name, prefix, baseDecode) {
    this.name = name;
    this.prefix = prefix;
    if (prefix.codePointAt(0) === undefined) {
      throw new Error('Invalid prefix character');
    }
    this.prefixCodePoint = prefix.codePointAt(0);
    this.baseDecode = baseDecode;
  }
  decode(text) {
    if (typeof text === 'string') {
      if (text.codePointAt(0) !== this.prefixCodePoint) {
        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);
      }
      return this.baseDecode(text.slice(this.prefix.length));
    } else {
      throw Error('Can only multibase decode strings');
    }
  }
  or(decoder) {
    return or(this, decoder);
  }
}
class ComposedDecoder {
  constructor(decoders) {
    this.decoders = decoders;
  }
  or(decoder) {
    return or(this, decoder);
  }
  decode(input) {
    const prefix = input[0];
    const decoder = this.decoders[prefix];
    if (decoder) {
      return decoder.decode(input);
    } else {
      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);
    }
  }
}
const or = (left, right) => new ComposedDecoder({
  ...left.decoders || { [left.prefix]: left },
  ...right.decoders || { [right.prefix]: right }
});
class Codec {
  constructor(name, prefix, baseEncode, baseDecode) {
    this.name = name;
    this.prefix = prefix;
    this.baseEncode = baseEncode;
    this.baseDecode = baseDecode;
    this.encoder = new Encoder(name, prefix, baseEncode);
    this.decoder = new Decoder(name, prefix, baseDecode);
  }
  encode(input) {
    return this.encoder.encode(input);
  }
  decode(input) {
    return this.decoder.decode(input);
  }
}
const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);
const baseX = ({prefix, name, alphabet}) => {
  const {encode, decode} = (0,_vendor_base_x_js__WEBPACK_IMPORTED_MODULE_0__["default"])(alphabet, name);
  return from({
    prefix,
    name,
    encode,
    decode: text => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.coerce)(decode(text))
  });
};
const decode = (string, alphabet, bitsPerChar, name) => {
  const codes = {};
  for (let i = 0; i < alphabet.length; ++i) {
    codes[alphabet[i]] = i;
  }
  let end = string.length;
  while (string[end - 1] === '=') {
    --end;
  }
  const out = new Uint8Array(end * bitsPerChar / 8 | 0);
  let bits = 0;
  let buffer = 0;
  let written = 0;
  for (let i = 0; i < end; ++i) {
    const value = codes[string[i]];
    if (value === undefined) {
      throw new SyntaxError(`Non-${ name } character`);
    }
    buffer = buffer << bitsPerChar | value;
    bits += bitsPerChar;
    if (bits >= 8) {
      bits -= 8;
      out[written++] = 255 & buffer >> bits;
    }
  }
  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {
    throw new SyntaxError('Unexpected end of data');
  }
  return out;
};
const encode = (data, alphabet, bitsPerChar) => {
  const pad = alphabet[alphabet.length - 1] === '=';
  const mask = (1 << bitsPerChar) - 1;
  let out = '';
  let bits = 0;
  let buffer = 0;
  for (let i = 0; i < data.length; ++i) {
    buffer = buffer << 8 | data[i];
    bits += 8;
    while (bits > bitsPerChar) {
      bits -= bitsPerChar;
      out += alphabet[mask & buffer >> bits];
    }
  }
  if (bits) {
    out += alphabet[mask & buffer << bitsPerChar - bits];
  }
  if (pad) {
    while (out.length * bitsPerChar & 7) {
      out += '=';
    }
  }
  return out;
};
const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {
  return from({
    prefix,
    name,
    encode(input) {
      return encode(input, alphabet, bitsPerChar);
    },
    decode(input) {
      return decode(input, alphabet, bitsPerChar, name);
    }
  });
};

/***/ }),

/***/ "./node_modules/multiformats/esm/src/bases/base10.js":
/*!***********************************************************!*\
  !*** ./node_modules/multiformats/esm/src/bases/base10.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   base10: () => (/* binding */ base10)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/multiformats/esm/src/bases/base.js");

const base10 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({
  prefix: '9',
  name: 'base10',
  alphabet: '0123456789'
});

/***/ }),

/***/ "./node_modules/multiformats/esm/src/bases/base16.js":
/*!***********************************************************!*\
  !*** ./node_modules/multiformats/esm/src/bases/base16.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   base16: () => (/* binding */ base16),
/* harmony export */   base16upper: () => (/* binding */ base16upper)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/multiformats/esm/src/bases/base.js");

const base16 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({
  prefix: 'f',
  name: 'base16',
  alphabet: '0123456789abcdef',
  bitsPerChar: 4
});
const base16upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({
  prefix: 'F',
  name: 'base16upper',
  alphabet: '0123456789ABCDEF',
  bitsPerChar: 4
});

/***/ }),

/***/ "./node_modules/multiformats/esm/src/bases/base2.js":
/*!**********************************************************!*\
  !*** ./node_modules/multiformats/esm/src/bases/base2.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   base2: () => (/* binding */ base2)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/multiformats/esm/src/bases/base.js");

const base2 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({
  prefix: '0',
  name: 'base2',
  alphabet: '01',
  bitsPerChar: 1
});

/***/ }),

/***/ "./node_modules/multiformats/esm/src/bases/base256emoji.js":
/*!*****************************************************************!*\
  !*** ./node_modules/multiformats/esm/src/bases/base256emoji.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   base256emoji: () => (/* binding */ base256emoji)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/multiformats/esm/src/bases/base.js");

const alphabet = Array.from('\uD83D\uDE80\uD83E\uDE90\u2604\uD83D\uDEF0\uD83C\uDF0C\uD83C\uDF11\uD83C\uDF12\uD83C\uDF13\uD83C\uDF14\uD83C\uDF15\uD83C\uDF16\uD83C\uDF17\uD83C\uDF18\uD83C\uDF0D\uD83C\uDF0F\uD83C\uDF0E\uD83D\uDC09\u2600\uD83D\uDCBB\uD83D\uDDA5\uD83D\uDCBE\uD83D\uDCBF\uD83D\uDE02\u2764\uD83D\uDE0D\uD83E\uDD23\uD83D\uDE0A\uD83D\uDE4F\uD83D\uDC95\uD83D\uDE2D\uD83D\uDE18\uD83D\uDC4D\uD83D\uDE05\uD83D\uDC4F\uD83D\uDE01\uD83D\uDD25\uD83E\uDD70\uD83D\uDC94\uD83D\uDC96\uD83D\uDC99\uD83D\uDE22\uD83E\uDD14\uD83D\uDE06\uD83D\uDE44\uD83D\uDCAA\uD83D\uDE09\u263A\uD83D\uDC4C\uD83E\uDD17\uD83D\uDC9C\uD83D\uDE14\uD83D\uDE0E\uD83D\uDE07\uD83C\uDF39\uD83E\uDD26\uD83C\uDF89\uD83D\uDC9E\u270C\u2728\uD83E\uDD37\uD83D\uDE31\uD83D\uDE0C\uD83C\uDF38\uD83D\uDE4C\uD83D\uDE0B\uD83D\uDC97\uD83D\uDC9A\uD83D\uDE0F\uD83D\uDC9B\uD83D\uDE42\uD83D\uDC93\uD83E\uDD29\uD83D\uDE04\uD83D\uDE00\uD83D\uDDA4\uD83D\uDE03\uD83D\uDCAF\uD83D\uDE48\uD83D\uDC47\uD83C\uDFB6\uD83D\uDE12\uD83E\uDD2D\u2763\uD83D\uDE1C\uD83D\uDC8B\uD83D\uDC40\uD83D\uDE2A\uD83D\uDE11\uD83D\uDCA5\uD83D\uDE4B\uD83D\uDE1E\uD83D\uDE29\uD83D\uDE21\uD83E\uDD2A\uD83D\uDC4A\uD83E\uDD73\uD83D\uDE25\uD83E\uDD24\uD83D\uDC49\uD83D\uDC83\uD83D\uDE33\u270B\uD83D\uDE1A\uD83D\uDE1D\uD83D\uDE34\uD83C\uDF1F\uD83D\uDE2C\uD83D\uDE43\uD83C\uDF40\uD83C\uDF37\uD83D\uDE3B\uD83D\uDE13\u2B50\u2705\uD83E\uDD7A\uD83C\uDF08\uD83D\uDE08\uD83E\uDD18\uD83D\uDCA6\u2714\uD83D\uDE23\uD83C\uDFC3\uD83D\uDC90\u2639\uD83C\uDF8A\uD83D\uDC98\uD83D\uDE20\u261D\uD83D\uDE15\uD83C\uDF3A\uD83C\uDF82\uD83C\uDF3B\uD83D\uDE10\uD83D\uDD95\uD83D\uDC9D\uD83D\uDE4A\uD83D\uDE39\uD83D\uDDE3\uD83D\uDCAB\uD83D\uDC80\uD83D\uDC51\uD83C\uDFB5\uD83E\uDD1E\uD83D\uDE1B\uD83D\uDD34\uD83D\uDE24\uD83C\uDF3C\uD83D\uDE2B\u26BD\uD83E\uDD19\u2615\uD83C\uDFC6\uD83E\uDD2B\uD83D\uDC48\uD83D\uDE2E\uD83D\uDE46\uD83C\uDF7B\uD83C\uDF43\uD83D\uDC36\uD83D\uDC81\uD83D\uDE32\uD83C\uDF3F\uD83E\uDDE1\uD83C\uDF81\u26A1\uD83C\uDF1E\uD83C\uDF88\u274C\u270A\uD83D\uDC4B\uD83D\uDE30\uD83E\uDD28\uD83D\uDE36\uD83E\uDD1D\uD83D\uDEB6\uD83D\uDCB0\uD83C\uDF53\uD83D\uDCA2\uD83E\uDD1F\uD83D\uDE41\uD83D\uDEA8\uD83D\uDCA8\uD83E\uDD2C\u2708\uD83C\uDF80\uD83C\uDF7A\uD83E\uDD13\uD83D\uDE19\uD83D\uDC9F\uD83C\uDF31\uD83D\uDE16\uD83D\uDC76\uD83E\uDD74\u25B6\u27A1\u2753\uD83D\uDC8E\uD83D\uDCB8\u2B07\uD83D\uDE28\uD83C\uDF1A\uD83E\uDD8B\uD83D\uDE37\uD83D\uDD7A\u26A0\uD83D\uDE45\uD83D\uDE1F\uD83D\uDE35\uD83D\uDC4E\uD83E\uDD32\uD83E\uDD20\uD83E\uDD27\uD83D\uDCCC\uD83D\uDD35\uD83D\uDC85\uD83E\uDDD0\uD83D\uDC3E\uD83C\uDF52\uD83D\uDE17\uD83E\uDD11\uD83C\uDF0A\uD83E\uDD2F\uD83D\uDC37\u260E\uD83D\uDCA7\uD83D\uDE2F\uD83D\uDC86\uD83D\uDC46\uD83C\uDFA4\uD83D\uDE47\uD83C\uDF51\u2744\uD83C\uDF34\uD83D\uDCA3\uD83D\uDC38\uD83D\uDC8C\uD83D\uDCCD\uD83E\uDD40\uD83E\uDD22\uD83D\uDC45\uD83D\uDCA1\uD83D\uDCA9\uD83D\uDC50\uD83D\uDCF8\uD83D\uDC7B\uD83E\uDD10\uD83E\uDD2E\uD83C\uDFBC\uD83E\uDD75\uD83D\uDEA9\uD83C\uDF4E\uD83C\uDF4A\uD83D\uDC7C\uD83D\uDC8D\uD83D\uDCE3\uD83E\uDD42');
const alphabetBytesToChars = alphabet.reduce((p, c, i) => {
  p[i] = c;
  return p;
}, []);
const alphabetCharsToBytes = alphabet.reduce((p, c, i) => {
  p[c.codePointAt(0)] = i;
  return p;
}, []);
function encode(data) {
  return data.reduce((p, c) => {
    p += alphabetBytesToChars[c];
    return p;
  }, '');
}
function decode(str) {
  const byts = [];
  for (const char of str) {
    const byt = alphabetCharsToBytes[char.codePointAt(0)];
    if (byt === undefined) {
      throw new Error(`Non-base256emoji character: ${ char }`);
    }
    byts.push(byt);
  }
  return new Uint8Array(byts);
}
const base256emoji = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.from)({
  prefix: '\uD83D\uDE80',
  name: 'base256emoji',
  encode,
  decode
});

/***/ }),

/***/ "./node_modules/multiformats/esm/src/bases/base32.js":
/*!***********************************************************!*\
  !*** ./node_modules/multiformats/esm/src/bases/base32.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   base32: () => (/* binding */ base32),
/* harmony export */   base32hex: () => (/* binding */ base32hex),
/* harmony export */   base32hexpad: () => (/* binding */ base32hexpad),
/* harmony export */   base32hexpadupper: () => (/* binding */ base32hexpadupper),
/* harmony export */   base32hexupper: () => (/* binding */ base32hexupper),
/* harmony export */   base32pad: () => (/* binding */ base32pad),
/* harmony export */   base32padupper: () => (/* binding */ base32padupper),
/* harmony export */   base32upper: () => (/* binding */ base32upper),
/* harmony export */   base32z: () => (/* binding */ base32z)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/multiformats/esm/src/bases/base.js");

const base32 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({
  prefix: 'b',
  name: 'base32',
  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',
  bitsPerChar: 5
});
const base32upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({
  prefix: 'B',
  name: 'base32upper',
  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',
  bitsPerChar: 5
});
const base32pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({
  prefix: 'c',
  name: 'base32pad',
  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',
  bitsPerChar: 5
});
const base32padupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({
  prefix: 'C',
  name: 'base32padupper',
  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',
  bitsPerChar: 5
});
const base32hex = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({
  prefix: 'v',
  name: 'base32hex',
  alphabet: '0123456789abcdefghijklmnopqrstuv',
  bitsPerChar: 5
});
const base32hexupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({
  prefix: 'V',
  name: 'base32hexupper',
  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',
  bitsPerChar: 5
});
const base32hexpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({
  prefix: 't',
  name: 'base32hexpad',
  alphabet: '0123456789abcdefghijklmnopqrstuv=',
  bitsPerChar: 5
});
const base32hexpadupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({
  prefix: 'T',
  name: 'base32hexpadupper',
  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',
  bitsPerChar: 5
});
const base32z = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({
  prefix: 'h',
  name: 'base32z',
  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',
  bitsPerChar: 5
});

/***/ }),

/***/ "./node_modules/multiformats/esm/src/bases/base36.js":
/*!***********************************************************!*\
  !*** ./node_modules/multiformats/esm/src/bases/base36.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   base36: () => (/* binding */ base36),
/* harmony export */   base36upper: () => (/* binding */ base36upper)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/multiformats/esm/src/bases/base.js");

const base36 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({
  prefix: 'k',
  name: 'base36',
  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'
});
const base36upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({
  prefix: 'K',
  name: 'base36upper',
  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'
});

/***/ }),

/***/ "./node_modules/multiformats/esm/src/bases/base58.js":
/*!***********************************************************!*\
  !*** ./node_modules/multiformats/esm/src/bases/base58.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   base58btc: () => (/* binding */ base58btc),
/* harmony export */   base58flickr: () => (/* binding */ base58flickr)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/multiformats/esm/src/bases/base.js");

const base58btc = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({
  name: 'base58btc',
  prefix: 'z',
  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'
});
const base58flickr = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({
  name: 'base58flickr',
  prefix: 'Z',
  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'
});

/***/ }),

/***/ "./node_modules/multiformats/esm/src/bases/base64.js":
/*!***********************************************************!*\
  !*** ./node_modules/multiformats/esm/src/bases/base64.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   base64: () => (/* binding */ base64),
/* harmony export */   base64pad: () => (/* binding */ base64pad),
/* harmony export */   base64url: () => (/* binding */ base64url),
/* harmony export */   base64urlpad: () => (/* binding */ base64urlpad)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/multiformats/esm/src/bases/base.js");

const base64 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({
  prefix: 'm',
  name: 'base64',
  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',
  bitsPerChar: 6
});
const base64pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({
  prefix: 'M',
  name: 'base64pad',
  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',
  bitsPerChar: 6
});
const base64url = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({
  prefix: 'u',
  name: 'base64url',
  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',
  bitsPerChar: 6
});
const base64urlpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({
  prefix: 'U',
  name: 'base64urlpad',
  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',
  bitsPerChar: 6
});

/***/ }),

/***/ "./node_modules/multiformats/esm/src/bases/base8.js":
/*!**********************************************************!*\
  !*** ./node_modules/multiformats/esm/src/bases/base8.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   base8: () => (/* binding */ base8)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/multiformats/esm/src/bases/base.js");

const base8 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({
  prefix: '7',
  name: 'base8',
  alphabet: '01234567',
  bitsPerChar: 3
});

/***/ }),

/***/ "./node_modules/multiformats/esm/src/bases/identity.js":
/*!*************************************************************!*\
  !*** ./node_modules/multiformats/esm/src/bases/identity.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   identity: () => (/* binding */ identity)
/* harmony export */ });
/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ "./node_modules/multiformats/esm/src/bases/base.js");
/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bytes.js */ "./node_modules/multiformats/esm/src/bytes.js");


const identity = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.from)({
  prefix: '\0',
  name: 'identity',
  encode: buf => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.toString)(buf),
  decode: str => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.fromString)(str)
});

/***/ }),

/***/ "./node_modules/multiformats/esm/src/basics.js":
/*!*****************************************************!*\
  !*** ./node_modules/multiformats/esm/src/basics.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CID: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.CID),
/* harmony export */   bases: () => (/* binding */ bases),
/* harmony export */   bytes: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.bytes),
/* harmony export */   codecs: () => (/* binding */ codecs),
/* harmony export */   digest: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.digest),
/* harmony export */   hasher: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.hasher),
/* harmony export */   hashes: () => (/* binding */ hashes),
/* harmony export */   varint: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.varint)
/* harmony export */ });
/* harmony import */ var _bases_identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/identity.js */ "./node_modules/multiformats/esm/src/bases/identity.js");
/* harmony import */ var _bases_base2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bases/base2.js */ "./node_modules/multiformats/esm/src/bases/base2.js");
/* harmony import */ var _bases_base8_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bases/base8.js */ "./node_modules/multiformats/esm/src/bases/base8.js");
/* harmony import */ var _bases_base10_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bases/base10.js */ "./node_modules/multiformats/esm/src/bases/base10.js");
/* harmony import */ var _bases_base16_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bases/base16.js */ "./node_modules/multiformats/esm/src/bases/base16.js");
/* harmony import */ var _bases_base32_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./bases/base32.js */ "./node_modules/multiformats/esm/src/bases/base32.js");
/* harmony import */ var _bases_base36_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./bases/base36.js */ "./node_modules/multiformats/esm/src/bases/base36.js");
/* harmony import */ var _bases_base58_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./bases/base58.js */ "./node_modules/multiformats/esm/src/bases/base58.js");
/* harmony import */ var _bases_base64_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./bases/base64.js */ "./node_modules/multiformats/esm/src/bases/base64.js");
/* harmony import */ var _bases_base256emoji_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./bases/base256emoji.js */ "./node_modules/multiformats/esm/src/bases/base256emoji.js");
/* harmony import */ var _hashes_sha2_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./hashes/sha2.js */ "./node_modules/multiformats/esm/src/hashes/sha2-browser.js");
/* harmony import */ var _hashes_identity_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./hashes/identity.js */ "./node_modules/multiformats/esm/src/hashes/identity.js");
/* harmony import */ var _codecs_raw_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./codecs/raw.js */ "./node_modules/multiformats/esm/src/codecs/raw.js");
/* harmony import */ var _codecs_json_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./codecs/json.js */ "./node_modules/multiformats/esm/src/codecs/json.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./index.js */ "./node_modules/multiformats/esm/src/index.js");















const bases = {
  ..._bases_identity_js__WEBPACK_IMPORTED_MODULE_0__,
  ..._bases_base2_js__WEBPACK_IMPORTED_MODULE_1__,
  ..._bases_base8_js__WEBPACK_IMPORTED_MODULE_2__,
  ..._bases_base10_js__WEBPACK_IMPORTED_MODULE_3__,
  ..._bases_base16_js__WEBPACK_IMPORTED_MODULE_4__,
  ..._bases_base32_js__WEBPACK_IMPORTED_MODULE_5__,
  ..._bases_base36_js__WEBPACK_IMPORTED_MODULE_6__,
  ..._bases_base58_js__WEBPACK_IMPORTED_MODULE_7__,
  ..._bases_base64_js__WEBPACK_IMPORTED_MODULE_8__,
  ..._bases_base256emoji_js__WEBPACK_IMPORTED_MODULE_9__
};
const hashes = {
  ..._hashes_sha2_js__WEBPACK_IMPORTED_MODULE_10__,
  ..._hashes_identity_js__WEBPACK_IMPORTED_MODULE_11__
};
const codecs = {
  raw: _codecs_raw_js__WEBPACK_IMPORTED_MODULE_12__,
  json: _codecs_json_js__WEBPACK_IMPORTED_MODULE_13__
};


/***/ }),

/***/ "./node_modules/multiformats/esm/src/bytes.js":
/*!****************************************************!*\
  !*** ./node_modules/multiformats/esm/src/bytes.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   coerce: () => (/* binding */ coerce),
/* harmony export */   empty: () => (/* binding */ empty),
/* harmony export */   equals: () => (/* binding */ equals),
/* harmony export */   fromHex: () => (/* binding */ fromHex),
/* harmony export */   fromString: () => (/* binding */ fromString),
/* harmony export */   isBinary: () => (/* binding */ isBinary),
/* harmony export */   toHex: () => (/* binding */ toHex),
/* harmony export */   toString: () => (/* binding */ toString)
/* harmony export */ });
const empty = new Uint8Array(0);
const toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');
const fromHex = hex => {
  const hexes = hex.match(/../g);
  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;
};
const equals = (aa, bb) => {
  if (aa === bb)
    return true;
  if (aa.byteLength !== bb.byteLength) {
    return false;
  }
  for (let ii = 0; ii < aa.byteLength; ii++) {
    if (aa[ii] !== bb[ii]) {
      return false;
    }
  }
  return true;
};
const coerce = o => {
  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')
    return o;
  if (o instanceof ArrayBuffer)
    return new Uint8Array(o);
  if (ArrayBuffer.isView(o)) {
    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);
  }
  throw new Error('Unknown type, must be binary type');
};
const isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);
const fromString = str => new TextEncoder().encode(str);
const toString = b => new TextDecoder().decode(b);


/***/ }),

/***/ "./node_modules/multiformats/esm/src/cid.js":
/*!**************************************************!*\
  !*** ./node_modules/multiformats/esm/src/cid.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CID: () => (/* binding */ CID)
/* harmony export */ });
/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./varint.js */ "./node_modules/multiformats/esm/src/varint.js");
/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hashes/digest.js */ "./node_modules/multiformats/esm/src/hashes/digest.js");
/* harmony import */ var _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bases/base58.js */ "./node_modules/multiformats/esm/src/bases/base58.js");
/* harmony import */ var _bases_base32_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bases/base32.js */ "./node_modules/multiformats/esm/src/bases/base32.js");
/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bytes.js */ "./node_modules/multiformats/esm/src/bytes.js");





class CID {
  constructor(version, code, multihash, bytes) {
    this.code = code;
    this.version = version;
    this.multihash = multihash;
    this.bytes = bytes;
    this.byteOffset = bytes.byteOffset;
    this.byteLength = bytes.byteLength;
    this.asCID = this;
    this._baseCache = new Map();
    Object.defineProperties(this, {
      byteOffset: hidden,
      byteLength: hidden,
      code: readonly,
      version: readonly,
      multihash: readonly,
      bytes: readonly,
      _baseCache: hidden,
      asCID: hidden
    });
  }
  toV0() {
    switch (this.version) {
    case 0: {
        return this;
      }
    default: {
        const {code, multihash} = this;
        if (code !== DAG_PB_CODE) {
          throw new Error('Cannot convert a non dag-pb CID to CIDv0');
        }
        if (multihash.code !== SHA_256_CODE) {
          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');
        }
        return CID.createV0(multihash);
      }
    }
  }
  toV1() {
    switch (this.version) {
    case 0: {
        const {code, digest} = this.multihash;
        const multihash = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_1__.create(code, digest);
        return CID.createV1(this.code, multihash);
      }
    case 1: {
        return this;
      }
    default: {
        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);
      }
    }
  }
  equals(other) {
    return other && this.code === other.code && this.version === other.version && _hashes_digest_js__WEBPACK_IMPORTED_MODULE_1__.equals(this.multihash, other.multihash);
  }
  toString(base) {
    const {bytes, version, _baseCache} = this;
    switch (version) {
    case 0:
      return toStringV0(bytes, _baseCache, base || _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.encoder);
    default:
      return toStringV1(bytes, _baseCache, base || _bases_base32_js__WEBPACK_IMPORTED_MODULE_3__.base32.encoder);
    }
  }
  toJSON() {
    return {
      code: this.code,
      version: this.version,
      hash: this.multihash.bytes
    };
  }
  get [Symbol.toStringTag]() {
    return 'CID';
  }
  [Symbol.for('nodejs.util.inspect.custom')]() {
    return 'CID(' + this.toString() + ')';
  }
  static isCID(value) {
    deprecate(/^0\.0/, IS_CID_DEPRECATION);
    return !!(value && (value[cidSymbol] || value.asCID === value));
  }
  get toBaseEncodedString() {
    throw new Error('Deprecated, use .toString()');
  }
  get codec() {
    throw new Error('"codec" property is deprecated, use integer "code" property instead');
  }
  get buffer() {
    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');
  }
  get multibaseName() {
    throw new Error('"multibaseName" property is deprecated');
  }
  get prefix() {
    throw new Error('"prefix" property is deprecated');
  }
  static asCID(value) {
    if (value instanceof CID) {
      return value;
    } else if (value != null && value.asCID === value) {
      const {version, code, multihash, bytes} = value;
      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));
    } else if (value != null && value[cidSymbol] === true) {
      const {version, multihash, code} = value;
      const digest = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_1__.decode(multihash);
      return CID.create(version, code, digest);
    } else {
      return null;
    }
  }
  static create(version, code, digest) {
    if (typeof code !== 'number') {
      throw new Error('String codecs are no longer supported');
    }
    switch (version) {
    case 0: {
        if (code !== DAG_PB_CODE) {
          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);
        } else {
          return new CID(version, code, digest, digest.bytes);
        }
      }
    case 1: {
        const bytes = encodeCID(version, code, digest.bytes);
        return new CID(version, code, digest, bytes);
      }
    default: {
        throw new Error('Invalid version');
      }
    }
  }
  static createV0(digest) {
    return CID.create(0, DAG_PB_CODE, digest);
  }
  static createV1(code, digest) {
    return CID.create(1, code, digest);
  }
  static decode(bytes) {
    const [cid, remainder] = CID.decodeFirst(bytes);
    if (remainder.length) {
      throw new Error('Incorrect length');
    }
    return cid;
  }
  static decodeFirst(bytes) {
    const specs = CID.inspectBytes(bytes);
    const prefixSize = specs.size - specs.multihashSize;
    const multihashBytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_4__.coerce)(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));
    if (multihashBytes.byteLength !== specs.multihashSize) {
      throw new Error('Incorrect length');
    }
    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);
    const digest = new _hashes_digest_js__WEBPACK_IMPORTED_MODULE_1__.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);
    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);
    return [
      cid,
      bytes.subarray(specs.size)
    ];
  }
  static inspectBytes(initialBytes) {
    let offset = 0;
    const next = () => {
      const [i, length] = _varint_js__WEBPACK_IMPORTED_MODULE_0__.decode(initialBytes.subarray(offset));
      offset += length;
      return i;
    };
    let version = next();
    let codec = DAG_PB_CODE;
    if (version === 18) {
      version = 0;
      offset = 0;
    } else if (version === 1) {
      codec = next();
    }
    if (version !== 0 && version !== 1) {
      throw new RangeError(`Invalid CID version ${ version }`);
    }
    const prefixSize = offset;
    const multihashCode = next();
    const digestSize = next();
    const size = offset + digestSize;
    const multihashSize = size - prefixSize;
    return {
      version,
      codec,
      multihashCode,
      digestSize,
      multihashSize,
      size
    };
  }
  static parse(source, base) {
    const [prefix, bytes] = parseCIDtoBytes(source, base);
    const cid = CID.decode(bytes);
    cid._baseCache.set(prefix, source);
    return cid;
  }
}
const parseCIDtoBytes = (source, base) => {
  switch (source[0]) {
  case 'Q': {
      const decoder = base || _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc;
      return [
        _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix,
        decoder.decode(`${ _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix }${ source }`)
      ];
    }
  case _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix: {
      const decoder = base || _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc;
      return [
        _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix,
        decoder.decode(source)
      ];
    }
  case _bases_base32_js__WEBPACK_IMPORTED_MODULE_3__.base32.prefix: {
      const decoder = base || _bases_base32_js__WEBPACK_IMPORTED_MODULE_3__.base32;
      return [
        _bases_base32_js__WEBPACK_IMPORTED_MODULE_3__.base32.prefix,
        decoder.decode(source)
      ];
    }
  default: {
      if (base == null) {
        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');
      }
      return [
        source[0],
        base.decode(source)
      ];
    }
  }
};
const toStringV0 = (bytes, cache, base) => {
  const {prefix} = base;
  if (prefix !== _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix) {
    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);
  }
  const cid = cache.get(prefix);
  if (cid == null) {
    const cid = base.encode(bytes).slice(1);
    cache.set(prefix, cid);
    return cid;
  } else {
    return cid;
  }
};
const toStringV1 = (bytes, cache, base) => {
  const {prefix} = base;
  const cid = cache.get(prefix);
  if (cid == null) {
    const cid = base.encode(bytes);
    cache.set(prefix, cid);
    return cid;
  } else {
    return cid;
  }
};
const DAG_PB_CODE = 112;
const SHA_256_CODE = 18;
const encodeCID = (version, code, multihash) => {
  const codeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_0__.encodingLength(version);
  const hashOffset = codeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_0__.encodingLength(code);
  const bytes = new Uint8Array(hashOffset + multihash.byteLength);
  _varint_js__WEBPACK_IMPORTED_MODULE_0__.encodeTo(version, bytes, 0);
  _varint_js__WEBPACK_IMPORTED_MODULE_0__.encodeTo(code, bytes, codeOffset);
  bytes.set(multihash, hashOffset);
  return bytes;
};
const cidSymbol = Symbol.for('@ipld/js-cid/CID');
const readonly = {
  writable: false,
  configurable: false,
  enumerable: true
};
const hidden = {
  writable: false,
  enumerable: false,
  configurable: false
};
const version = '0.0.0-dev';
const deprecate = (range, message) => {
  if (range.test(version)) {
    console.warn(message);
  } else {
    throw new Error(message);
  }
};
const IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.
Following code pattern:

if (CID.isCID(value)) {
  doSomethingWithCID(value)
}

Is replaced with:

const cid = CID.asCID(value)
if (cid) {
  // Make sure to use cid instead of value
  doSomethingWithCID(cid)
}
`;

/***/ }),

/***/ "./node_modules/multiformats/esm/src/codecs/json.js":
/*!**********************************************************!*\
  !*** ./node_modules/multiformats/esm/src/codecs/json.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   code: () => (/* binding */ code),
/* harmony export */   decode: () => (/* binding */ decode),
/* harmony export */   encode: () => (/* binding */ encode),
/* harmony export */   name: () => (/* binding */ name)
/* harmony export */ });
const textEncoder = new TextEncoder();
const textDecoder = new TextDecoder();
const name = 'json';
const code = 512;
const encode = node => textEncoder.encode(JSON.stringify(node));
const decode = data => JSON.parse(textDecoder.decode(data));

/***/ }),

/***/ "./node_modules/multiformats/esm/src/codecs/raw.js":
/*!*********************************************************!*\
  !*** ./node_modules/multiformats/esm/src/codecs/raw.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   code: () => (/* binding */ code),
/* harmony export */   decode: () => (/* binding */ decode),
/* harmony export */   encode: () => (/* binding */ encode),
/* harmony export */   name: () => (/* binding */ name)
/* harmony export */ });
/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ "./node_modules/multiformats/esm/src/bytes.js");

const name = 'raw';
const code = 85;
const encode = node => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(node);
const decode = data => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(data);

/***/ }),

/***/ "./node_modules/multiformats/esm/src/hashes/digest.js":
/*!************************************************************!*\
  !*** ./node_modules/multiformats/esm/src/hashes/digest.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Digest: () => (/* binding */ Digest),
/* harmony export */   create: () => (/* binding */ create),
/* harmony export */   decode: () => (/* binding */ decode),
/* harmony export */   equals: () => (/* binding */ equals)
/* harmony export */ });
/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ "./node_modules/multiformats/esm/src/bytes.js");
/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../varint.js */ "./node_modules/multiformats/esm/src/varint.js");


const create = (code, digest) => {
  const size = digest.byteLength;
  const sizeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(code);
  const digestOffset = sizeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(size);
  const bytes = new Uint8Array(digestOffset + size);
  _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(code, bytes, 0);
  _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(size, bytes, sizeOffset);
  bytes.set(digest, digestOffset);
  return new Digest(code, size, digest, bytes);
};
const decode = multihash => {
  const bytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(multihash);
  const [code, sizeOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes);
  const [size, digestOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes.subarray(sizeOffset));
  const digest = bytes.subarray(sizeOffset + digestOffset);
  if (digest.byteLength !== size) {
    throw new Error('Incorrect length');
  }
  return new Digest(code, size, digest, bytes);
};
const equals = (a, b) => {
  if (a === b) {
    return true;
  } else {
    return a.code === b.code && a.size === b.size && (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.equals)(a.bytes, b.bytes);
  }
};
class Digest {
  constructor(code, size, digest, bytes) {
    this.code = code;
    this.size = size;
    this.digest = digest;
    this.bytes = bytes;
  }
}

/***/ }),

/***/ "./node_modules/multiformats/esm/src/hashes/hasher.js":
/*!************************************************************!*\
  !*** ./node_modules/multiformats/esm/src/hashes/hasher.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Hasher: () => (/* binding */ Hasher),
/* harmony export */   from: () => (/* binding */ from)
/* harmony export */ });
/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./digest.js */ "./node_modules/multiformats/esm/src/hashes/digest.js");

const from = ({name, code, encode}) => new Hasher(name, code, encode);
class Hasher {
  constructor(name, code, encode) {
    this.name = name;
    this.code = code;
    this.encode = encode;
  }
  digest(input) {
    if (input instanceof Uint8Array) {
      const result = this.encode(input);
      return result instanceof Uint8Array ? _digest_js__WEBPACK_IMPORTED_MODULE_0__.create(this.code, result) : result.then(digest => _digest_js__WEBPACK_IMPORTED_MODULE_0__.create(this.code, digest));
    } else {
      throw Error('Unknown type, must be binary type');
    }
  }
}

/***/ }),

/***/ "./node_modules/multiformats/esm/src/hashes/identity.js":
/*!**************************************************************!*\
  !*** ./node_modules/multiformats/esm/src/hashes/identity.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   identity: () => (/* binding */ identity)
/* harmony export */ });
/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ "./node_modules/multiformats/esm/src/bytes.js");
/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./digest.js */ "./node_modules/multiformats/esm/src/hashes/digest.js");


const code = 0;
const name = 'identity';
const encode = _bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce;
const digest = input => _digest_js__WEBPACK_IMPORTED_MODULE_1__.create(code, encode(input));
const identity = {
  code,
  name,
  encode,
  digest
};

/***/ }),

/***/ "./node_modules/multiformats/esm/src/hashes/sha2-browser.js":
/*!******************************************************************!*\
  !*** ./node_modules/multiformats/esm/src/hashes/sha2-browser.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   sha256: () => (/* binding */ sha256),
/* harmony export */   sha512: () => (/* binding */ sha512)
/* harmony export */ });
/* harmony import */ var _hasher_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hasher.js */ "./node_modules/multiformats/esm/src/hashes/hasher.js");

const sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));
const sha256 = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_0__.from)({
  name: 'sha2-256',
  code: 18,
  encode: sha('SHA-256')
});
const sha512 = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_0__.from)({
  name: 'sha2-512',
  code: 19,
  encode: sha('SHA-512')
});

/***/ }),

/***/ "./node_modules/multiformats/esm/src/index.js":
/*!****************************************************!*\
  !*** ./node_modules/multiformats/esm/src/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CID: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_0__.CID),
/* harmony export */   bytes: () => (/* reexport module object */ _bytes_js__WEBPACK_IMPORTED_MODULE_2__),
/* harmony export */   digest: () => (/* reexport module object */ _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__),
/* harmony export */   hasher: () => (/* reexport module object */ _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__),
/* harmony export */   varint: () => (/* reexport module object */ _varint_js__WEBPACK_IMPORTED_MODULE_1__)
/* harmony export */ });
/* harmony import */ var _cid_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cid.js */ "./node_modules/multiformats/esm/src/cid.js");
/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./varint.js */ "./node_modules/multiformats/esm/src/varint.js");
/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bytes.js */ "./node_modules/multiformats/esm/src/bytes.js");
/* harmony import */ var _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./hashes/hasher.js */ "./node_modules/multiformats/esm/src/hashes/hasher.js");
/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hashes/digest.js */ "./node_modules/multiformats/esm/src/hashes/digest.js");







/***/ }),

/***/ "./node_modules/multiformats/esm/src/varint.js":
/*!*****************************************************!*\
  !*** ./node_modules/multiformats/esm/src/varint.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decode: () => (/* binding */ decode),
/* harmony export */   encodeTo: () => (/* binding */ encodeTo),
/* harmony export */   encodingLength: () => (/* binding */ encodingLength)
/* harmony export */ });
/* harmony import */ var _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vendor/varint.js */ "./node_modules/multiformats/esm/vendor/varint.js");

const decode = (data, offset = 0) => {
  const code = _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__["default"].decode(data, offset);
  return [
    code,
    _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__["default"].decode.bytes
  ];
};
const encodeTo = (int, target, offset = 0) => {
  _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__["default"].encode(int, target, offset);
  return target;
};
const encodingLength = int => {
  return _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__["default"].encodingLength(int);
};

/***/ }),

/***/ "./node_modules/multiformats/esm/vendor/base-x.js":
/*!********************************************************!*\
  !*** ./node_modules/multiformats/esm/vendor/base-x.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function base(ALPHABET, name) {
  if (ALPHABET.length >= 255) {
    throw new TypeError('Alphabet too long');
  }
  var BASE_MAP = new Uint8Array(256);
  for (var j = 0; j < BASE_MAP.length; j++) {
    BASE_MAP[j] = 255;
  }
  for (var i = 0; i < ALPHABET.length; i++) {
    var x = ALPHABET.charAt(i);
    var xc = x.charCodeAt(0);
    if (BASE_MAP[xc] !== 255) {
      throw new TypeError(x + ' is ambiguous');
    }
    BASE_MAP[xc] = i;
  }
  var BASE = ALPHABET.length;
  var LEADER = ALPHABET.charAt(0);
  var FACTOR = Math.log(BASE) / Math.log(256);
  var iFACTOR = Math.log(256) / Math.log(BASE);
  function encode(source) {
    if (source instanceof Uint8Array);
    else if (ArrayBuffer.isView(source)) {
      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);
    } else if (Array.isArray(source)) {
      source = Uint8Array.from(source);
    }
    if (!(source instanceof Uint8Array)) {
      throw new TypeError('Expected Uint8Array');
    }
    if (source.length === 0) {
      return '';
    }
    var zeroes = 0;
    var length = 0;
    var pbegin = 0;
    var pend = source.length;
    while (pbegin !== pend && source[pbegin] === 0) {
      pbegin++;
      zeroes++;
    }
    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;
    var b58 = new Uint8Array(size);
    while (pbegin !== pend) {
      var carry = source[pbegin];
      var i = 0;
      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {
        carry += 256 * b58[it1] >>> 0;
        b58[it1] = carry % BASE >>> 0;
        carry = carry / BASE >>> 0;
      }
      if (carry !== 0) {
        throw new Error('Non-zero carry');
      }
      length = i;
      pbegin++;
    }
    var it2 = size - length;
    while (it2 !== size && b58[it2] === 0) {
      it2++;
    }
    var str = LEADER.repeat(zeroes);
    for (; it2 < size; ++it2) {
      str += ALPHABET.charAt(b58[it2]);
    }
    return str;
  }
  function decodeUnsafe(source) {
    if (typeof source !== 'string') {
      throw new TypeError('Expected String');
    }
    if (source.length === 0) {
      return new Uint8Array();
    }
    var psz = 0;
    if (source[psz] === ' ') {
      return;
    }
    var zeroes = 0;
    var length = 0;
    while (source[psz] === LEADER) {
      zeroes++;
      psz++;
    }
    var size = (source.length - psz) * FACTOR + 1 >>> 0;
    var b256 = new Uint8Array(size);
    while (source[psz]) {
      var carry = BASE_MAP[source.charCodeAt(psz)];
      if (carry === 255) {
        return;
      }
      var i = 0;
      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {
        carry += BASE * b256[it3] >>> 0;
        b256[it3] = carry % 256 >>> 0;
        carry = carry / 256 >>> 0;
      }
      if (carry !== 0) {
        throw new Error('Non-zero carry');
      }
      length = i;
      psz++;
    }
    if (source[psz] === ' ') {
      return;
    }
    var it4 = size - length;
    while (it4 !== size && b256[it4] === 0) {
      it4++;
    }
    var vch = new Uint8Array(zeroes + (size - it4));
    var j = zeroes;
    while (it4 !== size) {
      vch[j++] = b256[it4++];
    }
    return vch;
  }
  function decode(string) {
    var buffer = decodeUnsafe(string);
    if (buffer) {
      return buffer;
    }
    throw new Error(`Non-${ name } character`);
  }
  return {
    encode: encode,
    decodeUnsafe: decodeUnsafe,
    decode: decode
  };
}
var src = base;
var _brrp__multiformats_scope_baseX = src;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp__multiformats_scope_baseX);

/***/ }),

/***/ "./node_modules/multiformats/esm/vendor/varint.js":
/*!********************************************************!*\
  !*** ./node_modules/multiformats/esm/vendor/varint.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var encode_1 = encode;
var MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);
function encode(num, out, offset) {
  out = out || [];
  offset = offset || 0;
  var oldOffset = offset;
  while (num >= INT) {
    out[offset++] = num & 255 | MSB;
    num /= 128;
  }
  while (num & MSBALL) {
    out[offset++] = num & 255 | MSB;
    num >>>= 7;
  }
  out[offset] = num | 0;
  encode.bytes = offset - oldOffset + 1;
  return out;
}
var decode = read;
var MSB$1 = 128, REST$1 = 127;
function read(buf, offset) {
  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;
  do {
    if (counter >= l) {
      read.bytes = 0;
      throw new RangeError('Could not decode varint');
    }
    b = buf[counter++];
    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);
    shift += 7;
  } while (b >= MSB$1);
  read.bytes = counter - offset;
  return res;
}
var N1 = Math.pow(2, 7);
var N2 = Math.pow(2, 14);
var N3 = Math.pow(2, 21);
var N4 = Math.pow(2, 28);
var N5 = Math.pow(2, 35);
var N6 = Math.pow(2, 42);
var N7 = Math.pow(2, 49);
var N8 = Math.pow(2, 56);
var N9 = Math.pow(2, 63);
var length = function (value) {
  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;
};
var varint = {
  encode: encode_1,
  decode: decode,
  encodingLength: length
};
var _brrp_varint = varint;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp_varint);

/***/ }),

/***/ "./node_modules/pino/browser.js":
/*!**************************************!*\
  !*** ./node_modules/pino/browser.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const format = __webpack_require__(/*! quick-format-unescaped */ "./node_modules/quick-format-unescaped/index.js")

module.exports = pino

const _console = pfGlobalThisOrFallback().console || {}
const stdSerializers = {
  mapHttpRequest: mock,
  mapHttpResponse: mock,
  wrapRequestSerializer: passthrough,
  wrapResponseSerializer: passthrough,
  wrapErrorSerializer: passthrough,
  req: mock,
  res: mock,
  err: asErrValue
}

function shouldSerialize (serialize, serializers) {
  if (Array.isArray(serialize)) {
    const hasToFilter = serialize.filter(function (k) {
      return k !== '!stdSerializers.err'
    })
    return hasToFilter
  } else if (serialize === true) {
    return Object.keys(serializers)
  }

  return false
}

function pino (opts) {
  opts = opts || {}
  opts.browser = opts.browser || {}

  const transmit = opts.browser.transmit
  if (transmit && typeof transmit.send !== 'function') { throw Error('pino: transmit option must have a send function') }

  const proto = opts.browser.write || _console
  if (opts.browser.write) opts.browser.asObject = true
  const serializers = opts.serializers || {}
  const serialize = shouldSerialize(opts.browser.serialize, serializers)
  let stdErrSerialize = opts.browser.serialize

  if (
    Array.isArray(opts.browser.serialize) &&
    opts.browser.serialize.indexOf('!stdSerializers.err') > -1
  ) stdErrSerialize = false

  const levels = ['error', 'fatal', 'warn', 'info', 'debug', 'trace']

  if (typeof proto === 'function') {
    proto.error = proto.fatal = proto.warn =
    proto.info = proto.debug = proto.trace = proto
  }
  if (opts.enabled === false) opts.level = 'silent'
  const level = opts.level || 'info'
  const logger = Object.create(proto)
  if (!logger.log) logger.log = noop

  Object.defineProperty(logger, 'levelVal', {
    get: getLevelVal
  })
  Object.defineProperty(logger, 'level', {
    get: getLevel,
    set: setLevel
  })

  const setOpts = {
    transmit,
    serialize,
    asObject: opts.browser.asObject,
    levels,
    timestamp: getTimeFunction(opts)
  }
  logger.levels = pino.levels
  logger.level = level

  logger.setMaxListeners = logger.getMaxListeners =
  logger.emit = logger.addListener = logger.on =
  logger.prependListener = logger.once =
  logger.prependOnceListener = logger.removeListener =
  logger.removeAllListeners = logger.listeners =
  logger.listenerCount = logger.eventNames =
  logger.write = logger.flush = noop
  logger.serializers = serializers
  logger._serialize = serialize
  logger._stdErrSerialize = stdErrSerialize
  logger.child = child

  if (transmit) logger._logEvent = createLogEventShape()

  function getLevelVal () {
    return this.level === 'silent'
      ? Infinity
      : this.levels.values[this.level]
  }

  function getLevel () {
    return this._level
  }
  function setLevel (level) {
    if (level !== 'silent' && !this.levels.values[level]) {
      throw Error('unknown level ' + level)
    }
    this._level = level

    set(setOpts, logger, 'error', 'log') // <-- must stay first
    set(setOpts, logger, 'fatal', 'error')
    set(setOpts, logger, 'warn', 'error')
    set(setOpts, logger, 'info', 'log')
    set(setOpts, logger, 'debug', 'log')
    set(setOpts, logger, 'trace', 'log')
  }

  function child (bindings, childOptions) {
    if (!bindings) {
      throw new Error('missing bindings for child Pino')
    }
    childOptions = childOptions || {}
    if (serialize && bindings.serializers) {
      childOptions.serializers = bindings.serializers
    }
    const childOptionsSerializers = childOptions.serializers
    if (serialize && childOptionsSerializers) {
      var childSerializers = Object.assign({}, serializers, childOptionsSerializers)
      var childSerialize = opts.browser.serialize === true
        ? Object.keys(childSerializers)
        : serialize
      delete bindings.serializers
      applySerializers([bindings], childSerialize, childSerializers, this._stdErrSerialize)
    }
    function Child (parent) {
      this._childLevel = (parent._childLevel | 0) + 1
      this.error = bind(parent, bindings, 'error')
      this.fatal = bind(parent, bindings, 'fatal')
      this.warn = bind(parent, bindings, 'warn')
      this.info = bind(parent, bindings, 'info')
      this.debug = bind(parent, bindings, 'debug')
      this.trace = bind(parent, bindings, 'trace')
      if (childSerializers) {
        this.serializers = childSerializers
        this._serialize = childSerialize
      }
      if (transmit) {
        this._logEvent = createLogEventShape(
          [].concat(parent._logEvent.bindings, bindings)
        )
      }
    }
    Child.prototype = this
    return new Child(this)
  }
  return logger
}

pino.levels = {
  values: {
    fatal: 60,
    error: 50,
    warn: 40,
    info: 30,
    debug: 20,
    trace: 10
  },
  labels: {
    10: 'trace',
    20: 'debug',
    30: 'info',
    40: 'warn',
    50: 'error',
    60: 'fatal'
  }
}

pino.stdSerializers = stdSerializers
pino.stdTimeFunctions = Object.assign({}, { nullTime, epochTime, unixTime, isoTime })

function set (opts, logger, level, fallback) {
  const proto = Object.getPrototypeOf(logger)
  logger[level] = logger.levelVal > logger.levels.values[level]
    ? noop
    : (proto[level] ? proto[level] : (_console[level] || _console[fallback] || noop))

  wrap(opts, logger, level)
}

function wrap (opts, logger, level) {
  if (!opts.transmit && logger[level] === noop) return

  logger[level] = (function (write) {
    return function LOG () {
      const ts = opts.timestamp()
      const args = new Array(arguments.length)
      const proto = (Object.getPrototypeOf && Object.getPrototypeOf(this) === _console) ? _console : this
      for (var i = 0; i < args.length; i++) args[i] = arguments[i]

      if (opts.serialize && !opts.asObject) {
        applySerializers(args, this._serialize, this.serializers, this._stdErrSerialize)
      }
      if (opts.asObject) write.call(proto, asObject(this, level, args, ts))
      else write.apply(proto, args)

      if (opts.transmit) {
        const transmitLevel = opts.transmit.level || logger.level
        const transmitValue = pino.levels.values[transmitLevel]
        const methodValue = pino.levels.values[level]
        if (methodValue < transmitValue) return
        transmit(this, {
          ts,
          methodLevel: level,
          methodValue,
          transmitLevel,
          transmitValue: pino.levels.values[opts.transmit.level || logger.level],
          send: opts.transmit.send,
          val: logger.levelVal
        }, args)
      }
    }
  })(logger[level])
}

function asObject (logger, level, args, ts) {
  if (logger._serialize) applySerializers(args, logger._serialize, logger.serializers, logger._stdErrSerialize)
  const argsCloned = args.slice()
  let msg = argsCloned[0]
  const o = {}
  if (ts) {
    o.time = ts
  }
  o.level = pino.levels.values[level]
  let lvl = (logger._childLevel | 0) + 1
  if (lvl < 1) lvl = 1
  // deliberate, catching objects, arrays
  if (msg !== null && typeof msg === 'object') {
    while (lvl-- && typeof argsCloned[0] === 'object') {
      Object.assign(o, argsCloned.shift())
    }
    msg = argsCloned.length ? format(argsCloned.shift(), argsCloned) : undefined
  } else if (typeof msg === 'string') msg = format(argsCloned.shift(), argsCloned)
  if (msg !== undefined) o.msg = msg
  return o
}

function applySerializers (args, serialize, serializers, stdErrSerialize) {
  for (const i in args) {
    if (stdErrSerialize && args[i] instanceof Error) {
      args[i] = pino.stdSerializers.err(args[i])
    } else if (typeof args[i] === 'object' && !Array.isArray(args[i])) {
      for (const k in args[i]) {
        if (serialize && serialize.indexOf(k) > -1 && k in serializers) {
          args[i][k] = serializers[k](args[i][k])
        }
      }
    }
  }
}

function bind (parent, bindings, level) {
  return function () {
    const args = new Array(1 + arguments.length)
    args[0] = bindings
    for (var i = 1; i < args.length; i++) {
      args[i] = arguments[i - 1]
    }
    return parent[level].apply(this, args)
  }
}

function transmit (logger, opts, args) {
  const send = opts.send
  const ts = opts.ts
  const methodLevel = opts.methodLevel
  const methodValue = opts.methodValue
  const val = opts.val
  const bindings = logger._logEvent.bindings

  applySerializers(
    args,
    logger._serialize || Object.keys(logger.serializers),
    logger.serializers,
    logger._stdErrSerialize === undefined ? true : logger._stdErrSerialize
  )
  logger._logEvent.ts = ts
  logger._logEvent.messages = args.filter(function (arg) {
    // bindings can only be objects, so reference equality check via indexOf is fine
    return bindings.indexOf(arg) === -1
  })

  logger._logEvent.level.label = methodLevel
  logger._logEvent.level.value = methodValue

  send(methodLevel, logger._logEvent, val)

  logger._logEvent = createLogEventShape(bindings)
}

function createLogEventShape (bindings) {
  return {
    ts: 0,
    messages: [],
    bindings: bindings || [],
    level: { label: '', value: 0 }
  }
}

function asErrValue (err) {
  const obj = {
    type: err.constructor.name,
    msg: err.message,
    stack: err.stack
  }
  for (const key in err) {
    if (obj[key] === undefined) {
      obj[key] = err[key]
    }
  }
  return obj
}

function getTimeFunction (opts) {
  if (typeof opts.timestamp === 'function') {
    return opts.timestamp
  }
  if (opts.timestamp === false) {
    return nullTime
  }
  return epochTime
}

function mock () { return {} }
function passthrough (a) { return a }
function noop () {}

function nullTime () { return false }
function epochTime () { return Date.now() }
function unixTime () { return Math.round(Date.now() / 1000.0) }
function isoTime () { return new Date(Date.now()).toISOString() } // using Date.now() for testability

/* eslint-disable */
/* istanbul ignore next */
function pfGlobalThisOrFallback () {
  function defd (o) { return typeof o !== 'undefined' && o }
  try {
    if (typeof globalThis !== 'undefined') return globalThis
    Object.defineProperty(Object.prototype, 'globalThis', {
      get: function () {
        delete Object.prototype.globalThis
        return (this.globalThis = this)
      },
      configurable: true
    })
    return globalThis
  } catch (e) {
    return defd(self) || defd(window) || defd(this) || {}
  }
}
/* eslint-enable */


/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/***/ ((module) => {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "./node_modules/quick-format-unescaped/index.js":
/*!******************************************************!*\
  !*** ./node_modules/quick-format-unescaped/index.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";

function tryStringify (o) {
  try { return JSON.stringify(o) } catch(e) { return '"[Circular]"' }
}

module.exports = format

function format(f, args, opts) {
  var ss = (opts && opts.stringify) || tryStringify
  var offset = 1
  if (typeof f === 'object' && f !== null) {
    var len = args.length + offset
    if (len === 1) return f
    var objects = new Array(len)
    objects[0] = ss(f)
    for (var index = 1; index < len; index++) {
      objects[index] = ss(args[index])
    }
    return objects.join(' ')
  }
  if (typeof f !== 'string') {
    return f
  }
  var argLen = args.length
  if (argLen === 0) return f
  var str = ''
  var a = 1 - offset
  var lastPos = -1
  var flen = (f && f.length) || 0
  for (var i = 0; i < flen;) {
    if (f.charCodeAt(i) === 37 && i + 1 < flen) {
      lastPos = lastPos > -1 ? lastPos : 0
      switch (f.charCodeAt(i + 1)) {
        case 100: // 'd'
        case 102: // 'f'
          if (a >= argLen)
            break
          if (args[a] == null)  break
          if (lastPos < i)
            str += f.slice(lastPos, i)
          str += Number(args[a])
          lastPos = i + 2
          i++
          break
        case 105: // 'i'
          if (a >= argLen)
            break
          if (args[a] == null)  break
          if (lastPos < i)
            str += f.slice(lastPos, i)
          str += Math.floor(Number(args[a]))
          lastPos = i + 2
          i++
          break
        case 79: // 'O'
        case 111: // 'o'
        case 106: // 'j'
          if (a >= argLen)
            break
          if (args[a] === undefined) break
          if (lastPos < i)
            str += f.slice(lastPos, i)
          var type = typeof args[a]
          if (type === 'string') {
            str += '\'' + args[a] + '\''
            lastPos = i + 2
            i++
            break
          }
          if (type === 'function') {
            str += args[a].name || '<anonymous>'
            lastPos = i + 2
            i++
            break
          }
          str += ss(args[a])
          lastPos = i + 2
          i++
          break
        case 115: // 's'
          if (a >= argLen)
            break
          if (lastPos < i)
            str += f.slice(lastPos, i)
          str += String(args[a])
          lastPos = i + 2
          i++
          break
        case 37: // '%'
          if (lastPos < i)
            str += f.slice(lastPos, i)
          str += '%'
          lastPos = i + 2
          i++
          a--
          break
      }
      ++a
    }
    ++i
  }
  if (lastPos === -1)
    return f
  else if (lastPos < flen) {
    str += f.slice(lastPos)
  }

  return str
}


/***/ }),

/***/ "./node_modules/setimmediate/setImmediate.js":
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ "./node_modules/process/browser.js");
(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
      // Callback can either be a function or a string
      if (typeof callback !== "function") {
        callback = new Function("" + callback);
      }
      // Copy function arguments
      var args = new Array(arguments.length - 1);
      for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i + 1];
      }
      // Store and register the task
      var task = { callback: callback, args: args };
      tasksByHandle[nextHandle] = task;
      registerImmediate(nextHandle);
      return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
        case 0:
            callback();
            break;
        case 1:
            callback(args[0]);
            break;
        case 2:
            callback(args[0], args[1]);
            break;
        case 3:
            callback(args[0], args[1], args[2]);
            break;
        default:
            callback.apply(undefined, args);
            break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function(handle) {
            process.nextTick(function () { runIfPresent(handle); });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function(handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function(handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function(handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function(handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof __webpack_require__.g === "undefined" ? this : __webpack_require__.g : self));


/***/ }),

/***/ "./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __assign: () => (/* binding */ __assign),
/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),
/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),
/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),
/* harmony export */   __await: () => (/* binding */ __await),
/* harmony export */   __awaiter: () => (/* binding */ __awaiter),
/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),
/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),
/* harmony export */   __createBinding: () => (/* binding */ __createBinding),
/* harmony export */   __decorate: () => (/* binding */ __decorate),
/* harmony export */   __exportStar: () => (/* binding */ __exportStar),
/* harmony export */   __extends: () => (/* binding */ __extends),
/* harmony export */   __generator: () => (/* binding */ __generator),
/* harmony export */   __importDefault: () => (/* binding */ __importDefault),
/* harmony export */   __importStar: () => (/* binding */ __importStar),
/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),
/* harmony export */   __metadata: () => (/* binding */ __metadata),
/* harmony export */   __param: () => (/* binding */ __param),
/* harmony export */   __read: () => (/* binding */ __read),
/* harmony export */   __rest: () => (/* binding */ __rest),
/* harmony export */   __spread: () => (/* binding */ __spread),
/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),
/* harmony export */   __values: () => (/* binding */ __values)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ "./node_modules/unstorage/dist/index.mjs":
/*!***********************************************!*\
  !*** ./node_modules/unstorage/dist/index.mjs ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   builtinDrivers: () => (/* binding */ builtinDrivers),
/* harmony export */   createStorage: () => (/* binding */ createStorage),
/* harmony export */   defineDriver: () => (/* binding */ defineDriver),
/* harmony export */   filterKeyByBase: () => (/* reexport safe */ _shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.c),
/* harmony export */   filterKeyByDepth: () => (/* reexport safe */ _shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.f),
/* harmony export */   joinKeys: () => (/* reexport safe */ _shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.j),
/* harmony export */   normalizeBaseKey: () => (/* reexport safe */ _shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.n),
/* harmony export */   normalizeKey: () => (/* reexport safe */ _shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.a),
/* harmony export */   prefixStorage: () => (/* reexport safe */ _shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.p),
/* harmony export */   restoreSnapshot: () => (/* binding */ restoreSnapshot),
/* harmony export */   snapshot: () => (/* binding */ snapshot)
/* harmony export */ });
/* harmony import */ var destr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! destr */ "./node_modules/destr/dist/index.mjs");
/* harmony import */ var _shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shared/unstorage.CoCt7NXC.mjs */ "./node_modules/unstorage/dist/shared/unstorage.CoCt7NXC.mjs");




function defineDriver(factory) {
  return factory;
}

const DRIVER_NAME = "memory";
const memory = defineDriver(() => {
  const data = /* @__PURE__ */ new Map();
  return {
    name: DRIVER_NAME,
    getInstance: () => data,
    hasItem(key) {
      return data.has(key);
    },
    getItem(key) {
      return data.get(key) ?? null;
    },
    getItemRaw(key) {
      return data.get(key) ?? null;
    },
    setItem(key, value) {
      data.set(key, value);
    },
    setItemRaw(key, value) {
      data.set(key, value);
    },
    removeItem(key) {
      data.delete(key);
    },
    getKeys() {
      return [...data.keys()];
    },
    clear() {
      data.clear();
    },
    dispose() {
      data.clear();
    }
  };
});

function createStorage(options = {}) {
  const context = {
    mounts: { "": options.driver || memory() },
    mountpoints: [""],
    watching: false,
    watchListeners: [],
    unwatch: {}
  };
  const getMount = (key) => {
    for (const base of context.mountpoints) {
      if (key.startsWith(base)) {
        return {
          base,
          relativeKey: key.slice(base.length),
          driver: context.mounts[base]
        };
      }
    }
    return {
      base: "",
      relativeKey: key,
      driver: context.mounts[""]
    };
  };
  const getMounts = (base, includeParent) => {
    return context.mountpoints.filter(
      (mountpoint) => mountpoint.startsWith(base) || includeParent && base.startsWith(mountpoint)
    ).map((mountpoint) => ({
      relativeBase: base.length > mountpoint.length ? base.slice(mountpoint.length) : void 0,
      mountpoint,
      driver: context.mounts[mountpoint]
    }));
  };
  const onChange = (event, key) => {
    if (!context.watching) {
      return;
    }
    key = (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.a)(key);
    for (const listener of context.watchListeners) {
      listener(event, key);
    }
  };
  const startWatch = async () => {
    if (context.watching) {
      return;
    }
    context.watching = true;
    for (const mountpoint in context.mounts) {
      context.unwatch[mountpoint] = await watch(
        context.mounts[mountpoint],
        onChange,
        mountpoint
      );
    }
  };
  const stopWatch = async () => {
    if (!context.watching) {
      return;
    }
    for (const mountpoint in context.unwatch) {
      await context.unwatch[mountpoint]();
    }
    context.unwatch = {};
    context.watching = false;
  };
  const runBatch = (items, commonOptions, cb) => {
    const batches = /* @__PURE__ */ new Map();
    const getBatch = (mount) => {
      let batch = batches.get(mount.base);
      if (!batch) {
        batch = {
          driver: mount.driver,
          base: mount.base,
          items: []
        };
        batches.set(mount.base, batch);
      }
      return batch;
    };
    for (const item of items) {
      const isStringItem = typeof item === "string";
      const key = (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.a)(isStringItem ? item : item.key);
      const value = isStringItem ? void 0 : item.value;
      const options2 = isStringItem || !item.options ? commonOptions : { ...commonOptions, ...item.options };
      const mount = getMount(key);
      getBatch(mount).items.push({
        key,
        value,
        relativeKey: mount.relativeKey,
        options: options2
      });
    }
    return Promise.all([...batches.values()].map((batch) => cb(batch))).then(
      (r) => r.flat()
    );
  };
  const storage = {
    // Item
    hasItem(key, opts = {}) {
      key = (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.a)(key);
      const { relativeKey, driver } = getMount(key);
      return (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.b)(driver.hasItem, relativeKey, opts);
    },
    getItem(key, opts = {}) {
      key = (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.a)(key);
      const { relativeKey, driver } = getMount(key);
      return (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.b)(driver.getItem, relativeKey, opts).then(
        (value) => (0,destr__WEBPACK_IMPORTED_MODULE_0__["default"])(value)
      );
    },
    getItems(items, commonOptions = {}) {
      return runBatch(items, commonOptions, (batch) => {
        if (batch.driver.getItems) {
          return (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.b)(
            batch.driver.getItems,
            batch.items.map((item) => ({
              key: item.relativeKey,
              options: item.options
            })),
            commonOptions
          ).then(
            (r) => r.map((item) => ({
              key: (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.j)(batch.base, item.key),
              value: (0,destr__WEBPACK_IMPORTED_MODULE_0__["default"])(item.value)
            }))
          );
        }
        return Promise.all(
          batch.items.map((item) => {
            return (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.b)(
              batch.driver.getItem,
              item.relativeKey,
              item.options
            ).then((value) => ({
              key: item.key,
              value: (0,destr__WEBPACK_IMPORTED_MODULE_0__["default"])(value)
            }));
          })
        );
      });
    },
    getItemRaw(key, opts = {}) {
      key = (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.a)(key);
      const { relativeKey, driver } = getMount(key);
      if (driver.getItemRaw) {
        return (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.b)(driver.getItemRaw, relativeKey, opts);
      }
      return (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.b)(driver.getItem, relativeKey, opts).then(
        (value) => (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.e)(value)
      );
    },
    async setItem(key, value, opts = {}) {
      if (value === void 0) {
        return storage.removeItem(key);
      }
      key = (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.a)(key);
      const { relativeKey, driver } = getMount(key);
      if (!driver.setItem) {
        return;
      }
      await (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.b)(driver.setItem, relativeKey, (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.d)(value), opts);
      if (!driver.watch) {
        onChange("update", key);
      }
    },
    async setItems(items, commonOptions) {
      await runBatch(items, commonOptions, async (batch) => {
        if (batch.driver.setItems) {
          return (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.b)(
            batch.driver.setItems,
            batch.items.map((item) => ({
              key: item.relativeKey,
              value: (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.d)(item.value),
              options: item.options
            })),
            commonOptions
          );
        }
        if (!batch.driver.setItem) {
          return;
        }
        await Promise.all(
          batch.items.map((item) => {
            return (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.b)(
              batch.driver.setItem,
              item.relativeKey,
              (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.d)(item.value),
              item.options
            );
          })
        );
      });
    },
    async setItemRaw(key, value, opts = {}) {
      if (value === void 0) {
        return storage.removeItem(key, opts);
      }
      key = (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.a)(key);
      const { relativeKey, driver } = getMount(key);
      if (driver.setItemRaw) {
        await (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.b)(driver.setItemRaw, relativeKey, value, opts);
      } else if (driver.setItem) {
        await (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.b)(driver.setItem, relativeKey, (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.s)(value), opts);
      } else {
        return;
      }
      if (!driver.watch) {
        onChange("update", key);
      }
    },
    async removeItem(key, opts = {}) {
      if (typeof opts === "boolean") {
        opts = { removeMeta: opts };
      }
      key = (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.a)(key);
      const { relativeKey, driver } = getMount(key);
      if (!driver.removeItem) {
        return;
      }
      await (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.b)(driver.removeItem, relativeKey, opts);
      if (opts.removeMeta || opts.removeMata) {
        await (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.b)(driver.removeItem, relativeKey + "$", opts);
      }
      if (!driver.watch) {
        onChange("remove", key);
      }
    },
    // Meta
    async getMeta(key, opts = {}) {
      if (typeof opts === "boolean") {
        opts = { nativeOnly: opts };
      }
      key = (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.a)(key);
      const { relativeKey, driver } = getMount(key);
      const meta = /* @__PURE__ */ Object.create(null);
      if (driver.getMeta) {
        Object.assign(meta, await (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.b)(driver.getMeta, relativeKey, opts));
      }
      if (!opts.nativeOnly) {
        const value = await (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.b)(
          driver.getItem,
          relativeKey + "$",
          opts
        ).then((value_) => (0,destr__WEBPACK_IMPORTED_MODULE_0__["default"])(value_));
        if (value && typeof value === "object") {
          if (typeof value.atime === "string") {
            value.atime = new Date(value.atime);
          }
          if (typeof value.mtime === "string") {
            value.mtime = new Date(value.mtime);
          }
          Object.assign(meta, value);
        }
      }
      return meta;
    },
    setMeta(key, value, opts = {}) {
      return this.setItem(key + "$", value, opts);
    },
    removeMeta(key, opts = {}) {
      return this.removeItem(key + "$", opts);
    },
    // Keys
    async getKeys(base, opts = {}) {
      base = (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.n)(base);
      const mounts = getMounts(base, true);
      let maskedMounts = [];
      const allKeys = [];
      let allMountsSupportMaxDepth = true;
      for (const mount of mounts) {
        if (!mount.driver.flags?.maxDepth) {
          allMountsSupportMaxDepth = false;
        }
        const rawKeys = await (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.b)(
          mount.driver.getKeys,
          mount.relativeBase,
          opts
        );
        for (const key of rawKeys) {
          const fullKey = mount.mountpoint + (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.a)(key);
          if (!maskedMounts.some((p) => fullKey.startsWith(p))) {
            allKeys.push(fullKey);
          }
        }
        maskedMounts = [
          mount.mountpoint,
          ...maskedMounts.filter((p) => !p.startsWith(mount.mountpoint))
        ];
      }
      const shouldFilterByDepth = opts.maxDepth !== void 0 && !allMountsSupportMaxDepth;
      return allKeys.filter(
        (key) => (!shouldFilterByDepth || (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.f)(key, opts.maxDepth)) && (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.c)(key, base)
      );
    },
    // Utils
    async clear(base, opts = {}) {
      base = (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.n)(base);
      await Promise.all(
        getMounts(base, false).map(async (m) => {
          if (m.driver.clear) {
            return (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.b)(m.driver.clear, m.relativeBase, opts);
          }
          if (m.driver.removeItem) {
            const keys = await m.driver.getKeys(m.relativeBase || "", opts);
            return Promise.all(
              keys.map((key) => m.driver.removeItem(key, opts))
            );
          }
        })
      );
    },
    async dispose() {
      await Promise.all(
        Object.values(context.mounts).map((driver) => dispose(driver))
      );
    },
    async watch(callback) {
      await startWatch();
      context.watchListeners.push(callback);
      return async () => {
        context.watchListeners = context.watchListeners.filter(
          (listener) => listener !== callback
        );
        if (context.watchListeners.length === 0) {
          await stopWatch();
        }
      };
    },
    async unwatch() {
      context.watchListeners = [];
      await stopWatch();
    },
    // Mount
    mount(base, driver) {
      base = (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.n)(base);
      if (base && context.mounts[base]) {
        throw new Error(`already mounted at ${base}`);
      }
      if (base) {
        context.mountpoints.push(base);
        context.mountpoints.sort((a, b) => b.length - a.length);
      }
      context.mounts[base] = driver;
      if (context.watching) {
        Promise.resolve(watch(driver, onChange, base)).then((unwatcher) => {
          context.unwatch[base] = unwatcher;
        }).catch(console.error);
      }
      return storage;
    },
    async unmount(base, _dispose = true) {
      base = (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.n)(base);
      if (!base || !context.mounts[base]) {
        return;
      }
      if (context.watching && base in context.unwatch) {
        context.unwatch[base]?.();
        delete context.unwatch[base];
      }
      if (_dispose) {
        await dispose(context.mounts[base]);
      }
      context.mountpoints = context.mountpoints.filter((key) => key !== base);
      delete context.mounts[base];
    },
    getMount(key = "") {
      key = (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.a)(key) + ":";
      const m = getMount(key);
      return {
        driver: m.driver,
        base: m.base
      };
    },
    getMounts(base = "", opts = {}) {
      base = (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.a)(base);
      const mounts = getMounts(base, opts.parents);
      return mounts.map((m) => ({
        driver: m.driver,
        base: m.mountpoint
      }));
    },
    // Aliases
    keys: (base, opts = {}) => storage.getKeys(base, opts),
    get: (key, opts = {}) => storage.getItem(key, opts),
    set: (key, value, opts = {}) => storage.setItem(key, value, opts),
    has: (key, opts = {}) => storage.hasItem(key, opts),
    del: (key, opts = {}) => storage.removeItem(key, opts),
    remove: (key, opts = {}) => storage.removeItem(key, opts)
  };
  return storage;
}
async function snapshot(storage, base) {
  base = (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.n)(base);
  const keys = await storage.getKeys(base);
  const snapshot2 = {};
  await Promise.all(
    keys.map(async (key) => {
      snapshot2[key.slice(base.length)] = await storage.getItem(key);
    })
  );
  return snapshot2;
}
async function restoreSnapshot(driver, snapshot2, base = "") {
  base = (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.n)(base);
  await Promise.all(
    Object.entries(snapshot2).map((e) => driver.setItem(base + e[0], e[1]))
  );
}
function watch(driver, onChange, base) {
  return driver.watch ? driver.watch((event, key) => onChange(event, base + key)) : () => {
  };
}
async function dispose(driver) {
  if (typeof driver.dispose === "function") {
    await (0,_shared_unstorage_CoCt7NXC_mjs__WEBPACK_IMPORTED_MODULE_1__.b)(driver.dispose);
  }
}

const builtinDrivers = {
  "azure-app-configuration": "unstorage/drivers/azure-app-configuration",
  "azureAppConfiguration": "unstorage/drivers/azure-app-configuration",
  "azure-cosmos": "unstorage/drivers/azure-cosmos",
  "azureCosmos": "unstorage/drivers/azure-cosmos",
  "azure-key-vault": "unstorage/drivers/azure-key-vault",
  "azureKeyVault": "unstorage/drivers/azure-key-vault",
  "azure-storage-blob": "unstorage/drivers/azure-storage-blob",
  "azureStorageBlob": "unstorage/drivers/azure-storage-blob",
  "azure-storage-table": "unstorage/drivers/azure-storage-table",
  "azureStorageTable": "unstorage/drivers/azure-storage-table",
  "capacitor-preferences": "unstorage/drivers/capacitor-preferences",
  "capacitorPreferences": "unstorage/drivers/capacitor-preferences",
  "cloudflare-kv-binding": "unstorage/drivers/cloudflare-kv-binding",
  "cloudflareKVBinding": "unstorage/drivers/cloudflare-kv-binding",
  "cloudflare-kv-http": "unstorage/drivers/cloudflare-kv-http",
  "cloudflareKVHttp": "unstorage/drivers/cloudflare-kv-http",
  "cloudflare-r2-binding": "unstorage/drivers/cloudflare-r2-binding",
  "cloudflareR2Binding": "unstorage/drivers/cloudflare-r2-binding",
  "db0": "unstorage/drivers/db0",
  "deno-kv-node": "unstorage/drivers/deno-kv-node",
  "denoKVNode": "unstorage/drivers/deno-kv-node",
  "deno-kv": "unstorage/drivers/deno-kv",
  "denoKV": "unstorage/drivers/deno-kv",
  "fs-lite": "unstorage/drivers/fs-lite",
  "fsLite": "unstorage/drivers/fs-lite",
  "fs": "unstorage/drivers/fs",
  "github": "unstorage/drivers/github",
  "http": "unstorage/drivers/http",
  "indexedb": "unstorage/drivers/indexedb",
  "localstorage": "unstorage/drivers/localstorage",
  "lru-cache": "unstorage/drivers/lru-cache",
  "lruCache": "unstorage/drivers/lru-cache",
  "memory": "unstorage/drivers/memory",
  "mongodb": "unstorage/drivers/mongodb",
  "netlify-blobs": "unstorage/drivers/netlify-blobs",
  "netlifyBlobs": "unstorage/drivers/netlify-blobs",
  "null": "unstorage/drivers/null",
  "overlay": "unstorage/drivers/overlay",
  "planetscale": "unstorage/drivers/planetscale",
  "redis": "unstorage/drivers/redis",
  "s3": "unstorage/drivers/s3",
  "session-storage": "unstorage/drivers/session-storage",
  "sessionStorage": "unstorage/drivers/session-storage",
  "uploadthing": "unstorage/drivers/uploadthing",
  "upstash": "unstorage/drivers/upstash",
  "vercel-blob": "unstorage/drivers/vercel-blob",
  "vercelBlob": "unstorage/drivers/vercel-blob",
  "vercel-kv": "unstorage/drivers/vercel-kv",
  "vercelKV": "unstorage/drivers/vercel-kv"
};




/***/ }),

/***/ "./node_modules/unstorage/dist/shared/unstorage.CoCt7NXC.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/unstorage/dist/shared/unstorage.CoCt7NXC.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ normalizeKey),
/* harmony export */   b: () => (/* binding */ asyncCall),
/* harmony export */   c: () => (/* binding */ filterKeyByBase),
/* harmony export */   d: () => (/* binding */ stringify),
/* harmony export */   e: () => (/* binding */ deserializeRaw),
/* harmony export */   f: () => (/* binding */ filterKeyByDepth),
/* harmony export */   j: () => (/* binding */ joinKeys),
/* harmony export */   n: () => (/* binding */ normalizeBaseKey),
/* harmony export */   p: () => (/* binding */ prefixStorage),
/* harmony export */   s: () => (/* binding */ serializeRaw)
/* harmony export */ });
/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js")["Buffer"];
function wrapToPromise(value) {
  if (!value || typeof value.then !== "function") {
    return Promise.resolve(value);
  }
  return value;
}
function asyncCall(function_, ...arguments_) {
  try {
    return wrapToPromise(function_(...arguments_));
  } catch (error) {
    return Promise.reject(error);
  }
}
function isPrimitive(value) {
  const type = typeof value;
  return value === null || type !== "object" && type !== "function";
}
function isPureObject(value) {
  const proto = Object.getPrototypeOf(value);
  return !proto || proto.isPrototypeOf(Object);
}
function stringify(value) {
  if (isPrimitive(value)) {
    return String(value);
  }
  if (isPureObject(value) || Array.isArray(value)) {
    return JSON.stringify(value);
  }
  if (typeof value.toJSON === "function") {
    return stringify(value.toJSON());
  }
  throw new Error("[unstorage] Cannot stringify value!");
}
const BASE64_PREFIX = "base64:";
function serializeRaw(value) {
  if (typeof value === "string") {
    return value;
  }
  return BASE64_PREFIX + base64Encode(value);
}
function deserializeRaw(value) {
  if (typeof value !== "string") {
    return value;
  }
  if (!value.startsWith(BASE64_PREFIX)) {
    return value;
  }
  return base64Decode(value.slice(BASE64_PREFIX.length));
}
function base64Decode(input) {
  if (globalThis.Buffer) {
    return Buffer.from(input, "base64");
  }
  return Uint8Array.from(
    globalThis.atob(input),
    (c) => c.codePointAt(0)
  );
}
function base64Encode(input) {
  if (globalThis.Buffer) {
    return Buffer.from(input).toString("base64");
  }
  return globalThis.btoa(String.fromCodePoint(...input));
}

const storageKeyProperties = [
  "has",
  "hasItem",
  "get",
  "getItem",
  "getItemRaw",
  "set",
  "setItem",
  "setItemRaw",
  "del",
  "remove",
  "removeItem",
  "getMeta",
  "setMeta",
  "removeMeta",
  "getKeys",
  "clear",
  "mount",
  "unmount"
];
function prefixStorage(storage, base) {
  base = normalizeBaseKey(base);
  if (!base) {
    return storage;
  }
  const nsStorage = { ...storage };
  for (const property of storageKeyProperties) {
    nsStorage[property] = (key = "", ...args) => (
      // @ts-ignore
      storage[property](base + key, ...args)
    );
  }
  nsStorage.getKeys = (key = "", ...arguments_) => storage.getKeys(base + key, ...arguments_).then((keys) => keys.map((key2) => key2.slice(base.length)));
  nsStorage.getItems = async (items, commonOptions) => {
    const prefixedItems = items.map(
      (item) => typeof item === "string" ? base + item : { ...item, key: base + item.key }
    );
    const results = await storage.getItems(prefixedItems, commonOptions);
    return results.map((entry) => ({
      key: entry.key.slice(base.length),
      value: entry.value
    }));
  };
  nsStorage.setItems = async (items, commonOptions) => {
    const prefixedItems = items.map((item) => ({
      key: base + item.key,
      value: item.value,
      options: item.options
    }));
    return storage.setItems(prefixedItems, commonOptions);
  };
  return nsStorage;
}
function normalizeKey(key) {
  if (!key) {
    return "";
  }
  return key.split("?")[0]?.replace(/[/\\]/g, ":").replace(/:+/g, ":").replace(/^:|:$/g, "") || "";
}
function joinKeys(...keys) {
  return normalizeKey(keys.join(":"));
}
function normalizeBaseKey(base) {
  base = normalizeKey(base);
  return base ? base + ":" : "";
}
function filterKeyByDepth(key, depth) {
  if (depth === void 0) {
    return true;
  }
  let substrCount = 0;
  let index = key.indexOf(":");
  while (index > -1) {
    substrCount++;
    index = key.indexOf(":", index + 1);
  }
  return substrCount <= depth;
}
function filterKeyByBase(key, base) {
  if (base) {
    return key.startsWith(base) && key[key.length - 1] !== "$";
  }
  return key[key.length - 1] !== "$";
}




/***/ }),

/***/ "./node_modules/web3-core/lib/esm/formatters.js":
/*!******************************************************!*\
  !*** ./node_modules/web3-core/lib/esm/formatters.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   inputAddressFormatter: () => (/* binding */ inputAddressFormatter),
/* harmony export */   inputBlockNumberFormatter: () => (/* binding */ inputBlockNumberFormatter),
/* harmony export */   inputCallFormatter: () => (/* binding */ inputCallFormatter),
/* harmony export */   inputDefaultBlockNumberFormatter: () => (/* binding */ inputDefaultBlockNumberFormatter),
/* harmony export */   inputLogFormatter: () => (/* binding */ inputLogFormatter),
/* harmony export */   inputPostFormatter: () => (/* binding */ inputPostFormatter),
/* harmony export */   inputSignFormatter: () => (/* binding */ inputSignFormatter),
/* harmony export */   inputStorageKeysFormatter: () => (/* binding */ inputStorageKeysFormatter),
/* harmony export */   inputTopicFormatter: () => (/* binding */ inputTopicFormatter),
/* harmony export */   inputTransactionFormatter: () => (/* binding */ inputTransactionFormatter),
/* harmony export */   outputBigIntegerFormatter: () => (/* binding */ outputBigIntegerFormatter),
/* harmony export */   outputBlockFormatter: () => (/* binding */ outputBlockFormatter),
/* harmony export */   outputLogFormatter: () => (/* binding */ outputLogFormatter),
/* harmony export */   outputPostFormatter: () => (/* binding */ outputPostFormatter),
/* harmony export */   outputProofFormatter: () => (/* binding */ outputProofFormatter),
/* harmony export */   outputSyncingFormatter: () => (/* binding */ outputSyncingFormatter),
/* harmony export */   outputTransactionFormatter: () => (/* binding */ outputTransactionFormatter),
/* harmony export */   outputTransactionReceiptFormatter: () => (/* binding */ outputTransactionReceiptFormatter),
/* harmony export */   txInputOptionsFormatter: () => (/* binding */ txInputOptionsFormatter)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_eth_iban__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-eth-iban */ "./node_modules/web3-eth-iban/lib/esm/index.js");
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/





/* eslint-disable deprecation/deprecation */
/**
 * @deprecated Use format function from web3-utils package instead
 * Will format the given storage key array values to hex strings.
 */
const inputStorageKeysFormatter = (keys) => keys.map(num => (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.numberToHex)(num));
/**
 * @deprecated Use format function from web3-utils package instead
 * Will format the given proof response from the node.
 */
const outputProofFormatter = (proof) => ({
    address: (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.toChecksumAddress)(proof.address),
    nonce: (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumberString)(proof.nonce),
    balance: (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumberString)(proof.balance),
});
/**
 * @deprecated Use format function from web3-utils package instead
 * Should the format output to a big number
 */
const outputBigIntegerFormatter = (number) => (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.toNumber)(number);
/**
 * @deprecated Use format function from web3-utils package instead
 * Returns the given block number as hex string or the predefined block number 'latest', 'pending', 'earliest', 'genesis'
 */
const inputBlockNumberFormatter = (blockNumber) => {
    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(blockNumber)) {
        return undefined;
    }
    if (typeof blockNumber === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(blockNumber)) {
        return blockNumber;
    }
    if (blockNumber === 'genesis') {
        return '0x0';
    }
    if (typeof blockNumber === 'string' && (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(blockNumber)) {
        return blockNumber.toLowerCase();
    }
    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.numberToHex)(blockNumber);
};
/**
 * @deprecated Use format function from web3-utils package instead
 * Returns the given block number as hex string or does return the defaultBlock property of the current module
 */
const inputDefaultBlockNumberFormatter = (blockNumber, defaultBlock) => {
    if (!blockNumber) {
        return inputBlockNumberFormatter(defaultBlock);
    }
    return inputBlockNumberFormatter(blockNumber);
};
/**
 * @deprecated Use format function from web3-utils package instead
 * @param address
 */
const inputAddressFormatter = (address) => {
    if (web3_eth_iban__WEBPACK_IMPORTED_MODULE_1__.Iban.isValid(address) && web3_eth_iban__WEBPACK_IMPORTED_MODULE_1__.Iban.isDirect(address)) {
        const iban = new web3_eth_iban__WEBPACK_IMPORTED_MODULE_1__.Iban(address);
        return iban.toAddress().toLowerCase();
    }
    if ((0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.isAddress)(address)) {
        return `0x${address.toLowerCase().replace('0x', '')}`;
    }
    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.FormatterError(`Provided address ${address} is invalid, the capitalization checksum test failed, or it's an indirect IBAN address which can't be converted.`);
};
/**
 * @deprecated Use format function from web3-utils package instead
 * Formats the input of a transaction and converts all values to HEX
 */
const txInputOptionsFormatter = (options) => {
    var _a;
    const modifiedOptions = Object.assign({}, options);
    if (options.to) {
        // it might be contract creation
        modifiedOptions.to = inputAddressFormatter(options.to);
    }
    if (options.data && options.input) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.FormatterError('You can\'t have "data" and "input" as properties of transactions at the same time, please use either "data" or "input" instead.');
    }
    if (!options.input && options.data) {
        modifiedOptions.input = options.data;
        delete modifiedOptions.data;
    }
    if (options.input && !options.input.startsWith('0x')) {
        modifiedOptions.input = `0x${options.input}`;
    }
    if (modifiedOptions.input && !(0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(modifiedOptions.input)) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.FormatterError('The input field must be HEX encoded data.');
    }
    // allow both
    if (options.gas || options.gasLimit) {
        modifiedOptions.gas = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.toNumber)((_a = options.gas) !== null && _a !== void 0 ? _a : options.gasLimit);
    }
    if (options.maxPriorityFeePerGas || options.maxFeePerGas) {
        delete modifiedOptions.gasPrice;
    }
    ['gasPrice', 'gas', 'value', 'maxPriorityFeePerGas', 'maxFeePerGas', 'nonce', 'chainId']
        .filter(key => !(0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(modifiedOptions[key]))
        .forEach(key => {
        modifiedOptions[key] = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.numberToHex)(modifiedOptions[key]);
    });
    return modifiedOptions;
};
/**
 * @deprecated Use format function from web3-utils package instead
 * Formats the input of a transaction and converts all values to HEX
 */
const inputCallFormatter = (options, defaultAccount) => {
    var _a;
    const opts = txInputOptionsFormatter(options);
    const from = (_a = opts.from) !== null && _a !== void 0 ? _a : defaultAccount;
    if (from) {
        opts.from = inputAddressFormatter(from);
    }
    return opts;
};
/**
 * @deprecated Use format function from web3-utils package instead
 * Formats the input of a transaction and converts all values to HEX
 */
const inputTransactionFormatter = (options, defaultAccount) => {
    var _a;
    const opts = txInputOptionsFormatter(options);
    // check from, only if not number, or object
    if (!(typeof opts.from === 'number') && !(!!opts.from && typeof opts.from === 'object')) {
        opts.from = (_a = opts.from) !== null && _a !== void 0 ? _a : defaultAccount;
        if (!options.from && !(typeof options.from === 'number')) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.FormatterError('The send transactions "from" field must be defined!');
        }
        opts.from = inputAddressFormatter(options.from);
    }
    return opts;
};
/**
 * @deprecated Use format function from web3-utils package instead
 * Hex encodes the data passed to eth_sign and personal_sign
 */
const inputSignFormatter = (data) => ((0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(data) ? data : (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.utf8ToHex)(data));
/**
 * @deprecated Use format function from web3-utils package instead
 * Formats the output of a transaction to its proper values
 * @function outputTransactionFormatter
 */
const outputTransactionFormatter = (tx) => {
    const modifiedTx = Object.assign({}, tx);
    if (tx.blockNumber) {
        modifiedTx.blockNumber = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumber)(tx.blockNumber);
    }
    if (tx.transactionIndex) {
        modifiedTx.transactionIndex = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumber)(tx.transactionIndex);
    }
    modifiedTx.nonce = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumber)(tx.nonce);
    modifiedTx.gas = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumber)(tx.gas);
    if (tx.gasPrice) {
        modifiedTx.gasPrice = outputBigIntegerFormatter(tx.gasPrice);
    }
    if (tx.maxFeePerGas) {
        modifiedTx.maxFeePerGas = outputBigIntegerFormatter(tx.maxFeePerGas);
    }
    if (tx.maxPriorityFeePerGas) {
        modifiedTx.maxPriorityFeePerGas = outputBigIntegerFormatter(tx.maxPriorityFeePerGas);
    }
    if (tx.type) {
        modifiedTx.type = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumber)(tx.type);
    }
    modifiedTx.value = outputBigIntegerFormatter(tx.value);
    if (tx.to && (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.isAddress)(tx.to)) {
        // tx.to could be `0x0` or `null` while contract creation
        modifiedTx.to = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.toChecksumAddress)(tx.to);
    }
    else {
        modifiedTx.to = undefined; // set to `null` if invalid address
    }
    if (tx.from) {
        modifiedTx.from = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.toChecksumAddress)(tx.from);
    }
    return modifiedTx;
};
/**
 * @deprecated Use format function from web3-utils package instead
 * @param topic
 */
// To align with specification we use the type "null" here
// eslint-disable-next-line @typescript-eslint/ban-types
const inputTopicFormatter = (topic) => {
    // Using "null" value intentionally for validation
    // eslint-disable-next-line no-null/no-null
    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(topic))
        return null;
    const value = String(topic);
    return (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isHex)(value) ? value : (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.fromUtf8)(value);
};
/**
 * @deprecated Use format function from web3-utils package instead
 * @param filter
 */
const inputLogFormatter = (filter) => {
    var _a;
    const val = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(filter)
        ? {}
        : (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.mergeDeep)({}, filter);
    // If options !== undefined, don't blow out existing data
    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(val.fromBlock)) {
        val.fromBlock = web3_types__WEBPACK_IMPORTED_MODULE_2__.BlockTags.LATEST;
    }
    val.fromBlock = inputBlockNumberFormatter(val.fromBlock);
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(val.toBlock)) {
        val.toBlock = inputBlockNumberFormatter(val.toBlock);
    }
    // make sure topics, get converted to hex
    val.topics = (_a = val.topics) !== null && _a !== void 0 ? _a : [];
    val.topics = val.topics.map(topic => Array.isArray(topic)
        ? topic.map(inputTopicFormatter)
        : inputTopicFormatter(topic));
    if (val.address) {
        val.address = Array.isArray(val.address)
            ? val.address.map(addr => inputAddressFormatter(addr))
            : inputAddressFormatter(val.address);
    }
    return val;
};
/**
 * @deprecated Use format function from web3-utils package instead
 * Formats the output of a log
 * @function outputLogFormatter
 */
const outputLogFormatter = (log) => {
    const modifiedLog = Object.assign({}, log);
    const logIndex = typeof log.logIndex === 'string'
        ? log.logIndex
        : (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.numberToHex)(log.logIndex);
    // generate a custom log id
    if (typeof log.blockHash === 'string' && typeof log.transactionHash === 'string') {
        const shaId = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.sha3Raw)(`${log.blockHash.replace('0x', '')}${log.transactionHash.replace('0x', '')}${logIndex.replace('0x', '')}`);
        modifiedLog.id = `log_${shaId.replace('0x', '').slice(0, 8)}`;
    }
    else if (!log.id) {
        modifiedLog.id = undefined;
    }
    if (log.blockNumber && (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(log.blockNumber)) {
        modifiedLog.blockNumber = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumber)(log.blockNumber);
    }
    if (log.transactionIndex && (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(log.transactionIndex)) {
        modifiedLog.transactionIndex = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumber)(log.transactionIndex);
    }
    if (log.logIndex && (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(log.logIndex)) {
        modifiedLog.logIndex = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumber)(log.logIndex);
    }
    if (log.address) {
        modifiedLog.address = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.toChecksumAddress)(log.address);
    }
    return modifiedLog;
};
/**
 * @deprecated Use format function from web3-utils package instead
 * Formats the output of a transaction receipt to its proper values
 */
const outputTransactionReceiptFormatter = (receipt) => {
    if (typeof receipt !== 'object') {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.FormatterError(`Received receipt is invalid: ${String(receipt)}`);
    }
    const modifiedReceipt = Object.assign({}, receipt);
    if (receipt.blockNumber) {
        modifiedReceipt.blockNumber = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumber)(receipt.blockNumber);
    }
    if (receipt.transactionIndex) {
        modifiedReceipt.transactionIndex = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumber)(receipt.transactionIndex);
    }
    modifiedReceipt.cumulativeGasUsed = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumber)(receipt.cumulativeGasUsed);
    modifiedReceipt.gasUsed = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumber)(receipt.gasUsed);
    if (receipt.logs && Array.isArray(receipt.logs)) {
        modifiedReceipt.logs = receipt.logs.map(outputLogFormatter);
    }
    if (receipt.effectiveGasPrice) {
        modifiedReceipt.effectiveGasPrice = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumber)(receipt.effectiveGasPrice);
    }
    if (receipt.contractAddress) {
        modifiedReceipt.contractAddress = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.toChecksumAddress)(receipt.contractAddress);
    }
    if (receipt.status) {
        modifiedReceipt.status = Boolean(parseInt(receipt.status, 10));
    }
    return modifiedReceipt;
};
/**
 * @deprecated Use format function from web3-utils package instead
 * Formats the output of a block to its proper values
 * @function outputBlockFormatter
 */
const outputBlockFormatter = (block) => {
    const modifiedBlock = Object.assign({}, block);
    // transform to number
    modifiedBlock.gasLimit = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumber)(block.gasLimit);
    modifiedBlock.gasUsed = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumber)(block.gasUsed);
    modifiedBlock.size = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumber)(block.size);
    modifiedBlock.timestamp = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumber)(block.timestamp);
    if (block.number) {
        modifiedBlock.number = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumber)(block.number);
    }
    if (block.difficulty) {
        modifiedBlock.difficulty = outputBigIntegerFormatter(block.difficulty);
    }
    if (block.totalDifficulty) {
        modifiedBlock.totalDifficulty = outputBigIntegerFormatter(block.totalDifficulty);
    }
    if (block.transactions && Array.isArray(block.transactions)) {
        modifiedBlock.transactions = block.transactions.map(outputTransactionFormatter);
    }
    if (block.miner) {
        modifiedBlock.miner = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.toChecksumAddress)(block.miner);
    }
    if (block.baseFeePerGas) {
        modifiedBlock.baseFeePerGas = outputBigIntegerFormatter(block.baseFeePerGas);
    }
    return modifiedBlock;
};
/**
 * @deprecated Use format function from web3-utils package instead
 * Formats the input of a whisper post and converts all values to HEX
 */
const inputPostFormatter = (post) => {
    var _a;
    const modifiedPost = Object.assign({}, post);
    if (post.ttl) {
        modifiedPost.ttl = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.numberToHex)(post.ttl);
    }
    if (post.workToProve) {
        modifiedPost.workToProve = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.numberToHex)(post.workToProve);
    }
    if (post.priority) {
        modifiedPost.priority = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.numberToHex)(post.priority);
    }
    // fallback
    if (post.topics && !Array.isArray(post.topics)) {
        modifiedPost.topics = post.topics ? [post.topics] : [];
    }
    // format the following options
    modifiedPost.topics = (_a = modifiedPost.topics) === null || _a === void 0 ? void 0 : _a.map(topic => topic.startsWith('0x') ? topic : (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.fromUtf8)(topic));
    return modifiedPost;
};
/**
 * @deprecated Use format function from web3-utils package instead
 * Formats the output of a received post message
 * @function outputPostFormatter
 */
const outputPostFormatter = (post) => {
    var _a;
    const modifiedPost = Object.assign({}, post);
    if (post.expiry) {
        modifiedPost.expiry = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumber)(post.expiry);
    }
    if (post.sent) {
        modifiedPost.sent = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumber)(post.sent);
    }
    if (post.ttl) {
        modifiedPost.ttl = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumber)(post.ttl);
    }
    if (post.workProved) {
        modifiedPost.workProved = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumber)(post.workProved);
    }
    // post.payloadRaw = post.payload;
    // post.payload = utils.hexToAscii(post.payload);
    // if (utils.isJson(post.payload)) {
    //     post.payload = JSON.parse(post.payload);
    // }
    // format the following options
    if (!post.topics) {
        modifiedPost.topics = [];
    }
    modifiedPost.topics = (_a = modifiedPost.topics) === null || _a === void 0 ? void 0 : _a.map(web3_utils__WEBPACK_IMPORTED_MODULE_3__.toUtf8);
    return modifiedPost;
};
/**
 * @deprecated Use format function from web3-utils package instead
 */
const outputSyncingFormatter = (result) => {
    const modifiedResult = Object.assign({}, result);
    modifiedResult.startingBlock = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumber)(result.startingBlock);
    modifiedResult.currentBlock = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumber)(result.currentBlock);
    modifiedResult.highestBlock = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumber)(result.highestBlock);
    if (result.knownStates) {
        modifiedResult.knownStates = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumber)(result.knownStates);
    }
    if (result.pulledStates) {
        modifiedResult.pulledStates = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToNumber)(result.pulledStates);
    }
    return modifiedResult;
};
//# sourceMappingURL=formatters.js.map

/***/ }),

/***/ "./node_modules/web3-core/lib/esm/index.js":
/*!*************************************************!*\
  !*** ./node_modules/web3-core/lib/esm/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DEFAULT_BATCH_REQUEST_TIMEOUT: () => (/* reexport safe */ _web3_batch_request_js__WEBPACK_IMPORTED_MODULE_5__.DEFAULT_BATCH_REQUEST_TIMEOUT),
/* harmony export */   Web3BatchRequest: () => (/* reexport safe */ _web3_batch_request_js__WEBPACK_IMPORTED_MODULE_5__.Web3BatchRequest),
/* harmony export */   Web3Config: () => (/* reexport safe */ _web3_config_js__WEBPACK_IMPORTED_MODULE_0__.Web3Config),
/* harmony export */   Web3ConfigEvent: () => (/* reexport safe */ _web3_config_js__WEBPACK_IMPORTED_MODULE_0__.Web3ConfigEvent),
/* harmony export */   Web3Context: () => (/* reexport safe */ _web3_context_js__WEBPACK_IMPORTED_MODULE_4__.Web3Context),
/* harmony export */   Web3EthPluginBase: () => (/* reexport safe */ _web3_context_js__WEBPACK_IMPORTED_MODULE_4__.Web3EthPluginBase),
/* harmony export */   Web3EventEmitter: () => (/* reexport safe */ _web3_event_emitter_js__WEBPACK_IMPORTED_MODULE_10__.Web3EventEmitter),
/* harmony export */   Web3PluginBase: () => (/* reexport safe */ _web3_context_js__WEBPACK_IMPORTED_MODULE_4__.Web3PluginBase),
/* harmony export */   Web3PromiEvent: () => (/* reexport safe */ _web3_promi_event_js__WEBPACK_IMPORTED_MODULE_9__.Web3PromiEvent),
/* harmony export */   Web3RequestManager: () => (/* reexport safe */ _web3_request_manager_js__WEBPACK_IMPORTED_MODULE_1__.Web3RequestManager),
/* harmony export */   Web3RequestManagerEvent: () => (/* reexport safe */ _web3_request_manager_js__WEBPACK_IMPORTED_MODULE_1__.Web3RequestManagerEvent),
/* harmony export */   Web3Subscription: () => (/* reexport safe */ _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_3__.Web3Subscription),
/* harmony export */   Web3SubscriptionManager: () => (/* reexport safe */ _web3_subscription_manager_js__WEBPACK_IMPORTED_MODULE_2__.Web3SubscriptionManager),
/* harmony export */   formatters: () => (/* reexport module object */ _formatters_js__WEBPACK_IMPORTED_MODULE_8__),
/* harmony export */   inputAddressFormatter: () => (/* reexport safe */ _formatters_js__WEBPACK_IMPORTED_MODULE_8__.inputAddressFormatter),
/* harmony export */   inputBlockNumberFormatter: () => (/* reexport safe */ _formatters_js__WEBPACK_IMPORTED_MODULE_8__.inputBlockNumberFormatter),
/* harmony export */   inputCallFormatter: () => (/* reexport safe */ _formatters_js__WEBPACK_IMPORTED_MODULE_8__.inputCallFormatter),
/* harmony export */   inputDefaultBlockNumberFormatter: () => (/* reexport safe */ _formatters_js__WEBPACK_IMPORTED_MODULE_8__.inputDefaultBlockNumberFormatter),
/* harmony export */   inputLogFormatter: () => (/* reexport safe */ _formatters_js__WEBPACK_IMPORTED_MODULE_8__.inputLogFormatter),
/* harmony export */   inputPostFormatter: () => (/* reexport safe */ _formatters_js__WEBPACK_IMPORTED_MODULE_8__.inputPostFormatter),
/* harmony export */   inputSignFormatter: () => (/* reexport safe */ _formatters_js__WEBPACK_IMPORTED_MODULE_8__.inputSignFormatter),
/* harmony export */   inputStorageKeysFormatter: () => (/* reexport safe */ _formatters_js__WEBPACK_IMPORTED_MODULE_8__.inputStorageKeysFormatter),
/* harmony export */   inputTopicFormatter: () => (/* reexport safe */ _formatters_js__WEBPACK_IMPORTED_MODULE_8__.inputTopicFormatter),
/* harmony export */   inputTransactionFormatter: () => (/* reexport safe */ _formatters_js__WEBPACK_IMPORTED_MODULE_8__.inputTransactionFormatter),
/* harmony export */   isEIP1193Provider: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_6__.isEIP1193Provider),
/* harmony export */   isLegacyRequestProvider: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_6__.isLegacyRequestProvider),
/* harmony export */   isLegacySendAsyncProvider: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_6__.isLegacySendAsyncProvider),
/* harmony export */   isLegacySendProvider: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_6__.isLegacySendProvider),
/* harmony export */   isMetaMaskProvider: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_6__.isMetaMaskProvider),
/* harmony export */   isSupportSubscriptions: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_6__.isSupportSubscriptions),
/* harmony export */   isSupportedProvider: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_6__.isSupportedProvider),
/* harmony export */   isWeb3Provider: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_6__.isWeb3Provider),
/* harmony export */   outputBigIntegerFormatter: () => (/* reexport safe */ _formatters_js__WEBPACK_IMPORTED_MODULE_8__.outputBigIntegerFormatter),
/* harmony export */   outputBlockFormatter: () => (/* reexport safe */ _formatters_js__WEBPACK_IMPORTED_MODULE_8__.outputBlockFormatter),
/* harmony export */   outputLogFormatter: () => (/* reexport safe */ _formatters_js__WEBPACK_IMPORTED_MODULE_8__.outputLogFormatter),
/* harmony export */   outputPostFormatter: () => (/* reexport safe */ _formatters_js__WEBPACK_IMPORTED_MODULE_8__.outputPostFormatter),
/* harmony export */   outputProofFormatter: () => (/* reexport safe */ _formatters_js__WEBPACK_IMPORTED_MODULE_8__.outputProofFormatter),
/* harmony export */   outputSyncingFormatter: () => (/* reexport safe */ _formatters_js__WEBPACK_IMPORTED_MODULE_8__.outputSyncingFormatter),
/* harmony export */   outputTransactionFormatter: () => (/* reexport safe */ _formatters_js__WEBPACK_IMPORTED_MODULE_8__.outputTransactionFormatter),
/* harmony export */   outputTransactionReceiptFormatter: () => (/* reexport safe */ _formatters_js__WEBPACK_IMPORTED_MODULE_8__.outputTransactionReceiptFormatter),
/* harmony export */   txInputOptionsFormatter: () => (/* reexport safe */ _formatters_js__WEBPACK_IMPORTED_MODULE_8__.txInputOptionsFormatter)
/* harmony export */ });
/* harmony import */ var _web3_config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./web3_config.js */ "./node_modules/web3-core/lib/esm/web3_config.js");
/* harmony import */ var _web3_request_manager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./web3_request_manager.js */ "./node_modules/web3-core/lib/esm/web3_request_manager.js");
/* harmony import */ var _web3_subscription_manager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./web3_subscription_manager.js */ "./node_modules/web3-core/lib/esm/web3_subscription_manager.js");
/* harmony import */ var _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./web3_subscriptions.js */ "./node_modules/web3-core/lib/esm/web3_subscriptions.js");
/* harmony import */ var _web3_context_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./web3_context.js */ "./node_modules/web3-core/lib/esm/web3_context.js");
/* harmony import */ var _web3_batch_request_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./web3_batch_request.js */ "./node_modules/web3-core/lib/esm/web3_batch_request.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-core/lib/esm/utils.js");
/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./types.js */ "./node_modules/web3-core/lib/esm/types.js");
/* harmony import */ var _formatters_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./formatters.js */ "./node_modules/web3-core/lib/esm/formatters.js");
/* harmony import */ var _web3_promi_event_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./web3_promi_event.js */ "./node_modules/web3-core/lib/esm/web3_promi_event.js");
/* harmony import */ var _web3_event_emitter_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./web3_event_emitter.js */ "./node_modules/web3-core/lib/esm/web3_event_emitter.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/











// For backward usability export as namespace

//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/web3-core/lib/esm/types.js":
/*!*************************************************!*\
  !*** ./node_modules/web3-core/lib/esm/types.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/web3-core/lib/esm/utils.js":
/*!*************************************************!*\
  !*** ./node_modules/web3-core/lib/esm/utils.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isEIP1193Provider: () => (/* binding */ isEIP1193Provider),
/* harmony export */   isLegacyRequestProvider: () => (/* binding */ isLegacyRequestProvider),
/* harmony export */   isLegacySendAsyncProvider: () => (/* binding */ isLegacySendAsyncProvider),
/* harmony export */   isLegacySendProvider: () => (/* binding */ isLegacySendProvider),
/* harmony export */   isMetaMaskProvider: () => (/* binding */ isMetaMaskProvider),
/* harmony export */   isSupportSubscriptions: () => (/* binding */ isSupportSubscriptions),
/* harmony export */   isSupportedProvider: () => (/* binding */ isSupportedProvider),
/* harmony export */   isWeb3Provider: () => (/* binding */ isWeb3Provider)
/* harmony export */ });
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

const isWeb3Provider = (provider) => web3_types__WEBPACK_IMPORTED_MODULE_0__.Web3BaseProvider.isWeb3Provider(provider);
const isMetaMaskProvider = (provider) => typeof provider !== 'string' &&
    'request' in provider &&
    provider.request.constructor.name === 'AsyncFunction' &&
    'isMetaMask' in provider &&
    provider.isMetaMask;
const isLegacyRequestProvider = (provider) => typeof provider !== 'string' &&
    'request' in provider &&
    provider.request.constructor.name === 'Function';
const isEIP1193Provider = (provider) => typeof provider !== 'string' &&
    'request' in provider &&
    provider.request.constructor.name === 'AsyncFunction';
const isLegacySendProvider = (provider) => typeof provider !== 'string' && 'send' in provider;
const isLegacySendAsyncProvider = (provider) => typeof provider !== 'string' && 'sendAsync' in provider;
const isSupportedProvider = (provider) => provider &&
    (isWeb3Provider(provider) ||
        isEIP1193Provider(provider) ||
        isLegacyRequestProvider(provider) ||
        isLegacySendAsyncProvider(provider) ||
        isLegacySendProvider(provider));
const isSupportSubscriptions = (provider) => {
    if (provider && 'supportsSubscriptions' in provider) {
        return provider.supportsSubscriptions();
    }
    if (provider && typeof provider !== 'string' && 'on' in provider) {
        return true;
    }
    return false;
};
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "./node_modules/web3-core/lib/esm/web3_batch_request.js":
/*!**************************************************************!*\
  !*** ./node_modules/web3-core/lib/esm/web3_batch_request.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DEFAULT_BATCH_REQUEST_TIMEOUT: () => (/* binding */ DEFAULT_BATCH_REQUEST_TIMEOUT),
/* harmony export */   Web3BatchRequest: () => (/* binding */ Web3BatchRequest)
/* harmony export */ });
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};


const DEFAULT_BATCH_REQUEST_TIMEOUT = 1000;
class Web3BatchRequest {
    constructor(requestManager) {
        this._requestManager = requestManager;
        this._requests = new Map();
    }
    get requests() {
        return [...this._requests.values()].map(r => r.payload);
    }
    add(request) {
        const payload = web3_utils__WEBPACK_IMPORTED_MODULE_0__.jsonRpc.toPayload(request);
        const promise = new web3_utils__WEBPACK_IMPORTED_MODULE_0__.Web3DeferredPromise();
        this._requests.set(payload.id, { payload, promise });
        return promise;
    }
    // eslint-disable-next-line class-methods-use-this
    execute(options) {
        return __awaiter(this, void 0, void 0, function* () {
            var _a;
            if (this.requests.length === 0) {
                return Promise.resolve([]);
            }
            const request = new web3_utils__WEBPACK_IMPORTED_MODULE_0__.Web3DeferredPromise({
                timeout: (_a = options === null || options === void 0 ? void 0 : options.timeout) !== null && _a !== void 0 ? _a : DEFAULT_BATCH_REQUEST_TIMEOUT,
                eagerStart: true,
                timeoutMessage: 'Batch request timeout',
            });
            this._processBatchRequest(request).catch(err => request.reject(err));
            request.catch((err) => {
                if (err instanceof web3_errors__WEBPACK_IMPORTED_MODULE_1__.OperationTimeoutError) {
                    this._abortAllRequests('Batch request timeout');
                }
                request.reject(err);
            });
            return request;
        });
    }
    _processBatchRequest(promise) {
        return __awaiter(this, void 0, void 0, function* () {
            var _a, _b;
            const response = yield this._requestManager.sendBatch([...this._requests.values()].map(r => r.payload));
            if (response.length !== this._requests.size) {
                this._abortAllRequests('Invalid batch response');
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.ResponseError(response, `Batch request size mismatch the results size. Requests: ${this._requests.size}, Responses: ${response.length}`);
            }
            const requestIds = this.requests
                .map(r => r.id)
                .map(Number)
                .sort((a, b) => a - b);
            const responseIds = response
                .map(r => r.id)
                .map(Number)
                .sort((a, b) => a - b);
            if (JSON.stringify(requestIds) !== JSON.stringify(responseIds)) {
                this._abortAllRequests('Invalid batch response');
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.ResponseError(response, `Batch request mismatch the results. Requests: [${requestIds.join()}], Responses: [${responseIds.join()}]`);
            }
            for (const res of response) {
                if (web3_utils__WEBPACK_IMPORTED_MODULE_0__.jsonRpc.isResponseWithResult(res)) {
                    (_a = this._requests.get(res.id)) === null || _a === void 0 ? void 0 : _a.promise.resolve(res.result);
                }
                else if (web3_utils__WEBPACK_IMPORTED_MODULE_0__.jsonRpc.isResponseWithError(res)) {
                    (_b = this._requests.get(res.id)) === null || _b === void 0 ? void 0 : _b.promise.reject(res.error);
                }
            }
            promise.resolve(response);
        });
    }
    _abortAllRequests(msg) {
        for (const { promise } of this._requests.values()) {
            promise.reject(new web3_errors__WEBPACK_IMPORTED_MODULE_1__.OperationAbortError(msg));
        }
    }
}
//# sourceMappingURL=web3_batch_request.js.map

/***/ }),

/***/ "./node_modules/web3-core/lib/esm/web3_config.js":
/*!*******************************************************!*\
  !*** ./node_modules/web3-core/lib/esm/web3_config.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Web3Config: () => (/* binding */ Web3Config),
/* harmony export */   Web3ConfigEvent: () => (/* binding */ Web3ConfigEvent)
/* harmony export */ });
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var _web3_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./web3_event_emitter.js */ "./node_modules/web3-core/lib/esm/web3_event_emitter.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/




var Web3ConfigEvent;
(function (Web3ConfigEvent) {
    Web3ConfigEvent["CONFIG_CHANGE"] = "CONFIG_CHANGE";
})(Web3ConfigEvent || (Web3ConfigEvent = {}));
class Web3Config extends _web3_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__.Web3EventEmitter {
    constructor(options) {
        super();
        this.config = {
            handleRevert: false,
            defaultAccount: undefined,
            defaultBlock: 'latest',
            transactionBlockTimeout: 50,
            transactionConfirmationBlocks: 24,
            transactionPollingInterval: 1000,
            transactionPollingTimeout: 750 * 1000,
            transactionReceiptPollingInterval: undefined,
            transactionSendTimeout: 750 * 1000,
            transactionConfirmationPollingInterval: undefined,
            blockHeaderTimeout: 10,
            maxListenersWarningThreshold: 100,
            contractDataInputFill: 'data',
            defaultNetworkId: undefined,
            defaultChain: 'mainnet',
            defaultHardfork: 'london',
            // TODO - Check if there is a default Common
            defaultCommon: undefined,
            defaultTransactionType: '0x2',
            defaultMaxPriorityFeePerGas: (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.toHex)(2500000000),
            enableExperimentalFeatures: {
                useSubscriptionWhenCheckingBlockTimeout: false,
                useRpcCallSpecification: false,
            },
            transactionBuilder: undefined,
            transactionTypeParser: undefined,
            customTransactionSchema: undefined,
            defaultReturnFormat: web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT,
            ignoreGasPricing: false,
        };
        this.setConfig(options !== null && options !== void 0 ? options : {});
    }
    setConfig(options) {
        // TODO: Improve and add key check
        const keys = Object.keys(options);
        for (const key of keys) {
            this._triggerConfigChange(key, options[key]);
            if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isNullish)(options[key]) &&
                typeof options[key] === 'number' &&
                key === 'maxListenersWarningThreshold') {
                // additionally set in event emitter
                this.setMaxListenerWarningThreshold(Number(options[key]));
            }
        }
        Object.assign(this.config, options);
    }
    /**
     * The `handleRevert` options property returns the revert reason string if enabled for the following methods:
     * - web3.eth.sendTransaction()
     * - web3.eth.call()
     * - myContract.methods.myMethod().call()
     * - myContract.methods.myMethod().send()
     * Default is `false`.
     *
     * `Note`: At the moment `handleRevert` is only supported for `sendTransaction` and not for `sendSignedTransaction`
     */
    get handleRevert() {
        return this.config.handleRevert;
    }
    /**
     * Will set the handleRevert
     */
    set handleRevert(val) {
        this._triggerConfigChange('handleRevert', val);
        this.config.handleRevert = val;
    }
    /**
     * The `contractDataInputFill` options property will allow you to set the hash of the method signature and encoded parameters to the property
     * either `data`, `input` or both within your contract.
     * This will affect the contracts send, call and estimateGas methods
     * Default is `data`.
     */
    get contractDataInputFill() {
        return this.config.contractDataInputFill;
    }
    /**
     * Will set the contractDataInputFill
     */
    set contractDataInputFill(val) {
        this._triggerConfigChange('contractDataInputFill', val);
        this.config.contractDataInputFill = val;
    }
    /**
     * This default address is used as the default `from` property, if no `from` property is specified in for the following methods:
     * - web3.eth.sendTransaction()
     * - web3.eth.call()
     * - myContract.methods.myMethod().call()
     * - myContract.methods.myMethod().send()
     */
    get defaultAccount() {
        return this.config.defaultAccount;
    }
    /**
     * Will set the default account.
     */
    set defaultAccount(val) {
        this._triggerConfigChange('defaultAccount', val);
        this.config.defaultAccount = val;
    }
    /**
     * The default block is used for certain methods. You can override it by passing in the defaultBlock as last parameter. The default value is `"latest"`.
     * - web3.eth.getBalance()
     * - web3.eth.getCode()
     * - web3.eth.getTransactionCount()
     * - web3.eth.getStorageAt()
     * - web3.eth.call()
     * - myContract.methods.myMethod().call()
     */
    get defaultBlock() {
        return this.config.defaultBlock;
    }
    /**
     * Will set the default block.
     *
     * - A block number
     * - `"earliest"` - String: The genesis block
     * - `"latest"` - String: The latest block (current head of the blockchain)
     * - `"pending"` - String: The currently mined block (including pending transactions)
     * - `"finalized"` - String: (For POS networks) The finalized block is one which has been accepted as canonical by greater than 2/3 of validators
     * - `"safe"` - String: (For POS networks) The safe head block is one which under normal network conditions, is expected to be included in the canonical chain. Under normal network conditions the safe head and the actual tip of the chain will be equivalent (with safe head trailing only by a few seconds). Safe heads will be less likely to be reorged than the proof of work network's latest blocks.
     */
    set defaultBlock(val) {
        this._triggerConfigChange('defaultBlock', val);
        this.config.defaultBlock = val;
    }
    /**
     * The time used to wait for Ethereum Node to return the sent transaction result.
     * Note: If the RPC call stuck at the Node and therefor timed-out, the transaction may still be pending or even mined by the Network. We recommend checking the pending transactions in such a case.
     * Default is `750` seconds (12.5 minutes).
     */
    get transactionSendTimeout() {
        return this.config.transactionSendTimeout;
    }
    /**
     * Will set the transactionSendTimeout.
     */
    set transactionSendTimeout(val) {
        this._triggerConfigChange('transactionSendTimeout', val);
        this.config.transactionSendTimeout = val;
    }
    /**
     * The `transactionBlockTimeout` is used over socket-based connections. This option defines the amount of new blocks it should wait until the first confirmation happens, otherwise the PromiEvent rejects with a timeout error.
     * Default is `50`.
     */
    get transactionBlockTimeout() {
        return this.config.transactionBlockTimeout;
    }
    /**
     * Will set the transactionBlockTimeout.
     */
    set transactionBlockTimeout(val) {
        this._triggerConfigChange('transactionBlockTimeout', val);
        this.config.transactionBlockTimeout = val;
    }
    /**
     * This defines the number of blocks it requires until a transaction is considered confirmed.
     * Default is `24`.
     */
    get transactionConfirmationBlocks() {
        return this.config.transactionConfirmationBlocks;
    }
    /**
     * Will set the transactionConfirmationBlocks.
     */
    set transactionConfirmationBlocks(val) {
        this._triggerConfigChange('transactionConfirmationBlocks', val);
        this.config.transactionConfirmationBlocks = val;
    }
    /**
     * Used over HTTP connections. This option defines the number of seconds between Web3 calls for a receipt which confirms that a transaction was mined by the network.
     * Default is `1000` ms.
     */
    get transactionPollingInterval() {
        return this.config.transactionPollingInterval;
    }
    /**
     * Will set the transactionPollingInterval.
     */
    set transactionPollingInterval(val) {
        this._triggerConfigChange('transactionPollingInterval', val);
        this.config.transactionPollingInterval = val;
        this.transactionReceiptPollingInterval = val;
        this.transactionConfirmationPollingInterval = val;
    }
    /**
     * Used over HTTP connections. This option defines the number of seconds Web3 will wait for a receipt which confirms that a transaction was mined by the network. Note: If this method times out, the transaction may still be pending.
     * Default is `750` seconds (12.5 minutes).
     */
    get transactionPollingTimeout() {
        return this.config.transactionPollingTimeout;
    }
    /**
     * Will set the transactionPollingTimeout.
     */
    set transactionPollingTimeout(val) {
        this._triggerConfigChange('transactionPollingTimeout', val);
        this.config.transactionPollingTimeout = val;
    }
    /**
     * The `transactionPollingInterval` is used over HTTP connections. This option defines the number of seconds between Web3 calls for a receipt which confirms that a transaction was mined by the network.
     * Default is `undefined`
     */
    get transactionReceiptPollingInterval() {
        return this.config.transactionReceiptPollingInterval;
    }
    /**
     * Will set the transactionReceiptPollingInterval
     */
    set transactionReceiptPollingInterval(val) {
        this._triggerConfigChange('transactionReceiptPollingInterval', val);
        this.config.transactionReceiptPollingInterval = val;
    }
    get transactionConfirmationPollingInterval() {
        return this.config.transactionConfirmationPollingInterval;
    }
    set transactionConfirmationPollingInterval(val) {
        this._triggerConfigChange('transactionConfirmationPollingInterval', val);
        this.config.transactionConfirmationPollingInterval = val;
    }
    /**
     * The blockHeaderTimeout is used over socket-based connections. This option defines the amount seconds it should wait for `'newBlockHeaders'` event before falling back to polling to fetch transaction receipt.
     * Default is `10` seconds.
     */
    get blockHeaderTimeout() {
        return this.config.blockHeaderTimeout;
    }
    /**
     * Will set the blockHeaderTimeout
     */
    set blockHeaderTimeout(val) {
        this._triggerConfigChange('blockHeaderTimeout', val);
        this.config.blockHeaderTimeout = val;
    }
    /**
     * The enableExperimentalFeatures is used to enable trying new experimental features that are still not fully implemented or not fully tested or still have some related issues.
     * Default is `false` for every feature.
     */
    get enableExperimentalFeatures() {
        return this.config.enableExperimentalFeatures;
    }
    /**
     * Will set the enableExperimentalFeatures
     */
    set enableExperimentalFeatures(val) {
        this._triggerConfigChange('enableExperimentalFeatures', val);
        this.config.enableExperimentalFeatures = val;
    }
    get maxListenersWarningThreshold() {
        return this.config.maxListenersWarningThreshold;
    }
    set maxListenersWarningThreshold(val) {
        this._triggerConfigChange('maxListenersWarningThreshold', val);
        this.setMaxListenerWarningThreshold(val);
        this.config.maxListenersWarningThreshold = val;
    }
    get defaultReturnFormat() {
        return this.config.defaultReturnFormat;
    }
    set defaultReturnFormat(val) {
        this._triggerConfigChange('defaultReturnFormat', val);
        this.config.defaultReturnFormat = val;
    }
    get defaultNetworkId() {
        return this.config.defaultNetworkId;
    }
    set defaultNetworkId(val) {
        this._triggerConfigChange('defaultNetworkId', val);
        this.config.defaultNetworkId = val;
    }
    get defaultChain() {
        return this.config.defaultChain;
    }
    set defaultChain(val) {
        if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isNullish)(this.config.defaultCommon) &&
            !(0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isNullish)(this.config.defaultCommon.baseChain) &&
            val !== this.config.defaultCommon.baseChain)
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.ConfigChainMismatchError(this.config.defaultChain, val);
        this._triggerConfigChange('defaultChain', val);
        this.config.defaultChain = val;
    }
    /**
     * Will return the default hardfork. Default is `london`
     * The default hardfork property can be one of the following:
     * - `chainstart`
     * - `homestead`
     * - `dao`
     * - `tangerineWhistle`
     * - `spuriousDragon`
     * - `byzantium`
     * - `constantinople`
     * - `petersburg`
     * - `istanbul`
     * - `berlin`
     * - `london`
     * - 'arrowGlacier',
     * - 'tangerineWhistle',
     * - 'muirGlacier'
     *
     */
    get defaultHardfork() {
        return this.config.defaultHardfork;
    }
    /**
     * Will set the default hardfork.
     *
     */
    set defaultHardfork(val) {
        if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isNullish)(this.config.defaultCommon) &&
            !(0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isNullish)(this.config.defaultCommon.hardfork) &&
            val !== this.config.defaultCommon.hardfork)
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.ConfigHardforkMismatchError(this.config.defaultCommon.hardfork, val);
        this._triggerConfigChange('defaultHardfork', val);
        this.config.defaultHardfork = val;
    }
    /**
     *
     * Will get the default common property
     * The default common property does contain the following Common object:
     * - `customChain` - `Object`: The custom chain properties
     * 	- `name` - `string`: (optional) The name of the chain
     * 	- `networkId` - `number`: Network ID of the custom chain
     * 	- `chainId` - `number`: Chain ID of the custom chain
     * - `baseChain` - `string`: (optional) mainnet, goerli, kovan, rinkeby, or ropsten
     * - `hardfork` - `string`: (optional) chainstart, homestead, dao, tangerineWhistle, spuriousDragon, byzantium, constantinople, petersburg, istanbul, berlin, or london
     * Default is `undefined`.
     *
     */
    get defaultCommon() {
        return this.config.defaultCommon;
    }
    /**
     * Will set the default common property
     *
     */
    set defaultCommon(val) {
        // validation check if default hardfork is set and matches defaultCommon hardfork
        if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isNullish)(this.config.defaultHardfork) &&
            !(0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isNullish)(val) &&
            !(0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isNullish)(val.hardfork) &&
            this.config.defaultHardfork !== val.hardfork)
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.ConfigHardforkMismatchError(this.config.defaultHardfork, val.hardfork);
        if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isNullish)(this.config.defaultChain) &&
            !(0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isNullish)(val) &&
            !(0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isNullish)(val.baseChain) &&
            this.config.defaultChain !== val.baseChain)
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.ConfigChainMismatchError(this.config.defaultChain, val.baseChain);
        this._triggerConfigChange('defaultCommon', val);
        this.config.defaultCommon = val;
    }
    /**
     *  Will get the ignoreGasPricing property. When true, the gasPrice, maxPriorityFeePerGas, and maxFeePerGas will not be autofilled in the transaction object.
     *  Useful when you want wallets to handle gas pricing.
     */
    get ignoreGasPricing() {
        return this.config.ignoreGasPricing;
    }
    set ignoreGasPricing(val) {
        this._triggerConfigChange('ignoreGasPricing', val);
        this.config.ignoreGasPricing = val;
    }
    get defaultTransactionType() {
        return this.config.defaultTransactionType;
    }
    set defaultTransactionType(val) {
        this._triggerConfigChange('defaultTransactionType', val);
        this.config.defaultTransactionType = val;
    }
    get defaultMaxPriorityFeePerGas() {
        return this.config.defaultMaxPriorityFeePerGas;
    }
    set defaultMaxPriorityFeePerGas(val) {
        this._triggerConfigChange('defaultMaxPriorityFeePerGas', val);
        this.config.defaultMaxPriorityFeePerGas = val;
    }
    get transactionBuilder() {
        return this.config.transactionBuilder;
    }
    set transactionBuilder(val) {
        this._triggerConfigChange('transactionBuilder', val);
        this.config.transactionBuilder = val;
    }
    get transactionTypeParser() {
        return this.config.transactionTypeParser;
    }
    set transactionTypeParser(val) {
        this._triggerConfigChange('transactionTypeParser', val);
        this.config.transactionTypeParser = val;
    }
    get customTransactionSchema() {
        return this.config.customTransactionSchema;
    }
    set customTransactionSchema(schema) {
        this._triggerConfigChange('customTransactionSchema', schema);
        this.config.customTransactionSchema = schema;
    }
    _triggerConfigChange(config, newValue) {
        this.emit(Web3ConfigEvent.CONFIG_CHANGE, {
            name: config,
            oldValue: this.config[config],
            newValue,
        });
    }
}
//# sourceMappingURL=web3_config.js.map

/***/ }),

/***/ "./node_modules/web3-core/lib/esm/web3_context.js":
/*!********************************************************!*\
  !*** ./node_modules/web3-core/lib/esm/web3_context.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Web3Context: () => (/* binding */ Web3Context),
/* harmony export */   Web3EthPluginBase: () => (/* binding */ Web3EthPluginBase),
/* harmony export */   Web3PluginBase: () => (/* binding */ Web3PluginBase)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_eth_accounts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-eth-accounts */ "./node_modules/web3-eth-accounts/lib/esm/index.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-core/lib/esm/utils.js");
/* harmony import */ var _web3_batch_request_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./web3_batch_request.js */ "./node_modules/web3-core/lib/esm/web3_batch_request.js");
/* harmony import */ var _web3_config_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./web3_config.js */ "./node_modules/web3-core/lib/esm/web3_config.js");
/* harmony import */ var _web3_request_manager_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./web3_request_manager.js */ "./node_modules/web3-core/lib/esm/web3_request_manager.js");
/* harmony import */ var _web3_subscription_manager_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./web3_subscription_manager.js */ "./node_modules/web3-core/lib/esm/web3_subscription_manager.js");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
// eslint-disable-next-line max-classes-per-file





// eslint-disable-next-line import/no-cycle



class Web3Context extends _web3_config_js__WEBPACK_IMPORTED_MODULE_5__.Web3Config {
    constructor(providerOrContext) {
        var _a;
        super();
        this.providers = _web3_request_manager_js__WEBPACK_IMPORTED_MODULE_6__.Web3RequestManager.providers;
        // If "providerOrContext" is provided as "string" or an objects matching "SupportedProviders" interface
        if ((0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(providerOrContext) ||
            (typeof providerOrContext === 'string' && providerOrContext.trim() !== '') ||
            (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isSupportedProvider)(providerOrContext)) {
            this._requestManager = new _web3_request_manager_js__WEBPACK_IMPORTED_MODULE_6__.Web3RequestManager(providerOrContext);
            this._subscriptionManager = new _web3_subscription_manager_js__WEBPACK_IMPORTED_MODULE_7__.Web3SubscriptionManager(this._requestManager, {});
            return;
        }
        const { config, provider, requestManager, subscriptionManager, registeredSubscriptions, accountProvider, wallet, requestManagerMiddleware, } = providerOrContext;
        this.setConfig(config !== null && config !== void 0 ? config : {});
        this._requestManager =
            requestManager !== null && requestManager !== void 0 ? requestManager : new _web3_request_manager_js__WEBPACK_IMPORTED_MODULE_6__.Web3RequestManager(provider, (_a = config === null || config === void 0 ? void 0 : config.enableExperimentalFeatures) === null || _a === void 0 ? void 0 : _a.useSubscriptionWhenCheckingBlockTimeout, requestManagerMiddleware);
        if (subscriptionManager) {
            this._subscriptionManager = subscriptionManager;
        }
        else {
            this._subscriptionManager = new _web3_subscription_manager_js__WEBPACK_IMPORTED_MODULE_7__.Web3SubscriptionManager(this.requestManager, registeredSubscriptions !== null && registeredSubscriptions !== void 0 ? registeredSubscriptions : {});
        }
        if (accountProvider) {
            this._accountProvider = accountProvider;
        }
        if (wallet) {
            this._wallet = wallet;
        }
    }
    get requestManager() {
        return this._requestManager;
    }
    /**
     * Will return the current subscriptionManager ({@link Web3SubscriptionManager})
     */
    get subscriptionManager() {
        return this._subscriptionManager;
    }
    get wallet() {
        return this._wallet;
    }
    get accountProvider() {
        return this._accountProvider;
    }
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    static fromContextObject(...args) {
        return new this(...args.reverse());
    }
    getContextObject() {
        var _a;
        return {
            config: this.config,
            provider: this.provider,
            requestManager: this.requestManager,
            subscriptionManager: this.subscriptionManager,
            registeredSubscriptions: (_a = this.subscriptionManager) === null || _a === void 0 ? void 0 : _a.registeredSubscriptions,
            providers: this.providers,
            wallet: this.wallet,
            accountProvider: this.accountProvider,
        };
    }
    /**
     * Use to create new object of any type extended by `Web3Context`
     * and link it to current context. This can be used to initiate a global context object
     * and then use it to create new objects of any type extended by `Web3Context`.
     */
    use(ContextRef, ...args) {
        const newContextChild = new ContextRef(...[...args, this.getContextObject()]);
        this.on(_web3_config_js__WEBPACK_IMPORTED_MODULE_5__.Web3ConfigEvent.CONFIG_CHANGE, event => {
            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
            newContextChild.setConfig({ [event.name]: event.newValue });
        });
        // @ts-expect-error No index signature with a parameter of type 'string' was found on type 'Web3Context<API, RegisteredSubs>'
        this[ContextRef.name] = newContextChild;
        return newContextChild;
    }
    /**
     * Link current context to another context.
     */
    link(parentContext) {
        this.setConfig(parentContext.config);
        this._requestManager = parentContext.requestManager;
        this.provider = parentContext.provider;
        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
        this._subscriptionManager = parentContext.subscriptionManager;
        this._wallet = parentContext.wallet;
        this._accountProvider = parentContext._accountProvider;
        parentContext.on(_web3_config_js__WEBPACK_IMPORTED_MODULE_5__.Web3ConfigEvent.CONFIG_CHANGE, event => {
            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
            this.setConfig({ [event.name]: event.newValue });
        });
    }
    // eslint-disable-next-line no-use-before-define
    registerPlugin(plugin) {
        // @ts-expect-error No index signature with a parameter of type 'string' was found on type 'Web3Context<API, RegisteredSubs>'
        if (this[plugin.pluginNamespace] !== undefined)
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.ExistingPluginNamespaceError(plugin.pluginNamespace);
        const _pluginObject = {
            [plugin.pluginNamespace]: plugin,
        };
        _pluginObject[plugin.pluginNamespace].link(this);
        Object.assign(this, _pluginObject);
    }
    /**
     * Will return the current provider.
     *
     * @returns Returns the current provider
     * @example
     * ```ts
     * const web3 = new Web3Context("http://localhost:8545");
     * console.log(web3.provider);
     * > HttpProvider {
     * 	clientUrl: 'http://localhost:8545',
     * 	httpProviderOptions: undefined
     *  }
     * ```
     */
    get provider() {
        return this.currentProvider;
    }
    /**
     * Will set the current provider.
     *
     * @param provider - The provider to set
     *
     * Accepted providers are of type {@link SupportedProviders}
     * @example
     * ```ts
     *  const web3Context = new web3ContextContext("http://localhost:8545");
     * web3Context.provider = "ws://localhost:8545";
     * console.log(web3Context.provider);
     * > WebSocketProvider {
     * _eventEmitter: EventEmitter {
     * _events: [Object: null prototype] {},
     * _eventsCount: 0,
     * ...
     * }
     * ```
     */
    set provider(provider) {
        this.requestManager.setProvider(provider);
    }
    /**
     * Will return the current provider. (The same as `provider`)
     *
     * @returns Returns the current provider
     * @example
     * ```ts
     * const web3Context = new Web3Context("http://localhost:8545");
     * console.log(web3Context.provider);
     * > HttpProvider {
     * 	clientUrl: 'http://localhost:8545',
     * 	httpProviderOptions: undefined
     *  }
     * ```
     */
    get currentProvider() {
        return this.requestManager.provider;
    }
    /**
     * Will set the current provider. (The same as `provider`)
     *
     * @param provider - {@link SupportedProviders} The provider to set
     *
     * @example
     * ```ts
     *  const web3Context = new Web3Context("http://localhost:8545");
     * web3Context.currentProvider = "ws://localhost:8545";
     * console.log(web3Context.provider);
     * > WebSocketProvider {
     * _eventEmitter: EventEmitter {
     * _events: [Object: null prototype] {},
     * _eventsCount: 0,
     * ...
     * }
     * ```
     */
    set currentProvider(provider) {
        this.requestManager.setProvider(provider);
    }
    /**
     * Will return the givenProvider if available.
     *
     * When using web3.js in an Ethereum compatible browser, it will set with the current native provider by that browser. Will return the given provider by the (browser) environment, otherwise `undefined`.
     */
    // eslint-disable-next-line class-methods-use-this
    get givenProvider() {
        return Web3Context.givenProvider;
    }
    /**
     * Will set the provider.
     *
     * @param provider - {@link SupportedProviders} The provider to set
     * @returns Returns true if the provider was set
     */
    setProvider(provider) {
        this.provider = provider;
        return true;
    }
    setRequestManagerMiddleware(requestManagerMiddleware) {
        this.requestManager.setMiddleware(requestManagerMiddleware);
    }
    /**
     * Will return the {@link Web3BatchRequest} constructor.
     */
    get BatchRequest() {
        return _web3_batch_request_js__WEBPACK_IMPORTED_MODULE_4__.Web3BatchRequest.bind(undefined, this._requestManager);
    }
    /**
     * This method allows extending the web3 modules.
     * Note: This method is only for backward compatibility, and It is recommended to use Web3 v4 Plugin feature for extending web3.js functionality if you are developing something new.
     */
    extend(extendObj) {
        var _a;
        // @ts-expect-error No index signature with a parameter of type 'string' was found on type 'Web3Context<API, RegisteredSubs>'
        if (extendObj.property && !this[extendObj.property])
            // @ts-expect-error No index signature with a parameter of type 'string' was found on type 'Web3Context<API, RegisteredSubs>'
            this[extendObj.property] = {};
        (_a = extendObj.methods) === null || _a === void 0 ? void 0 : _a.forEach(element => {
            const method = (...givenParams) => __awaiter(this, void 0, void 0, function* () {
                return this.requestManager.send({
                    method: element.call,
                    params: givenParams,
                });
            });
            if (extendObj.property)
                // @ts-expect-error No index signature with a parameter of type 'string' was found on type 'Web3Context<API, RegisteredSubs>'
                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
                this[extendObj.property][element.name] = method;
            // @ts-expect-error No index signature with a parameter of type 'string' was found on type 'Web3Context<API, RegisteredSubs>'
            else
                this[element.name] = method;
        });
        return this;
    }
}
Web3Context.providers = _web3_request_manager_js__WEBPACK_IMPORTED_MODULE_6__.Web3RequestManager.providers;
/**
 * Extend this class when creating a plugin that either doesn't require {@link EthExecutionAPI},
 * or interacts with a RPC node that doesn't fully implement {@link EthExecutionAPI}.
 *
 * To add type support for RPC methods to the {@link Web3RequestManager},
 * define a {@link Web3APISpec} and pass it as a generic to Web3PluginBase like so:
 *
 * @example
 * ```ts
 * type CustomRpcApi = {
 *	custom_rpc_method: () => string;
 *	custom_rpc_method_with_parameters: (parameter1: string, parameter2: number) => string;
 * };
 *
 * class CustomPlugin extends Web3PluginBase<CustomRpcApi> {...}
 * ```
 */
class Web3PluginBase extends Web3Context {
    // eslint-disable-next-line class-methods-use-this
    registerNewTransactionType(type, txClass) {
        web3_eth_accounts__WEBPACK_IMPORTED_MODULE_2__.TransactionFactory.registerTransactionType(type, txClass);
    }
}
/**
 * Extend this class when creating a plugin that makes use of {@link EthExecutionAPI},
 * or depends on other Web3 packages (such as `web3-eth-contract`) that depend on {@link EthExecutionAPI}.
 *
 * To add type support for RPC methods to the {@link Web3RequestManager} (in addition to {@link EthExecutionAPI}),
 * define a {@link Web3APISpec} and pass it as a generic to Web3PluginBase like so:
 *
 * @example
 * ```ts
 * type CustomRpcApi = {
 *	custom_rpc_method: () => string;
 *	custom_rpc_method_with_parameters: (parameter1: string, parameter2: number) => string;
 * };
 *
 * class CustomPlugin extends Web3PluginBase<CustomRpcApi> {...}
 * ```
 */
class Web3EthPluginBase extends Web3PluginBase {
}
//# sourceMappingURL=web3_context.js.map

/***/ }),

/***/ "./node_modules/web3-core/lib/esm/web3_event_emitter.js":
/*!**************************************************************!*\
  !*** ./node_modules/web3-core/lib/esm/web3_event_emitter.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Web3EventEmitter: () => (/* binding */ Web3EventEmitter)
/* harmony export */ });
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

class Web3EventEmitter {
    constructor() {
        this._emitter = new web3_utils__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    }
    on(eventName, fn) {
        // eslint-disable-next-line @typescript-eslint/no-misused-promises
        this._emitter.on(eventName, fn);
    }
    once(eventName, fn) {
        // eslint-disable-next-line @typescript-eslint/no-misused-promises
        this._emitter.once(eventName, fn);
    }
    off(eventName, fn) {
        // eslint-disable-next-line @typescript-eslint/no-misused-promises
        this._emitter.off(eventName, fn);
    }
    emit(eventName, params) {
        this._emitter.emit(eventName, params);
    }
    listenerCount(eventName) {
        return this._emitter.listenerCount(eventName);
    }
    listeners(eventName) {
        return this._emitter.listeners(eventName);
    }
    eventNames() {
        return this._emitter.eventNames();
    }
    removeAllListeners() {
        return this._emitter.removeAllListeners();
    }
    setMaxListenerWarningThreshold(maxListenersWarningThreshold) {
        this._emitter.setMaxListeners(maxListenersWarningThreshold);
    }
    getMaxListeners() {
        return this._emitter.getMaxListeners();
    }
}
//# sourceMappingURL=web3_event_emitter.js.map

/***/ }),

/***/ "./node_modules/web3-core/lib/esm/web3_promi_event.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-core/lib/esm/web3_promi_event.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Web3PromiEvent: () => (/* binding */ Web3PromiEvent)
/* harmony export */ });
/* harmony import */ var _web3_event_emitter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./web3_event_emitter.js */ "./node_modules/web3-core/lib/esm/web3_event_emitter.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var _a;

class Web3PromiEvent extends _web3_event_emitter_js__WEBPACK_IMPORTED_MODULE_0__.Web3EventEmitter {
    constructor(executor) {
        super();
        // public tag to treat object as promise by different libs
        // eslint-disable-next-line @typescript-eslint/prefer-as-const
        this[_a] = 'Promise';
        this._promise = new Promise(executor);
    }
    then(onfulfilled, onrejected) {
        return __awaiter(this, void 0, void 0, function* () {
            return this._promise.then(onfulfilled, onrejected);
        });
    }
    catch(onrejected) {
        return __awaiter(this, void 0, void 0, function* () {
            return this._promise.catch(onrejected);
        });
    }
    finally(onfinally) {
        return __awaiter(this, void 0, void 0, function* () {
            return this._promise.finally(onfinally);
        });
    }
    on(eventName, fn) {
        super.on(eventName, fn);
        return this;
    }
    once(eventName, fn) {
        super.once(eventName, fn);
        return this;
    }
}
_a = Symbol.toStringTag;
//# sourceMappingURL=web3_promi_event.js.map

/***/ }),

/***/ "./node_modules/web3-core/lib/esm/web3_request_manager.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-core/lib/esm/web3_request_manager.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Web3RequestManager: () => (/* binding */ Web3RequestManager),
/* harmony export */   Web3RequestManagerEvent: () => (/* binding */ Web3RequestManagerEvent)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_providers_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-providers-http */ "./node_modules/web3-providers-http/lib/esm/index.js");
/* harmony import */ var web3_providers_ws__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-providers-ws */ "./node_modules/web3-providers-ws/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-core/lib/esm/utils.js");
/* harmony import */ var _web3_event_emitter_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./web3_event_emitter.js */ "./node_modules/web3-core/lib/esm/web3_event_emitter.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};






var Web3RequestManagerEvent;
(function (Web3RequestManagerEvent) {
    Web3RequestManagerEvent["PROVIDER_CHANGED"] = "PROVIDER_CHANGED";
    Web3RequestManagerEvent["BEFORE_PROVIDER_CHANGE"] = "BEFORE_PROVIDER_CHANGE";
})(Web3RequestManagerEvent || (Web3RequestManagerEvent = {}));
const availableProviders = {
    HttpProvider: web3_providers_http__WEBPACK_IMPORTED_MODULE_1__["default"],
    WebsocketProvider: web3_providers_ws__WEBPACK_IMPORTED_MODULE_2__["default"],
};
class Web3RequestManager extends _web3_event_emitter_js__WEBPACK_IMPORTED_MODULE_5__.Web3EventEmitter {
    constructor(provider, useRpcCallSpecification, requestManagerMiddleware) {
        super();
        if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.isNullish)(provider)) {
            this.setProvider(provider);
        }
        this.useRpcCallSpecification = useRpcCallSpecification;
        if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.isNullish)(requestManagerMiddleware))
            this.middleware = requestManagerMiddleware;
    }
    /**
     * Will return all available providers
     */
    static get providers() {
        return availableProviders;
    }
    /**
     * Will return the current provider.
     *
     * @returns Returns the current provider
     */
    get provider() {
        return this._provider;
    }
    /**
     * Will return all available providers
     */
    // eslint-disable-next-line class-methods-use-this
    get providers() {
        return availableProviders;
    }
    /**
     * Use to set provider. Provider can be a provider instance or a string.
     *
     * @param provider - The provider to set
     */
    setProvider(provider) {
        let newProvider;
        // autodetect provider
        if (provider && typeof provider === 'string' && this.providers) {
            // HTTP
            if (/^http(s)?:\/\//i.test(provider)) {
                newProvider = new this.providers.HttpProvider(provider);
                // WS
            }
            else if (/^ws(s)?:\/\//i.test(provider)) {
                newProvider = new this.providers.WebsocketProvider(provider);
            }
            else {
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.ProviderError(`Can't autodetect provider for "${provider}"`);
            }
        }
        else if ((0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.isNullish)(provider)) {
            // In case want to unset the provider
            newProvider = undefined;
        }
        else {
            newProvider = provider;
        }
        this.emit(Web3RequestManagerEvent.BEFORE_PROVIDER_CHANGE, this._provider);
        this._provider = newProvider;
        this.emit(Web3RequestManagerEvent.PROVIDER_CHANGED, this._provider);
        return true;
    }
    setMiddleware(requestManagerMiddleware) {
        this.middleware = requestManagerMiddleware;
    }
    /**
     *
     * Will execute a request
     *
     * @param request - {@link Web3APIRequest} The request to send
     *
     * @returns The response of the request {@link ResponseType}. If there is error
     * in the response, will throw an error
     */
    send(request) {
        return __awaiter(this, void 0, void 0, function* () {
            const requestObj = Object.assign({}, request);
            let response = yield this._sendRequest(requestObj);
            if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.isNullish)(this.middleware))
                response = yield this.middleware.processResponse(response);
            if (web3_utils__WEBPACK_IMPORTED_MODULE_3__.jsonRpc.isResponseWithResult(response)) {
                return response.result;
            }
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.ResponseError(response);
        });
    }
    /**
     * Same as send, but, will execute a batch of requests
     *
     * @param request {@link JsonRpcBatchRequest} The batch request to send
     */
    sendBatch(request) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this._sendRequest(request);
            return response;
        });
    }
    _sendRequest(request) {
        return __awaiter(this, void 0, void 0, function* () {
            const { provider } = this;
            if ((0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.isNullish)(provider)) {
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.ProviderError('Provider not available. Use `.setProvider` or `.provider=` to initialize the provider.');
            }
            let payload = (web3_utils__WEBPACK_IMPORTED_MODULE_3__.jsonRpc.isBatchRequest(request)
                ? web3_utils__WEBPACK_IMPORTED_MODULE_3__.jsonRpc.toBatchPayload(request)
                : web3_utils__WEBPACK_IMPORTED_MODULE_3__.jsonRpc.toPayload(request));
            if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.isNullish)(this.middleware)) {
                payload = yield this.middleware.processRequest(payload);
            }
            if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isWeb3Provider)(provider)) {
                let response;
                try {
                    response = yield provider.request(payload);
                }
                catch (error) {
                    // Check if the provider throw an error instead of reject with error
                    response = error;
                }
                return this._processJsonRpcResponse(payload, response, { legacy: false, error: false });
            }
            if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isEIP1193Provider)(provider)) {
                return provider
                    .request(payload)
                    .then(res => this._processJsonRpcResponse(payload, res, {
                    legacy: true,
                    error: false,
                }))
                    .catch(error => this._processJsonRpcResponse(payload, error, { legacy: true, error: true }));
            }
            // TODO: This could be deprecated and removed.
            if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isLegacyRequestProvider)(provider)) {
                return new Promise((resolve, reject) => {
                    const rejectWithError = (err) => {
                        reject(this._processJsonRpcResponse(payload, err, {
                            legacy: true,
                            error: true,
                        }));
                    };
                    const resolveWithResponse = (response) => resolve(this._processJsonRpcResponse(payload, response, {
                        legacy: true,
                        error: false,
                    }));
                    const result = provider.request(payload, 
                    // a callback that is expected to be called after getting the response:
                    (err, response) => {
                        if (err) {
                            return rejectWithError(err);
                        }
                        return resolveWithResponse(response);
                    });
                    // Some providers, that follow a previous drafted version of EIP1193, has a `request` function
                    //	that is not defined as `async`, but it returns a promise.
                    // Such providers would not be picked with if(isEIP1193Provider(provider)) above
                    //	because the `request` function was not defined with `async` and so the function definition is not `AsyncFunction`.
                    // Like this provider: https://github.dev/NomicFoundation/hardhat/blob/62bea2600785595ba36f2105564076cf5cdf0fd8/packages/hardhat-core/src/internal/core/providers/backwards-compatibility.ts#L19
                    // So check if the returned result is a Promise, and resolve with it accordingly.
                    // Note: in this case we expect the callback provided above to never be called.
                    if ((0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(result)) {
                        const responsePromise = result;
                        responsePromise.then(resolveWithResponse).catch(error => {
                            try {
                                // Attempt to process the error response
                                const processedError = this._processJsonRpcResponse(payload, error, { legacy: true, error: true });
                                reject(processedError);
                            }
                            catch (processingError) {
                                // Catch any errors that occur during the error processing
                                reject(processingError);
                            }
                        });
                    }
                });
            }
            // TODO: This could be deprecated and removed.
            if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isLegacySendProvider)(provider)) {
                return new Promise((resolve, reject) => {
                    provider.send(payload, (err, response) => {
                        if (err) {
                            return reject(this._processJsonRpcResponse(payload, err, {
                                legacy: true,
                                error: true,
                            }));
                        }
                        if ((0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.isNullish)(response)) {
                            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.ResponseError({}, 'Got a "nullish" response from provider.');
                        }
                        return resolve(this._processJsonRpcResponse(payload, response, {
                            legacy: true,
                            error: false,
                        }));
                    });
                });
            }
            // TODO: This could be deprecated and removed.
            if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isLegacySendAsyncProvider)(provider)) {
                return provider
                    .sendAsync(payload)
                    .then(response => this._processJsonRpcResponse(payload, response, { legacy: true, error: false }))
                    .catch(error => this._processJsonRpcResponse(payload, error, {
                    legacy: true,
                    error: true,
                }));
            }
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.ProviderError('Provider does not have a request or send method to use.');
        });
    }
    // eslint-disable-next-line class-methods-use-this
    _processJsonRpcResponse(payload, response, { legacy, error }) {
        if ((0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.isNullish)(response)) {
            return this._buildResponse(payload, 
            // Some providers uses "null" as valid empty response
            // eslint-disable-next-line no-null/no-null
            null, error);
        }
        // This is the majority of the cases so check these first
        // A valid JSON-RPC response with error object
        if (web3_utils__WEBPACK_IMPORTED_MODULE_3__.jsonRpc.isResponseWithError(response)) {
            // check if its an rpc error
            if (this.useRpcCallSpecification &&
                (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.isResponseRpcError)(response)) {
                const rpcErrorResponse = response;
                // check if rpc error flag is on and response error code match an EIP-1474 or a standard rpc error code
                if (web3_errors__WEBPACK_IMPORTED_MODULE_0__.rpcErrorsMap.get(rpcErrorResponse.error.code)) {
                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                    const Err = web3_errors__WEBPACK_IMPORTED_MODULE_0__.rpcErrorsMap.get(rpcErrorResponse.error.code).error;
                    throw new Err(rpcErrorResponse);
                }
                else {
                    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.RpcError(rpcErrorResponse);
                }
            }
            else if (!Web3RequestManager._isReverted(response)) {
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidResponseError(response, payload);
            }
        }
        // This is the majority of the cases so check these first
        // A valid JSON-RPC response with result object
        if (web3_utils__WEBPACK_IMPORTED_MODULE_3__.jsonRpc.isResponseWithResult(response)) {
            return response;
        }
        if (response instanceof Error) {
            Web3RequestManager._isReverted(response);
            throw response;
        }
        if (!legacy && web3_utils__WEBPACK_IMPORTED_MODULE_3__.jsonRpc.isBatchRequest(payload) && web3_utils__WEBPACK_IMPORTED_MODULE_3__.jsonRpc.isBatchResponse(response)) {
            return response;
        }
        if (legacy && !error && web3_utils__WEBPACK_IMPORTED_MODULE_3__.jsonRpc.isBatchRequest(payload)) {
            return response;
        }
        if (legacy && error && web3_utils__WEBPACK_IMPORTED_MODULE_3__.jsonRpc.isBatchRequest(payload)) {
            // In case of error batch response we don't want to throw Invalid response
            throw response;
        }
        if (legacy &&
            !web3_utils__WEBPACK_IMPORTED_MODULE_3__.jsonRpc.isResponseWithError(response) &&
            !web3_utils__WEBPACK_IMPORTED_MODULE_3__.jsonRpc.isResponseWithResult(response)) {
            return this._buildResponse(payload, response, error);
        }
        if (web3_utils__WEBPACK_IMPORTED_MODULE_3__.jsonRpc.isBatchRequest(payload) && !Array.isArray(response)) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.ResponseError(response, 'Got normal response for a batch request.');
        }
        if (!web3_utils__WEBPACK_IMPORTED_MODULE_3__.jsonRpc.isBatchRequest(payload) && Array.isArray(response)) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.ResponseError(response, 'Got batch response for a normal request.');
        }
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.ResponseError(response, 'Invalid response');
    }
    static _isReverted(response) {
        let error;
        if (web3_utils__WEBPACK_IMPORTED_MODULE_3__.jsonRpc.isResponseWithError(response)) {
            error = response.error;
        }
        else if (response instanceof Error) {
            error = response;
        }
        // This message means that there was an error while executing the code of the smart contract
        // However, more processing will happen at a higher level to decode the error data,
        //	according to the Error ABI, if it was available as of EIP-838.
        if (error === null || error === void 0 ? void 0 : error.message.includes('revert'))
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.ContractExecutionError(error);
        return false;
    }
    // Need to use same types as _processJsonRpcResponse so have to declare as instance method
    // eslint-disable-next-line class-methods-use-this
    _buildResponse(payload, response, error) {
        const res = {
            jsonrpc: '2.0',
            // eslint-disable-next-line no-nested-ternary
            id: web3_utils__WEBPACK_IMPORTED_MODULE_3__.jsonRpc.isBatchRequest(payload)
                ? payload[0].id
                : 'id' in payload
                    ? payload.id
                    : // Have to use the null here explicitly
                        // eslint-disable-next-line no-null/no-null
                        null,
        };
        if (error) {
            return Object.assign(Object.assign({}, res), { error: response });
        }
        return Object.assign(Object.assign({}, res), { result: response });
    }
}
//# sourceMappingURL=web3_request_manager.js.map

/***/ }),

/***/ "./node_modules/web3-core/lib/esm/web3_subscription_manager.js":
/*!*********************************************************************!*\
  !*** ./node_modules/web3-core/lib/esm/web3_subscription_manager.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Web3SubscriptionManager: () => (/* binding */ Web3SubscriptionManager)
/* harmony export */ });
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-core/lib/esm/utils.js");
/* harmony import */ var _web3_request_manager_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./web3_request_manager.js */ "./node_modules/web3-core/lib/esm/web3_request_manager.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};





class Web3SubscriptionManager {
    constructor(requestManager, registeredSubscriptions, tolerateUnlinkedSubscription = false) {
        this.requestManager = requestManager;
        this.registeredSubscriptions = registeredSubscriptions;
        this.tolerateUnlinkedSubscription = tolerateUnlinkedSubscription;
        this._subscriptions = new Map();
        this.requestManager.on(_web3_request_manager_js__WEBPACK_IMPORTED_MODULE_4__.Web3RequestManagerEvent.BEFORE_PROVIDER_CHANGE, () => __awaiter(this, void 0, void 0, function* () {
            yield this.unsubscribe();
        }));
        this.requestManager.on(_web3_request_manager_js__WEBPACK_IMPORTED_MODULE_4__.Web3RequestManagerEvent.PROVIDER_CHANGED, () => {
            this.clear();
            this.listenToProviderEvents();
        });
        this.listenToProviderEvents();
    }
    listenToProviderEvents() {
        const providerAsWebProvider = this.requestManager.provider;
        if (!this.requestManager.provider ||
            (typeof (providerAsWebProvider === null || providerAsWebProvider === void 0 ? void 0 : providerAsWebProvider.supportsSubscriptions) === 'function' &&
                !(providerAsWebProvider === null || providerAsWebProvider === void 0 ? void 0 : providerAsWebProvider.supportsSubscriptions()))) {
            return;
        }
        if (typeof this.requestManager.provider.on === 'function') {
            if (typeof this.requestManager.provider.request === 'function') {
                // Listen to provider messages and data
                this.requestManager.provider.on('message', 
                // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-argument
                (message) => this.messageListener(message));
            }
            else {
                // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-argument
                providerAsWebProvider.on('data', (data) => this.messageListener(data));
            }
        }
    }
    messageListener(data) {
        var _a, _b, _c;
        if (!data) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.SubscriptionError('Should not call messageListener with no data. Type was');
        }
        const subscriptionId = ((_a = data.params) === null || _a === void 0 ? void 0 : _a.subscription) ||
            ((_b = data.data) === null || _b === void 0 ? void 0 : _b.subscription) ||
            ((_c = data.id) === null || _c === void 0 ? void 0 : _c.toString(16));
        // Process if the received data is related to a subscription
        if (subscriptionId) {
            const sub = this._subscriptions.get(subscriptionId);
            sub === null || sub === void 0 ? void 0 : sub.processSubscriptionData(data);
        }
    }
    /**
     * Will create a new subscription
     *
     * @param name - The subscription you want to subscribe to
     * @param args - Optional additional parameters, depending on the subscription type
     * @param returnFormat- ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.
     *
     * Will subscribe to a specific topic (note: name)
     * @returns The subscription object
     */
    subscribe(name_1, args_1) {
        return __awaiter(this, arguments, void 0, function* (name, args, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT) {
            const Klass = this.registeredSubscriptions[name];
            if (!Klass) {
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.SubscriptionError('Invalid subscription type');
            }
            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
            const subscription = new Klass(args !== null && args !== void 0 ? args : undefined, {
                subscriptionManager: this,
                returnFormat,
                // eslint.disable-next-line @typescript-eslint/no-unsafe-any
            });
            yield this.addSubscription(subscription);
            return subscription;
        });
    }
    /**
     * Will returns all subscriptions.
     */
    get subscriptions() {
        return this._subscriptions;
    }
    /**
     *
     * Adds an instance of {@link Web3Subscription} and subscribes to it
     *
     * @param sub - A {@link Web3Subscription} object
     */
    addSubscription(sub) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!this.requestManager.provider) {
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.ProviderError('Provider not available');
            }
            if (!this.supportsSubscriptions()) {
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.SubscriptionError('The current provider does not support subscriptions');
            }
            if (sub.id && this._subscriptions.has(sub.id)) {
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.SubscriptionError(`Subscription with id "${sub.id}" already exists`);
            }
            yield sub.sendSubscriptionRequest();
            if ((0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isNullish)(sub.id)) {
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.SubscriptionError('Subscription is not subscribed yet.');
            }
            this._subscriptions.set(sub.id, sub);
            return sub.id;
        });
    }
    /**
     * Will clear a subscription
     *
     * @param id - The subscription of type {@link Web3Subscription}  to remove
     */
    removeSubscription(sub) {
        return __awaiter(this, void 0, void 0, function* () {
            const { id } = sub;
            if ((0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isNullish)(id)) {
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.SubscriptionError('Subscription is not subscribed yet. Or, had already been unsubscribed but not through the Subscription Manager.');
            }
            if (!this._subscriptions.has(id) && !this.tolerateUnlinkedSubscription) {
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.SubscriptionError(`Subscription with id "${id.toString()}" does not exists`);
            }
            yield sub.sendUnsubscribeRequest();
            this._subscriptions.delete(id);
            return id;
        });
    }
    /**
     * Will unsubscribe all subscriptions that fulfill the condition
     *
     * @param condition - A function that access and `id` and a `subscription` and return `true` or `false`
     * @returns An array of all the un-subscribed subscriptions
     */
    unsubscribe(condition) {
        return __awaiter(this, void 0, void 0, function* () {
            const result = [];
            for (const [id, sub] of this.subscriptions.entries()) {
                if (!condition || (typeof condition === 'function' && condition({ id, sub }))) {
                    result.push(this.removeSubscription(sub));
                }
            }
            return Promise.all(result);
        });
    }
    /**
     * Clears all subscriptions
     */
    clear() {
        this._subscriptions.clear();
    }
    /**
     * Check whether the current provider supports subscriptions.
     *
     * @returns `true` or `false` depending on if the current provider supports subscriptions
     */
    supportsSubscriptions() {
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isNullish)(this.requestManager.provider)
            ? false
            : (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isSupportSubscriptions)(this.requestManager.provider);
    }
}
//# sourceMappingURL=web3_subscription_manager.js.map

/***/ }),

/***/ "./node_modules/web3-core/lib/esm/web3_subscriptions.js":
/*!**************************************************************!*\
  !*** ./node_modules/web3-core/lib/esm/web3_subscriptions.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Web3Subscription: () => (/* binding */ Web3Subscription)
/* harmony export */ });
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var _web3_subscription_manager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./web3_subscription_manager.js */ "./node_modules/web3-core/lib/esm/web3_subscription_manager.js");
/* harmony import */ var _web3_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./web3_event_emitter.js */ "./node_modules/web3-core/lib/esm/web3_event_emitter.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
// eslint-disable-next-line max-classes-per-file


// eslint-disable-next-line import/no-cycle


class Web3Subscription extends _web3_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__.Web3EventEmitter {
    constructor(args, options) {
        var _a;
        super();
        this.args = args;
        const { requestManager } = options;
        const { subscriptionManager } = options;
        if (requestManager) {
            // eslint-disable-next-line deprecation/deprecation
            this._subscriptionManager = new _web3_subscription_manager_js__WEBPACK_IMPORTED_MODULE_2__.Web3SubscriptionManager(requestManager, {}, true);
        }
        else {
            this._subscriptionManager = subscriptionManager;
        }
        this._returnFormat = (_a = options === null || options === void 0 ? void 0 : options.returnFormat) !== null && _a !== void 0 ? _a : web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT;
    }
    get id() {
        return this._id;
    }
    get lastBlock() {
        return this._lastBlock;
    }
    subscribe() {
        return __awaiter(this, void 0, void 0, function* () {
            return this._subscriptionManager.addSubscription(this);
        });
    }
    processSubscriptionData(data) {
        var _a, _b;
        if (data === null || data === void 0 ? void 0 : data.data) {
            // for EIP-1193 provider
            this._processSubscriptionResult((_b = (_a = data === null || data === void 0 ? void 0 : data.data) === null || _a === void 0 ? void 0 : _a.result) !== null && _b !== void 0 ? _b : data === null || data === void 0 ? void 0 : data.data);
        }
        else if (data &&
            web3_utils__WEBPACK_IMPORTED_MODULE_1__.jsonRpc.isResponseWithNotification(data)) {
            this._processSubscriptionResult(data === null || data === void 0 ? void 0 : data.params.result);
        }
    }
    sendSubscriptionRequest() {
        return __awaiter(this, void 0, void 0, function* () {
            this._id = yield this._subscriptionManager.requestManager.send({
                method: 'eth_subscribe',
                params: this._buildSubscriptionParams(),
            });
            this.emit('connected', this._id);
            return this._id;
        });
    }
    get returnFormat() {
        return this._returnFormat;
    }
    get subscriptionManager() {
        return this._subscriptionManager;
    }
    resubscribe() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.unsubscribe();
            yield this.subscribe();
        });
    }
    unsubscribe() {
        return __awaiter(this, void 0, void 0, function* () {
            if (!this.id) {
                return;
            }
            yield this._subscriptionManager.removeSubscription(this);
        });
    }
    sendUnsubscribeRequest() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this._subscriptionManager.requestManager.send({
                method: 'eth_unsubscribe',
                params: [this.id],
            });
            this._id = undefined;
        });
    }
    // eslint-disable-next-line class-methods-use-this
    formatSubscriptionResult(data) {
        return data;
    }
    _processSubscriptionResult(data) {
        this.emit('data', this.formatSubscriptionResult(data));
    }
    _processSubscriptionError(error) {
        this.emit('error', error);
    }
    // eslint-disable-next-line class-methods-use-this
    _buildSubscriptionParams() {
        // This should be overridden in the subclass
        throw new Error('Implement in the child class');
    }
}
//# sourceMappingURL=web3_subscriptions.js.map

/***/ }),

/***/ "./node_modules/web3-errors/lib/esm/error_codes.js":
/*!*********************************************************!*\
  !*** ./node_modules/web3-errors/lib/esm/error_codes.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ERR_ABI_ENCODING: () => (/* binding */ ERR_ABI_ENCODING),
/* harmony export */   ERR_CONN: () => (/* binding */ ERR_CONN),
/* harmony export */   ERR_CONN_CLOSE: () => (/* binding */ ERR_CONN_CLOSE),
/* harmony export */   ERR_CONN_INVALID: () => (/* binding */ ERR_CONN_INVALID),
/* harmony export */   ERR_CONN_MAX_ATTEMPTS: () => (/* binding */ ERR_CONN_MAX_ATTEMPTS),
/* harmony export */   ERR_CONN_NOT_OPEN: () => (/* binding */ ERR_CONN_NOT_OPEN),
/* harmony export */   ERR_CONN_PENDING_REQUESTS: () => (/* binding */ ERR_CONN_PENDING_REQUESTS),
/* harmony export */   ERR_CONN_TIMEOUT: () => (/* binding */ ERR_CONN_TIMEOUT),
/* harmony export */   ERR_CONTRACT: () => (/* binding */ ERR_CONTRACT),
/* harmony export */   ERR_CONTRACT_ABI_MISSING: () => (/* binding */ ERR_CONTRACT_ABI_MISSING),
/* harmony export */   ERR_CONTRACT_EVENT_NOT_EXISTS: () => (/* binding */ ERR_CONTRACT_EVENT_NOT_EXISTS),
/* harmony export */   ERR_CONTRACT_EXECUTION_REVERTED: () => (/* binding */ ERR_CONTRACT_EXECUTION_REVERTED),
/* harmony export */   ERR_CONTRACT_INSTANTIATION: () => (/* binding */ ERR_CONTRACT_INSTANTIATION),
/* harmony export */   ERR_CONTRACT_MISSING_ADDRESS: () => (/* binding */ ERR_CONTRACT_MISSING_ADDRESS),
/* harmony export */   ERR_CONTRACT_MISSING_DEPLOY_DATA: () => (/* binding */ ERR_CONTRACT_MISSING_DEPLOY_DATA),
/* harmony export */   ERR_CONTRACT_MISSING_FROM_ADDRESS: () => (/* binding */ ERR_CONTRACT_MISSING_FROM_ADDRESS),
/* harmony export */   ERR_CONTRACT_REQUIRED_CALLBACK: () => (/* binding */ ERR_CONTRACT_REQUIRED_CALLBACK),
/* harmony export */   ERR_CONTRACT_RESERVED_EVENT: () => (/* binding */ ERR_CONTRACT_RESERVED_EVENT),
/* harmony export */   ERR_CONTRACT_RESOLVER_MISSING: () => (/* binding */ ERR_CONTRACT_RESOLVER_MISSING),
/* harmony export */   ERR_CONTRACT_TX_DATA_AND_INPUT: () => (/* binding */ ERR_CONTRACT_TX_DATA_AND_INPUT),
/* harmony export */   ERR_CORE_CHAIN_MISMATCH: () => (/* binding */ ERR_CORE_CHAIN_MISMATCH),
/* harmony export */   ERR_CORE_HARDFORK_MISMATCH: () => (/* binding */ ERR_CORE_HARDFORK_MISMATCH),
/* harmony export */   ERR_ENS_CHECK_INTERFACE_SUPPORT: () => (/* binding */ ERR_ENS_CHECK_INTERFACE_SUPPORT),
/* harmony export */   ERR_ENS_NETWORK_NOT_SYNCED: () => (/* binding */ ERR_ENS_NETWORK_NOT_SYNCED),
/* harmony export */   ERR_ENS_UNSUPPORTED_NETWORK: () => (/* binding */ ERR_ENS_UNSUPPORTED_NETWORK),
/* harmony export */   ERR_EXISTING_PLUGIN_NAMESPACE: () => (/* binding */ ERR_EXISTING_PLUGIN_NAMESPACE),
/* harmony export */   ERR_FORMATTERS: () => (/* binding */ ERR_FORMATTERS),
/* harmony export */   ERR_INVALID_ADDRESS: () => (/* binding */ ERR_INVALID_ADDRESS),
/* harmony export */   ERR_INVALID_BLOCK: () => (/* binding */ ERR_INVALID_BLOCK),
/* harmony export */   ERR_INVALID_BOOLEAN: () => (/* binding */ ERR_INVALID_BOOLEAN),
/* harmony export */   ERR_INVALID_BYTES: () => (/* binding */ ERR_INVALID_BYTES),
/* harmony export */   ERR_INVALID_CLIENT: () => (/* binding */ ERR_INVALID_CLIENT),
/* harmony export */   ERR_INVALID_HEX: () => (/* binding */ ERR_INVALID_HEX),
/* harmony export */   ERR_INVALID_INTEGER: () => (/* binding */ ERR_INVALID_INTEGER),
/* harmony export */   ERR_INVALID_KEYSTORE: () => (/* binding */ ERR_INVALID_KEYSTORE),
/* harmony export */   ERR_INVALID_LARGE_VALUE: () => (/* binding */ ERR_INVALID_LARGE_VALUE),
/* harmony export */   ERR_INVALID_METHOD_PARAMS: () => (/* binding */ ERR_INVALID_METHOD_PARAMS),
/* harmony export */   ERR_INVALID_NIBBLE_WIDTH: () => (/* binding */ ERR_INVALID_NIBBLE_WIDTH),
/* harmony export */   ERR_INVALID_NUMBER: () => (/* binding */ ERR_INVALID_NUMBER),
/* harmony export */   ERR_INVALID_PASSWORD: () => (/* binding */ ERR_INVALID_PASSWORD),
/* harmony export */   ERR_INVALID_PRIVATE_KEY: () => (/* binding */ ERR_INVALID_PRIVATE_KEY),
/* harmony export */   ERR_INVALID_PROVIDER: () => (/* binding */ ERR_INVALID_PROVIDER),
/* harmony export */   ERR_INVALID_RESPONSE: () => (/* binding */ ERR_INVALID_RESPONSE),
/* harmony export */   ERR_INVALID_SIGNATURE: () => (/* binding */ ERR_INVALID_SIGNATURE),
/* harmony export */   ERR_INVALID_SIZE: () => (/* binding */ ERR_INVALID_SIZE),
/* harmony export */   ERR_INVALID_STRING: () => (/* binding */ ERR_INVALID_STRING),
/* harmony export */   ERR_INVALID_TYPE: () => (/* binding */ ERR_INVALID_TYPE),
/* harmony export */   ERR_INVALID_TYPE_ABI: () => (/* binding */ ERR_INVALID_TYPE_ABI),
/* harmony export */   ERR_INVALID_UNIT: () => (/* binding */ ERR_INVALID_UNIT),
/* harmony export */   ERR_INVALID_UNSIGNED_INTEGER: () => (/* binding */ ERR_INVALID_UNSIGNED_INTEGER),
/* harmony export */   ERR_IV_LENGTH: () => (/* binding */ ERR_IV_LENGTH),
/* harmony export */   ERR_KEY_DERIVATION_FAIL: () => (/* binding */ ERR_KEY_DERIVATION_FAIL),
/* harmony export */   ERR_KEY_VERSION_UNSUPPORTED: () => (/* binding */ ERR_KEY_VERSION_UNSUPPORTED),
/* harmony export */   ERR_METHOD_NOT_IMPLEMENTED: () => (/* binding */ ERR_METHOD_NOT_IMPLEMENTED),
/* harmony export */   ERR_MULTIPLE_ERRORS: () => (/* binding */ ERR_MULTIPLE_ERRORS),
/* harmony export */   ERR_OPERATION_ABORT: () => (/* binding */ ERR_OPERATION_ABORT),
/* harmony export */   ERR_OPERATION_TIMEOUT: () => (/* binding */ ERR_OPERATION_TIMEOUT),
/* harmony export */   ERR_PARAM: () => (/* binding */ ERR_PARAM),
/* harmony export */   ERR_PBKDF2_ITERATIONS: () => (/* binding */ ERR_PBKDF2_ITERATIONS),
/* harmony export */   ERR_PRIVATE_KEY_LENGTH: () => (/* binding */ ERR_PRIVATE_KEY_LENGTH),
/* harmony export */   ERR_PROVIDER: () => (/* binding */ ERR_PROVIDER),
/* harmony export */   ERR_RAW_TX_UNDEFINED: () => (/* binding */ ERR_RAW_TX_UNDEFINED),
/* harmony export */   ERR_REQ_ALREADY_SENT: () => (/* binding */ ERR_REQ_ALREADY_SENT),
/* harmony export */   ERR_RESPONSE: () => (/* binding */ ERR_RESPONSE),
/* harmony export */   ERR_RPC_INTERNAL_ERROR: () => (/* binding */ ERR_RPC_INTERNAL_ERROR),
/* harmony export */   ERR_RPC_INVALID_INPUT: () => (/* binding */ ERR_RPC_INVALID_INPUT),
/* harmony export */   ERR_RPC_INVALID_JSON: () => (/* binding */ ERR_RPC_INVALID_JSON),
/* harmony export */   ERR_RPC_INVALID_METHOD: () => (/* binding */ ERR_RPC_INVALID_METHOD),
/* harmony export */   ERR_RPC_INVALID_PARAMS: () => (/* binding */ ERR_RPC_INVALID_PARAMS),
/* harmony export */   ERR_RPC_INVALID_REQUEST: () => (/* binding */ ERR_RPC_INVALID_REQUEST),
/* harmony export */   ERR_RPC_LIMIT_EXCEEDED: () => (/* binding */ ERR_RPC_LIMIT_EXCEEDED),
/* harmony export */   ERR_RPC_MISSING_RESOURCE: () => (/* binding */ ERR_RPC_MISSING_RESOURCE),
/* harmony export */   ERR_RPC_NOT_SUPPORTED: () => (/* binding */ ERR_RPC_NOT_SUPPORTED),
/* harmony export */   ERR_RPC_TRANSACTION_REJECTED: () => (/* binding */ ERR_RPC_TRANSACTION_REJECTED),
/* harmony export */   ERR_RPC_UNAVAILABLE_RESOURCE: () => (/* binding */ ERR_RPC_UNAVAILABLE_RESOURCE),
/* harmony export */   ERR_RPC_UNSUPPORTED_METHOD: () => (/* binding */ ERR_RPC_UNSUPPORTED_METHOD),
/* harmony export */   ERR_SCHEMA_FORMAT: () => (/* binding */ ERR_SCHEMA_FORMAT),
/* harmony export */   ERR_SIGNATURE_FAILED: () => (/* binding */ ERR_SIGNATURE_FAILED),
/* harmony export */   ERR_SUBSCRIPTION: () => (/* binding */ ERR_SUBSCRIPTION),
/* harmony export */   ERR_TX: () => (/* binding */ ERR_TX),
/* harmony export */   ERR_TX_BLOCK_TIMEOUT: () => (/* binding */ ERR_TX_BLOCK_TIMEOUT),
/* harmony export */   ERR_TX_CHAIN_ID_MISMATCH: () => (/* binding */ ERR_TX_CHAIN_ID_MISMATCH),
/* harmony export */   ERR_TX_CHAIN_MISMATCH: () => (/* binding */ ERR_TX_CHAIN_MISMATCH),
/* harmony export */   ERR_TX_CONTRACT_NOT_STORED: () => (/* binding */ ERR_TX_CONTRACT_NOT_STORED),
/* harmony export */   ERR_TX_DATA_AND_INPUT: () => (/* binding */ ERR_TX_DATA_AND_INPUT),
/* harmony export */   ERR_TX_GAS_MISMATCH: () => (/* binding */ ERR_TX_GAS_MISMATCH),
/* harmony export */   ERR_TX_GAS_MISMATCH_INNER_ERROR: () => (/* binding */ ERR_TX_GAS_MISMATCH_INNER_ERROR),
/* harmony export */   ERR_TX_HARDFORK_MISMATCH: () => (/* binding */ ERR_TX_HARDFORK_MISMATCH),
/* harmony export */   ERR_TX_INVALID_CALL: () => (/* binding */ ERR_TX_INVALID_CALL),
/* harmony export */   ERR_TX_INVALID_CHAIN_INFO: () => (/* binding */ ERR_TX_INVALID_CHAIN_INFO),
/* harmony export */   ERR_TX_INVALID_FEE_MARKET_GAS: () => (/* binding */ ERR_TX_INVALID_FEE_MARKET_GAS),
/* harmony export */   ERR_TX_INVALID_FEE_MARKET_GAS_PRICE: () => (/* binding */ ERR_TX_INVALID_FEE_MARKET_GAS_PRICE),
/* harmony export */   ERR_TX_INVALID_LEGACY_FEE_MARKET: () => (/* binding */ ERR_TX_INVALID_LEGACY_FEE_MARKET),
/* harmony export */   ERR_TX_INVALID_LEGACY_GAS: () => (/* binding */ ERR_TX_INVALID_LEGACY_GAS),
/* harmony export */   ERR_TX_INVALID_NONCE_OR_CHAIN_ID: () => (/* binding */ ERR_TX_INVALID_NONCE_OR_CHAIN_ID),
/* harmony export */   ERR_TX_INVALID_OBJECT: () => (/* binding */ ERR_TX_INVALID_OBJECT),
/* harmony export */   ERR_TX_INVALID_PROPERTIES_FOR_TYPE: () => (/* binding */ ERR_TX_INVALID_PROPERTIES_FOR_TYPE),
/* harmony export */   ERR_TX_INVALID_RECEIVER: () => (/* binding */ ERR_TX_INVALID_RECEIVER),
/* harmony export */   ERR_TX_INVALID_SENDER: () => (/* binding */ ERR_TX_INVALID_SENDER),
/* harmony export */   ERR_TX_LOCAL_WALLET_NOT_AVAILABLE: () => (/* binding */ ERR_TX_LOCAL_WALLET_NOT_AVAILABLE),
/* harmony export */   ERR_TX_MISSING_CHAIN_INFO: () => (/* binding */ ERR_TX_MISSING_CHAIN_INFO),
/* harmony export */   ERR_TX_MISSING_CUSTOM_CHAIN: () => (/* binding */ ERR_TX_MISSING_CUSTOM_CHAIN),
/* harmony export */   ERR_TX_MISSING_CUSTOM_CHAIN_ID: () => (/* binding */ ERR_TX_MISSING_CUSTOM_CHAIN_ID),
/* harmony export */   ERR_TX_MISSING_GAS: () => (/* binding */ ERR_TX_MISSING_GAS),
/* harmony export */   ERR_TX_MISSING_GAS_INNER_ERROR: () => (/* binding */ ERR_TX_MISSING_GAS_INNER_ERROR),
/* harmony export */   ERR_TX_NOT_FOUND: () => (/* binding */ ERR_TX_NOT_FOUND),
/* harmony export */   ERR_TX_NO_CONTRACT_ADDRESS: () => (/* binding */ ERR_TX_NO_CONTRACT_ADDRESS),
/* harmony export */   ERR_TX_OUT_OF_GAS: () => (/* binding */ ERR_TX_OUT_OF_GAS),
/* harmony export */   ERR_TX_POLLING_TIMEOUT: () => (/* binding */ ERR_TX_POLLING_TIMEOUT),
/* harmony export */   ERR_TX_RECEIPT_MISSING_BLOCK_NUMBER: () => (/* binding */ ERR_TX_RECEIPT_MISSING_BLOCK_NUMBER),
/* harmony export */   ERR_TX_RECEIPT_MISSING_OR_BLOCKHASH_NULL: () => (/* binding */ ERR_TX_RECEIPT_MISSING_OR_BLOCKHASH_NULL),
/* harmony export */   ERR_TX_REVERT_INSTRUCTION: () => (/* binding */ ERR_TX_REVERT_INSTRUCTION),
/* harmony export */   ERR_TX_REVERT_TRANSACTION: () => (/* binding */ ERR_TX_REVERT_TRANSACTION),
/* harmony export */   ERR_TX_REVERT_TRANSACTION_CUSTOM_ERROR: () => (/* binding */ ERR_TX_REVERT_TRANSACTION_CUSTOM_ERROR),
/* harmony export */   ERR_TX_REVERT_WITHOUT_REASON: () => (/* binding */ ERR_TX_REVERT_WITHOUT_REASON),
/* harmony export */   ERR_TX_SEND_TIMEOUT: () => (/* binding */ ERR_TX_SEND_TIMEOUT),
/* harmony export */   ERR_TX_SIGNING: () => (/* binding */ ERR_TX_SIGNING),
/* harmony export */   ERR_TX_UNABLE_TO_POPULATE_NONCE: () => (/* binding */ ERR_TX_UNABLE_TO_POPULATE_NONCE),
/* harmony export */   ERR_TX_UNSUPPORTED_EIP_1559: () => (/* binding */ ERR_TX_UNSUPPORTED_EIP_1559),
/* harmony export */   ERR_TX_UNSUPPORTED_TYPE: () => (/* binding */ ERR_TX_UNSUPPORTED_TYPE),
/* harmony export */   ERR_UNSUPPORTED_KDF: () => (/* binding */ ERR_UNSUPPORTED_KDF),
/* harmony export */   ERR_VALIDATION: () => (/* binding */ ERR_VALIDATION),
/* harmony export */   ERR_WS_PROVIDER: () => (/* binding */ ERR_WS_PROVIDER),
/* harmony export */   GENESIS_BLOCK_NUMBER: () => (/* binding */ GENESIS_BLOCK_NUMBER),
/* harmony export */   JSONRPC_ERR_CHAIN_DISCONNECTED: () => (/* binding */ JSONRPC_ERR_CHAIN_DISCONNECTED),
/* harmony export */   JSONRPC_ERR_DISCONNECTED: () => (/* binding */ JSONRPC_ERR_DISCONNECTED),
/* harmony export */   JSONRPC_ERR_REJECTED_REQUEST: () => (/* binding */ JSONRPC_ERR_REJECTED_REQUEST),
/* harmony export */   JSONRPC_ERR_UNAUTHORIZED: () => (/* binding */ JSONRPC_ERR_UNAUTHORIZED),
/* harmony export */   JSONRPC_ERR_UNSUPPORTED_METHOD: () => (/* binding */ JSONRPC_ERR_UNSUPPORTED_METHOD)
/* harmony export */ });
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
// Response error
const ERR_RESPONSE = 100;
const ERR_INVALID_RESPONSE = 101;
// Generic errors
const ERR_PARAM = 200;
const ERR_FORMATTERS = 201;
const ERR_METHOD_NOT_IMPLEMENTED = 202;
const ERR_OPERATION_TIMEOUT = 203;
const ERR_OPERATION_ABORT = 204;
const ERR_ABI_ENCODING = 205;
const ERR_EXISTING_PLUGIN_NAMESPACE = 206;
const ERR_INVALID_METHOD_PARAMS = 207;
const ERR_MULTIPLE_ERRORS = 208;
// Contract error codes
const ERR_CONTRACT = 300;
const ERR_CONTRACT_RESOLVER_MISSING = 301;
const ERR_CONTRACT_ABI_MISSING = 302;
const ERR_CONTRACT_REQUIRED_CALLBACK = 303;
const ERR_CONTRACT_EVENT_NOT_EXISTS = 304;
const ERR_CONTRACT_RESERVED_EVENT = 305;
const ERR_CONTRACT_MISSING_DEPLOY_DATA = 306;
const ERR_CONTRACT_MISSING_ADDRESS = 307;
const ERR_CONTRACT_MISSING_FROM_ADDRESS = 308;
const ERR_CONTRACT_INSTANTIATION = 309;
const ERR_CONTRACT_EXECUTION_REVERTED = 310;
const ERR_CONTRACT_TX_DATA_AND_INPUT = 311;
// Transaction error codes
const ERR_TX = 400;
const ERR_TX_REVERT_INSTRUCTION = 401;
const ERR_TX_REVERT_TRANSACTION = 402;
const ERR_TX_NO_CONTRACT_ADDRESS = 403;
const ERR_TX_CONTRACT_NOT_STORED = 404;
const ERR_TX_REVERT_WITHOUT_REASON = 405;
const ERR_TX_OUT_OF_GAS = 406;
const ERR_RAW_TX_UNDEFINED = 407;
const ERR_TX_INVALID_SENDER = 408;
const ERR_TX_INVALID_CALL = 409;
const ERR_TX_MISSING_CUSTOM_CHAIN = 410;
const ERR_TX_MISSING_CUSTOM_CHAIN_ID = 411;
const ERR_TX_CHAIN_ID_MISMATCH = 412;
const ERR_TX_INVALID_CHAIN_INFO = 413;
const ERR_TX_MISSING_CHAIN_INFO = 414;
const ERR_TX_MISSING_GAS = 415;
const ERR_TX_INVALID_LEGACY_GAS = 416;
const ERR_TX_INVALID_FEE_MARKET_GAS = 417;
const ERR_TX_INVALID_FEE_MARKET_GAS_PRICE = 418;
const ERR_TX_INVALID_LEGACY_FEE_MARKET = 419;
const ERR_TX_INVALID_OBJECT = 420;
const ERR_TX_INVALID_NONCE_OR_CHAIN_ID = 421;
const ERR_TX_UNABLE_TO_POPULATE_NONCE = 422;
const ERR_TX_UNSUPPORTED_EIP_1559 = 423;
const ERR_TX_UNSUPPORTED_TYPE = 424;
const ERR_TX_DATA_AND_INPUT = 425;
const ERR_TX_POLLING_TIMEOUT = 426;
const ERR_TX_RECEIPT_MISSING_OR_BLOCKHASH_NULL = 427;
const ERR_TX_RECEIPT_MISSING_BLOCK_NUMBER = 428;
const ERR_TX_LOCAL_WALLET_NOT_AVAILABLE = 429;
const ERR_TX_NOT_FOUND = 430;
const ERR_TX_SEND_TIMEOUT = 431;
const ERR_TX_BLOCK_TIMEOUT = 432;
const ERR_TX_SIGNING = 433;
const ERR_TX_GAS_MISMATCH = 434;
const ERR_TX_CHAIN_MISMATCH = 435;
const ERR_TX_HARDFORK_MISMATCH = 436;
const ERR_TX_INVALID_RECEIVER = 437;
const ERR_TX_REVERT_TRANSACTION_CUSTOM_ERROR = 438;
const ERR_TX_INVALID_PROPERTIES_FOR_TYPE = 439;
const ERR_TX_MISSING_GAS_INNER_ERROR = 440;
const ERR_TX_GAS_MISMATCH_INNER_ERROR = 441;
// Connection error codes
const ERR_CONN = 500;
const ERR_CONN_INVALID = 501;
const ERR_CONN_TIMEOUT = 502;
const ERR_CONN_NOT_OPEN = 503;
const ERR_CONN_CLOSE = 504;
const ERR_CONN_MAX_ATTEMPTS = 505;
const ERR_CONN_PENDING_REQUESTS = 506;
const ERR_REQ_ALREADY_SENT = 507;
// Provider error codes
const ERR_PROVIDER = 600;
const ERR_INVALID_PROVIDER = 601;
const ERR_INVALID_CLIENT = 602;
const ERR_SUBSCRIPTION = 603;
const ERR_WS_PROVIDER = 604;
// Account error codes
const ERR_PRIVATE_KEY_LENGTH = 701;
const ERR_INVALID_PRIVATE_KEY = 702;
const ERR_UNSUPPORTED_KDF = 703;
const ERR_KEY_DERIVATION_FAIL = 704;
const ERR_KEY_VERSION_UNSUPPORTED = 705;
const ERR_INVALID_PASSWORD = 706;
const ERR_IV_LENGTH = 707;
const ERR_INVALID_KEYSTORE = 708;
const ERR_PBKDF2_ITERATIONS = 709;
// Signature error codes
const ERR_SIGNATURE_FAILED = 801;
const ERR_INVALID_SIGNATURE = 802;
const GENESIS_BLOCK_NUMBER = '0x0';
// RPC error codes (EIP-1193)
// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md#provider-errors
const JSONRPC_ERR_REJECTED_REQUEST = 4001;
const JSONRPC_ERR_UNAUTHORIZED = 4100;
const JSONRPC_ERR_UNSUPPORTED_METHOD = 4200;
const JSONRPC_ERR_DISCONNECTED = 4900;
const JSONRPC_ERR_CHAIN_DISCONNECTED = 4901;
// ENS error codes
const ERR_ENS_CHECK_INTERFACE_SUPPORT = 901;
const ERR_ENS_UNSUPPORTED_NETWORK = 902;
const ERR_ENS_NETWORK_NOT_SYNCED = 903;
// Utils error codes
const ERR_INVALID_STRING = 1001;
const ERR_INVALID_BYTES = 1002;
const ERR_INVALID_NUMBER = 1003;
const ERR_INVALID_UNIT = 1004;
const ERR_INVALID_ADDRESS = 1005;
const ERR_INVALID_HEX = 1006;
const ERR_INVALID_TYPE = 1007;
const ERR_INVALID_BOOLEAN = 1008;
const ERR_INVALID_UNSIGNED_INTEGER = 1009;
const ERR_INVALID_SIZE = 1010;
const ERR_INVALID_LARGE_VALUE = 1011;
const ERR_INVALID_BLOCK = 1012;
const ERR_INVALID_TYPE_ABI = 1013;
const ERR_INVALID_NIBBLE_WIDTH = 1014;
const ERR_INVALID_INTEGER = 1015;
// Validation error codes
const ERR_VALIDATION = 1100;
// Core error codes
const ERR_CORE_HARDFORK_MISMATCH = 1101;
const ERR_CORE_CHAIN_MISMATCH = 1102;
// Schema error codes
const ERR_SCHEMA_FORMAT = 1200;
// RPC error codes (EIP-1474)
// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1474.md
const ERR_RPC_INVALID_JSON = -32700;
const ERR_RPC_INVALID_REQUEST = -32600;
const ERR_RPC_INVALID_METHOD = -32601;
const ERR_RPC_INVALID_PARAMS = -32602;
const ERR_RPC_INTERNAL_ERROR = -32603;
const ERR_RPC_INVALID_INPUT = -32000;
const ERR_RPC_MISSING_RESOURCE = -32001;
const ERR_RPC_UNAVAILABLE_RESOURCE = -32002;
const ERR_RPC_TRANSACTION_REJECTED = -32003;
const ERR_RPC_UNSUPPORTED_METHOD = -32004;
const ERR_RPC_LIMIT_EXCEEDED = -32005;
const ERR_RPC_NOT_SUPPORTED = -32006;
//# sourceMappingURL=error_codes.js.map

/***/ }),

/***/ "./node_modules/web3-errors/lib/esm/errors/account_errors.js":
/*!*******************************************************************!*\
  !*** ./node_modules/web3-errors/lib/esm/errors/account_errors.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IVLengthError: () => (/* binding */ IVLengthError),
/* harmony export */   InvalidKdfError: () => (/* binding */ InvalidKdfError),
/* harmony export */   InvalidPasswordError: () => (/* binding */ InvalidPasswordError),
/* harmony export */   InvalidPrivateKeyError: () => (/* binding */ InvalidPrivateKeyError),
/* harmony export */   InvalidSignatureError: () => (/* binding */ InvalidSignatureError),
/* harmony export */   KeyDerivationError: () => (/* binding */ KeyDerivationError),
/* harmony export */   KeyStoreVersionError: () => (/* binding */ KeyStoreVersionError),
/* harmony export */   PBKDF2IterationsError: () => (/* binding */ PBKDF2IterationsError),
/* harmony export */   PrivateKeyLengthError: () => (/* binding */ PrivateKeyLengthError)
/* harmony export */ });
/* harmony import */ var _error_codes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error_codes.js */ "./node_modules/web3-errors/lib/esm/error_codes.js");
/* harmony import */ var _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../web3_error_base.js */ "./node_modules/web3-errors/lib/esm/web3_error_base.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/* eslint-disable max-classes-per-file */


class PrivateKeyLengthError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor() {
        super(`Private key must be 32 bytes.`);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_PRIVATE_KEY_LENGTH;
    }
}
class InvalidPrivateKeyError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor() {
        super(`Invalid Private Key, Not a valid string or uint8Array`);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_PRIVATE_KEY;
    }
}
class InvalidSignatureError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor(errorDetails) {
        super(`"${errorDetails}"`);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_SIGNATURE;
    }
}
class InvalidKdfError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor() {
        super(`Invalid key derivation function`);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_UNSUPPORTED_KDF;
    }
}
class KeyDerivationError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor() {
        super(`Key derivation failed - possibly wrong password`);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_KEY_DERIVATION_FAIL;
    }
}
class KeyStoreVersionError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor() {
        super('Unsupported key store version');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_KEY_VERSION_UNSUPPORTED;
    }
}
class InvalidPasswordError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor() {
        super('Password cannot be empty');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_PASSWORD;
    }
}
class IVLengthError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor() {
        super('Initialization vector must be 16 bytes');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_IV_LENGTH;
    }
}
class PBKDF2IterationsError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor() {
        super('c > 1000, pbkdf2 is less secure with less iterations');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_PBKDF2_ITERATIONS;
    }
}
//# sourceMappingURL=account_errors.js.map

/***/ }),

/***/ "./node_modules/web3-errors/lib/esm/errors/connection_errors.js":
/*!**********************************************************************!*\
  !*** ./node_modules/web3-errors/lib/esm/errors/connection_errors.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ConnectionCloseError: () => (/* binding */ ConnectionCloseError),
/* harmony export */   ConnectionError: () => (/* binding */ ConnectionError),
/* harmony export */   ConnectionNotOpenError: () => (/* binding */ ConnectionNotOpenError),
/* harmony export */   ConnectionTimeoutError: () => (/* binding */ ConnectionTimeoutError),
/* harmony export */   InvalidConnectionError: () => (/* binding */ InvalidConnectionError),
/* harmony export */   MaxAttemptsReachedOnReconnectingError: () => (/* binding */ MaxAttemptsReachedOnReconnectingError),
/* harmony export */   PendingRequestsOnReconnectingError: () => (/* binding */ PendingRequestsOnReconnectingError),
/* harmony export */   RequestAlreadySentError: () => (/* binding */ RequestAlreadySentError)
/* harmony export */ });
/* harmony import */ var _error_codes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error_codes.js */ "./node_modules/web3-errors/lib/esm/error_codes.js");
/* harmony import */ var _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../web3_error_base.js */ "./node_modules/web3-errors/lib/esm/web3_error_base.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/


class ConnectionError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor(message, event) {
        super(message);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONN;
        if (event) {
            this.errorCode = event.code;
            this.errorReason = event.reason;
        }
    }
    toJSON() {
        return Object.assign(Object.assign({}, super.toJSON()), { errorCode: this.errorCode, errorReason: this.errorReason });
    }
}
class InvalidConnectionError extends ConnectionError {
    constructor(host, event) {
        super(`CONNECTION ERROR: Couldn't connect to node ${host}.`, event);
        this.host = host;
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONN_INVALID;
    }
    toJSON() {
        return Object.assign(Object.assign({}, super.toJSON()), { host: this.host });
    }
}
class ConnectionTimeoutError extends ConnectionError {
    constructor(duration) {
        super(`CONNECTION TIMEOUT: timeout of ${duration}ms achieved`);
        this.duration = duration;
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONN_TIMEOUT;
    }
    toJSON() {
        return Object.assign(Object.assign({}, super.toJSON()), { duration: this.duration });
    }
}
class ConnectionNotOpenError extends ConnectionError {
    constructor(event) {
        super('Connection not open', event);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONN_NOT_OPEN;
    }
}
class ConnectionCloseError extends ConnectionError {
    constructor(event) {
        var _a, _b;
        super(`CONNECTION ERROR: The connection got closed with the close code ${(_a = event === null || event === void 0 ? void 0 : event.code) !== null && _a !== void 0 ? _a : ''} and the following reason string ${(_b = event === null || event === void 0 ? void 0 : event.reason) !== null && _b !== void 0 ? _b : ''}`, event);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONN_CLOSE;
    }
}
class MaxAttemptsReachedOnReconnectingError extends ConnectionError {
    constructor(numberOfAttempts) {
        super(`Maximum number of reconnect attempts reached! (${numberOfAttempts})`);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONN_MAX_ATTEMPTS;
    }
}
class PendingRequestsOnReconnectingError extends ConnectionError {
    constructor() {
        super('CONNECTION ERROR: Provider started to reconnect before the response got received!');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONN_PENDING_REQUESTS;
    }
}
class RequestAlreadySentError extends ConnectionError {
    constructor(id) {
        super(`Request already sent with following id: ${id}`);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_REQ_ALREADY_SENT;
    }
}
//# sourceMappingURL=connection_errors.js.map

/***/ }),

/***/ "./node_modules/web3-errors/lib/esm/errors/contract_errors.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-errors/lib/esm/errors/contract_errors.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ContractEventDoesNotExistError: () => (/* binding */ ContractEventDoesNotExistError),
/* harmony export */   ContractExecutionError: () => (/* binding */ ContractExecutionError),
/* harmony export */   ContractInstantiationError: () => (/* binding */ ContractInstantiationError),
/* harmony export */   ContractMissingABIError: () => (/* binding */ ContractMissingABIError),
/* harmony export */   ContractMissingDeployDataError: () => (/* binding */ ContractMissingDeployDataError),
/* harmony export */   ContractNoAddressDefinedError: () => (/* binding */ ContractNoAddressDefinedError),
/* harmony export */   ContractNoFromAddressDefinedError: () => (/* binding */ ContractNoFromAddressDefinedError),
/* harmony export */   ContractOnceRequiresCallbackError: () => (/* binding */ ContractOnceRequiresCallbackError),
/* harmony export */   ContractReservedEventError: () => (/* binding */ ContractReservedEventError),
/* harmony export */   ContractTransactionDataAndInputError: () => (/* binding */ ContractTransactionDataAndInputError),
/* harmony export */   Eip838ExecutionError: () => (/* binding */ Eip838ExecutionError),
/* harmony export */   ResolverMethodMissingError: () => (/* binding */ ResolverMethodMissingError),
/* harmony export */   Web3ContractError: () => (/* binding */ Web3ContractError)
/* harmony export */ });
/* harmony import */ var _error_codes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error_codes.js */ "./node_modules/web3-errors/lib/esm/error_codes.js");
/* harmony import */ var _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../web3_error_base.js */ "./node_modules/web3-errors/lib/esm/web3_error_base.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/


class Web3ContractError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor(message, receipt) {
        super(message);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONTRACT;
        this.receipt = receipt;
    }
}
class ResolverMethodMissingError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor(address, name) {
        super(`The resolver at ${address} does not implement requested method: "${name}".`);
        this.address = address;
        this.name = name;
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONTRACT_RESOLVER_MISSING;
    }
    toJSON() {
        return Object.assign(Object.assign({}, super.toJSON()), { address: this.address, name: this.name });
    }
}
class ContractMissingABIError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor() {
        super('You must provide the json interface of the contract when instantiating a contract object.');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONTRACT_ABI_MISSING;
    }
}
class ContractOnceRequiresCallbackError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor() {
        super('Once requires a callback as the second parameter.');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONTRACT_REQUIRED_CALLBACK;
    }
}
class ContractEventDoesNotExistError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor(eventName) {
        super(`Event "${eventName}" doesn't exist in this contract.`);
        this.eventName = eventName;
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONTRACT_EVENT_NOT_EXISTS;
    }
    toJSON() {
        return Object.assign(Object.assign({}, super.toJSON()), { eventName: this.eventName });
    }
}
class ContractReservedEventError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor(type) {
        super(`Event "${type}" doesn't exist in this contract.`);
        this.type = type;
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONTRACT_RESERVED_EVENT;
    }
    toJSON() {
        return Object.assign(Object.assign({}, super.toJSON()), { type: this.type });
    }
}
class ContractMissingDeployDataError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor() {
        super(`No "data" specified in neither the given options, nor the default options.`);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONTRACT_MISSING_DEPLOY_DATA;
    }
}
class ContractNoAddressDefinedError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor() {
        super("This contract object doesn't have address set yet, please set an address first.");
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONTRACT_MISSING_ADDRESS;
    }
}
class ContractNoFromAddressDefinedError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor() {
        super('No "from" address specified in neither the given options, nor the default options.');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONTRACT_MISSING_FROM_ADDRESS;
    }
}
class ContractInstantiationError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor() {
        super(...arguments);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONTRACT_INSTANTIATION;
    }
}
/**
 * This class is expected to be set as an `cause` inside ContractExecutionError
 * The properties would be typically decoded from the `data` if it was encoded according to EIP-838
 */
class Eip838ExecutionError extends Web3ContractError {
    constructor(error) {
        super(error.message || 'Error');
        this.name = ('name' in error && error.name) || this.constructor.name;
        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing
        this.stack = ('stack' in error && error.stack) || undefined;
        this.code = error.code;
        // get embedded error details got from some providers like MetaMask
        // and set this.data from the inner error data for easier read.
        // note: the data is a hex string inside either:
        //	 error.data, error.data.data or error.data.originalError.data (https://github.com/web3/web3.js/issues/4454#issuecomment-1485953455)
        if (typeof error.data === 'object') {
            let originalError;
            if (error.data && 'originalError' in error.data) {
                originalError = error.data.originalError;
            }
            else {
                // Ganache has no `originalError` sub-object unlike others
                originalError = error.data;
            }
            this.data = originalError.data;
            this.cause = new Eip838ExecutionError(originalError);
        }
        else {
            this.data = error.data;
        }
    }
    setDecodedProperties(errorName, errorSignature, errorArgs) {
        this.errorName = errorName;
        this.errorSignature = errorSignature;
        this.errorArgs = errorArgs;
    }
    toJSON() {
        let json = Object.assign(Object.assign({}, super.toJSON()), { data: this.data });
        if (this.errorName) {
            json = Object.assign(Object.assign({}, json), { errorName: this.errorName, errorSignature: this.errorSignature, errorArgs: this.errorArgs });
        }
        return json;
    }
}
/**
 * Used when an error is raised while executing a function inside a smart contract.
 * The data is expected to be encoded according to EIP-848.
 */
class ContractExecutionError extends Web3ContractError {
    constructor(rpcError) {
        super('Error happened while trying to execute a function inside a smart contract');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONTRACT_EXECUTION_REVERTED;
        this.cause = new Eip838ExecutionError(rpcError);
    }
}
class ContractTransactionDataAndInputError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        var _a, _b;
        super(`data: ${(_a = value.data) !== null && _a !== void 0 ? _a : 'undefined'}, input: ${(_b = value.input) !== null && _b !== void 0 ? _b : 'undefined'}`, 'You can\'t have "data" and "input" as properties of a contract at the same time, please use either "data" or "input" instead.');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONTRACT_TX_DATA_AND_INPUT;
    }
}
//# sourceMappingURL=contract_errors.js.map

/***/ }),

/***/ "./node_modules/web3-errors/lib/esm/errors/core_errors.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-errors/lib/esm/errors/core_errors.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ConfigChainMismatchError: () => (/* binding */ ConfigChainMismatchError),
/* harmony export */   ConfigHardforkMismatchError: () => (/* binding */ ConfigHardforkMismatchError)
/* harmony export */ });
/* harmony import */ var _web3_error_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../web3_error_base.js */ "./node_modules/web3-errors/lib/esm/web3_error_base.js");
/* harmony import */ var _error_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error_codes.js */ "./node_modules/web3-errors/lib/esm/error_codes.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/* eslint-disable max-classes-per-file */


class ConfigHardforkMismatchError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_0__.BaseWeb3Error {
    constructor(defaultHardfork, commonHardFork) {
        super(`Web3Config hardfork doesnt match in defaultHardfork ${defaultHardfork} and common.hardfork ${commonHardFork}`);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_CORE_HARDFORK_MISMATCH;
    }
}
class ConfigChainMismatchError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_0__.BaseWeb3Error {
    constructor(defaultHardfork, commonHardFork) {
        super(`Web3Config chain doesnt match in defaultHardfork ${defaultHardfork} and common.hardfork ${commonHardFork}`);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_CORE_HARDFORK_MISMATCH;
    }
}
//# sourceMappingURL=core_errors.js.map

/***/ }),

/***/ "./node_modules/web3-errors/lib/esm/errors/ens_errors.js":
/*!***************************************************************!*\
  !*** ./node_modules/web3-errors/lib/esm/errors/ens_errors.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ENSCheckInterfaceSupportError: () => (/* binding */ ENSCheckInterfaceSupportError),
/* harmony export */   ENSNetworkNotSyncedError: () => (/* binding */ ENSNetworkNotSyncedError),
/* harmony export */   ENSUnsupportedNetworkError: () => (/* binding */ ENSUnsupportedNetworkError)
/* harmony export */ });
/* harmony import */ var _error_codes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error_codes.js */ "./node_modules/web3-errors/lib/esm/error_codes.js");
/* harmony import */ var _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../web3_error_base.js */ "./node_modules/web3-errors/lib/esm/web3_error_base.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/* eslint-disable max-classes-per-file */


class ENSCheckInterfaceSupportError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor(errorDetails) {
        super(`ENS resolver check interface support error. "${errorDetails}"`);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_ENS_CHECK_INTERFACE_SUPPORT;
    }
}
class ENSUnsupportedNetworkError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor(networkType) {
        super(`ENS is not supported on network ${networkType}`);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_ENS_UNSUPPORTED_NETWORK;
    }
}
class ENSNetworkNotSyncedError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor() {
        super(`Network not synced`);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_ENS_NETWORK_NOT_SYNCED;
    }
}
//# sourceMappingURL=ens_errors.js.map

/***/ }),

/***/ "./node_modules/web3-errors/lib/esm/errors/generic_errors.js":
/*!*******************************************************************!*\
  !*** ./node_modules/web3-errors/lib/esm/errors/generic_errors.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AbiError: () => (/* binding */ AbiError),
/* harmony export */   ExistingPluginNamespaceError: () => (/* binding */ ExistingPluginNamespaceError),
/* harmony export */   FormatterError: () => (/* binding */ FormatterError),
/* harmony export */   InvalidMethodParamsError: () => (/* binding */ InvalidMethodParamsError),
/* harmony export */   InvalidNumberOfParamsError: () => (/* binding */ InvalidNumberOfParamsError),
/* harmony export */   MethodNotImplementedError: () => (/* binding */ MethodNotImplementedError),
/* harmony export */   OperationAbortError: () => (/* binding */ OperationAbortError),
/* harmony export */   OperationTimeoutError: () => (/* binding */ OperationTimeoutError)
/* harmony export */ });
/* harmony import */ var _error_codes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error_codes.js */ "./node_modules/web3-errors/lib/esm/error_codes.js");
/* harmony import */ var _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../web3_error_base.js */ "./node_modules/web3-errors/lib/esm/web3_error_base.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/* eslint-disable max-classes-per-file */


class InvalidNumberOfParamsError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor(got, expected, method) {
        super(`Invalid number of parameters for "${method}". Got "${got}" expected "${expected}"!`);
        this.got = got;
        this.expected = expected;
        this.method = method;
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_PARAM;
    }
    toJSON() {
        return Object.assign(Object.assign({}, super.toJSON()), { got: this.got, expected: this.expected, method: this.method });
    }
}
class InvalidMethodParamsError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor(hint) {
        super(`Invalid parameters passed. "${typeof hint !== 'undefined' ? hint : ''}"`);
        this.hint = hint;
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_METHOD_PARAMS;
    }
    toJSON() {
        return Object.assign(Object.assign({}, super.toJSON()), { hint: this.hint });
    }
}
class FormatterError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor() {
        super(...arguments);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_FORMATTERS;
    }
}
class MethodNotImplementedError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor() {
        super("The method you're trying to call is not implemented.");
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_METHOD_NOT_IMPLEMENTED;
    }
}
class OperationTimeoutError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor() {
        super(...arguments);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_OPERATION_TIMEOUT;
    }
}
class OperationAbortError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor() {
        super(...arguments);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_OPERATION_ABORT;
    }
}
class AbiError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor(message, props) {
        super(message);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_ABI_ENCODING;
        this.props = props !== null && props !== void 0 ? props : {};
    }
}
class ExistingPluginNamespaceError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor(pluginNamespace) {
        super(`A plugin with the namespace: ${pluginNamespace} has already been registered.`);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_EXISTING_PLUGIN_NAMESPACE;
    }
}
//# sourceMappingURL=generic_errors.js.map

/***/ }),

/***/ "./node_modules/web3-errors/lib/esm/errors/provider_errors.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-errors/lib/esm/errors/provider_errors.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InvalidClientError: () => (/* binding */ InvalidClientError),
/* harmony export */   InvalidProviderError: () => (/* binding */ InvalidProviderError),
/* harmony export */   ProviderError: () => (/* binding */ ProviderError),
/* harmony export */   SubscriptionError: () => (/* binding */ SubscriptionError),
/* harmony export */   Web3WSProviderError: () => (/* binding */ Web3WSProviderError)
/* harmony export */ });
/* harmony import */ var _error_codes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error_codes.js */ "./node_modules/web3-errors/lib/esm/error_codes.js");
/* harmony import */ var _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../web3_error_base.js */ "./node_modules/web3-errors/lib/esm/web3_error_base.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/* eslint-disable max-classes-per-file */


class ProviderError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor() {
        super(...arguments);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_PROVIDER;
    }
}
class InvalidProviderError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor(clientUrl) {
        super(`Provider with url "${clientUrl}" is not set or invalid`);
        this.clientUrl = clientUrl;
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_PROVIDER;
    }
}
class InvalidClientError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor(clientUrl) {
        super(`Client URL "${clientUrl}" is invalid.`);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_CLIENT;
    }
}
class SubscriptionError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor() {
        super(...arguments);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_SUBSCRIPTION;
    }
}
class Web3WSProviderError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor() {
        super(...arguments);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_WS_PROVIDER; // this had duplicate code with generic provider
    }
}
//# sourceMappingURL=provider_errors.js.map

/***/ }),

/***/ "./node_modules/web3-errors/lib/esm/errors/response_errors.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-errors/lib/esm/errors/response_errors.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InvalidResponseError: () => (/* binding */ InvalidResponseError),
/* harmony export */   ResponseError: () => (/* binding */ ResponseError)
/* harmony export */ });
/* harmony import */ var _web3_error_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../web3_error_base.js */ "./node_modules/web3-errors/lib/esm/web3_error_base.js");
/* harmony import */ var _error_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error_codes.js */ "./node_modules/web3-errors/lib/esm/error_codes.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/


// To avoid circular package dependency, copied to code here. If you update this please update same function in `json_rpc.ts`
const isResponseWithError = (response) => !Array.isArray(response) &&
    response.jsonrpc === '2.0' &&
    !!response &&
    // eslint-disable-next-line no-null/no-null
    (response.result === undefined || response.result === null) &&
    // JSON RPC consider "null" as valid response
    'error' in response &&
    (typeof response.id === 'number' || typeof response.id === 'string');
const buildErrorMessage = (response) => isResponseWithError(response) ? response.error.message : '';
class ResponseError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_0__.BaseWeb3Error {
    constructor(response, message, request, statusCode) {
        var _a;
        super(message !== null && message !== void 0 ? message : `Returned error: ${Array.isArray(response)
            ? response.map(r => buildErrorMessage(r)).join(',')
            : buildErrorMessage(response)}`);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RESPONSE;
        if (!message) {
            this.data = Array.isArray(response)
                ? response.map(r => { var _a; return (_a = r.error) === null || _a === void 0 ? void 0 : _a.data; })
                : (_a = response === null || response === void 0 ? void 0 : response.error) === null || _a === void 0 ? void 0 : _a.data;
        }
        this.statusCode = statusCode;
        this.request = request;
        let errorOrErrors;
        if (`error` in response) {
            errorOrErrors = response.error;
        }
        else if (response instanceof Array) {
            errorOrErrors = response.filter(r => r.error).map(r => r.error);
        }
        if (Array.isArray(errorOrErrors) && errorOrErrors.length > 0) {
            this.cause = new _web3_error_base_js__WEBPACK_IMPORTED_MODULE_0__.MultipleErrors(errorOrErrors);
        }
        else {
            this.cause = errorOrErrors;
        }
    }
    toJSON() {
        return Object.assign(Object.assign({}, super.toJSON()), { data: this.data, request: this.request, statusCode: this.statusCode });
    }
}
class InvalidResponseError extends ResponseError {
    constructor(result, request) {
        super(result, undefined, request);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_INVALID_RESPONSE;
        let errorOrErrors;
        if (`error` in result) {
            errorOrErrors = result.error;
        }
        else if (result instanceof Array) {
            errorOrErrors = result.map(r => r.error);
        }
        if (Array.isArray(errorOrErrors)) {
            this.cause = new _web3_error_base_js__WEBPACK_IMPORTED_MODULE_0__.MultipleErrors(errorOrErrors);
        }
        else {
            this.cause = errorOrErrors;
        }
    }
}
//# sourceMappingURL=response_errors.js.map

/***/ }),

/***/ "./node_modules/web3-errors/lib/esm/errors/rpc_error_messages.js":
/*!***********************************************************************!*\
  !*** ./node_modules/web3-errors/lib/esm/errors/rpc_error_messages.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RpcErrorMessages: () => (/* binding */ RpcErrorMessages),
/* harmony export */   genericRpcErrorMessageTemplate: () => (/* binding */ genericRpcErrorMessageTemplate)
/* harmony export */ });
/* harmony import */ var _error_codes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error_codes.js */ "./node_modules/web3-errors/lib/esm/error_codes.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

/**
 * A template string for a generic Rpc Error. The `*code*` will be replaced with the code number.
 * Note: consider in next version that a spelling mistake could be corrected for `occured` and the value could be:
 * 	`An Rpc error has occurred with a code of *code*`
 */
const genericRpcErrorMessageTemplate = 'An Rpc error has occured with a code of *code*';
/* eslint-disable @typescript-eslint/naming-convention */
const RpcErrorMessages = {
    //  EIP-1474 & JSON RPC 2.0
    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1474.md
    [_error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_RPC_INVALID_JSON]: {
        message: 'Parse error',
        description: 'Invalid JSON',
    },
    [_error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_RPC_INVALID_REQUEST]: {
        message: 'Invalid request',
        description: 'JSON is not a valid request object	',
    },
    [_error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_RPC_INVALID_METHOD]: {
        message: 'Method not found',
        description: 'Method does not exist	',
    },
    [_error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_RPC_INVALID_PARAMS]: {
        message: 'Invalid params',
        description: 'Invalid method parameters',
    },
    [_error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_RPC_INTERNAL_ERROR]: {
        message: 'Internal error',
        description: 'Internal JSON-RPC error',
    },
    [_error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_RPC_INVALID_INPUT]: {
        message: 'Invalid input',
        description: 'Missing or invalid parameters',
    },
    [_error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_RPC_MISSING_RESOURCE]: {
        message: 'Resource not found',
        description: 'Requested resource not found',
    },
    [_error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_RPC_UNAVAILABLE_RESOURCE]: {
        message: 'Resource unavailable',
        description: 'Requested resource not available',
    },
    [_error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_RPC_TRANSACTION_REJECTED]: {
        message: 'Transaction rejected',
        description: 'Transaction creation failed',
    },
    [_error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_RPC_UNSUPPORTED_METHOD]: {
        message: 'Method not supported',
        description: 'Method is not implemented',
    },
    [_error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_RPC_LIMIT_EXCEEDED]: {
        message: 'Limit exceeded',
        description: 'Request exceeds defined limit',
    },
    [_error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_RPC_NOT_SUPPORTED]: {
        message: 'JSON-RPC version not supported',
        description: 'Version of JSON-RPC protocol is not supported',
    },
    // EIP-1193
    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md#provider-errors
    [_error_codes_js__WEBPACK_IMPORTED_MODULE_0__.JSONRPC_ERR_REJECTED_REQUEST]: {
        name: 'User Rejected Request',
        message: 'The user rejected the request.',
    },
    [_error_codes_js__WEBPACK_IMPORTED_MODULE_0__.JSONRPC_ERR_UNAUTHORIZED]: {
        name: 'Unauthorized',
        message: 'The requested method and/or account has not been authorized by the user.',
    },
    [_error_codes_js__WEBPACK_IMPORTED_MODULE_0__.JSONRPC_ERR_UNSUPPORTED_METHOD]: {
        name: 'Unsupported Method',
        message: 'The Provider does not support the requested method.',
    },
    [_error_codes_js__WEBPACK_IMPORTED_MODULE_0__.JSONRPC_ERR_DISCONNECTED]: {
        name: 'Disconnected',
        message: 'The Provider is disconnected from all chains.',
    },
    [_error_codes_js__WEBPACK_IMPORTED_MODULE_0__.JSONRPC_ERR_CHAIN_DISCONNECTED]: {
        name: 'Chain Disconnected',
        message: 'The Provider is not connected to the requested chain.',
    },
    // EIP-1193 - CloseEvent
    // https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent/code
    '0-999': {
        name: '',
        message: 'Not used.',
    },
    1000: {
        name: 'Normal Closure',
        message: 'The connection successfully completed the purpose for which it was created.',
    },
    1001: {
        name: 'Going Away',
        message: 'The endpoint is going away, either because of a server failure or because the browser is navigating away from the page that opened the connection.',
    },
    1002: {
        name: 'Protocol error',
        message: 'The endpoint is terminating the connection due to a protocol error.',
    },
    1003: {
        name: 'Unsupported Data',
        message: 'The connection is being terminated because the endpoint received data of a type it cannot accept. (For example, a text-only endpoint received binary data.)',
    },
    1004: {
        name: 'Reserved',
        message: 'Reserved. A meaning might be defined in the future.',
    },
    1005: {
        name: 'No Status Rcvd',
        message: 'Reserved. Indicates that no status code was provided even though one was expected.',
    },
    1006: {
        name: 'Abnormal Closure',
        message: 'Reserved. Indicates that a connection was closed abnormally (that is, with no close frame being sent) when a status code is expected.',
    },
    1007: {
        name: 'Invalid frame payload data',
        message: 'The endpoint is terminating the connection because a message was received that contained inconsistent data (e.g., non-UTF-8 data within a text message).',
    },
    1008: {
        name: 'Policy Violation',
        message: 'The endpoint is terminating the connection because it received a message that violates its policy. This is a generic status code, used when codes 1003 and 1009 are not suitable.',
    },
    1009: {
        name: 'Message Too Big',
        message: 'The endpoint is terminating the connection because a data frame was received that is too large.',
    },
    1010: {
        name: 'Mandatory Ext.',
        message: "The client is terminating the connection because it expected the server to negotiate one or more extension, but the server didn't.",
    },
    1011: {
        name: 'Internal Error',
        message: 'The server is terminating the connection because it encountered an unexpected condition that prevented it from fulfilling the request.',
    },
    1012: {
        name: 'Service Restart',
        message: 'The server is terminating the connection because it is restarting.',
    },
    1013: {
        name: 'Try Again Later',
        message: 'The server is terminating the connection due to a temporary condition, e.g. it is overloaded and is casting off some of its clients.',
    },
    1014: {
        name: 'Bad Gateway',
        message: 'The server was acting as a gateway or proxy and received an invalid response from the upstream server. This is similar to 502 HTTP Status Code.',
    },
    1015: {
        name: 'TLS handshake',
        message: "Reserved. Indicates that the connection was closed due to a failure to perform a TLS handshake (e.g., the server certificate can't be verified).",
    },
    '1016-2999': {
        name: '',
        message: 'For definition by future revisions of the WebSocket Protocol specification, and for definition by extension specifications.',
    },
    '3000-3999': {
        name: '',
        message: 'For use by libraries, frameworks, and applications. These status codes are registered directly with IANA. The interpretation of these codes is undefined by the WebSocket protocol.',
    },
    '4000-4999': {
        name: '',
        message: "For private use, and thus can't be registered. Such codes can be used by prior agreements between WebSocket applications. The interpretation of these codes is undefined by the WebSocket protocol.",
    },
};
//# sourceMappingURL=rpc_error_messages.js.map

/***/ }),

/***/ "./node_modules/web3-errors/lib/esm/errors/rpc_errors.js":
/*!***************************************************************!*\
  !*** ./node_modules/web3-errors/lib/esm/errors/rpc_errors.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EIP1193ProviderRpcError: () => (/* binding */ EIP1193ProviderRpcError),
/* harmony export */   InternalError: () => (/* binding */ InternalError),
/* harmony export */   InvalidInputError: () => (/* binding */ InvalidInputError),
/* harmony export */   InvalidParamsError: () => (/* binding */ InvalidParamsError),
/* harmony export */   InvalidRequestError: () => (/* binding */ InvalidRequestError),
/* harmony export */   LimitExceededError: () => (/* binding */ LimitExceededError),
/* harmony export */   MethodNotFoundError: () => (/* binding */ MethodNotFoundError),
/* harmony export */   MethodNotSupported: () => (/* binding */ MethodNotSupported),
/* harmony export */   ParseError: () => (/* binding */ ParseError),
/* harmony export */   ResourceUnavailableError: () => (/* binding */ ResourceUnavailableError),
/* harmony export */   ResourcesNotFoundError: () => (/* binding */ ResourcesNotFoundError),
/* harmony export */   RpcError: () => (/* binding */ RpcError),
/* harmony export */   TransactionRejectedError: () => (/* binding */ TransactionRejectedError),
/* harmony export */   VersionNotSupportedError: () => (/* binding */ VersionNotSupportedError),
/* harmony export */   rpcErrorsMap: () => (/* binding */ rpcErrorsMap)
/* harmony export */ });
/* harmony import */ var _web3_error_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../web3_error_base.js */ "./node_modules/web3-errors/lib/esm/web3_error_base.js");
/* harmony import */ var _error_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error_codes.js */ "./node_modules/web3-errors/lib/esm/error_codes.js");
/* harmony import */ var _rpc_error_messages_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rpc_error_messages.js */ "./node_modules/web3-errors/lib/esm/errors/rpc_error_messages.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/



class RpcError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_0__.BaseWeb3Error {
    constructor(rpcError, message) {
        super(message !== null && message !== void 0 ? message : _rpc_error_messages_js__WEBPACK_IMPORTED_MODULE_2__.genericRpcErrorMessageTemplate.replace('*code*', rpcError.error.code.toString()));
        this.code = rpcError.error.code;
        this.id = rpcError.id;
        this.jsonrpc = rpcError.jsonrpc;
        this.jsonRpcError = rpcError.error;
    }
    toJSON() {
        return Object.assign(Object.assign({}, super.toJSON()), { error: this.jsonRpcError, id: this.id, jsonRpc: this.jsonrpc });
    }
}
class EIP1193ProviderRpcError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_0__.BaseWeb3Error {
    constructor(code, data) {
        var _a, _b, _c, _d;
        if (!code) {
            // this case should ideally not happen
            super();
        }
        else if ((_a = _rpc_error_messages_js__WEBPACK_IMPORTED_MODULE_2__.RpcErrorMessages[code]) === null || _a === void 0 ? void 0 : _a.message) {
            super(_rpc_error_messages_js__WEBPACK_IMPORTED_MODULE_2__.RpcErrorMessages[code].message);
        }
        else {
            // Retrieve the status code object for the given code from the table, by searching through the appropriate range
            const statusCodeRange = Object.keys(_rpc_error_messages_js__WEBPACK_IMPORTED_MODULE_2__.RpcErrorMessages).find(statusCode => typeof statusCode === 'string' &&
                code >= parseInt(statusCode.split('-')[0], 10) &&
                code <= parseInt(statusCode.split('-')[1], 10));
            super((_c = (_b = _rpc_error_messages_js__WEBPACK_IMPORTED_MODULE_2__.RpcErrorMessages[statusCodeRange !== null && statusCodeRange !== void 0 ? statusCodeRange : '']) === null || _b === void 0 ? void 0 : _b.message) !== null && _c !== void 0 ? _c : _rpc_error_messages_js__WEBPACK_IMPORTED_MODULE_2__.genericRpcErrorMessageTemplate.replace('*code*', (_d = code === null || code === void 0 ? void 0 : code.toString()) !== null && _d !== void 0 ? _d : '""'));
        }
        this.code = code;
        this.data = data;
    }
}
class ParseError extends RpcError {
    constructor(rpcError) {
        super(rpcError, _rpc_error_messages_js__WEBPACK_IMPORTED_MODULE_2__.RpcErrorMessages[_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_INVALID_JSON].message);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_INVALID_JSON;
    }
}
class InvalidRequestError extends RpcError {
    constructor(rpcError) {
        super(rpcError, _rpc_error_messages_js__WEBPACK_IMPORTED_MODULE_2__.RpcErrorMessages[_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_INVALID_REQUEST].message);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_INVALID_REQUEST;
    }
}
class MethodNotFoundError extends RpcError {
    constructor(rpcError) {
        super(rpcError, _rpc_error_messages_js__WEBPACK_IMPORTED_MODULE_2__.RpcErrorMessages[_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_INVALID_METHOD].message);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_INVALID_METHOD;
    }
}
class InvalidParamsError extends RpcError {
    constructor(rpcError) {
        super(rpcError, _rpc_error_messages_js__WEBPACK_IMPORTED_MODULE_2__.RpcErrorMessages[_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_INVALID_PARAMS].message);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_INVALID_PARAMS;
    }
}
class InternalError extends RpcError {
    constructor(rpcError) {
        super(rpcError, _rpc_error_messages_js__WEBPACK_IMPORTED_MODULE_2__.RpcErrorMessages[_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_INTERNAL_ERROR].message);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_INTERNAL_ERROR;
    }
}
class InvalidInputError extends RpcError {
    constructor(rpcError) {
        super(rpcError, _rpc_error_messages_js__WEBPACK_IMPORTED_MODULE_2__.RpcErrorMessages[_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_INVALID_INPUT].message);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_INVALID_INPUT;
    }
}
class MethodNotSupported extends RpcError {
    constructor(rpcError) {
        super(rpcError, _rpc_error_messages_js__WEBPACK_IMPORTED_MODULE_2__.RpcErrorMessages[_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_UNSUPPORTED_METHOD].message);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_UNSUPPORTED_METHOD;
    }
}
class ResourceUnavailableError extends RpcError {
    constructor(rpcError) {
        super(rpcError, _rpc_error_messages_js__WEBPACK_IMPORTED_MODULE_2__.RpcErrorMessages[_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_UNAVAILABLE_RESOURCE].message);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_UNAVAILABLE_RESOURCE;
    }
}
class ResourcesNotFoundError extends RpcError {
    constructor(rpcError) {
        super(rpcError, _rpc_error_messages_js__WEBPACK_IMPORTED_MODULE_2__.RpcErrorMessages[_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_MISSING_RESOURCE].message);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_MISSING_RESOURCE;
    }
}
class VersionNotSupportedError extends RpcError {
    constructor(rpcError) {
        super(rpcError, _rpc_error_messages_js__WEBPACK_IMPORTED_MODULE_2__.RpcErrorMessages[_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_NOT_SUPPORTED].message);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_NOT_SUPPORTED;
    }
}
class TransactionRejectedError extends RpcError {
    constructor(rpcError) {
        super(rpcError, _rpc_error_messages_js__WEBPACK_IMPORTED_MODULE_2__.RpcErrorMessages[_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_TRANSACTION_REJECTED].message);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_TRANSACTION_REJECTED;
    }
}
class LimitExceededError extends RpcError {
    constructor(rpcError) {
        super(rpcError, _rpc_error_messages_js__WEBPACK_IMPORTED_MODULE_2__.RpcErrorMessages[_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_LIMIT_EXCEEDED].message);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_LIMIT_EXCEEDED;
    }
}
const rpcErrorsMap = new Map();
rpcErrorsMap.set(_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_INVALID_JSON, { error: ParseError });
rpcErrorsMap.set(_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_INVALID_REQUEST, {
    error: InvalidRequestError,
});
rpcErrorsMap.set(_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_INVALID_METHOD, {
    error: MethodNotFoundError,
});
rpcErrorsMap.set(_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_INVALID_PARAMS, { error: InvalidParamsError });
rpcErrorsMap.set(_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_INTERNAL_ERROR, { error: InternalError });
rpcErrorsMap.set(_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_INVALID_INPUT, { error: InvalidInputError });
rpcErrorsMap.set(_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_UNSUPPORTED_METHOD, {
    error: MethodNotSupported,
});
rpcErrorsMap.set(_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_UNAVAILABLE_RESOURCE, {
    error: ResourceUnavailableError,
});
rpcErrorsMap.set(_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_TRANSACTION_REJECTED, {
    error: TransactionRejectedError,
});
rpcErrorsMap.set(_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_MISSING_RESOURCE, {
    error: ResourcesNotFoundError,
});
rpcErrorsMap.set(_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_NOT_SUPPORTED, {
    error: VersionNotSupportedError,
});
rpcErrorsMap.set(_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR_RPC_LIMIT_EXCEEDED, { error: LimitExceededError });
//# sourceMappingURL=rpc_errors.js.map

/***/ }),

/***/ "./node_modules/web3-errors/lib/esm/errors/schema_errors.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-errors/lib/esm/errors/schema_errors.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SchemaFormatError: () => (/* binding */ SchemaFormatError)
/* harmony export */ });
/* harmony import */ var _error_codes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error_codes.js */ "./node_modules/web3-errors/lib/esm/error_codes.js");
/* harmony import */ var _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../web3_error_base.js */ "./node_modules/web3-errors/lib/esm/web3_error_base.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/


class SchemaFormatError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor(type) {
        super(`Format for the type ${type} is unsupported`);
        this.type = type;
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_SCHEMA_FORMAT;
    }
    toJSON() {
        return Object.assign(Object.assign({}, super.toJSON()), { type: this.type });
    }
}
//# sourceMappingURL=schema_errors.js.map

/***/ }),

/***/ "./node_modules/web3-errors/lib/esm/errors/signature_errors.js":
/*!*********************************************************************!*\
  !*** ./node_modules/web3-errors/lib/esm/errors/signature_errors.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SignatureError: () => (/* binding */ SignatureError)
/* harmony export */ });
/* harmony import */ var _error_codes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error_codes.js */ "./node_modules/web3-errors/lib/esm/error_codes.js");
/* harmony import */ var _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../web3_error_base.js */ "./node_modules/web3-errors/lib/esm/web3_error_base.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/


class SignatureError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor() {
        super(...arguments);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_SIGNATURE_FAILED;
    }
}
//# sourceMappingURL=signature_errors.js.map

/***/ }),

/***/ "./node_modules/web3-errors/lib/esm/errors/transaction_errors.js":
/*!***********************************************************************!*\
  !*** ./node_modules/web3-errors/lib/esm/errors/transaction_errors.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChainIdMismatchError: () => (/* binding */ ChainIdMismatchError),
/* harmony export */   ChainMismatchError: () => (/* binding */ ChainMismatchError),
/* harmony export */   CommonOrChainAndHardforkError: () => (/* binding */ CommonOrChainAndHardforkError),
/* harmony export */   ContractCodeNotStoredError: () => (/* binding */ ContractCodeNotStoredError),
/* harmony export */   Eip1559GasPriceError: () => (/* binding */ Eip1559GasPriceError),
/* harmony export */   Eip1559NotSupportedError: () => (/* binding */ Eip1559NotSupportedError),
/* harmony export */   HardforkMismatchError: () => (/* binding */ HardforkMismatchError),
/* harmony export */   InvalidGasOrGasPrice: () => (/* binding */ InvalidGasOrGasPrice),
/* harmony export */   InvalidMaxPriorityFeePerGasOrMaxFeePerGas: () => (/* binding */ InvalidMaxPriorityFeePerGasOrMaxFeePerGas),
/* harmony export */   InvalidNonceOrChainIdError: () => (/* binding */ InvalidNonceOrChainIdError),
/* harmony export */   InvalidPropertiesForTransactionTypeError: () => (/* binding */ InvalidPropertiesForTransactionTypeError),
/* harmony export */   InvalidTransactionCall: () => (/* binding */ InvalidTransactionCall),
/* harmony export */   InvalidTransactionObjectError: () => (/* binding */ InvalidTransactionObjectError),
/* harmony export */   InvalidTransactionWithReceiver: () => (/* binding */ InvalidTransactionWithReceiver),
/* harmony export */   InvalidTransactionWithSender: () => (/* binding */ InvalidTransactionWithSender),
/* harmony export */   LocalWalletNotAvailableError: () => (/* binding */ LocalWalletNotAvailableError),
/* harmony export */   MissingChainOrHardforkError: () => (/* binding */ MissingChainOrHardforkError),
/* harmony export */   MissingCustomChainError: () => (/* binding */ MissingCustomChainError),
/* harmony export */   MissingCustomChainIdError: () => (/* binding */ MissingCustomChainIdError),
/* harmony export */   MissingGasError: () => (/* binding */ MissingGasError),
/* harmony export */   MissingGasInnerError: () => (/* binding */ MissingGasInnerError),
/* harmony export */   NoContractAddressFoundError: () => (/* binding */ NoContractAddressFoundError),
/* harmony export */   RevertInstructionError: () => (/* binding */ RevertInstructionError),
/* harmony export */   TransactionBlockTimeoutError: () => (/* binding */ TransactionBlockTimeoutError),
/* harmony export */   TransactionDataAndInputError: () => (/* binding */ TransactionDataAndInputError),
/* harmony export */   TransactionError: () => (/* binding */ TransactionError),
/* harmony export */   TransactionGasMismatchError: () => (/* binding */ TransactionGasMismatchError),
/* harmony export */   TransactionGasMismatchInnerError: () => (/* binding */ TransactionGasMismatchInnerError),
/* harmony export */   TransactionMissingReceiptOrBlockHashError: () => (/* binding */ TransactionMissingReceiptOrBlockHashError),
/* harmony export */   TransactionNotFound: () => (/* binding */ TransactionNotFound),
/* harmony export */   TransactionOutOfGasError: () => (/* binding */ TransactionOutOfGasError),
/* harmony export */   TransactionPollingTimeoutError: () => (/* binding */ TransactionPollingTimeoutError),
/* harmony export */   TransactionReceiptMissingBlockNumberError: () => (/* binding */ TransactionReceiptMissingBlockNumberError),
/* harmony export */   TransactionRevertInstructionError: () => (/* binding */ TransactionRevertInstructionError),
/* harmony export */   TransactionRevertWithCustomError: () => (/* binding */ TransactionRevertWithCustomError),
/* harmony export */   TransactionRevertedWithoutReasonError: () => (/* binding */ TransactionRevertedWithoutReasonError),
/* harmony export */   TransactionSendTimeoutError: () => (/* binding */ TransactionSendTimeoutError),
/* harmony export */   TransactionSigningError: () => (/* binding */ TransactionSigningError),
/* harmony export */   UnableToPopulateNonceError: () => (/* binding */ UnableToPopulateNonceError),
/* harmony export */   UndefinedRawTransactionError: () => (/* binding */ UndefinedRawTransactionError),
/* harmony export */   UnsupportedFeeMarketError: () => (/* binding */ UnsupportedFeeMarketError),
/* harmony export */   UnsupportedTransactionTypeError: () => (/* binding */ UnsupportedTransactionTypeError)
/* harmony export */ });
/* harmony import */ var _error_codes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error_codes.js */ "./node_modules/web3-errors/lib/esm/error_codes.js");
/* harmony import */ var _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../web3_error_base.js */ "./node_modules/web3-errors/lib/esm/web3_error_base.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/


class TransactionError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor(message, receipt) {
        super(message);
        this.receipt = receipt;
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX;
    }
    toJSON() {
        return Object.assign(Object.assign({}, super.toJSON()), { receipt: this.receipt });
    }
}
class RevertInstructionError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor(reason, signature) {
        super(`Your request got reverted with the following reason string: ${reason}`);
        this.reason = reason;
        this.signature = signature;
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_REVERT_INSTRUCTION;
    }
    toJSON() {
        return Object.assign(Object.assign({}, super.toJSON()), { reason: this.reason, signature: this.signature });
    }
}
class TransactionRevertInstructionError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor(reason, signature, receipt, data) {
        super(`Transaction has been reverted by the EVM${receipt === undefined ? '' : `:\n ${_web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error.convertToString(receipt)}`}`);
        this.reason = reason;
        this.signature = signature;
        this.receipt = receipt;
        this.data = data;
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_REVERT_TRANSACTION;
    }
    toJSON() {
        return Object.assign(Object.assign({}, super.toJSON()), { reason: this.reason, signature: this.signature, receipt: this.receipt, data: this.data });
    }
}
/**
 * This error is used when a transaction to a smart contract fails and
 * a custom user error (https://blog.soliditylang.org/2021/04/21/custom-errors/)
 * is able to be parsed from the revert reason
 */
class TransactionRevertWithCustomError extends TransactionRevertInstructionError {
    constructor(reason, customErrorName, customErrorDecodedSignature, customErrorArguments, signature, receipt, data) {
        super(reason);
        this.reason = reason;
        this.customErrorName = customErrorName;
        this.customErrorDecodedSignature = customErrorDecodedSignature;
        this.customErrorArguments = customErrorArguments;
        this.signature = signature;
        this.receipt = receipt;
        this.data = data;
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_REVERT_TRANSACTION_CUSTOM_ERROR;
    }
    toJSON() {
        return Object.assign(Object.assign({}, super.toJSON()), { reason: this.reason, customErrorName: this.customErrorName, customErrorDecodedSignature: this.customErrorDecodedSignature, customErrorArguments: this.customErrorArguments, signature: this.signature, receipt: this.receipt, data: this.data });
    }
}
class NoContractAddressFoundError extends TransactionError {
    constructor(receipt) {
        super("The transaction receipt didn't contain a contract address.", receipt);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_NO_CONTRACT_ADDRESS;
    }
    toJSON() {
        return Object.assign(Object.assign({}, super.toJSON()), { receipt: this.receipt });
    }
}
class ContractCodeNotStoredError extends TransactionError {
    constructor(receipt) {
        super("The contract code couldn't be stored, please check your gas limit.", receipt);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_CONTRACT_NOT_STORED;
    }
}
class TransactionRevertedWithoutReasonError extends TransactionError {
    constructor(receipt) {
        super(`Transaction has been reverted by the EVM${receipt === undefined ? '' : `:\n ${_web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error.convertToString(receipt)}`}`, receipt);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_REVERT_WITHOUT_REASON;
    }
}
class TransactionOutOfGasError extends TransactionError {
    constructor(receipt) {
        super(`Transaction ran out of gas. Please provide more gas:\n ${JSON.stringify(receipt, undefined, 2)}`, receipt);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_OUT_OF_GAS;
    }
}
class UndefinedRawTransactionError extends TransactionError {
    constructor() {
        super(`Raw transaction undefined`);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_RAW_TX_UNDEFINED;
    }
}
class TransactionNotFound extends TransactionError {
    constructor() {
        super('Transaction not found');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_NOT_FOUND;
    }
}
class InvalidTransactionWithSender extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        super(value, 'invalid transaction with invalid sender');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_INVALID_SENDER;
    }
}
class InvalidTransactionWithReceiver extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        super(value, 'invalid transaction with invalid receiver');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_INVALID_RECEIVER;
    }
}
class InvalidTransactionCall extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        super(value, 'invalid transaction call');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_INVALID_CALL;
    }
}
class MissingCustomChainError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor() {
        super('MissingCustomChainError', 'If tx.common is provided it must have tx.common.customChain');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_MISSING_CUSTOM_CHAIN;
    }
}
class MissingCustomChainIdError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor() {
        super('MissingCustomChainIdError', 'If tx.common is provided it must have tx.common.customChain and tx.common.customChain.chainId');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_MISSING_CUSTOM_CHAIN_ID;
    }
}
class ChainIdMismatchError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        super(JSON.stringify(value), 
        // https://github.com/ChainSafe/web3.js/blob/8783f4d64e424456bdc53b34ef1142d0a7cee4d7/packages/web3-eth-accounts/src/index.js#L176
        'Chain Id doesnt match in tx.chainId tx.common.customChain.chainId');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_CHAIN_ID_MISMATCH;
    }
}
class ChainMismatchError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        super(JSON.stringify(value), 'Chain doesnt match in tx.chain tx.common.basechain');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_CHAIN_MISMATCH;
    }
}
class HardforkMismatchError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        super(JSON.stringify(value), 'hardfork doesnt match in tx.hardfork tx.common.hardfork');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_HARDFORK_MISMATCH;
    }
}
class CommonOrChainAndHardforkError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor() {
        super('CommonOrChainAndHardforkError', 'Please provide the common object or the chain and hardfork property but not all together.');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_INVALID_CHAIN_INFO;
    }
}
class MissingChainOrHardforkError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        var _a, _b;
        super('MissingChainOrHardforkError', `When specifying chain and hardfork, both values must be defined. Received "chain": ${(_a = value.chain) !== null && _a !== void 0 ? _a : 'undefined'}, "hardfork": ${(_b = value.hardfork) !== null && _b !== void 0 ? _b : 'undefined'}`);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_MISSING_CHAIN_INFO;
    }
}
class MissingGasInnerError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor() {
        super('Missing properties in transaction, either define "gas" and "gasPrice" for type 0 transactions or "gas", "maxPriorityFeePerGas" and "maxFeePerGas" for type 2 transactions');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_MISSING_GAS_INNER_ERROR;
    }
}
class MissingGasError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        var _a, _b, _c, _d;
        super(`gas: ${(_a = value.gas) !== null && _a !== void 0 ? _a : 'undefined'}, gasPrice: ${(_b = value.gasPrice) !== null && _b !== void 0 ? _b : 'undefined'}, maxPriorityFeePerGas: ${(_c = value.maxPriorityFeePerGas) !== null && _c !== void 0 ? _c : 'undefined'}, maxFeePerGas: ${(_d = value.maxFeePerGas) !== null && _d !== void 0 ? _d : 'undefined'}`, '"gas" is missing');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_MISSING_GAS;
        this.cause = new MissingGasInnerError();
    }
}
class TransactionGasMismatchInnerError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor() {
        super('Missing properties in transaction, either define "gas" and "gasPrice" for type 0 transactions or "gas", "maxPriorityFeePerGas" and "maxFeePerGas" for type 2 transactions, not both');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_GAS_MISMATCH_INNER_ERROR;
    }
}
class TransactionGasMismatchError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        var _a, _b, _c, _d;
        super(`gas: ${(_a = value.gas) !== null && _a !== void 0 ? _a : 'undefined'}, gasPrice: ${(_b = value.gasPrice) !== null && _b !== void 0 ? _b : 'undefined'}, maxPriorityFeePerGas: ${(_c = value.maxPriorityFeePerGas) !== null && _c !== void 0 ? _c : 'undefined'}, maxFeePerGas: ${(_d = value.maxFeePerGas) !== null && _d !== void 0 ? _d : 'undefined'}`, 'transaction must specify legacy or fee market gas properties, not both');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_GAS_MISMATCH;
        this.cause = new TransactionGasMismatchInnerError();
    }
}
class InvalidGasOrGasPrice extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        var _a, _b;
        super(`gas: ${(_a = value.gas) !== null && _a !== void 0 ? _a : 'undefined'}, gasPrice: ${(_b = value.gasPrice) !== null && _b !== void 0 ? _b : 'undefined'}`, 'Gas or gasPrice is lower than 0');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_INVALID_LEGACY_GAS;
    }
}
class InvalidMaxPriorityFeePerGasOrMaxFeePerGas extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        var _a, _b;
        super(`maxPriorityFeePerGas: ${(_a = value.maxPriorityFeePerGas) !== null && _a !== void 0 ? _a : 'undefined'}, maxFeePerGas: ${(_b = value.maxFeePerGas) !== null && _b !== void 0 ? _b : 'undefined'}`, 'maxPriorityFeePerGas or maxFeePerGas is lower than 0');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_INVALID_FEE_MARKET_GAS;
    }
}
class Eip1559GasPriceError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        super(value, "eip-1559 transactions don't support gasPrice");
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_INVALID_FEE_MARKET_GAS_PRICE;
    }
}
class UnsupportedFeeMarketError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        var _a, _b;
        super(`maxPriorityFeePerGas: ${(_a = value.maxPriorityFeePerGas) !== null && _a !== void 0 ? _a : 'undefined'}, maxFeePerGas: ${(_b = value.maxFeePerGas) !== null && _b !== void 0 ? _b : 'undefined'}`, "pre-eip-1559 transaction don't support maxFeePerGas/maxPriorityFeePerGas");
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_INVALID_LEGACY_FEE_MARKET;
    }
}
class InvalidTransactionObjectError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        super(value, 'invalid transaction object');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_INVALID_OBJECT;
    }
}
class InvalidNonceOrChainIdError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        var _a, _b;
        super(`nonce: ${(_a = value.nonce) !== null && _a !== void 0 ? _a : 'undefined'}, chainId: ${(_b = value.chainId) !== null && _b !== void 0 ? _b : 'undefined'}`, 'Nonce or chainId is lower than 0');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_INVALID_NONCE_OR_CHAIN_ID;
    }
}
class UnableToPopulateNonceError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor() {
        super('UnableToPopulateNonceError', 'unable to populate nonce, no from address available');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_UNABLE_TO_POPULATE_NONCE;
    }
}
class Eip1559NotSupportedError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor() {
        super('Eip1559NotSupportedError', "Network doesn't support eip-1559");
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_UNSUPPORTED_EIP_1559;
    }
}
class UnsupportedTransactionTypeError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        super(value, 'unsupported transaction type');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_UNSUPPORTED_TYPE;
    }
}
class TransactionDataAndInputError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        var _a, _b;
        super(`data: ${(_a = value.data) !== null && _a !== void 0 ? _a : 'undefined'}, input: ${(_b = value.input) !== null && _b !== void 0 ? _b : 'undefined'}`, 'You can\'t have "data" and "input" as properties of transactions at the same time, please use either "data" or "input" instead.');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_DATA_AND_INPUT;
    }
}
class TransactionSendTimeoutError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor(value) {
        super(`The connected Ethereum Node did not respond within ${value.numberOfSeconds} seconds, please make sure your transaction was properly sent and you are connected to a healthy Node. Be aware that transaction might still be pending or mined!\n\tTransaction Hash: ${value.transactionHash ? value.transactionHash.toString() : 'not available'}`);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_SEND_TIMEOUT;
    }
}
function transactionTimeoutHint(transactionHash) {
    return `Please make sure your transaction was properly sent and there are no previous pending transaction for the same account. However, be aware that it might still be mined!\n\tTransaction Hash: ${transactionHash ? transactionHash.toString() : 'not available'}`;
}
class TransactionPollingTimeoutError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor(value) {
        super(`Transaction was not mined within ${value.numberOfSeconds} seconds. ${transactionTimeoutHint(value.transactionHash)}`);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_POLLING_TIMEOUT;
    }
}
class TransactionBlockTimeoutError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor(value) {
        super(`Transaction started at ${value.starterBlockNumber} but was not mined within ${value.numberOfBlocks} blocks. ${transactionTimeoutHint(value.transactionHash)}`);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_BLOCK_TIMEOUT;
    }
}
class TransactionMissingReceiptOrBlockHashError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        var _a, _b;
        super(`receipt: ${JSON.stringify(value.receipt)}, blockHash: ${(_a = value.blockHash) === null || _a === void 0 ? void 0 : _a.toString()}, transactionHash: ${(_b = value.transactionHash) === null || _b === void 0 ? void 0 : _b.toString()}`, `Receipt missing or blockHash null`);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_RECEIPT_MISSING_OR_BLOCKHASH_NULL;
    }
}
class TransactionReceiptMissingBlockNumberError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        super(`receipt: ${JSON.stringify(value.receipt)}`, `Receipt missing block number`);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_RECEIPT_MISSING_BLOCK_NUMBER;
    }
}
class TransactionSigningError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor(errorDetails) {
        super(`Invalid signature. "${errorDetails}"`);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_SIGNING;
    }
}
class LocalWalletNotAvailableError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor() {
        super('LocalWalletNotAvailableError', `Attempted to index account in local wallet, but no wallet is available`);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_LOCAL_WALLET_NOT_AVAILABLE;
    }
}
class InvalidPropertiesForTransactionTypeError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error {
    constructor(validationError, txType) {
        const invalidPropertyNames = [];
        validationError.forEach(error => invalidPropertyNames.push(error.keyword));
        super(`The following properties are invalid for the transaction type ${txType}: ${invalidPropertyNames.join(', ')}`);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_INVALID_PROPERTIES_FOR_TYPE;
    }
}
//# sourceMappingURL=transaction_errors.js.map

/***/ }),

/***/ "./node_modules/web3-errors/lib/esm/errors/utils_errors.js":
/*!*****************************************************************!*\
  !*** ./node_modules/web3-errors/lib/esm/errors/utils_errors.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HexProcessingError: () => (/* binding */ HexProcessingError),
/* harmony export */   InvalidAddressError: () => (/* binding */ InvalidAddressError),
/* harmony export */   InvalidBlockError: () => (/* binding */ InvalidBlockError),
/* harmony export */   InvalidBooleanError: () => (/* binding */ InvalidBooleanError),
/* harmony export */   InvalidBytesError: () => (/* binding */ InvalidBytesError),
/* harmony export */   InvalidIntegerError: () => (/* binding */ InvalidIntegerError),
/* harmony export */   InvalidLargeValueError: () => (/* binding */ InvalidLargeValueError),
/* harmony export */   InvalidNumberError: () => (/* binding */ InvalidNumberError),
/* harmony export */   InvalidSizeError: () => (/* binding */ InvalidSizeError),
/* harmony export */   InvalidStringError: () => (/* binding */ InvalidStringError),
/* harmony export */   InvalidTypeAbiInputError: () => (/* binding */ InvalidTypeAbiInputError),
/* harmony export */   InvalidTypeError: () => (/* binding */ InvalidTypeError),
/* harmony export */   InvalidUnitError: () => (/* binding */ InvalidUnitError),
/* harmony export */   InvalidUnsignedIntegerError: () => (/* binding */ InvalidUnsignedIntegerError),
/* harmony export */   NibbleWidthError: () => (/* binding */ NibbleWidthError)
/* harmony export */ });
/* harmony import */ var _error_codes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error_codes.js */ "./node_modules/web3-errors/lib/esm/error_codes.js");
/* harmony import */ var _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../web3_error_base.js */ "./node_modules/web3-errors/lib/esm/web3_error_base.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/* eslint-disable max-classes-per-file */


class InvalidBytesError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        super(value, 'can not parse as byte data');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_BYTES;
    }
}
class InvalidNumberError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        super(value, 'can not parse as number data');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_NUMBER;
    }
}
class InvalidAddressError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        super(value, 'invalid ethereum address');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_ADDRESS;
    }
}
class InvalidStringError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        super(value, 'not a valid string');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_STRING;
    }
}
class InvalidUnitError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        super(value, 'invalid unit');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_UNIT;
    }
}
class InvalidIntegerError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        super(value, 'not a valid unit. Must be a positive integer');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_INTEGER;
    }
}
class HexProcessingError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        super(value, 'can not be converted to hex');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_HEX;
    }
}
class NibbleWidthError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        super(value, 'value greater than the nibble width');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_NIBBLE_WIDTH;
    }
}
class InvalidTypeError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        super(value, 'invalid type, type not supported');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_TYPE;
    }
}
class InvalidBooleanError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        super(value, 'not a valid boolean.');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_BOOLEAN;
    }
}
class InvalidUnsignedIntegerError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        super(value, 'not a valid unsigned integer.');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_UNSIGNED_INTEGER;
    }
}
class InvalidSizeError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        super(value, 'invalid size given.');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_SIZE;
    }
}
class InvalidLargeValueError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        super(value, 'value is larger than size.');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_LARGE_VALUE;
    }
}
class InvalidBlockError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        super(value, 'invalid string given');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_BLOCK;
    }
}
class InvalidTypeAbiInputError extends _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError {
    constructor(value) {
        super(value, 'components found but type is not tuple');
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_TYPE_ABI;
    }
}
//# sourceMappingURL=utils_errors.js.map

/***/ }),

/***/ "./node_modules/web3-errors/lib/esm/index.js":
/*!***************************************************!*\
  !*** ./node_modules/web3-errors/lib/esm/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AbiError: () => (/* reexport safe */ _errors_generic_errors_js__WEBPACK_IMPORTED_MODULE_6__.AbiError),
/* harmony export */   BaseWeb3Error: () => (/* reexport safe */ _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseWeb3Error),
/* harmony export */   ChainIdMismatchError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.ChainIdMismatchError),
/* harmony export */   ChainMismatchError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.ChainMismatchError),
/* harmony export */   CommonOrChainAndHardforkError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.CommonOrChainAndHardforkError),
/* harmony export */   ConfigChainMismatchError: () => (/* reexport safe */ _errors_core_errors_js__WEBPACK_IMPORTED_MODULE_12__.ConfigChainMismatchError),
/* harmony export */   ConfigHardforkMismatchError: () => (/* reexport safe */ _errors_core_errors_js__WEBPACK_IMPORTED_MODULE_12__.ConfigHardforkMismatchError),
/* harmony export */   ConnectionCloseError: () => (/* reexport safe */ _errors_connection_errors_js__WEBPACK_IMPORTED_MODULE_3__.ConnectionCloseError),
/* harmony export */   ConnectionError: () => (/* reexport safe */ _errors_connection_errors_js__WEBPACK_IMPORTED_MODULE_3__.ConnectionError),
/* harmony export */   ConnectionNotOpenError: () => (/* reexport safe */ _errors_connection_errors_js__WEBPACK_IMPORTED_MODULE_3__.ConnectionNotOpenError),
/* harmony export */   ConnectionTimeoutError: () => (/* reexport safe */ _errors_connection_errors_js__WEBPACK_IMPORTED_MODULE_3__.ConnectionTimeoutError),
/* harmony export */   ContractCodeNotStoredError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.ContractCodeNotStoredError),
/* harmony export */   ContractEventDoesNotExistError: () => (/* reexport safe */ _errors_contract_errors_js__WEBPACK_IMPORTED_MODULE_4__.ContractEventDoesNotExistError),
/* harmony export */   ContractExecutionError: () => (/* reexport safe */ _errors_contract_errors_js__WEBPACK_IMPORTED_MODULE_4__.ContractExecutionError),
/* harmony export */   ContractInstantiationError: () => (/* reexport safe */ _errors_contract_errors_js__WEBPACK_IMPORTED_MODULE_4__.ContractInstantiationError),
/* harmony export */   ContractMissingABIError: () => (/* reexport safe */ _errors_contract_errors_js__WEBPACK_IMPORTED_MODULE_4__.ContractMissingABIError),
/* harmony export */   ContractMissingDeployDataError: () => (/* reexport safe */ _errors_contract_errors_js__WEBPACK_IMPORTED_MODULE_4__.ContractMissingDeployDataError),
/* harmony export */   ContractNoAddressDefinedError: () => (/* reexport safe */ _errors_contract_errors_js__WEBPACK_IMPORTED_MODULE_4__.ContractNoAddressDefinedError),
/* harmony export */   ContractNoFromAddressDefinedError: () => (/* reexport safe */ _errors_contract_errors_js__WEBPACK_IMPORTED_MODULE_4__.ContractNoFromAddressDefinedError),
/* harmony export */   ContractOnceRequiresCallbackError: () => (/* reexport safe */ _errors_contract_errors_js__WEBPACK_IMPORTED_MODULE_4__.ContractOnceRequiresCallbackError),
/* harmony export */   ContractReservedEventError: () => (/* reexport safe */ _errors_contract_errors_js__WEBPACK_IMPORTED_MODULE_4__.ContractReservedEventError),
/* harmony export */   ContractTransactionDataAndInputError: () => (/* reexport safe */ _errors_contract_errors_js__WEBPACK_IMPORTED_MODULE_4__.ContractTransactionDataAndInputError),
/* harmony export */   EIP1193ProviderRpcError: () => (/* reexport safe */ _errors_rpc_errors_js__WEBPACK_IMPORTED_MODULE_13__.EIP1193ProviderRpcError),
/* harmony export */   ENSCheckInterfaceSupportError: () => (/* reexport safe */ _errors_ens_errors_js__WEBPACK_IMPORTED_MODULE_5__.ENSCheckInterfaceSupportError),
/* harmony export */   ENSNetworkNotSyncedError: () => (/* reexport safe */ _errors_ens_errors_js__WEBPACK_IMPORTED_MODULE_5__.ENSNetworkNotSyncedError),
/* harmony export */   ENSUnsupportedNetworkError: () => (/* reexport safe */ _errors_ens_errors_js__WEBPACK_IMPORTED_MODULE_5__.ENSUnsupportedNetworkError),
/* harmony export */   ERR_ABI_ENCODING: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_ABI_ENCODING),
/* harmony export */   ERR_CONN: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONN),
/* harmony export */   ERR_CONN_CLOSE: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONN_CLOSE),
/* harmony export */   ERR_CONN_INVALID: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONN_INVALID),
/* harmony export */   ERR_CONN_MAX_ATTEMPTS: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONN_MAX_ATTEMPTS),
/* harmony export */   ERR_CONN_NOT_OPEN: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONN_NOT_OPEN),
/* harmony export */   ERR_CONN_PENDING_REQUESTS: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONN_PENDING_REQUESTS),
/* harmony export */   ERR_CONN_TIMEOUT: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONN_TIMEOUT),
/* harmony export */   ERR_CONTRACT: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONTRACT),
/* harmony export */   ERR_CONTRACT_ABI_MISSING: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONTRACT_ABI_MISSING),
/* harmony export */   ERR_CONTRACT_EVENT_NOT_EXISTS: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONTRACT_EVENT_NOT_EXISTS),
/* harmony export */   ERR_CONTRACT_EXECUTION_REVERTED: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONTRACT_EXECUTION_REVERTED),
/* harmony export */   ERR_CONTRACT_INSTANTIATION: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONTRACT_INSTANTIATION),
/* harmony export */   ERR_CONTRACT_MISSING_ADDRESS: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONTRACT_MISSING_ADDRESS),
/* harmony export */   ERR_CONTRACT_MISSING_DEPLOY_DATA: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONTRACT_MISSING_DEPLOY_DATA),
/* harmony export */   ERR_CONTRACT_MISSING_FROM_ADDRESS: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONTRACT_MISSING_FROM_ADDRESS),
/* harmony export */   ERR_CONTRACT_REQUIRED_CALLBACK: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONTRACT_REQUIRED_CALLBACK),
/* harmony export */   ERR_CONTRACT_RESERVED_EVENT: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONTRACT_RESERVED_EVENT),
/* harmony export */   ERR_CONTRACT_RESOLVER_MISSING: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONTRACT_RESOLVER_MISSING),
/* harmony export */   ERR_CONTRACT_TX_DATA_AND_INPUT: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CONTRACT_TX_DATA_AND_INPUT),
/* harmony export */   ERR_CORE_CHAIN_MISMATCH: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CORE_CHAIN_MISMATCH),
/* harmony export */   ERR_CORE_HARDFORK_MISMATCH: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_CORE_HARDFORK_MISMATCH),
/* harmony export */   ERR_ENS_CHECK_INTERFACE_SUPPORT: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_ENS_CHECK_INTERFACE_SUPPORT),
/* harmony export */   ERR_ENS_NETWORK_NOT_SYNCED: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_ENS_NETWORK_NOT_SYNCED),
/* harmony export */   ERR_ENS_UNSUPPORTED_NETWORK: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_ENS_UNSUPPORTED_NETWORK),
/* harmony export */   ERR_EXISTING_PLUGIN_NAMESPACE: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_EXISTING_PLUGIN_NAMESPACE),
/* harmony export */   ERR_FORMATTERS: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_FORMATTERS),
/* harmony export */   ERR_INVALID_ADDRESS: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_ADDRESS),
/* harmony export */   ERR_INVALID_BLOCK: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_BLOCK),
/* harmony export */   ERR_INVALID_BOOLEAN: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_BOOLEAN),
/* harmony export */   ERR_INVALID_BYTES: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_BYTES),
/* harmony export */   ERR_INVALID_CLIENT: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_CLIENT),
/* harmony export */   ERR_INVALID_HEX: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_HEX),
/* harmony export */   ERR_INVALID_INTEGER: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_INTEGER),
/* harmony export */   ERR_INVALID_KEYSTORE: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_KEYSTORE),
/* harmony export */   ERR_INVALID_LARGE_VALUE: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_LARGE_VALUE),
/* harmony export */   ERR_INVALID_METHOD_PARAMS: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_METHOD_PARAMS),
/* harmony export */   ERR_INVALID_NIBBLE_WIDTH: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_NIBBLE_WIDTH),
/* harmony export */   ERR_INVALID_NUMBER: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_NUMBER),
/* harmony export */   ERR_INVALID_PASSWORD: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_PASSWORD),
/* harmony export */   ERR_INVALID_PRIVATE_KEY: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_PRIVATE_KEY),
/* harmony export */   ERR_INVALID_PROVIDER: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_PROVIDER),
/* harmony export */   ERR_INVALID_RESPONSE: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_RESPONSE),
/* harmony export */   ERR_INVALID_SIGNATURE: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_SIGNATURE),
/* harmony export */   ERR_INVALID_SIZE: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_SIZE),
/* harmony export */   ERR_INVALID_STRING: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_STRING),
/* harmony export */   ERR_INVALID_TYPE: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_TYPE),
/* harmony export */   ERR_INVALID_TYPE_ABI: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_TYPE_ABI),
/* harmony export */   ERR_INVALID_UNIT: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_UNIT),
/* harmony export */   ERR_INVALID_UNSIGNED_INTEGER: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_UNSIGNED_INTEGER),
/* harmony export */   ERR_IV_LENGTH: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_IV_LENGTH),
/* harmony export */   ERR_KEY_DERIVATION_FAIL: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_KEY_DERIVATION_FAIL),
/* harmony export */   ERR_KEY_VERSION_UNSUPPORTED: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_KEY_VERSION_UNSUPPORTED),
/* harmony export */   ERR_METHOD_NOT_IMPLEMENTED: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_METHOD_NOT_IMPLEMENTED),
/* harmony export */   ERR_MULTIPLE_ERRORS: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_MULTIPLE_ERRORS),
/* harmony export */   ERR_OPERATION_ABORT: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_OPERATION_ABORT),
/* harmony export */   ERR_OPERATION_TIMEOUT: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_OPERATION_TIMEOUT),
/* harmony export */   ERR_PARAM: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_PARAM),
/* harmony export */   ERR_PBKDF2_ITERATIONS: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_PBKDF2_ITERATIONS),
/* harmony export */   ERR_PRIVATE_KEY_LENGTH: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_PRIVATE_KEY_LENGTH),
/* harmony export */   ERR_PROVIDER: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_PROVIDER),
/* harmony export */   ERR_RAW_TX_UNDEFINED: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_RAW_TX_UNDEFINED),
/* harmony export */   ERR_REQ_ALREADY_SENT: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_REQ_ALREADY_SENT),
/* harmony export */   ERR_RESPONSE: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_RESPONSE),
/* harmony export */   ERR_RPC_INTERNAL_ERROR: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_RPC_INTERNAL_ERROR),
/* harmony export */   ERR_RPC_INVALID_INPUT: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_RPC_INVALID_INPUT),
/* harmony export */   ERR_RPC_INVALID_JSON: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_RPC_INVALID_JSON),
/* harmony export */   ERR_RPC_INVALID_METHOD: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_RPC_INVALID_METHOD),
/* harmony export */   ERR_RPC_INVALID_PARAMS: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_RPC_INVALID_PARAMS),
/* harmony export */   ERR_RPC_INVALID_REQUEST: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_RPC_INVALID_REQUEST),
/* harmony export */   ERR_RPC_LIMIT_EXCEEDED: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_RPC_LIMIT_EXCEEDED),
/* harmony export */   ERR_RPC_MISSING_RESOURCE: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_RPC_MISSING_RESOURCE),
/* harmony export */   ERR_RPC_NOT_SUPPORTED: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_RPC_NOT_SUPPORTED),
/* harmony export */   ERR_RPC_TRANSACTION_REJECTED: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_RPC_TRANSACTION_REJECTED),
/* harmony export */   ERR_RPC_UNAVAILABLE_RESOURCE: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_RPC_UNAVAILABLE_RESOURCE),
/* harmony export */   ERR_RPC_UNSUPPORTED_METHOD: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_RPC_UNSUPPORTED_METHOD),
/* harmony export */   ERR_SCHEMA_FORMAT: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_SCHEMA_FORMAT),
/* harmony export */   ERR_SIGNATURE_FAILED: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_SIGNATURE_FAILED),
/* harmony export */   ERR_SUBSCRIPTION: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_SUBSCRIPTION),
/* harmony export */   ERR_TX: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX),
/* harmony export */   ERR_TX_BLOCK_TIMEOUT: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_BLOCK_TIMEOUT),
/* harmony export */   ERR_TX_CHAIN_ID_MISMATCH: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_CHAIN_ID_MISMATCH),
/* harmony export */   ERR_TX_CHAIN_MISMATCH: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_CHAIN_MISMATCH),
/* harmony export */   ERR_TX_CONTRACT_NOT_STORED: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_CONTRACT_NOT_STORED),
/* harmony export */   ERR_TX_DATA_AND_INPUT: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_DATA_AND_INPUT),
/* harmony export */   ERR_TX_GAS_MISMATCH: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_GAS_MISMATCH),
/* harmony export */   ERR_TX_GAS_MISMATCH_INNER_ERROR: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_GAS_MISMATCH_INNER_ERROR),
/* harmony export */   ERR_TX_HARDFORK_MISMATCH: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_HARDFORK_MISMATCH),
/* harmony export */   ERR_TX_INVALID_CALL: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_INVALID_CALL),
/* harmony export */   ERR_TX_INVALID_CHAIN_INFO: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_INVALID_CHAIN_INFO),
/* harmony export */   ERR_TX_INVALID_FEE_MARKET_GAS: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_INVALID_FEE_MARKET_GAS),
/* harmony export */   ERR_TX_INVALID_FEE_MARKET_GAS_PRICE: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_INVALID_FEE_MARKET_GAS_PRICE),
/* harmony export */   ERR_TX_INVALID_LEGACY_FEE_MARKET: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_INVALID_LEGACY_FEE_MARKET),
/* harmony export */   ERR_TX_INVALID_LEGACY_GAS: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_INVALID_LEGACY_GAS),
/* harmony export */   ERR_TX_INVALID_NONCE_OR_CHAIN_ID: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_INVALID_NONCE_OR_CHAIN_ID),
/* harmony export */   ERR_TX_INVALID_OBJECT: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_INVALID_OBJECT),
/* harmony export */   ERR_TX_INVALID_PROPERTIES_FOR_TYPE: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_INVALID_PROPERTIES_FOR_TYPE),
/* harmony export */   ERR_TX_INVALID_RECEIVER: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_INVALID_RECEIVER),
/* harmony export */   ERR_TX_INVALID_SENDER: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_INVALID_SENDER),
/* harmony export */   ERR_TX_LOCAL_WALLET_NOT_AVAILABLE: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_LOCAL_WALLET_NOT_AVAILABLE),
/* harmony export */   ERR_TX_MISSING_CHAIN_INFO: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_MISSING_CHAIN_INFO),
/* harmony export */   ERR_TX_MISSING_CUSTOM_CHAIN: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_MISSING_CUSTOM_CHAIN),
/* harmony export */   ERR_TX_MISSING_CUSTOM_CHAIN_ID: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_MISSING_CUSTOM_CHAIN_ID),
/* harmony export */   ERR_TX_MISSING_GAS: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_MISSING_GAS),
/* harmony export */   ERR_TX_MISSING_GAS_INNER_ERROR: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_MISSING_GAS_INNER_ERROR),
/* harmony export */   ERR_TX_NOT_FOUND: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_NOT_FOUND),
/* harmony export */   ERR_TX_NO_CONTRACT_ADDRESS: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_NO_CONTRACT_ADDRESS),
/* harmony export */   ERR_TX_OUT_OF_GAS: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_OUT_OF_GAS),
/* harmony export */   ERR_TX_POLLING_TIMEOUT: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_POLLING_TIMEOUT),
/* harmony export */   ERR_TX_RECEIPT_MISSING_BLOCK_NUMBER: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_RECEIPT_MISSING_BLOCK_NUMBER),
/* harmony export */   ERR_TX_RECEIPT_MISSING_OR_BLOCKHASH_NULL: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_RECEIPT_MISSING_OR_BLOCKHASH_NULL),
/* harmony export */   ERR_TX_REVERT_INSTRUCTION: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_REVERT_INSTRUCTION),
/* harmony export */   ERR_TX_REVERT_TRANSACTION: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_REVERT_TRANSACTION),
/* harmony export */   ERR_TX_REVERT_TRANSACTION_CUSTOM_ERROR: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_REVERT_TRANSACTION_CUSTOM_ERROR),
/* harmony export */   ERR_TX_REVERT_WITHOUT_REASON: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_REVERT_WITHOUT_REASON),
/* harmony export */   ERR_TX_SEND_TIMEOUT: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_SEND_TIMEOUT),
/* harmony export */   ERR_TX_SIGNING: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_SIGNING),
/* harmony export */   ERR_TX_UNABLE_TO_POPULATE_NONCE: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_UNABLE_TO_POPULATE_NONCE),
/* harmony export */   ERR_TX_UNSUPPORTED_EIP_1559: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_UNSUPPORTED_EIP_1559),
/* harmony export */   ERR_TX_UNSUPPORTED_TYPE: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_TX_UNSUPPORTED_TYPE),
/* harmony export */   ERR_UNSUPPORTED_KDF: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_UNSUPPORTED_KDF),
/* harmony export */   ERR_VALIDATION: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_VALIDATION),
/* harmony export */   ERR_WS_PROVIDER: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_WS_PROVIDER),
/* harmony export */   Eip1559GasPriceError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.Eip1559GasPriceError),
/* harmony export */   Eip1559NotSupportedError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.Eip1559NotSupportedError),
/* harmony export */   Eip838ExecutionError: () => (/* reexport safe */ _errors_contract_errors_js__WEBPACK_IMPORTED_MODULE_4__.Eip838ExecutionError),
/* harmony export */   ExistingPluginNamespaceError: () => (/* reexport safe */ _errors_generic_errors_js__WEBPACK_IMPORTED_MODULE_6__.ExistingPluginNamespaceError),
/* harmony export */   FormatterError: () => (/* reexport safe */ _errors_generic_errors_js__WEBPACK_IMPORTED_MODULE_6__.FormatterError),
/* harmony export */   GENESIS_BLOCK_NUMBER: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.GENESIS_BLOCK_NUMBER),
/* harmony export */   HardforkMismatchError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.HardforkMismatchError),
/* harmony export */   HexProcessingError: () => (/* reexport safe */ _errors_utils_errors_js__WEBPACK_IMPORTED_MODULE_10__.HexProcessingError),
/* harmony export */   IVLengthError: () => (/* reexport safe */ _errors_account_errors_js__WEBPACK_IMPORTED_MODULE_2__.IVLengthError),
/* harmony export */   InternalError: () => (/* reexport safe */ _errors_rpc_errors_js__WEBPACK_IMPORTED_MODULE_13__.InternalError),
/* harmony export */   InvalidAddressError: () => (/* reexport safe */ _errors_utils_errors_js__WEBPACK_IMPORTED_MODULE_10__.InvalidAddressError),
/* harmony export */   InvalidBlockError: () => (/* reexport safe */ _errors_utils_errors_js__WEBPACK_IMPORTED_MODULE_10__.InvalidBlockError),
/* harmony export */   InvalidBooleanError: () => (/* reexport safe */ _errors_utils_errors_js__WEBPACK_IMPORTED_MODULE_10__.InvalidBooleanError),
/* harmony export */   InvalidBytesError: () => (/* reexport safe */ _errors_utils_errors_js__WEBPACK_IMPORTED_MODULE_10__.InvalidBytesError),
/* harmony export */   InvalidClientError: () => (/* reexport safe */ _errors_provider_errors_js__WEBPACK_IMPORTED_MODULE_7__.InvalidClientError),
/* harmony export */   InvalidConnectionError: () => (/* reexport safe */ _errors_connection_errors_js__WEBPACK_IMPORTED_MODULE_3__.InvalidConnectionError),
/* harmony export */   InvalidGasOrGasPrice: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.InvalidGasOrGasPrice),
/* harmony export */   InvalidInputError: () => (/* reexport safe */ _errors_rpc_errors_js__WEBPACK_IMPORTED_MODULE_13__.InvalidInputError),
/* harmony export */   InvalidIntegerError: () => (/* reexport safe */ _errors_utils_errors_js__WEBPACK_IMPORTED_MODULE_10__.InvalidIntegerError),
/* harmony export */   InvalidKdfError: () => (/* reexport safe */ _errors_account_errors_js__WEBPACK_IMPORTED_MODULE_2__.InvalidKdfError),
/* harmony export */   InvalidLargeValueError: () => (/* reexport safe */ _errors_utils_errors_js__WEBPACK_IMPORTED_MODULE_10__.InvalidLargeValueError),
/* harmony export */   InvalidMaxPriorityFeePerGasOrMaxFeePerGas: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.InvalidMaxPriorityFeePerGasOrMaxFeePerGas),
/* harmony export */   InvalidMethodParamsError: () => (/* reexport safe */ _errors_generic_errors_js__WEBPACK_IMPORTED_MODULE_6__.InvalidMethodParamsError),
/* harmony export */   InvalidNonceOrChainIdError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.InvalidNonceOrChainIdError),
/* harmony export */   InvalidNumberError: () => (/* reexport safe */ _errors_utils_errors_js__WEBPACK_IMPORTED_MODULE_10__.InvalidNumberError),
/* harmony export */   InvalidNumberOfParamsError: () => (/* reexport safe */ _errors_generic_errors_js__WEBPACK_IMPORTED_MODULE_6__.InvalidNumberOfParamsError),
/* harmony export */   InvalidParamsError: () => (/* reexport safe */ _errors_rpc_errors_js__WEBPACK_IMPORTED_MODULE_13__.InvalidParamsError),
/* harmony export */   InvalidPasswordError: () => (/* reexport safe */ _errors_account_errors_js__WEBPACK_IMPORTED_MODULE_2__.InvalidPasswordError),
/* harmony export */   InvalidPrivateKeyError: () => (/* reexport safe */ _errors_account_errors_js__WEBPACK_IMPORTED_MODULE_2__.InvalidPrivateKeyError),
/* harmony export */   InvalidPropertiesForTransactionTypeError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.InvalidPropertiesForTransactionTypeError),
/* harmony export */   InvalidProviderError: () => (/* reexport safe */ _errors_provider_errors_js__WEBPACK_IMPORTED_MODULE_7__.InvalidProviderError),
/* harmony export */   InvalidRequestError: () => (/* reexport safe */ _errors_rpc_errors_js__WEBPACK_IMPORTED_MODULE_13__.InvalidRequestError),
/* harmony export */   InvalidResponseError: () => (/* reexport safe */ _errors_response_errors_js__WEBPACK_IMPORTED_MODULE_11__.InvalidResponseError),
/* harmony export */   InvalidSignatureError: () => (/* reexport safe */ _errors_account_errors_js__WEBPACK_IMPORTED_MODULE_2__.InvalidSignatureError),
/* harmony export */   InvalidSizeError: () => (/* reexport safe */ _errors_utils_errors_js__WEBPACK_IMPORTED_MODULE_10__.InvalidSizeError),
/* harmony export */   InvalidStringError: () => (/* reexport safe */ _errors_utils_errors_js__WEBPACK_IMPORTED_MODULE_10__.InvalidStringError),
/* harmony export */   InvalidTransactionCall: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.InvalidTransactionCall),
/* harmony export */   InvalidTransactionObjectError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.InvalidTransactionObjectError),
/* harmony export */   InvalidTransactionWithReceiver: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.InvalidTransactionWithReceiver),
/* harmony export */   InvalidTransactionWithSender: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.InvalidTransactionWithSender),
/* harmony export */   InvalidTypeAbiInputError: () => (/* reexport safe */ _errors_utils_errors_js__WEBPACK_IMPORTED_MODULE_10__.InvalidTypeAbiInputError),
/* harmony export */   InvalidTypeError: () => (/* reexport safe */ _errors_utils_errors_js__WEBPACK_IMPORTED_MODULE_10__.InvalidTypeError),
/* harmony export */   InvalidUnitError: () => (/* reexport safe */ _errors_utils_errors_js__WEBPACK_IMPORTED_MODULE_10__.InvalidUnitError),
/* harmony export */   InvalidUnsignedIntegerError: () => (/* reexport safe */ _errors_utils_errors_js__WEBPACK_IMPORTED_MODULE_10__.InvalidUnsignedIntegerError),
/* harmony export */   InvalidValueError: () => (/* reexport safe */ _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError),
/* harmony export */   JSONRPC_ERR_CHAIN_DISCONNECTED: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.JSONRPC_ERR_CHAIN_DISCONNECTED),
/* harmony export */   JSONRPC_ERR_DISCONNECTED: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.JSONRPC_ERR_DISCONNECTED),
/* harmony export */   JSONRPC_ERR_REJECTED_REQUEST: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.JSONRPC_ERR_REJECTED_REQUEST),
/* harmony export */   JSONRPC_ERR_UNAUTHORIZED: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.JSONRPC_ERR_UNAUTHORIZED),
/* harmony export */   JSONRPC_ERR_UNSUPPORTED_METHOD: () => (/* reexport safe */ _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.JSONRPC_ERR_UNSUPPORTED_METHOD),
/* harmony export */   KeyDerivationError: () => (/* reexport safe */ _errors_account_errors_js__WEBPACK_IMPORTED_MODULE_2__.KeyDerivationError),
/* harmony export */   KeyStoreVersionError: () => (/* reexport safe */ _errors_account_errors_js__WEBPACK_IMPORTED_MODULE_2__.KeyStoreVersionError),
/* harmony export */   LimitExceededError: () => (/* reexport safe */ _errors_rpc_errors_js__WEBPACK_IMPORTED_MODULE_13__.LimitExceededError),
/* harmony export */   LocalWalletNotAvailableError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.LocalWalletNotAvailableError),
/* harmony export */   MaxAttemptsReachedOnReconnectingError: () => (/* reexport safe */ _errors_connection_errors_js__WEBPACK_IMPORTED_MODULE_3__.MaxAttemptsReachedOnReconnectingError),
/* harmony export */   MethodNotFoundError: () => (/* reexport safe */ _errors_rpc_errors_js__WEBPACK_IMPORTED_MODULE_13__.MethodNotFoundError),
/* harmony export */   MethodNotImplementedError: () => (/* reexport safe */ _errors_generic_errors_js__WEBPACK_IMPORTED_MODULE_6__.MethodNotImplementedError),
/* harmony export */   MethodNotSupported: () => (/* reexport safe */ _errors_rpc_errors_js__WEBPACK_IMPORTED_MODULE_13__.MethodNotSupported),
/* harmony export */   MissingChainOrHardforkError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.MissingChainOrHardforkError),
/* harmony export */   MissingCustomChainError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.MissingCustomChainError),
/* harmony export */   MissingCustomChainIdError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.MissingCustomChainIdError),
/* harmony export */   MissingGasError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.MissingGasError),
/* harmony export */   MissingGasInnerError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.MissingGasInnerError),
/* harmony export */   MultipleErrors: () => (/* reexport safe */ _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__.MultipleErrors),
/* harmony export */   NibbleWidthError: () => (/* reexport safe */ _errors_utils_errors_js__WEBPACK_IMPORTED_MODULE_10__.NibbleWidthError),
/* harmony export */   NoContractAddressFoundError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.NoContractAddressFoundError),
/* harmony export */   OperationAbortError: () => (/* reexport safe */ _errors_generic_errors_js__WEBPACK_IMPORTED_MODULE_6__.OperationAbortError),
/* harmony export */   OperationTimeoutError: () => (/* reexport safe */ _errors_generic_errors_js__WEBPACK_IMPORTED_MODULE_6__.OperationTimeoutError),
/* harmony export */   PBKDF2IterationsError: () => (/* reexport safe */ _errors_account_errors_js__WEBPACK_IMPORTED_MODULE_2__.PBKDF2IterationsError),
/* harmony export */   ParseError: () => (/* reexport safe */ _errors_rpc_errors_js__WEBPACK_IMPORTED_MODULE_13__.ParseError),
/* harmony export */   PendingRequestsOnReconnectingError: () => (/* reexport safe */ _errors_connection_errors_js__WEBPACK_IMPORTED_MODULE_3__.PendingRequestsOnReconnectingError),
/* harmony export */   PrivateKeyLengthError: () => (/* reexport safe */ _errors_account_errors_js__WEBPACK_IMPORTED_MODULE_2__.PrivateKeyLengthError),
/* harmony export */   ProviderError: () => (/* reexport safe */ _errors_provider_errors_js__WEBPACK_IMPORTED_MODULE_7__.ProviderError),
/* harmony export */   RequestAlreadySentError: () => (/* reexport safe */ _errors_connection_errors_js__WEBPACK_IMPORTED_MODULE_3__.RequestAlreadySentError),
/* harmony export */   ResolverMethodMissingError: () => (/* reexport safe */ _errors_contract_errors_js__WEBPACK_IMPORTED_MODULE_4__.ResolverMethodMissingError),
/* harmony export */   ResourceUnavailableError: () => (/* reexport safe */ _errors_rpc_errors_js__WEBPACK_IMPORTED_MODULE_13__.ResourceUnavailableError),
/* harmony export */   ResourcesNotFoundError: () => (/* reexport safe */ _errors_rpc_errors_js__WEBPACK_IMPORTED_MODULE_13__.ResourcesNotFoundError),
/* harmony export */   ResponseError: () => (/* reexport safe */ _errors_response_errors_js__WEBPACK_IMPORTED_MODULE_11__.ResponseError),
/* harmony export */   RevertInstructionError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.RevertInstructionError),
/* harmony export */   RpcError: () => (/* reexport safe */ _errors_rpc_errors_js__WEBPACK_IMPORTED_MODULE_13__.RpcError),
/* harmony export */   RpcErrorMessages: () => (/* reexport safe */ _errors_rpc_error_messages_js__WEBPACK_IMPORTED_MODULE_14__.RpcErrorMessages),
/* harmony export */   SchemaFormatError: () => (/* reexport safe */ _errors_schema_errors_js__WEBPACK_IMPORTED_MODULE_15__.SchemaFormatError),
/* harmony export */   SignatureError: () => (/* reexport safe */ _errors_signature_errors_js__WEBPACK_IMPORTED_MODULE_8__.SignatureError),
/* harmony export */   SubscriptionError: () => (/* reexport safe */ _errors_provider_errors_js__WEBPACK_IMPORTED_MODULE_7__.SubscriptionError),
/* harmony export */   TransactionBlockTimeoutError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.TransactionBlockTimeoutError),
/* harmony export */   TransactionDataAndInputError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.TransactionDataAndInputError),
/* harmony export */   TransactionError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.TransactionError),
/* harmony export */   TransactionGasMismatchError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.TransactionGasMismatchError),
/* harmony export */   TransactionGasMismatchInnerError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.TransactionGasMismatchInnerError),
/* harmony export */   TransactionMissingReceiptOrBlockHashError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.TransactionMissingReceiptOrBlockHashError),
/* harmony export */   TransactionNotFound: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.TransactionNotFound),
/* harmony export */   TransactionOutOfGasError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.TransactionOutOfGasError),
/* harmony export */   TransactionPollingTimeoutError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.TransactionPollingTimeoutError),
/* harmony export */   TransactionReceiptMissingBlockNumberError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.TransactionReceiptMissingBlockNumberError),
/* harmony export */   TransactionRejectedError: () => (/* reexport safe */ _errors_rpc_errors_js__WEBPACK_IMPORTED_MODULE_13__.TransactionRejectedError),
/* harmony export */   TransactionRevertInstructionError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.TransactionRevertInstructionError),
/* harmony export */   TransactionRevertWithCustomError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.TransactionRevertWithCustomError),
/* harmony export */   TransactionRevertedWithoutReasonError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.TransactionRevertedWithoutReasonError),
/* harmony export */   TransactionSendTimeoutError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.TransactionSendTimeoutError),
/* harmony export */   TransactionSigningError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.TransactionSigningError),
/* harmony export */   UnableToPopulateNonceError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.UnableToPopulateNonceError),
/* harmony export */   UndefinedRawTransactionError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.UndefinedRawTransactionError),
/* harmony export */   UnsupportedFeeMarketError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.UnsupportedFeeMarketError),
/* harmony export */   UnsupportedTransactionTypeError: () => (/* reexport safe */ _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__.UnsupportedTransactionTypeError),
/* harmony export */   VersionNotSupportedError: () => (/* reexport safe */ _errors_rpc_errors_js__WEBPACK_IMPORTED_MODULE_13__.VersionNotSupportedError),
/* harmony export */   Web3ContractError: () => (/* reexport safe */ _errors_contract_errors_js__WEBPACK_IMPORTED_MODULE_4__.Web3ContractError),
/* harmony export */   Web3WSProviderError: () => (/* reexport safe */ _errors_provider_errors_js__WEBPACK_IMPORTED_MODULE_7__.Web3WSProviderError),
/* harmony export */   genericRpcErrorMessageTemplate: () => (/* reexport safe */ _errors_rpc_error_messages_js__WEBPACK_IMPORTED_MODULE_14__.genericRpcErrorMessageTemplate),
/* harmony export */   rpcErrorsMap: () => (/* reexport safe */ _errors_rpc_errors_js__WEBPACK_IMPORTED_MODULE_13__.rpcErrorsMap)
/* harmony export */ });
/* harmony import */ var _error_codes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error_codes.js */ "./node_modules/web3-errors/lib/esm/error_codes.js");
/* harmony import */ var _web3_error_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./web3_error_base.js */ "./node_modules/web3-errors/lib/esm/web3_error_base.js");
/* harmony import */ var _errors_account_errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./errors/account_errors.js */ "./node_modules/web3-errors/lib/esm/errors/account_errors.js");
/* harmony import */ var _errors_connection_errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors/connection_errors.js */ "./node_modules/web3-errors/lib/esm/errors/connection_errors.js");
/* harmony import */ var _errors_contract_errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./errors/contract_errors.js */ "./node_modules/web3-errors/lib/esm/errors/contract_errors.js");
/* harmony import */ var _errors_ens_errors_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./errors/ens_errors.js */ "./node_modules/web3-errors/lib/esm/errors/ens_errors.js");
/* harmony import */ var _errors_generic_errors_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./errors/generic_errors.js */ "./node_modules/web3-errors/lib/esm/errors/generic_errors.js");
/* harmony import */ var _errors_provider_errors_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./errors/provider_errors.js */ "./node_modules/web3-errors/lib/esm/errors/provider_errors.js");
/* harmony import */ var _errors_signature_errors_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./errors/signature_errors.js */ "./node_modules/web3-errors/lib/esm/errors/signature_errors.js");
/* harmony import */ var _errors_transaction_errors_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./errors/transaction_errors.js */ "./node_modules/web3-errors/lib/esm/errors/transaction_errors.js");
/* harmony import */ var _errors_utils_errors_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./errors/utils_errors.js */ "./node_modules/web3-errors/lib/esm/errors/utils_errors.js");
/* harmony import */ var _errors_response_errors_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./errors/response_errors.js */ "./node_modules/web3-errors/lib/esm/errors/response_errors.js");
/* harmony import */ var _errors_core_errors_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./errors/core_errors.js */ "./node_modules/web3-errors/lib/esm/errors/core_errors.js");
/* harmony import */ var _errors_rpc_errors_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./errors/rpc_errors.js */ "./node_modules/web3-errors/lib/esm/errors/rpc_errors.js");
/* harmony import */ var _errors_rpc_error_messages_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./errors/rpc_error_messages.js */ "./node_modules/web3-errors/lib/esm/errors/rpc_error_messages.js");
/* harmony import */ var _errors_schema_errors_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./errors/schema_errors.js */ "./node_modules/web3-errors/lib/esm/errors/schema_errors.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
















//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/web3-errors/lib/esm/web3_error_base.js":
/*!*************************************************************!*\
  !*** ./node_modules/web3-errors/lib/esm/web3_error_base.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BaseWeb3Error: () => (/* binding */ BaseWeb3Error),
/* harmony export */   InvalidValueError: () => (/* binding */ InvalidValueError),
/* harmony export */   MultipleErrors: () => (/* binding */ MultipleErrors)
/* harmony export */ });
/* harmony import */ var _error_codes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error_codes.js */ "./node_modules/web3-errors/lib/esm/error_codes.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

/**
 * Base class for Web3 errors.
 */
class BaseWeb3Error extends Error {
    /**
     * @deprecated Use the `cause` property instead.
     */
    get innerError() {
        // eslint-disable-next-line no-use-before-define
        if (this.cause instanceof MultipleErrors) {
            return this.cause.errors;
        }
        return this.cause;
    }
    /**
     * @deprecated Use the `cause` property instead.
     */
    set innerError(cause) {
        if (Array.isArray(cause)) {
            // eslint-disable-next-line no-use-before-define
            this.cause = new MultipleErrors(cause);
        }
        else {
            this.cause = cause;
        }
    }
    constructor(msg, cause) {
        super(msg);
        if (Array.isArray(cause)) {
            // eslint-disable-next-line no-use-before-define
            this.cause = new MultipleErrors(cause);
        }
        else {
            this.cause = cause;
        }
        this.name = this.constructor.name;
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(new.target.constructor);
        }
        else {
            this.stack = new Error().stack;
        }
    }
    static convertToString(value, unquotValue = false) {
        // Using "null" value intentionally for validation
        // eslint-disable-next-line no-null/no-null
        if (value === null || value === undefined)
            return 'undefined';
        const result = JSON.stringify(value, (_, v) => (typeof v === 'bigint' ? v.toString() : v));
        return unquotValue && ['bigint', 'string'].includes(typeof value)
            ? result.replace(/['\\"]+/g, '')
            : result;
    }
    toJSON() {
        return {
            name: this.name,
            code: this.code,
            message: this.message,
            cause: this.cause,
            // deprecated
            innerError: this.cause,
        };
    }
}
class MultipleErrors extends BaseWeb3Error {
    constructor(errors) {
        super(`Multiple errors occurred: [${errors.map(e => e.message).join('], [')}]`);
        this.code = _error_codes_js__WEBPACK_IMPORTED_MODULE_0__.ERR_MULTIPLE_ERRORS;
        this.errors = errors;
    }
}
class InvalidValueError extends BaseWeb3Error {
    constructor(value, msg) {
        super(`Invalid value given "${BaseWeb3Error.convertToString(value, true)}". Error: ${msg}.`);
        this.name = this.constructor.name;
    }
}
//# sourceMappingURL=web3_error_base.js.map

/***/ }),

/***/ "./node_modules/web3-eth-abi/lib/esm/api/errors_api.js":
/*!*************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/api/errors_api.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   encodeErrorSignature: () => (/* binding */ encodeErrorSignature)
/* harmony export */ });
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ "./node_modules/web3-eth-abi/lib/esm/utils.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 *
 *  @module ABI
 */



/**
 * Encodes the error name to its ABI signature, which are the sha3 hash of the error name including input types.
 */
const encodeErrorSignature = (functionName) => {
    if (typeof functionName !== 'string' && !(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAbiErrorFragment)(functionName)) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.AbiError('Invalid parameter value in encodeErrorSignature');
    }
    let name;
    if (functionName && (typeof functionName === 'function' || typeof functionName === 'object')) {
        name = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.jsonInterfaceMethodToString)(functionName);
    }
    else {
        name = functionName;
    }
    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.sha3Raw)(name);
};
//# sourceMappingURL=errors_api.js.map

/***/ }),

/***/ "./node_modules/web3-eth-abi/lib/esm/api/events_api.js":
/*!*************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/api/events_api.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   encodeEventSignature: () => (/* binding */ encodeEventSignature)
/* harmony export */ });
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ "./node_modules/web3-eth-abi/lib/esm/utils.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 *
 *  @module ABI
 */



/**
 * Encodes the event name to its ABI signature, which are the sha3 hash of the event name including input types.
 * @param functionName - The event name to encode, or the {@link AbiEventFragment} object of the event. If string, it has to be in the form of `eventName(param1Type,param2Type,...)`. eg: myEvent(uint256,bytes32).
 * @returns - The ABI signature of the event.
 *
 * @example
 * ```ts
 * const event = web3.eth.abi.encodeEventSignature({
 *   name: "myEvent",
 *   type: "event",
 *   inputs: [
 *     {
 *       type: "uint256",
 *       name: "myNumber",
 *     },
 *     {
 *       type: "bytes32",
 *       name: "myBytes",
 *     },
 *   ],
 * });
 * console.log(event);
 * > 0xf2eeb729e636a8cb783be044acf6b7b1e2c5863735b60d6daae84c366ee87d97
 *
 *  const event = web3.eth.abi.encodeEventSignature({
 *   inputs: [
 *     {
 *       indexed: true,
 *       name: "from",
 *       type: "address",
 *     },
 *     {
 *       indexed: true,
 *       name: "to",
 *       type: "address",
 *     },
 *     {
 *       indexed: false,
 *       name: "value",
 *       type: "uint256",
 *     },
 *   ],
 *   name: "Transfer",
 *   type: "event",
 * });
 * console.log(event);
 * > 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
 * ```
 */
const encodeEventSignature = (functionName) => {
    if (typeof functionName !== 'string' && !(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAbiEventFragment)(functionName)) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.AbiError('Invalid parameter value in encodeEventSignature');
    }
    let name;
    if (functionName && (typeof functionName === 'function' || typeof functionName === 'object')) {
        name = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.jsonInterfaceMethodToString)(functionName);
    }
    else {
        name = functionName;
    }
    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.sha3Raw)(name);
};
//# sourceMappingURL=events_api.js.map

/***/ }),

/***/ "./node_modules/web3-eth-abi/lib/esm/api/functions_api.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/api/functions_api.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decodeFunctionCall: () => (/* binding */ decodeFunctionCall),
/* harmony export */   decodeFunctionReturn: () => (/* binding */ decodeFunctionReturn),
/* harmony export */   encodeFunctionCall: () => (/* binding */ encodeFunctionCall),
/* harmony export */   encodeFunctionSignature: () => (/* binding */ encodeFunctionSignature)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ "./node_modules/web3-eth-abi/lib/esm/utils.js");
/* harmony import */ var _parameters_api_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./parameters_api.js */ "./node_modules/web3-eth-abi/lib/esm/api/parameters_api.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 *
 *  @module ABI
 */




/**
 * Encodes the function name to its ABI representation, which are the first 4 bytes of the sha3 of the function name including  types.
 * The JSON interface spec documentation https://docs.soliditylang.org/en/latest/abi-spec.html#json
 * @param functionName - The function name to encode or the `JSON interface` object of the function.
 * If the passed parameter is a string, it has to be in the form of `functionName(param1Type,param2Type,...)`. eg: myFunction(uint256,uint32[],bytes10,bytes)
 * @returns - The ABI signature of the function.
 * @example
 * ```ts
 * const signature = web3.eth.abi.encodeFunctionSignature({
 *   name: "myMethod",
 *   type: "function",
 *   inputs: [
 *     {
 *       type: "uint256",
 *       name: "myNumber",
 *     },
 *     {
 *       type: "string",
 *       name: "myString",
 *     },
 *   ],
 * });
 * console.log(signature);
 * > 0x24ee0097
 *
 * const signature = web3.eth.abi.encodeFunctionSignature('myMethod(uint256,string)')
 * console.log(signature);
 * > 0x24ee0097
 *
 * const signature = web3.eth.abi.encodeFunctionSignature('safeTransferFrom(address,address,uint256,bytes)');
 * console.log(signature);
 * > 0xb88d4fde
 * ```
 */
const encodeFunctionSignature = (functionName) => {
    if (typeof functionName !== 'string' && !(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAbiFunctionFragment)(functionName)) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('Invalid parameter value in encodeFunctionSignature');
    }
    let name;
    if (functionName && (typeof functionName === 'function' || typeof functionName === 'object')) {
        name = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.jsonInterfaceMethodToString)(functionName);
    }
    else {
        name = functionName;
    }
    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.sha3Raw)(name).slice(0, 10);
};
/**
 * Encodes a function call using its `JSON interface` object and given parameters.
 * The JSON interface spec documentation https://docs.soliditylang.org/en/latest/abi-spec.html#json
 * @param jsonInterface - The `JSON interface` object of the function.
 * @param params - The parameters to encode
 * @returns - The ABI encoded function call, which, means the function signature and the parameters passed.
 * @example
 * ```ts
 * const sig = web3.eth.abi.encodeFunctionCall(
 *   {
 *     name: "myMethod",
 *     type: "function",
 *     inputs: [
 *       {
 *         type: "uint256",
 *         name: "myNumber",
 *       },
 *       {
 *         type: "string",
 *         name: "myString",
 *       },
 *     ],
 *   },
 *   ["2345675643", "Hello!%"]
 * );
 * console.log(sig);
 * > 0x24ee0097000000000000000000000000000000000000000000000000000000008bd02b7b0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000748656c6c6f212500000000000000000000000000000000000000000000000000
 *
 *
 *
 * const sig = web3.eth.abi.encodeFunctionCall(
 *   {
 *     inputs: [
 *       {
 *         name: "account",
 *         type: "address",
 *       },
 *     ],
 *     name: "balanceOf",
 *     outputs: [
 *       {
 *         name: "",
 *         type: "uint256",
 *       },
 *     ],
 *     stateMutability: "view",
 *     type: "function",
 *   },
 *   ["0x1234567890123456789012345678901234567890"]
 * );
 *
 * console.log(sig);
 * > 0x70a082310000000000000000000000001234567890123456789012345678901234567890
 * ```
 */
const encodeFunctionCall = (jsonInterface, params) => {
    var _a;
    if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAbiFunctionFragment)(jsonInterface)) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('Invalid parameter value in encodeFunctionCall');
    }
    return `${encodeFunctionSignature(jsonInterface)}${(0,_parameters_api_js__WEBPACK_IMPORTED_MODULE_3__.encodeParameters)((_a = jsonInterface.inputs) !== null && _a !== void 0 ? _a : [], params !== null && params !== void 0 ? params : []).replace('0x', '')}`;
};
/**
 * Decodes a function call data using its `JSON interface` object.
 * The JSON interface spec documentation https://docs.soliditylang.org/en/latest/abi-spec.html#json
 * @param functionsAbi - The `JSON interface` object of the function.
 * @param data - The data to decode
 * @param methodSignatureProvided - (Optional) if `false` do not remove the first 4 bytes that would rather contain the function signature.
 * @returns - The data decoded according to the passed ABI.
 * @example
 * ```ts
 * const data =
 * 	'0xa413686200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000548656c6c6f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010416e6f74686572204772656574696e6700000000000000000000000000000000';
 * const params = decodeFunctionCall(
 * 	{
 * 		inputs: [
 * 			{ internalType: 'string', name: '_greeting', type: 'string' },
 * 			{ internalType: 'string', name: '_second_greeting', type: 'string' },
 * 		],
 * 		name: 'setGreeting',
 * 		outputs: [
 * 			{ internalType: 'bool', name: '', type: 'bool' },
 * 			{ internalType: 'string', name: '', type: 'string' },
 * 		],
 * 		stateMutability: 'nonpayable',
 * 		type: 'function',
 * 	},
 * 	data,
 * );

 * console.log(params);
 * > {
 * > 	'0': 'Hello',
 * > 	'1': 'Another Greeting',
 * > 	__length__: 2,
 * > 	__method__: 'setGreeting(string,string)',
 * > 	_greeting: 'Hello',
 * > 	_second_greeting: 'Another Greeting',
 * > }
 * ```
 */
const decodeFunctionCall = (functionsAbi, data, methodSignatureProvided = true) => {
    const value = methodSignatureProvided && data && data.length >= 10 && data.startsWith('0x')
        ? data.slice(10)
        : data;
    if (!functionsAbi.inputs) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.Web3ContractError('No inputs found in the ABI');
    }
    const result = (0,_parameters_api_js__WEBPACK_IMPORTED_MODULE_3__.decodeParameters)([...functionsAbi.inputs], value);
    return Object.assign(Object.assign({}, result), { __method__: (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.jsonInterfaceMethodToString)(functionsAbi) });
};
/**
 * Decodes a function call data using its `JSON interface` object.
 * The JSON interface spec documentation https://docs.soliditylang.org/en/latest/abi-spec.html#json
 * @returns - The ABI encoded function call, which, means the function signature and the parameters passed.
 * @param functionsAbi - The `JSON interface` object of the function.
 * @param returnValues - The data (the function-returned-values) to decoded
 * @returns - The function-returned-values decoded according to the passed ABI. If there are multiple values, it returns them as an object as the example below. But if it is a single value, it returns it only for simplicity.
 * @example
 * ```ts
 * // decode a multi-value data of a method
 * const data =
 * 	'0x00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000548656c6c6f000000000000000000000000000000000000000000000000000000';
 * const decodedResult = decodeFunctionReturn(
 * 	{
 * 		inputs: [
 * 			{ internalType: 'string', name: '_greeting', type: 'string' }
 * 		],
 * 		name: 'setGreeting',
 * 		outputs: [
 * 			{ internalType: 'string', name: '', type: 'string' },
 * 			{ internalType: 'bool', name: '', type: 'bool' },
 * 		],
 * 		stateMutability: 'nonpayable',
 * 		type: 'function',
 * 	},
 * 	data,
 * );

 * console.log(decodedResult);
 * > { '0': 'Hello', '1': true, __length__: 2 }
 *
 *
 * // decode a single-value data of a method
 * const data =
 * 	'0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000548656c6c6f000000000000000000000000000000000000000000000000000000';
 * const decodedResult = decodeFunctionReturn(
 * 	{
 * 		inputs: [
 * 			{ internalType: 'string', name: '_greeting', type: 'string' }
 * 		],
 * 		name: 'setGreeting',
 * 		outputs: [{ internalType: 'string', name: '', type: 'string' }],
 * 		stateMutability: 'nonpayable',
 * 		type: 'function',
 * 	},
 * 	data,
 * );

 * console.log(decodedResult);
 * > 'Hello'
 * ```
 */
const decodeFunctionReturn = (functionsAbi, returnValues) => {
    // If it is a constructor there is nothing to decode!
    if (functionsAbi.type === 'constructor') {
        return returnValues;
    }
    if (!returnValues) {
        // Using "null" value intentionally to match legacy behavior
        // eslint-disable-next-line no-null/no-null
        return null;
    }
    const value = returnValues.length >= 2 ? returnValues.slice(2) : returnValues;
    if (!functionsAbi.outputs) {
        // eslint-disable-next-line no-null/no-null
        return null;
    }
    const result = (0,_parameters_api_js__WEBPACK_IMPORTED_MODULE_3__.decodeParameters)([...functionsAbi.outputs], value);
    if (result.__length__ === 1) {
        return result[0];
    }
    return result;
};
//# sourceMappingURL=functions_api.js.map

/***/ }),

/***/ "./node_modules/web3-eth-abi/lib/esm/api/logs_api.js":
/*!***********************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/api/logs_api.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decodeLog: () => (/* binding */ decodeLog)
/* harmony export */ });
/* harmony import */ var _parameters_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parameters_api.js */ "./node_modules/web3-eth-abi/lib/esm/api/parameters_api.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

const STATIC_TYPES = ['bool', 'string', 'int', 'uint', 'address', 'fixed', 'ufixed'];
const _decodeParameter = (inputType, clonedTopic) => inputType === 'string' ? clonedTopic : (0,_parameters_api_js__WEBPACK_IMPORTED_MODULE_0__.decodeParameter)(inputType, clonedTopic);
/**
 * Decodes ABI-encoded log data and indexed topic data.
 * @param inputs - A {@link AbiParameter} input array. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.
 * @param data - The ABI byte code in the `data` field of a log.
 * @param topics - An array with the index parameter topics of the log, without the topic[0] if its a non-anonymous event, otherwise with topic[0]
 * @returns - The result object containing the decoded parameters.
 *
 * @example
 * ```ts
 * let res = web3.eth.abi.decodeLog(
 *    [
 *      {
 *        type: "string",
 *        name: "myString",
 *      },
 *      {
 *        type: "uint256",
 *        name: "myNumber",
 *        indexed: true,
 *      },
 *      {
 *        type: "uint8",
 *        name: "mySmallNumber",
 *        indexed: true,
 *      },
 *    ],
 *    "0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000748656c6c6f252100000000000000000000000000000000000000000000000000",
 *    [
 *      "0x000000000000000000000000000000000000000000000000000000000000f310",
 *      "0x0000000000000000000000000000000000000000000000000000000000000010",
 *    ]
 *  );
 * > {
 *  '0': 'Hello%!',
 *  '1': 62224n,
 *  '2': 16n,
 *  __length__: 3,
 *  myString: 'Hello%!',
 *  myNumber: 62224n,
 *  mySmallNumber: 16n
 * }
 * ```
 */
const decodeLog = (inputs, data, topics) => {
    const clonedTopics = Array.isArray(topics) ? topics : [topics];
    const indexedInputs = {};
    const nonIndexedInputs = {};
    for (const [i, input] of inputs.entries()) {
        if (input.indexed) {
            indexedInputs[i] = input;
        }
        else {
            nonIndexedInputs[i] = input;
        }
    }
    const decodedNonIndexedInputs = data
        ? (0,_parameters_api_js__WEBPACK_IMPORTED_MODULE_0__.decodeParametersWith)(Object.values(nonIndexedInputs), data, true)
        : { __length__: 0 };
    // If topics are more than indexed inputs, that means first topic is the event signature
    const offset = clonedTopics.length - Object.keys(indexedInputs).length;
    const decodedIndexedInputs = Object.values(indexedInputs).map((input, index) => STATIC_TYPES.some(s => input.type.startsWith(s))
        ? _decodeParameter(input.type, clonedTopics[index + offset])
        : clonedTopics[index + offset]);
    const returnValues = { __length__: 0 };
    let indexedCounter = 0;
    let nonIndexedCounter = 0;
    for (const [i, res] of inputs.entries()) {
        returnValues[i] = res.type === 'string' ? '' : undefined;
        if (indexedInputs[i]) {
            returnValues[i] = decodedIndexedInputs[indexedCounter];
            indexedCounter += 1;
        }
        if (nonIndexedInputs[i]) {
            returnValues[i] = decodedNonIndexedInputs[String(nonIndexedCounter)];
            nonIndexedCounter += 1;
        }
        if (res.name) {
            returnValues[res.name] = returnValues[i];
        }
        returnValues.__length__ += 1;
    }
    return returnValues;
};
//# sourceMappingURL=logs_api.js.map

/***/ }),

/***/ "./node_modules/web3-eth-abi/lib/esm/api/parameters_api.js":
/*!*****************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/api/parameters_api.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decodeParameter: () => (/* binding */ decodeParameter),
/* harmony export */   decodeParameters: () => (/* binding */ decodeParameters),
/* harmony export */   decodeParametersWith: () => (/* binding */ decodeParametersWith),
/* harmony export */   encodeParameter: () => (/* binding */ encodeParameter),
/* harmony export */   encodeParameters: () => (/* reexport safe */ _coders_encode_js__WEBPACK_IMPORTED_MODULE_2__.encodeParameters),
/* harmony export */   inferTypesAndEncodeParameters: () => (/* reexport safe */ _coders_encode_js__WEBPACK_IMPORTED_MODULE_2__.inferTypesAndEncodeParameters)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var _coders_decode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../coders/decode.js */ "./node_modules/web3-eth-abi/lib/esm/coders/decode.js");
/* harmony import */ var _coders_encode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../coders/encode.js */ "./node_modules/web3-eth-abi/lib/esm/coders/encode.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 *
 *  @module ABI
 */




/**
 * Encodes a parameter based on its type to its ABI representation.
 * @param abi -  The type of the parameter. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.
 * @param param - The actual parameter to encode.
 * @returns -  The ABI encoded parameter
 * @example
 * ```ts
 *  const res = web3.eth.abi.encodeParameter("uint256", "2345675643");
 *  console.log(res);
 *  0x000000000000000000000000000000000000000000000000000000008bd02b7b
 *
 *  const res = web3.eth.abi.encodeParameter("uint", "2345675643");
 *
 *  console.log(res);
 *  >0x000000000000000000000000000000000000000000000000000000008bd02b7b
 *
 *    const res = web3.eth.abi.encodeParameter("bytes32", "0xdf3234");
 *
 *  console.log(res);
 *  >0xdf32340000000000000000000000000000000000000000000000000000000000
 *
 *   const res = web3.eth.abi.encodeParameter("bytes", "0xdf3234");
 *
 *  console.log(res);
 *  > 0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003df32340000000000000000000000000000000000000000000000000000000000
 *
 *   const res = web3.eth.abi.encodeParameter("bytes32[]", ["0xdf3234", "0xfdfd"]);
 *
 *  console.log(res);
 *  > 0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002df32340000000000000000000000000000000000000000000000000000000000fdfd000000000000000000000000000000000000000000000000000000000000
 *
 *  const res = web3.eth.abi.encodeParameter(
 *    {
 *      ParentStruct: {
 *        propertyOne: "uint256",
 *        propertyTwo: "uint256",
 *        childStruct: {
 *          propertyOne: "uint256",
 *          propertyTwo: "uint256",
 *        },
 *      },
 *    },
 *    {
 *      propertyOne: 42,
 *      propertyTwo: 56,
 *      childStruct: {
 *        propertyOne: 45,
 *        propertyTwo: 78,
 *      },
 *    }
 *  );
 *
 *  console.log(res);
 *  > 0x000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000002d000000000000000000000000000000000000000000000000000000000000004e
 * ```
 */
const encodeParameter = (abi, param) => (0,_coders_encode_js__WEBPACK_IMPORTED_MODULE_2__.encodeParameters)([abi], [param]);
/**
 * Should be used to decode list of params
 */
const decodeParametersWith = (abis, bytes, loose) => {
    try {
        if (abis.length > 0 && (!bytes || bytes === '0x' || bytes === '0X')) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError("Returned values aren't valid, did it run Out of Gas? " +
                'You might also see this error if you are not using the ' +
                'correct ABI for the contract you are retrieving data from, ' +
                'requesting data from a block number that does not exist, ' +
                'or querying a node which is not fully synced.');
        }
        return (0,_coders_decode_js__WEBPACK_IMPORTED_MODULE_1__.decodeParameters)(abis, `0x${bytes.replace(/0x/i, '')}`, loose);
    }
    catch (err) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(`Parameter decoding error: ${err.message}`, {
            internalErr: err,
        });
    }
};
/**
 * Should be used to decode list of params
 */
/**
 * Decodes ABI encoded parameters to its JavaScript types.
 * @param abi -  An array of {@link AbiInput}. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.
 * @param bytes - The ABI byte code to decode
 * @returns - The result object containing the decoded parameters.
 * @example
 * ```ts
 * let res = web3.eth.abi.decodeParameters(
 *    ["string", "uint256"],
 *    "0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000ea000000000000000000000000000000000000000000000000000000000000000848656c6c6f212521000000000000000000000000000000000000000000000000"
 *  );
 *  console.log(res);
 *  > { '0': 'Hello!%!', '1': 234n, __length__: 2 }
 *
 * let res = web3.eth.abi.decodeParameters(
 *    [
 *      {
 *        type: "string",
 *        name: "myString",
 *      },
 *      {
 *        type: "uint256",
 *        name: "myNumber",
 *      },
 *    ],
 *    "0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000ea000000000000000000000000000000000000000000000000000000000000000848656c6c6f212521000000000000000000000000000000000000000000000000"
 *  );
 * console.log(res);
 *  > {
 *  '0': 'Hello!%!',
 *  '1': 234n,
 *  __length__: 2,
 *  myString: 'Hello!%!',
 *  myNumber: 234n
 * }
 *
 * const res = web3.eth.abi.decodeParameters(
 *    [
 *      "uint8[]",
 *      {
 *        ParentStruct: {
 *          propertyOne: "uint256",
 *          propertyTwo: "uint256",
 *          childStruct: {
 *            propertyOne: "uint256",
 *            propertyTwo: "uint256",
 *          },
 *        },
 *      },
 *    ],
 *    "0x00000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000002d000000000000000000000000000000000000000000000000000000000000004e0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000018"
 *  );
 *  console.log(res);
 *  >
 *  '0': [ 42n, 24n ],
 *  '1': {
 *    '0': 42n,
 *    '1': 56n,
 *    '2': {
 *      '0': 45n,
 *      '1': 78n,
 *      __length__: 2,
 *      propertyOne: 45n,
 *      propertyTwo: 78n
 *    },
 *    __length__: 3,
 *    propertyOne: 42n,
 *    propertyTwo: 56n,
 *    childStruct: {
 *      '0': 45n,
 *      '1': 78n,
 *      __length__: 2,
 *      propertyOne: 45n,
 *      propertyTwo: 78n
 *    }
 *  },
 *  __length__: 2,
 *  ParentStruct: {
 *    '0': 42n,
 *    '1': 56n,
 *    '2': {
 *      '0': 45n,
 *      '1': 78n,
 *      __length__: 2,
 *      propertyOne: 45n,
 *      propertyTwo: 78n
 *    },
 *    __length__: 3,
 *    propertyOne: 42n,
 *    propertyTwo: 56n,
 *    childStruct: {
 *      '0': 45n,
 *      '1': 78n,
 *      __length__: 2,
 *      propertyOne: 45n,
 *      propertyTwo: 78n
 *    }
 *  }
 *}
 * ```
 */
const decodeParameters = (abi, bytes) => decodeParametersWith(abi, bytes, false);
/**
 * Should be used to decode bytes to plain param
 */
/**
 * Decodes an ABI encoded parameter to its JavaScript type.
 * @param abi -  The type of the parameter. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.
 * @param bytes - The ABI byte code to decode
 * @returns - The decoded parameter
 * @example
 * ```ts
 *   const res = web3.eth.abi.decodeParameter(
 *    "uint256",
 *    "0x0000000000000000000000000000000000000000000000000000000000000010"
 *  );
 *  console.log(res);
 * > 16n
 *
 *  const res = web3.eth.abi.decodeParameter(
 *    "string",
 *    "0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000848656c6c6f212521000000000000000000000000000000000000000000000000"
 *  );
 *
 *  console.log(res);
 *  > Hello!%!
 *
 *  const res = web3.eth.abi.decodeParameter(
 *    {
 *      ParentStruct: {
 *        propertyOne: "uint256",
 *        propertyTwo: "uint256",
 *        childStruct: {
 *          propertyOne: "uint256",
 *          propertyTwo: "uint256",
 *        },
 *      },
 *    },
 *    "0x000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000002d000000000000000000000000000000000000000000000000000000000000004e"
 *  );
 *
 *  console.log(res);
 *   {
 *  '0': 42n,
 *  '1': 56n,
 *  '2': {
 *    '0': 45n,
 *    '1': 78n,
 *    __length__: 2,
 *    propertyOne: 45n,
 *    propertyTwo: 78n
 *  },
 *  __length__: 3,
 *  propertyOne: 42n,
 *  propertyTwo: 56n,
 *  childStruct: {
 *    '0': 45n,
 *    '1': 78n,
 *    __length__: 2,
 *    propertyOne: 45n,
 *    propertyTwo: 78n
 *  }
 *}
 * ```
 */
const decodeParameter = (abi, bytes) => decodeParameters([abi], bytes)['0'];
//# sourceMappingURL=parameters_api.js.map

/***/ }),

/***/ "./node_modules/web3-eth-abi/lib/esm/coders/base/address.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/address.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decodeAddress: () => (/* binding */ decodeAddress),
/* harmony export */   encodeAddress: () => (/* binding */ encodeAddress)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils.js */ "./node_modules/web3-eth-abi/lib/esm/coders/utils.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/




const ADDRESS_BYTES_COUNT = 20;
const ADDRESS_OFFSET = _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE - ADDRESS_BYTES_COUNT;
function encodeAddress(param, input) {
    if (typeof input !== 'string') {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('address type expects string as input type', {
            value: input,
            name: param.name,
            type: param.type,
        });
    }
    let address = input.toLowerCase();
    if (!address.startsWith('0x')) {
        address = `0x${address}`;
    }
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isAddress)(address)) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('provided input is not valid address', {
            value: input,
            name: param.name,
            type: param.type,
        });
    }
    // for better performance, we could convert hex to destination bytes directly (encoded var)
    const addressBytes = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.hexToUint8Array(address);
    // expand address to WORD_SIZE
    const encoded = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.alloc)(_utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE);
    encoded.set(addressBytes, ADDRESS_OFFSET);
    return {
        dynamic: false,
        encoded,
    };
}
function decodeAddress(_param, bytes) {
    const addressBytes = bytes.subarray(ADDRESS_OFFSET, _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE);
    if (addressBytes.length !== ADDRESS_BYTES_COUNT) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('Invalid decoding input, not enough bytes to decode address', { bytes });
    }
    const result = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.uint8ArrayToHexString(addressBytes);
    // should we check is decoded value is valid address?
    // if(!isAddress(result)) {
    //     throw new AbiError("encoded data is not valid address", {
    //         address: result,
    //     });
    // }
    return {
        result: (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.toChecksumAddress)(result),
        encoded: bytes.subarray(_utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE),
        consumed: _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE,
    };
}
//# sourceMappingURL=address.js.map

/***/ }),

/***/ "./node_modules/web3-eth-abi/lib/esm/coders/base/array.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/array.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decodeArray: () => (/* binding */ decodeArray),
/* harmony export */   encodeArray: () => (/* binding */ encodeArray)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.js */ "./node_modules/web3-eth-abi/lib/esm/coders/base/index.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils.js */ "./node_modules/web3-eth-abi/lib/esm/coders/utils.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./number.js */ "./node_modules/web3-eth-abi/lib/esm/coders/base/number.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-abi/lib/esm/coders/base/utils.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/


// eslint-disable-next-line import/no-cycle




function encodeArray(param, values) {
    if (!Array.isArray(values)) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('Expected value to be array', { abi: param, values });
    }
    const { size, param: arrayItemParam } = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.extractArrayType)(param);
    const encodedParams = values.map(v => (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.encodeParamFromAbiParameter)(arrayItemParam, v));
    const dynamic = size === -1;
    const dynamicItems = encodedParams.length > 0 && encodedParams[0].dynamic;
    if (!dynamic && values.length !== size) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError("Given arguments count doesn't match array length", {
            arrayLength: size,
            argumentsLength: values.length,
        });
    }
    if (dynamic || dynamicItems) {
        const encodingResult = (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.encodeDynamicParams)(encodedParams);
        if (dynamic) {
            const encodedLength = (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.encodeNumber)({ type: 'uint256', name: '' }, encodedParams.length).encoded;
            return {
                dynamic: true,
                encoded: encodedParams.length > 0
                    ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.uint8ArrayConcat)(encodedLength, encodingResult)
                    : encodedLength,
            };
        }
        return {
            dynamic: true,
            encoded: encodingResult,
        };
    }
    return {
        dynamic: false,
        encoded: (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.uint8ArrayConcat)(...encodedParams.map(p => p.encoded)),
    };
}
function decodeArray(param, bytes) {
    // eslint-disable-next-line prefer-const
    let { size, param: arrayItemParam } = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.extractArrayType)(param);
    const dynamic = size === -1;
    let consumed = 0;
    const result = [];
    let remaining = bytes;
    // dynamic array, we need to decode length
    if (dynamic) {
        const lengthResult = (0,_number_js__WEBPACK_IMPORTED_MODULE_4__.decodeNumber)({ type: 'uint32', name: '' }, bytes);
        size = Number(lengthResult.result);
        consumed = lengthResult.consumed;
        remaining = lengthResult.encoded;
    }
    const hasDynamicChild = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isDynamic)(arrayItemParam);
    if (hasDynamicChild) {
        // known length but dynamic child, each child is actually head element with encoded offset
        for (let i = 0; i < size; i += 1) {
            const offsetResult = (0,_number_js__WEBPACK_IMPORTED_MODULE_4__.decodeNumber)({ type: 'uint32', name: '' }, remaining.subarray(i * _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE));
            consumed += offsetResult.consumed;
            const decodedChildResult = (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.decodeParamFromAbiParameter)(arrayItemParam, remaining.subarray(Number(offsetResult.result)));
            consumed += decodedChildResult.consumed;
            result.push(decodedChildResult.result);
        }
        return {
            result,
            encoded: remaining.subarray(consumed),
            consumed,
        };
    }
    for (let i = 0; i < size; i += 1) {
        // decode static params
        const decodedChildResult = (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.decodeParamFromAbiParameter)(arrayItemParam, bytes.subarray(consumed));
        consumed += decodedChildResult.consumed;
        result.push(decodedChildResult.result);
    }
    return {
        result,
        encoded: bytes.subarray(consumed),
        consumed,
    };
}
//# sourceMappingURL=array.js.map

/***/ }),

/***/ "./node_modules/web3-eth-abi/lib/esm/coders/base/bool.js":
/*!***************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/bool.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decodeBool: () => (/* binding */ decodeBool),
/* harmony export */   encodeBoolean: () => (/* binding */ encodeBoolean)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ "./node_modules/web3-eth-abi/lib/esm/coders/utils.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./number.js */ "./node_modules/web3-eth-abi/lib/esm/coders/base/number.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/




function encodeBoolean(param, input) {
    let value;
    try {
        value = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.toBool)(input);
    }
    catch (e) {
        if (e instanceof web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidBooleanError) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('provided input is not valid boolean value', {
                type: param.type,
                value: input,
                name: param.name,
            });
        }
    }
    return (0,_number_js__WEBPACK_IMPORTED_MODULE_3__.encodeNumber)({ type: 'uint8', name: '' }, Number(value));
}
function decodeBool(_param, bytes) {
    const numberResult = (0,_number_js__WEBPACK_IMPORTED_MODULE_3__.decodeNumber)({ type: 'uint8', name: '' }, bytes);
    if (numberResult.result > 1 || numberResult.result < 0) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('Invalid boolean value encoded', {
            boolBytes: bytes.subarray(0, _utils_js__WEBPACK_IMPORTED_MODULE_2__.WORD_SIZE),
            numberResult,
        });
    }
    return {
        result: numberResult.result === BigInt(1),
        encoded: numberResult.encoded,
        consumed: _utils_js__WEBPACK_IMPORTED_MODULE_2__.WORD_SIZE,
    };
}
//# sourceMappingURL=bool.js.map

/***/ }),

/***/ "./node_modules/web3-eth-abi/lib/esm/coders/base/bytes.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/bytes.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decodeBytes: () => (/* binding */ decodeBytes),
/* harmony export */   encodeBytes: () => (/* binding */ encodeBytes)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils.js */ "./node_modules/web3-eth-abi/lib/esm/coders/utils.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./number.js */ "./node_modules/web3-eth-abi/lib/esm/coders/base/number.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/





const MAX_STATIC_BYTES_COUNT = 32;
function encodeBytes(param, input) {
    // hack for odd length hex strings
    if (typeof input === 'string' && input.length % 2 !== 0) {
        // eslint-disable-next-line no-param-reassign
        input += '0';
    }
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isBytes)(input)) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('provided input is not valid bytes value', {
            type: param.type,
            value: input,
            name: param.name,
        });
    }
    const bytes = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToUint8Array)(input);
    const [, size] = param.type.split('bytes');
    // fixed size
    if (size) {
        if (Number(size) > MAX_STATIC_BYTES_COUNT || Number(size) < 1) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('invalid bytes type. Static byte type can have between 1 and 32 bytes', {
                type: param.type,
            });
        }
        if (Number(size) < bytes.length) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('provided input size is different than type size', {
                type: param.type,
                value: input,
                name: param.name,
            });
        }
        const encoded = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.alloc)(_utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE);
        encoded.set(bytes);
        return {
            dynamic: false,
            encoded,
        };
    }
    const partsLength = Math.ceil(bytes.length / _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE);
    // one word for length of data + WORD for each part of actual data
    const encoded = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.alloc)(_utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE + partsLength * _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE);
    encoded.set((0,_number_js__WEBPACK_IMPORTED_MODULE_4__.encodeNumber)({ type: 'uint32', name: '' }, bytes.length).encoded);
    encoded.set(bytes, _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE);
    return {
        dynamic: true,
        encoded,
    };
}
function decodeBytes(param, bytes) {
    const [, sizeString] = param.type.split('bytes');
    let size = Number(sizeString);
    let remainingBytes = bytes;
    let partsCount = 1;
    let consumed = 0;
    if (!size) {
        // dynamic bytes
        const result = (0,_number_js__WEBPACK_IMPORTED_MODULE_4__.decodeNumber)({ type: 'uint32', name: '' }, remainingBytes);
        size = Number(result.result);
        consumed += result.consumed;
        remainingBytes = result.encoded;
        partsCount = Math.ceil(size / _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE);
    }
    if (size > bytes.length) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('there is not enough data to decode', {
            type: param.type,
            encoded: bytes,
            size,
        });
    }
    return {
        result: (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(remainingBytes.subarray(0, size)),
        encoded: remainingBytes.subarray(partsCount * _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE),
        consumed: consumed + partsCount * _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE,
    };
}
//# sourceMappingURL=bytes.js.map

/***/ }),

/***/ "./node_modules/web3-eth-abi/lib/esm/coders/base/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decodeAddress: () => (/* reexport safe */ _address_js__WEBPACK_IMPORTED_MODULE_1__.decodeAddress),
/* harmony export */   decodeArray: () => (/* reexport safe */ _array_js__WEBPACK_IMPORTED_MODULE_7__.decodeArray),
/* harmony export */   decodeBool: () => (/* reexport safe */ _bool_js__WEBPACK_IMPORTED_MODULE_2__.decodeBool),
/* harmony export */   decodeBytes: () => (/* reexport safe */ _bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes),
/* harmony export */   decodeNumber: () => (/* reexport safe */ _number_js__WEBPACK_IMPORTED_MODULE_4__.decodeNumber),
/* harmony export */   decodeParamFromAbiParameter: () => (/* binding */ decodeParamFromAbiParameter),
/* harmony export */   decodeString: () => (/* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_5__.decodeString),
/* harmony export */   decodeTuple: () => (/* reexport safe */ _tuple_js__WEBPACK_IMPORTED_MODULE_6__.decodeTuple),
/* harmony export */   encodeAddress: () => (/* reexport safe */ _address_js__WEBPACK_IMPORTED_MODULE_1__.encodeAddress),
/* harmony export */   encodeArray: () => (/* reexport safe */ _array_js__WEBPACK_IMPORTED_MODULE_7__.encodeArray),
/* harmony export */   encodeBoolean: () => (/* reexport safe */ _bool_js__WEBPACK_IMPORTED_MODULE_2__.encodeBoolean),
/* harmony export */   encodeBytes: () => (/* reexport safe */ _bytes_js__WEBPACK_IMPORTED_MODULE_3__.encodeBytes),
/* harmony export */   encodeNumber: () => (/* reexport safe */ _number_js__WEBPACK_IMPORTED_MODULE_4__.encodeNumber),
/* harmony export */   encodeParamFromAbiParameter: () => (/* binding */ encodeParamFromAbiParameter),
/* harmony export */   encodeString: () => (/* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_5__.encodeString),
/* harmony export */   encodeTuple: () => (/* reexport safe */ _tuple_js__WEBPACK_IMPORTED_MODULE_6__.encodeTuple)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var _address_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./address.js */ "./node_modules/web3-eth-abi/lib/esm/coders/base/address.js");
/* harmony import */ var _bool_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bool.js */ "./node_modules/web3-eth-abi/lib/esm/coders/base/bool.js");
/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bytes.js */ "./node_modules/web3-eth-abi/lib/esm/coders/base/bytes.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./number.js */ "./node_modules/web3-eth-abi/lib/esm/coders/base/number.js");
/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./string.js */ "./node_modules/web3-eth-abi/lib/esm/coders/base/string.js");
/* harmony import */ var _tuple_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tuple.js */ "./node_modules/web3-eth-abi/lib/esm/coders/base/tuple.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./array.js */ "./node_modules/web3-eth-abi/lib/esm/coders/base/array.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/






// eslint-disable-next-line import/no-cycle

// eslint-disable-next-line import/no-cycle






// eslint-disable-next-line import/no-cycle

// eslint-disable-next-line import/no-cycle

function encodeParamFromAbiParameter(param, value) {
    if (param.type === 'string') {
        return (0,_string_js__WEBPACK_IMPORTED_MODULE_5__.encodeString)(param, value);
    }
    if (param.type === 'bool') {
        return (0,_bool_js__WEBPACK_IMPORTED_MODULE_2__.encodeBoolean)(param, value);
    }
    if (param.type === 'address') {
        return (0,_address_js__WEBPACK_IMPORTED_MODULE_1__.encodeAddress)(param, value);
    }
    if (param.type === 'tuple') {
        return (0,_tuple_js__WEBPACK_IMPORTED_MODULE_6__.encodeTuple)(param, value);
    }
    if (param.type.endsWith(']')) {
        return (0,_array_js__WEBPACK_IMPORTED_MODULE_7__.encodeArray)(param, value);
    }
    if (param.type.startsWith('bytes')) {
        return (0,_bytes_js__WEBPACK_IMPORTED_MODULE_3__.encodeBytes)(param, value);
    }
    if (param.type.startsWith('uint') || param.type.startsWith('int')) {
        return (0,_number_js__WEBPACK_IMPORTED_MODULE_4__.encodeNumber)(param, value);
    }
    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('Unsupported', {
        param,
        value,
    });
}
function decodeParamFromAbiParameter(param, bytes) {
    if (param.type === 'string') {
        return (0,_string_js__WEBPACK_IMPORTED_MODULE_5__.decodeString)(param, bytes);
    }
    if (param.type === 'bool') {
        return (0,_bool_js__WEBPACK_IMPORTED_MODULE_2__.decodeBool)(param, bytes);
    }
    if (param.type === 'address') {
        return (0,_address_js__WEBPACK_IMPORTED_MODULE_1__.decodeAddress)(param, bytes);
    }
    if (param.type === 'tuple') {
        return (0,_tuple_js__WEBPACK_IMPORTED_MODULE_6__.decodeTuple)(param, bytes);
    }
    if (param.type.endsWith(']')) {
        return (0,_array_js__WEBPACK_IMPORTED_MODULE_7__.decodeArray)(param, bytes);
    }
    if (param.type.startsWith('bytes')) {
        return (0,_bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes)(param, bytes);
    }
    if (param.type.startsWith('uint') || param.type.startsWith('int')) {
        return (0,_number_js__WEBPACK_IMPORTED_MODULE_4__.decodeNumber)(param, bytes);
    }
    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('Unsupported', {
        param,
        bytes,
    });
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/web3-eth-abi/lib/esm/coders/base/number.js":
/*!*****************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/number.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decodeNumber: () => (/* binding */ decodeNumber),
/* harmony export */   encodeNumber: () => (/* binding */ encodeNumber)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils.js */ "./node_modules/web3-eth-abi/lib/esm/coders/utils.js");
/* harmony import */ var _numbersLimits_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./numbersLimits.js */ "./node_modules/web3-eth-abi/lib/esm/coders/base/numbersLimits.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/





// eslint-disable-next-line no-bitwise
const mask = BigInt(1) << BigInt(256);
function bigIntToUint8Array(value, byteLength = _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE) {
    let hexValue;
    if (value < 0) {
        hexValue = (mask + value).toString(16);
    }
    else {
        hexValue = value.toString(16);
    }
    hexValue = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.padLeft)(hexValue, byteLength * 2);
    return web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.hexToUint8Array(hexValue);
}
function uint8ArrayToBigInt(value, max) {
    const hexValue = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.uint8ArrayToHexString(value);
    const result = BigInt(hexValue);
    if (result <= max)
        return result;
    return result - mask;
}
function encodeNumber(param, input) {
    let value;
    try {
        value = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.toBigInt)(input);
    }
    catch (e) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('provided input is not number value', {
            type: param.type,
            value: input,
            name: param.name,
        });
    }
    const limit = _numbersLimits_js__WEBPACK_IMPORTED_MODULE_4__.numberLimits.get(param.type);
    if (!limit) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('provided abi contains invalid number datatype', { type: param.type });
    }
    if (value < limit.min) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('provided input is less then minimum for given type', {
            type: param.type,
            value: input,
            name: param.name,
            minimum: limit.min.toString(),
        });
    }
    if (value > limit.max) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('provided input is greater then maximum for given type', {
            type: param.type,
            value: input,
            name: param.name,
            maximum: limit.max.toString(),
        });
    }
    return {
        dynamic: false,
        encoded: bigIntToUint8Array(value),
    };
}
function decodeNumber(param, bytes) {
    if (bytes.length < _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('Not enough bytes left to decode', { param, bytesLeft: bytes.length });
    }
    const boolBytes = bytes.subarray(0, _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE);
    const limit = _numbersLimits_js__WEBPACK_IMPORTED_MODULE_4__.numberLimits.get(param.type);
    if (!limit) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('provided abi contains invalid number datatype', { type: param.type });
    }
    const numberResult = uint8ArrayToBigInt(boolBytes, limit.max);
    if (numberResult < limit.min) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('decoded value is less then minimum for given type', {
            type: param.type,
            value: numberResult,
            name: param.name,
            minimum: limit.min.toString(),
        });
    }
    if (numberResult > limit.max) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('decoded value is greater then maximum for given type', {
            type: param.type,
            value: numberResult,
            name: param.name,
            maximum: limit.max.toString(),
        });
    }
    return {
        result: numberResult,
        encoded: bytes.subarray(_utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE),
        consumed: _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE,
    };
}
//# sourceMappingURL=number.js.map

/***/ }),

/***/ "./node_modules/web3-eth-abi/lib/esm/coders/base/numbersLimits.js":
/*!************************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/numbersLimits.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   numberLimits: () => (/* binding */ numberLimits)
/* harmony export */ });
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/*
 * this variable contains the precalculated limits for all the numbers for uint and int types
 */
const numberLimits = new Map();
let base = BigInt(256); // 2 ^ 8 = 256
for (let i = 8; i <= 256; i += 8) {
    numberLimits.set(`uint${i}`, {
        min: BigInt(0),
        max: base - BigInt(1),
    });
    numberLimits.set(`int${i}`, {
        min: -base / BigInt(2),
        max: base / BigInt(2) - BigInt(1),
    });
    base *= BigInt(256);
}
// eslint-disable-next-line @typescript-eslint/no-non-null-assertion
numberLimits.set(`int`, numberLimits.get('int256'));
// eslint-disable-next-line @typescript-eslint/no-non-null-assertion
numberLimits.set(`uint`, numberLimits.get('uint256'));
//# sourceMappingURL=numbersLimits.js.map

/***/ }),

/***/ "./node_modules/web3-eth-abi/lib/esm/coders/base/string.js":
/*!*****************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/string.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decodeString: () => (/* binding */ decodeString),
/* harmony export */   encodeString: () => (/* binding */ encodeString)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bytes.js */ "./node_modules/web3-eth-abi/lib/esm/coders/base/bytes.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/



function encodeString(_param, input) {
    if (typeof input !== 'string') {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('invalid input, should be string', { input });
    }
    const bytes = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(input);
    return (0,_bytes_js__WEBPACK_IMPORTED_MODULE_2__.encodeBytes)({ type: 'bytes', name: '' }, bytes);
}
function decodeString(_param, bytes) {
    const r = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_2__.decodeBytes)({ type: 'bytes', name: '' }, bytes);
    return {
        result: (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.hexToUtf8)(r.result),
        encoded: r.encoded,
        consumed: r.consumed,
    };
}
//# sourceMappingURL=string.js.map

/***/ }),

/***/ "./node_modules/web3-eth-abi/lib/esm/coders/base/tuple.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/tuple.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decodeTuple: () => (/* binding */ decodeTuple),
/* harmony export */   encodeTuple: () => (/* binding */ encodeTuple)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.js */ "./node_modules/web3-eth-abi/lib/esm/coders/base/index.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-abi/lib/esm/coders/base/utils.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils.js */ "./node_modules/web3-eth-abi/lib/esm/coders/utils.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./number.js */ "./node_modules/web3-eth-abi/lib/esm/coders/base/number.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/


// eslint-disable-next-line import/no-cycle




function encodeTuple(param, input) {
    var _a, _b, _c;
    let dynamic = false;
    if (!Array.isArray(input) && typeof input !== 'object') {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('param must be either Array or Object', {
            param,
            input,
        });
    }
    const narrowedInput = input;
    const encoded = [];
    for (let i = 0; i < ((_b = (_a = param.components) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0); i += 1) {
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        const paramComponent = param.components[i];
        let result;
        if (Array.isArray(narrowedInput)) {
            if (i >= narrowedInput.length) {
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('input param length missmatch', {
                    param,
                    input,
                });
            }
            result = (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.encodeParamFromAbiParameter)(paramComponent, narrowedInput[i]);
        }
        else {
            const paramInput = narrowedInput[(_c = paramComponent.name) !== null && _c !== void 0 ? _c : ''];
            // eslint-disable-next-line no-null/no-null
            if (paramInput === undefined || paramInput === null) {
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('missing input defined in abi', {
                    param,
                    input,
                    paramName: paramComponent.name,
                });
            }
            result = (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.encodeParamFromAbiParameter)(paramComponent, paramInput);
        }
        if (result.dynamic) {
            dynamic = true;
        }
        encoded.push(result);
    }
    if (dynamic) {
        return {
            dynamic: true,
            encoded: (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.encodeDynamicParams)(encoded),
        };
    }
    return {
        dynamic: false,
        encoded: (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.uint8ArrayConcat)(...encoded.map(e => e.encoded)),
    };
}
function decodeTuple(param, bytes) {
    const result = {
        __length__: 0,
    };
    // tracks how much static params consumed bytes
    let consumed = 0;
    if (!param.components) {
        return {
            result,
            encoded: bytes,
            consumed,
        };
    }
    // track how much dynamic params consumed bytes
    let dynamicConsumed = 0;
    for (const [index, childParam] of param.components.entries()) {
        let decodedResult;
        if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isDynamic)(childParam)) {
            // if dynamic, we will have offset encoded
            const offsetResult = (0,_number_js__WEBPACK_IMPORTED_MODULE_5__.decodeNumber)({ type: 'uint32', name: '' }, bytes.subarray(consumed));
            // offset counts from start of original byte sequence
            decodedResult = (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.decodeParamFromAbiParameter)(childParam, bytes.subarray(Number(offsetResult.result)));
            consumed += offsetResult.consumed;
            dynamicConsumed += decodedResult.consumed;
        }
        else {
            // static param, just decode
            decodedResult = (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.decodeParamFromAbiParameter)(childParam, bytes.subarray(consumed));
            consumed += decodedResult.consumed;
        }
        result.__length__ += 1;
        result[index] = decodedResult.result;
        if (childParam.name && childParam.name !== '') {
            result[childParam.name] = decodedResult.result;
        }
    }
    return {
        encoded: bytes.subarray(consumed + dynamicConsumed),
        result,
        consumed: consumed + dynamicConsumed,
    };
}
//# sourceMappingURL=tuple.js.map

/***/ }),

/***/ "./node_modules/web3-eth-abi/lib/esm/coders/base/utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/utils.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   encodeDynamicParams: () => (/* binding */ encodeDynamicParams)
/* harmony export */ });
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ "./node_modules/web3-eth-abi/lib/esm/coders/utils.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./number.js */ "./node_modules/web3-eth-abi/lib/esm/coders/base/number.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/



function encodeDynamicParams(encodedParams) {
    let staticSize = 0;
    let dynamicSize = 0;
    const staticParams = [];
    const dynamicParams = [];
    // figure out static size
    for (const encodedParam of encodedParams) {
        if (encodedParam.dynamic) {
            staticSize += _utils_js__WEBPACK_IMPORTED_MODULE_1__.WORD_SIZE;
        }
        else {
            staticSize += encodedParam.encoded.length;
        }
    }
    for (const encodedParam of encodedParams) {
        if (encodedParam.dynamic) {
            staticParams.push((0,_number_js__WEBPACK_IMPORTED_MODULE_2__.encodeNumber)({ type: 'uint256', name: '' }, staticSize + dynamicSize));
            dynamicParams.push(encodedParam);
            dynamicSize += encodedParam.encoded.length;
        }
        else {
            staticParams.push(encodedParam);
        }
    }
    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayConcat)(...staticParams.map(p => p.encoded), ...dynamicParams.map(p => p.encoded));
}
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "./node_modules/web3-eth-abi/lib/esm/coders/decode.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/decode.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decodeParameters: () => (/* binding */ decodeParameters)
/* harmony export */ });
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var _base_tuple_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base/tuple.js */ "./node_modules/web3-eth-abi/lib/esm/coders/base/tuple.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-abi/lib/esm/coders/utils.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/



function decodeParameters(abis, bytes, _loose) {
    const abiParams = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.toAbiParams)(abis);
    const bytesArray = web3_validator__WEBPACK_IMPORTED_MODULE_0__.utils.hexToUint8Array(bytes);
    return (0,_base_tuple_js__WEBPACK_IMPORTED_MODULE_1__.decodeTuple)({ type: 'tuple', name: '', components: abiParams }, bytesArray).result;
}
//# sourceMappingURL=decode.js.map

/***/ }),

/***/ "./node_modules/web3-eth-abi/lib/esm/coders/encode.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/encode.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   encodeParameters: () => (/* binding */ encodeParameters),
/* harmony export */   inferTypesAndEncodeParameters: () => (/* binding */ inferTypesAndEncodeParameters)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var _base_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./base/index.js */ "./node_modules/web3-eth-abi/lib/esm/coders/base/index.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-abi/lib/esm/coders/utils.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/





/**
 * @param params - The params to infer the ABI from
 * @returns The inferred ABI
 * @example
 * ```
 * inferParamsAbi([1, -1, 'hello', '0x1234', ])
 * ```
 * > [{ type: 'int256' }, { type: 'uint256' }, { type: 'string' }, { type: 'bytes' }]
 * ```
 */
function inferParamsAbi(params) {
    const abi = [];
    params.forEach(param => {
        if (Array.isArray(param)) {
            const inferredParams = inferParamsAbi(param);
            abi.push({
                type: 'tuple',
                components: inferredParams,
                name: '',
                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
            });
        }
        else {
            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
            abi.push({ type: (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.toHex)(param, true) });
        }
    });
    return abi;
}
/**
 * Encodes a parameter based on its type to its ABI representation.
 * @param abi - An array of {@link AbiInput}. See [Solidity's documentation](https://solidity.readthedocs.io/en/v0.5.3/abi-spec.html#json) for more details.
 * @param params - The actual parameters to encode.
 * @returns - The ABI encoded parameters
 * @example
 * ```ts
 * const res = web3.eth.abi.encodeParameters(
 *    ["uint256", "string"],
 *    ["2345675643", "Hello!%"]
 *  );
 *
 *  console.log(res);
 *  > 0x000000000000000000000000000000000000000000000000000000008bd02b7b0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000748656c6c6f212500000000000000000000000000000000000000000000000000
 * ```
 */
function encodeParameters(abi, params) {
    if ((abi === null || abi === void 0 ? void 0 : abi.length) !== params.length) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('Invalid number of values received for given ABI', {
            expected: abi === null || abi === void 0 ? void 0 : abi.length,
            received: params.length,
        });
    }
    const abiParams = (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.toAbiParams)(abi);
    return web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.uint8ArrayToHexString((0,_base_index_js__WEBPACK_IMPORTED_MODULE_3__.encodeTuple)({ type: 'tuple', name: '', components: abiParams }, params).encoded);
}
/**
 * Infer a smart contract method parameter type and then encode this parameter.
 * @param params - The parameters to encode.
 * @returns - The ABI encoded parameters
 *
 * @remarks
 * This method is useful when you don't know the type of the parameters you want to encode. It will infer the type of the parameters and then encode them.
 * However, it is not recommended to use this method when you know the type of the parameters you want to encode. In this case, use the {@link encodeParameters} method instead.
 * The type inference is not perfect and can lead to unexpected results. Especially when you want to encode an array, uint that is not uint256 or bytes....
 * @example
 * ```ts
 * const res = web3.eth.abi.encodeParameters(
 *    ["2345675643", "Hello!%"]
 *  );
 *
 *  console.log(res);
 *  > 0x000000000000000000000000000000000000000000000000000000008bd02b7b0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000748656c6c6f212500000000000000000000000000000000000000000000000000
 * ```
 */
function inferTypesAndEncodeParameters(params) {
    try {
        const abiParams = inferParamsAbi(params);
        return web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.uint8ArrayToHexString((0,_base_index_js__WEBPACK_IMPORTED_MODULE_3__.encodeTuple)({ type: 'tuple', name: '', components: abiParams }, params).encoded);
    }
    catch (e) {
        // throws If the inferred params type caused an error
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError('Could not infer types from given params', {
            params,
        });
    }
}
//# sourceMappingURL=encode.js.map

/***/ }),

/***/ "./node_modules/web3-eth-abi/lib/esm/coders/utils.js":
/*!***********************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/utils.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WORD_SIZE: () => (/* binding */ WORD_SIZE),
/* harmony export */   alloc: () => (/* binding */ alloc),
/* harmony export */   allocUnsafe: () => (/* binding */ allocUnsafe),
/* harmony export */   convertExternalAbiParameter: () => (/* binding */ convertExternalAbiParameter),
/* harmony export */   extractArrayType: () => (/* binding */ extractArrayType),
/* harmony export */   isAbiParameter: () => (/* binding */ isAbiParameter),
/* harmony export */   isDynamic: () => (/* binding */ isDynamic),
/* harmony export */   toAbiParams: () => (/* binding */ toAbiParams)
/* harmony export */ });
/* harmony import */ var abitype__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! abitype */ "./node_modules/abitype/dist/index.mjs");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils.js */ "./node_modules/web3-eth-abi/lib/esm/utils.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/




const WORD_SIZE = 32;
function alloc(size = 0) {
    var _a;
    if (((_a = globalThis.Buffer) === null || _a === void 0 ? void 0 : _a.alloc) !== undefined) {
        const buf = globalThis.Buffer.alloc(size);
        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
    }
    return new Uint8Array(size);
}
/**
 * Where possible returns a Uint8Array of the requested size that references
 * uninitialized memory. Only use if you are certain you will immediately
 * overwrite every value in the returned `Uint8Array`.
 */
function allocUnsafe(size = 0) {
    var _a;
    if (((_a = globalThis.Buffer) === null || _a === void 0 ? void 0 : _a.allocUnsafe) !== undefined) {
        const buf = globalThis.Buffer.allocUnsafe(size);
        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
    }
    return new Uint8Array(size);
}
function convertExternalAbiParameter(abiParam) {
    var _a, _b;
    return Object.assign(Object.assign({}, abiParam), { name: (_a = abiParam.name) !== null && _a !== void 0 ? _a : '', components: (_b = abiParam.components) === null || _b === void 0 ? void 0 : _b.map(c => convertExternalAbiParameter(c)) });
}
function isAbiParameter(param) {
    return (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isNullish)(param) &&
        typeof param === 'object' &&
        !(0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isNullish)(param.type) &&
        typeof param.type === 'string');
}
function toAbiParams(abi) {
    return abi.map(input => {
        var _a;
        if (isAbiParameter(input)) {
            return input;
        }
        if (typeof input === 'string') {
            return convertExternalAbiParameter((0,abitype__WEBPACK_IMPORTED_MODULE_0__.parseAbiParameter)(input.replace(/tuple/, '')));
        }
        if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isSimplifiedStructFormat)(input)) {
            const structName = Object.keys(input)[0];
            const structInfo = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.mapStructNameAndType)(structName);
            structInfo.name = (_a = structInfo.name) !== null && _a !== void 0 ? _a : '';
            return Object.assign(Object.assign({}, structInfo), { components: (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.mapStructToCoderFormat)(input[structName]) });
        }
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.AbiError('Invalid abi');
    });
}
function extractArrayType(param) {
    const arrayParenthesisStart = param.type.lastIndexOf('[');
    const arrayParamType = param.type.substring(0, arrayParenthesisStart);
    const sizeString = param.type.substring(arrayParenthesisStart);
    let size = -1;
    if (sizeString !== '[]') {
        size = Number(sizeString.slice(1, -1));
        // eslint-disable-next-line no-restricted-globals
        if (isNaN(size)) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.AbiError('Invalid fixed array size', { size: sizeString });
        }
    }
    return {
        param: { type: arrayParamType, name: '', components: param.components },
        size,
    };
}
/**
 * Param is dynamic if it's dynamic base type or if some of his children (components, array items)
 * is of dynamic type
 * @param param
 */
function isDynamic(param) {
    var _a, _b;
    if (param.type === 'string' || param.type === 'bytes' || param.type.endsWith('[]'))
        return true;
    if (param.type === 'tuple') {
        return (_b = (_a = param.components) === null || _a === void 0 ? void 0 : _a.some(isDynamic)) !== null && _b !== void 0 ? _b : false;
    }
    if (param.type.endsWith(']')) {
        return isDynamic(extractArrayType(param).param);
    }
    return false;
}
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "./node_modules/web3-eth-abi/lib/esm/decode_contract_error_data.js":
/*!*************************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/decode_contract_error_data.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decodeContractErrorData: () => (/* binding */ decodeContractErrorData)
/* harmony export */ });
/* harmony import */ var _api_errors_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api/errors_api.js */ "./node_modules/web3-eth-abi/lib/esm/api/errors_api.js");
/* harmony import */ var _api_parameters_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./api/parameters_api.js */ "./node_modules/web3-eth-abi/lib/esm/api/parameters_api.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-abi/lib/esm/utils.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/



const decodeContractErrorData = (errorsAbi, error) => {
    if (error === null || error === void 0 ? void 0 : error.data) {
        let errorName;
        let errorSignature;
        let errorArgs;
        try {
            const errorSha = error.data.slice(0, 10);
            const errorAbi = errorsAbi.find(abi => (0,_api_errors_api_js__WEBPACK_IMPORTED_MODULE_0__.encodeErrorSignature)(abi).startsWith(errorSha));
            if (errorAbi === null || errorAbi === void 0 ? void 0 : errorAbi.inputs) {
                errorName = errorAbi.name;
                errorSignature = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.jsonInterfaceMethodToString)(errorAbi);
                // decode abi.inputs according to EIP-838
                errorArgs = (0,_api_parameters_api_js__WEBPACK_IMPORTED_MODULE_1__.decodeParameters)([...errorAbi.inputs], error.data.substring(10));
            }
            else if (error.data.startsWith('0x08c379a0')) {
                // If ABI was not provided, check for the 2 famous errors: 'Error(string)' or 'Panic(uint256)'
                errorName = 'Error';
                errorSignature = 'Error(string)';
                // decode abi.inputs according to EIP-838
                errorArgs = (0,_api_parameters_api_js__WEBPACK_IMPORTED_MODULE_1__.decodeParameters)([
                    {
                        name: 'message',
                        type: 'string',
                    },
                ], error.data.substring(10));
            }
            else if (error.data.startsWith('0x4e487b71')) {
                errorName = 'Panic';
                errorSignature = 'Panic(uint256)';
                // decode abi.inputs according to EIP-838
                errorArgs = (0,_api_parameters_api_js__WEBPACK_IMPORTED_MODULE_1__.decodeParameters)([
                    {
                        name: 'code',
                        type: 'uint256',
                    },
                ], error.data.substring(10));
            }
            else {
                console.error('No matching error abi found for error data', error.data);
            }
        }
        catch (err) {
            console.error(err);
        }
        if (errorName) {
            error.setDecodedProperties(errorName, errorSignature, errorArgs);
        }
    }
};
//# sourceMappingURL=decode_contract_error_data.js.map

/***/ }),

/***/ "./node_modules/web3-eth-abi/lib/esm/eip_712.js":
/*!******************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/eip_712.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getMessage: () => (/* binding */ getMessage)
/* harmony export */ });
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var _coders_encode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./coders/encode.js */ "./node_modules/web3-eth-abi/lib/esm/coders/encode.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/



const TYPE_REGEX = /^\w+/;
const ARRAY_REGEX = /^(.*)\[([0-9]*?)]$/;
/**
 * Get the dependencies of a struct type. If a struct has the same dependency multiple times, it's only included once
 * in the resulting array.
 */
const getDependencies = (typedData, type, dependencies = []) => {
    const match = type.match(TYPE_REGEX);
    const actualType = match[0];
    if (dependencies.includes(actualType)) {
        return dependencies;
    }
    if (!typedData.types[actualType]) {
        return dependencies;
    }
    return [
        actualType,
        ...typedData.types[actualType].reduce((previous, _type) => [
            ...previous,
            ...getDependencies(typedData, _type.type, previous).filter(dependency => !previous.includes(dependency)),
        ], []),
    ];
};
/**
 * Encode a type to a string. All dependant types are alphabetically sorted.
 *
 * @param {TypedData} typedData
 * @param {string} type
 * @param {Options} [options]
 * @return {string}
 */
const encodeType = (typedData, type) => {
    const [primary, ...dependencies] = getDependencies(typedData, type);
    // eslint-disable-next-line @typescript-eslint/require-array-sort-compare
    const types = [primary, ...dependencies.sort()];
    return types
        .map(dependency => 
    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions
    `${dependency}(${typedData.types[dependency].map(_type => `${_type.type} ${_type.name}`)})`)
        .join('');
};
/**
 * Get a type string as hash.
 */
const getTypeHash = (typedData, type) => (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.keccak256)(encodeType(typedData, type));
/**
 * Get encoded data as a hash. The data should be a key -> value object with all the required values. All dependant
 * types are automatically encoded.
 */
const getStructHash = (typedData, type, data) => (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.keccak256)(encodeData(typedData, type, data));
/**
 * Get the EIP-191 encoded message to sign, from the typedData object. If `hash` is enabled, the message will be hashed
 * with Keccak256.
 */
const getMessage = (typedData, hash) => {
    const EIP_191_PREFIX = '1901';
    const message = `0x${EIP_191_PREFIX}${getStructHash(typedData, 'EIP712Domain', typedData.domain).substring(2)}${getStructHash(typedData, typedData.primaryType, typedData.message).substring(2)}`;
    if (hash) {
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.keccak256)(message);
    }
    return message;
};
/**
 * Encodes a single value to an ABI serialisable string, number or Buffer. Returns the data as tuple, which consists of
 * an array of ABI compatible types, and an array of corresponding values.
 */
const encodeValue = (typedData, type, data) => {
    const match = type.match(ARRAY_REGEX);
    // Checks for array types
    if (match) {
        const arrayType = match[1];
        const length = Number(match[2]) || undefined;
        if (!Array.isArray(data)) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.AbiError('Cannot encode data: value is not of array type', {
                data,
            });
        }
        if (length && data.length !== length) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.AbiError(`Cannot encode data: expected length of ${length}, but got ${data.length}`, {
                data,
            });
        }
        const encodedData = data.map(item => encodeValue(typedData, arrayType, item));
        const types = encodedData.map(item => item[0]);
        const values = encodedData.map(item => item[1]);
        return ['bytes32', (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.keccak256)((0,_coders_encode_js__WEBPACK_IMPORTED_MODULE_2__.encodeParameters)(types, values))];
    }
    if (typedData.types[type]) {
        return ['bytes32', getStructHash(typedData, type, data)];
    }
    // Strings and arbitrary byte arrays are hashed to bytes32
    if (type === 'string') {
        return ['bytes32', (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.keccak256)(data)];
    }
    if (type === 'bytes') {
        return ['bytes32', (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.keccak256)(data)];
    }
    return [type, data];
};
/**
 * Encode the data to an ABI encoded Buffer. The data should be a key -> value object with all the required values. All
 * dependant types are automatically encoded.
 */
const encodeData = (typedData, type, data) => {
    const [types, values] = typedData.types[type].reduce(([_types, _values], field) => {
        if ((0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.isNullish)(data[field.name]) || (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.isNullish)(field.type)) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.AbiError(`Cannot encode data: missing data for '${field.name}'`, {
                data,
                field,
            });
        }
        const value = data[field.name];
        const [_type, encodedValue] = encodeValue(typedData, field.type, value);
        return [
            [..._types, _type],
            [..._values, encodedValue],
        ];
    }, [['bytes32'], [getTypeHash(typedData, type)]]);
    return (0,_coders_encode_js__WEBPACK_IMPORTED_MODULE_2__.encodeParameters)(types, values);
};
//# sourceMappingURL=eip_712.js.map

/***/ }),

/***/ "./node_modules/web3-eth-abi/lib/esm/index.js":
/*!****************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decodeContractErrorData: () => (/* reexport safe */ _decode_contract_error_data_js__WEBPACK_IMPORTED_MODULE_6__.decodeContractErrorData),
/* harmony export */   decodeFunctionCall: () => (/* reexport safe */ _api_functions_api_js__WEBPACK_IMPORTED_MODULE_2__.decodeFunctionCall),
/* harmony export */   decodeFunctionReturn: () => (/* reexport safe */ _api_functions_api_js__WEBPACK_IMPORTED_MODULE_2__.decodeFunctionReturn),
/* harmony export */   decodeLog: () => (/* reexport safe */ _api_logs_api_js__WEBPACK_IMPORTED_MODULE_3__.decodeLog),
/* harmony export */   decodeParameter: () => (/* reexport safe */ _api_parameters_api_js__WEBPACK_IMPORTED_MODULE_4__.decodeParameter),
/* harmony export */   decodeParameters: () => (/* reexport safe */ _api_parameters_api_js__WEBPACK_IMPORTED_MODULE_4__.decodeParameters),
/* harmony export */   decodeParametersWith: () => (/* reexport safe */ _api_parameters_api_js__WEBPACK_IMPORTED_MODULE_4__.decodeParametersWith),
/* harmony export */   encodeErrorSignature: () => (/* reexport safe */ _api_errors_api_js__WEBPACK_IMPORTED_MODULE_0__.encodeErrorSignature),
/* harmony export */   encodeEventSignature: () => (/* reexport safe */ _api_events_api_js__WEBPACK_IMPORTED_MODULE_1__.encodeEventSignature),
/* harmony export */   encodeFunctionCall: () => (/* reexport safe */ _api_functions_api_js__WEBPACK_IMPORTED_MODULE_2__.encodeFunctionCall),
/* harmony export */   encodeFunctionSignature: () => (/* reexport safe */ _api_functions_api_js__WEBPACK_IMPORTED_MODULE_2__.encodeFunctionSignature),
/* harmony export */   encodeParameter: () => (/* reexport safe */ _api_parameters_api_js__WEBPACK_IMPORTED_MODULE_4__.encodeParameter),
/* harmony export */   encodeParameters: () => (/* reexport safe */ _api_parameters_api_js__WEBPACK_IMPORTED_MODULE_4__.encodeParameters),
/* harmony export */   flattenTypes: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.flattenTypes),
/* harmony export */   formatOddHexstrings: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.formatOddHexstrings),
/* harmony export */   formatParam: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.formatParam),
/* harmony export */   getEncodedEip712Data: () => (/* reexport safe */ _eip_712_js__WEBPACK_IMPORTED_MODULE_7__.getMessage),
/* harmony export */   inferTypesAndEncodeParameters: () => (/* reexport safe */ _api_parameters_api_js__WEBPACK_IMPORTED_MODULE_4__.inferTypesAndEncodeParameters),
/* harmony export */   isAbiConstructorFragment: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.isAbiConstructorFragment),
/* harmony export */   isAbiErrorFragment: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.isAbiErrorFragment),
/* harmony export */   isAbiEventFragment: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.isAbiEventFragment),
/* harmony export */   isAbiFragment: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.isAbiFragment),
/* harmony export */   isAbiFunctionFragment: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.isAbiFunctionFragment),
/* harmony export */   isOddHexstring: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.isOddHexstring),
/* harmony export */   isSimplifiedStructFormat: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.isSimplifiedStructFormat),
/* harmony export */   jsonInterfaceMethodToString: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.jsonInterfaceMethodToString),
/* harmony export */   mapStructNameAndType: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.mapStructNameAndType),
/* harmony export */   mapStructToCoderFormat: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.mapStructToCoderFormat),
/* harmony export */   mapTypes: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.mapTypes)
/* harmony export */ });
/* harmony import */ var _api_errors_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api/errors_api.js */ "./node_modules/web3-eth-abi/lib/esm/api/errors_api.js");
/* harmony import */ var _api_events_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./api/events_api.js */ "./node_modules/web3-eth-abi/lib/esm/api/events_api.js");
/* harmony import */ var _api_functions_api_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./api/functions_api.js */ "./node_modules/web3-eth-abi/lib/esm/api/functions_api.js");
/* harmony import */ var _api_logs_api_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./api/logs_api.js */ "./node_modules/web3-eth-abi/lib/esm/api/logs_api.js");
/* harmony import */ var _api_parameters_api_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./api/parameters_api.js */ "./node_modules/web3-eth-abi/lib/esm/api/parameters_api.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-abi/lib/esm/utils.js");
/* harmony import */ var _decode_contract_error_data_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./decode_contract_error_data.js */ "./node_modules/web3-eth-abi/lib/esm/decode_contract_error_data.js");
/* harmony import */ var _eip_712_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./eip_712.js */ "./node_modules/web3-eth-abi/lib/esm/eip_712.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/








//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/web3-eth-abi/lib/esm/utils.js":
/*!****************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/utils.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   flattenTypes: () => (/* binding */ flattenTypes),
/* harmony export */   formatOddHexstrings: () => (/* binding */ formatOddHexstrings),
/* harmony export */   formatParam: () => (/* binding */ formatParam),
/* harmony export */   isAbiConstructorFragment: () => (/* binding */ isAbiConstructorFragment),
/* harmony export */   isAbiErrorFragment: () => (/* binding */ isAbiErrorFragment),
/* harmony export */   isAbiEventFragment: () => (/* binding */ isAbiEventFragment),
/* harmony export */   isAbiFragment: () => (/* binding */ isAbiFragment),
/* harmony export */   isAbiFunctionFragment: () => (/* binding */ isAbiFunctionFragment),
/* harmony export */   isOddHexstring: () => (/* binding */ isOddHexstring),
/* harmony export */   isSimplifiedStructFormat: () => (/* binding */ isSimplifiedStructFormat),
/* harmony export */   jsonInterfaceMethodToString: () => (/* binding */ jsonInterfaceMethodToString),
/* harmony export */   mapStructNameAndType: () => (/* binding */ mapStructNameAndType),
/* harmony export */   mapStructToCoderFormat: () => (/* binding */ mapStructToCoderFormat),
/* harmony export */   mapTypes: () => (/* binding */ mapTypes)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/


const isAbiFragment = (item) => !(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item) &&
    typeof item === 'object' &&
    !(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item.type) &&
    ['function', 'event', 'constructor', 'error'].includes(item.type);
const isAbiErrorFragment = (item) => !(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item) &&
    typeof item === 'object' &&
    !(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item.type) &&
    item.type === 'error';
const isAbiEventFragment = (item) => !(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item) &&
    typeof item === 'object' &&
    !(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item.type) &&
    item.type === 'event';
const isAbiFunctionFragment = (item) => !(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item) &&
    typeof item === 'object' &&
    !(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item.type) &&
    item.type === 'function';
const isAbiConstructorFragment = (item) => !(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item) &&
    typeof item === 'object' &&
    !(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item.type) &&
    item.type === 'constructor';
/**
 * Check if type is simplified struct format
 */
const isSimplifiedStructFormat = (type) => typeof type === 'object' &&
    typeof type.components === 'undefined' &&
    typeof type.name === 'undefined';
/**
 * Maps the correct tuple type and name when the simplified format in encode/decodeParameter is used
 */
const mapStructNameAndType = (structName) => structName.includes('[]')
    ? { type: 'tuple[]', name: structName.slice(0, -2) }
    : { type: 'tuple', name: structName };
/**
 * Maps the simplified format in to the expected format of the ABICoder
 */
const mapStructToCoderFormat = (struct) => {
    const components = [];
    for (const key of Object.keys(struct)) {
        const item = struct[key];
        if (typeof item === 'object') {
            components.push(Object.assign(Object.assign({}, mapStructNameAndType(key)), { components: mapStructToCoderFormat(item) }));
        }
        else {
            components.push({
                name: key,
                type: struct[key],
            });
        }
    }
    return components;
};
/**
 * Map types if simplified format is used
 */
const mapTypes = (types) => {
    const mappedTypes = [];
    for (const type of types) {
        let modifiedType = type;
        // Clone object
        if (typeof type === 'object') {
            modifiedType = Object.assign({}, type);
        }
        // Remap `function` type params to bytes24 since Ethers does not
        // recognize former type. Solidity docs say `Function` is a bytes24
        // encoding the contract address followed by the function selector hash.
        if (typeof type === 'object' && type.type === 'function') {
            modifiedType = Object.assign(Object.assign({}, type), { type: 'bytes24' });
        }
        if (isSimplifiedStructFormat(modifiedType)) {
            const structName = Object.keys(modifiedType)[0];
            mappedTypes.push(Object.assign(Object.assign({}, mapStructNameAndType(structName)), { components: mapStructToCoderFormat(modifiedType[structName]) }));
        }
        else {
            mappedTypes.push(modifiedType);
        }
    }
    return mappedTypes;
};
/**
 * returns true if input is a hexstring and is odd-lengthed
 */
const isOddHexstring = (param) => typeof param === 'string' && /^(-)?0x[0-9a-f]*$/i.test(param) && param.length % 2 === 1;
/**
 * format odd-length bytes to even-length
 */
const formatOddHexstrings = (param) => isOddHexstring(param) ? `0x0${param.substring(2)}` : param;
const paramTypeBytes = /^bytes([0-9]*)$/;
const paramTypeBytesArray = /^bytes([0-9]*)\[\]$/;
const paramTypeNumber = /^(u?int)([0-9]*)$/;
const paramTypeNumberArray = /^(u?int)([0-9]*)\[\]$/;
/**
 * Handle some formatting of params for backwards compatibility with Ethers V4
 */
const formatParam = (type, _param) => {
    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
    // clone if _param is an object
    const param = typeof _param === 'object' && !Array.isArray(_param) ? Object.assign({}, _param) : _param;
    // Format BN to string
    if (param instanceof BigInt || typeof param === 'bigint') {
        return param.toString(10);
    }
    if (paramTypeBytesArray.exec(type) || paramTypeNumberArray.exec(type)) {
        // eslint-disable-next-line @typescript-eslint/no-unsafe-return
        const paramClone = [...param];
        return paramClone.map(p => formatParam(type.replace('[]', ''), p));
    }
    // Format correct width for u?int[0-9]*
    let match = paramTypeNumber.exec(type);
    if (match) {
        const size = parseInt(match[2] ? match[2] : '256', 10);
        if (size / 8 < param.length) {
            // pad to correct bit width
            return (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.leftPad)(param, size);
        }
    }
    // Format correct length for bytes[0-9]+
    match = paramTypeBytes.exec(type);
    if (match) {
        const hexParam = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isUint8Array)(param) ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.toHex)(param) : param;
        // format to correct length
        const size = parseInt(match[1], 10);
        if (size) {
            let maxSize = size * 2;
            if (param.startsWith('0x')) {
                maxSize += 2;
            }
            // pad to correct length
            const paddedParam = hexParam.length < maxSize
                ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.rightPad)(param, size * 2)
                : hexParam;
            return formatOddHexstrings(paddedParam);
        }
        return formatOddHexstrings(hexParam);
    }
    return param;
};
/**
 *  used to flatten json abi inputs/outputs into an array of type-representing-strings
 */
const flattenTypes = (includeTuple, puts) => {
    const types = [];
    puts.forEach(param => {
        if (typeof param.components === 'object') {
            if (!param.type.startsWith('tuple')) {
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(`Invalid value given "${param.type}". Error: components found but type is not tuple.`);
            }
            const arrayBracket = param.type.indexOf('[');
            const suffix = arrayBracket >= 0 ? param.type.substring(arrayBracket) : '';
            const result = flattenTypes(includeTuple, param.components);
            if (Array.isArray(result) && includeTuple) {
                types.push(`tuple(${result.join(',')})${suffix}`);
            }
            else if (!includeTuple) {
                types.push(`(${result.join(',')})${suffix}`);
            }
            else {
                types.push(`(${result.join()})`);
            }
        }
        else {
            types.push(param.type);
        }
    });
    return types;
};
/**
 * Should be used to create full function/event name from json abi
 * returns a string
 */
const jsonInterfaceMethodToString = (json) => {
    var _a, _b, _c, _d;
    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing
    if (isAbiErrorFragment(json) || isAbiEventFragment(json) || isAbiFunctionFragment(json)) {
        if ((_a = json.name) === null || _a === void 0 ? void 0 : _a.includes('(')) {
            return json.name;
        }
        return `${(_b = json.name) !== null && _b !== void 0 ? _b : ''}(${flattenTypes(false, (_c = json.inputs) !== null && _c !== void 0 ? _c : []).join(',')})`;
    }
    // Constructor fragment
    return `(${flattenTypes(false, (_d = json.inputs) !== null && _d !== void 0 ? _d : []).join(',')})`;
};
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/account.js":
/*!***********************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/account.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   create: () => (/* binding */ create),
/* harmony export */   decrypt: () => (/* binding */ decrypt),
/* harmony export */   encrypt: () => (/* binding */ encrypt),
/* harmony export */   hashMessage: () => (/* binding */ hashMessage),
/* harmony export */   parseAndValidatePrivateKey: () => (/* binding */ parseAndValidatePrivateKey),
/* harmony export */   privateKeyToAccount: () => (/* binding */ privateKeyToAccount),
/* harmony export */   privateKeyToAddress: () => (/* binding */ privateKeyToAddress),
/* harmony export */   privateKeyToPublicKey: () => (/* binding */ privateKeyToPublicKey),
/* harmony export */   recover: () => (/* binding */ recover),
/* harmony export */   recoverTransaction: () => (/* binding */ recoverTransaction),
/* harmony export */   sign: () => (/* binding */ sign),
/* harmony export */   signMessageWithPrivateKey: () => (/* binding */ signMessageWithPrivateKey),
/* harmony export */   signRaw: () => (/* binding */ signRaw),
/* harmony export */   signTransaction: () => (/* binding */ signTransaction)
/* harmony export */ });
/* harmony import */ var ethereum_cryptography_aes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/aes.js */ "./node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/esm/aes.js");
/* harmony import */ var ethereum_cryptography_pbkdf2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethereum-cryptography/pbkdf2.js */ "./node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/esm/pbkdf2.js");
/* harmony import */ var ethereum_cryptography_scrypt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ethereum-cryptography/scrypt.js */ "./node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/esm/scrypt.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var _tx_constants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tx/constants.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/constants.js");
/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./schemas.js */ "./node_modules/web3-eth-accounts/lib/esm/schemas.js");
/* harmony import */ var _tx_transactionFactory_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./tx/transactionFactory.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/transactionFactory.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
/**
 * The web3 accounts package contains functions to generate Ethereum accounts and sign transactions & data.
 *
 * For using accounts functions, first install Web3 package using `npm i web3` or `yarn add web3` based on your package manager usage.
 * After that, Accounts functions will be available as mentioned in following snippet.
 * ```ts
 * import {Web3} from 'web3';
 *
 * const web3 = new Web3();
 * const account = web3.eth.accounts.create();
 * const result = web3.eth.accounts.hashMessage("Test Message");
 *
 * ```
 *
 * For using individual package install `web3-eth-accounts` package using `npm i web3-eth-accounts` or `yarn add web3-eth-accounts` and only import required functions.
 * This is more efficient approach for building lightweight applications.
 * ```ts
 * import {create,hashMessage} from 'web3-eth-accounts';
 *
 * const account = create();
 * const result = hashMessage("Test Message");
 *
 * ```
 * @module Accounts
 *
 */









/**
 * Get the private key Uint8Array after the validation.
 * Note: This function is not exported through main web3 package, so for using it directly import from accounts package.
 * @param data - Private key
 * @param ignoreLength - Optional, ignore length check during validation
 * @returns The Uint8Array private key
 *
 * ```ts
 * parseAndValidatePrivateKey("0x08c673022000ece7964ea4db2d9369c50442b2869cbd8fc21baaca59e18f642c")
 *
 * > Uint8Array(32) [
 * 186,  26, 143, 168, 235, 179,  90,  75,
 * 101,  63,  84, 221, 152, 150,  30, 203,
 *   8, 113,  94, 226,  53, 213, 216,   5,
 * 194, 159,  17,  53, 219,  97, 121, 248
 * ]
 *
 * ```
 */
const parseAndValidatePrivateKey = (data, ignoreLength) => {
    let privateKeyUint8Array;
    // To avoid the case of 1 character less in a hex string which is prefixed with '0' by using 'bytesToUint8Array'
    if (!ignoreLength && typeof data === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isHexStrict)(data) && data.length !== 66) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.PrivateKeyLengthError();
    }
    try {
        privateKeyUint8Array = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.isUint8Array)(data) ? data : (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToUint8Array)(data);
    }
    catch (_a) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidPrivateKeyError();
    }
    if (!ignoreLength && privateKeyUint8Array.byteLength !== 32) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.PrivateKeyLengthError();
    }
    return privateKeyUint8Array;
};
/**
 *
 * Hashes the given message. The data will be `UTF-8 HEX` decoded and enveloped as follows:
 * `"\x19Ethereum Signed Message:\n" + message.length + message` and hashed using keccak256.
 *
 * @param message - A message to hash, if its HEX it will be UTF8 decoded.
 * @param skipPrefix - (default: false) If true, the message will be not prefixed with "\x19Ethereum Signed Message:\n" + message.length
 * @returns The hashed message
 *
 * ```ts
 * web3.eth.accounts.hashMessage("Hello world")
 *
 * > "0x8144a6fa26be252b86456491fbcd43c1de7e022241845ffea1c3df066f7cfede"
 *
 * web3.eth.accounts.hashMessage(web3.utils.utf8ToHex("Hello world")) // Will be hex decoded in hashMessage
 *
 * > "0x8144a6fa26be252b86456491fbcd43c1de7e022241845ffea1c3df066f7cfede"
 *
 * web3.eth.accounts.hashMessage("Hello world", true)
 *
 * > "0xed6c11b0b5b808960df26f5bfc471d04c1995b0ffd2055925ad1be28d6baadfd"
 * ```
 */
const hashMessage = (message, skipPrefix = false) => {
    const messageHex = (0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isHexStrict)(message) ? message : (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.utf8ToHex)(message);
    const messageBytes = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(messageHex);
    const preamble = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)((0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.fromUtf8)(`\x19Ethereum Signed Message:\n${messageBytes.byteLength}`));
    const ethMessage = skipPrefix ? messageBytes : (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.uint8ArrayConcat)(preamble, messageBytes);
    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.sha3Raw)(ethMessage); // using keccak in web3-utils.sha3Raw instead of SHA3 (NIST Standard) as both are different
};
/**
 * Takes a hash of a message and a private key, signs the message using the SECP256k1 elliptic curve algorithm, and returns the signature components.
 * @param hash - The hash of the message to be signed, represented as a hexadecimal string.
 * @param privateKey - The private key used to sign the message, represented as a byte array.
 * @returns - The signature Object containing the message, messageHash, signature r, s, v
 */
const signMessageWithPrivateKey = (hash, privateKey) => {
    const privateKeyUint8Array = parseAndValidatePrivateKey(privateKey);
    const signature = _tx_constants_js__WEBPACK_IMPORTED_MODULE_6__.secp256k1.sign(hash.substring(2), privateKeyUint8Array);
    const signatureBytes = signature.toCompactRawBytes();
    const r = signature.r.toString(16).padStart(64, '0');
    const s = signature.s.toString(16).padStart(64, '0');
    const v = signature.recovery + 27;
    return {
        messageHash: hash,
        v: (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.numberToHex)(v),
        r: `0x${r}`,
        s: `0x${s}`,
        signature: `${(0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(signatureBytes)}${v.toString(16)}`,
    };
};
/**
 * Signs arbitrary data with a given private key.
 * :::info
 * The value passed as the data parameter will be UTF-8 HEX decoded and wrapped as follows: "\\x19Ethereum Signed Message:\\n" + message.length + message
 * :::

 * @param data - The data to sign
 * @param privateKey - The 32 byte private key to sign with
 * @returns The signature Object containing the message, messageHash, signature r, s, v
 *
 * ```ts
 * web3.eth.accounts.sign('Some data', '0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318')
 * > {
 * message: 'Some data',
 * messageHash: '0x1da44b586eb0729ff70a73c326926f6ed5a25f5b056e7f47fbc6e58d86871655',
 * v: '0x1c',
 * r: '0xb91467e570a6466aa9e9876cbcd013baba02900b8979d43fe208a4a4f339f5fd',
 * s: '0x6007e74cd82e037b800186422fc2da167c747ef045e5d18a5f5d4300f8e1a029',
 * signature: '0xb91467e570a6466aa9e9876cbcd013baba02900b8979d43fe208a4a4f339f5fd6007e74cd82e037b800186422fc2da167c747ef045e5d18a5f5d4300f8e1a0291c'
 * }
 * ```
 */
const sign = (data, privateKey) => {
    const hash = hashMessage(data);
    const { messageHash, v, r, s, signature } = signMessageWithPrivateKey(hash, privateKey);
    return {
        message: data,
        messageHash,
        v,
        r,
        s,
        signature,
    };
};
/**
 * Signs raw data with a given private key without adding the Ethereum-specific prefix.
 *
 * @param data - The raw data to sign. If it's a hex string, it will be used as-is. Otherwise, it will be UTF-8 encoded.
 * @param privateKey - The 32 byte private key to sign with
 * @returns The signature Object containing the message, messageHash, signature r, s, v
 *
 * ```ts
 * web3.eth.accounts.signRaw('Some data', '0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318')
 * > {
 *   message: 'Some data',
 *   messageHash: '0x43a26051362b8040b289abe93334a5e3662751aa691185ae9e9a2e1e0c169350',
 *   v: '0x1b',
 *   r: '0x93da7e2ddd6b2ff1f5af0c752f052ed0d7d5bff19257db547a69cd9a879b37d4',
 *   s: '0x334485e42b33815fd2cf8a245a5393b282214060844a9681495df2257140e75c',
 *   signature: '0x93da7e2ddd6b2ff1f5af0c752f052ed0d7d5bff19257db547a69cd9a879b37d4334485e42b33815fd2cf8a245a5393b282214060844a9681495df2257140e75c1b'
 * }
 * ```
 */
const signRaw = (data, privateKey) => {
    // Hash the message without the Ethereum-specific prefix
    const hash = hashMessage(data, true);
    // Sign the hash with the private key
    const { messageHash, v, r, s, signature } = signMessageWithPrivateKey(hash, privateKey);
    return {
        message: data,
        messageHash,
        v,
        r,
        s,
        signature,
    };
};
/**
 * Signs an Ethereum transaction with a given private key.
 *
 * @param transaction - The transaction, must be a legacy, EIP2930 or EIP 1559 transaction type
 * @param privateKey -  The private key to import. This is 32 bytes of random data.
 * @returns A signTransactionResult object that contains message hash, r, s, v, transaction hash and raw transaction.
 *
 * This function is not stateful here. We need network access to get the account `nonce` and `chainId` to sign the transaction.
 * This function will rely on user to provide the full transaction to be signed. If you want to sign a partial transaction object
 * Use {@link Web3.eth.accounts.sign} instead.
 *
 * Signing a legacy transaction
 * ```ts
 * import {signTransaction, Transaction} from 'web3-eth-accounts';
 *
 * signTransaction(new Transaction({
 *	to: '0x118C2E5F57FD62C2B5b46a5ae9216F4FF4011a07',
 *	value: '0x186A0',
 *	gasLimit: '0x520812',
 *	gasPrice: '0x09184e72a000',
 *	data: '',
 *	chainId: 1,
 *	nonce: 0 }),
 * '0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318')
 *
 * > {
 * messageHash: '0x28b7b75f7ba48d588a902c1ff4d5d13cc0ca9ac0aaa39562368146923fb853bf',
 * v: '0x25',
 * r: '0x601b0017b0e20dd0eeda4b895fbc1a9e8968990953482214f880bae593e71b5',
 * s: '0x690d984493560552e3ebdcc19a65b9c301ea9ddc82d3ab8cfde60485fd5722ce',
 * rawTransaction: '0xf869808609184e72a0008352081294118c2e5f57fd62c2b5b46a5ae9216f4ff4011a07830186a08025a00601b0017b0e20dd0eeda4b895fbc1a9e8968990953482214f880bae593e71b5a0690d984493560552e3ebdcc19a65b9c301ea9ddc82d3ab8cfde60485fd5722ce',
 * transactionHash: '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'
 * ```
 *
 * Signing an eip 1559 transaction
 * ```ts
 * import {signTransaction, Transaction} from 'web3-eth-accounts';
 *
 * signTransaction(new Transaction({
 *	to: '0xF0109fC8DF283027b6285cc889F5aA624EaC1F55',
 *	maxPriorityFeePerGas: '0x3B9ACA00',
 *	maxFeePerGas: '0xB2D05E00',
 *	gasLimit: '0x6A4012',
 *	value: '0x186A0',
 *	data: '',
 *	chainId: 1,
 *	nonce: 0}),
 * "0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318")
 * > {
 *  messageHash: '0x5744f24d5f0aff6c70487c8e85adf07d8564e50b08558788f00479611d7bae5f',
 * v: '0x25',
 * r: '0x78a5a6b2876c3985f90f82073d18d57ac299b608cc76a4ba697b8bb085048347',
 * s: '0x9cfcb40cc7d505ed17ff2d3337b51b066648f10c6b7e746117de69b2eb6358d',
 * rawTransaction: '0xf8638080836a401294f0109fc8df283027b6285cc889f5aa624eac1f55830186a08025a078a5a6b2876c3985f90f82073d18d57ac299b608cc76a4ba697b8bb085048347a009cfcb40cc7d505ed17ff2d3337b51b066648f10c6b7e746117de69b2eb6358d',
 * transactionHash: '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'
 * }
 * ```
 *
 * Signing an eip 2930 transaction
 * ```ts
 * import {signTransaction, Transaction} from 'web3-eth-accounts';
 *
 * signTransaction(new Transaction ({
 *	chainId: 1,
 *	nonce: 0,
 *	gasPrice: '0x09184e72a000',
 *	gasLimit: '0x2710321',
 *	to: '0xF0109fC8DF283027b6285cc889F5aA624EaC1F55',
 *	value: '0x186A0',
 *	data: '',
 *	accessList: [
 *		{
 *			address: '0x0000000000000000000000000000000000000101',
 *			storageKeys: [
 *				'0x0000000000000000000000000000000000000000000000000000000000000000',
 *				'0x00000000000000000000000000000000000000000000000000000000000060a7',
 *			],
 *		},
 *	],
 * }),"0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318")
 *
 * > {
 * messageHash: '0xc55ea24bdb4c379550a7c9a6818ac39ca33e75bc78ddb862bd82c31cc1c7a073',
 * v: '0x26',
 * r: '0x27344e77871c8b2068bc998bf28e0b5f9920867a69c455b2ed0c1c150fec098e',
 * s: '0x519f0130a1d662841d4a28082e9c9bb0a15e0e59bb46cfc39a52f0e285dec6b9',
 * rawTransaction: '0xf86a808609184e72a000840271032194f0109fc8df283027b6285cc889f5aa624eac1f55830186a08026a027344e77871c8b2068bc998bf28e0b5f9920867a69c455b2ed0c1c150fec098ea0519f0130a1d662841d4a28082e9c9bb0a15e0e59bb46cfc39a52f0e285dec6b9',
 * transactionHash: '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'
 * }
 * ```
 */
const signTransaction = (transaction, privateKey) => __awaiter(void 0, void 0, void 0, function* () {
    const signedTx = transaction.sign((0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(privateKey));
    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isNullish)(signedTx.v) || (0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isNullish)(signedTx.r) || (0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isNullish)(signedTx.s))
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.TransactionSigningError('Signer Error');
    const validationErrors = signedTx.validate(true);
    if (validationErrors.length > 0) {
        let errorString = 'Signer Error ';
        for (const validationError of validationErrors) {
            errorString += `${errorString} ${validationError}.`;
        }
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.TransactionSigningError(errorString);
    }
    const rawTx = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(signedTx.serialize());
    const txHash = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.sha3Raw)(rawTx); // using keccak in web3-utils.sha3Raw instead of SHA3 (NIST Standard) as both are different
    return {
        messageHash: (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(signedTx.getMessageToSign(true)),
        v: `0x${signedTx.v.toString(16)}`,
        r: `0x${signedTx.r.toString(16).padStart(64, '0')}`,
        s: `0x${signedTx.s.toString(16).padStart(64, '0')}`,
        rawTransaction: rawTx,
        transactionHash: (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(txHash),
    };
});
/**
 * Recovers the Ethereum address which was used to sign the given RLP encoded transaction.
 *
 * @param rawTransaction - The hex string having RLP encoded transaction
 * @returns The Ethereum address used to sign this transaction
 * ```ts
 * web3.eth.accounts.recoverTransaction('0xf869808504e3b29200831e848094f0109fc8df283027b6285cc889f5aa624eac1f55843b9aca008025a0c9cf86333bcb065d140032ecaab5d9281bde80f21b9687b3e94161de42d51895a0727a108a0b8d101465414033c3f705a9c7b826e596766046ee1183dbc8aeaa68');
 * > "0x2c7536E3605D9C16a7a3D7b1898e529396a65c23"
 * ```
 */
const recoverTransaction = (rawTransaction) => {
    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isNullish)(rawTransaction))
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.UndefinedRawTransactionError();
    const tx = _tx_transactionFactory_js__WEBPACK_IMPORTED_MODULE_8__.TransactionFactory.fromSerializedData((0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(rawTransaction));
    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.toChecksumAddress)(tx.getSenderAddress().toString());
};
/**
 * Recovers the Ethereum address which was used to sign the given data
 *
 * @param data - Either a signed message, hash, or the {@link signatureObject}
 * @param signature - The raw RLP encoded signature
 * @param signatureOrV - signature or V
 * @param prefixedOrR - prefixed or R
 * @param s - S value in signature
 * @param prefixed - (default: false) If the last parameter is true, the given message will NOT automatically be prefixed with `"\\x19Ethereum Signed Message:\\n" + message.length + message`, and assumed to be already prefixed and hashed.
 * @returns The Ethereum address used to sign this data
 *
 * ```ts
 * const data = 'Some data';
 * const sigObj = web3.eth.accounts.sign(data, '0xbe6383dad004f233317e46ddb46ad31b16064d14447a95cc1d8c8d4bc61c3728')
 *
 * > {
 *   message: 'Some data',
 *   messageHash: '0x1da44b586eb0729ff70a73c326926f6ed5a25f5b056e7f47fbc6e58d86871655',
 *   v: '0x1b',
 *   r: '0xa8037a6116c176a25e6fc224947fde9e79a2deaa0dd8b67b366fbdfdbffc01f9',
 *   s: '0x53e41351267b20d4a89ebfe9c8f03c04de9b345add4a52f15bd026b63c8fb150',
 *   signature: '0xa8037a6116c176a25e6fc224947fde9e79a2deaa0dd8b67b366fbdfdbffc01f953e41351267b20d4a89ebfe9c8f03c04de9b345add4a52f15bd026b63c8fb1501b'
 * }
 *
 * // now recover
 * web3.eth.accounts.recover(data, sigObj.v, sigObj.r, sigObj.s)
 *
 * > 0xEB014f8c8B418Db6b45774c326A0E64C78914dC0
 * ```
 */
const recover = (data, signatureOrV, prefixedOrR, s, prefixed) => {
    if (typeof data === 'object') {
        const signatureStr = `${data.r}${data.s.slice(2)}${data.v.slice(2)}`;
        return recover(data.messageHash, signatureStr, prefixedOrR);
    }
    if (typeof signatureOrV === 'string' && typeof prefixedOrR === 'string' && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isNullish)(s)) {
        const signatureStr = `${prefixedOrR}${s.slice(2)}${signatureOrV.slice(2)}`;
        return recover(data, signatureStr, prefixed);
    }
    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isNullish)(signatureOrV))
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidSignatureError('signature string undefined');
    const V_INDEX = 130; // r = first 32 bytes, s = second 32 bytes, v = last byte of signature
    const hashedMessage = prefixedOrR ? data : hashMessage(data);
    let v = parseInt(signatureOrV.substring(V_INDEX), 16); // 0x + r + s + v
    if (v > 26) {
        v -= 27;
    }
    const ecPublicKey = _tx_constants_js__WEBPACK_IMPORTED_MODULE_6__.secp256k1.Signature.fromCompact(signatureOrV.slice(2, V_INDEX))
        .addRecoveryBit(v)
        .recoverPublicKey(hashedMessage.replace('0x', ''))
        .toRawBytes(false);
    const publicHash = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.sha3Raw)(ecPublicKey.subarray(1));
    const address = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.toChecksumAddress)(`0x${publicHash.slice(-40)}`);
    return address;
};
/**
 * Get the ethereum Address from a private key
 *
 * @param privateKey - String or Uint8Array of 32 bytes
 * @param ignoreLength - if true, will not error check length
 * @returns The Ethereum address
 * @example
 * ```ts
 * web3.eth.accounts.privateKeyToAddress("0xbe6383dad004f233317e46ddb46ad31b16064d14447a95cc1d8c8d4bc61c3728")
 *
 * > "0xEB014f8c8B418Db6b45774c326A0E64C78914dC0"
 * ```
 */
const privateKeyToAddress = (privateKey) => {
    const privateKeyUint8Array = parseAndValidatePrivateKey(privateKey);
    // Get public key from private key in compressed format
    const publicKey = _tx_constants_js__WEBPACK_IMPORTED_MODULE_6__.secp256k1.getPublicKey(privateKeyUint8Array, false);
    // Uncompressed ECDSA public key contains the prefix `0x04` which is not used in the Ethereum public key
    const publicKeyHash = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.sha3Raw)(publicKey.slice(1));
    // The hash is returned as 256 bits (32 bytes) or 64 hex characters
    // To get the address, take the last 20 bytes of the public hash
    const address = publicKeyHash.slice(-40);
    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.toChecksumAddress)(`0x${address}`);
};
/**
 * Get the public key from a private key
 *
 * @param privateKey - String or Uint8Array of 32 bytes
 * @param isCompressed - if true, will generate a 33 byte compressed public key instead of a 65 byte public key
 * @returns The public key
 * @example
 * ```ts
 * web3.eth.accounts.privateKeyToPublicKey("0x1e046a882bb38236b646c9f135cf90ad90a140810f439875f2a6dd8e50fa261f", true)
 *
 * > "0x42beb65f179720abaa3ec9a70a539629cbbc5ec65bb57e7fc78977796837e537662dd17042e6449dc843c281067a4d6d8d1a1775a13c41901670d5de7ee6503a" // uncompressed public key
 * ```
 */
const privateKeyToPublicKey = (privateKey, isCompressed) => {
    const privateKeyUint8Array = parseAndValidatePrivateKey(privateKey);
    // Get public key from private key in compressed format
    return `0x${(0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(_tx_constants_js__WEBPACK_IMPORTED_MODULE_6__.secp256k1.getPublicKey(privateKeyUint8Array, isCompressed)).slice(4)}`; // 0x and removing compression byte
};
/**
 * encrypt a private key with a password, returns a V3 JSON Keystore
 *
 * Read more: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition
 *
 * @param privateKey - The private key to encrypt, 32 bytes.
 * @param password - The password used for encryption.
 * @param options - Options to configure to encrypt the keystore either scrypt or pbkdf2
 * @returns Returns a V3 JSON Keystore
 *
 * Encrypt using scrypt options:
 * ```ts
 *
 * web3.eth.accounts.encrypt(
 *    '0x67f476289210e3bef3c1c75e4de993ff0a00663df00def84e73aa7411eac18a6',
 *    '123',
 *    {
 *        n: 8192,
 *	    iv: web3.utils.hexToBytes('0xbfb43120ae00e9de110f8325143a2709'),
 *	    salt: web3.utils.hexToBytes('0x210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd'),
 *	}).then(console.log)
 *
 * > {
 * version: 3,
 * id: 'c0cb0a94-4702-4492-b6e6-eb2ac404344a',
 * address: 'cda9a91875fc35c8ac1320e098e584495d66e47c',
 * crypto: {
 *   ciphertext: 'cb3e13e3281ff3861a3f0257fad4c9a51b0eb046f9c7821825c46b210f040b8f',
 *   cipherparams: { iv: 'bfb43120ae00e9de110f8325143a2709' },
 *   cipher: 'aes-128-ctr',
 *   kdf: 'scrypt',
 *   kdfparams: {
 *     n: 8192,
 *     r: 8,
 *     p: 1,
 *     dklen: 32,
 *     salt: '210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd'
 *   },
 *   mac: 'efbf6d3409f37c0084a79d5fdf9a6f5d97d11447517ef1ea8374f51e581b7efd'
 * }
 *}
 *```
 *
 * Encrypting using pbkdf2 options:
 * ```ts
 * web3.eth.accounts.encrypt('0x348ce564d427a3311b6536bbcff9390d69395b06ed6c486954e971d960fe8709',
 *'123',
 *{
 *	iv: 'bfb43120ae00e9de110f8325143a2709',
 *	salt: '210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd',
 *	c: 262144,
 *	kdf: 'pbkdf2',
 *}).then(console.log)
 *
 * >
 * {
 *   version: 3,
 *   id: '77381417-0973-4e4b-b590-8eb3ace0fe2d',
 *   address: 'b8ce9ab6943e0eced004cde8e3bbed6568b2fa01',
 *   crypto: {
 *     ciphertext: '76512156a34105fa6473ad040c666ae7b917d14c06543accc0d2dc28e6073b12',
 *     cipherparams: { iv: 'bfb43120ae00e9de110f8325143a2709' },
 *     cipher: 'aes-128-ctr',
 *     kdf: 'pbkdf2',
 *     kdfparams: {
 *       dklen: 32,
 *       salt: '210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd',
 *       c: 262144,
 *       prf: 'hmac-sha256'
 *     },
 *   mac: '46eb4884e82dc43b5aa415faba53cc653b7038e9d61cc32fd643cf8c396189b7'
 *   }
 * }
 *```
 */
const encrypt = (privateKey, password, options) => __awaiter(void 0, void 0, void 0, function* () {
    var _a, _b, _c, _d, _e, _f, _g;
    const privateKeyUint8Array = parseAndValidatePrivateKey(privateKey);
    // if given salt or iv is a string, convert it to a Uint8Array
    let salt;
    if (options === null || options === void 0 ? void 0 : options.salt) {
        salt = typeof options.salt === 'string' ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(options.salt) : options.salt;
    }
    else {
        salt = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.randomBytes)(32);
    }
    if (!((0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isString)(password) || (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.isUint8Array)(password))) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidPasswordError();
    }
    const uint8ArrayPassword = typeof password === 'string' ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)((0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.utf8ToHex)(password)) : password;
    let initializationVector;
    if (options === null || options === void 0 ? void 0 : options.iv) {
        initializationVector = typeof options.iv === 'string' ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(options.iv) : options.iv;
        if (initializationVector.length !== 16) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.IVLengthError();
        }
    }
    else {
        initializationVector = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.randomBytes)(16);
    }
    const kdf = (_a = options === null || options === void 0 ? void 0 : options.kdf) !== null && _a !== void 0 ? _a : 'scrypt';
    let derivedKey;
    let kdfparams;
    // derive key from key derivation function
    if (kdf === 'pbkdf2') {
        kdfparams = {
            dklen: (_b = options === null || options === void 0 ? void 0 : options.dklen) !== null && _b !== void 0 ? _b : 32,
            salt: (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(salt).replace('0x', ''),
            c: (_c = options === null || options === void 0 ? void 0 : options.c) !== null && _c !== void 0 ? _c : 262144,
            prf: 'hmac-sha256',
        };
        if (kdfparams.c < 1000) {
            // error when c < 1000, pbkdf2 is less secure with less iterations
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.PBKDF2IterationsError();
        }
        derivedKey = (0,ethereum_cryptography_pbkdf2_js__WEBPACK_IMPORTED_MODULE_1__.pbkdf2Sync)(uint8ArrayPassword, salt, kdfparams.c, kdfparams.dklen, 'sha256');
    }
    else if (kdf === 'scrypt') {
        kdfparams = {
            n: (_d = options === null || options === void 0 ? void 0 : options.n) !== null && _d !== void 0 ? _d : 8192,
            r: (_e = options === null || options === void 0 ? void 0 : options.r) !== null && _e !== void 0 ? _e : 8,
            p: (_f = options === null || options === void 0 ? void 0 : options.p) !== null && _f !== void 0 ? _f : 1,
            dklen: (_g = options === null || options === void 0 ? void 0 : options.dklen) !== null && _g !== void 0 ? _g : 32,
            salt: (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(salt).replace('0x', ''),
        };
        derivedKey = (0,ethereum_cryptography_scrypt_js__WEBPACK_IMPORTED_MODULE_2__.scryptSync)(uint8ArrayPassword, salt, kdfparams.n, kdfparams.p, kdfparams.r, kdfparams.dklen);
    }
    else {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidKdfError();
    }
    const cipher = yield (0,ethereum_cryptography_aes_js__WEBPACK_IMPORTED_MODULE_0__.encrypt)(privateKeyUint8Array, derivedKey.slice(0, 16), initializationVector, 'aes-128-ctr');
    const ciphertext = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(cipher).slice(2);
    const mac = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.sha3Raw)((0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.uint8ArrayConcat)(derivedKey.slice(16, 32), cipher)).replace('0x', '');
    return {
        version: 3,
        id: (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.uuidV4)(),
        address: privateKeyToAddress(privateKeyUint8Array).toLowerCase().replace('0x', ''),
        crypto: {
            ciphertext,
            cipherparams: {
                iv: (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(initializationVector).replace('0x', ''),
            },
            cipher: 'aes-128-ctr',
            kdf,
            kdfparams,
            mac,
        },
    };
});
/**
 * Get an Account object from the privateKey
 *
 * @param privateKey - String or Uint8Array of 32 bytes
 * @param ignoreLength - if true, will not error check length
 * @returns A Web3Account object
 *
 * :::info
 * The `Web3Account.signTransaction` is not stateful if directly imported from accounts package and used. Network access is required to get the account `nonce` and `chainId` to sign the transaction, so use {@link Web3.eth.accounts.signTransaction} for signing transactions.
 * ::::
 *
 * ```ts
 * web3.eth.accounts.privateKeyToAccount("0x348ce564d427a3311b6536bbcff9390d69395b06ed6c486954e971d960fe8709");
 *
 * >    {
 * 			address: '0xb8CE9ab6943e0eCED004cDe8e3bBed6568B2Fa01',
 * 			privateKey: '0x348ce564d427a3311b6536bbcff9390d69395b06ed6c486954e971d960fe8709',
 * 			sign,
 * 			signTransaction,
 * 			encrypt,
 * 	}
 * ```
 */
const privateKeyToAccount = (privateKey, ignoreLength) => {
    const privateKeyUint8Array = parseAndValidatePrivateKey(privateKey, ignoreLength);
    return {
        address: privateKeyToAddress(privateKeyUint8Array),
        privateKey: (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(privateKeyUint8Array),
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        signTransaction: (_tx) => {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.TransactionSigningError('Do not have network access to sign the transaction');
        },
        sign: (data) => sign(typeof data === 'string' ? data : JSON.stringify(data), privateKeyUint8Array),
        encrypt: (password, options) => __awaiter(void 0, void 0, void 0, function* () { return encrypt(privateKeyUint8Array, password, options); }),
    };
};
/**
 *
 * Generates and returns a Web3Account object that includes the private and public key
 * For creation of private key, it uses an audited package ethereum-cryptography/secp256k1
 * that is cryptographically secure random number with certain characteristics.
 * Read more: https://www.npmjs.com/package/ethereum-cryptography#secp256k1-curve
 *
 * @returns A Web3Account object
 * ```ts
 * web3.eth.accounts.create();
 * {
 * address: '0xbD504f977021b5E5DdccD8741A368b147B3B38bB',
 * privateKey: '0x964ced1c69ad27a311c432fdc0d8211e987595f7eb34ab405a5f16bdc9563ec5',
 * signTransaction: [Function: signTransaction],
 * sign: [Function: sign],
 * encrypt: [AsyncFunction: encrypt]
 * }
 * ```
 */
const create = () => {
    const privateKey = _tx_constants_js__WEBPACK_IMPORTED_MODULE_6__.secp256k1.utils.randomPrivateKey();
    return privateKeyToAccount(`${(0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(privateKey)}`);
};
/**
 * Decrypts a v3 keystore JSON, and creates the account.
 *
 * @param keystore - the encrypted Keystore object or string to decrypt
 * @param password - The password that was used for encryption
 * @param nonStrict - if true and given a json string, the keystore will be parsed as lowercase.
 * @returns Returns the decrypted Web3Account object
 * Decrypting scrypt
 *
 * ```ts
 * web3.eth.accounts.decrypt({
 *   version: 3,
 *   id: 'c0cb0a94-4702-4492-b6e6-eb2ac404344a',
 *   address: 'cda9a91875fc35c8ac1320e098e584495d66e47c',
 *   crypto: {
 *   ciphertext: 'cb3e13e3281ff3861a3f0257fad4c9a51b0eb046f9c7821825c46b210f040b8f',
 *      cipherparams: { iv: 'bfb43120ae00e9de110f8325143a2709' },
 *      cipher: 'aes-128-ctr',
 *      kdf: 'scrypt',
 *      kdfparams: {
 *        n: 8192,
 *        r: 8,
 *        p: 1,
 *        dklen: 32,
 *        salt: '210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd'
 *      },
 *      mac: 'efbf6d3409f37c0084a79d5fdf9a6f5d97d11447517ef1ea8374f51e581b7efd'
 *    }
 *   }, '123').then(console.log);
 *
 *
 * > {
 * address: '0xcdA9A91875fc35c8Ac1320E098e584495d66e47c',
 * privateKey: '67f476289210e3bef3c1c75e4de993ff0a00663df00def84e73aa7411eac18a6',
 * signTransaction: [Function: signTransaction],
 * sign: [Function: sign],
 * encrypt: [AsyncFunction: encrypt]
 * }
 * ```
 */
const decrypt = (keystore, password, nonStrict) => __awaiter(void 0, void 0, void 0, function* () {
    const json = typeof keystore === 'object'
        ? keystore
        : JSON.parse(nonStrict ? keystore.toLowerCase() : keystore);
    web3_validator__WEBPACK_IMPORTED_MODULE_5__.validator.validateJSONSchema(_schemas_js__WEBPACK_IMPORTED_MODULE_7__.keyStoreSchema, json);
    if (json.version !== 3)
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.KeyStoreVersionError();
    const uint8ArrayPassword = typeof password === 'string' ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)((0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.utf8ToHex)(password)) : password;
    web3_validator__WEBPACK_IMPORTED_MODULE_5__.validator.validate(['bytes'], [uint8ArrayPassword]);
    let derivedKey;
    if (json.crypto.kdf === 'scrypt') {
        const kdfparams = json.crypto.kdfparams;
        const uint8ArraySalt = typeof kdfparams.salt === 'string' ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(kdfparams.salt) : kdfparams.salt;
        derivedKey = (0,ethereum_cryptography_scrypt_js__WEBPACK_IMPORTED_MODULE_2__.scryptSync)(uint8ArrayPassword, uint8ArraySalt, kdfparams.n, kdfparams.p, kdfparams.r, kdfparams.dklen);
    }
    else if (json.crypto.kdf === 'pbkdf2') {
        const kdfparams = json.crypto.kdfparams;
        const uint8ArraySalt = typeof kdfparams.salt === 'string' ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(kdfparams.salt) : kdfparams.salt;
        derivedKey = (0,ethereum_cryptography_pbkdf2_js__WEBPACK_IMPORTED_MODULE_1__.pbkdf2Sync)(uint8ArrayPassword, uint8ArraySalt, kdfparams.c, kdfparams.dklen, 'sha256');
    }
    else {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidKdfError();
    }
    const ciphertext = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(json.crypto.ciphertext);
    const mac = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.sha3Raw)((0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.uint8ArrayConcat)(derivedKey.slice(16, 32), ciphertext)).replace('0x', '');
    if (mac !== json.crypto.mac) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.KeyDerivationError();
    }
    const seed = yield (0,ethereum_cryptography_aes_js__WEBPACK_IMPORTED_MODULE_0__.decrypt)((0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(json.crypto.ciphertext), derivedKey.slice(0, 16), (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(json.crypto.cipherparams.iv));
    return privateKeyToAccount(seed);
});
//# sourceMappingURL=account.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/chains/goerli.js":
/*!************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/chains/goerli.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'goerli',
    chainId: 5,
    networkId: 5,
    defaultHardfork: 'merge',
    consensus: {
        type: 'poa',
        algorithm: 'clique',
        clique: {
            period: 15,
            epoch: 30000,
        },
    },
    comment: 'Cross-client PoA test network',
    url: 'https://github.com/goerli/testnet',
    genesis: {
        timestamp: '0x5c51a607',
        gasLimit: 10485760,
        difficulty: 1,
        nonce: '0x0000000000000000',
        extraData: '0x22466c6578692069732061207468696e6722202d204166726900000000000000e0a2bd4258d2768837baa26a28fe71dc079f84c70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
    },
    hardforks: [
        {
            name: 'chainstart',
            block: 0,
            forkHash: '0xa3f5ab08',
        },
        {
            name: 'homestead',
            block: 0,
            forkHash: '0xa3f5ab08',
        },
        {
            name: 'tangerineWhistle',
            block: 0,
            forkHash: '0xa3f5ab08',
        },
        {
            name: 'spuriousDragon',
            block: 0,
            forkHash: '0xa3f5ab08',
        },
        {
            name: 'byzantium',
            block: 0,
            forkHash: '0xa3f5ab08',
        },
        {
            name: 'constantinople',
            block: 0,
            forkHash: '0xa3f5ab08',
        },
        {
            name: 'petersburg',
            block: 0,
            forkHash: '0xa3f5ab08',
        },
        {
            name: 'istanbul',
            block: 1561651,
            forkHash: '0xc25efa5c',
        },
        {
            name: 'berlin',
            block: 4460644,
            forkHash: '0x757a1c47',
        },
        {
            name: 'london',
            block: 5062605,
            forkHash: '0xb8c6299d',
        },
        {
            '//_comment': 'The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://goerli.etherscan.io/block/7382818',
            name: 'merge',
            ttd: '10790000',
            block: 7382819,
            forkHash: '0xb8c6299d',
        },
        {
            name: 'mergeForkIdTransition',
            block: null,
            forkHash: null,
        },
        {
            name: 'shanghai',
            block: null,
            forkHash: null,
        },
    ],
    bootstrapNodes: [],
    dnsNetworks: [
        'enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.goerli.ethdisco.net',
    ],
});
//# sourceMappingURL=goerli.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/chains/mainnet.js":
/*!*************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/chains/mainnet.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'mainnet',
    chainId: 1,
    networkId: 1,
    defaultHardfork: 'merge',
    consensus: {
        type: 'pow',
        algorithm: 'ethash',
        ethash: {},
    },
    comment: 'The Ethereum main chain',
    url: 'https://ethstats.net/',
    genesis: {
        gasLimit: 5000,
        difficulty: 17179869184,
        nonce: '0x0000000000000042',
        extraData: '0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa',
    },
    hardforks: [
        {
            name: 'chainstart',
            block: 0,
            forkHash: '0xfc64ec04',
        },
        {
            name: 'homestead',
            block: 1150000,
            forkHash: '0x97c2c34c',
        },
        {
            name: 'dao',
            block: 1920000,
            forkHash: '0x91d1f948',
        },
        {
            name: 'tangerineWhistle',
            block: 2463000,
            forkHash: '0x7a64da13',
        },
        {
            name: 'spuriousDragon',
            block: 2675000,
            forkHash: '0x3edd5b10',
        },
        {
            name: 'byzantium',
            block: 4370000,
            forkHash: '0xa00bc324',
        },
        {
            name: 'constantinople',
            block: 7280000,
            forkHash: '0x668db0af',
        },
        {
            name: 'petersburg',
            block: 7280000,
            forkHash: '0x668db0af',
        },
        {
            name: 'istanbul',
            block: 9069000,
            forkHash: '0x879d6e30',
        },
        {
            name: 'muirGlacier',
            block: 9200000,
            forkHash: '0xe029e991',
        },
        {
            name: 'berlin',
            block: 12244000,
            forkHash: '0x0eb440f6',
        },
        {
            name: 'london',
            block: 12965000,
            forkHash: '0xb715077d',
        },
        {
            name: 'arrowGlacier',
            block: 13773000,
            forkHash: '0x20c327fc',
        },
        {
            name: 'grayGlacier',
            block: 15050000,
            forkHash: '0xf0afd0e3',
        },
        {
            '//_comment': 'The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://etherscan.io/block/15537393',
            name: 'merge',
            ttd: '58750000000000000000000',
            block: 15537394,
            forkHash: '0xf0afd0e3',
        },
        {
            name: 'mergeForkIdTransition',
            block: null,
            forkHash: null,
        },
        {
            name: 'shanghai',
            block: null,
            forkHash: null,
        },
    ],
    bootstrapNodes: [],
    dnsNetworks: [
        'enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.mainnet.ethdisco.net',
    ],
});
//# sourceMappingURL=mainnet.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/chains/sepolia.js":
/*!*************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/chains/sepolia.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'sepolia',
    chainId: 11155111,
    networkId: 11155111,
    defaultHardfork: 'merge',
    consensus: {
        type: 'pow',
        algorithm: 'ethash',
        ethash: {},
    },
    comment: 'PoW test network to replace Ropsten',
    url: 'https://github.com/ethereum/go-ethereum/pull/23730',
    genesis: {
        timestamp: '0x6159af19',
        gasLimit: 30000000,
        difficulty: 131072,
        nonce: '0x0000000000000000',
        extraData: '0x5365706f6c69612c20417468656e732c204174746963612c2047726565636521',
    },
    hardforks: [
        {
            name: 'chainstart',
            block: 0,
            forkHash: '0xfe3366e7',
        },
        {
            name: 'homestead',
            block: 0,
            forkHash: '0xfe3366e7',
        },
        {
            name: 'tangerineWhistle',
            block: 0,
            forkHash: '0xfe3366e7',
        },
        {
            name: 'spuriousDragon',
            block: 0,
            forkHash: '0xfe3366e7',
        },
        {
            name: 'byzantium',
            block: 0,
            forkHash: '0xfe3366e7',
        },
        {
            name: 'constantinople',
            block: 0,
            forkHash: '0xfe3366e7',
        },
        {
            name: 'petersburg',
            block: 0,
            forkHash: '0xfe3366e7',
        },
        {
            name: 'istanbul',
            block: 0,
            forkHash: '0xfe3366e7',
        },
        {
            name: 'muirGlacier',
            block: 0,
            forkHash: '0xfe3366e7',
        },
        {
            name: 'berlin',
            block: 0,
            forkHash: '0xfe3366e7',
        },
        {
            name: 'london',
            block: 0,
            forkHash: '0xfe3366e7',
        },
        {
            '//_comment': 'The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://sepolia.etherscan.io/block/1450408',
            name: 'merge',
            ttd: '17000000000000000',
            block: 1450409,
            forkHash: '0xfe3366e7',
        },
        {
            name: 'mergeForkIdTransition',
            block: 1735371,
            forkHash: '0xb96cbd13',
        },
        {
            name: 'shanghai',
            block: null,
            timestamp: '1677557088',
            forkHash: '0xf7f9bc08',
        },
    ],
    bootstrapNodes: [],
    dnsNetworks: [
        'enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.sepolia.ethdisco.net',
    ],
});
//# sourceMappingURL=sepolia.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/common.js":
/*!*****************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/common.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Common: () => (/* binding */ Common)
/* harmony export */ });
/* harmony import */ var crc_32__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crc-32 */ "./node_modules/crc-32/crc32.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types.js */ "./node_modules/web3-eth-accounts/lib/esm/common/types.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-accounts/lib/esm/common/utils.js");
/* harmony import */ var _chains_goerli_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chains/goerli.js */ "./node_modules/web3-eth-accounts/lib/esm/common/chains/goerli.js");
/* harmony import */ var _chains_mainnet_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./chains/mainnet.js */ "./node_modules/web3-eth-accounts/lib/esm/common/chains/mainnet.js");
/* harmony import */ var _chains_sepolia_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./chains/sepolia.js */ "./node_modules/web3-eth-accounts/lib/esm/common/chains/sepolia.js");
/* harmony import */ var _eips_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./eips/index.js */ "./node_modules/web3-eth-accounts/lib/esm/common/eips/index.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./enums.js */ "./node_modules/web3-eth-accounts/lib/esm/common/enums.js");
/* harmony import */ var _hardforks_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./hardforks/index.js */ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/










const { buf: crc32Uint8Array } = crc_32__WEBPACK_IMPORTED_MODULE_0__;
/**
 * Common class to access chain and hardfork parameters and to provide
 * a unified and shared view on the network and hardfork state.
 *
 * Use the {@link Common.custom} static constructor for creating simple
 * custom chain {@link Common} objects (more complete custom chain setups
 * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).
 */
class Common extends web3_utils__WEBPACK_IMPORTED_MODULE_1__.EventEmitter {
    /**
     * Creates a {@link Common} object for a custom chain, based on a standard one.
     *
     * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden
     * in a provided {@link chainParamsOrName} dictionary. Some usage example:
     *
     * ```javascript
     * Common.custom({chainId: 123})
     * ```
     *
     * There are also selected supported custom chains which can be initialized by using one of the
     * {@link CustomChains} for {@link chainParamsOrName}, e.g.:
     *
     * ```javascript
     * Common.custom(CustomChains.MaticMumbai)
     * ```
     *
     * Note that these supported custom chains only provide some base parameters (usually the chain and
     * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with
     * the `web3-utils/tx` library to a Layer-2 chain).
     *
     * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain
     * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others
     */
    static custom(chainParamsOrName, opts = {}) {
        var _a;
        const baseChain = (_a = opts.baseChain) !== null && _a !== void 0 ? _a : 'mainnet';
        const standardChainParams = Object.assign({}, Common._getChainParams(baseChain));
        standardChainParams.name = 'custom-chain';
        if (typeof chainParamsOrName !== 'string') {
            return new Common(Object.assign({ chain: Object.assign(Object.assign({}, standardChainParams), chainParamsOrName) }, opts));
        }
        if (chainParamsOrName === _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.PolygonMainnet) {
            return Common.custom({
                name: _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.PolygonMainnet,
                chainId: 137,
                networkId: 137,
            }, opts);
        }
        if (chainParamsOrName === _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.PolygonMumbai) {
            return Common.custom({
                name: _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.PolygonMumbai,
                chainId: 80001,
                networkId: 80001,
            }, opts);
        }
        if (chainParamsOrName === _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.ArbitrumRinkebyTestnet) {
            return Common.custom({
                name: _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.ArbitrumRinkebyTestnet,
                chainId: 421611,
                networkId: 421611,
            }, opts);
        }
        if (chainParamsOrName === _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.ArbitrumOne) {
            return Common.custom({
                name: _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.ArbitrumOne,
                chainId: 42161,
                networkId: 42161,
            }, opts);
        }
        if (chainParamsOrName === _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.xDaiChain) {
            return Common.custom({
                name: _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.xDaiChain,
                chainId: 100,
                networkId: 100,
            }, opts);
        }
        if (chainParamsOrName === _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.OptimisticKovan) {
            return Common.custom({
                name: _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.OptimisticKovan,
                chainId: 69,
                networkId: 69,
            }, Object.assign({ hardfork: _enums_js__WEBPACK_IMPORTED_MODULE_8__.Hardfork.Berlin }, opts));
        }
        if (chainParamsOrName === _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.OptimisticEthereum) {
            return Common.custom({
                name: _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.OptimisticEthereum,
                chainId: 10,
                networkId: 10,
            }, Object.assign({ hardfork: _enums_js__WEBPACK_IMPORTED_MODULE_8__.Hardfork.Berlin }, opts));
        }
        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions
        throw new Error(`Custom chain ${chainParamsOrName} not supported`);
    }
    /**
     * Static method to load and set common from a geth genesis json
     * @param genesisJson json of geth configuration
     * @param { chain, eips, genesisHash, hardfork, mergeForkIdPostMerge } to further configure the common instance
     * @returns Common
     */
    static fromGethGenesis(
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    genesisJson, { chain, eips, genesisHash, hardfork, mergeForkIdPostMerge }) {
        var _a;
        const genesisParams = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.parseGethGenesis)(genesisJson, chain, mergeForkIdPostMerge);
        const common = new Common({
            chain: (_a = genesisParams.name) !== null && _a !== void 0 ? _a : 'custom',
            customChains: [genesisParams],
            eips,
            hardfork: hardfork !== null && hardfork !== void 0 ? hardfork : genesisParams.hardfork,
        });
        if (genesisHash !== undefined) {
            common.setForkHashes(genesisHash);
        }
        return common;
    }
    /**
     * Static method to determine if a {@link chainId} is supported as a standard chain
     * @param chainId bigint id (`1`) of a standard chain
     * @returns boolean
     */
    static isSupportedChainId(chainId) {
        const initializedChains = this._getInitializedChains();
        return Boolean(initializedChains.names[chainId.toString()]);
    }
    static _getChainParams(_chain, customChains) {
        let chain = _chain;
        const initializedChains = this._getInitializedChains(customChains);
        if (typeof chain === 'number' || typeof chain === 'bigint') {
            chain = chain.toString();
            if (initializedChains.names[chain]) {
                const name = initializedChains.names[chain];
                return initializedChains[name];
            }
            throw new Error(`Chain with ID ${chain} not supported`);
        }
        if (initializedChains[chain] !== undefined) {
            return initializedChains[chain];
        }
        throw new Error(`Chain with name ${chain} not supported`);
    }
    constructor(opts) {
        var _a, _b;
        super();
        this._eips = [];
        this._customChains = (_a = opts.customChains) !== null && _a !== void 0 ? _a : [];
        this._chainParams = this.setChain(opts.chain);
        this.DEFAULT_HARDFORK = (_b = this._chainParams.defaultHardfork) !== null && _b !== void 0 ? _b : _enums_js__WEBPACK_IMPORTED_MODULE_8__.Hardfork.Merge;
        // Assign hardfork changes in the sequence of the applied hardforks
        this.HARDFORK_CHANGES = this.hardforks().map(hf => [
            hf.name,
            _hardforks_index_js__WEBPACK_IMPORTED_MODULE_9__.hardforks[hf.name],
        ]);
        this._hardfork = this.DEFAULT_HARDFORK;
        if (opts.hardfork !== undefined) {
            this.setHardfork(opts.hardfork);
        }
        if (opts.eips) {
            this.setEIPs(opts.eips);
        }
    }
    /**
     * Sets the chain
     * @param chain String ('mainnet') or Number (1) chain representation.
     *              Or, a Dictionary of chain parameters for a private network.
     * @returns The dictionary with parameters set as chain
     */
    setChain(chain) {
        if (typeof chain === 'number' || typeof chain === 'bigint' || typeof chain === 'string') {
            this._chainParams = Common._getChainParams(chain, this._customChains);
        }
        else if (typeof chain === 'object') {
            if (this._customChains.length > 0) {
                throw new Error('Chain must be a string, number, or bigint when initialized with customChains passed in');
            }
            const required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];
            for (const param of required) {
                if (!(param in chain)) {
                    throw new Error(`Missing required chain parameter: ${param}`);
                }
            }
            this._chainParams = chain;
        }
        else {
            throw new Error('Wrong input format');
        }
        for (const hf of this.hardforks()) {
            if (hf.block === undefined) {
                throw new Error(`Hardfork cannot have undefined block number`);
            }
        }
        return this._chainParams;
    }
    /**
     * Sets the hardfork to get params for
     * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum
     */
    setHardfork(hardfork) {
        let existing = false;
        for (const hfChanges of this.HARDFORK_CHANGES) {
            if (hfChanges[0] === hardfork) {
                if (this._hardfork !== hardfork) {
                    this._hardfork = hardfork;
                    this.emit('hardforkChanged', hardfork);
                }
                existing = true;
            }
        }
        if (!existing) {
            throw new Error(`Hardfork with name ${hardfork} not supported`);
        }
    }
    /**
     * Returns the hardfork based on the block number or an optional
     * total difficulty (Merge HF) provided.
     *
     * An optional TD takes precedence in case the corresponding HF block
     * is set to `null` or otherwise needs to match (if not an error
     * will be thrown).
     *
     * @param blockNumber
     * @param td : total difficulty of the parent block (for block hf) OR of the chain latest (for chain hf)
     * @param timestamp: timestamp in seconds at which block was/is to be minted
     * @returns The name of the HF
     */
    getHardforkByBlockNumber(_blockNumber, _td, _timestamp) {
        const blockNumber = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.toType)(_blockNumber, _types_js__WEBPACK_IMPORTED_MODULE_2__.TypeOutput.BigInt);
        const td = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.toType)(_td, _types_js__WEBPACK_IMPORTED_MODULE_2__.TypeOutput.BigInt);
        const timestamp = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.toType)(_timestamp, _types_js__WEBPACK_IMPORTED_MODULE_2__.TypeOutput.Number);
        // Filter out hardforks with no block number, no ttd or no timestamp (i.e. unapplied hardforks)
        const hfs = this.hardforks().filter(hf => 
        // eslint-disable-next-line no-null/no-null
        hf.block !== null ||
            // eslint-disable-next-line no-null/no-null
            (hf.ttd !== null && hf.ttd !== undefined) ||
            hf.timestamp !== undefined);
        // eslint-disable-next-line no-null/no-null
        const mergeIndex = hfs.findIndex(hf => hf.ttd !== null && hf.ttd !== undefined);
        const doubleTTDHF = hfs
            .slice(mergeIndex + 1)
            // eslint-disable-next-line no-null/no-null
            .findIndex(hf => hf.ttd !== null && hf.ttd !== undefined);
        if (doubleTTDHF >= 0) {
            throw Error(`More than one merge hardforks found with ttd specified`);
        }
        // Find the first hardfork that has a block number greater than `blockNumber`
        // (skips the merge hardfork since it cannot have a block number specified).
        // If timestamp is not provided, it also skips timestamps hardforks to continue
        // discovering/checking number hardforks.
        let hfIndex = hfs.findIndex(hf => 
        // eslint-disable-next-line no-null/no-null
        (hf.block !== null && hf.block > blockNumber) ||
            (timestamp !== undefined && Number(hf.timestamp) > timestamp));
        if (hfIndex === -1) {
            // all hardforks apply, set hfIndex to the last one as that's the candidate
            hfIndex = hfs.length;
        }
        else if (hfIndex === 0) {
            // cannot have a case where a block number is before all applied hardforks
            // since the chain has to start with a hardfork
            throw Error('Must have at least one hardfork at block 0');
        }
        // If timestamp is not provided, we need to rollback to the last hf with block or ttd
        if (timestamp === undefined) {
            const stepBack = hfs
                .slice(0, hfIndex)
                .reverse()
                // eslint-disable-next-line no-null/no-null
                .findIndex(hf => hf.block !== null || hf.ttd !== undefined);
            hfIndex -= stepBack;
        }
        // Move hfIndex one back to arrive at candidate hardfork
        hfIndex -= 1;
        // If the timestamp was not provided, we could have skipped timestamp hardforks to look for number
        // hardforks. so it will now be needed to rollback
        // eslint-disable-next-line no-null/no-null
        if (hfs[hfIndex].block === null && hfs[hfIndex].timestamp === undefined) {
            // We're on the merge hardfork.  Let's check the TTD
            // eslint-disable-next-line no-null/no-null
            if (td === undefined || td === null || BigInt(hfs[hfIndex].ttd) > td) {
                // Merge ttd greater than current td so we're on hardfork before merge
                hfIndex -= 1;
            }
            // eslint-disable-next-line no-null/no-null
        }
        else if (mergeIndex >= 0 && td !== undefined && td !== null) {
            if (hfIndex >= mergeIndex && BigInt(hfs[mergeIndex].ttd) > td) {
                throw Error('Maximum HF determined by total difficulty is lower than the block number HF');
            }
            else if (hfIndex < mergeIndex && BigInt(hfs[mergeIndex].ttd) <= td) {
                throw Error('HF determined by block number is lower than the minimum total difficulty HF');
            }
        }
        const hfStartIndex = hfIndex;
        // Move the hfIndex to the end of the hardforks that might be scheduled on the same block/timestamp
        // This won't anyway be the case with Merge hfs
        for (; hfIndex < hfs.length - 1; hfIndex += 1) {
            // break out if hfIndex + 1 is not scheduled at hfIndex
            if (hfs[hfIndex].block !== hfs[hfIndex + 1].block ||
                hfs[hfIndex].timestamp !== hfs[hfIndex + 1].timestamp) {
                break;
            }
        }
        if (timestamp) {
            const minTimeStamp = hfs
                .slice(0, hfStartIndex)
                .reduce((acc, hf) => { var _a; return Math.max(Number((_a = hf.timestamp) !== null && _a !== void 0 ? _a : '0'), acc); }, 0);
            if (minTimeStamp > timestamp) {
                throw Error(`Maximum HF determined by timestamp is lower than the block number/ttd HF`);
            }
            const maxTimeStamp = hfs
                .slice(hfIndex + 1)
                .reduce((acc, hf) => { var _a; return Math.min(Number((_a = hf.timestamp) !== null && _a !== void 0 ? _a : timestamp), acc); }, timestamp);
            if (maxTimeStamp < timestamp) {
                throw Error(`Maximum HF determined by block number/ttd is lower than timestamp HF`);
            }
        }
        const hardfork = hfs[hfIndex];
        return hardfork.name;
    }
    /**
     * Sets a new hardfork based on the block number or an optional
     * total difficulty (Merge HF) provided.
     *
     * An optional TD takes precedence in case the corresponding HF block
     * is set to `null` or otherwise needs to match (if not an error
     * will be thrown).
     *
     * @param blockNumber
     * @param td
     * @param timestamp
     * @returns The name of the HF set
     */
    setHardforkByBlockNumber(blockNumber, td, timestamp) {
        const hardfork = this.getHardforkByBlockNumber(blockNumber, td, timestamp);
        this.setHardfork(hardfork);
        return hardfork;
    }
    /**
     * Internal helper function, returns the params for the given hardfork for the chain set
     * @param hardfork Hardfork name
     * @returns Dictionary with hardfork params or null if hardfork not on chain
     */
    // eslint-disable-next-line @typescript-eslint/ban-types
    _getHardfork(hardfork) {
        const hfs = this.hardforks();
        for (const hf of hfs) {
            if (hf.name === hardfork)
                return hf;
        }
        // eslint-disable-next-line no-null/no-null
        return null;
    }
    /**
     * Sets the active EIPs
     * @param eips
     */
    setEIPs(eips = []) {
        for (const eip of eips) {
            if (!(eip in _eips_index_js__WEBPACK_IMPORTED_MODULE_7__.EIPs)) {
                throw new Error(`${eip} not supported`);
            }
            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument
            const minHF = this.gteHardfork(_eips_index_js__WEBPACK_IMPORTED_MODULE_7__.EIPs[eip].minimumHardfork);
            if (!minHF) {
                throw new Error(
                // eslint-disable-next-line @typescript-eslint/restrict-template-expressions
                `${eip} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${minHF}`);
            }
            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
            if (_eips_index_js__WEBPACK_IMPORTED_MODULE_7__.EIPs[eip].requiredEIPs !== undefined) {
                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
                for (const elem of _eips_index_js__WEBPACK_IMPORTED_MODULE_7__.EIPs[eip].requiredEIPs) {
                    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
                    if (!(eips.includes(elem) || this.isActivatedEIP(elem))) {
                        throw new Error(
                        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions
                        `${eip} requires EIP ${elem}, but is not included in the EIP list`);
                    }
                }
            }
        }
        this._eips = eips;
    }
    /**
     * Returns a parameter for the current chain setup
     *
     * If the parameter is present in an EIP, the EIP always takes precedence.
     * Otherwise the parameter if taken from the latest applied HF with
     * a change on the respective parameter.
     *
     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')
     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)
     * @returns The value requested or `BigInt(0)` if not found
     */
    param(topic, name) {
        // TODO: consider the case that different active EIPs
        // can change the same parameter
        let value;
        for (const eip of this._eips) {
            value = this.paramByEIP(topic, name, eip);
            if (value !== undefined)
                return value;
        }
        return this.paramByHardfork(topic, name, this._hardfork);
    }
    /**
     * Returns the parameter corresponding to a hardfork
     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')
     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)
     * @param hardfork Hardfork name
     * @returns The value requested or `BigInt(0)` if not found
     */
    paramByHardfork(topic, name, hardfork) {
        // eslint-disable-next-line no-null/no-null
        let value = null;
        for (const hfChanges of this.HARDFORK_CHANGES) {
            // EIP-referencing HF file (e.g. berlin.json)
            if ('eips' in hfChanges[1]) {
                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment
                const hfEIPs = hfChanges[1].eips;
                for (const eip of hfEIPs) {
                    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
                    const valueEIP = this.paramByEIP(topic, name, eip);
                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
                    value = typeof valueEIP === 'bigint' ? valueEIP : value;
                }
                // Parameter-inlining HF file (e.g. istanbul.json)
            }
            else {
                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
                if (hfChanges[1][topic] === undefined) {
                    throw new Error(`Topic ${topic} not defined`);
                }
                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
                if (hfChanges[1][topic][name] !== undefined) {
                    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment
                    value = hfChanges[1][topic][name].v;
                }
            }
            if (hfChanges[0] === hardfork)
                break;
        }
        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
        return BigInt(value !== null && value !== void 0 ? value : 0);
    }
    /**
     * Returns a parameter corresponding to an EIP
     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')
     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)
     * @param eip Number of the EIP
     * @returns The value requested or `undefined` if not found
     */
    // eslint-disable-next-line class-methods-use-this
    paramByEIP(topic, name, eip) {
        if (!(eip in _eips_index_js__WEBPACK_IMPORTED_MODULE_7__.EIPs)) {
            throw new Error(`${eip} not supported`);
        }
        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
        const eipParams = _eips_index_js__WEBPACK_IMPORTED_MODULE_7__.EIPs[eip];
        if (!(topic in eipParams)) {
            throw new Error(`Topic ${topic} not defined`);
        }
        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
        if (eipParams[topic][name] === undefined) {
            return undefined;
        }
        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment
        const value = eipParams[topic][name].v;
        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
        return BigInt(value);
    }
    /**
     * Returns a parameter for the hardfork active on block number or
     * optional provided total difficulty (Merge HF)
     * @param topic Parameter topic
     * @param name Parameter name
     * @param blockNumber Block number
     * @param td Total difficulty
     *    * @returns The value requested or `BigInt(0)` if not found
     */
    paramByBlock(topic, name, blockNumber, td, timestamp) {
        const hardfork = this.getHardforkByBlockNumber(blockNumber, td, timestamp);
        return this.paramByHardfork(topic, name, hardfork);
    }
    /**
     * Checks if an EIP is activated by either being included in the EIPs
     * manually passed in with the {@link CommonOpts.eips} or in a
     * hardfork currently being active
     *
     * Note: this method only works for EIPs being supported
     * by the {@link CommonOpts.eips} constructor option
     * @param eip
     */
    isActivatedEIP(eip) {
        if (this.eips().includes(eip)) {
            return true;
        }
        for (const hfChanges of this.HARDFORK_CHANGES) {
            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
            const hf = hfChanges[1];
            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument
            if (this.gteHardfork(hf.name) && 'eips' in hf) {
                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
                if (hf.eips.includes(eip)) {
                    return true;
                }
            }
        }
        return false;
    }
    /**
     * Checks if set or provided hardfork is active on block number
     * @param hardfork Hardfork name or null (for HF set)
     * @param blockNumber
     * @returns True if HF is active on block number
     */
    hardforkIsActiveOnBlock(
    // eslint-disable-next-line @typescript-eslint/ban-types
    _hardfork, _blockNumber) {
        const blockNumber = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.toType)(_blockNumber, _types_js__WEBPACK_IMPORTED_MODULE_2__.TypeOutput.BigInt);
        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;
        const hfBlock = this.hardforkBlock(hardfork);
        if (typeof hfBlock === 'bigint' && hfBlock !== BigInt(0) && blockNumber >= hfBlock) {
            return true;
        }
        return false;
    }
    /**
     * Alias to hardforkIsActiveOnBlock when hardfork is set
     * @param blockNumber
     * @returns True if HF is active on block number
     */
    activeOnBlock(blockNumber) {
        // eslint-disable-next-line no-null/no-null
        return this.hardforkIsActiveOnBlock(null, blockNumber);
    }
    /**
     * Sequence based check if given or set HF1 is greater than or equal HF2
     * @param hardfork1 Hardfork name or null (if set)
     * @param hardfork2 Hardfork name
     * @param opts Hardfork options
     * @returns True if HF1 gte HF2
     */
    hardforkGteHardfork(
    // eslint-disable-next-line @typescript-eslint/ban-types
    _hardfork1, hardfork2) {
        const hardfork1 = _hardfork1 !== null && _hardfork1 !== void 0 ? _hardfork1 : this._hardfork;
        const hardforks = this.hardforks();
        let posHf1 = -1;
        let posHf2 = -1;
        let index = 0;
        for (const hf of hardforks) {
            if (hf.name === hardfork1)
                posHf1 = index;
            if (hf.name === hardfork2)
                posHf2 = index;
            index += 1;
        }
        return posHf1 >= posHf2 && posHf2 !== -1;
    }
    /**
     * Alias to hardforkGteHardfork when hardfork is set
     * @param hardfork Hardfork name
     * @returns True if hardfork set is greater than hardfork provided
     */
    gteHardfork(hardfork) {
        // eslint-disable-next-line no-null/no-null
        return this.hardforkGteHardfork(null, hardfork);
    }
    /**
     * Returns the hardfork change block for hardfork provided or set
     * @param hardfork Hardfork name, optional if HF set
     * @returns Block number or null if unscheduled
     */
    // eslint-disable-next-line @typescript-eslint/ban-types
    hardforkBlock(_hardfork) {
        var _a;
        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;
        const block = (_a = this._getHardfork(hardfork)) === null || _a === void 0 ? void 0 : _a.block;
        // eslint-disable-next-line no-null/no-null
        if (block === undefined || block === null) {
            // eslint-disable-next-line no-null/no-null
            return null;
        }
        return BigInt(block);
    }
    // eslint-disable-next-line @typescript-eslint/ban-types
    hardforkTimestamp(_hardfork) {
        var _a;
        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;
        const timestamp = (_a = this._getHardfork(hardfork)) === null || _a === void 0 ? void 0 : _a.timestamp;
        // eslint-disable-next-line no-null/no-null
        if (timestamp === undefined || timestamp === null) {
            // eslint-disable-next-line no-null/no-null
            return null;
        }
        return BigInt(timestamp);
    }
    /**
     * Returns the hardfork change block for eip
     * @param eip EIP number
     * @returns Block number or null if unscheduled
     */
    // eslint-disable-next-line @typescript-eslint/ban-types
    eipBlock(eip) {
        for (const hfChanges of this.HARDFORK_CHANGES) {
            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
            const hf = hfChanges[1];
            if ('eips' in hf) {
                // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call
                if (hf.eips.includes(eip)) {
                    return this.hardforkBlock(typeof hfChanges[0] === 'number' ? String(hfChanges[0]) : hfChanges[0]);
                }
            }
        }
        // eslint-disable-next-line no-null/no-null
        return null;
    }
    /**
     * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set
     * @param hardfork Hardfork name, optional if HF set
     * @returns Total difficulty or null if no set
     */
    // eslint-disable-next-line @typescript-eslint/ban-types
    hardforkTTD(_hardfork) {
        var _a;
        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;
        const ttd = (_a = this._getHardfork(hardfork)) === null || _a === void 0 ? void 0 : _a.ttd;
        // eslint-disable-next-line no-null/no-null
        if (ttd === undefined || ttd === null) {
            // eslint-disable-next-line no-null/no-null
            return null;
        }
        return BigInt(ttd);
    }
    /**
     * True if block number provided is the hardfork (given or set) change block
     * @param blockNumber Number of the block to check
     * @param hardfork Hardfork name, optional if HF set
     * @returns True if blockNumber is HF block
     * @deprecated
     */
    isHardforkBlock(_blockNumber, _hardfork) {
        const blockNumber = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.toType)(_blockNumber, _types_js__WEBPACK_IMPORTED_MODULE_2__.TypeOutput.BigInt);
        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;
        const block = this.hardforkBlock(hardfork);
        return typeof block === 'bigint' && block !== BigInt(0) ? block === blockNumber : false;
    }
    /**
     * Returns the change block for the next hardfork after the hardfork provided or set
     * @param hardfork Hardfork name, optional if HF set
     * @returns Block timestamp, number or null if not available
     */
    // eslint-disable-next-line @typescript-eslint/ban-types
    nextHardforkBlockOrTimestamp(_hardfork) {
        var _a, _b, _c;
        const hardfork = (_a = _hardfork) !== null && _a !== void 0 ? _a : this._hardfork;
        const hfs = this.hardforks();
        let hfIndex = hfs.findIndex(hf => hf.name === hardfork);
        // If the current hardfork is merge, go one behind as merge hf is not part of these
        // calcs even if the merge hf block is set
        if (hardfork === _enums_js__WEBPACK_IMPORTED_MODULE_8__.Hardfork.Merge) {
            hfIndex -= 1;
        }
        // Hardfork not found
        if (hfIndex < 0) {
            // eslint-disable-next-line no-null/no-null
            return null;
        }
        let currHfTimeOrBlock = (_b = hfs[hfIndex].timestamp) !== null && _b !== void 0 ? _b : hfs[hfIndex].block;
        currHfTimeOrBlock =
            // eslint-disable-next-line no-null/no-null
            currHfTimeOrBlock !== null && currHfTimeOrBlock !== undefined
                ? Number(currHfTimeOrBlock)
                : // eslint-disable-next-line no-null/no-null
                    null;
        const nextHf = hfs.slice(hfIndex + 1).find(hf => {
            var _a;
            let hfTimeOrBlock = (_a = hf.timestamp) !== null && _a !== void 0 ? _a : hf.block;
            hfTimeOrBlock =
                // eslint-disable-next-line no-null/no-null
                hfTimeOrBlock !== null && hfTimeOrBlock !== undefined
                    ? Number(hfTimeOrBlock)
                    : // eslint-disable-next-line no-null/no-null
                        null;
            return (hf.name !== _enums_js__WEBPACK_IMPORTED_MODULE_8__.Hardfork.Merge &&
                // eslint-disable-next-line no-null/no-null
                hfTimeOrBlock !== null &&
                hfTimeOrBlock !== undefined &&
                hfTimeOrBlock !== currHfTimeOrBlock);
        });
        // If no next hf found with valid block or timestamp return null
        if (nextHf === undefined) {
            // eslint-disable-next-line no-null/no-null
            return null;
        }
        const nextHfBlock = (_c = nextHf.timestamp) !== null && _c !== void 0 ? _c : nextHf.block;
        // eslint-disable-next-line no-null/no-null
        if (nextHfBlock === null || nextHfBlock === undefined) {
            // eslint-disable-next-line no-null/no-null
            return null;
        }
        return BigInt(nextHfBlock);
    }
    /**
     * Returns the change block for the next hardfork after the hardfork provided or set
     * @param hardfork Hardfork name, optional if HF set
     * @returns Block number or null if not available
     * @deprecated
     */
    // eslint-disable-next-line @typescript-eslint/ban-types
    nextHardforkBlock(_hardfork) {
        var _a;
        const hardfork = (_a = _hardfork) !== null && _a !== void 0 ? _a : this._hardfork;
        let hfBlock = this.hardforkBlock(hardfork);
        // If this is a merge hardfork with block not set, then we fallback to previous hardfork
        // to find the nextHardforkBlock
        // eslint-disable-next-line no-null/no-null
        if (hfBlock === null && hardfork === _enums_js__WEBPACK_IMPORTED_MODULE_8__.Hardfork.Merge) {
            const hfs = this.hardforks();
            // eslint-disable-next-line no-null/no-null
            const mergeIndex = hfs.findIndex(hf => hf.ttd !== null && hf.ttd !== undefined);
            if (mergeIndex < 0) {
                throw Error(`Merge hardfork should have been found`);
            }
            hfBlock = this.hardforkBlock(hfs[mergeIndex - 1].name);
        }
        // eslint-disable-next-line no-null/no-null
        if (hfBlock === null) {
            // eslint-disable-next-line no-null/no-null
            return null;
        }
        // Next fork block number or null if none available
        // Logic: if accumulator is still null and on the first occurrence of
        // a block greater than the current hfBlock set the accumulator,
        // pass on the accumulator as the final result from this time on
        // eslint-disable-next-line no-null/no-null, @typescript-eslint/ban-types
        const nextHfBlock = this.hardforks().reduce((acc, hf) => {
            // We need to ignore the merge block in our next hardfork calc
            const block = BigInt(
            // eslint-disable-next-line no-null/no-null
            hf.block === null || (hf.ttd !== undefined && hf.ttd !== null) ? 0 : hf.block);
            // TypeScript can't seem to follow that the hfBlock is not null at this point
            // eslint-disable-next-line no-null/no-null
            return block > hfBlock && acc === null ? block : acc;
            // eslint-disable-next-line no-null/no-null
        }, null);
        return nextHfBlock;
    }
    /**
     * True if block number provided is the hardfork change block following the hardfork given or set
     * @param blockNumber Number of the block to check
     * @param hardfork Hardfork name, optional if HF set
     * @returns True if blockNumber is HF block
     * @deprecated
     */
    isNextHardforkBlock(_blockNumber, _hardfork) {
        const blockNumber = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.toType)(_blockNumber, _types_js__WEBPACK_IMPORTED_MODULE_2__.TypeOutput.BigInt);
        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;
        // eslint-disable-next-line deprecation/deprecation
        const nextHardforkBlock = this.nextHardforkBlock(hardfork);
        // eslint-disable-next-line no-null/no-null
        return nextHardforkBlock === null ? false : nextHardforkBlock === blockNumber;
    }
    /**
     * Internal helper function to calculate a fork hash
     * @param hardfork Hardfork name
     * @param genesisHash Genesis block hash of the chain
     * @returns Fork hash as hex string
     */
    _calcForkHash(hardfork, genesisHash) {
        let hfUint8Array = new Uint8Array();
        let prevBlockOrTime = 0;
        for (const hf of this.hardforks()) {
            const { block, timestamp, name } = hf;
            // Timestamp to be used for timestamp based hfs even if we may bundle
            // block number with them retrospectively
            let blockOrTime = timestamp !== null && timestamp !== void 0 ? timestamp : block;
            // eslint-disable-next-line no-null/no-null
            blockOrTime = blockOrTime !== null ? Number(blockOrTime) : null;
            // Skip for chainstart (0), not applied HFs (null) and
            // when already applied on same blockOrTime HFs
            // and on the merge since forkhash doesn't change on merge hf
            if (typeof blockOrTime === 'number' &&
                blockOrTime !== 0 &&
                blockOrTime !== prevBlockOrTime &&
                name !== _enums_js__WEBPACK_IMPORTED_MODULE_8__.Hardfork.Merge) {
                const hfBlockUint8Array = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(blockOrTime.toString(16).padStart(16, '0'));
                hfUint8Array = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.uint8ArrayConcat)(hfUint8Array, hfBlockUint8Array);
                prevBlockOrTime = blockOrTime;
            }
            if (hf.name === hardfork)
                break;
        }
        const inputUint8Array = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.uint8ArrayConcat)(genesisHash, hfUint8Array);
        // CRC32 delivers result as signed (negative) 32-bit integer,
        // convert to hex string
        // eslint-disable-next-line no-bitwise
        const forkhash = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.intToUint8Array)(crc32Uint8Array(inputUint8Array) >>> 0));
        return forkhash;
    }
    /**
     * Returns an eth/64 compliant fork hash (EIP-2124)
     * @param hardfork Hardfork name, optional if HF set
     * @param genesisHash Genesis block hash of the chain, optional if already defined and not needed to be calculated
     */
    forkHash(_hardfork, genesisHash) {
        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;
        const data = this._getHardfork(hardfork);
        if (
        // eslint-disable-next-line no-null/no-null
        data === null ||
            // eslint-disable-next-line no-null/no-null
            ((data === null || data === void 0 ? void 0 : data.block) === null && (data === null || data === void 0 ? void 0 : data.timestamp) === undefined && (data === null || data === void 0 ? void 0 : data.ttd) === undefined)) {
            const msg = 'No fork hash calculation possible for future hardfork';
            throw new Error(msg);
        }
        // eslint-disable-next-line no-null/no-null
        if ((data === null || data === void 0 ? void 0 : data.forkHash) !== null && (data === null || data === void 0 ? void 0 : data.forkHash) !== undefined) {
            return data.forkHash;
        }
        if (!genesisHash)
            throw new Error('genesisHash required for forkHash calculation');
        return this._calcForkHash(hardfork, genesisHash);
    }
    /**
     *
     * @param forkHash Fork hash as a hex string
     * @returns Array with hardfork data (name, block, forkHash)
     */
    // eslint-disable-next-line @typescript-eslint/ban-types
    hardforkForForkHash(forkHash) {
        const resArray = this.hardforks().filter((hf) => hf.forkHash === forkHash);
        // eslint-disable-next-line no-null/no-null
        return resArray.length >= 1 ? resArray[resArray.length - 1] : null;
    }
    /**
     * Sets any missing forkHashes on the passed-in {@link Common} instance
     * @param common The {@link Common} to set the forkHashes for
     * @param genesisHash The genesis block hash
     */
    setForkHashes(genesisHash) {
        var _a;
        for (const hf of this.hardforks()) {
            const blockOrTime = (_a = hf.timestamp) !== null && _a !== void 0 ? _a : hf.block;
            if (
            // eslint-disable-next-line no-null/no-null
            (hf.forkHash === null || hf.forkHash === undefined) &&
                // eslint-disable-next-line no-null/no-null
                ((blockOrTime !== null && blockOrTime !== undefined) ||
                    typeof hf.ttd !== 'undefined')) {
                hf.forkHash = this.forkHash(hf.name, genesisHash);
            }
        }
    }
    /**
     * Returns the Genesis parameters of the current chain
     * @returns Genesis dictionary
     */
    genesis() {
        return this._chainParams.genesis;
    }
    /**
     * Returns the hardforks for current chain
     * @returns {Array} Array with arrays of hardforks
     */
    hardforks() {
        return this._chainParams.hardforks;
    }
    /**
     * Returns bootstrap nodes for the current chain
     * @returns {Dictionary} Dict with bootstrap nodes
     */
    bootstrapNodes() {
        return this._chainParams.bootstrapNodes;
    }
    /**
     * Returns DNS networks for the current chain
     * @returns {String[]} Array of DNS ENR urls
     */
    dnsNetworks() {
        return this._chainParams.dnsNetworks;
    }
    /**
     * Returns the hardfork set
     * @returns Hardfork name
     */
    hardfork() {
        return this._hardfork;
    }
    /**
     * Returns the Id of current chain
     * @returns chain Id
     */
    chainId() {
        return BigInt(this._chainParams.chainId);
    }
    /**
     * Returns the name of current chain
     * @returns chain name (lower case)
     */
    chainName() {
        return this._chainParams.name;
    }
    /**
     * Returns the Id of current network
     * @returns network Id
     */
    networkId() {
        return BigInt(this._chainParams.networkId);
    }
    /**
     * Returns the active EIPs
     * @returns List of EIPs
     */
    eips() {
        return this._eips;
    }
    /**
     * Returns the consensus type of the network
     * Possible values: "pow"|"poa"|"pos"
     *
     * Note: This value can update along a Hardfork.
     */
    consensusType() {
        const hardfork = this.hardfork();
        let value;
        for (const hfChanges of this.HARDFORK_CHANGES) {
            if ('consensus' in hfChanges[1]) {
                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment
                value = hfChanges[1].consensus.type;
            }
            if (hfChanges[0] === hardfork)
                break;
        }
        // eslint-disable-next-line @typescript-eslint/no-unsafe-return
        return value !== null && value !== void 0 ? value : this._chainParams.consensus.type;
    }
    /**
     * Returns the concrete consensus implementation
     * algorithm or protocol for the network
     * e.g. "ethash" for "pow" consensus type,
     * "clique" for "poa" consensus type or
     * "casper" for "pos" consensus type.
     *
     * Note: This value can update along a Hardfork.
     */
    consensusAlgorithm() {
        const hardfork = this.hardfork();
        let value;
        for (const hfChanges of this.HARDFORK_CHANGES) {
            if ('consensus' in hfChanges[1]) {
                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment
                value = hfChanges[1].consensus.algorithm;
            }
            if (hfChanges[0] === hardfork)
                break;
        }
        // eslint-disable-next-line @typescript-eslint/no-unsafe-return
        return value !== null && value !== void 0 ? value : this._chainParams.consensus.algorithm;
    }
    /**
     * Returns a dictionary with consensus configuration
     * parameters based on the consensus algorithm
     *
     * Expected returns (parameters must be present in
     * the respective chain json files):
     *
     * ethash: empty object
     * clique: period, epoch
     * casper: empty object
     *
     * Note: This value can update along a Hardfork.
     */
    consensusConfig() {
        var _a;
        const hardfork = this.hardfork();
        let value;
        for (const hfChanges of this.HARDFORK_CHANGES) {
            if ('consensus' in hfChanges[1]) {
                // The config parameter is named after the respective consensus algorithm
                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment
                value = hfChanges[1].consensus[hfChanges[1].consensus.algorithm];
            }
            if (hfChanges[0] === hardfork)
                break;
        }
        // eslint-disable-next-line @typescript-eslint/no-unsafe-return
        return ((_a = value !== null && value !== void 0 ? value : this._chainParams.consensus[this.consensusAlgorithm()]) !== null && _a !== void 0 ? _a : {});
    }
    /**
     * Returns a deep copy of this {@link Common} instance.
     */
    copy() {
        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-assignment
        const copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this);
        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call
        copy.removeAllListeners();
        // eslint-disable-next-line @typescript-eslint/no-unsafe-return
        return copy;
    }
    static _getInitializedChains(customChains) {
        const names = {};
        for (const [name, id] of Object.entries(_enums_js__WEBPACK_IMPORTED_MODULE_8__.Chain)) {
            names[id] = name.toLowerCase();
        }
        const chains = { mainnet: _chains_mainnet_js__WEBPACK_IMPORTED_MODULE_5__["default"], goerli: _chains_goerli_js__WEBPACK_IMPORTED_MODULE_4__["default"], sepolia: _chains_sepolia_js__WEBPACK_IMPORTED_MODULE_6__["default"] };
        if (customChains) {
            for (const chain of customChains) {
                const { name } = chain;
                names[chain.chainId.toString()] = name;
                chains[name] = chain;
            }
        }
        chains.names = names;
        return chains;
    }
}
//# sourceMappingURL=common.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/eips/1153.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/1153.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'EIP-1153',
    number: 1153,
    comment: 'Transient Storage',
    url: 'https://eips.ethereum.org/EIPS/eip-1153',
    status: 'Review',
    minimumHardfork: 'chainstart',
    requiredEIPs: [],
    gasConfig: {},
    gasPrices: {
        tstore: {
            v: 100,
            d: 'Base fee of the TSTORE opcode',
        },
        tload: {
            v: 100,
            d: 'Base fee of the TLOAD opcode',
        },
    },
    vm: {},
    pow: {},
});
//# sourceMappingURL=1153.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/eips/1559.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/1559.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'EIP-1559',
    number: 1559,
    comment: 'Fee market change for ETH 1.0 chain',
    url: 'https://eips.ethereum.org/EIPS/eip-1559',
    status: 'Final',
    minimumHardfork: 'berlin',
    requiredEIPs: [2930],
    gasConfig: {
        baseFeeMaxChangeDenominator: {
            v: 8,
            d: 'Maximum base fee change denominator',
        },
        elasticityMultiplier: {
            v: 2,
            d: 'Maximum block gas target elasticity',
        },
        initialBaseFee: {
            v: 1000000000,
            d: 'Initial base fee on first EIP1559 block',
        },
    },
    gasPrices: {},
    vm: {},
    pow: {},
});
//# sourceMappingURL=1559.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/eips/2315.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/2315.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'EIP-2315',
    number: 2315,
    comment: 'Simple subroutines for the EVM',
    url: 'https://eips.ethereum.org/EIPS/eip-2315',
    status: 'Draft',
    minimumHardfork: 'istanbul',
    gasConfig: {},
    gasPrices: {
        beginsub: {
            v: 2,
            d: 'Base fee of the BEGINSUB opcode',
        },
        returnsub: {
            v: 5,
            d: 'Base fee of the RETURNSUB opcode',
        },
        jumpsub: {
            v: 10,
            d: 'Base fee of the JUMPSUB opcode',
        },
    },
    vm: {},
    pow: {},
});
//# sourceMappingURL=2315.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/eips/2537.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/2537.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'EIP-2537',
    number: 2537,
    comment: 'BLS12-381 precompiles',
    url: 'https://eips.ethereum.org/EIPS/eip-2537',
    status: 'Draft',
    minimumHardfork: 'chainstart',
    gasConfig: {},
    gasPrices: {
        Bls12381G1AddGas: {
            v: 600,
            d: 'Gas cost of a single BLS12-381 G1 addition precompile-call',
        },
        Bls12381G1MulGas: {
            v: 12000,
            d: 'Gas cost of a single BLS12-381 G1 multiplication precompile-call',
        },
        Bls12381G2AddGas: {
            v: 4500,
            d: 'Gas cost of a single BLS12-381 G2 addition precompile-call',
        },
        Bls12381G2MulGas: {
            v: 55000,
            d: 'Gas cost of a single BLS12-381 G2 multiplication precompile-call',
        },
        Bls12381PairingBaseGas: {
            v: 115000,
            d: 'Base gas cost of BLS12-381 pairing check',
        },
        Bls12381PairingPerPairGas: {
            v: 23000,
            d: 'Per-pair gas cost of BLS12-381 pairing check',
        },
        Bls12381MapG1Gas: {
            v: 5500,
            d: 'Gas cost of BLS12-381 map field element to G1',
        },
        Bls12381MapG2Gas: {
            v: 110000,
            d: 'Gas cost of BLS12-381 map field element to G2',
        },
        Bls12381MultiExpGasDiscount: {
            v: [
                [1, 1200],
                [2, 888],
                [3, 764],
                [4, 641],
                [5, 594],
                [6, 547],
                [7, 500],
                [8, 453],
                [9, 438],
                [10, 423],
                [11, 408],
                [12, 394],
                [13, 379],
                [14, 364],
                [15, 349],
                [16, 334],
                [17, 330],
                [18, 326],
                [19, 322],
                [20, 318],
                [21, 314],
                [22, 310],
                [23, 306],
                [24, 302],
                [25, 298],
                [26, 294],
                [27, 289],
                [28, 285],
                [29, 281],
                [30, 277],
                [31, 273],
                [32, 269],
                [33, 268],
                [34, 266],
                [35, 265],
                [36, 263],
                [37, 262],
                [38, 260],
                [39, 259],
                [40, 257],
                [41, 256],
                [42, 254],
                [43, 253],
                [44, 251],
                [45, 250],
                [46, 248],
                [47, 247],
                [48, 245],
                [49, 244],
                [50, 242],
                [51, 241],
                [52, 239],
                [53, 238],
                [54, 236],
                [55, 235],
                [56, 233],
                [57, 232],
                [58, 231],
                [59, 229],
                [60, 228],
                [61, 226],
                [62, 225],
                [63, 223],
                [64, 222],
                [65, 221],
                [66, 220],
                [67, 219],
                [68, 219],
                [69, 218],
                [70, 217],
                [71, 216],
                [72, 216],
                [73, 215],
                [74, 214],
                [75, 213],
                [76, 213],
                [77, 212],
                [78, 211],
                [79, 211],
                [80, 210],
                [81, 209],
                [82, 208],
                [83, 208],
                [84, 207],
                [85, 206],
                [86, 205],
                [87, 205],
                [88, 204],
                [89, 203],
                [90, 202],
                [91, 202],
                [92, 201],
                [93, 200],
                [94, 199],
                [95, 199],
                [96, 198],
                [97, 197],
                [98, 196],
                [99, 196],
                [100, 195],
                [101, 194],
                [102, 193],
                [103, 193],
                [104, 192],
                [105, 191],
                [106, 191],
                [107, 190],
                [108, 189],
                [109, 188],
                [110, 188],
                [111, 187],
                [112, 186],
                [113, 185],
                [114, 185],
                [115, 184],
                [116, 183],
                [117, 182],
                [118, 182],
                [119, 181],
                [120, 180],
                [121, 179],
                [122, 179],
                [123, 178],
                [124, 177],
                [125, 176],
                [126, 176],
                [127, 175],
                [128, 174],
            ],
            d: 'Discount gas costs of calls to the MultiExp precompiles with `k` (point, scalar) pair',
        },
    },
    vm: {},
    pow: {},
});
//# sourceMappingURL=2537.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/eips/2565.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/2565.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'EIP-2565',
    number: 2565,
    comment: 'ModExp gas cost',
    url: 'https://eips.ethereum.org/EIPS/eip-2565',
    status: 'Final',
    minimumHardfork: 'byzantium',
    gasConfig: {},
    gasPrices: {
        modexpGquaddivisor: {
            v: 3,
            d: 'Gquaddivisor from modexp precompile for gas calculation',
        },
    },
    vm: {},
    pow: {},
});
//# sourceMappingURL=2565.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/eips/2718.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/2718.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'EIP-2718',
    comment: 'Typed Transaction Envelope',
    url: 'https://eips.ethereum.org/EIPS/eip-2718',
    status: 'Final',
    minimumHardfork: 'chainstart',
    gasConfig: {},
    gasPrices: {},
    vm: {},
    pow: {},
});
//# sourceMappingURL=2718.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/eips/2929.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/2929.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'EIP-2929',
    comment: 'Gas cost increases for state access opcodes',
    url: 'https://eips.ethereum.org/EIPS/eip-2929',
    status: 'Final',
    minimumHardfork: 'chainstart',
    gasConfig: {},
    gasPrices: {
        coldsload: {
            v: 2100,
            d: 'Gas cost of the first read of storage from a given location (per transaction)',
        },
        coldaccountaccess: {
            v: 2600,
            d: 'Gas cost of the first read of a given address (per transaction)',
        },
        warmstorageread: {
            v: 100,
            d: "Gas cost of reading storage locations which have already loaded 'cold'",
        },
        sstoreCleanGasEIP2200: {
            v: 2900,
            d: 'Once per SSTORE operation from clean non-zero to something else',
        },
        sstoreNoopGasEIP2200: {
            v: 100,
            d: "Once per SSTORE operation if the value doesn't change",
        },
        sstoreDirtyGasEIP2200: {
            v: 100,
            d: 'Once per SSTORE operation if a dirty value is changed',
        },
        sstoreInitRefundEIP2200: {
            v: 19900,
            d: 'Once per SSTORE operation for resetting to the original zero value',
        },
        sstoreCleanRefundEIP2200: {
            v: 4900,
            d: 'Once per SSTORE operation for resetting to the original non-zero value',
        },
        call: {
            v: 0,
            d: 'Base fee of the CALL opcode',
        },
        callcode: {
            v: 0,
            d: 'Base fee of the CALLCODE opcode',
        },
        delegatecall: {
            v: 0,
            d: 'Base fee of the DELEGATECALL opcode',
        },
        staticcall: {
            v: 0,
            d: 'Base fee of the STATICCALL opcode',
        },
        balance: {
            v: 0,
            d: 'Base fee of the BALANCE opcode',
        },
        extcodesize: {
            v: 0,
            d: 'Base fee of the EXTCODESIZE opcode',
        },
        extcodecopy: {
            v: 0,
            d: 'Base fee of the EXTCODECOPY opcode',
        },
        extcodehash: {
            v: 0,
            d: 'Base fee of the EXTCODEHASH opcode',
        },
        sload: {
            v: 0,
            d: 'Base fee of the SLOAD opcode',
        },
        sstore: {
            v: 0,
            d: 'Base fee of the SSTORE opcode',
        },
    },
    vm: {},
    pow: {},
});
//# sourceMappingURL=2929.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/eips/2930.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/2930.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'EIP-2930',
    comment: 'Optional access lists',
    url: 'https://eips.ethereum.org/EIPS/eip-2930',
    status: 'Final',
    minimumHardfork: 'istanbul',
    requiredEIPs: [2718, 2929],
    gasConfig: {},
    gasPrices: {
        accessListStorageKeyCost: {
            v: 1900,
            d: 'Gas cost per storage key in an Access List transaction',
        },
        accessListAddressCost: {
            v: 2400,
            d: 'Gas cost per storage key in an Access List transaction',
        },
    },
    vm: {},
    pow: {},
});
//# sourceMappingURL=2930.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/eips/3198.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3198.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'EIP-3198',
    number: 3198,
    comment: 'BASEFEE opcode',
    url: 'https://eips.ethereum.org/EIPS/eip-3198',
    status: 'Final',
    minimumHardfork: 'london',
    gasConfig: {},
    gasPrices: {
        basefee: {
            v: 2,
            d: 'Gas cost of the BASEFEE opcode',
        },
    },
    vm: {},
    pow: {},
});
//# sourceMappingURL=3198.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/eips/3529.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3529.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'EIP-3529',
    comment: 'Reduction in refunds',
    url: 'https://eips.ethereum.org/EIPS/eip-3529',
    status: 'Final',
    minimumHardfork: 'berlin',
    requiredEIPs: [2929],
    gasConfig: {
        maxRefundQuotient: {
            v: 5,
            d: 'Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)',
        },
    },
    gasPrices: {
        selfdestructRefund: {
            v: 0,
            d: 'Refunded following a selfdestruct operation',
        },
        sstoreClearRefundEIP2200: {
            v: 4800,
            d: 'Once per SSTORE operation for clearing an originally existing storage slot',
        },
    },
    vm: {},
    pow: {},
});
//# sourceMappingURL=3529.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/eips/3540.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3540.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'EIP-3540',
    number: 3540,
    comment: 'EVM Object Format (EOF) v1',
    url: 'https://eips.ethereum.org/EIPS/eip-3540',
    status: 'Review',
    minimumHardfork: 'london',
    requiredEIPs: [3541],
    gasConfig: {},
    gasPrices: {},
    vm: {},
    pow: {},
});
//# sourceMappingURL=3540.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/eips/3541.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3541.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'EIP-3541',
    comment: 'Reject new contracts starting with the 0xEF byte',
    url: 'https://eips.ethereum.org/EIPS/eip-3541',
    status: 'Final',
    minimumHardfork: 'berlin',
    requiredEIPs: [],
    gasConfig: {},
    gasPrices: {},
    vm: {},
    pow: {},
});
//# sourceMappingURL=3541.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/eips/3554.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3554.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'EIP-3554',
    comment: 'Reduction in refunds',
    url: 'Difficulty Bomb Delay to December 1st 2021',
    status: 'Final',
    minimumHardfork: 'muirGlacier',
    requiredEIPs: [],
    gasConfig: {},
    gasPrices: {},
    vm: {},
    pow: {
        difficultyBombDelay: {
            v: 9500000,
            d: 'the amount of blocks to delay the difficulty bomb with',
        },
    },
});
//# sourceMappingURL=3554.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/eips/3607.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3607.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'EIP-3607',
    number: 3607,
    comment: 'Reject transactions from senders with deployed code',
    url: 'https://eips.ethereum.org/EIPS/eip-3607',
    status: 'Final',
    minimumHardfork: 'chainstart',
    requiredEIPs: [],
    gasConfig: {},
    gasPrices: {},
    vm: {},
    pow: {},
});
//# sourceMappingURL=3607.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/eips/3651.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3651.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'EIP-3651',
    number: 3198,
    comment: 'Warm COINBASE',
    url: 'https://eips.ethereum.org/EIPS/eip-3651',
    status: 'Review',
    minimumHardfork: 'london',
    requiredEIPs: [2929],
    gasConfig: {},
    gasPrices: {},
    vm: {},
    pow: {},
});
//# sourceMappingURL=3651.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/eips/3670.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3670.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'EIP-3670',
    number: 3670,
    comment: 'EOF - Code Validation',
    url: 'https://eips.ethereum.org/EIPS/eip-3670',
    status: 'Review',
    minimumHardfork: 'london',
    requiredEIPs: [3540],
    gasConfig: {},
    gasPrices: {},
    vm: {},
    pow: {},
});
//# sourceMappingURL=3670.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/eips/3675.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3675.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'EIP-3675',
    number: 3675,
    comment: 'Upgrade consensus to Proof-of-Stake',
    url: 'https://eips.ethereum.org/EIPS/eip-3675',
    status: 'Final',
    minimumHardfork: 'london',
    requiredEIPs: [],
    gasConfig: {},
    gasPrices: {},
    vm: {},
    pow: {},
});
//# sourceMappingURL=3675.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/eips/3855.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3855.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'EIP-3855',
    number: 3855,
    comment: 'PUSH0 instruction',
    url: 'https://eips.ethereum.org/EIPS/eip-3855',
    status: 'Review',
    minimumHardfork: 'chainstart',
    requiredEIPs: [],
    gasConfig: {},
    gasPrices: {
        push0: {
            v: 2,
            d: 'Base fee of the PUSH0 opcode',
        },
    },
    vm: {},
    pow: {},
});
//# sourceMappingURL=3855.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/eips/3860.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3860.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'EIP-3860',
    number: 3860,
    comment: 'Limit and meter initcode',
    url: 'https://eips.ethereum.org/EIPS/eip-3860',
    status: 'Review',
    minimumHardfork: 'spuriousDragon',
    requiredEIPs: [],
    gasConfig: {},
    gasPrices: {
        initCodeWordCost: {
            v: 2,
            d: 'Gas to pay for each word (32 bytes) of initcode when creating a contract',
        },
    },
    vm: {
        maxInitCodeSize: {
            v: 49152,
            d: 'Maximum length of initialization code when creating a contract',
        },
    },
    pow: {},
});
//# sourceMappingURL=3860.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/eips/4345.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/4345.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'EIP-4345',
    number: 4345,
    comment: 'Difficulty Bomb Delay to June 2022',
    url: 'https://eips.ethereum.org/EIPS/eip-4345',
    status: 'Final',
    minimumHardfork: 'london',
    gasConfig: {},
    gasPrices: {},
    vm: {},
    pow: {
        difficultyBombDelay: {
            v: 10700000,
            d: 'the amount of blocks to delay the difficulty bomb with',
        },
    },
});
//# sourceMappingURL=4345.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/eips/4399.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/4399.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'EIP-4399',
    number: 4399,
    comment: 'Supplant DIFFICULTY opcode with PREVRANDAO',
    url: 'https://eips.ethereum.org/EIPS/eip-4399',
    status: 'Review',
    minimumHardfork: 'london',
    requiredEIPs: [],
    gasConfig: {},
    gasPrices: {},
    vm: {},
    pow: {},
});
//# sourceMappingURL=4399.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/eips/5133.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/5133.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'EIP-5133',
    number: 5133,
    comment: 'Delaying Difficulty Bomb to mid-September 2022',
    url: 'https://eips.ethereum.org/EIPS/eip-5133',
    status: 'Draft',
    minimumHardfork: 'grayGlacier',
    gasConfig: {},
    gasPrices: {},
    vm: {},
    pow: {
        difficultyBombDelay: {
            v: 11400000,
            d: 'the amount of blocks to delay the difficulty bomb with',
        },
    },
});
//# sourceMappingURL=5133.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/eips/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EIPs: () => (/* binding */ EIPs)
/* harmony export */ });
/* harmony import */ var _1153_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./1153.js */ "./node_modules/web3-eth-accounts/lib/esm/common/eips/1153.js");
/* harmony import */ var _1559_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./1559.js */ "./node_modules/web3-eth-accounts/lib/esm/common/eips/1559.js");
/* harmony import */ var _2315_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./2315.js */ "./node_modules/web3-eth-accounts/lib/esm/common/eips/2315.js");
/* harmony import */ var _2537_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./2537.js */ "./node_modules/web3-eth-accounts/lib/esm/common/eips/2537.js");
/* harmony import */ var _2565_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./2565.js */ "./node_modules/web3-eth-accounts/lib/esm/common/eips/2565.js");
/* harmony import */ var _2718_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./2718.js */ "./node_modules/web3-eth-accounts/lib/esm/common/eips/2718.js");
/* harmony import */ var _2929_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./2929.js */ "./node_modules/web3-eth-accounts/lib/esm/common/eips/2929.js");
/* harmony import */ var _2930_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./2930.js */ "./node_modules/web3-eth-accounts/lib/esm/common/eips/2930.js");
/* harmony import */ var _3198_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./3198.js */ "./node_modules/web3-eth-accounts/lib/esm/common/eips/3198.js");
/* harmony import */ var _3529_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./3529.js */ "./node_modules/web3-eth-accounts/lib/esm/common/eips/3529.js");
/* harmony import */ var _3540_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./3540.js */ "./node_modules/web3-eth-accounts/lib/esm/common/eips/3540.js");
/* harmony import */ var _3541_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./3541.js */ "./node_modules/web3-eth-accounts/lib/esm/common/eips/3541.js");
/* harmony import */ var _3554_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./3554.js */ "./node_modules/web3-eth-accounts/lib/esm/common/eips/3554.js");
/* harmony import */ var _3607_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./3607.js */ "./node_modules/web3-eth-accounts/lib/esm/common/eips/3607.js");
/* harmony import */ var _3651_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./3651.js */ "./node_modules/web3-eth-accounts/lib/esm/common/eips/3651.js");
/* harmony import */ var _3670_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./3670.js */ "./node_modules/web3-eth-accounts/lib/esm/common/eips/3670.js");
/* harmony import */ var _3675_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./3675.js */ "./node_modules/web3-eth-accounts/lib/esm/common/eips/3675.js");
/* harmony import */ var _3855_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./3855.js */ "./node_modules/web3-eth-accounts/lib/esm/common/eips/3855.js");
/* harmony import */ var _3860_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./3860.js */ "./node_modules/web3-eth-accounts/lib/esm/common/eips/3860.js");
/* harmony import */ var _4345_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./4345.js */ "./node_modules/web3-eth-accounts/lib/esm/common/eips/4345.js");
/* harmony import */ var _4399_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./4399.js */ "./node_modules/web3-eth-accounts/lib/esm/common/eips/4399.js");
/* harmony import */ var _5133_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./5133.js */ "./node_modules/web3-eth-accounts/lib/esm/common/eips/5133.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/






















const EIPs = {
    1153: _1153_js__WEBPACK_IMPORTED_MODULE_0__["default"],
    1559: _1559_js__WEBPACK_IMPORTED_MODULE_1__["default"],
    2315: _2315_js__WEBPACK_IMPORTED_MODULE_2__["default"],
    2537: _2537_js__WEBPACK_IMPORTED_MODULE_3__["default"],
    2565: _2565_js__WEBPACK_IMPORTED_MODULE_4__["default"],
    2718: _2718_js__WEBPACK_IMPORTED_MODULE_5__["default"],
    2929: _2929_js__WEBPACK_IMPORTED_MODULE_6__["default"],
    2930: _2930_js__WEBPACK_IMPORTED_MODULE_7__["default"],
    3198: _3198_js__WEBPACK_IMPORTED_MODULE_8__["default"],
    3529: _3529_js__WEBPACK_IMPORTED_MODULE_9__["default"],
    3540: _3540_js__WEBPACK_IMPORTED_MODULE_10__["default"],
    3541: _3541_js__WEBPACK_IMPORTED_MODULE_11__["default"],
    3554: _3554_js__WEBPACK_IMPORTED_MODULE_12__["default"],
    3607: _3607_js__WEBPACK_IMPORTED_MODULE_13__["default"],
    3651: _3651_js__WEBPACK_IMPORTED_MODULE_14__["default"],
    3670: _3670_js__WEBPACK_IMPORTED_MODULE_15__["default"],
    3675: _3675_js__WEBPACK_IMPORTED_MODULE_16__["default"],
    3855: _3855_js__WEBPACK_IMPORTED_MODULE_17__["default"],
    3860: _3860_js__WEBPACK_IMPORTED_MODULE_18__["default"],
    4345: _4345_js__WEBPACK_IMPORTED_MODULE_19__["default"],
    4399: _4399_js__WEBPACK_IMPORTED_MODULE_20__["default"],
    5133: _5133_js__WEBPACK_IMPORTED_MODULE_21__["default"],
};
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/enums.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/enums.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Chain: () => (/* binding */ Chain),
/* harmony export */   ConsensusAlgorithm: () => (/* binding */ ConsensusAlgorithm),
/* harmony export */   ConsensusType: () => (/* binding */ ConsensusType),
/* harmony export */   CustomChain: () => (/* binding */ CustomChain),
/* harmony export */   Hardfork: () => (/* binding */ Hardfork)
/* harmony export */ });
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var Chain;
(function (Chain) {
    Chain[Chain["Mainnet"] = 1] = "Mainnet";
    Chain[Chain["Goerli"] = 5] = "Goerli";
    Chain[Chain["Sepolia"] = 11155111] = "Sepolia";
})(Chain || (Chain = {}));
var Hardfork;
(function (Hardfork) {
    Hardfork["Chainstart"] = "chainstart";
    Hardfork["Homestead"] = "homestead";
    Hardfork["Dao"] = "dao";
    Hardfork["TangerineWhistle"] = "tangerineWhistle";
    Hardfork["SpuriousDragon"] = "spuriousDragon";
    Hardfork["Byzantium"] = "byzantium";
    Hardfork["Constantinople"] = "constantinople";
    Hardfork["Petersburg"] = "petersburg";
    Hardfork["Istanbul"] = "istanbul";
    Hardfork["MuirGlacier"] = "muirGlacier";
    Hardfork["Berlin"] = "berlin";
    Hardfork["London"] = "london";
    Hardfork["ArrowGlacier"] = "arrowGlacier";
    Hardfork["GrayGlacier"] = "grayGlacier";
    Hardfork["MergeForkIdTransition"] = "mergeForkIdTransition";
    Hardfork["Merge"] = "merge";
    Hardfork["Shanghai"] = "shanghai";
    Hardfork["ShardingForkDev"] = "shardingFork";
})(Hardfork || (Hardfork = {}));
var ConsensusType;
(function (ConsensusType) {
    ConsensusType["ProofOfStake"] = "pos";
    ConsensusType["ProofOfWork"] = "pow";
    ConsensusType["ProofOfAuthority"] = "poa";
})(ConsensusType || (ConsensusType = {}));
var ConsensusAlgorithm;
(function (ConsensusAlgorithm) {
    ConsensusAlgorithm["Ethash"] = "ethash";
    ConsensusAlgorithm["Clique"] = "clique";
    ConsensusAlgorithm["Casper"] = "casper";
})(ConsensusAlgorithm || (ConsensusAlgorithm = {}));
var CustomChain;
(function (CustomChain) {
    /**
     * Polygon (Matic) Mainnet
     *
     * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)
     */
    CustomChain["PolygonMainnet"] = "polygon-mainnet";
    /**
     * Polygon (Matic) Mumbai Testnet
     *
     * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)
     */
    CustomChain["PolygonMumbai"] = "polygon-mumbai";
    /**
     * Arbitrum Rinkeby Testnet
     *
     * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)
     */
    CustomChain["ArbitrumRinkebyTestnet"] = "arbitrum-rinkeby-testnet";
    /**
     * Arbitrum One - mainnet for Arbitrum roll-up
     *
     * - [Documentation](https://developer.offchainlabs.com/public-chains)
     */
    CustomChain["ArbitrumOne"] = "arbitrum-one";
    /**
     * xDai EVM sidechain with a native stable token
     *
     * - [Documentation](https://www.xdaichain.com/)
     */
    CustomChain["xDaiChain"] = "x-dai-chain";
    /**
     * Optimistic Kovan - testnet for Optimism roll-up
     *
     * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)
     */
    CustomChain["OptimisticKovan"] = "optimistic-kovan";
    /**
     * Optimistic Ethereum - mainnet for Optimism roll-up
     *
     * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)
     */
    CustomChain["OptimisticEthereum"] = "optimistic-ethereum";
})(CustomChain || (CustomChain = {}));
//# sourceMappingURL=enums.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/arrowGlacier.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/arrowGlacier.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'arrowGlacier',
    comment: 'HF to delay the difficulty bomb',
    url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/arrow-glacier.md',
    status: 'Final',
    eips: [4345],
    gasConfig: {},
    gasPrices: {},
    vm: {},
    pow: {},
});
//# sourceMappingURL=arrowGlacier.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/berlin.js":
/*!***************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/berlin.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'berlin',
    comment: 'HF targeted for July 2020 following the Muir Glacier HF',
    url: 'https://eips.ethereum.org/EIPS/eip-2070',
    status: 'Final',
    eips: [2565, 2929, 2718, 2930],
});
//# sourceMappingURL=berlin.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/byzantium.js":
/*!******************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/byzantium.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'byzantium',
    comment: 'Hardfork with new precompiles, instructions and other protocol changes',
    url: 'https://eips.ethereum.org/EIPS/eip-609',
    status: 'Final',
    gasConfig: {},
    gasPrices: {
        modexpGquaddivisor: {
            v: 20,
            d: 'Gquaddivisor from modexp precompile for gas calculation',
        },
        ecAdd: {
            v: 500,
            d: 'Gas costs for curve addition precompile',
        },
        ecMul: {
            v: 40000,
            d: 'Gas costs for curve multiplication precompile',
        },
        ecPairing: {
            v: 100000,
            d: 'Base gas costs for curve pairing precompile',
        },
        ecPairingWord: {
            v: 80000,
            d: 'Gas costs regarding curve pairing precompile input length',
        },
        revert: {
            v: 0,
            d: 'Base fee of the REVERT opcode',
        },
        staticcall: {
            v: 700,
            d: 'Base fee of the STATICCALL opcode',
        },
        returndatasize: {
            v: 2,
            d: 'Base fee of the RETURNDATASIZE opcode',
        },
        returndatacopy: {
            v: 3,
            d: 'Base fee of the RETURNDATACOPY opcode',
        },
    },
    vm: {},
    pow: {
        minerReward: {
            v: '3000000000000000000',
            d: 'the amount a miner get rewarded for mining a block',
        },
        difficultyBombDelay: {
            v: 3000000,
            d: 'the amount of blocks to delay the difficulty bomb with',
        },
    },
});
//# sourceMappingURL=byzantium.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/chainstart.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/chainstart.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'chainstart',
    comment: 'Start of the Ethereum main chain',
    url: '',
    status: '',
    gasConfig: {
        minGasLimit: {
            v: 5000,
            d: 'Minimum the gas limit may ever be',
        },
        gasLimitBoundDivisor: {
            v: 1024,
            d: 'The bound divisor of the gas limit, used in update calculations',
        },
        maxRefundQuotient: {
            v: 2,
            d: 'Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)',
        },
    },
    gasPrices: {
        base: {
            v: 2,
            d: 'Gas base cost, used e.g. for ChainID opcode (Istanbul)',
        },
        tierStep: {
            v: [0, 2, 3, 5, 8, 10, 20],
            d: 'Once per operation, for a selection of them',
        },
        exp: {
            v: 10,
            d: 'Base fee of the EXP opcode',
        },
        expByte: {
            v: 10,
            d: 'Times ceil(log256(exponent)) for the EXP instruction',
        },
        sha3: {
            v: 30,
            d: 'Base fee of the SHA3 opcode',
        },
        sha3Word: {
            v: 6,
            d: "Once per word of the SHA3 operation's data",
        },
        sload: {
            v: 50,
            d: 'Base fee of the SLOAD opcode',
        },
        sstoreSet: {
            v: 20000,
            d: 'Once per SSTORE operation if the zeroness changes from zero',
        },
        sstoreReset: {
            v: 5000,
            d: 'Once per SSTORE operation if the zeroness does not change from zero',
        },
        sstoreRefund: {
            v: 15000,
            d: 'Once per SSTORE operation if the zeroness changes to zero',
        },
        jumpdest: {
            v: 1,
            d: 'Base fee of the JUMPDEST opcode',
        },
        log: {
            v: 375,
            d: 'Base fee of the LOG opcode',
        },
        logData: {
            v: 8,
            d: "Per byte in a LOG* operation's data",
        },
        logTopic: {
            v: 375,
            d: 'Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas',
        },
        create: {
            v: 32000,
            d: 'Base fee of the CREATE opcode',
        },
        call: {
            v: 40,
            d: 'Base fee of the CALL opcode',
        },
        callStipend: {
            v: 2300,
            d: 'Free gas given at beginning of call',
        },
        callValueTransfer: {
            v: 9000,
            d: 'Paid for CALL when the value transfor is non-zero',
        },
        callNewAccount: {
            v: 25000,
            d: "Paid for CALL when the destination address didn't exist prior",
        },
        selfdestructRefund: {
            v: 24000,
            d: 'Refunded following a selfdestruct operation',
        },
        memory: {
            v: 3,
            d: 'Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL',
        },
        quadCoeffDiv: {
            v: 512,
            d: 'Divisor for the quadratic particle of the memory cost equation',
        },
        createData: {
            v: 200,
            d: '',
        },
        tx: {
            v: 21000,
            d: 'Per transaction. NOTE: Not payable on data of calls between transactions',
        },
        txCreation: {
            v: 32000,
            d: 'The cost of creating a contract via tx',
        },
        txDataZero: {
            v: 4,
            d: 'Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions',
        },
        txDataNonZero: {
            v: 68,
            d: 'Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions',
        },
        copy: {
            v: 3,
            d: 'Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added',
        },
        ecRecover: {
            v: 3000,
            d: '',
        },
        sha256: {
            v: 60,
            d: '',
        },
        sha256Word: {
            v: 12,
            d: '',
        },
        ripemd160: {
            v: 600,
            d: '',
        },
        ripemd160Word: {
            v: 120,
            d: '',
        },
        identity: {
            v: 15,
            d: '',
        },
        identityWord: {
            v: 3,
            d: '',
        },
        stop: {
            v: 0,
            d: 'Base fee of the STOP opcode',
        },
        add: {
            v: 3,
            d: 'Base fee of the ADD opcode',
        },
        mul: {
            v: 5,
            d: 'Base fee of the MUL opcode',
        },
        sub: {
            v: 3,
            d: 'Base fee of the SUB opcode',
        },
        div: {
            v: 5,
            d: 'Base fee of the DIV opcode',
        },
        sdiv: {
            v: 5,
            d: 'Base fee of the SDIV opcode',
        },
        mod: {
            v: 5,
            d: 'Base fee of the MOD opcode',
        },
        smod: {
            v: 5,
            d: 'Base fee of the SMOD opcode',
        },
        addmod: {
            v: 8,
            d: 'Base fee of the ADDMOD opcode',
        },
        mulmod: {
            v: 8,
            d: 'Base fee of the MULMOD opcode',
        },
        signextend: {
            v: 5,
            d: 'Base fee of the SIGNEXTEND opcode',
        },
        lt: {
            v: 3,
            d: 'Base fee of the LT opcode',
        },
        gt: {
            v: 3,
            d: 'Base fee of the GT opcode',
        },
        slt: {
            v: 3,
            d: 'Base fee of the SLT opcode',
        },
        sgt: {
            v: 3,
            d: 'Base fee of the SGT opcode',
        },
        eq: {
            v: 3,
            d: 'Base fee of the EQ opcode',
        },
        iszero: {
            v: 3,
            d: 'Base fee of the ISZERO opcode',
        },
        and: {
            v: 3,
            d: 'Base fee of the AND opcode',
        },
        or: {
            v: 3,
            d: 'Base fee of the OR opcode',
        },
        xor: {
            v: 3,
            d: 'Base fee of the XOR opcode',
        },
        not: {
            v: 3,
            d: 'Base fee of the NOT opcode',
        },
        byte: {
            v: 3,
            d: 'Base fee of the BYTE opcode',
        },
        address: {
            v: 2,
            d: 'Base fee of the ADDRESS opcode',
        },
        balance: {
            v: 20,
            d: 'Base fee of the BALANCE opcode',
        },
        origin: {
            v: 2,
            d: 'Base fee of the ORIGIN opcode',
        },
        caller: {
            v: 2,
            d: 'Base fee of the CALLER opcode',
        },
        callvalue: {
            v: 2,
            d: 'Base fee of the CALLVALUE opcode',
        },
        calldataload: {
            v: 3,
            d: 'Base fee of the CALLDATALOAD opcode',
        },
        calldatasize: {
            v: 2,
            d: 'Base fee of the CALLDATASIZE opcode',
        },
        calldatacopy: {
            v: 3,
            d: 'Base fee of the CALLDATACOPY opcode',
        },
        codesize: {
            v: 2,
            d: 'Base fee of the CODESIZE opcode',
        },
        codecopy: {
            v: 3,
            d: 'Base fee of the CODECOPY opcode',
        },
        gasprice: {
            v: 2,
            d: 'Base fee of the GASPRICE opcode',
        },
        extcodesize: {
            v: 20,
            d: 'Base fee of the EXTCODESIZE opcode',
        },
        extcodecopy: {
            v: 20,
            d: 'Base fee of the EXTCODECOPY opcode',
        },
        blockhash: {
            v: 20,
            d: 'Base fee of the BLOCKHASH opcode',
        },
        coinbase: {
            v: 2,
            d: 'Base fee of the COINBASE opcode',
        },
        timestamp: {
            v: 2,
            d: 'Base fee of the TIMESTAMP opcode',
        },
        number: {
            v: 2,
            d: 'Base fee of the NUMBER opcode',
        },
        difficulty: {
            v: 2,
            d: 'Base fee of the DIFFICULTY opcode',
        },
        gaslimit: {
            v: 2,
            d: 'Base fee of the GASLIMIT opcode',
        },
        pop: {
            v: 2,
            d: 'Base fee of the POP opcode',
        },
        mload: {
            v: 3,
            d: 'Base fee of the MLOAD opcode',
        },
        mstore: {
            v: 3,
            d: 'Base fee of the MSTORE opcode',
        },
        mstore8: {
            v: 3,
            d: 'Base fee of the MSTORE8 opcode',
        },
        sstore: {
            v: 0,
            d: 'Base fee of the SSTORE opcode',
        },
        jump: {
            v: 8,
            d: 'Base fee of the JUMP opcode',
        },
        jumpi: {
            v: 10,
            d: 'Base fee of the JUMPI opcode',
        },
        pc: {
            v: 2,
            d: 'Base fee of the PC opcode',
        },
        msize: {
            v: 2,
            d: 'Base fee of the MSIZE opcode',
        },
        gas: {
            v: 2,
            d: 'Base fee of the GAS opcode',
        },
        push: {
            v: 3,
            d: 'Base fee of the PUSH opcode',
        },
        dup: {
            v: 3,
            d: 'Base fee of the DUP opcode',
        },
        swap: {
            v: 3,
            d: 'Base fee of the SWAP opcode',
        },
        callcode: {
            v: 40,
            d: 'Base fee of the CALLCODE opcode',
        },
        return: {
            v: 0,
            d: 'Base fee of the RETURN opcode',
        },
        invalid: {
            v: 0,
            d: 'Base fee of the INVALID opcode',
        },
        selfdestruct: {
            v: 0,
            d: 'Base fee of the SELFDESTRUCT opcode',
        },
    },
    vm: {
        stackLimit: {
            v: 1024,
            d: 'Maximum size of VM stack allowed',
        },
        callCreateDepth: {
            v: 1024,
            d: 'Maximum depth of call/create stack',
        },
        maxExtraDataSize: {
            v: 32,
            d: 'Maximum size extra data may be after Genesis',
        },
    },
    pow: {
        minimumDifficulty: {
            v: 131072,
            d: 'The minimum that the difficulty may ever be',
        },
        difficultyBoundDivisor: {
            v: 2048,
            d: 'The bound divisor of the difficulty, used in the update calculations',
        },
        durationLimit: {
            v: 13,
            d: 'The decision boundary on the blocktime duration used to determine whether difficulty should go up or not',
        },
        epochDuration: {
            v: 30000,
            d: 'Duration between proof-of-work epochs',
        },
        timebombPeriod: {
            v: 100000,
            d: 'Exponential difficulty timebomb period',
        },
        minerReward: {
            v: '5000000000000000000',
            d: 'the amount a miner get rewarded for mining a block',
        },
        difficultyBombDelay: {
            v: 0,
            d: 'the amount of blocks to delay the difficulty bomb with',
        },
    },
});
//# sourceMappingURL=chainstart.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/constantinople.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/constantinople.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'constantinople',
    comment: 'Postponed hardfork including EIP-1283 (SSTORE gas metering changes)',
    url: 'https://eips.ethereum.org/EIPS/eip-1013',
    status: 'Final',
    gasConfig: {},
    gasPrices: {
        netSstoreNoopGas: {
            v: 200,
            d: "Once per SSTORE operation if the value doesn't change",
        },
        netSstoreInitGas: {
            v: 20000,
            d: 'Once per SSTORE operation from clean zero',
        },
        netSstoreCleanGas: {
            v: 5000,
            d: 'Once per SSTORE operation from clean non-zero',
        },
        netSstoreDirtyGas: {
            v: 200,
            d: 'Once per SSTORE operation from dirty',
        },
        netSstoreClearRefund: {
            v: 15000,
            d: 'Once per SSTORE operation for clearing an originally existing storage slot',
        },
        netSstoreResetRefund: {
            v: 4800,
            d: 'Once per SSTORE operation for resetting to the original non-zero value',
        },
        netSstoreResetClearRefund: {
            v: 19800,
            d: 'Once per SSTORE operation for resetting to the original zero value',
        },
        shl: {
            v: 3,
            d: 'Base fee of the SHL opcode',
        },
        shr: {
            v: 3,
            d: 'Base fee of the SHR opcode',
        },
        sar: {
            v: 3,
            d: 'Base fee of the SAR opcode',
        },
        extcodehash: {
            v: 400,
            d: 'Base fee of the EXTCODEHASH opcode',
        },
        create2: {
            v: 32000,
            d: 'Base fee of the CREATE2 opcode',
        },
    },
    vm: {},
    pow: {
        minerReward: {
            v: '2000000000000000000',
            d: 'The amount a miner gets rewarded for mining a block',
        },
        difficultyBombDelay: {
            v: 5000000,
            d: 'the amount of blocks to delay the difficulty bomb with',
        },
    },
});
//# sourceMappingURL=constantinople.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/dao.js":
/*!************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/dao.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'dao',
    comment: 'DAO rescue hardfork',
    url: 'https://eips.ethereum.org/EIPS/eip-779',
    status: 'Final',
    gasConfig: {},
    gasPrices: {},
    vm: {},
    pow: {},
});
//# sourceMappingURL=dao.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/grayGlacier.js":
/*!********************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/grayGlacier.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'grayGlacier',
    comment: 'Delaying the difficulty bomb to Mid September 2022',
    url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/gray-glacier.md',
    status: 'Draft',
    eips: [5133],
    gasConfig: {},
    gasPrices: {},
    vm: {},
    pow: {},
});
//# sourceMappingURL=grayGlacier.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/homestead.js":
/*!******************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/homestead.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'homestead',
    comment: 'Homestead hardfork with protocol and network changes',
    url: 'https://eips.ethereum.org/EIPS/eip-606',
    status: 'Final',
    gasConfig: {},
    gasPrices: {
        delegatecall: {
            v: 40,
            d: 'Base fee of the DELEGATECALL opcode',
        },
    },
    vm: {},
    pow: {},
});
//# sourceMappingURL=homestead.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   hardforks: () => (/* binding */ hardforks)
/* harmony export */ });
/* harmony import */ var _chainstart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chainstart.js */ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/chainstart.js");
/* harmony import */ var _dao_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dao.js */ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/dao.js");
/* harmony import */ var _homestead_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./homestead.js */ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/homestead.js");
/* harmony import */ var _tangerineWhistle_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tangerineWhistle.js */ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/tangerineWhistle.js");
/* harmony import */ var _spuriousDragon_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./spuriousDragon.js */ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/spuriousDragon.js");
/* harmony import */ var _byzantium_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./byzantium.js */ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/byzantium.js");
/* harmony import */ var _constantinople_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./constantinople.js */ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/constantinople.js");
/* harmony import */ var _petersburg_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./petersburg.js */ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/petersburg.js");
/* harmony import */ var _istanbul_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./istanbul.js */ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/istanbul.js");
/* harmony import */ var _muirGlacier_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./muirGlacier.js */ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/muirGlacier.js");
/* harmony import */ var _berlin_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./berlin.js */ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/berlin.js");
/* harmony import */ var _london_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./london.js */ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/london.js");
/* harmony import */ var _shanghai_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./shanghai.js */ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/shanghai.js");
/* harmony import */ var _arrowGlacier_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./arrowGlacier.js */ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/arrowGlacier.js");
/* harmony import */ var _grayGlacier_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./grayGlacier.js */ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/grayGlacier.js");
/* harmony import */ var _mergeForkIdTransition_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./mergeForkIdTransition.js */ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/mergeForkIdTransition.js");
/* harmony import */ var _merge_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./merge.js */ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/merge.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

















const hardforks = {
    chainstart: _chainstart_js__WEBPACK_IMPORTED_MODULE_0__["default"],
    homestead: _homestead_js__WEBPACK_IMPORTED_MODULE_2__["default"],
    dao: _dao_js__WEBPACK_IMPORTED_MODULE_1__["default"],
    tangerineWhistle: _tangerineWhistle_js__WEBPACK_IMPORTED_MODULE_3__["default"],
    spuriousDragon: _spuriousDragon_js__WEBPACK_IMPORTED_MODULE_4__["default"],
    byzantium: _byzantium_js__WEBPACK_IMPORTED_MODULE_5__["default"],
    constantinople: _constantinople_js__WEBPACK_IMPORTED_MODULE_6__["default"],
    petersburg: _petersburg_js__WEBPACK_IMPORTED_MODULE_7__["default"],
    istanbul: _istanbul_js__WEBPACK_IMPORTED_MODULE_8__["default"],
    muirGlacier: _muirGlacier_js__WEBPACK_IMPORTED_MODULE_9__["default"],
    berlin: _berlin_js__WEBPACK_IMPORTED_MODULE_10__["default"],
    london: _london_js__WEBPACK_IMPORTED_MODULE_11__["default"],
    shanghai: _shanghai_js__WEBPACK_IMPORTED_MODULE_12__["default"],
    arrowGlacier: _arrowGlacier_js__WEBPACK_IMPORTED_MODULE_13__["default"],
    grayGlacier: _grayGlacier_js__WEBPACK_IMPORTED_MODULE_14__["default"],
    mergeForkIdTransition: _mergeForkIdTransition_js__WEBPACK_IMPORTED_MODULE_15__["default"],
    merge: _merge_js__WEBPACK_IMPORTED_MODULE_16__["default"],
};
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/istanbul.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/istanbul.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'istanbul',
    comment: 'HF targeted for December 2019 following the Constantinople/Petersburg HF',
    url: 'https://eips.ethereum.org/EIPS/eip-1679',
    status: 'Final',
    gasConfig: {},
    gasPrices: {
        blake2Round: {
            v: 1,
            d: 'Gas cost per round for the Blake2 F precompile',
        },
        ecAdd: {
            v: 150,
            d: 'Gas costs for curve addition precompile',
        },
        ecMul: {
            v: 6000,
            d: 'Gas costs for curve multiplication precompile',
        },
        ecPairing: {
            v: 45000,
            d: 'Base gas costs for curve pairing precompile',
        },
        ecPairingWord: {
            v: 34000,
            d: 'Gas costs regarding curve pairing precompile input length',
        },
        txDataNonZero: {
            v: 16,
            d: 'Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions',
        },
        sstoreSentryGasEIP2200: {
            v: 2300,
            d: 'Minimum gas required to be present for an SSTORE call, not consumed',
        },
        sstoreNoopGasEIP2200: {
            v: 800,
            d: "Once per SSTORE operation if the value doesn't change",
        },
        sstoreDirtyGasEIP2200: {
            v: 800,
            d: 'Once per SSTORE operation if a dirty value is changed',
        },
        sstoreInitGasEIP2200: {
            v: 20000,
            d: 'Once per SSTORE operation from clean zero to non-zero',
        },
        sstoreInitRefundEIP2200: {
            v: 19200,
            d: 'Once per SSTORE operation for resetting to the original zero value',
        },
        sstoreCleanGasEIP2200: {
            v: 5000,
            d: 'Once per SSTORE operation from clean non-zero to something else',
        },
        sstoreCleanRefundEIP2200: {
            v: 4200,
            d: 'Once per SSTORE operation for resetting to the original non-zero value',
        },
        sstoreClearRefundEIP2200: {
            v: 15000,
            d: 'Once per SSTORE operation for clearing an originally existing storage slot',
        },
        balance: {
            v: 700,
            d: 'Base fee of the BALANCE opcode',
        },
        extcodehash: {
            v: 700,
            d: 'Base fee of the EXTCODEHASH opcode',
        },
        chainid: {
            v: 2,
            d: 'Base fee of the CHAINID opcode',
        },
        selfbalance: {
            v: 5,
            d: 'Base fee of the SELFBALANCE opcode',
        },
        sload: {
            v: 800,
            d: 'Base fee of the SLOAD opcode',
        },
    },
    vm: {},
    pow: {},
});
//# sourceMappingURL=istanbul.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/london.js":
/*!***************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/london.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'london',
    comment: 'HF targeted for July 2021 following the Berlin fork',
    url: 'https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/mainnet-upgrades/london.md',
    status: 'Final',
    eips: [1559, 3198, 3529, 3541],
});
//# sourceMappingURL=london.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/merge.js":
/*!**************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/merge.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'merge',
    comment: 'Hardfork to upgrade the consensus mechanism to Proof-of-Stake',
    url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/merge.md',
    status: 'Final',
    consensus: {
        type: 'pos',
        algorithm: 'casper',
        casper: {},
    },
    eips: [3675, 4399],
});
//# sourceMappingURL=merge.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/mergeForkIdTransition.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/mergeForkIdTransition.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'mergeForkIdTransition',
    comment: 'Pre-merge hardfork to fork off non-upgraded clients',
    url: 'https://eips.ethereum.org/EIPS/eip-3675',
    status: 'Draft',
    eips: [],
});
//# sourceMappingURL=mergeForkIdTransition.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/muirGlacier.js":
/*!********************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/muirGlacier.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'muirGlacier',
    comment: 'HF to delay the difficulty bomb',
    url: 'https://eips.ethereum.org/EIPS/eip-2384',
    status: 'Final',
    gasConfig: {},
    gasPrices: {},
    vm: {},
    pow: {
        difficultyBombDelay: {
            v: 9000000,
            d: 'the amount of blocks to delay the difficulty bomb with',
        },
    },
});
//# sourceMappingURL=muirGlacier.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/petersburg.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/petersburg.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'petersburg',
    comment: 'Aka constantinopleFix, removes EIP-1283, activate together with or after constantinople',
    url: 'https://eips.ethereum.org/EIPS/eip-1716',
    status: 'Final',
    gasConfig: {},
    gasPrices: {
        netSstoreNoopGas: {
            v: null,
            d: 'Removed along EIP-1283',
        },
        netSstoreInitGas: {
            v: null,
            d: 'Removed along EIP-1283',
        },
        netSstoreCleanGas: {
            v: null,
            d: 'Removed along EIP-1283',
        },
        netSstoreDirtyGas: {
            v: null,
            d: 'Removed along EIP-1283',
        },
        netSstoreClearRefund: {
            v: null,
            d: 'Removed along EIP-1283',
        },
        netSstoreResetRefund: {
            v: null,
            d: 'Removed along EIP-1283',
        },
        netSstoreResetClearRefund: {
            v: null,
            d: 'Removed along EIP-1283',
        },
    },
    vm: {},
    pow: {},
});
//# sourceMappingURL=petersburg.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/shanghai.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/shanghai.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'shanghai',
    comment: 'Next feature hardfork after the merge hardfork having withdrawals, warm coinbase, push0, limit/meter initcode',
    url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/shanghai.md',
    status: 'Final',
    eips: [3651, 3855, 3860, 4895],
});
//# sourceMappingURL=shanghai.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/spuriousDragon.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/spuriousDragon.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'spuriousDragon',
    comment: 'HF with EIPs for simple replay attack protection, EXP cost increase, state trie clearing, contract code size limit',
    url: 'https://eips.ethereum.org/EIPS/eip-607',
    status: 'Final',
    gasConfig: {},
    gasPrices: {
        expByte: {
            v: 50,
            d: 'Times ceil(log256(exponent)) for the EXP instruction',
        },
    },
    vm: {
        maxCodeSize: {
            v: 24576,
            d: 'Maximum length of contract code',
        },
    },
    pow: {},
});
//# sourceMappingURL=spuriousDragon.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/hardforks/tangerineWhistle.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/tangerineWhistle.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    name: 'tangerineWhistle',
    comment: 'Hardfork with gas cost changes for IO-heavy operations',
    url: 'https://eips.ethereum.org/EIPS/eip-608',
    status: 'Final',
    gasConfig: {},
    gasPrices: {
        sload: {
            v: 200,
            d: 'Once per SLOAD operation',
        },
        call: {
            v: 700,
            d: 'Once per CALL operation & message call transaction',
        },
        extcodesize: {
            v: 700,
            d: 'Base fee of the EXTCODESIZE opcode',
        },
        extcodecopy: {
            v: 700,
            d: 'Base fee of the EXTCODECOPY opcode',
        },
        balance: {
            v: 400,
            d: 'Base fee of the BALANCE opcode',
        },
        delegatecall: {
            v: 700,
            d: 'Base fee of the DELEGATECALL opcode',
        },
        callcode: {
            v: 700,
            d: 'Base fee of the CALLCODE opcode',
        },
        selfdestruct: {
            v: 5000,
            d: 'Base fee of the SELFDESTRUCT opcode',
        },
    },
    vm: {},
    pow: {},
});
//# sourceMappingURL=tangerineWhistle.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Chain: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_1__.Chain),
/* harmony export */   Common: () => (/* reexport safe */ _common_js__WEBPACK_IMPORTED_MODULE_0__.Common),
/* harmony export */   ConsensusAlgorithm: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_1__.ConsensusAlgorithm),
/* harmony export */   ConsensusType: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_1__.ConsensusType),
/* harmony export */   CustomChain: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_1__.CustomChain),
/* harmony export */   Hardfork: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_1__.Hardfork),
/* harmony export */   TypeOutput: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.TypeOutput),
/* harmony export */   assertIsUint8Array: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.assertIsUint8Array),
/* harmony export */   bigIntToHex: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.bigIntToHex),
/* harmony export */   bigIntToUint8Array: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.bigIntToUint8Array),
/* harmony export */   bigIntToUnpaddedUint8Array: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.bigIntToUnpaddedUint8Array),
/* harmony export */   ecrecover: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.ecrecover),
/* harmony export */   intToUint8Array: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.intToUint8Array),
/* harmony export */   padToEven: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.padToEven),
/* harmony export */   parseGethGenesis: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.parseGethGenesis),
/* harmony export */   setLengthLeft: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.setLengthLeft),
/* harmony export */   stripHexPrefix: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.stripHexPrefix),
/* harmony export */   stripZeros: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.stripZeros),
/* harmony export */   toType: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.toType),
/* harmony export */   toUint8Array: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.toUint8Array),
/* harmony export */   uint8ArrayToBigInt: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.uint8ArrayToBigInt),
/* harmony export */   unpadUint8Array: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.unpadUint8Array),
/* harmony export */   zeros: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.zeros)
/* harmony export */ });
/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ "./node_modules/web3-eth-accounts/lib/esm/common/common.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enums.js */ "./node_modules/web3-eth-accounts/lib/esm/common/enums.js");
/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types.js */ "./node_modules/web3-eth-accounts/lib/esm/common/types.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-accounts/lib/esm/common/utils.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
// @ethereumjs/common version 3.1.1




//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/types.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/types.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TypeOutput: () => (/* binding */ TypeOutput)
/* harmony export */ });
/**
 * Type output options
 */
var TypeOutput;
(function (TypeOutput) {
    TypeOutput[TypeOutput["Number"] = 0] = "Number";
    TypeOutput[TypeOutput["BigInt"] = 1] = "BigInt";
    TypeOutput[TypeOutput["Uint8Array"] = 2] = "Uint8Array";
    TypeOutput[TypeOutput["PrefixedHexString"] = 3] = "PrefixedHexString";
})(TypeOutput || (TypeOutput = {}));
//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/common/utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/utils.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   assertIsUint8Array: () => (/* binding */ assertIsUint8Array),
/* harmony export */   bigIntToHex: () => (/* binding */ bigIntToHex),
/* harmony export */   bigIntToUint8Array: () => (/* binding */ bigIntToUint8Array),
/* harmony export */   bigIntToUnpaddedUint8Array: () => (/* binding */ bigIntToUnpaddedUint8Array),
/* harmony export */   ecrecover: () => (/* binding */ ecrecover),
/* harmony export */   intToUint8Array: () => (/* binding */ intToUint8Array),
/* harmony export */   padToEven: () => (/* binding */ padToEven),
/* harmony export */   parseGethGenesis: () => (/* binding */ parseGethGenesis),
/* harmony export */   setLengthLeft: () => (/* binding */ setLengthLeft),
/* harmony export */   stripHexPrefix: () => (/* binding */ stripHexPrefix),
/* harmony export */   stripZeros: () => (/* binding */ stripZeros),
/* harmony export */   toType: () => (/* binding */ toType),
/* harmony export */   toUint8Array: () => (/* binding */ toUint8Array),
/* harmony export */   uint8ArrayToBigInt: () => (/* binding */ uint8ArrayToBigInt),
/* harmony export */   unpadUint8Array: () => (/* binding */ unpadUint8Array),
/* harmony export */   zeros: () => (/* binding */ zeros)
/* harmony export */ });
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var _tx_constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tx/constants.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/constants.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./enums.js */ "./node_modules/web3-eth-accounts/lib/esm/common/enums.js");
/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types.js */ "./node_modules/web3-eth-accounts/lib/esm/common/types.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/





/**
 * Removes '0x' from a given `String` if present
 * @param str the string value
 * @returns the string without 0x prefix
 */
const stripHexPrefix = (str) => {
    if (typeof str !== 'string')
        throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`);
    return (0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isHexPrefixed)(str) ? str.slice(2) : str;
};
/**
 * Transforms Geth formatted nonce (i.e. hex string) to 8 byte 0x-prefixed string used internally
 * @param nonce string parsed from the Geth genesis file
 * @returns nonce as a 0x-prefixed 8 byte string
 */
function formatNonce(nonce) {
    if (!nonce || nonce === '0x0') {
        return '0x0000000000000000';
    }
    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isHexPrefixed)(nonce)) {
        return `0x${stripHexPrefix(nonce).padStart(16, '0')}`;
    }
    return `0x${nonce.padStart(16, '0')}`;
}
/**
 * Converts a `Number` into a hex `String`
 * @param {Number} i
 * @return {String}
 */
const intToHex = function (i) {
    if (!Number.isSafeInteger(i) || i < 0) {
        throw new Error(`Received an invalid integer type: ${i}`);
    }
    return `0x${i.toString(16)}`;
};
/**
 * Converts Geth genesis parameters to an EthereumJS compatible `CommonOpts` object
 * @param json object representing the Geth genesis file
 * @param optional mergeForkIdPostMerge which clarifies the placement of MergeForkIdTransition
 * hardfork, which by default is post merge as with the merged eth networks but could also come
 * before merge like in kiln genesis
 * @returns genesis parameters in a `CommonOpts` compliant object
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function parseGethParams(json, mergeForkIdPostMerge = true) {
    var _a, _b;
    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
    const { name, config, difficulty, mixHash, gasLimit, coinbase, baseFeePerGas, } = json;
    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
    let { extraData, timestamp, nonce } = json;
    const genesisTimestamp = Number(timestamp);
    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
    const { chainId } = config;
    // geth is not strictly putting empty fields with a 0x prefix
    if (extraData === '') {
        extraData = '0x';
    }
    // geth may use number for timestamp
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isHexPrefixed)(timestamp)) {
        // eslint-disable-next-line radix
        timestamp = intToHex(parseInt(timestamp));
    }
    // geth may not give us a nonce strictly formatted to an 8 byte hex string
    if (nonce.length !== 18) {
        nonce = formatNonce(nonce);
    }
    // EIP155 and EIP158 are both part of Spurious Dragon hardfork and must occur at the same time
    // but have different configuration parameters in geth genesis parameters
    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
    if (config.eip155Block !== config.eip158Block) {
        throw new Error('EIP155 block number must equal EIP 158 block number since both are part of SpuriousDragon hardfork and the client only supports activating the full hardfork');
    }
    const params = {
        name,
        chainId,
        networkId: chainId,
        genesis: {
            timestamp,
            // eslint-disable-next-line radix
            gasLimit: parseInt(gasLimit), // geth gasLimit and difficulty are hex strings while ours are `number`s
            // eslint-disable-next-line radix
            difficulty: parseInt(difficulty),
            nonce,
            extraData,
            mixHash,
            coinbase,
            baseFeePerGas,
        },
        hardfork: undefined,
        hardforks: [],
        bootstrapNodes: [],
        consensus: 
        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
        config.clique !== undefined
            ? {
                type: 'poa',
                algorithm: 'clique',
                clique: {
                    // The recent geth genesis seems to be using blockperiodseconds
                    // and epochlength for clique specification
                    // see: https://hackmd.io/PqZgMpnkSWCWv5joJoFymQ
                    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment
                    period: (_a = config.clique.period) !== null && _a !== void 0 ? _a : config.clique.blockperiodseconds,
                    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,  @typescript-eslint/no-unsafe-assignment
                    epoch: (_b = config.clique.epoch) !== null && _b !== void 0 ? _b : config.clique.epochlength,
                },
            }
            : {
                type: 'pow',
                algorithm: 'ethash',
                ethash: {},
            },
    };
    const forkMap = {
        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Homestead]: { name: 'homesteadBlock' },
        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Dao]: { name: 'daoForkBlock' },
        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.TangerineWhistle]: { name: 'eip150Block' },
        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.SpuriousDragon]: { name: 'eip155Block' },
        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Byzantium]: { name: 'byzantiumBlock' },
        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Constantinople]: { name: 'constantinopleBlock' },
        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Petersburg]: { name: 'petersburgBlock' },
        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Istanbul]: { name: 'istanbulBlock' },
        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.MuirGlacier]: { name: 'muirGlacierBlock' },
        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Berlin]: { name: 'berlinBlock' },
        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.London]: { name: 'londonBlock' },
        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.MergeForkIdTransition]: {
            name: 'mergeForkBlock',
            postMerge: mergeForkIdPostMerge,
        },
        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Shanghai]: { name: 'shanghaiTime', postMerge: true, isTimestamp: true },
        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.ShardingForkDev]: {
            name: 'shardingForkTime',
            postMerge: true,
            isTimestamp: true,
        },
    };
    // forkMapRev is the map from config field name to Hardfork
    const forkMapRev = Object.keys(forkMap).reduce((acc, elem) => {
        acc[forkMap[elem].name] = elem;
        return acc;
    }, {});
    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
    const configHardforkNames = Object.keys(config).filter(
    // eslint-disable-next-line no-null/no-null, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/prefer-optional-chain
    key => forkMapRev[key] !== undefined && config[key] !== undefined && config[key] !== null);
    params.hardforks = configHardforkNames
        .map(nameBlock => ({
        name: forkMapRev[nameBlock],
        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
        block: 
        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
        forkMap[forkMapRev[nameBlock]].isTimestamp === true ||
            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
            typeof config[nameBlock] !== 'number'
            ? // eslint-disable-next-line no-null/no-null
                null
            : // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
                config[nameBlock],
        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
        timestamp: 
        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
        forkMap[forkMapRev[nameBlock]].isTimestamp === true &&
            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
            typeof config[nameBlock] === 'number'
            ? // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
                config[nameBlock]
            : undefined,
    }))
        // eslint-disable-next-line no-null/no-null
        .filter(fork => fork.block !== null || fork.timestamp !== undefined);
    params.hardforks.sort((a, b) => { var _a, _b; return ((_a = a.block) !== null && _a !== void 0 ? _a : Infinity) - ((_b = b.block) !== null && _b !== void 0 ? _b : Infinity); });
    params.hardforks.sort((a, b) => { var _a, _b; return ((_a = a.timestamp) !== null && _a !== void 0 ? _a : genesisTimestamp) - ((_b = b.timestamp) !== null && _b !== void 0 ? _b : genesisTimestamp); });
    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
    if (config.terminalTotalDifficulty !== undefined) {
        // Following points need to be considered for placement of merge hf
        // - Merge hardfork can't be placed at genesis
        // - Place merge hf before any hardforks that require CL participation for e.g. withdrawals
        // - Merge hardfork has to be placed just after genesis if any of the genesis hardforks make CL
        //   necessary for e.g. withdrawals
        const mergeConfig = {
            name: _enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Merge,
            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment
            ttd: config.terminalTotalDifficulty,
            // eslint-disable-next-line no-null/no-null
            block: null,
        };
        // Merge hardfork has to be placed before first hardfork that is dependent on merge
        const postMergeIndex = params.hardforks.findIndex(
        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
        hf => { var _a; return ((_a = forkMap[hf.name]) === null || _a === void 0 ? void 0 : _a.postMerge) === true; });
        if (postMergeIndex !== -1) {
            params.hardforks.splice(postMergeIndex, 0, mergeConfig);
        }
        else {
            params.hardforks.push(mergeConfig);
        }
    }
    const latestHardfork = params.hardforks.length > 0 ? params.hardforks.slice(-1)[0] : undefined;
    params.hardfork = latestHardfork === null || latestHardfork === void 0 ? void 0 : latestHardfork.name;
    params.hardforks.unshift({ name: _enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Chainstart, block: 0 });
    return params;
}
/**
 * Parses a genesis.json exported from Geth into parameters for Common instance
 * @param json representing the Geth genesis file
 * @param name optional chain name
 * @returns parsed params
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function parseGethGenesis(json, name, mergeForkIdPostMerge) {
    try {
        if (['config', 'difficulty', 'gasLimit', 'alloc'].some(field => !(field in json))) {
            throw new Error('Invalid format, expected geth genesis fields missing');
        }
        if (name !== undefined) {
            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-param-reassign
            json.name = name;
        }
        return parseGethParams(json, mergeForkIdPostMerge);
    }
    catch (e) {
        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/restrict-template-expressions
        throw new Error(`Error parsing parameters file: ${e.message}`);
    }
}
/**
 * Pads a `String` to have an even length
 * @param value
 * @return output
 */
function padToEven(value) {
    let a = value;
    if (typeof a !== 'string') {
        throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`);
    }
    if (a.length % 2)
        a = `0${a}`;
    return a;
}
/**
 * Converts an `Number` to a `Uint8Array`
 * @param {Number} i
 * @return {Uint8Array}
 */
const intToUint8Array = function (i) {
    const hex = intToHex(i);
    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(`0x${padToEven(hex.slice(2))}`);
};
/**
 * Attempts to turn a value into a `Uint8Array`.
 * Inputs supported: `Uint8Array` `String` (hex-prefixed), `Number`, null/undefined, `BigInt` and other objects
 * with a `toArray()` or `toUint8Array()` method.
 * @param v the value
 */
const toUint8Array = function (v) {
    var _a;
    // eslint-disable-next-line no-null/no-null
    if (v === null || v === undefined) {
        return new Uint8Array();
    }
    if (v instanceof Uint8Array) {
        return v;
    }
    if (((_a = v === null || v === void 0 ? void 0 : v.constructor) === null || _a === void 0 ? void 0 : _a.name) === 'Uint8Array') {
        return Uint8Array.from(v);
    }
    if (Array.isArray(v)) {
        return Uint8Array.from(v);
    }
    if (typeof v === 'string') {
        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isHexString)(v)) {
            throw new Error(`Cannot convert string to Uint8Array. only supports 0x-prefixed hex strings and this string was given: ${v}`);
        }
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(padToEven(stripHexPrefix(v)));
    }
    if (typeof v === 'number') {
        return toUint8Array((0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(v));
    }
    if (typeof v === 'bigint') {
        if (v < BigInt(0)) {
            throw new Error(`Cannot convert negative bigint to Uint8Array. Given: ${v}`);
        }
        let n = v.toString(16);
        if (n.length % 2)
            n = `0${n}`;
        return toUint8Array(`0x${n}`);
    }
    if (v.toArray) {
        // converts a BN to a Uint8Array
        return Uint8Array.from(v.toArray());
    }
    throw new Error('invalid type');
};
/**
 * Converts a {@link Uint8Array} to a {@link bigint}
 */
function uint8ArrayToBigInt(buf) {
    const hex = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(buf);
    if (hex === '0x') {
        return BigInt(0);
    }
    return BigInt(hex);
}
/**
 * Converts a {@link bigint} to a {@link Uint8Array}
 */
function bigIntToUint8Array(num) {
    return toUint8Array(`0x${num.toString(16)}`);
}
/**
 * Returns a Uint8Array filled with 0s.
 * @param bytes the number of bytes the Uint8Array should be
 */
const zeros = function (bytes) {
    return new Uint8Array(bytes).fill(0);
};
/**
 * Pads a `Uint8Array` with zeros till it has `length` bytes.
 * Truncates the beginning or end of input if its length exceeds `length`.
 * @param msg the value to pad (Uint8Array)
 * @param length the number of bytes the output should be
 * @param right whether to start padding form the left or right
 * @return (Uint8Array)
 */
const setLength = function (msg, length, right) {
    const buf = zeros(length);
    if (right) {
        if (msg.length < length) {
            buf.set(msg);
            return buf;
        }
        return msg.subarray(0, length);
    }
    if (msg.length < length) {
        buf.set(msg, length - msg.length);
        return buf;
    }
    return msg.subarray(-length);
};
/**
 * Throws if input is not a Uint8Array
 * @param {Uint8Array} input value to check
 */
function assertIsUint8Array(input) {
    if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isUint8Array)(input)) {
        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions
        const msg = `This method only supports Uint8Array but input was: ${input}`;
        throw new Error(msg);
    }
}
/**
 * Left Pads a `Uint8Array` with leading zeros till it has `length` bytes.
 * Or it truncates the beginning if it exceeds.
 * @param msg the value to pad (Uint8Array)
 * @param length the number of bytes the output should be
 * @return (Uint8Array)
 */
const setLengthLeft = function (msg, length) {
    assertIsUint8Array(msg);
    return setLength(msg, length, false);
};
/**
 * Trims leading zeros from a `Uint8Array`, `String` or `Number[]`.
 * @param a (Uint8Array|Array|String)
 * @return (Uint8Array|Array|String)
 */
function stripZeros(a) {
    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment
    let first = a[0];
    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call
    while (a.length > 0 && first.toString() === '0') {
        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment, prefer-destructuring, @typescript-eslint/no-unsafe-call, no-param-reassign
        a = a.slice(1);
        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, prefer-destructuring, @typescript-eslint/no-unsafe-member-access
        first = a[0];
    }
    // eslint-disable-next-line @typescript-eslint/no-unsafe-return
    return a;
}
/**
 * Trims leading zeros from a `Uint8Array`.
 * @param a (Uint8Array)
 * @return (Uint8Array)
 */
const unpadUint8Array = function (a) {
    assertIsUint8Array(a);
    return stripZeros(a);
};
/**
 * Converts a {@link bigint} to a `0x` prefixed hex string
 */
const bigIntToHex = (num) => `0x${num.toString(16)}`;
/**
 * Convert value from bigint to an unpadded Uint8Array
 * (useful for RLP transport)
 * @param value value to convert
 */
function bigIntToUnpaddedUint8Array(value) {
    return unpadUint8Array(bigIntToUint8Array(value));
}
function calculateSigRecovery(v, chainId) {
    if (v === BigInt(0) || v === BigInt(1))
        return v;
    if (chainId === undefined) {
        return v - BigInt(27);
    }
    return v - (chainId * BigInt(2) + BigInt(35));
}
function isValidSigRecovery(recovery) {
    return recovery === BigInt(0) || recovery === BigInt(1);
}
/**
 * ECDSA public key recovery from signature.
 * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions
 * @returns Recovered public key
 */
const ecrecover = function (msgHash, v, r, s, chainId) {
    const recovery = calculateSigRecovery(v, chainId);
    if (!isValidSigRecovery(recovery)) {
        throw new Error('Invalid signature v value');
    }
    const senderPubKey = new _tx_constants_js__WEBPACK_IMPORTED_MODULE_2__.secp256k1.Signature(uint8ArrayToBigInt(r), uint8ArrayToBigInt(s))
        .addRecoveryBit(Number(recovery))
        .recoverPublicKey(msgHash)
        .toRawBytes(false);
    return senderPubKey.slice(1);
};
function toType(input, outputType) {
    // eslint-disable-next-line no-null/no-null
    if (input === null) {
        // eslint-disable-next-line no-null/no-null
        return null;
    }
    if (input === undefined) {
        return undefined;
    }
    if (typeof input === 'string' && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isHexString)(input)) {
        throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`);
    }
    else if (typeof input === 'number' && !Number.isSafeInteger(input)) {
        throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)');
    }
    const output = toUint8Array(input);
    switch (outputType) {
        case _types_js__WEBPACK_IMPORTED_MODULE_4__.TypeOutput.Uint8Array:
            return output;
        case _types_js__WEBPACK_IMPORTED_MODULE_4__.TypeOutput.BigInt:
            return uint8ArrayToBigInt(output);
        case _types_js__WEBPACK_IMPORTED_MODULE_4__.TypeOutput.Number: {
            const bigInt = uint8ArrayToBigInt(output);
            if (bigInt > BigInt(Number.MAX_SAFE_INTEGER)) {
                throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)');
            }
            return Number(bigInt);
        }
        case _types_js__WEBPACK_IMPORTED_MODULE_4__.TypeOutput.PrefixedHexString:
            return (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(output);
        default:
            throw new Error('unknown outputType');
    }
}
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AccessListEIP2930Transaction: () => (/* reexport safe */ _tx_index_js__WEBPACK_IMPORTED_MODULE_5__.AccessListEIP2930Transaction),
/* harmony export */   BaseTransaction: () => (/* reexport safe */ _tx_index_js__WEBPACK_IMPORTED_MODULE_5__.BaseTransaction),
/* harmony export */   Capability: () => (/* reexport safe */ _tx_index_js__WEBPACK_IMPORTED_MODULE_5__.Capability),
/* harmony export */   Chain: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.Chain),
/* harmony export */   Common: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.Common),
/* harmony export */   ConsensusAlgorithm: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.ConsensusAlgorithm),
/* harmony export */   ConsensusType: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.ConsensusType),
/* harmony export */   CustomChain: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.CustomChain),
/* harmony export */   FeeMarketEIP1559Transaction: () => (/* reexport safe */ _tx_index_js__WEBPACK_IMPORTED_MODULE_5__.FeeMarketEIP1559Transaction),
/* harmony export */   Hardfork: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.Hardfork),
/* harmony export */   Transaction: () => (/* reexport safe */ _tx_index_js__WEBPACK_IMPORTED_MODULE_5__.Transaction),
/* harmony export */   TransactionFactory: () => (/* reexport safe */ _tx_index_js__WEBPACK_IMPORTED_MODULE_5__.TransactionFactory),
/* harmony export */   TypeOutput: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.TypeOutput),
/* harmony export */   Wallet: () => (/* reexport safe */ _wallet_js__WEBPACK_IMPORTED_MODULE_0__.Wallet),
/* harmony export */   assertIsUint8Array: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.assertIsUint8Array),
/* harmony export */   bigIntToHex: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToHex),
/* harmony export */   bigIntToUint8Array: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUint8Array),
/* harmony export */   bigIntToUnpaddedUint8Array: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array),
/* harmony export */   create: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.create),
/* harmony export */   decrypt: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.decrypt),
/* harmony export */   ecrecover: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.ecrecover),
/* harmony export */   encrypt: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.encrypt),
/* harmony export */   hashMessage: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.hashMessage),
/* harmony export */   intToUint8Array: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.intToUint8Array),
/* harmony export */   isAccessList: () => (/* reexport safe */ _tx_index_js__WEBPACK_IMPORTED_MODULE_5__.isAccessList),
/* harmony export */   isAccessListUint8Array: () => (/* reexport safe */ _tx_index_js__WEBPACK_IMPORTED_MODULE_5__.isAccessListUint8Array),
/* harmony export */   keyStoreSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.keyStoreSchema),
/* harmony export */   padToEven: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.padToEven),
/* harmony export */   parseAndValidatePrivateKey: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.parseAndValidatePrivateKey),
/* harmony export */   parseGethGenesis: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.parseGethGenesis),
/* harmony export */   privateKeyToAccount: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.privateKeyToAccount),
/* harmony export */   privateKeyToAddress: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.privateKeyToAddress),
/* harmony export */   privateKeyToPublicKey: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.privateKeyToPublicKey),
/* harmony export */   recover: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.recover),
/* harmony export */   recoverTransaction: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.recoverTransaction),
/* harmony export */   setLengthLeft: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.setLengthLeft),
/* harmony export */   sign: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.sign),
/* harmony export */   signMessageWithPrivateKey: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.signMessageWithPrivateKey),
/* harmony export */   signRaw: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.signRaw),
/* harmony export */   signTransaction: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.signTransaction),
/* harmony export */   stripHexPrefix: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.stripHexPrefix),
/* harmony export */   stripZeros: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.stripZeros),
/* harmony export */   toType: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.toType),
/* harmony export */   toUint8Array: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.toUint8Array),
/* harmony export */   txUtils: () => (/* reexport safe */ _tx_index_js__WEBPACK_IMPORTED_MODULE_5__.txUtils),
/* harmony export */   uint8ArrayToBigInt: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.uint8ArrayToBigInt),
/* harmony export */   unpadUint8Array: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.unpadUint8Array),
/* harmony export */   zeros: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.zeros)
/* harmony export */ });
/* harmony import */ var _wallet_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wallet.js */ "./node_modules/web3-eth-accounts/lib/esm/wallet.js");
/* harmony import */ var _account_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./account.js */ "./node_modules/web3-eth-accounts/lib/esm/account.js");
/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types.js */ "./node_modules/web3-eth-accounts/lib/esm/types.js");
/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./schemas.js */ "./node_modules/web3-eth-accounts/lib/esm/schemas.js");
/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common/index.js */ "./node_modules/web3-eth-accounts/lib/esm/common/index.js");
/* harmony import */ var _tx_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tx/index.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * The web3.eth.accounts contains functions to generate Ethereum accounts and sign transactions and data.
 *
 * **_NOTE:_** This package has NOT been audited and might potentially be unsafe. Take precautions to clear memory properly, store the private keys safely, and test transaction receiving and sending functionality properly before using in production!
 *
 *
 * To use this package standalone and use its methods use:
 * ```ts
 * import { create, decrypt } from 'web3-eth-accounts'; // ....
 * ```
 *
 * To use this package within the web3 object use:
 *
 * ```ts
 * import Web3 from 'web3';
 *
 * const web3 = new Web3(Web3.givenProvider || 'ws://some.local-or-remote.node:8546');
 * // now you have access to the accounts class
 * web3.eth.accounts.create();
 * ```
 */






//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/schemas.js":
/*!***********************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/schemas.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   keyStoreSchema: () => (/* binding */ keyStoreSchema)
/* harmony export */ });
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
const keyStoreSchema = {
    type: 'object',
    required: ['crypto', 'id', 'version', 'address'],
    properties: {
        crypto: {
            type: 'object',
            required: ['cipher', 'ciphertext', 'cipherparams', 'kdf', 'kdfparams', 'mac'],
            properties: {
                cipher: { type: 'string' },
                ciphertext: { type: 'string' },
                cipherparams: { type: 'object' },
                kdf: { type: 'string' },
                kdfparams: { type: 'object' },
                salt: { type: 'string' },
                mac: { type: 'string' },
            },
        },
        id: { type: 'string' },
        version: { type: 'number' },
        address: { type: 'string' },
    },
};
//# sourceMappingURL=schemas.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/tx/address.js":
/*!**************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/address.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Address: () => (/* binding */ Address)
/* harmony export */ });
/* harmony import */ var ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/keccak.js */ "./node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/esm/keccak.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/constants.js");
/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/utils.js */ "./node_modules/web3-eth-accounts/lib/esm/common/utils.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/




class Address {
    constructor(buf) {
        if (buf.length !== 20) {
            throw new Error('Invalid address length');
        }
        this.buf = buf;
    }
    /**
     * Returns the zero address.
     */
    static zero() {
        return new Address((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_3__.zeros)(20));
    }
    /**
     * Is address equal to another.
     */
    equals(address) {
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.uint8ArrayEquals)(this.buf, address.buf);
    }
    /**
     * Is address zero.
     */
    isZero() {
        return this.equals(Address.zero());
    }
    /**
     * Returns hex encoding of address.
     */
    toString() {
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(this.buf);
    }
    /**
     * Returns Uint8Array representation of address.
     */
    toArray() {
        return this.buf;
    }
    /**
     * Returns the ethereum address of a given public key.
     * Accepts "Ethereum public keys" and SEC1 encoded keys.
     * @param pubKey The two points of an uncompressed key, unless sanitize is enabled
     * @param sanitize Accept public keys in other formats
     */
    static publicToAddress(_pubKey, sanitize = false) {
        let pubKey = _pubKey;
        (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_3__.assertIsUint8Array)(pubKey);
        if (sanitize && pubKey.length !== 64) {
            pubKey = _constants_js__WEBPACK_IMPORTED_MODULE_2__.secp256k1.ProjectivePoint.fromHex(pubKey).toRawBytes(false).slice(1);
        }
        if (pubKey.length !== 64) {
            throw new Error('Expected pubKey to be of length 64');
        }
        // Only take the lower 160bits of the hash
        return (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(pubKey).slice(-20);
    }
}
//# sourceMappingURL=address.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/tx/baseTransaction.js":
/*!**********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/baseTransaction.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BaseTransaction: () => (/* binding */ BaseTransaction)
/* harmony export */ });
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/constants.js");
/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/utils.js */ "./node_modules/web3-eth-accounts/lib/esm/common/utils.js");
/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/common.js */ "./node_modules/web3-eth-accounts/lib/esm/common/common.js");
/* harmony import */ var _common_enums_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/enums.js */ "./node_modules/web3-eth-accounts/lib/esm/common/enums.js");
/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/types.js");
/* harmony import */ var _address_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./address.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/address.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/utils.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/








/**
 * This base class will likely be subject to further
 * refactoring along the introduction of additional tx types
 * on the Ethereum network.
 *
 * It is therefore not recommended to use directly.
 */
class BaseTransaction {
    constructor(txData, opts) {
        var _a, _b;
        this.cache = {
            hash: undefined,
            dataFee: undefined,
        };
        /**
         * List of tx type defining EIPs,
         * e.g. 1559 (fee market) and 2930 (access lists)
         * for FeeMarketEIP1559Transaction objects
         */
        this.activeCapabilities = [];
        /**
         * The default chain the tx falls back to if no Common
         * is provided and if the chain can't be derived from
         * a passed in chainId (only EIP-2718 typed txs) or
         * EIP-155 signature (legacy txs).
         *
         * @hidden
         */
        this.DEFAULT_CHAIN = _common_enums_js__WEBPACK_IMPORTED_MODULE_4__.Chain.Mainnet;
        /**
         * The default HF if the tx type is active on that HF
         * or the first greater HF where the tx is active.
         *
         * @hidden
         */
        this.DEFAULT_HARDFORK = _common_enums_js__WEBPACK_IMPORTED_MODULE_4__.Hardfork.Merge;
        const { nonce, gasLimit, to, value, data, v, r, s, type } = txData;
        this._type = Number((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(type)));
        this.txOptions = opts;
        const toB = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(to === '' ? '0x' : to);
        const vB = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(v === '' ? '0x' : v);
        const rB = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(r === '' ? '0x' : r);
        const sB = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(s === '' ? '0x' : s);
        this.nonce = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(nonce === '' ? '0x' : nonce));
        this.gasLimit = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(gasLimit === '' ? '0x' : gasLimit));
        this.to = toB.length > 0 ? new _address_js__WEBPACK_IMPORTED_MODULE_6__.Address(toB) : undefined;
        this.value = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(value === '' ? '0x' : value));
        this.data = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(data === '' ? '0x' : data);
        this.v = vB.length > 0 ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToBigInt)(vB) : undefined;
        this.r = rB.length > 0 ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToBigInt)(rB) : undefined;
        this.s = sB.length > 0 ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToBigInt)(sB) : undefined;
        this._validateCannotExceedMaxInteger({ value: this.value, r: this.r, s: this.s });
        // geth limits gasLimit to 2^64-1
        this._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64);
        // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)
        this._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, true);
        // eslint-disable-next-line no-null/no-null
        const createContract = this.to === undefined || this.to === null;
        const allowUnlimitedInitCodeSize = (_a = opts.allowUnlimitedInitCodeSize) !== null && _a !== void 0 ? _a : false;
        const common = (_b = opts.common) !== null && _b !== void 0 ? _b : this._getCommon();
        if (createContract && common.isActivatedEIP(3860) && !allowUnlimitedInitCodeSize) {
            (0,_utils_js__WEBPACK_IMPORTED_MODULE_7__.checkMaxInitCodeSize)(common, this.data.length);
        }
    }
    /**
     * Returns the transaction type.
     *
     * Note: legacy txs will return tx type `0`.
     */
    get type() {
        return this._type;
    }
    /**
     * Checks if a tx type defining capability is active
     * on a tx, for example the EIP-1559 fee market mechanism
     * or the EIP-2930 access list feature.
     *
     * Note that this is different from the tx type itself,
     * so EIP-2930 access lists can very well be active
     * on an EIP-1559 tx for example.
     *
     * This method can be useful for feature checks if the
     * tx type is unknown (e.g. when instantiated with
     * the tx factory).
     *
     * See `Capabilites` in the `types` module for a reference
     * on all supported capabilities.
     */
    supports(capability) {
        return this.activeCapabilities.includes(capability);
    }
    validate(stringError = false) {
        const errors = [];
        if (this.getBaseFee() > this.gasLimit) {
            errors.push(`gasLimit is too low. given ${this.gasLimit}, need at least ${this.getBaseFee()}`);
        }
        if (this.isSigned() && !this.verifySignature()) {
            errors.push('Invalid Signature');
        }
        return stringError ? errors : errors.length === 0;
    }
    _validateYParity() {
        const { v } = this;
        if (v !== undefined && v !== BigInt(0) && v !== BigInt(1)) {
            const msg = this._errorMsg('The y-parity of the transaction should either be 0 or 1');
            throw new Error(msg);
        }
    }
    /**
     * EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2are considered invalid.
     * Reasoning: https://ethereum.stackexchange.com/a/55728
     */
    _validateHighS() {
        const { s } = this;
        if (this.common.gteHardfork('homestead') && s !== undefined && s > _constants_js__WEBPACK_IMPORTED_MODULE_1__.SECP256K1_ORDER_DIV_2) {
            const msg = this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');
            throw new Error(msg);
        }
    }
    /**
     * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)
     */
    getBaseFee() {
        const txFee = this.common.param('gasPrices', 'tx');
        let fee = this.getDataFee();
        if (txFee)
            fee += txFee;
        if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {
            const txCreationFee = this.common.param('gasPrices', 'txCreation');
            if (txCreationFee)
                fee += txCreationFee;
        }
        return fee;
    }
    /**
     * The amount of gas paid for the data in this tx
     */
    getDataFee() {
        const txDataZero = this.common.param('gasPrices', 'txDataZero');
        const txDataNonZero = this.common.param('gasPrices', 'txDataNonZero');
        let cost = BigInt(0);
        // eslint-disable-next-line @typescript-eslint/prefer-for-of
        for (let i = 0; i < this.data.length; i += 1) {
            // eslint-disable-next-line @typescript-eslint/no-unused-expressions, no-unused-expressions
            this.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero);
        }
        // eslint-disable-next-line no-null/no-null
        if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {
            const dataLength = BigInt(Math.ceil(this.data.length / 32));
            const initCodeCost = this.common.param('gasPrices', 'initCodeWordCost') * dataLength;
            cost += initCodeCost;
        }
        return cost;
    }
    /**
     * If the tx's `to` is to the creation address
     */
    toCreationAddress() {
        return this.to === undefined || this.to.buf.length === 0;
    }
    isSigned() {
        const { v, r, s } = this;
        if (v === undefined || r === undefined || s === undefined) {
            return false;
        }
        return true;
    }
    /**
     * Determines if the signature is valid
     */
    verifySignature() {
        try {
            // Main signature verification is done in `getSenderPublicKey()`
            const publicKey = this.getSenderPublicKey();
            return (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.unpadUint8Array)(publicKey).length !== 0;
        }
        catch (e) {
            return false;
        }
    }
    /**
     * Returns the sender's address
     */
    getSenderAddress() {
        return new _address_js__WEBPACK_IMPORTED_MODULE_6__.Address(_address_js__WEBPACK_IMPORTED_MODULE_6__.Address.publicToAddress(this.getSenderPublicKey()));
    }
    /**
     * Signs a transaction.
     *
     * Note that the signed tx is returned as a new object,
     * use as follows:
     * ```javascript
     * const signedTx = tx.sign(privateKey)
     * ```
     */
    sign(privateKey) {
        if (privateKey.length !== 32) {
            const msg = this._errorMsg('Private key must be 32 bytes in length.');
            throw new Error(msg);
        }
        // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature
        // and want to recreate a signature (where EIP155 should be applied)
        // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail
        // 2021-06-23
        let hackApplied = false;
        if (this.type === 0 &&
            this.common.gteHardfork('spuriousDragon') &&
            !this.supports(_types_js__WEBPACK_IMPORTED_MODULE_5__.Capability.EIP155ReplayProtection)) {
            this.activeCapabilities.push(_types_js__WEBPACK_IMPORTED_MODULE_5__.Capability.EIP155ReplayProtection);
            hackApplied = true;
        }
        const msgHash = this.getMessageToSign(true);
        const { v, r, s } = this._ecsign(msgHash, privateKey);
        const tx = this._processSignature(v, r, s);
        // Hack part 2
        if (hackApplied) {
            const index = this.activeCapabilities.indexOf(_types_js__WEBPACK_IMPORTED_MODULE_5__.Capability.EIP155ReplayProtection);
            if (index > -1) {
                this.activeCapabilities.splice(index, 1);
            }
        }
        return tx;
    }
    /**
     * Does chain ID checks on common and returns a common
     * to be used on instantiation
     * @hidden
     *
     * @param common - {@link Common} instance from tx options
     * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)
     */
    _getCommon(common, chainId) {
        var _a, _b, _c, _d;
        // TODO: this function needs to be reviewed and the code to be more clean
        // check issue https://github.com/web3/web3.js/issues/6666
        // Chain ID provided
        if (chainId !== undefined) {
            const chainIdBigInt = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(chainId));
            if (common) {
                if (common.chainId() !== chainIdBigInt) {
                    const msg = this._errorMsg('The chain ID does not match the chain ID of Common');
                    throw new Error(msg);
                }
                // Common provided, chain ID does match
                // -> Return provided Common
                return common.copy();
            }
            if (_common_common_js__WEBPACK_IMPORTED_MODULE_3__.Common.isSupportedChainId(chainIdBigInt)) {
                // No Common, chain ID supported by Common
                // -> Instantiate Common with chain ID
                return new _common_common_js__WEBPACK_IMPORTED_MODULE_3__.Common({ chain: chainIdBigInt, hardfork: this.DEFAULT_HARDFORK });
            }
            // No Common, chain ID not supported by Common
            // -> Instantiate custom Common derived from DEFAULT_CHAIN
            return _common_common_js__WEBPACK_IMPORTED_MODULE_3__.Common.custom({
                name: 'custom-chain',
                networkId: chainIdBigInt,
                chainId: chainIdBigInt,
            }, { baseChain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK });
        }
        // No chain ID provided
        // -> return Common provided or create new default Common
        if ((common === null || common === void 0 ? void 0 : common.copy) && typeof (common === null || common === void 0 ? void 0 : common.copy) === 'function') {
            return common.copy();
        }
        // TODO: Recheck this next block when working on https://github.com/web3/web3.js/issues/6666
        // This block is to handle when `chainId` was not passed and the `common` object does not have `copy()`
        // If it was meant to be unsupported to process `common` in this case, an exception should be thrown instead of the following block
        if (common) {
            const hardfork = typeof common.hardfork === 'function'
                ? common.hardfork()
                : // eslint-disable-next-line @typescript-eslint/unbound-method
                    common.hardfork;
            return _common_common_js__WEBPACK_IMPORTED_MODULE_3__.Common.custom({
                name: 'custom-chain',
                networkId: common.networkId
                    ? common.networkId()
                    : (_b = BigInt((_a = common.customChain) === null || _a === void 0 ? void 0 : _a.networkId)) !== null && _b !== void 0 ? _b : undefined,
                chainId: common.chainId
                    ? common.chainId()
                    : (_d = BigInt((_c = common.customChain) === null || _c === void 0 ? void 0 : _c.chainId)) !== null && _d !== void 0 ? _d : undefined,
            }, {
                baseChain: this.DEFAULT_CHAIN,
                hardfork: hardfork || this.DEFAULT_HARDFORK,
            });
        }
        return new _common_common_js__WEBPACK_IMPORTED_MODULE_3__.Common({ chain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK });
    }
    /**
     * Validates that an object with BigInt values cannot exceed the specified bit limit.
     * @param values Object containing string keys and BigInt values
     * @param bits Number of bits to check (64 or 256)
     * @param cannotEqual Pass true if the number also cannot equal one less the maximum value
     */
    _validateCannotExceedMaxInteger(values, bits = 256, cannotEqual = false) {
        for (const [key, value] of Object.entries(values)) {
            switch (bits) {
                case 64:
                    if (cannotEqual) {
                        if (value !== undefined && value >= _constants_js__WEBPACK_IMPORTED_MODULE_1__.MAX_UINT64) {
                            const msg = this._errorMsg(`${key} cannot equal or exceed MAX_UINT64 (2^64-1), given ${value}`);
                            throw new Error(msg);
                        }
                    }
                    else if (value !== undefined && value > _constants_js__WEBPACK_IMPORTED_MODULE_1__.MAX_UINT64) {
                        const msg = this._errorMsg(`${key} cannot exceed MAX_UINT64 (2^64-1), given ${value}`);
                        throw new Error(msg);
                    }
                    break;
                case 256:
                    if (cannotEqual) {
                        if (value !== undefined && value >= _constants_js__WEBPACK_IMPORTED_MODULE_1__.MAX_INTEGER) {
                            const msg = this._errorMsg(`${key} cannot equal or exceed MAX_INTEGER (2^256-1), given ${value}`);
                            throw new Error(msg);
                        }
                    }
                    else if (value !== undefined && value > _constants_js__WEBPACK_IMPORTED_MODULE_1__.MAX_INTEGER) {
                        const msg = this._errorMsg(`${key} cannot exceed MAX_INTEGER (2^256-1), given ${value}`);
                        throw new Error(msg);
                    }
                    break;
                default: {
                    const msg = this._errorMsg('unimplemented bits value');
                    throw new Error(msg);
                }
            }
        }
    }
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    static _validateNotArray(values) {
        const txDataKeys = [
            'nonce',
            'gasPrice',
            'gasLimit',
            'to',
            'value',
            'data',
            'v',
            'r',
            's',
            'type',
            'baseFee',
            'maxFeePerGas',
            'chainId',
        ];
        for (const [key, value] of Object.entries(values)) {
            if (txDataKeys.includes(key)) {
                if (Array.isArray(value)) {
                    throw new Error(`${key} cannot be an array`);
                }
            }
        }
    }
    /**
     * Returns the shared error postfix part for _error() method
     * tx type implementations.
     */
    _getSharedErrorPostfix() {
        let hash = '';
        try {
            hash = this.isSigned() ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)(this.hash()) : 'not available (unsigned)';
        }
        catch (e) {
            hash = 'error';
        }
        let isSigned = '';
        try {
            isSigned = this.isSigned().toString();
        }
        catch (e) {
            hash = 'error';
        }
        let hf = '';
        try {
            hf = this.common.hardfork();
        }
        catch (e) {
            hf = 'error';
        }
        let postfix = `tx type=${this.type} hash=${hash} nonce=${this.nonce} value=${this.value} `;
        postfix += `signed=${isSigned} hf=${hf}`;
        return postfix;
    }
    // eslint-disable-next-line class-methods-use-this
    _ecsign(msgHash, privateKey, chainId) {
        const signature = _constants_js__WEBPACK_IMPORTED_MODULE_1__.secp256k1.sign(msgHash, privateKey);
        const signatureBytes = signature.toCompactRawBytes();
        const r = signatureBytes.subarray(0, 32);
        const s = signatureBytes.subarray(32, 64);
        const v = chainId === undefined
            ? BigInt(signature.recovery + 27)
            : BigInt(signature.recovery + 35) + BigInt(chainId) * BigInt(2);
        return { r, s, v };
    }
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    static fromSerializedTx(
    // @ts-expect-error unused variable
    serialized, 
    // @ts-expect-error unused variable
    opts = {}) { }
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    static fromTxData(
    // @ts-expect-error unused variable
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    txData, 
    // @ts-expect-error unused variable
    opts = {}) { }
}
//# sourceMappingURL=baseTransaction.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/tx/constants.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/constants.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MAX_INTEGER: () => (/* binding */ MAX_INTEGER),
/* harmony export */   MAX_UINT64: () => (/* binding */ MAX_UINT64),
/* harmony export */   SECP256K1_ORDER: () => (/* binding */ SECP256K1_ORDER),
/* harmony export */   SECP256K1_ORDER_DIV_2: () => (/* binding */ SECP256K1_ORDER_DIV_2),
/* harmony export */   secp256k1: () => (/* binding */ secp256k1)
/* harmony export */ });
/* harmony import */ var ethereum_cryptography_secp256k1_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/secp256k1.js */ "./node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/esm/secp256k1.js");
var _a;
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
// eslint-disable-next-line import/extensions

const secp256k1 = (_a = ethereum_cryptography_secp256k1_js__WEBPACK_IMPORTED_MODULE_0__.secp256k1) !== null && _a !== void 0 ? _a : ethereum_cryptography_secp256k1_js__WEBPACK_IMPORTED_MODULE_0__;
/**
 * 2^64-1
 */
const MAX_UINT64 = BigInt('0xffffffffffffffff');
/**
 * The max integer that the evm can handle (2^256-1)
 */
const MAX_INTEGER = BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');
const SECP256K1_ORDER = secp256k1.CURVE.n;
const SECP256K1_ORDER_DIV_2 = SECP256K1_ORDER / BigInt(2);
//# sourceMappingURL=constants.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/tx/eip1559Transaction.js":
/*!*************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/eip1559Transaction.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FeeMarketEIP1559Transaction: () => (/* binding */ FeeMarketEIP1559Transaction)
/* harmony export */ });
/* harmony import */ var ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/keccak.js */ "./node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/esm/keccak.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethereumjs/rlp */ "./node_modules/@ethereumjs/rlp/dist/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/constants.js");
/* harmony import */ var _baseTransaction_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./baseTransaction.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/baseTransaction.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/utils.js");
/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/utils.js */ "./node_modules/web3-eth-accounts/lib/esm/common/utils.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/








const TRANSACTION_TYPE = 2;
const TRANSACTION_TYPE_UINT8ARRAY = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToBytes)(TRANSACTION_TYPE.toString(16).padStart(2, '0'));
/**
 * Typed transaction with a new gas fee market mechanism
 *
 * - TransactionType: 2
 * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)
 */
// eslint-disable-next-line no-use-before-define
class FeeMarketEIP1559Transaction extends _baseTransaction_js__WEBPACK_IMPORTED_MODULE_5__.BaseTransaction {
    /**
     * Instantiate a transaction from a data dictionary.
     *
     * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,
     * accessList, v, r, s }
     *
     * Notes:
     * - `chainId` will be set automatically if not provided
     * - All parameters are optional and have some basic default values
     */
    static fromTxData(txData, opts = {}) {
        return new FeeMarketEIP1559Transaction(txData, opts);
    }
    /**
     * Instantiate a transaction from the serialized tx.
     *
     * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,
     * accessList, signatureYParity, signatureR, signatureS])`
     */
    static fromSerializedTx(serialized, opts = {}) {
        if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.uint8ArrayEquals)(serialized.subarray(0, 1), TRANSACTION_TYPE_UINT8ARRAY)) {
            throw new Error(`Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${(0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)(serialized.subarray(0, 1))}`);
        }
        const values = _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_2__.RLP.decode(serialized.subarray(1));
        if (!Array.isArray(values)) {
            throw new Error('Invalid serialized tx input: must be array');
        }
        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
        return FeeMarketEIP1559Transaction.fromValuesArray(values, opts);
    }
    /**
     * Create a transaction from a values array.
     *
     * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,
     * accessList, signatureYParity, signatureR, signatureS]`
     */
    static fromValuesArray(values, opts = {}) {
        if (values.length !== 9 && values.length !== 12) {
            throw new Error('Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).');
        }
        const [chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data, accessList, v, r, s,] = values;
        this._validateNotArray({ chainId, v });
        (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.validateNoLeadingZeroes)({
            nonce,
            maxPriorityFeePerGas,
            maxFeePerGas,
            gasLimit,
            value,
            v,
            r,
            s,
        });
        return new FeeMarketEIP1559Transaction({
            chainId: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.uint8ArrayToBigInt)(chainId),
            nonce,
            maxPriorityFeePerGas,
            maxFeePerGas,
            gasLimit,
            to,
            value,
            data,
            accessList: accessList !== null && accessList !== void 0 ? accessList : [],
            v: v !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.uint8ArrayToBigInt)(v) : undefined, // EIP2930 supports v's with value 0 (empty Uint8Array)
            r,
            s,
        }, opts);
    }
    /**
     * This constructor takes the values, validates them, assigns them and freezes the object.
     *
     * It is not recommended to use this constructor directly. Instead use
     * the static factory methods to assist in creating a Transaction object from
     * varying data types.
     */
    constructor(txData, opts = {}) {
        var _a;
        super(Object.assign(Object.assign({}, txData), { type: TRANSACTION_TYPE }), opts);
        /**
         * The default HF if the tx type is active on that HF
         * or the first greater HF where the tx is active.
         *
         * @hidden
         */
        this.DEFAULT_HARDFORK = 'london';
        const { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas } = txData;
        this.common = this._getCommon(opts.common, chainId);
        this.chainId = this.common.chainId();
        if (!this.common.isActivatedEIP(1559)) {
            throw new Error('EIP-1559 not enabled on Common');
        }
        this.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930]);
        // Populate the access list fields
        const accessListData = (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.getAccessListData)(accessList !== null && accessList !== void 0 ? accessList : []);
        this.accessList = accessListData.accessList;
        this.AccessListJSON = accessListData.AccessListJSON;
        // Verify the access list format.
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.verifyAccessList)(this.accessList);
        this.maxFeePerGas = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.toUint8Array)(maxFeePerGas === '' ? '0x' : maxFeePerGas));
        this.maxPriorityFeePerGas = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.toUint8Array)(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas));
        this._validateCannotExceedMaxInteger({
            maxFeePerGas: this.maxFeePerGas,
            maxPriorityFeePerGas: this.maxPriorityFeePerGas,
        });
        _baseTransaction_js__WEBPACK_IMPORTED_MODULE_5__.BaseTransaction._validateNotArray(txData);
        if (this.gasLimit * this.maxFeePerGas > _constants_js__WEBPACK_IMPORTED_MODULE_4__.MAX_INTEGER) {
            const msg = this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)');
            throw new Error(msg);
        }
        if (this.maxFeePerGas < this.maxPriorityFeePerGas) {
            const msg = this._errorMsg('maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)');
            throw new Error(msg);
        }
        this._validateYParity();
        this._validateHighS();
        const freeze = (_a = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _a !== void 0 ? _a : true;
        if (freeze) {
            Object.freeze(this);
        }
    }
    /**
     * The amount of gas paid for the data in this tx
     */
    getDataFee() {
        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {
            return this.cache.dataFee.value;
        }
        let cost = super.getDataFee();
        cost += BigInt((0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.getDataFeeEIP2930)(this.accessList, this.common));
        if (Object.isFrozen(this)) {
            this.cache.dataFee = {
                value: cost,
                hardfork: this.common.hardfork(),
            };
        }
        return cost;
    }
    /**
     * The up front amount that an account must have for this transaction to be valid
     * @param baseFee The base fee of the block (will be set to 0 if not provided)
     */
    getUpfrontCost(baseFee = BigInt(0)) {
        const prio = this.maxPriorityFeePerGas;
        const maxBase = this.maxFeePerGas - baseFee;
        const inclusionFeePerGas = prio < maxBase ? prio : maxBase;
        const gasPrice = inclusionFeePerGas + baseFee;
        return this.gasLimit * gasPrice + this.value;
    }
    /**
     * Returns a Uint8Array Array of the raw Uint8Arrays of the EIP-1559 transaction, in order.
     *
     * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,
     * accessList, signatureYParity, signatureR, signatureS]`
     *
     * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block
     * with {@link Block.fromValuesArray}.
     *
     * For an unsigned tx this method uses the empty Uint8Array values for the
     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant
     * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.
     */
    raw() {
        return [
            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(this.chainId),
            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(this.nonce),
            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(this.maxPriorityFeePerGas),
            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(this.maxFeePerGas),
            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(this.gasLimit),
            this.to !== undefined ? this.to.buf : Uint8Array.from([]),
            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(this.value),
            this.data,
            this.accessList,
            this.v !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(this.v) : Uint8Array.from([]),
            this.r !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(this.r) : Uint8Array.from([]),
            this.s !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(this.s) : Uint8Array.from([]),
        ];
    }
    /**
     * Returns the serialized encoding of the EIP-1559 transaction.
     *
     * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,
     * accessList, signatureYParity, signatureR, signatureS])`
     *
     * Note that in contrast to the legacy tx serialization format this is not
     * valid RLP any more due to the raw tx type preceding and concatenated to
     * the RLP encoding of the values.
     */
    serialize() {
        const base = this.raw();
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.uint8ArrayConcat)(TRANSACTION_TYPE_UINT8ARRAY, _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_2__.RLP.encode(base));
    }
    /**
     * Returns the serialized unsigned tx (hashed or raw), which can be used
     * to sign the transaction (e.g. for sending to a hardware wallet).
     *
     * Note: in contrast to the legacy tx the raw message format is already
     * serialized and doesn't need to be RLP encoded any more.
     *
     * ```javascript
     * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input
     * ```
     *
     * @param hashMessage - Return hashed message if set to true (default: true)
     */
    getMessageToSign(hashMessage = true) {
        const base = this.raw().slice(0, 9);
        const message = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.uint8ArrayConcat)(TRANSACTION_TYPE_UINT8ARRAY, _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_2__.RLP.encode(base));
        if (hashMessage) {
            return (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(message);
        }
        return message;
    }
    /**
     * Computes a sha3-256 hash of the serialized tx.
     *
     * This method can only be used for signed txs (it throws otherwise).
     * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.
     */
    hash() {
        if (!this.isSigned()) {
            const msg = this._errorMsg('Cannot call hash method if transaction is not signed');
            throw new Error(msg);
        }
        if (Object.isFrozen(this)) {
            if (!this.cache.hash) {
                this.cache.hash = (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(this.serialize());
            }
            return this.cache.hash;
        }
        return (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(this.serialize());
    }
    /**
     * Computes a sha3-256 hash which can be used to verify the signature
     */
    getMessageToVerifySignature() {
        return this.getMessageToSign();
    }
    /**
     * Returns the public key of the sender
     */
    getSenderPublicKey() {
        if (!this.isSigned()) {
            const msg = this._errorMsg('Cannot call this method if transaction is not signed');
            throw new Error(msg);
        }
        const msgHash = this.getMessageToVerifySignature();
        const { v, r, s } = this;
        this._validateHighS();
        try {
            return (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.ecrecover)(msgHash, v + BigInt(27), // Recover the 27 which was stripped from ecsign
            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(r), (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(s));
        }
        catch (e) {
            const msg = this._errorMsg('Invalid Signature');
            throw new Error(msg);
        }
    }
    _processSignature(v, r, s) {
        const opts = Object.assign(Object.assign({}, this.txOptions), { common: this.common });
        return FeeMarketEIP1559Transaction.fromTxData({
            chainId: this.chainId,
            nonce: this.nonce,
            maxPriorityFeePerGas: this.maxPriorityFeePerGas,
            maxFeePerGas: this.maxFeePerGas,
            gasLimit: this.gasLimit,
            to: this.to,
            value: this.value,
            data: this.data,
            accessList: this.accessList,
            v: v - BigInt(27), // This looks extremely hacky: /util actually adds 27 to the value, the recovery bit is either 0 or 1.
            r: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.uint8ArrayToBigInt)(r),
            s: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.uint8ArrayToBigInt)(s),
        }, opts);
    }
    /**
     * Returns an object with the JSON representation of the transaction
     */
    toJSON() {
        const accessListJSON = (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.getAccessListJSON)(this.accessList);
        return {
            chainId: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToHex)(this.chainId),
            nonce: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToHex)(this.nonce),
            maxPriorityFeePerGas: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToHex)(this.maxPriorityFeePerGas),
            maxFeePerGas: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToHex)(this.maxFeePerGas),
            gasLimit: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToHex)(this.gasLimit),
            to: this.to !== undefined ? this.to.toString() : undefined,
            value: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToHex)(this.value),
            data: (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)(this.data),
            accessList: accessListJSON,
            v: this.v !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToHex)(this.v) : undefined,
            r: this.r !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToHex)(this.r) : undefined,
            s: this.s !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToHex)(this.s) : undefined,
        };
    }
    /**
     * Return a compact error string representation of the object
     */
    errorStr() {
        let errorStr = this._getSharedErrorPostfix();
        errorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`;
        return errorStr;
    }
    /**
     * Internal helper function to create an annotated error message
     *
     * @param msg Base error message
     * @hidden
     */
    _errorMsg(msg) {
        return `${msg} (${this.errorStr()})`;
    }
}
//# sourceMappingURL=eip1559Transaction.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/tx/eip2930Transaction.js":
/*!*************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/eip2930Transaction.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AccessListEIP2930Transaction: () => (/* binding */ AccessListEIP2930Transaction)
/* harmony export */ });
/* harmony import */ var ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/keccak.js */ "./node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/esm/keccak.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethereumjs/rlp */ "./node_modules/@ethereumjs/rlp/dist/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/constants.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/utils.js");
/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/utils.js */ "./node_modules/web3-eth-accounts/lib/esm/common/utils.js");
/* harmony import */ var _baseTransaction_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./baseTransaction.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/baseTransaction.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/








const TRANSACTION_TYPE = 1;
const TRANSACTION_TYPE_UINT8ARRAY = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToBytes)(TRANSACTION_TYPE.toString(16).padStart(2, '0'));
/**
 * Typed transaction with optional access lists
 *
 * - TransactionType: 1
 * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)
 */
// eslint-disable-next-line no-use-before-define
class AccessListEIP2930Transaction extends _baseTransaction_js__WEBPACK_IMPORTED_MODULE_7__.BaseTransaction {
    /**
     * Instantiate a transaction from a data dictionary.
     *
     * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,
     * v, r, s }
     *
     * Notes:
     * - `chainId` will be set automatically if not provided
     * - All parameters are optional and have some basic default values
     */
    static fromTxData(txData, opts = {}) {
        return new AccessListEIP2930Transaction(txData, opts);
    }
    /**
     * Instantiate a transaction from the serialized tx.
     *
     * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,
     * signatureYParity (v), signatureR (r), signatureS (s)])`
     */
    static fromSerializedTx(serialized, opts = {}) {
        if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.uint8ArrayEquals)(serialized.subarray(0, 1), TRANSACTION_TYPE_UINT8ARRAY)) {
            throw new Error(`Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${(0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)(serialized.subarray(0, 1))}`);
        }
        const values = _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_2__.RLP.decode(Uint8Array.from(serialized.subarray(1)));
        if (!Array.isArray(values)) {
            throw new Error('Invalid serialized tx input: must be array');
        }
        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
        return AccessListEIP2930Transaction.fromValuesArray(values, opts);
    }
    /**
     * Create a transaction from a values array.
     *
     * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,
     * signatureYParity (v), signatureR (r), signatureS (s)]`
     */
    static fromValuesArray(values, opts = {}) {
        if (values.length !== 8 && values.length !== 11) {
            throw new Error('Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).');
        }
        const [chainId, nonce, gasPrice, gasLimit, to, value, data, accessList, v, r, s] = values;
        this._validateNotArray({ chainId, v });
        (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.validateNoLeadingZeroes)({ nonce, gasPrice, gasLimit, value, v, r, s });
        const emptyAccessList = [];
        return new AccessListEIP2930Transaction({
            chainId: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.uint8ArrayToBigInt)(chainId),
            nonce,
            gasPrice,
            gasLimit,
            to,
            value,
            data,
            accessList: accessList !== null && accessList !== void 0 ? accessList : emptyAccessList,
            v: v !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.uint8ArrayToBigInt)(v) : undefined, // EIP2930 supports v's with value 0 (empty Uint8Array)
            r,
            s,
        }, opts);
    }
    /**
     * This constructor takes the values, validates them, assigns them and freezes the object.
     *
     * It is not recommended to use this constructor directly. Instead use
     * the static factory methods to assist in creating a Transaction object from
     * varying data types.
     */
    constructor(txData, opts = {}) {
        var _a;
        super(Object.assign(Object.assign({}, txData), { type: TRANSACTION_TYPE }), opts);
        /**
         * The default HF if the tx type is active on that HF
         * or the first greater HF where the tx is active.
         *
         * @hidden
         */
        this.DEFAULT_HARDFORK = 'berlin';
        const { chainId, accessList, gasPrice } = txData;
        this.common = this._getCommon(opts.common, chainId);
        this.chainId = this.common.chainId();
        // EIP-2718 check is done in Common
        if (!this.common.isActivatedEIP(2930)) {
            throw new Error('EIP-2930 not enabled on Common');
        }
        this.activeCapabilities = this.activeCapabilities.concat([2718, 2930]);
        // Populate the access list fields
        const accessListData = (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.getAccessListData)(accessList !== null && accessList !== void 0 ? accessList : []);
        this.accessList = accessListData.accessList;
        this.AccessListJSON = accessListData.AccessListJSON;
        // Verify the access list format.
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.verifyAccessList)(this.accessList);
        this.gasPrice = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.toUint8Array)(gasPrice === '' ? '0x' : gasPrice));
        this._validateCannotExceedMaxInteger({
            gasPrice: this.gasPrice,
        });
        _baseTransaction_js__WEBPACK_IMPORTED_MODULE_7__.BaseTransaction._validateNotArray(txData);
        if (this.gasPrice * this.gasLimit > _constants_js__WEBPACK_IMPORTED_MODULE_4__.MAX_INTEGER) {
            const msg = this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER');
            throw new Error(msg);
        }
        this._validateYParity();
        this._validateHighS();
        const freeze = (_a = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _a !== void 0 ? _a : true;
        if (freeze) {
            Object.freeze(this);
        }
    }
    /**
     * The amount of gas paid for the data in this tx
     */
    getDataFee() {
        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {
            return this.cache.dataFee.value;
        }
        let cost = super.getDataFee();
        cost += BigInt((0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.getDataFeeEIP2930)(this.accessList, this.common));
        if (Object.isFrozen(this)) {
            this.cache.dataFee = {
                value: cost,
                hardfork: this.common.hardfork(),
            };
        }
        return cost;
    }
    /**
     * The up front amount that an account must have for this transaction to be valid
     */
    getUpfrontCost() {
        return this.gasLimit * this.gasPrice + this.value;
    }
    /**
     * Returns a Uint8Array Array of the raw Uint8Arrays of the EIP-2930 transaction, in order.
     *
     * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,
     * signatureYParity (v), signatureR (r), signatureS (s)]`
     *
     * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block
     * with {@link Block.fromValuesArray}.
     *
     * For an unsigned tx this method uses the empty UINT8ARRAY values for the
     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant
     * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.
     */
    raw() {
        return [
            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(this.chainId),
            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(this.nonce),
            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(this.gasPrice),
            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(this.gasLimit),
            this.to !== undefined ? this.to.buf : Uint8Array.from([]),
            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(this.value),
            this.data,
            this.accessList,
            this.v !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(this.v) : Uint8Array.from([]),
            this.r !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(this.r) : Uint8Array.from([]),
            this.s !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(this.s) : Uint8Array.from([]),
        ];
    }
    /**
     * Returns the serialized encoding of the EIP-2930 transaction.
     *
     * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,
     * signatureYParity (v), signatureR (r), signatureS (s)])`
     *
     * Note that in contrast to the legacy tx serialization format this is not
     * valid RLP any more due to the raw tx type preceding and concatenated to
     * the RLP encoding of the values.
     */
    serialize() {
        const base = this.raw();
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.uint8ArrayConcat)(TRANSACTION_TYPE_UINT8ARRAY, _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_2__.RLP.encode(base));
    }
    /**
     * Returns the serialized unsigned tx (hashed or raw), which can be used
     * to sign the transaction (e.g. for sending to a hardware wallet).
     *
     * Note: in contrast to the legacy tx the raw message format is already
     * serialized and doesn't need to be RLP encoded any more.
     *
     * ```javascript
     * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input
     * ```
     *
     * @param hashMessage - Return hashed message if set to true (default: true)
     */
    getMessageToSign(hashMessage = true) {
        const base = this.raw().slice(0, 8);
        const message = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.uint8ArrayConcat)(TRANSACTION_TYPE_UINT8ARRAY, _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_2__.RLP.encode(base));
        if (hashMessage) {
            return (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(message);
        }
        return message;
    }
    /**
     * Computes a sha3-256 hash of the serialized tx.
     *
     * This method can only be used for signed txs (it throws otherwise).
     * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.
     */
    hash() {
        if (!this.isSigned()) {
            const msg = this._errorMsg('Cannot call hash method if transaction is not signed');
            throw new Error(msg);
        }
        if (Object.isFrozen(this)) {
            if (!this.cache.hash) {
                this.cache.hash = (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(this.serialize());
            }
            return this.cache.hash;
        }
        return (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(this.serialize());
    }
    /**
     * Computes a sha3-256 hash which can be used to verify the signature
     */
    getMessageToVerifySignature() {
        return this.getMessageToSign();
    }
    /**
     * Returns the public key of the sender
     */
    getSenderPublicKey() {
        if (!this.isSigned()) {
            const msg = this._errorMsg('Cannot call this method if transaction is not signed');
            throw new Error(msg);
        }
        const msgHash = this.getMessageToVerifySignature();
        const { v, r, s } = this;
        this._validateHighS();
        try {
            return (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.ecrecover)(msgHash, v + BigInt(27), // Recover the 27 which was stripped from ecsign
            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(r), (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(s));
        }
        catch (e) {
            const msg = this._errorMsg('Invalid Signature');
            throw new Error(msg);
        }
    }
    _processSignature(v, r, s) {
        const opts = Object.assign(Object.assign({}, this.txOptions), { common: this.common });
        return AccessListEIP2930Transaction.fromTxData({
            chainId: this.chainId,
            nonce: this.nonce,
            gasPrice: this.gasPrice,
            gasLimit: this.gasLimit,
            to: this.to,
            value: this.value,
            data: this.data,
            accessList: this.accessList,
            v: v - BigInt(27), // This looks extremely hacky: /util actually adds 27 to the value, the recovery bit is either 0 or 1.
            r: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.uint8ArrayToBigInt)(r),
            s: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.uint8ArrayToBigInt)(s),
        }, opts);
    }
    /**
     * Returns an object with the JSON representation of the transaction
     */
    toJSON() {
        const accessListJSON = (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.getAccessListJSON)(this.accessList);
        return {
            chainId: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToHex)(this.chainId),
            nonce: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToHex)(this.nonce),
            gasPrice: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToHex)(this.gasPrice),
            gasLimit: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToHex)(this.gasLimit),
            to: this.to !== undefined ? this.to.toString() : undefined,
            value: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToHex)(this.value),
            data: (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)(this.data),
            accessList: accessListJSON,
            v: this.v !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToHex)(this.v) : undefined,
            r: this.r !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToHex)(this.r) : undefined,
            s: this.s !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToHex)(this.s) : undefined,
        };
    }
    /**
     * Return a compact error string representation of the object
     */
    errorStr() {
        var _a, _b;
        let errorStr = this._getSharedErrorPostfix();
        // Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail
        errorStr += ` gasPrice=${this.gasPrice} accessListCount=${(_b = (_a = this.accessList) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0}`;
        return errorStr;
    }
    /**
     * Internal helper function to create an annotated error message
     *
     * @param msg Base error message
     * @hidden
     */
    _errorMsg(msg) {
        return `${msg} (${this.errorStr()})`;
    }
}
//# sourceMappingURL=eip2930Transaction.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/tx/index.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AccessListEIP2930Transaction: () => (/* reexport safe */ _eip2930Transaction_js__WEBPACK_IMPORTED_MODULE_1__.AccessListEIP2930Transaction),
/* harmony export */   BaseTransaction: () => (/* reexport safe */ _baseTransaction_js__WEBPACK_IMPORTED_MODULE_4__.BaseTransaction),
/* harmony export */   Capability: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_6__.Capability),
/* harmony export */   FeeMarketEIP1559Transaction: () => (/* reexport safe */ _eip1559Transaction_js__WEBPACK_IMPORTED_MODULE_0__.FeeMarketEIP1559Transaction),
/* harmony export */   Transaction: () => (/* reexport safe */ _legacyTransaction_js__WEBPACK_IMPORTED_MODULE_2__.Transaction),
/* harmony export */   TransactionFactory: () => (/* reexport safe */ _transactionFactory_js__WEBPACK_IMPORTED_MODULE_3__.TransactionFactory),
/* harmony export */   isAccessList: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_6__.isAccessList),
/* harmony export */   isAccessListUint8Array: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_6__.isAccessListUint8Array),
/* harmony export */   txUtils: () => (/* reexport module object */ _utils_js__WEBPACK_IMPORTED_MODULE_5__)
/* harmony export */ });
/* harmony import */ var _eip1559Transaction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./eip1559Transaction.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/eip1559Transaction.js");
/* harmony import */ var _eip2930Transaction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./eip2930Transaction.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/eip2930Transaction.js");
/* harmony import */ var _legacyTransaction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./legacyTransaction.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/legacyTransaction.js");
/* harmony import */ var _transactionFactory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./transactionFactory.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/transactionFactory.js");
/* harmony import */ var _baseTransaction_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./baseTransaction.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/baseTransaction.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/utils.js");
/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./types.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/types.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
// @ethereumjs/tx version 4.1.1







//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/tx/legacyTransaction.js":
/*!************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/legacyTransaction.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Transaction: () => (/* binding */ Transaction)
/* harmony export */ });
/* harmony import */ var _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethereumjs/rlp */ "./node_modules/@ethereumjs/rlp/dist/index.js");
/* harmony import */ var ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethereum-cryptography/keccak.js */ "./node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/esm/keccak.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/utils.js */ "./node_modules/web3-eth-accounts/lib/esm/common/utils.js");
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constants.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/constants.js");
/* harmony import */ var _baseTransaction_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./baseTransaction.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/baseTransaction.js");
/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./types.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/types.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/








const TRANSACTION_TYPE = 0;
function meetsEIP155(_v, chainId) {
    const v = Number(_v);
    const chainIdDoubled = Number(chainId) * 2;
    return v === chainIdDoubled + 35 || v === chainIdDoubled + 36;
}
/**
 * An Ethereum non-typed (legacy) transaction
 */
// eslint-disable-next-line no-use-before-define
class Transaction extends _baseTransaction_js__WEBPACK_IMPORTED_MODULE_6__.BaseTransaction {
    /**
     * Instantiate a transaction from a data dictionary.
     *
     * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }
     *
     * Notes:
     * - All parameters are optional and have some basic default values
     */
    static fromTxData(txData, opts = {}) {
        return new Transaction(txData, opts);
    }
    /**
     * Instantiate a transaction from the serialized tx.
     *
     * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`
     */
    static fromSerializedTx(serialized, opts = {}) {
        const values = _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_0__.RLP.decode(serialized);
        if (!Array.isArray(values)) {
            throw new Error('Invalid serialized tx input. Must be array');
        }
        return this.fromValuesArray(values, opts);
    }
    /**
     * Create a transaction from a values array.
     *
     * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`
     */
    static fromValuesArray(values, opts = {}) {
        // If length is not 6, it has length 9. If v/r/s are empty Uint8Array, it is still an unsigned transaction
        // This happens if you get the RLP data from `raw()`
        if (values.length !== 6 && values.length !== 9) {
            throw new Error('Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).');
        }
        const [nonce, gasPrice, gasLimit, to, value, data, v, r, s] = values;
        (0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.validateNoLeadingZeroes)({ nonce, gasPrice, gasLimit, value, v, r, s });
        return new Transaction({
            nonce,
            gasPrice,
            gasLimit,
            to,
            value,
            data,
            v,
            r,
            s,
        }, opts);
    }
    /**
     * This constructor takes the values, validates them, assigns them and freezes the object.
     *
     * It is not recommended to use this constructor directly. Instead use
     * the static factory methods to assist in creating a Transaction object from
     * varying data types.
     */
    constructor(txData, opts = {}) {
        var _a;
        super(Object.assign(Object.assign({}, txData), { type: TRANSACTION_TYPE }), opts);
        this.common = this._validateTxV(this.v, opts.common);
        this.gasPrice = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.toUint8Array)(txData.gasPrice === '' ? '0x' : txData.gasPrice));
        if (this.gasPrice * this.gasLimit > _constants_js__WEBPACK_IMPORTED_MODULE_5__.MAX_INTEGER) {
            const msg = this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)');
            throw new Error(msg);
        }
        this._validateCannotExceedMaxInteger({ gasPrice: this.gasPrice });
        _baseTransaction_js__WEBPACK_IMPORTED_MODULE_6__.BaseTransaction._validateNotArray(txData);
        if (this.common.gteHardfork('spuriousDragon')) {
            if (!this.isSigned()) {
                this.activeCapabilities.push(_types_js__WEBPACK_IMPORTED_MODULE_7__.Capability.EIP155ReplayProtection);
            }
            else {
                // EIP155 spec:
                // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36
                // then when computing the hash of a transaction for purposes of signing or recovering
                // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)
                // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.
                // v and chain ID meet EIP-155 conditions
                // eslint-disable-next-line no-lonely-if
                if (meetsEIP155(this.v, this.common.chainId())) {
                    this.activeCapabilities.push(_types_js__WEBPACK_IMPORTED_MODULE_7__.Capability.EIP155ReplayProtection);
                }
            }
        }
        const freeze = (_a = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _a !== void 0 ? _a : true;
        if (freeze) {
            Object.freeze(this);
        }
    }
    /**
     * Returns a Uint8Array Array of the raw Uint8Arrays of the legacy transaction, in order.
     *
     * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`
     *
     * For legacy txs this is also the correct format to add transactions
     * to a block with {@link Block.fromValuesArray} (use the `serialize()` method
     * for typed txs).
     *
     * For an unsigned tx this method returns the empty Uint8Array values
     * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant
     * representation have a look at {@link Transaction.getMessageToSign}.
     */
    raw() {
        return [
            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.nonce),
            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.gasPrice),
            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.gasLimit),
            this.to !== undefined ? this.to.buf : Uint8Array.from([]),
            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.value),
            this.data,
            this.v !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.v) : Uint8Array.from([]),
            this.r !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.r) : Uint8Array.from([]),
            this.s !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.s) : Uint8Array.from([]),
        ];
    }
    /**
     * Returns the serialized encoding of the legacy transaction.
     *
     * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`
     *
     * For an unsigned tx this method uses the empty Uint8Array values for the
     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant
     * representation for external signing use {@link Transaction.getMessageToSign}.
     */
    serialize() {
        return _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_0__.RLP.encode(this.raw());
    }
    _getMessageToSign() {
        const values = [
            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.nonce),
            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.gasPrice),
            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.gasLimit),
            this.to !== undefined ? this.to.buf : Uint8Array.from([]),
            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.value),
            this.data,
        ];
        if (this.supports(_types_js__WEBPACK_IMPORTED_MODULE_7__.Capability.EIP155ReplayProtection)) {
            values.push((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.toUint8Array)(this.common.chainId()));
            values.push((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.unpadUint8Array)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.toUint8Array)(0)));
            values.push((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.unpadUint8Array)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.toUint8Array)(0)));
        }
        return values;
    }
    getMessageToSign(hashMessage = true) {
        const message = this._getMessageToSign();
        if (hashMessage) {
            return (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)(_ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_0__.RLP.encode(message));
        }
        return message;
    }
    /**
     * The amount of gas paid for the data in this tx
     */
    getDataFee() {
        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {
            return this.cache.dataFee.value;
        }
        if (Object.isFrozen(this)) {
            this.cache.dataFee = {
                value: super.getDataFee(),
                hardfork: this.common.hardfork(),
            };
        }
        return super.getDataFee();
    }
    /**
     * The up front amount that an account must have for this transaction to be valid
     */
    getUpfrontCost() {
        return this.gasLimit * this.gasPrice + this.value;
    }
    /**
     * Computes a sha3-256 hash of the serialized tx.
     *
     * This method can only be used for signed txs (it throws otherwise).
     * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.
     */
    hash() {
        if (!this.isSigned()) {
            const msg = this._errorMsg('Cannot call hash method if transaction is not signed');
            throw new Error(msg);
        }
        if (Object.isFrozen(this)) {
            if (!this.cache.hash) {
                this.cache.hash = (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)(_ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_0__.RLP.encode(this.raw()));
            }
            return this.cache.hash;
        }
        return (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)(_ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_0__.RLP.encode(this.raw()));
    }
    /**
     * Computes a sha3-256 hash which can be used to verify the signature
     */
    getMessageToVerifySignature() {
        if (!this.isSigned()) {
            const msg = this._errorMsg('This transaction is not signed');
            throw new Error(msg);
        }
        const message = this._getMessageToSign();
        return (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)(_ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_0__.RLP.encode(message));
    }
    /**
     * Returns the public key of the sender
     */
    getSenderPublicKey() {
        const msgHash = this.getMessageToVerifySignature();
        const { v, r, s } = this;
        this._validateHighS();
        try {
            return (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.ecrecover)(msgHash, v, (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(r), (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(s), this.supports(_types_js__WEBPACK_IMPORTED_MODULE_7__.Capability.EIP155ReplayProtection)
                ? this.common.chainId()
                : undefined);
        }
        catch (e) {
            const msg = this._errorMsg('Invalid Signature');
            throw new Error(msg);
        }
    }
    /**
     * Process the v, r, s values from the `sign` method of the base transaction.
     */
    _processSignature(_v, r, s) {
        let v = _v;
        if (this.supports(_types_js__WEBPACK_IMPORTED_MODULE_7__.Capability.EIP155ReplayProtection)) {
            v += this.common.chainId() * BigInt(2) + BigInt(8);
        }
        const opts = Object.assign(Object.assign({}, this.txOptions), { common: this.common });
        return Transaction.fromTxData({
            nonce: this.nonce,
            gasPrice: this.gasPrice,
            gasLimit: this.gasLimit,
            to: this.to,
            value: this.value,
            data: this.data,
            v,
            r: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.uint8ArrayToBigInt)(r),
            s: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.uint8ArrayToBigInt)(s),
        }, opts);
    }
    /**
     * Returns an object with the JSON representation of the transaction.
     */
    toJSON() {
        return {
            nonce: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToHex)(this.nonce),
            gasPrice: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToHex)(this.gasPrice),
            gasLimit: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToHex)(this.gasLimit),
            to: this.to !== undefined ? this.to.toString() : undefined,
            value: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToHex)(this.value),
            data: (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.bytesToHex)(this.data),
            v: this.v !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToHex)(this.v) : undefined,
            r: this.r !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToHex)(this.r) : undefined,
            s: this.s !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToHex)(this.s) : undefined,
        };
    }
    /**
     * Validates tx's `v` value
     */
    _validateTxV(_v, common) {
        let chainIdBigInt;
        const v = _v !== undefined ? Number(_v) : undefined;
        // Check for valid v values in the scope of a signed legacy tx
        if (v !== undefined) {
            // v is 1. not matching the EIP-155 chainId included case and...
            // v is 2. not matching the classic v=27 or v=28 case
            if (v < 37 && v !== 27 && v !== 28) {
                throw new Error(`Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = ${v}`);
            }
        }
        // No unsigned tx and EIP-155 activated and chain ID included
        if (v !== undefined &&
            v !== 0 &&
            (!common || common.gteHardfork('spuriousDragon')) &&
            v !== 27 &&
            v !== 28) {
            if (common) {
                if (!meetsEIP155(BigInt(v), common.chainId())) {
                    throw new Error(`Incompatible EIP155-based V ${v} and chain id ${common.chainId()}. See the Common parameter of the Transaction constructor to set the chain id.`);
                }
            }
            else {
                // Derive the original chain ID
                let numSub;
                if ((v - 35) % 2 === 0) {
                    numSub = 35;
                }
                else {
                    numSub = 36;
                }
                // Use derived chain ID to create a proper Common
                chainIdBigInt = BigInt(v - numSub) / BigInt(2);
            }
        }
        return this._getCommon(common, chainIdBigInt);
    }
    /**
     * Return a compact error string representation of the object
     */
    errorStr() {
        let errorStr = this._getSharedErrorPostfix();
        errorStr += ` gasPrice=${this.gasPrice}`;
        return errorStr;
    }
    /**
     * Internal helper function to create an annotated error message
     *
     * @param msg Base error message
     * @hidden
     */
    _errorMsg(msg) {
        return `${msg} (${this.errorStr()})`;
    }
}
//# sourceMappingURL=legacyTransaction.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/tx/transactionFactory.js":
/*!*************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/transactionFactory.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TransactionFactory: () => (/* binding */ TransactionFactory)
/* harmony export */ });
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/utils.js */ "./node_modules/web3-eth-accounts/lib/esm/common/utils.js");
/* harmony import */ var _eip1559Transaction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./eip1559Transaction.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/eip1559Transaction.js");
/* harmony import */ var _eip2930Transaction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./eip2930Transaction.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/eip2930Transaction.js");
/* harmony import */ var _legacyTransaction_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./legacyTransaction.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/legacyTransaction.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/





const extraTxTypes = new Map();
// eslint-disable-next-line @typescript-eslint/no-extraneous-class
class TransactionFactory {
    // It is not possible to instantiate a TransactionFactory object.
    // eslint-disable-next-line no-useless-constructor, @typescript-eslint/no-empty-function
    constructor() { }
    static typeToInt(txType) {
        return Number((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_1__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_1__.toUint8Array)(txType)));
    }
    static registerTransactionType(type, txClass) {
        const txType = TransactionFactory.typeToInt(type);
        extraTxTypes.set(txType, txClass);
    }
    /**
     * Create a transaction from a `txData` object
     *
     * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)
     * @param txOptions - Options to pass on to the constructor of the transaction
     */
    static fromTxData(txData, txOptions = {}) {
        if (!('type' in txData) || txData.type === undefined) {
            // Assume legacy transaction
            return _legacyTransaction_js__WEBPACK_IMPORTED_MODULE_4__.Transaction.fromTxData(txData, txOptions);
        }
        const txType = TransactionFactory.typeToInt(txData.type);
        if (txType === 0) {
            return _legacyTransaction_js__WEBPACK_IMPORTED_MODULE_4__.Transaction.fromTxData(txData, txOptions);
        }
        if (txType === 1) {
            // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
            return _eip2930Transaction_js__WEBPACK_IMPORTED_MODULE_3__.AccessListEIP2930Transaction.fromTxData(
            // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
            txData, txOptions);
        }
        if (txType === 2) {
            return _eip1559Transaction_js__WEBPACK_IMPORTED_MODULE_2__.FeeMarketEIP1559Transaction.fromTxData(
            // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
            txData, txOptions);
        }
        const ExtraTransaction = extraTxTypes.get(txType);
        if (ExtraTransaction === null || ExtraTransaction === void 0 ? void 0 : ExtraTransaction.fromTxData) {
            return ExtraTransaction.fromTxData(txData, txOptions);
        }
        throw new Error(`Tx instantiation with type ${txType} not supported`);
    }
    /**
     * This method tries to decode serialized data.
     *
     * @param data - The data Uint8Array
     * @param txOptions - The transaction options
     */
    static fromSerializedData(data, txOptions = {}) {
        if (data[0] <= 0x7f) {
            // Determine the type.
            switch (data[0]) {
                case 1:
                    return _eip2930Transaction_js__WEBPACK_IMPORTED_MODULE_3__.AccessListEIP2930Transaction.fromSerializedTx(data, txOptions);
                case 2:
                    return _eip1559Transaction_js__WEBPACK_IMPORTED_MODULE_2__.FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions);
                default: {
                    const ExtraTransaction = extraTxTypes.get(Number(data[0]));
                    if (ExtraTransaction === null || ExtraTransaction === void 0 ? void 0 : ExtraTransaction.fromSerializedTx) {
                        return ExtraTransaction.fromSerializedTx(data, txOptions);
                    }
                    throw new Error(`TypedTransaction with ID ${data[0]} unknown`);
                }
            }
        }
        else {
            return _legacyTransaction_js__WEBPACK_IMPORTED_MODULE_4__.Transaction.fromSerializedTx(data, txOptions);
        }
    }
    /**
     * When decoding a BlockBody, in the transactions field, a field is either:
     * A Uint8Array (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))
     * A Uint8Array[] (Legacy Transaction)
     * This method returns the right transaction.
     *
     * @param data - A Uint8Array or Uint8Array[]
     * @param txOptions - The transaction options
     */
    static fromBlockBodyData(data, txOptions = {}) {
        if ((0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.isUint8Array)(data)) {
            return this.fromSerializedData(data, txOptions);
        }
        if (Array.isArray(data)) {
            // It is a legacy transaction
            return _legacyTransaction_js__WEBPACK_IMPORTED_MODULE_4__.Transaction.fromValuesArray(data, txOptions);
        }
        throw new Error('Cannot decode transaction: unknown type input');
    }
}
//# sourceMappingURL=transactionFactory.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/tx/types.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/types.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Capability: () => (/* binding */ Capability),
/* harmony export */   isAccessList: () => (/* binding */ isAccessList),
/* harmony export */   isAccessListUint8Array: () => (/* binding */ isAccessListUint8Array)
/* harmony export */ });
/**
 * Can be used in conjunction with {@link Transaction.supports}
 * to query on tx capabilities
 */
var Capability;
(function (Capability) {
    /**
     * Tx supports EIP-155 replay protection
     * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP
     */
    Capability[Capability["EIP155ReplayProtection"] = 155] = "EIP155ReplayProtection";
    /**
     * Tx supports EIP-1559 gas fee market mechanism
     * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP
     */
    Capability[Capability["EIP1559FeeMarket"] = 1559] = "EIP1559FeeMarket";
    /**
     * Tx is a typed transaction as defined in EIP-2718
     * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP
     */
    Capability[Capability["EIP2718TypedTransaction"] = 2718] = "EIP2718TypedTransaction";
    /**
     * Tx supports access list generation as defined in EIP-2930
     * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP
     */
    Capability[Capability["EIP2930AccessLists"] = 2930] = "EIP2930AccessLists";
})(Capability || (Capability = {}));
function isAccessListUint8Array(input) {
    if (input.length === 0) {
        return true;
    }
    const firstItem = input[0];
    if (Array.isArray(firstItem)) {
        return true;
    }
    return false;
}
function isAccessList(input) {
    return !isAccessListUint8Array(input); // This is exactly the same method, except the output is negated.
}
//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/tx/utils.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/utils.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   checkMaxInitCodeSize: () => (/* binding */ checkMaxInitCodeSize),
/* harmony export */   getAccessListData: () => (/* binding */ getAccessListData),
/* harmony export */   getAccessListJSON: () => (/* binding */ getAccessListJSON),
/* harmony export */   getDataFeeEIP2930: () => (/* binding */ getDataFeeEIP2930),
/* harmony export */   verifyAccessList: () => (/* binding */ verifyAccessList)
/* harmony export */ });
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/utils.js */ "./node_modules/web3-eth-accounts/lib/esm/common/utils.js");
/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types.js */ "./node_modules/web3-eth-accounts/lib/esm/tx/types.js");



const checkMaxInitCodeSize = (common, length) => {
    const maxInitCodeSize = common.param('vm', 'maxInitCodeSize');
    if (maxInitCodeSize && BigInt(length) > maxInitCodeSize) {
        throw new Error(`the initcode size of this transaction is too large: it is ${length} while the max is ${common.param('vm', 'maxInitCodeSize')}`);
    }
};
const getAccessListData = (accessList) => {
    let AccessListJSON;
    let uint8arrayAccessList;
    if ((0,_types_js__WEBPACK_IMPORTED_MODULE_2__.isAccessList)(accessList)) {
        AccessListJSON = accessList;
        const newAccessList = [];
        // eslint-disable-next-line @typescript-eslint/prefer-for-of
        for (let i = 0; i < accessList.length; i += 1) {
            const item = accessList[i];
            const addressBytes = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_1__.toUint8Array)(item.address);
            const storageItems = [];
            // eslint-disable-next-line @typescript-eslint/prefer-for-of
            for (let index = 0; index < item.storageKeys.length; index += 1) {
                storageItems.push((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_1__.toUint8Array)(item.storageKeys[index]));
            }
            newAccessList.push([addressBytes, storageItems]);
        }
        uint8arrayAccessList = newAccessList;
    }
    else {
        uint8arrayAccessList = accessList !== null && accessList !== void 0 ? accessList : [];
        // build the JSON
        const json = [];
        // eslint-disable-next-line @typescript-eslint/prefer-for-of
        for (let i = 0; i < uint8arrayAccessList.length; i += 1) {
            const data = uint8arrayAccessList[i];
            const address = (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)(data[0]);
            const storageKeys = [];
            // eslint-disable-next-line @typescript-eslint/prefer-for-of
            for (let item = 0; item < data[1].length; item += 1) {
                storageKeys.push((0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)(data[1][item]));
            }
            const jsonItem = {
                address,
                storageKeys,
            };
            json.push(jsonItem);
        }
        AccessListJSON = json;
    }
    return {
        AccessListJSON,
        accessList: uint8arrayAccessList,
    };
};
const verifyAccessList = (accessList) => {
    // eslint-disable-next-line @typescript-eslint/prefer-for-of
    for (let key = 0; key < accessList.length; key += 1) {
        const accessListItem = accessList[key];
        const address = accessListItem[0];
        const storageSlots = accessListItem[1];
        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/consistent-type-assertions
        if (accessListItem[2] !== undefined) {
            throw new Error('Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.');
        }
        if (address.length !== 20) {
            throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes');
        }
        // eslint-disable-next-line @typescript-eslint/prefer-for-of
        for (let storageSlot = 0; storageSlot < storageSlots.length; storageSlot += 1) {
            if (storageSlots[storageSlot].length !== 32) {
                throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes');
            }
        }
    }
};
const getAccessListJSON = (accessList) => {
    const accessListJSON = [];
    // eslint-disable-next-line @typescript-eslint/prefer-for-of
    for (let index = 0; index < accessList.length; index += 1) {
        const item = accessList[index];
        const JSONItem = {
            address: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_1__.setLengthLeft)(item[0], 20)),
            storageKeys: [],
        };
        // eslint-disable-next-line @typescript-eslint/prefer-optional-chain
        const storageSlots = item && item[1];
        // eslint-disable-next-line @typescript-eslint/prefer-for-of
        for (let slot = 0; slot < storageSlots.length; slot += 1) {
            const storageSlot = storageSlots[slot];
            JSONItem.storageKeys.push((0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_1__.setLengthLeft)(storageSlot, 32)));
        }
        accessListJSON.push(JSONItem);
    }
    return accessListJSON;
};
const getDataFeeEIP2930 = (accessList, common) => {
    const accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost');
    const accessListAddressCost = common.param('gasPrices', 'accessListAddressCost');
    let slots = 0;
    // eslint-disable-next-line @typescript-eslint/prefer-for-of
    for (let index = 0; index < accessList.length; index += 1) {
        const item = accessList[index];
        const storageSlots = item[1];
        slots += storageSlots.length;
    }
    const addresses = accessList.length;
    return addresses * Number(accessListAddressCost) + slots * Number(accessListStorageKeyCost);
};
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/types.js":
/*!*********************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/types.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/lib/esm/wallet.js":
/*!**********************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/wallet.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Wallet: () => (/* binding */ Wallet)
/* harmony export */ });
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};


/**
 * Wallet is an in memory `wallet` that can hold multiple accounts.
 * These accounts can be used when using web3.eth.sendTransaction() or web3.eth.contract.methods.contractfunction().send();
 *
 * For using Wallet functionality, install Web3 package using `npm i web3` or `yarn add web3`.
 * After that, Wallet functionality will be available as mentioned below.
 *
 * ```ts
 * import { Web3 } from 'web3';
 * const web3 = new Web3('http://127.0.0.1:7545');
 *
 * const wallet = await web3.eth.accounts.wallet.create(2);
 *
 * const signature = wallet.at(0).sign("Test Data"); // use wallet
 *
 * // fund account before sending following transaction ...
 *
 * const receipt = await web3.eth.sendTransaction({ // internally sign transaction using wallet
 *    from: wallet.at(0).address,
 *    to: "0xdAC17F958D2ee523a2206206994597C13D831ec7",
 *    value: 1
 *    //....
 * });
 * ```
 */
class Wallet extends web3_types__WEBPACK_IMPORTED_MODULE_0__.Web3BaseWallet {
    constructor() {
        super(...arguments);
        this._addressMap = new Map();
        this._defaultKeyName = 'web3js_wallet';
    }
    /**
     * Get the storage object of the browser
     *
     * @returns the storage
     */
    static getStorage() {
        let storage;
        try {
            storage = window.localStorage;
            const x = '__storage_test__';
            storage.setItem(x, x);
            storage.removeItem(x);
            return storage;
        }
        catch (e) {
            return e &&
                // everything except Firefox
                (e.code === 22 ||
                    // Firefox
                    e.code === 1014 ||
                    // test name field too, because code might not be present
                    // everything except Firefox
                    e.name === 'QuotaExceededError' ||
                    // Firefox
                    e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&
                // acknowledge QuotaExceededError only if there's something already stored
                !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(storage) &&
                storage.length !== 0
                ? storage
                : undefined;
        }
    }
    /**
     * Generates one or more accounts in the wallet. If wallets already exist they will not be overridden.
     *
     * @param numberOfAccounts - Number of accounts to create. Leave empty to create an empty wallet.
     * @returns The wallet
     * ```ts
     * web3.eth.accounts.wallet.create(2)
     * > Wallet(2) [
     *   {
     *     address: '0xde38310a42B751AE57d30cFFF4a0A3c52A442fCE',
     *     privateKey: '0x6422c9d28efdcbee93c1d32a5fc6fd6fa081b985487885296cf8c9bbb5872600',
     *     signTransaction: [Function: signTransaction],
     *     sign: [Function: sign],
     *     encrypt: [Function: encrypt]
     *   },
     *   {
     *     address: '0x766BF755246d924B1d017Fdb5390f38a60166691',
     *     privateKey: '0x756530f13c0eb636ebdda655335f5dea9921e3362e2e588b0ad59e556f7751f0',
     *     signTransaction: [Function: signTransaction],
     *     sign: [Function: sign],
     *     encrypt: [Function: encrypt]
     *   },
     *   _accountProvider: {
     *     create: [Function: create],
     *     privateKeyToAccount: [Function: privateKeyToAccount],
     *     decrypt: [Function: decrypt]
     *   },
     *   _addressMap: Map(2) {
     *     '0xde38310a42b751ae57d30cfff4a0a3c52a442fce' => 0,
     *     '0x766bf755246d924b1d017fdb5390f38a60166691' => 1
     *   },
     *   _defaultKeyName: 'web3js_wallet'
     * ]
     *
     * ```
     */
    create(numberOfAccounts) {
        for (let i = 0; i < numberOfAccounts; i += 1) {
            this.add(this._accountProvider.create());
        }
        return this;
    }
    /**
     * Adds an account using a private key or account object to the wallet.
     *
     * @param account - A private key or account object
     * @returns The wallet
     *
     * ```ts
     * web3.eth.accounts.wallet.add('0xbce9b59981303e76c4878b1a6d7b088ec6b9dd5c966b7d5f54d7a749ff683387');
     * > Wallet(1) [
     *   {
     *     address: '0x85D70633b90e03e0276B98880286D0D055685ed7',
     *     privateKey: '0xbce9b59981303e76c4878b1a6d7b088ec6b9dd5c966b7d5f54d7a749ff683387',
     *     signTransaction: [Function: signTransaction],
     *     sign: [Function: sign],
     *     encrypt: [Function: encrypt]
     *   },
     *   _accountProvider: {
     *     create: [Function: create],
     *     privateKeyToAccount: [Function: privateKeyToAccount],
     *     decrypt: [Function: decrypt]
     *   },
     *   _addressMap: Map(1) { '0x85d70633b90e03e0276b98880286d0d055685ed7' => 0 },
     *   _defaultKeyName: 'web3js_wallet'
     * ]
     * ```
     */
    add(account) {
        var _a;
        if (typeof account === 'string') {
            return this.add(this._accountProvider.privateKeyToAccount(account));
        }
        let index = this.length;
        const existAccount = this.get(account.address);
        if (existAccount) {
            console.warn(`Account ${account.address.toLowerCase()} already exists.`);
            index = (_a = this._addressMap.get(account.address.toLowerCase())) !== null && _a !== void 0 ? _a : index;
        }
        this._addressMap.set(account.address.toLowerCase(), index);
        this[index] = account;
        return this;
    }
    /**
     * Get the account of the wallet with either the index or public address.
     *
     * @param addressOrIndex - A string of the address or number index within the wallet.
     * @returns The account object or undefined if the account doesn't exist
     */
    get(addressOrIndex) {
        if (typeof addressOrIndex === 'string') {
            const index = this._addressMap.get(addressOrIndex.toLowerCase());
            if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(index)) {
                return this[index];
            }
            return undefined;
        }
        return this[addressOrIndex];
    }
    /**
     * Removes an account from the wallet.
     *
     * @param addressOrIndex - The account address, or index in the wallet.
     * @returns true if the wallet was removed. false if it couldn't be found.
     * ```ts
     * web3.eth.accounts.wallet.add('0xbce9b59981303e76c4878b1a6d7b088ec6b9dd5c966b7d5f54d7a749ff683387');
     *
     * web3.eth.accounts.wallet.remove('0x85D70633b90e03e0276B98880286D0D055685ed7');
     * > true
     * web3.eth.accounts.wallet
     * > Wallet(0) [
     * _accountProvider: {
     *   create: [Function: create],
     *   privateKeyToAccount: [Function: privateKeyToAccount],
     *   decrypt: [Function: decrypt]
     * },
     * _addressMap: Map(0) {},
     * _defaultKeyName: 'web3js_wallet'
     * ]
     * ```
     */
    remove(addressOrIndex) {
        if (typeof addressOrIndex === 'string') {
            const index = this._addressMap.get(addressOrIndex.toLowerCase());
            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(index)) {
                return false;
            }
            this._addressMap.delete(addressOrIndex.toLowerCase());
            this.splice(index, 1);
            return true;
        }
        if (this[addressOrIndex]) {
            this.splice(addressOrIndex, 1);
            return true;
        }
        return false;
    }
    /**
     * Securely empties the wallet and removes all its accounts.
     * Use this with *caution as it will remove all accounts stored in local wallet.
     *
     * @returns The wallet object
     * ```ts
     *
     * web3.eth.accounts.wallet.clear();
     * > Wallet(0) [
     * _accountProvider: {
     *   create: [Function: create],
     *   privateKeyToAccount: [Function: privateKeyToAccount],
     *   decrypt: [Function: decrypt]
     * },
     * _addressMap: Map(0) {},
     * _defaultKeyName: 'web3js_wallet'
     * ]
     * ```
     */
    clear() {
        this._addressMap.clear();
        // Setting length clears the Array in JS.
        this.length = 0;
        return this;
    }
    /**
     * Encrypts all wallet accounts to an array of encrypted keystore v3 objects.
     *
     * @param password - The password which will be used for encryption
     * @param options - encryption options
     * @returns An array of the encrypted keystore v3.
     *
     * ```ts
     * web3.eth.accounts.wallet.create(1)
     * web3.eth.accounts.wallet.encrypt("abc").then(console.log);
     * > [
     * '{"version":3,"id":"fa46e213-a7c3-4844-b903-dd14d39cc7db",
     * "address":"fa3e41a401609103c241431cbdee8623ae2a321a","crypto":
     * {"ciphertext":"8d179a911d6146ad2924e86bf493ed89b8ff3596ffec0816e761c542016ab13c",
     * "cipherparams":{"iv":"acc888c6cf4a19b86846cef0185a7164"},"cipher":"aes-128-ctr",
     * "kdf":"scrypt","kdfparams":{"n":8192,"r":8,"p":1,"dklen":32,"salt":"6a743c9b367d15f4758e4f3f3378ff0fd443708d1c64854e07588ea5331823ae"},
     * "mac":"410544c8307e3691fda305eb3722d82c3431f212a87daa119a21587d96698b57"}}'
     * ]
     * ```
     */
    encrypt(password, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return Promise.all(this.map((account) => __awaiter(this, void 0, void 0, function* () { return account.encrypt(password, options); })));
        });
    }
    /**
     * Decrypts keystore v3 objects.
     *
     * @param encryptedWallets - An array of encrypted keystore v3 objects to decrypt
     * @param password - The password to encrypt with
     * @param options - decrypt options for the wallets
     * @returns The decrypted wallet object
     *
     * ```ts
     * web3.eth.accounts.wallet.decrypt([
     * { version: 3,
     * id: '83191a81-aaca-451f-b63d-0c5f3b849289',
     * address: '06f702337909c06c82b09b7a22f0a2f0855d1f68',
     * crypto:
     * { ciphertext: '7d34deae112841fba86e3e6cf08f5398dda323a8e4d29332621534e2c4069e8d',
     *   cipherparams: { iv: '497f4d26997a84d570778eae874b2333' },
     *   cipher: 'aes-128-ctr',
     *   kdf: 'scrypt',
     *   kdfparams:
     *    { dklen: 32,
     *      salt: '208dd732a27aa4803bb760228dff18515d5313fd085bbce60594a3919ae2d88d',
     *      n: 262144,
     *      r: 8,
     *      p: 1 },
     *   mac: '0062a853de302513c57bfe3108ab493733034bf3cb313326f42cf26ea2619cf9' } },
     * { version: 3,
     * id: '7d6b91fa-3611-407b-b16b-396efb28f97e',
     * address: 'b5d89661b59a9af0b34f58d19138baa2de48baaf',
     * crypto:
     * { ciphertext: 'cb9712d1982ff89f571fa5dbef447f14b7e5f142232bd2a913aac833730eeb43',
     *   cipherparams: { iv: '8cccb91cb84e435437f7282ec2ffd2db' },
     *   cipher: 'aes-128-ctr',
     *   kdf: 'scrypt',
     *   kdfparams:
     *    { dklen: 32,
     *      salt: '08ba6736363c5586434cd5b895e6fe41ea7db4785bd9b901dedce77a1514e8b8',
     *      n: 262144,
     *      r: 8,
     *      p: 1 },
     *   mac: 'd2eb068b37e2df55f56fa97a2bf4f55e072bef0dd703bfd917717d9dc54510f0' } }
     * ], 'test').then(console.log)
     * > Wallet {
     *   _accountProvider: {
     *     create: [Function: create],
     *     privateKeyToAccount: [Function: privateKeyToAccount],
     *     decrypt: [Function: decrypt]
     *   },
     *   _defaultKeyName: 'web3js_wallet',
     *   _accounts: {
     *     '0x85d70633b90e03e0276b98880286d0d055685ed7': {
     *       address: '0x85D70633b90e03e0276B98880286D0D055685ed7',
     *       privateKey: '0xbce9b59981303e76c4878b1a6d7b088ec6b9dd5c966b7d5f54d7a749ff683387',
     *       signTransaction: [Function: signTransaction],
     *       sign: [Function: sign],
     *       encrypt: [Function: encrypt]
     *     },
     *     '0x06f702337909c06c82b09b7a22f0a2f0855d1f68': {
     *       address: '0x06F702337909C06C82B09B7A22F0a2f0855d1F68',
     *       privateKey: '87a51da18900da7398b3bab03996833138f269f8f66dd1237b98df6b9ce14573',
     *       signTransaction: [Function: signTransaction],
     *       sign: [Function: sign],
     *       encrypt: [Function: encrypt]
     *     },
     *     '0xb5d89661b59a9af0b34f58d19138baa2de48baaf': {
     *       address: '0xB5d89661B59a9aF0b34f58D19138bAa2de48BAaf',
     *       privateKey: '7ee61c5282979aae9dd795bb6a54e8bdc2bfe009acb64eb9a67322eec3b3da6e',
     *       signTransaction: [Function: signTransaction],
     *       sign: [Function: sign],
     *       encrypt: [Function: encrypt]
     *     }
     *   }
     * }
     * ```
     */
    decrypt(encryptedWallets, password, options) {
        return __awaiter(this, void 0, void 0, function* () {
            const results = yield Promise.all(encryptedWallets.map((wallet) => __awaiter(this, void 0, void 0, function* () { return this._accountProvider.decrypt(wallet, password, options); })));
            for (const res of results) {
                this.add(res);
            }
            return this;
        });
    }
    /**
     * Stores the wallet encrypted and as string in local storage.
     * **__NOTE:__** Browser only
     *
     * @param password - The password to encrypt the wallet
     * @param keyName - (optional) The key used for the local storage position, defaults to `"web3js_wallet"`.
     * @returns Will return boolean value true if saved properly
     * ```ts
     * web3.eth.accounts.wallet.save('test#!$');
     * >true
     * ```
     */
    save(password, keyName) {
        return __awaiter(this, void 0, void 0, function* () {
            const storage = Wallet.getStorage();
            if (!storage) {
                throw new Error('Local storage not available.');
            }
            storage.setItem(keyName !== null && keyName !== void 0 ? keyName : this._defaultKeyName, JSON.stringify(yield this.encrypt(password)));
            return true;
        });
    }
    /**
     * Loads a wallet from local storage and decrypts it.
     * **__NOTE:__** Browser only
     *
     * @param password - The password to decrypt the wallet.
     * @param keyName - (optional)The key used for local storage position, defaults to `web3js_wallet"`
     * @returns Returns the wallet object
     *
     * ```ts
     * web3.eth.accounts.wallet.save('test#!$');
     * > true
     * web3.eth.accounts.wallet.load('test#!$');
     * { defaultKeyName: "web3js_wallet",
     *   length: 0,
     *   _accounts: Accounts {_requestManager: RequestManager, givenProvider: Proxy, providers: {…}, _provider: WebsocketProvider, …},
     *   [[Prototype]]: Object
     * }
     * ```
     */
    load(password, keyName) {
        return __awaiter(this, void 0, void 0, function* () {
            const storage = Wallet.getStorage();
            if (!storage) {
                throw new Error('Local storage not available.');
            }
            const keystore = storage.getItem(keyName !== null && keyName !== void 0 ? keyName : this._defaultKeyName);
            if (keystore) {
                yield this.decrypt(JSON.parse(keystore) || [], password);
            }
            return this;
        });
    }
}
//# sourceMappingURL=wallet.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/_shortw_utils.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/_shortw_utils.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createCurve: () => (/* binding */ createCurve),
/* harmony export */   getHash: () => (/* binding */ getHash)
/* harmony export */ });
/* harmony import */ var _noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/hmac */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/hmac.js");
/* harmony import */ var _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/utils */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/utils.js");
/* harmony import */ var _abstract_weierstrass_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./abstract/weierstrass.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/abstract/weierstrass.js");
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */



// connects noble-curves to noble-hashes
function getHash(hash) {
    return {
        hash,
        hmac: (key, ...msgs) => (0,_noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_0__.hmac)(hash, key, (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.concatBytes)(...msgs)),
        randomBytes: _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.randomBytes,
    };
}
function createCurve(curveDef, defHash) {
    const create = (hash) => (0,_abstract_weierstrass_js__WEBPACK_IMPORTED_MODULE_2__.weierstrass)({ ...curveDef, ...getHash(hash) });
    return Object.freeze({ ...create(defHash), create });
}
//# sourceMappingURL=_shortw_utils.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/abstract/curve.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/abstract/curve.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   validateBasic: () => (/* binding */ validateBasic),
/* harmony export */   wNAF: () => (/* binding */ wNAF)
/* harmony export */ });
/* harmony import */ var _modular_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modular.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/abstract/modular.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/abstract/utils.js");
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
// Abelian group utilities


const _0n = BigInt(0);
const _1n = BigInt(1);
// Elliptic curve multiplication of Point by scalar. Fragile.
// Scalars should always be less than curve order: this should be checked inside of a curve itself.
// Creates precomputation tables for fast multiplication:
// - private scalar is split by fixed size windows of W bits
// - every window point is collected from window's table & added to accumulator
// - since windows are different, same point inside tables won't be accessed more than once per calc
// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)
// - +1 window is neccessary for wNAF
// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication
// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow
// windows to be in different memory locations
function wNAF(c, bits) {
    const constTimeNegate = (condition, item) => {
        const neg = item.negate();
        return condition ? neg : item;
    };
    const opts = (W) => {
        const windows = Math.ceil(bits / W) + 1; // +1, because
        const windowSize = 2 ** (W - 1); // -1 because we skip zero
        return { windows, windowSize };
    };
    return {
        constTimeNegate,
        // non-const time multiplication ladder
        unsafeLadder(elm, n) {
            let p = c.ZERO;
            let d = elm;
            while (n > _0n) {
                if (n & _1n)
                    p = p.add(d);
                d = d.double();
                n >>= _1n;
            }
            return p;
        },
        /**
         * Creates a wNAF precomputation window. Used for caching.
         * Default window size is set by `utils.precompute()` and is equal to 8.
         * Number of precomputed points depends on the curve size:
         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:
         * - 𝑊 is the window size
         * - 𝑛 is the bitlength of the curve order.
         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.
         * @returns precomputed point tables flattened to a single array
         */
        precomputeWindow(elm, W) {
            const { windows, windowSize } = opts(W);
            const points = [];
            let p = elm;
            let base = p;
            for (let window = 0; window < windows; window++) {
                base = p;
                points.push(base);
                // =1, because we skip zero
                for (let i = 1; i < windowSize; i++) {
                    base = base.add(p);
                    points.push(base);
                }
                p = base.double();
            }
            return points;
        },
        /**
         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.
         * @param W window size
         * @param precomputes precomputed tables
         * @param n scalar (we don't check here, but should be less than curve order)
         * @returns real and fake (for const-time) points
         */
        wNAF(W, precomputes, n) {
            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise
            // But need to carefully remove other checks before wNAF. ORDER == bits here
            const { windows, windowSize } = opts(W);
            let p = c.ZERO;
            let f = c.BASE;
            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.
            const maxNumber = 2 ** W;
            const shiftBy = BigInt(W);
            for (let window = 0; window < windows; window++) {
                const offset = window * windowSize;
                // Extract W bits.
                let wbits = Number(n & mask);
                // Shift number by W bits.
                n >>= shiftBy;
                // If the bits are bigger than max size, we'll split those.
                // +224 => 256 - 32
                if (wbits > windowSize) {
                    wbits -= maxNumber;
                    n += _1n;
                }
                // This code was first written with assumption that 'f' and 'p' will never be infinity point:
                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,
                // there is negate now: it is possible that negated element from low value
                // would be the same as high element, which will create carry into next window.
                // It's not obvious how this can fail, but still worth investigating later.
                // Check if we're onto Zero point.
                // Add random point inside current window to f.
                const offset1 = offset;
                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero
                const cond1 = window % 2 !== 0;
                const cond2 = wbits < 0;
                if (wbits === 0) {
                    // The most important part for const-time getPublicKey
                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));
                }
                else {
                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));
                }
            }
            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()
            // Even if the variable is still unused, there are some checks which will
            // throw an exception, so compiler needs to prove they won't happen, which is hard.
            // At this point there is a way to F be infinity-point even if p is not,
            // which makes it less const-time: around 1 bigint multiply.
            return { p, f };
        },
        wNAFCached(P, precomputesMap, n, transform) {
            // @ts-ignore
            const W = P._WINDOW_SIZE || 1;
            // Calculate precomputes on a first run, reuse them after
            let comp = precomputesMap.get(P);
            if (!comp) {
                comp = this.precomputeWindow(P, W);
                if (W !== 1) {
                    precomputesMap.set(P, transform(comp));
                }
            }
            return this.wNAF(W, comp, n);
        },
    };
}
function validateBasic(curve) {
    (0,_modular_js__WEBPACK_IMPORTED_MODULE_0__.validateField)(curve.Fp);
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.validateObject)(curve, {
        n: 'bigint',
        h: 'bigint',
        Gx: 'field',
        Gy: 'field',
    }, {
        nBitLength: 'isSafeInteger',
        nByteLength: 'isSafeInteger',
    });
    // Set defaults
    return Object.freeze({
        ...(0,_modular_js__WEBPACK_IMPORTED_MODULE_0__.nLength)(curve.n, curve.nBitLength),
        ...curve,
        ...{ p: curve.Fp.ORDER },
    });
}
//# sourceMappingURL=curve.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/abstract/hash-to-curve.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/abstract/hash-to-curve.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createHasher: () => (/* binding */ createHasher),
/* harmony export */   expand_message_xmd: () => (/* binding */ expand_message_xmd),
/* harmony export */   expand_message_xof: () => (/* binding */ expand_message_xof),
/* harmony export */   hash_to_field: () => (/* binding */ hash_to_field),
/* harmony export */   isogenyMap: () => (/* binding */ isogenyMap)
/* harmony export */ });
/* harmony import */ var _modular_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modular.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/abstract/modular.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/abstract/utils.js");


// Octet Stream to Integer. "spec" implementation of os2ip is 2.5x slower vs bytesToNumberBE.
const os2ip = _utils_js__WEBPACK_IMPORTED_MODULE_1__.bytesToNumberBE;
// Integer to Octet Stream (numberToBytesBE)
function i2osp(value, length) {
    if (value < 0 || value >= 1 << (8 * length)) {
        throw new Error(`bad I2OSP call: value=${value} length=${length}`);
    }
    const res = Array.from({ length }).fill(0);
    for (let i = length - 1; i >= 0; i--) {
        res[i] = value & 0xff;
        value >>>= 8;
    }
    return new Uint8Array(res);
}
function strxor(a, b) {
    const arr = new Uint8Array(a.length);
    for (let i = 0; i < a.length; i++) {
        arr[i] = a[i] ^ b[i];
    }
    return arr;
}
function anum(item) {
    if (!Number.isSafeInteger(item))
        throw new Error('number expected');
}
// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits
// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.1
function expand_message_xmd(msg, DST, lenInBytes, H) {
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.abytes)(msg);
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.abytes)(DST);
    anum(lenInBytes);
    // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3
    if (DST.length > 255)
        DST = H((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.concatBytes)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)('H2C-OVERSIZE-DST-'), DST));
    const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;
    const ell = Math.ceil(lenInBytes / b_in_bytes);
    if (ell > 255)
        throw new Error('Invalid xmd length');
    const DST_prime = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.concatBytes)(DST, i2osp(DST.length, 1));
    const Z_pad = i2osp(0, r_in_bytes);
    const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str
    const b = new Array(ell);
    const b_0 = H((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.concatBytes)(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));
    b[0] = H((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.concatBytes)(b_0, i2osp(1, 1), DST_prime));
    for (let i = 1; i <= ell; i++) {
        const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];
        b[i] = H((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.concatBytes)(...args));
    }
    const pseudo_random_bytes = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.concatBytes)(...b);
    return pseudo_random_bytes.slice(0, lenInBytes);
}
// Produces a uniformly random byte string using an extendable-output function (XOF) H.
// 1. The collision resistance of H MUST be at least k bits.
// 2. H MUST be an XOF that has been proved indifferentiable from
//    a random oracle under a reasonable cryptographic assumption.
// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.2
function expand_message_xof(msg, DST, lenInBytes, k, H) {
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.abytes)(msg);
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.abytes)(DST);
    anum(lenInBytes);
    // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3
    // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));
    if (DST.length > 255) {
        const dkLen = Math.ceil((2 * k) / 8);
        DST = H.create({ dkLen }).update((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)('H2C-OVERSIZE-DST-')).update(DST).digest();
    }
    if (lenInBytes > 65535 || DST.length > 255)
        throw new Error('expand_message_xof: invalid lenInBytes');
    return (H.create({ dkLen: lenInBytes })
        .update(msg)
        .update(i2osp(lenInBytes, 2))
        // 2. DST_prime = DST || I2OSP(len(DST), 1)
        .update(DST)
        .update(i2osp(DST.length, 1))
        .digest());
}
/**
 * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F
 * https://www.rfc-editor.org/rfc/rfc9380#section-5.2
 * @param msg a byte string containing the message to hash
 * @param count the number of elements of F to output
 * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above
 * @returns [u_0, ..., u_(count - 1)], a list of field elements.
 */
function hash_to_field(msg, count, options) {
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.validateObject)(options, {
        DST: 'stringOrUint8Array',
        p: 'bigint',
        m: 'isSafeInteger',
        k: 'isSafeInteger',
        hash: 'hash',
    });
    const { p, k, m, hash, expand, DST: _DST } = options;
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.abytes)(msg);
    anum(count);
    const DST = typeof _DST === 'string' ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(_DST) : _DST;
    const log2p = p.toString(2).length;
    const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above
    const len_in_bytes = count * m * L;
    let prb; // pseudo_random_bytes
    if (expand === 'xmd') {
        prb = expand_message_xmd(msg, DST, len_in_bytes, hash);
    }
    else if (expand === 'xof') {
        prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);
    }
    else if (expand === '_internal_pass') {
        // for internal tests only
        prb = msg;
    }
    else {
        throw new Error('expand must be "xmd" or "xof"');
    }
    const u = new Array(count);
    for (let i = 0; i < count; i++) {
        const e = new Array(m);
        for (let j = 0; j < m; j++) {
            const elm_offset = L * (j + i * m);
            const tv = prb.subarray(elm_offset, elm_offset + L);
            e[j] = (0,_modular_js__WEBPACK_IMPORTED_MODULE_0__.mod)(os2ip(tv), p);
        }
        u[i] = e;
    }
    return u;
}
function isogenyMap(field, map) {
    // Make same order as in spec
    const COEFF = map.map((i) => Array.from(i).reverse());
    return (x, y) => {
        const [xNum, xDen, yNum, yDen] = COEFF.map((val) => val.reduce((acc, i) => field.add(field.mul(acc, x), i)));
        x = field.div(xNum, xDen); // xNum / xDen
        y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)
        return { x, y };
    };
}
function createHasher(Point, mapToCurve, def) {
    if (typeof mapToCurve !== 'function')
        throw new Error('mapToCurve() must be defined');
    return {
        // Encodes byte string to elliptic curve.
        // hash_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3
        hashToCurve(msg, options) {
            const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options });
            const u0 = Point.fromAffine(mapToCurve(u[0]));
            const u1 = Point.fromAffine(mapToCurve(u[1]));
            const P = u0.add(u1).clearCofactor();
            P.assertValidity();
            return P;
        },
        // Encodes byte string to elliptic curve.
        // encode_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3
        encodeToCurve(msg, options) {
            const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options });
            const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();
            P.assertValidity();
            return P;
        },
        // Same as encodeToCurve, but without hash
        mapToCurve(scalars) {
            if (!Array.isArray(scalars))
                throw new Error('mapToCurve: expected array of bigints');
            for (const i of scalars)
                if (typeof i !== 'bigint')
                    throw new Error(`mapToCurve: expected array of bigints, got ${i} in array`);
            const P = Point.fromAffine(mapToCurve(scalars)).clearCofactor();
            P.assertValidity();
            return P;
        },
    };
}
//# sourceMappingURL=hash-to-curve.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/abstract/modular.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/abstract/modular.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Field: () => (/* binding */ Field),
/* harmony export */   FpDiv: () => (/* binding */ FpDiv),
/* harmony export */   FpInvertBatch: () => (/* binding */ FpInvertBatch),
/* harmony export */   FpIsSquare: () => (/* binding */ FpIsSquare),
/* harmony export */   FpPow: () => (/* binding */ FpPow),
/* harmony export */   FpSqrt: () => (/* binding */ FpSqrt),
/* harmony export */   FpSqrtEven: () => (/* binding */ FpSqrtEven),
/* harmony export */   FpSqrtOdd: () => (/* binding */ FpSqrtOdd),
/* harmony export */   getFieldBytesLength: () => (/* binding */ getFieldBytesLength),
/* harmony export */   getMinHashLength: () => (/* binding */ getMinHashLength),
/* harmony export */   hashToPrivateScalar: () => (/* binding */ hashToPrivateScalar),
/* harmony export */   invert: () => (/* binding */ invert),
/* harmony export */   isNegativeLE: () => (/* binding */ isNegativeLE),
/* harmony export */   mapHashToField: () => (/* binding */ mapHashToField),
/* harmony export */   mod: () => (/* binding */ mod),
/* harmony export */   nLength: () => (/* binding */ nLength),
/* harmony export */   pow: () => (/* binding */ pow),
/* harmony export */   pow2: () => (/* binding */ pow2),
/* harmony export */   tonelliShanks: () => (/* binding */ tonelliShanks),
/* harmony export */   validateField: () => (/* binding */ validateField)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/abstract/utils.js");
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
// Utilities for modular arithmetics and finite fields

// prettier-ignore
const _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);
// prettier-ignore
const _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);
// prettier-ignore
const _9n = BigInt(9), _16n = BigInt(16);
// Calculates a modulo b
function mod(a, b) {
    const result = a % b;
    return result >= _0n ? result : b + result;
}
/**
 * Efficiently raise num to power and do modular division.
 * Unsafe in some contexts: uses ladder, so can expose bigint bits.
 * @example
 * pow(2n, 6n, 11n) // 64n % 11n == 9n
 */
// TODO: use field version && remove
function pow(num, power, modulo) {
    if (modulo <= _0n || power < _0n)
        throw new Error('Expected power/modulo > 0');
    if (modulo === _1n)
        return _0n;
    let res = _1n;
    while (power > _0n) {
        if (power & _1n)
            res = (res * num) % modulo;
        num = (num * num) % modulo;
        power >>= _1n;
    }
    return res;
}
// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)
function pow2(x, power, modulo) {
    let res = x;
    while (power-- > _0n) {
        res *= res;
        res %= modulo;
    }
    return res;
}
// Inverses number over modulo
function invert(number, modulo) {
    if (number === _0n || modulo <= _0n) {
        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);
    }
    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/
    // Fermat's little theorem "CT-like" version inv(n) = n^(m-2) mod m is 30x slower.
    let a = mod(number, modulo);
    let b = modulo;
    // prettier-ignore
    let x = _0n, y = _1n, u = _1n, v = _0n;
    while (a !== _0n) {
        // JIT applies optimization if those two lines follow each other
        const q = b / a;
        const r = b % a;
        const m = x - u * q;
        const n = y - v * q;
        // prettier-ignore
        b = a, a = r, x = u, y = v, u = m, v = n;
    }
    const gcd = b;
    if (gcd !== _1n)
        throw new Error('invert: does not exist');
    return mod(x, modulo);
}
/**
 * Tonelli-Shanks square root search algorithm.
 * 1. https://eprint.iacr.org/2012/685.pdf (page 12)
 * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks
 * Will start an infinite loop if field order P is not prime.
 * @param P field order
 * @returns function that takes field Fp (created from P) and number n
 */
function tonelliShanks(P) {
    // Legendre constant: used to calculate Legendre symbol (a | p),
    // which denotes the value of a^((p-1)/2) (mod p).
    // (a | p) ≡ 1    if a is a square (mod p)
    // (a | p) ≡ -1   if a is not a square (mod p)
    // (a | p) ≡ 0    if a ≡ 0 (mod p)
    const legendreC = (P - _1n) / _2n;
    let Q, S, Z;
    // Step 1: By factoring out powers of 2 from p - 1,
    // find q and s such that p - 1 = q*(2^s) with q odd
    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)
        ;
    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq
    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)
        ;
    // Fast-path
    if (S === 1) {
        const p1div4 = (P + _1n) / _4n;
        return function tonelliFast(Fp, n) {
            const root = Fp.pow(n, p1div4);
            if (!Fp.eql(Fp.sqr(root), n))
                throw new Error('Cannot find square root');
            return root;
        };
    }
    // Slow-path
    const Q1div2 = (Q + _1n) / _2n;
    return function tonelliSlow(Fp, n) {
        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1
        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))
            throw new Error('Cannot find square root');
        let r = S;
        // TODO: will fail at Fp2/etc
        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b
        let x = Fp.pow(n, Q1div2); // first guess at the square root
        let b = Fp.pow(n, Q); // first guess at the fudge factor
        while (!Fp.eql(b, Fp.ONE)) {
            if (Fp.eql(b, Fp.ZERO))
                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)
            // Find m such b^(2^m)==1
            let m = 1;
            for (let t2 = Fp.sqr(b); m < r; m++) {
                if (Fp.eql(t2, Fp.ONE))
                    break;
                t2 = Fp.sqr(t2); // t2 *= t2
            }
            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow
            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)
            g = Fp.sqr(ge); // g = ge * ge
            x = Fp.mul(x, ge); // x *= ge
            b = Fp.mul(b, g); // b *= g
            r = m;
        }
        return x;
    };
}
function FpSqrt(P) {
    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.
    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).
    // P ≡ 3 (mod 4)
    // √n = n^((P+1)/4)
    if (P % _4n === _3n) {
        // Not all roots possible!
        // const ORDER =
        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;
        // const NUM = 72057594037927816n;
        const p1div4 = (P + _1n) / _4n;
        return function sqrt3mod4(Fp, n) {
            const root = Fp.pow(n, p1div4);
            // Throw if root**2 != n
            if (!Fp.eql(Fp.sqr(root), n))
                throw new Error('Cannot find square root');
            return root;
        };
    }
    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)
    if (P % _8n === _5n) {
        const c1 = (P - _5n) / _8n;
        return function sqrt5mod8(Fp, n) {
            const n2 = Fp.mul(n, _2n);
            const v = Fp.pow(n2, c1);
            const nv = Fp.mul(n, v);
            const i = Fp.mul(Fp.mul(nv, _2n), v);
            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));
            if (!Fp.eql(Fp.sqr(root), n))
                throw new Error('Cannot find square root');
            return root;
        };
    }
    // P ≡ 9 (mod 16)
    if (P % _16n === _9n) {
        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start
        // Means we cannot use sqrt for constants at all!
        //
        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F
        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F
        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F
        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic
        // sqrt = (x) => {
        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4
        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1
        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1
        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1
        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x
        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x
        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x
        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x
        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x
        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2
        // }
    }
    // Other cases: Tonelli-Shanks algorithm
    return tonelliShanks(P);
}
// Little-endian check for first LE bit (last BE bit);
const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;
// prettier-ignore
const FIELD_FIELDS = [
    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',
    'eql', 'add', 'sub', 'mul', 'pow', 'div',
    'addN', 'subN', 'mulN', 'sqrN'
];
function validateField(field) {
    const initial = {
        ORDER: 'bigint',
        MASK: 'bigint',
        BYTES: 'isSafeInteger',
        BITS: 'isSafeInteger',
    };
    const opts = FIELD_FIELDS.reduce((map, val) => {
        map[val] = 'function';
        return map;
    }, initial);
    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.validateObject)(field, opts);
}
// Generic field functions
/**
 * Same as `pow` but for Fp: non-constant-time.
 * Unsafe in some contexts: uses ladder, so can expose bigint bits.
 */
function FpPow(f, num, power) {
    // Should have same speed as pow for bigints
    // TODO: benchmark!
    if (power < _0n)
        throw new Error('Expected power > 0');
    if (power === _0n)
        return f.ONE;
    if (power === _1n)
        return num;
    let p = f.ONE;
    let d = num;
    while (power > _0n) {
        if (power & _1n)
            p = f.mul(p, d);
        d = f.sqr(d);
        power >>= _1n;
    }
    return p;
}
/**
 * Efficiently invert an array of Field elements.
 * `inv(0)` will return `undefined` here: make sure to throw an error.
 */
function FpInvertBatch(f, nums) {
    const tmp = new Array(nums.length);
    // Walk from first to last, multiply them by each other MOD p
    const lastMultiplied = nums.reduce((acc, num, i) => {
        if (f.is0(num))
            return acc;
        tmp[i] = acc;
        return f.mul(acc, num);
    }, f.ONE);
    // Invert last element
    const inverted = f.inv(lastMultiplied);
    // Walk from last to first, multiply them by inverted each other MOD p
    nums.reduceRight((acc, num, i) => {
        if (f.is0(num))
            return acc;
        tmp[i] = f.mul(acc, tmp[i]);
        return f.mul(acc, num);
    }, inverted);
    return tmp;
}
function FpDiv(f, lhs, rhs) {
    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));
}
// This function returns True whenever the value x is a square in the field F.
function FpIsSquare(f) {
    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic
    return (x) => {
        const p = f.pow(x, legendreConst);
        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);
    };
}
// CURVE.n lengths
function nLength(n, nBitLength) {
    // Bit size, byte size of CURVE.n
    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;
    const nByteLength = Math.ceil(_nBitLength / 8);
    return { nBitLength: _nBitLength, nByteLength };
}
/**
 * Initializes a finite field over prime. **Non-primes are not supported.**
 * Do not init in loop: slow. Very fragile: always run a benchmark on a change.
 * Major performance optimizations:
 * * a) denormalized operations like mulN instead of mul
 * * b) same object shape: never add or remove keys
 * * c) Object.freeze
 * @param ORDER prime positive bigint
 * @param bitLen how many bits the field consumes
 * @param isLE (def: false) if encoding / decoding should be in little-endian
 * @param redef optional faster redefinitions of sqrt and other methods
 */
function Field(ORDER, bitLen, isLE = false, redef = {}) {
    if (ORDER <= _0n)
        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);
    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);
    if (BYTES > 2048)
        throw new Error('Field lengths over 2048 bytes are not supported');
    const sqrtP = FpSqrt(ORDER);
    const f = Object.freeze({
        ORDER,
        BITS,
        BYTES,
        MASK: (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.bitMask)(BITS),
        ZERO: _0n,
        ONE: _1n,
        create: (num) => mod(num, ORDER),
        isValid: (num) => {
            if (typeof num !== 'bigint')
                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);
            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible
        },
        is0: (num) => num === _0n,
        isOdd: (num) => (num & _1n) === _1n,
        neg: (num) => mod(-num, ORDER),
        eql: (lhs, rhs) => lhs === rhs,
        sqr: (num) => mod(num * num, ORDER),
        add: (lhs, rhs) => mod(lhs + rhs, ORDER),
        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),
        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),
        pow: (num, power) => FpPow(f, num, power),
        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),
        // Same as above, but doesn't normalize
        sqrN: (num) => num * num,
        addN: (lhs, rhs) => lhs + rhs,
        subN: (lhs, rhs) => lhs - rhs,
        mulN: (lhs, rhs) => lhs * rhs,
        inv: (num) => invert(num, ORDER),
        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),
        invertBatch: (lst) => FpInvertBatch(f, lst),
        // TODO: do we really need constant cmov?
        // We don't have const-time bigints anyway, so probably will be not very useful
        cmov: (a, b, c) => (c ? b : a),
        toBytes: (num) => (isLE ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.numberToBytesLE)(num, BYTES) : (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.numberToBytesBE)(num, BYTES)),
        fromBytes: (bytes) => {
            if (bytes.length !== BYTES)
                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);
            return isLE ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.bytesToNumberLE)(bytes) : (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.bytesToNumberBE)(bytes);
        },
    });
    return Object.freeze(f);
}
function FpSqrtOdd(Fp, elm) {
    if (!Fp.isOdd)
        throw new Error(`Field doesn't have isOdd`);
    const root = Fp.sqrt(elm);
    return Fp.isOdd(root) ? root : Fp.neg(root);
}
function FpSqrtEven(Fp, elm) {
    if (!Fp.isOdd)
        throw new Error(`Field doesn't have isOdd`);
    const root = Fp.sqrt(elm);
    return Fp.isOdd(root) ? Fp.neg(root) : root;
}
/**
 * "Constant-time" private key generation utility.
 * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).
 * Which makes it slightly more biased, less secure.
 * @deprecated use mapKeyToField instead
 */
function hashToPrivateScalar(hash, groupOrder, isLE = false) {
    hash = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ensureBytes)('privateHash', hash);
    const hashLen = hash.length;
    const minLen = nLength(groupOrder).nByteLength + 8;
    if (minLen < 24 || hashLen < minLen || hashLen > 1024)
        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);
    const num = isLE ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.bytesToNumberLE)(hash) : (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.bytesToNumberBE)(hash);
    return mod(num, groupOrder - _1n) + _1n;
}
/**
 * Returns total number of bytes consumed by the field element.
 * For example, 32 bytes for usual 256-bit weierstrass curve.
 * @param fieldOrder number of field elements, usually CURVE.n
 * @returns byte length of field
 */
function getFieldBytesLength(fieldOrder) {
    if (typeof fieldOrder !== 'bigint')
        throw new Error('field order must be bigint');
    const bitLength = fieldOrder.toString(2).length;
    return Math.ceil(bitLength / 8);
}
/**
 * Returns minimal amount of bytes that can be safely reduced
 * by field order.
 * Should be 2^-128 for 128-bit curve such as P256.
 * @param fieldOrder number of field elements, usually CURVE.n
 * @returns byte length of target hash
 */
function getMinHashLength(fieldOrder) {
    const length = getFieldBytesLength(fieldOrder);
    return length + Math.ceil(length / 2);
}
/**
 * "Constant-time" private key generation utility.
 * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF
 * and convert them into private scalar, with the modulo bias being negligible.
 * Needs at least 48 bytes of input for 32-byte private key.
 * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/
 * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final
 * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5
 * @param hash hash output from SHA3 or a similar function
 * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)
 * @param isLE interpret hash bytes as LE num
 * @returns valid private scalar
 */
function mapHashToField(key, fieldOrder, isLE = false) {
    const len = key.length;
    const fieldLen = getFieldBytesLength(fieldOrder);
    const minLen = getMinHashLength(fieldOrder);
    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.
    if (len < 16 || len < minLen || len > 1024)
        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);
    const num = isLE ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.bytesToNumberBE)(key) : (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.bytesToNumberLE)(key);
    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0
    const reduced = mod(num, fieldOrder - _1n) + _1n;
    return isLE ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.numberToBytesLE)(reduced, fieldLen) : (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.numberToBytesBE)(reduced, fieldLen);
}
//# sourceMappingURL=modular.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/abstract/utils.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/abstract/utils.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   abytes: () => (/* binding */ abytes),
/* harmony export */   bitGet: () => (/* binding */ bitGet),
/* harmony export */   bitLen: () => (/* binding */ bitLen),
/* harmony export */   bitMask: () => (/* binding */ bitMask),
/* harmony export */   bitSet: () => (/* binding */ bitSet),
/* harmony export */   bytesToHex: () => (/* binding */ bytesToHex),
/* harmony export */   bytesToNumberBE: () => (/* binding */ bytesToNumberBE),
/* harmony export */   bytesToNumberLE: () => (/* binding */ bytesToNumberLE),
/* harmony export */   concatBytes: () => (/* binding */ concatBytes),
/* harmony export */   createHmacDrbg: () => (/* binding */ createHmacDrbg),
/* harmony export */   ensureBytes: () => (/* binding */ ensureBytes),
/* harmony export */   equalBytes: () => (/* binding */ equalBytes),
/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),
/* harmony export */   hexToNumber: () => (/* binding */ hexToNumber),
/* harmony export */   isBytes: () => (/* binding */ isBytes),
/* harmony export */   numberToBytesBE: () => (/* binding */ numberToBytesBE),
/* harmony export */   numberToBytesLE: () => (/* binding */ numberToBytesLE),
/* harmony export */   numberToHexUnpadded: () => (/* binding */ numberToHexUnpadded),
/* harmony export */   numberToVarBytesBE: () => (/* binding */ numberToVarBytesBE),
/* harmony export */   utf8ToBytes: () => (/* binding */ utf8ToBytes),
/* harmony export */   validateObject: () => (/* binding */ validateObject)
/* harmony export */ });
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
// 100 lines of code in the file are duplicated from noble-hashes (utils).
// This is OK: `abstract` directory does not use noble-hashes.
// User may opt-in into using different hashing library. This way, noble-hashes
// won't be included into their bundle.
const _0n = /* @__PURE__ */ BigInt(0);
const _1n = /* @__PURE__ */ BigInt(1);
const _2n = /* @__PURE__ */ BigInt(2);
function isBytes(a) {
    return (a instanceof Uint8Array ||
        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));
}
function abytes(item) {
    if (!isBytes(item))
        throw new Error('Uint8Array expected');
}
// Array where index 0xf0 (240) is mapped to string 'f0'
const hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));
/**
 * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'
 */
function bytesToHex(bytes) {
    abytes(bytes);
    // pre-caching improves the speed 6x
    let hex = '';
    for (let i = 0; i < bytes.length; i++) {
        hex += hexes[bytes[i]];
    }
    return hex;
}
function numberToHexUnpadded(num) {
    const hex = num.toString(16);
    return hex.length & 1 ? `0${hex}` : hex;
}
function hexToNumber(hex) {
    if (typeof hex !== 'string')
        throw new Error('hex string expected, got ' + typeof hex);
    // Big Endian
    return BigInt(hex === '' ? '0' : `0x${hex}`);
}
// We use optimized technique to convert hex string to byte array
const asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };
function asciiToBase16(char) {
    if (char >= asciis._0 && char <= asciis._9)
        return char - asciis._0;
    if (char >= asciis._A && char <= asciis._F)
        return char - (asciis._A - 10);
    if (char >= asciis._a && char <= asciis._f)
        return char - (asciis._a - 10);
    return;
}
/**
 * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])
 */
function hexToBytes(hex) {
    if (typeof hex !== 'string')
        throw new Error('hex string expected, got ' + typeof hex);
    const hl = hex.length;
    const al = hl / 2;
    if (hl % 2)
        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);
    const array = new Uint8Array(al);
    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {
        const n1 = asciiToBase16(hex.charCodeAt(hi));
        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));
        if (n1 === undefined || n2 === undefined) {
            const char = hex[hi] + hex[hi + 1];
            throw new Error('hex string expected, got non-hex character "' + char + '" at index ' + hi);
        }
        array[ai] = n1 * 16 + n2;
    }
    return array;
}
// BE: Big Endian, LE: Little Endian
function bytesToNumberBE(bytes) {
    return hexToNumber(bytesToHex(bytes));
}
function bytesToNumberLE(bytes) {
    abytes(bytes);
    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));
}
function numberToBytesBE(n, len) {
    return hexToBytes(n.toString(16).padStart(len * 2, '0'));
}
function numberToBytesLE(n, len) {
    return numberToBytesBE(n, len).reverse();
}
// Unpadded, rarely used
function numberToVarBytesBE(n) {
    return hexToBytes(numberToHexUnpadded(n));
}
/**
 * Takes hex string or Uint8Array, converts to Uint8Array.
 * Validates output length.
 * Will throw error for other types.
 * @param title descriptive title for an error e.g. 'private key'
 * @param hex hex string or Uint8Array
 * @param expectedLength optional, will compare to result array's length
 * @returns
 */
function ensureBytes(title, hex, expectedLength) {
    let res;
    if (typeof hex === 'string') {
        try {
            res = hexToBytes(hex);
        }
        catch (e) {
            throw new Error(`${title} must be valid hex string, got "${hex}". Cause: ${e}`);
        }
    }
    else if (isBytes(hex)) {
        // Uint8Array.from() instead of hash.slice() because node.js Buffer
        // is instance of Uint8Array, and its slice() creates **mutable** copy
        res = Uint8Array.from(hex);
    }
    else {
        throw new Error(`${title} must be hex string or Uint8Array`);
    }
    const len = res.length;
    if (typeof expectedLength === 'number' && len !== expectedLength)
        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);
    return res;
}
/**
 * Copies several Uint8Arrays into one.
 */
function concatBytes(...arrays) {
    let sum = 0;
    for (let i = 0; i < arrays.length; i++) {
        const a = arrays[i];
        abytes(a);
        sum += a.length;
    }
    const res = new Uint8Array(sum);
    for (let i = 0, pad = 0; i < arrays.length; i++) {
        const a = arrays[i];
        res.set(a, pad);
        pad += a.length;
    }
    return res;
}
// Compares 2 u8a-s in kinda constant time
function equalBytes(a, b) {
    if (a.length !== b.length)
        return false;
    let diff = 0;
    for (let i = 0; i < a.length; i++)
        diff |= a[i] ^ b[i];
    return diff === 0;
}
/**
 * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])
 */
function utf8ToBytes(str) {
    if (typeof str !== 'string')
        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);
    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809
}
// Bit operations
/**
 * Calculates amount of bits in a bigint.
 * Same as `n.toString(2).length`
 */
function bitLen(n) {
    let len;
    for (len = 0; n > _0n; n >>= _1n, len += 1)
        ;
    return len;
}
/**
 * Gets single bit at position.
 * NOTE: first bit position is 0 (same as arrays)
 * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`
 */
function bitGet(n, pos) {
    return (n >> BigInt(pos)) & _1n;
}
/**
 * Sets single bit at position.
 */
function bitSet(n, pos, value) {
    return n | ((value ? _1n : _0n) << BigInt(pos));
}
/**
 * Calculate mask for N bits. Not using ** operator with bigints because of old engines.
 * Same as BigInt(`0b${Array(i).fill('1').join('')}`)
 */
const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;
// DRBG
const u8n = (data) => new Uint8Array(data); // creates Uint8Array
const u8fr = (arr) => Uint8Array.from(arr); // another shortcut
/**
 * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.
 * @returns function that will call DRBG until 2nd arg returns something meaningful
 * @example
 *   const drbg = createHmacDRBG<Key>(32, 32, hmac);
 *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined
 */
function createHmacDrbg(hashLen, qByteLen, hmacFn) {
    if (typeof hashLen !== 'number' || hashLen < 2)
        throw new Error('hashLen must be a number');
    if (typeof qByteLen !== 'number' || qByteLen < 2)
        throw new Error('qByteLen must be a number');
    if (typeof hmacFn !== 'function')
        throw new Error('hmacFn must be a function');
    // Step B, Step C: set hashLen to 8*ceil(hlen/8)
    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.
    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same
    let i = 0; // Iterations counter, will throw when over 1000
    const reset = () => {
        v.fill(1);
        k.fill(0);
        i = 0;
    };
    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)
    const reseed = (seed = u8n()) => {
        // HMAC-DRBG reseed() function. Steps D-G
        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)
        v = h(); // v = hmac(k || v)
        if (seed.length === 0)
            return;
        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)
        v = h(); // v = hmac(k || v)
    };
    const gen = () => {
        // HMAC-DRBG generate() function
        if (i++ >= 1000)
            throw new Error('drbg: tried 1000 values');
        let len = 0;
        const out = [];
        while (len < qByteLen) {
            v = h();
            const sl = v.slice();
            out.push(sl);
            len += v.length;
        }
        return concatBytes(...out);
    };
    const genUntil = (seed, pred) => {
        reset();
        reseed(seed); // Steps D-G
        let res = undefined; // Step H: grind until k is in [1..n-1]
        while (!(res = pred(gen())))
            reseed();
        reset();
        return res;
    };
    return genUntil;
}
// Validating curves and fields
const validatorFns = {
    bigint: (val) => typeof val === 'bigint',
    function: (val) => typeof val === 'function',
    boolean: (val) => typeof val === 'boolean',
    string: (val) => typeof val === 'string',
    stringOrUint8Array: (val) => typeof val === 'string' || isBytes(val),
    isSafeInteger: (val) => Number.isSafeInteger(val),
    array: (val) => Array.isArray(val),
    field: (val, object) => object.Fp.isValid(val),
    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),
};
// type Record<K extends string | number | symbol, T> = { [P in K]: T; }
function validateObject(object, validators, optValidators = {}) {
    const checkField = (fieldName, type, isOptional) => {
        const checkVal = validatorFns[type];
        if (typeof checkVal !== 'function')
            throw new Error(`Invalid validator "${type}", expected function`);
        const val = object[fieldName];
        if (isOptional && val === undefined)
            return;
        if (!checkVal(val, object)) {
            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);
        }
    };
    for (const [fieldName, type] of Object.entries(validators))
        checkField(fieldName, type, false);
    for (const [fieldName, type] of Object.entries(optValidators))
        checkField(fieldName, type, true);
    return object;
}
// validate type tests
// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };
// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!
// // Should fail type-check
// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });
// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });
// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });
// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/abstract/weierstrass.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/abstract/weierstrass.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DER: () => (/* binding */ DER),
/* harmony export */   SWUFpSqrtRatio: () => (/* binding */ SWUFpSqrtRatio),
/* harmony export */   mapToCurveSimpleSWU: () => (/* binding */ mapToCurveSimpleSWU),
/* harmony export */   weierstrass: () => (/* binding */ weierstrass),
/* harmony export */   weierstrassPoints: () => (/* binding */ weierstrassPoints)
/* harmony export */ });
/* harmony import */ var _curve_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./curve.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/abstract/curve.js");
/* harmony import */ var _modular_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modular.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/abstract/modular.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/abstract/utils.js");
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
// Short Weierstrass curve. The formula is: y² = x³ + ax + b




function validatePointOpts(curve) {
    const opts = (0,_curve_js__WEBPACK_IMPORTED_MODULE_0__.validateBasic)(curve);
    _utils_js__WEBPACK_IMPORTED_MODULE_2__.validateObject(opts, {
        a: 'field',
        b: 'field',
    }, {
        allowedPrivateKeyLengths: 'array',
        wrapPrivateKey: 'boolean',
        isTorsionFree: 'function',
        clearCofactor: 'function',
        allowInfinityPoint: 'boolean',
        fromBytes: 'function',
        toBytes: 'function',
    });
    const { endo, Fp, a } = opts;
    if (endo) {
        if (!Fp.eql(a, Fp.ZERO)) {
            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');
        }
        if (typeof endo !== 'object' ||
            typeof endo.beta !== 'bigint' ||
            typeof endo.splitScalar !== 'function') {
            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');
        }
    }
    return Object.freeze({ ...opts });
}
// ASN.1 DER encoding utilities
const { bytesToNumberBE: b2n, hexToBytes: h2b } = _utils_js__WEBPACK_IMPORTED_MODULE_2__;
const DER = {
    // asn.1 DER encoding utils
    Err: class DERErr extends Error {
        constructor(m = '') {
            super(m);
        }
    },
    _parseInt(data) {
        const { Err: E } = DER;
        if (data.length < 2 || data[0] !== 0x02)
            throw new E('Invalid signature integer tag');
        const len = data[1];
        const res = data.subarray(2, len + 2);
        if (!len || res.length !== len)
            throw new E('Invalid signature integer: wrong length');
        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,
        // since we always use positive integers here. It must always be empty:
        // - add zero byte if exists
        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)
        if (res[0] & 0b10000000)
            throw new E('Invalid signature integer: negative');
        if (res[0] === 0x00 && !(res[1] & 0b10000000))
            throw new E('Invalid signature integer: unnecessary leading zero');
        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left
    },
    toSig(hex) {
        // parse DER signature
        const { Err: E } = DER;
        const data = typeof hex === 'string' ? h2b(hex) : hex;
        _utils_js__WEBPACK_IMPORTED_MODULE_2__.abytes(data);
        let l = data.length;
        if (l < 2 || data[0] != 0x30)
            throw new E('Invalid signature tag');
        if (data[1] !== l - 2)
            throw new E('Invalid signature: incorrect length');
        const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));
        const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);
        if (rBytesLeft.length)
            throw new E('Invalid signature: left bytes after parsing');
        return { r, s };
    },
    hexFromSig(sig) {
        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'
        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);
        const h = (num) => {
            const hex = num.toString(16);
            return hex.length & 1 ? `0${hex}` : hex;
        };
        const s = slice(h(sig.s));
        const r = slice(h(sig.r));
        const shl = s.length / 2;
        const rhl = r.length / 2;
        const sl = h(shl);
        const rl = h(rhl);
        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;
    },
};
// Be friendly to bad ECMAScript parsers by not using bigint literals
// prettier-ignore
const _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);
function weierstrassPoints(opts) {
    const CURVE = validatePointOpts(opts);
    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ
    const toBytes = CURVE.toBytes ||
        ((_c, point, _isCompressed) => {
            const a = point.toAffine();
            return _utils_js__WEBPACK_IMPORTED_MODULE_2__.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));
        });
    const fromBytes = CURVE.fromBytes ||
        ((bytes) => {
            // const head = bytes[0];
            const tail = bytes.subarray(1);
            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');
            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));
            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));
            return { x, y };
        });
    /**
     * y² = x³ + ax + b: Short weierstrass curve formula
     * @returns y²
     */
    function weierstrassEquation(x) {
        const { a, b } = CURVE;
        const x2 = Fp.sqr(x); // x * x
        const x3 = Fp.mul(x2, x); // x2 * x
        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b
    }
    // Validate whether the passed curve params are valid.
    // We check if curve equation works for generator point.
    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.
    // ProjectivePoint class has not been initialized yet.
    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))
        throw new Error('bad generator point: equation left != right');
    // Valid group elements reside in range 1..n-1
    function isWithinCurveOrder(num) {
        return typeof num === 'bigint' && _0n < num && num < CURVE.n;
    }
    function assertGE(num) {
        if (!isWithinCurveOrder(num))
            throw new Error('Expected valid bigint: 0 < bigint < curve.n');
    }
    // Validates if priv key is valid and converts it to bigint.
    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.
    function normPrivateKeyToScalar(key) {
        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;
        if (lengths && typeof key !== 'bigint') {
            if (_utils_js__WEBPACK_IMPORTED_MODULE_2__.isBytes(key))
                key = _utils_js__WEBPACK_IMPORTED_MODULE_2__.bytesToHex(key);
            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes
            if (typeof key !== 'string' || !lengths.includes(key.length))
                throw new Error('Invalid key');
            key = key.padStart(nByteLength * 2, '0');
        }
        let num;
        try {
            num =
                typeof key === 'bigint'
                    ? key
                    : _utils_js__WEBPACK_IMPORTED_MODULE_2__.bytesToNumberBE((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.ensureBytes)('private key', key, nByteLength));
        }
        catch (error) {
            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);
        }
        if (wrapPrivateKey)
            num = _modular_js__WEBPACK_IMPORTED_MODULE_1__.mod(num, n); // disabled by default, enabled for BLS
        assertGE(num); // num in range [1..N-1]
        return num;
    }
    const pointPrecomputes = new Map();
    function assertPrjPoint(other) {
        if (!(other instanceof Point))
            throw new Error('ProjectivePoint expected');
    }
    /**
     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)
     * Default Point works in 2d / affine coordinates: (x, y)
     * We're doing calculations in projective, because its operations don't require costly inversion.
     */
    class Point {
        constructor(px, py, pz) {
            this.px = px;
            this.py = py;
            this.pz = pz;
            if (px == null || !Fp.isValid(px))
                throw new Error('x required');
            if (py == null || !Fp.isValid(py))
                throw new Error('y required');
            if (pz == null || !Fp.isValid(pz))
                throw new Error('z required');
        }
        // Does not validate if the point is on-curve.
        // Use fromHex instead, or call assertValidity() later.
        static fromAffine(p) {
            const { x, y } = p || {};
            if (!p || !Fp.isValid(x) || !Fp.isValid(y))
                throw new Error('invalid affine point');
            if (p instanceof Point)
                throw new Error('projective point not allowed');
            const is0 = (i) => Fp.eql(i, Fp.ZERO);
            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)
            if (is0(x) && is0(y))
                return Point.ZERO;
            return new Point(x, y, Fp.ONE);
        }
        get x() {
            return this.toAffine().x;
        }
        get y() {
            return this.toAffine().y;
        }
        /**
         * Takes a bunch of Projective Points but executes only one
         * inversion on all of them. Inversion is very slow operation,
         * so this improves performance massively.
         * Optimization: converts a list of projective points to a list of identical points with Z=1.
         */
        static normalizeZ(points) {
            const toInv = Fp.invertBatch(points.map((p) => p.pz));
            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);
        }
        /**
         * Converts hash string or Uint8Array to Point.
         * @param hex short/long ECDSA hex
         */
        static fromHex(hex) {
            const P = Point.fromAffine(fromBytes((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.ensureBytes)('pointHex', hex)));
            P.assertValidity();
            return P;
        }
        // Multiplies generator point by privateKey.
        static fromPrivateKey(privateKey) {
            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));
        }
        // "Private method", don't use it directly
        _setWindowSize(windowSize) {
            this._WINDOW_SIZE = windowSize;
            pointPrecomputes.delete(this);
        }
        // A point on curve is valid if it conforms to equation.
        assertValidity() {
            if (this.is0()) {
                // (0, 1, 0) aka ZERO is invalid in most contexts.
                // In BLS, ZERO can be serialized, so we allow it.
                // (0, 0, 0) is wrong representation of ZERO and is always invalid.
                if (CURVE.allowInfinityPoint && !Fp.is0(this.py))
                    return;
                throw new Error('bad point: ZERO');
            }
            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`
            const { x, y } = this.toAffine();
            // Check if x, y are valid field elements
            if (!Fp.isValid(x) || !Fp.isValid(y))
                throw new Error('bad point: x or y not FE');
            const left = Fp.sqr(y); // y²
            const right = weierstrassEquation(x); // x³ + ax + b
            if (!Fp.eql(left, right))
                throw new Error('bad point: equation left != right');
            if (!this.isTorsionFree())
                throw new Error('bad point: not in prime-order subgroup');
        }
        hasEvenY() {
            const { y } = this.toAffine();
            if (Fp.isOdd)
                return !Fp.isOdd(y);
            throw new Error("Field doesn't support isOdd");
        }
        /**
         * Compare one point to another.
         */
        equals(other) {
            assertPrjPoint(other);
            const { px: X1, py: Y1, pz: Z1 } = this;
            const { px: X2, py: Y2, pz: Z2 } = other;
            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));
            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));
            return U1 && U2;
        }
        /**
         * Flips point to one corresponding to (x, -y) in Affine coordinates.
         */
        negate() {
            return new Point(this.px, Fp.neg(this.py), this.pz);
        }
        // Renes-Costello-Batina exception-free doubling formula.
        // There is 30% faster Jacobian formula, but it is not complete.
        // https://eprint.iacr.org/2015/1060, algorithm 3
        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.
        double() {
            const { a, b } = CURVE;
            const b3 = Fp.mul(b, _3n);
            const { px: X1, py: Y1, pz: Z1 } = this;
            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore
            let t0 = Fp.mul(X1, X1); // step 1
            let t1 = Fp.mul(Y1, Y1);
            let t2 = Fp.mul(Z1, Z1);
            let t3 = Fp.mul(X1, Y1);
            t3 = Fp.add(t3, t3); // step 5
            Z3 = Fp.mul(X1, Z1);
            Z3 = Fp.add(Z3, Z3);
            X3 = Fp.mul(a, Z3);
            Y3 = Fp.mul(b3, t2);
            Y3 = Fp.add(X3, Y3); // step 10
            X3 = Fp.sub(t1, Y3);
            Y3 = Fp.add(t1, Y3);
            Y3 = Fp.mul(X3, Y3);
            X3 = Fp.mul(t3, X3);
            Z3 = Fp.mul(b3, Z3); // step 15
            t2 = Fp.mul(a, t2);
            t3 = Fp.sub(t0, t2);
            t3 = Fp.mul(a, t3);
            t3 = Fp.add(t3, Z3);
            Z3 = Fp.add(t0, t0); // step 20
            t0 = Fp.add(Z3, t0);
            t0 = Fp.add(t0, t2);
            t0 = Fp.mul(t0, t3);
            Y3 = Fp.add(Y3, t0);
            t2 = Fp.mul(Y1, Z1); // step 25
            t2 = Fp.add(t2, t2);
            t0 = Fp.mul(t2, t3);
            X3 = Fp.sub(X3, t0);
            Z3 = Fp.mul(t2, t1);
            Z3 = Fp.add(Z3, Z3); // step 30
            Z3 = Fp.add(Z3, Z3);
            return new Point(X3, Y3, Z3);
        }
        // Renes-Costello-Batina exception-free addition formula.
        // There is 30% faster Jacobian formula, but it is not complete.
        // https://eprint.iacr.org/2015/1060, algorithm 1
        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.
        add(other) {
            assertPrjPoint(other);
            const { px: X1, py: Y1, pz: Z1 } = this;
            const { px: X2, py: Y2, pz: Z2 } = other;
            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore
            const a = CURVE.a;
            const b3 = Fp.mul(CURVE.b, _3n);
            let t0 = Fp.mul(X1, X2); // step 1
            let t1 = Fp.mul(Y1, Y2);
            let t2 = Fp.mul(Z1, Z2);
            let t3 = Fp.add(X1, Y1);
            let t4 = Fp.add(X2, Y2); // step 5
            t3 = Fp.mul(t3, t4);
            t4 = Fp.add(t0, t1);
            t3 = Fp.sub(t3, t4);
            t4 = Fp.add(X1, Z1);
            let t5 = Fp.add(X2, Z2); // step 10
            t4 = Fp.mul(t4, t5);
            t5 = Fp.add(t0, t2);
            t4 = Fp.sub(t4, t5);
            t5 = Fp.add(Y1, Z1);
            X3 = Fp.add(Y2, Z2); // step 15
            t5 = Fp.mul(t5, X3);
            X3 = Fp.add(t1, t2);
            t5 = Fp.sub(t5, X3);
            Z3 = Fp.mul(a, t4);
            X3 = Fp.mul(b3, t2); // step 20
            Z3 = Fp.add(X3, Z3);
            X3 = Fp.sub(t1, Z3);
            Z3 = Fp.add(t1, Z3);
            Y3 = Fp.mul(X3, Z3);
            t1 = Fp.add(t0, t0); // step 25
            t1 = Fp.add(t1, t0);
            t2 = Fp.mul(a, t2);
            t4 = Fp.mul(b3, t4);
            t1 = Fp.add(t1, t2);
            t2 = Fp.sub(t0, t2); // step 30
            t2 = Fp.mul(a, t2);
            t4 = Fp.add(t4, t2);
            t0 = Fp.mul(t1, t4);
            Y3 = Fp.add(Y3, t0);
            t0 = Fp.mul(t5, t4); // step 35
            X3 = Fp.mul(t3, X3);
            X3 = Fp.sub(X3, t0);
            t0 = Fp.mul(t3, t1);
            Z3 = Fp.mul(t5, Z3);
            Z3 = Fp.add(Z3, t0); // step 40
            return new Point(X3, Y3, Z3);
        }
        subtract(other) {
            return this.add(other.negate());
        }
        is0() {
            return this.equals(Point.ZERO);
        }
        wNAF(n) {
            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {
                const toInv = Fp.invertBatch(comp.map((p) => p.pz));
                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);
            });
        }
        /**
         * Non-constant-time multiplication. Uses double-and-add algorithm.
         * It's faster, but should only be used when you don't care about
         * an exposed private key e.g. sig verification, which works over *public* keys.
         */
        multiplyUnsafe(n) {
            const I = Point.ZERO;
            if (n === _0n)
                return I;
            assertGE(n); // Will throw on 0
            if (n === _1n)
                return this;
            const { endo } = CURVE;
            if (!endo)
                return wnaf.unsafeLadder(this, n);
            // Apply endomorphism
            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);
            let k1p = I;
            let k2p = I;
            let d = this;
            while (k1 > _0n || k2 > _0n) {
                if (k1 & _1n)
                    k1p = k1p.add(d);
                if (k2 & _1n)
                    k2p = k2p.add(d);
                d = d.double();
                k1 >>= _1n;
                k2 >>= _1n;
            }
            if (k1neg)
                k1p = k1p.negate();
            if (k2neg)
                k2p = k2p.negate();
            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);
            return k1p.add(k2p);
        }
        /**
         * Constant time multiplication.
         * Uses wNAF method. Windowed method may be 10% faster,
         * but takes 2x longer to generate and consumes 2x memory.
         * Uses precomputes when available.
         * Uses endomorphism for Koblitz curves.
         * @param scalar by which the point would be multiplied
         * @returns New point
         */
        multiply(scalar) {
            assertGE(scalar);
            let n = scalar;
            let point, fake; // Fake point is used to const-time mult
            const { endo } = CURVE;
            if (endo) {
                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);
                let { p: k1p, f: f1p } = this.wNAF(k1);
                let { p: k2p, f: f2p } = this.wNAF(k2);
                k1p = wnaf.constTimeNegate(k1neg, k1p);
                k2p = wnaf.constTimeNegate(k2neg, k2p);
                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);
                point = k1p.add(k2p);
                fake = f1p.add(f2p);
            }
            else {
                const { p, f } = this.wNAF(n);
                point = p;
                fake = f;
            }
            // Normalize `z` for both points, but return only real one
            return Point.normalizeZ([point, fake])[0];
        }
        /**
         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.
         * Not using Strauss-Shamir trick: precomputation tables are faster.
         * The trick could be useful if both P and Q are not G (not in our case).
         * @returns non-zero affine point
         */
        multiplyAndAddUnsafe(Q, a, b) {
            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes
            const mul = (P, a // Select faster multiply() method
            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));
            const sum = mul(this, a).add(mul(Q, b));
            return sum.is0() ? undefined : sum;
        }
        // Converts Projective point to affine (x, y) coordinates.
        // Can accept precomputed Z^-1 - for example, from invertBatch.
        // (x, y, z) ∋ (x=x/z, y=y/z)
        toAffine(iz) {
            const { px: x, py: y, pz: z } = this;
            const is0 = this.is0();
            // If invZ was 0, we return zero point. However we still want to execute
            // all operations, so we replace invZ with a random number, 1.
            if (iz == null)
                iz = is0 ? Fp.ONE : Fp.inv(z);
            const ax = Fp.mul(x, iz);
            const ay = Fp.mul(y, iz);
            const zz = Fp.mul(z, iz);
            if (is0)
                return { x: Fp.ZERO, y: Fp.ZERO };
            if (!Fp.eql(zz, Fp.ONE))
                throw new Error('invZ was invalid');
            return { x: ax, y: ay };
        }
        isTorsionFree() {
            const { h: cofactor, isTorsionFree } = CURVE;
            if (cofactor === _1n)
                return true; // No subgroups, always torsion-free
            if (isTorsionFree)
                return isTorsionFree(Point, this);
            throw new Error('isTorsionFree() has not been declared for the elliptic curve');
        }
        clearCofactor() {
            const { h: cofactor, clearCofactor } = CURVE;
            if (cofactor === _1n)
                return this; // Fast-path
            if (clearCofactor)
                return clearCofactor(Point, this);
            return this.multiplyUnsafe(CURVE.h);
        }
        toRawBytes(isCompressed = true) {
            this.assertValidity();
            return toBytes(Point, this, isCompressed);
        }
        toHex(isCompressed = true) {
            return _utils_js__WEBPACK_IMPORTED_MODULE_2__.bytesToHex(this.toRawBytes(isCompressed));
        }
    }
    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);
    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);
    const _bits = CURVE.nBitLength;
    const wnaf = (0,_curve_js__WEBPACK_IMPORTED_MODULE_0__.wNAF)(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);
    // Validate if generator point is on curve
    return {
        CURVE,
        ProjectivePoint: Point,
        normPrivateKeyToScalar,
        weierstrassEquation,
        isWithinCurveOrder,
    };
}
function validateOpts(curve) {
    const opts = (0,_curve_js__WEBPACK_IMPORTED_MODULE_0__.validateBasic)(curve);
    _utils_js__WEBPACK_IMPORTED_MODULE_2__.validateObject(opts, {
        hash: 'hash',
        hmac: 'function',
        randomBytes: 'function',
    }, {
        bits2int: 'function',
        bits2int_modN: 'function',
        lowS: 'boolean',
    });
    return Object.freeze({ lowS: true, ...opts });
}
function weierstrass(curveDef) {
    const CURVE = validateOpts(curveDef);
    const { Fp, n: CURVE_ORDER } = CURVE;
    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32
    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32
    function isValidFieldElement(num) {
        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE
    }
    function modN(a) {
        return _modular_js__WEBPACK_IMPORTED_MODULE_1__.mod(a, CURVE_ORDER);
    }
    function invN(a) {
        return _modular_js__WEBPACK_IMPORTED_MODULE_1__.invert(a, CURVE_ORDER);
    }
    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({
        ...CURVE,
        toBytes(_c, point, isCompressed) {
            const a = point.toAffine();
            const x = Fp.toBytes(a.x);
            const cat = _utils_js__WEBPACK_IMPORTED_MODULE_2__.concatBytes;
            if (isCompressed) {
                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);
            }
            else {
                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));
            }
        },
        fromBytes(bytes) {
            const len = bytes.length;
            const head = bytes[0];
            const tail = bytes.subarray(1);
            // this.assertValidity() is done inside of fromHex
            if (len === compressedLen && (head === 0x02 || head === 0x03)) {
                const x = _utils_js__WEBPACK_IMPORTED_MODULE_2__.bytesToNumberBE(tail);
                if (!isValidFieldElement(x))
                    throw new Error('Point is not on curve');
                const y2 = weierstrassEquation(x); // y² = x³ + ax + b
                let y;
                try {
                    y = Fp.sqrt(y2); // y = y² ^ (p+1)/4
                }
                catch (sqrtError) {
                    const suffix = sqrtError instanceof Error ? ': ' + sqrtError.message : '';
                    throw new Error('Point is not on curve' + suffix);
                }
                const isYOdd = (y & _1n) === _1n;
                // ECDSA
                const isHeadOdd = (head & 1) === 1;
                if (isHeadOdd !== isYOdd)
                    y = Fp.neg(y);
                return { x, y };
            }
            else if (len === uncompressedLen && head === 0x04) {
                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));
                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));
                return { x, y };
            }
            else {
                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);
            }
        },
    });
    const numToNByteStr = (num) => _utils_js__WEBPACK_IMPORTED_MODULE_2__.bytesToHex(_utils_js__WEBPACK_IMPORTED_MODULE_2__.numberToBytesBE(num, CURVE.nByteLength));
    function isBiggerThanHalfOrder(number) {
        const HALF = CURVE_ORDER >> _1n;
        return number > HALF;
    }
    function normalizeS(s) {
        return isBiggerThanHalfOrder(s) ? modN(-s) : s;
    }
    // slice bytes num
    const slcNum = (b, from, to) => _utils_js__WEBPACK_IMPORTED_MODULE_2__.bytesToNumberBE(b.slice(from, to));
    /**
     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.
     */
    class Signature {
        constructor(r, s, recovery) {
            this.r = r;
            this.s = s;
            this.recovery = recovery;
            this.assertValidity();
        }
        // pair (bytes of r, bytes of s)
        static fromCompact(hex) {
            const l = CURVE.nByteLength;
            hex = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.ensureBytes)('compactSignature', hex, l * 2);
            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));
        }
        // DER encoded ECDSA signature
        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script
        static fromDER(hex) {
            const { r, s } = DER.toSig((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.ensureBytes)('DER', hex));
            return new Signature(r, s);
        }
        assertValidity() {
            // can use assertGE here
            if (!isWithinCurveOrder(this.r))
                throw new Error('r must be 0 < r < CURVE.n');
            if (!isWithinCurveOrder(this.s))
                throw new Error('s must be 0 < s < CURVE.n');
        }
        addRecoveryBit(recovery) {
            return new Signature(this.r, this.s, recovery);
        }
        recoverPublicKey(msgHash) {
            const { r, s, recovery: rec } = this;
            const h = bits2int_modN((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.ensureBytes)('msgHash', msgHash)); // Truncate hash
            if (rec == null || ![0, 1, 2, 3].includes(rec))
                throw new Error('recovery id invalid');
            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;
            if (radj >= Fp.ORDER)
                throw new Error('recovery id 2 or 3 invalid');
            const prefix = (rec & 1) === 0 ? '02' : '03';
            const R = Point.fromHex(prefix + numToNByteStr(radj));
            const ir = invN(radj); // r^-1
            const u1 = modN(-h * ir); // -hr^-1
            const u2 = modN(s * ir); // sr^-1
            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)
            if (!Q)
                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked
            Q.assertValidity();
            return Q;
        }
        // Signatures should be low-s, to prevent malleability.
        hasHighS() {
            return isBiggerThanHalfOrder(this.s);
        }
        normalizeS() {
            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;
        }
        // DER-encoded
        toDERRawBytes() {
            return _utils_js__WEBPACK_IMPORTED_MODULE_2__.hexToBytes(this.toDERHex());
        }
        toDERHex() {
            return DER.hexFromSig({ r: this.r, s: this.s });
        }
        // padded bytes of r, then padded bytes of s
        toCompactRawBytes() {
            return _utils_js__WEBPACK_IMPORTED_MODULE_2__.hexToBytes(this.toCompactHex());
        }
        toCompactHex() {
            return numToNByteStr(this.r) + numToNByteStr(this.s);
        }
    }
    const utils = {
        isValidPrivateKey(privateKey) {
            try {
                normPrivateKeyToScalar(privateKey);
                return true;
            }
            catch (error) {
                return false;
            }
        },
        normPrivateKeyToScalar: normPrivateKeyToScalar,
        /**
         * Produces cryptographically secure private key from random of size
         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.
         */
        randomPrivateKey: () => {
            const length = _modular_js__WEBPACK_IMPORTED_MODULE_1__.getMinHashLength(CURVE.n);
            return _modular_js__WEBPACK_IMPORTED_MODULE_1__.mapHashToField(CURVE.randomBytes(length), CURVE.n);
        },
        /**
         * Creates precompute table for an arbitrary EC point. Makes point "cached".
         * Allows to massively speed-up `point.multiply(scalar)`.
         * @returns cached point
         * @example
         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));
         * fast.multiply(privKey); // much faster ECDH now
         */
        precompute(windowSize = 8, point = Point.BASE) {
            point._setWindowSize(windowSize);
            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here
            return point;
        },
    };
    /**
     * Computes public key for a private key. Checks for validity of the private key.
     * @param privateKey private key
     * @param isCompressed whether to return compact (default), or full key
     * @returns Public key, full when isCompressed=false; short when isCompressed=true
     */
    function getPublicKey(privateKey, isCompressed = true) {
        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);
    }
    /**
     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.
     */
    function isProbPub(item) {
        const arr = _utils_js__WEBPACK_IMPORTED_MODULE_2__.isBytes(item);
        const str = typeof item === 'string';
        const len = (arr || str) && item.length;
        if (arr)
            return len === compressedLen || len === uncompressedLen;
        if (str)
            return len === 2 * compressedLen || len === 2 * uncompressedLen;
        if (item instanceof Point)
            return true;
        return false;
    }
    /**
     * ECDH (Elliptic Curve Diffie Hellman).
     * Computes shared public key from private key and public key.
     * Checks: 1) private key validity 2) shared key is on-curve.
     * Does NOT hash the result.
     * @param privateA private key
     * @param publicB different public key
     * @param isCompressed whether to return compact (default), or full key
     * @returns shared public key
     */
    function getSharedSecret(privateA, publicB, isCompressed = true) {
        if (isProbPub(privateA))
            throw new Error('first arg must be private key');
        if (!isProbPub(publicB))
            throw new Error('second arg must be public key');
        const b = Point.fromHex(publicB); // check for being on-curve
        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);
    }
    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.
    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.
    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.
    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors
    const bits2int = CURVE.bits2int ||
        function (bytes) {
            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)
            // for some cases, since bytes.length * 8 is not actual bitLength.
            const num = _utils_js__WEBPACK_IMPORTED_MODULE_2__.bytesToNumberBE(bytes); // check for == u8 done here
            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits
            return delta > 0 ? num >> BigInt(delta) : num;
        };
    const bits2int_modN = CURVE.bits2int_modN ||
        function (bytes) {
            return modN(bits2int(bytes)); // can't use bytesToNumberBE here
        };
    // NOTE: pads output with zero as per spec
    const ORDER_MASK = _utils_js__WEBPACK_IMPORTED_MODULE_2__.bitMask(CURVE.nBitLength);
    /**
     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.
     */
    function int2octets(num) {
        if (typeof num !== 'bigint')
            throw new Error('bigint expected');
        if (!(_0n <= num && num < ORDER_MASK))
            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);
        // works with order, can have different size than numToField!
        return _utils_js__WEBPACK_IMPORTED_MODULE_2__.numberToBytesBE(num, CURVE.nByteLength);
    }
    // Steps A, D of RFC6979 3.2
    // Creates RFC6979 seed; converts msg/privKey to numbers.
    // Used only in sign, not in verify.
    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.
    // Also it can be bigger for P224 + SHA256
    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {
        if (['recovered', 'canonical'].some((k) => k in opts))
            throw new Error('sign() legacy options not supported');
        const { hash, randomBytes } = CURVE;
        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default
        if (lowS == null)
            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash
        msgHash = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.ensureBytes)('msgHash', msgHash);
        if (prehash)
            msgHash = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.ensureBytes)('prehashed msgHash', hash(msgHash));
        // We can't later call bits2octets, since nested bits2int is broken for curves
        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.
        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))
        const h1int = bits2int_modN(msgHash);
        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint
        const seedArgs = [int2octets(d), int2octets(h1int)];
        // extraEntropy. RFC6979 3.6: additional k' (optional).
        if (ent != null && ent !== false) {
            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')
            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is
            seedArgs.push((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.ensureBytes)('extraEntropy', e)); // check for being bytes
        }
        const seed = _utils_js__WEBPACK_IMPORTED_MODULE_2__.concatBytes(...seedArgs); // Step D of RFC6979 3.2
        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!
        // Converts signature params into point w r/s, checks result for validity.
        function k2sig(kBytes) {
            // RFC 6979 Section 3.2, step 3: k = bits2int(T)
            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element
            if (!isWithinCurveOrder(k))
                return; // Important: all mod() calls here must be done over N
            const ik = invN(k); // k^-1 mod n
            const q = Point.BASE.multiply(k).toAffine(); // q = Gk
            const r = modN(q.x); // r = q.x mod n
            if (r === _0n)
                return;
            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to
            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:
            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT
            const s = modN(ik * modN(m + r * d)); // Not using blinding here
            if (s === _0n)
                return;
            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)
            let normS = s;
            if (lowS && isBiggerThanHalfOrder(s)) {
                normS = normalizeS(s); // if lowS was passed, ensure s is always
                recovery ^= 1; // // in the bottom half of N
            }
            return new Signature(r, normS, recovery); // use normS, not s
        }
        return { seed, k2sig };
    }
    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };
    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };
    /**
     * Signs message hash with a private key.
     * ```
     * sign(m, d, k) where
     *   (x, y) = G × k
     *   r = x mod n
     *   s = (m + dr)/k mod n
     * ```
     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.
     * @param privKey private key
     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.
     * @returns signature with recovery param
     */
    function sign(msgHash, privKey, opts = defaultSigOpts) {
        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.
        const C = CURVE;
        const drbg = _utils_js__WEBPACK_IMPORTED_MODULE_2__.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);
        return drbg(seed, k2sig); // Steps B, C, D, E, F, G
    }
    // Enable precomputes. Slows down first publicKey computation by 20ms.
    Point.BASE._setWindowSize(8);
    // utils.precompute(8, ProjectivePoint.BASE)
    /**
     * Verifies a signature against message hash and public key.
     * Rejects lowS signatures by default: to override,
     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:
     *
     * ```
     * verify(r, s, h, P) where
     *   U1 = hs^-1 mod n
     *   U2 = rs^-1 mod n
     *   R = U1⋅G - U2⋅P
     *   mod(R.x, n) == r
     * ```
     */
    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {
        const sg = signature;
        msgHash = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.ensureBytes)('msgHash', msgHash);
        publicKey = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.ensureBytes)('publicKey', publicKey);
        if ('strict' in opts)
            throw new Error('options.strict was renamed to lowS');
        const { lowS, prehash } = opts;
        let _sig = undefined;
        let P;
        try {
            if (typeof sg === 'string' || _utils_js__WEBPACK_IMPORTED_MODULE_2__.isBytes(sg)) {
                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).
                // Since DER can also be 2*nByteLength bytes, we check for it first.
                try {
                    _sig = Signature.fromDER(sg);
                }
                catch (derError) {
                    if (!(derError instanceof DER.Err))
                        throw derError;
                    _sig = Signature.fromCompact(sg);
                }
            }
            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {
                const { r, s } = sg;
                _sig = new Signature(r, s);
            }
            else {
                throw new Error('PARSE');
            }
            P = Point.fromHex(publicKey);
        }
        catch (error) {
            if (error.message === 'PARSE')
                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);
            return false;
        }
        if (lowS && _sig.hasHighS())
            return false;
        if (prehash)
            msgHash = CURVE.hash(msgHash);
        const { r, s } = _sig;
        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element
        const is = invN(s); // s^-1
        const u1 = modN(h * is); // u1 = hs^-1 mod n
        const u2 = modN(r * is); // u2 = rs^-1 mod n
        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P
        if (!R)
            return false;
        const v = modN(R.x);
        return v === r;
    }
    return {
        CURVE,
        getPublicKey,
        getSharedSecret,
        sign,
        verify,
        ProjectivePoint: Point,
        Signature,
        utils,
    };
}
/**
 * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.
 * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.
 * b = True and y = sqrt(u / v) if (u / v) is square in F, and
 * b = False and y = sqrt(Z * (u / v)) otherwise.
 * @param Fp
 * @param Z
 * @returns
 */
function SWUFpSqrtRatio(Fp, Z) {
    // Generic implementation
    const q = Fp.ORDER;
    let l = _0n;
    for (let o = q - _1n; o % _2n === _0n; o /= _2n)
        l += _1n;
    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.
    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.
    // 2n ** c1 == 2n << (c1-1)
    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);
    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;
    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic
    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic
    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic
    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic
    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2
    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)
    let sqrtRatio = (u, v) => {
        let tv1 = c6; // 1. tv1 = c6
        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4
        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2
        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v
        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3
        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3
        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2
        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v
        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u
        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2
        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5
        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1
        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7
        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1
        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)
        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)
        // 17. for i in (c1, c1 - 1, ..., 2):
        for (let i = c1; i > _1n; i--) {
            let tv5 = i - _2n; // 18.    tv5 = i - 2
            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5
            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5
            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1
            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1
            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1
            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1
            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)
            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)
        }
        return { isValid: isQR, value: tv3 };
    };
    if (Fp.ORDER % _4n === _3n) {
        // sqrt_ratio_3mod4(u, v)
        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic
        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)
        sqrtRatio = (u, v) => {
            let tv1 = Fp.sqr(v); // 1. tv1 = v^2
            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v
            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2
            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1
            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2
            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2
            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v
            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u
            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)
            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2
        };
    }
    // No curves uses that
    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8
    return sqrtRatio;
}
/**
 * Simplified Shallue-van de Woestijne-Ulas Method
 * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2
 */
function mapToCurveSimpleSWU(Fp, opts) {
    _modular_js__WEBPACK_IMPORTED_MODULE_1__.validateField(Fp);
    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))
        throw new Error('mapToCurveSimpleSWU: invalid opts');
    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);
    if (!Fp.isOdd)
        throw new Error('Fp.isOdd is not implemented!');
    // Input: u, an element of F.
    // Output: (x, y), a point on E.
    return (u) => {
        // prettier-ignore
        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;
        tv1 = Fp.sqr(u); // 1.  tv1 = u^2
        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1
        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2
        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1
        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1
        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3
        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)
        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4
        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2
        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2
        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6
        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5
        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3
        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4
        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6
        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5
        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3
        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)
        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1
        y = Fp.mul(y, value); // 20.   y = y * y1
        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)
        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)
        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)
        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)
        x = Fp.div(x, tv4); // 25.   x = x / tv4
        return { x, y };
    };
}
//# sourceMappingURL=weierstrass.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/secp256k1.js":
/*!************************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/secp256k1.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   encodeToCurve: () => (/* binding */ encodeToCurve),
/* harmony export */   hashToCurve: () => (/* binding */ hashToCurve),
/* harmony export */   schnorr: () => (/* binding */ schnorr),
/* harmony export */   secp256k1: () => (/* binding */ secp256k1)
/* harmony export */ });
/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/sha256 */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/sha256.js");
/* harmony import */ var _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/utils */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/utils.js");
/* harmony import */ var _shortw_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_shortw_utils.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/_shortw_utils.js");
/* harmony import */ var _abstract_hash_to_curve_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./abstract/hash-to-curve.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/abstract/hash-to-curve.js");
/* harmony import */ var _abstract_modular_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./abstract/modular.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/abstract/modular.js");
/* harmony import */ var _abstract_utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./abstract/utils.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/abstract/utils.js");
/* harmony import */ var _abstract_weierstrass_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./abstract/weierstrass.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/abstract/weierstrass.js");
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */







const secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');
const secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');
const _1n = BigInt(1);
const _2n = BigInt(2);
const divNearest = (a, b) => (a + b / _2n) / b;
/**
 * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.
 * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]
 */
function sqrtMod(y) {
    const P = secp256k1P;
    // prettier-ignore
    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);
    // prettier-ignore
    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);
    const b2 = (y * y * y) % P; // x^3, 11
    const b3 = (b2 * b2 * y) % P; // x^7
    const b6 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_4__.pow2)(b3, _3n, P) * b3) % P;
    const b9 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_4__.pow2)(b6, _3n, P) * b3) % P;
    const b11 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_4__.pow2)(b9, _2n, P) * b2) % P;
    const b22 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_4__.pow2)(b11, _11n, P) * b11) % P;
    const b44 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_4__.pow2)(b22, _22n, P) * b22) % P;
    const b88 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_4__.pow2)(b44, _44n, P) * b44) % P;
    const b176 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_4__.pow2)(b88, _88n, P) * b88) % P;
    const b220 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_4__.pow2)(b176, _44n, P) * b44) % P;
    const b223 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_4__.pow2)(b220, _3n, P) * b3) % P;
    const t1 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_4__.pow2)(b223, _23n, P) * b22) % P;
    const t2 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_4__.pow2)(t1, _6n, P) * b2) % P;
    const root = (0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_4__.pow2)(t2, _2n, P);
    if (!Fp.eql(Fp.sqr(root), y))
        throw new Error('Cannot find square root');
    return root;
}
const Fp = (0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_4__.Field)(secp256k1P, undefined, undefined, { sqrt: sqrtMod });
const secp256k1 = (0,_shortw_utils_js__WEBPACK_IMPORTED_MODULE_2__.createCurve)({
    a: BigInt(0), // equation params: a, b
    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975
    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n
    n: secp256k1N, // Curve order, total count of valid points in the field
    // Base point (x, y) aka generator point
    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),
    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),
    h: BigInt(1), // Cofactor
    lowS: true, // Allow only low-S signatures by default in sign() and verify()
    /**
     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.
     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.
     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.
     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066
     */
    endo: {
        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),
        splitScalar: (k) => {
            const n = secp256k1N;
            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');
            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');
            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');
            const b2 = a1;
            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)
            const c1 = divNearest(b2 * k, n);
            const c2 = divNearest(-b1 * k, n);
            let k1 = (0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_4__.mod)(k - c1 * a1 - c2 * a2, n);
            let k2 = (0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_4__.mod)(-c1 * b1 - c2 * b2, n);
            const k1neg = k1 > POW_2_128;
            const k2neg = k2 > POW_2_128;
            if (k1neg)
                k1 = n - k1;
            if (k2neg)
                k2 = n - k2;
            if (k1 > POW_2_128 || k2 > POW_2_128) {
                throw new Error('splitScalar: Endomorphism failed, k=' + k);
            }
            return { k1neg, k1, k2neg, k2 };
        },
    },
}, _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_0__.sha256);
// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.
// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki
const _0n = BigInt(0);
const fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;
const ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;
/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */
const TAGGED_HASH_PREFIXES = {};
function taggedHash(tag, ...messages) {
    let tagP = TAGGED_HASH_PREFIXES[tag];
    if (tagP === undefined) {
        const tagH = (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_0__.sha256)(Uint8Array.from(tag, (c) => c.charCodeAt(0)));
        tagP = (0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_5__.concatBytes)(tagH, tagH);
        TAGGED_HASH_PREFIXES[tag] = tagP;
    }
    return (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_0__.sha256)((0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_5__.concatBytes)(tagP, ...messages));
}
// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03
const pointToBytes = (point) => point.toRawBytes(true).slice(1);
const numTo32b = (n) => (0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_5__.numberToBytesBE)(n, 32);
const modP = (x) => (0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_4__.mod)(x, secp256k1P);
const modN = (x) => (0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_4__.mod)(x, secp256k1N);
const Point = secp256k1.ProjectivePoint;
const GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);
// Calculate point, scalar and bytes
function schnorrGetExtPubKey(priv) {
    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey
    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside
    const scalar = p.hasEvenY() ? d_ : modN(-d_);
    return { scalar: scalar, bytes: pointToBytes(p) };
}
/**
 * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.
 * @returns valid point checked for being on-curve
 */
function lift_x(x) {
    if (!fe(x))
        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.
    const xx = modP(x * x);
    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.
    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.
    if (y % _2n !== _0n)
        y = modP(-y); // Return the unique point P such that x(P) = x and
    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.
    p.assertValidity();
    return p;
}
/**
 * Create tagged hash, convert it to bigint, reduce modulo-n.
 */
function challenge(...args) {
    return modN((0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_5__.bytesToNumberBE)(taggedHash('BIP0340/challenge', ...args)));
}
/**
 * Schnorr public key is just `x` coordinate of Point as per BIP340.
 */
function schnorrGetPublicKey(privateKey) {
    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)
}
/**
 * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.
 * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.
 */
function schnorrSign(message, privateKey, auxRand = (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.randomBytes)(32)) {
    const m = (0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_5__.ensureBytes)('message', message);
    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder
    const a = (0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_5__.ensureBytes)('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array
    const t = numTo32b(d ^ (0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_5__.bytesToNumberBE)(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)
    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)
    const k_ = modN((0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_5__.bytesToNumberBE)(rand)); // Let k' = int(rand) mod n
    if (k_ === _0n)
        throw new Error('sign failed: k is zero'); // Fail if k' = 0.
    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.
    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.
    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).
    sig.set(rx, 0);
    sig.set(numTo32b(modN(k + e * d)), 32);
    // If Verify(bytes(P), m, sig) (see below) returns failure, abort
    if (!schnorrVerify(sig, m, px))
        throw new Error('sign: Invalid signature produced');
    return sig;
}
/**
 * Verifies Schnorr signature.
 * Will swallow errors & return false except for initial type validation of arguments.
 */
function schnorrVerify(signature, message, publicKey) {
    const sig = (0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_5__.ensureBytes)('signature', signature, 64);
    const m = (0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_5__.ensureBytes)('message', message);
    const pub = (0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_5__.ensureBytes)('publicKey', publicKey, 32);
    try {
        const P = lift_x((0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_5__.bytesToNumberBE)(pub)); // P = lift_x(int(pk)); fail if that fails
        const r = (0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_5__.bytesToNumberBE)(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.
        if (!fe(r))
            return false;
        const s = (0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_5__.bytesToNumberBE)(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.
        if (!ge(s))
            return false;
        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n
        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P
        if (!R || !R.hasEvenY() || R.toAffine().x !== r)
            return false; // -eP == (n-e)P
        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.
    }
    catch (error) {
        return false;
    }
}
const schnorr = /* @__PURE__ */ (() => ({
    getPublicKey: schnorrGetPublicKey,
    sign: schnorrSign,
    verify: schnorrVerify,
    utils: {
        randomPrivateKey: secp256k1.utils.randomPrivateKey,
        lift_x,
        pointToBytes,
        numberToBytesBE: _abstract_utils_js__WEBPACK_IMPORTED_MODULE_5__.numberToBytesBE,
        bytesToNumberBE: _abstract_utils_js__WEBPACK_IMPORTED_MODULE_5__.bytesToNumberBE,
        taggedHash,
        mod: _abstract_modular_js__WEBPACK_IMPORTED_MODULE_4__.mod,
    },
}))();
const isoMap = /* @__PURE__ */ (() => (0,_abstract_hash_to_curve_js__WEBPACK_IMPORTED_MODULE_3__.isogenyMap)(Fp, [
    // xNum
    [
        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',
        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',
        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',
        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',
    ],
    // xDen
    [
        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',
        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',
        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1
    ],
    // yNum
    [
        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',
        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',
        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',
        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',
    ],
    // yDen
    [
        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',
        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',
        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',
        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1
    ],
].map((i) => i.map((j) => BigInt(j)))))();
const mapSWU = /* @__PURE__ */ (() => (0,_abstract_weierstrass_js__WEBPACK_IMPORTED_MODULE_6__.mapToCurveSimpleSWU)(Fp, {
    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),
    B: BigInt('1771'),
    Z: Fp.create(BigInt('-11')),
}))();
const htf = /* @__PURE__ */ (() => (0,_abstract_hash_to_curve_js__WEBPACK_IMPORTED_MODULE_3__.createHasher)(secp256k1.ProjectivePoint, (scalars) => {
    const { x, y } = mapSWU(Fp.create(scalars[0]));
    return isoMap(x, y);
}, {
    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',
    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',
    p: Fp.ORDER,
    m: 1,
    k: 128,
    expand: 'xmd',
    hash: _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_0__.sha256,
}))();
const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();
const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();
//# sourceMappingURL=secp256k1.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/_assert.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/_assert.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   bool: () => (/* binding */ bool),
/* harmony export */   bytes: () => (/* binding */ bytes),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   exists: () => (/* binding */ exists),
/* harmony export */   hash: () => (/* binding */ hash),
/* harmony export */   isBytes: () => (/* binding */ isBytes),
/* harmony export */   number: () => (/* binding */ number),
/* harmony export */   output: () => (/* binding */ output)
/* harmony export */ });
function number(n) {
    if (!Number.isSafeInteger(n) || n < 0)
        throw new Error(`positive integer expected, not ${n}`);
}
function bool(b) {
    if (typeof b !== 'boolean')
        throw new Error(`boolean expected, not ${b}`);
}
// copied from utils
function isBytes(a) {
    return (a instanceof Uint8Array ||
        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));
}
function bytes(b, ...lengths) {
    if (!isBytes(b))
        throw new Error('Uint8Array expected');
    if (lengths.length > 0 && !lengths.includes(b.length))
        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);
}
function hash(h) {
    if (typeof h !== 'function' || typeof h.create !== 'function')
        throw new Error('Hash should be wrapped by utils.wrapConstructor');
    number(h.outputLen);
    number(h.blockLen);
}
function exists(instance, checkFinished = true) {
    if (instance.destroyed)
        throw new Error('Hash instance has been destroyed');
    if (checkFinished && instance.finished)
        throw new Error('Hash#digest() has already been called');
}
function output(out, instance) {
    bytes(out);
    const min = instance.outputLen;
    if (out.length < min) {
        throw new Error(`digestInto() expects output buffer of length at least ${min}`);
    }
}

const assert = { number, bool, bytes, hash, exists, output };
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (assert);
//# sourceMappingURL=_assert.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/_md.js":
/*!******************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/_md.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Chi: () => (/* binding */ Chi),
/* harmony export */   HashMD: () => (/* binding */ HashMD),
/* harmony export */   Maj: () => (/* binding */ Maj)
/* harmony export */ });
/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_assert.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/_assert.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/utils.js");


// Polyfill for Safari 14
function setBigUint64(view, byteOffset, value, isLE) {
    if (typeof view.setBigUint64 === 'function')
        return view.setBigUint64(byteOffset, value, isLE);
    const _32n = BigInt(32);
    const _u32_max = BigInt(0xffffffff);
    const wh = Number((value >> _32n) & _u32_max);
    const wl = Number(value & _u32_max);
    const h = isLE ? 4 : 0;
    const l = isLE ? 0 : 4;
    view.setUint32(byteOffset + h, wh, isLE);
    view.setUint32(byteOffset + l, wl, isLE);
}
// Choice: a ? b : c
const Chi = (a, b, c) => (a & b) ^ (~a & c);
// Majority function, true if any two inpust is true
const Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);
/**
 * Merkle-Damgard hash construction base class.
 * Could be used to create MD5, RIPEMD, SHA1, SHA2.
 */
class HashMD extends _utils_js__WEBPACK_IMPORTED_MODULE_1__.Hash {
    constructor(blockLen, outputLen, padOffset, isLE) {
        super();
        this.blockLen = blockLen;
        this.outputLen = outputLen;
        this.padOffset = padOffset;
        this.isLE = isLE;
        this.finished = false;
        this.length = 0;
        this.pos = 0;
        this.destroyed = false;
        this.buffer = new Uint8Array(blockLen);
        this.view = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createView)(this.buffer);
    }
    update(data) {
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.exists)(this);
        const { view, buffer, blockLen } = this;
        data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.toBytes)(data);
        const len = data.length;
        for (let pos = 0; pos < len;) {
            const take = Math.min(blockLen - this.pos, len - pos);
            // Fast path: we have at least one block in input, cast it to view and process
            if (take === blockLen) {
                const dataView = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createView)(data);
                for (; blockLen <= len - pos; pos += blockLen)
                    this.process(dataView, pos);
                continue;
            }
            buffer.set(data.subarray(pos, pos + take), this.pos);
            this.pos += take;
            pos += take;
            if (this.pos === blockLen) {
                this.process(view, 0);
                this.pos = 0;
            }
        }
        this.length += data.length;
        this.roundClean();
        return this;
    }
    digestInto(out) {
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.exists)(this);
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.output)(out, this);
        this.finished = true;
        // Padding
        // We can avoid allocation of buffer for padding completely if it
        // was previously not allocated here. But it won't change performance.
        const { buffer, view, blockLen, isLE } = this;
        let { pos } = this;
        // append the bit '1' to the message
        buffer[pos++] = 0b10000000;
        this.buffer.subarray(pos).fill(0);
        // we have less than padOffset left in buffer, so we cannot put length in
        // current block, need process it and pad again
        if (this.padOffset > blockLen - pos) {
            this.process(view, 0);
            pos = 0;
        }
        // Pad until full block byte with zeros
        for (let i = pos; i < blockLen; i++)
            buffer[i] = 0;
        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that
        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.
        // So we just write lowest 64 bits of that value.
        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);
        this.process(view, 0);
        const oview = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createView)(out);
        const len = this.outputLen;
        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT
        if (len % 4)
            throw new Error('_sha2: outputLen should be aligned to 32bit');
        const outLen = len / 4;
        const state = this.get();
        if (outLen > state.length)
            throw new Error('_sha2: outputLen bigger than state');
        for (let i = 0; i < outLen; i++)
            oview.setUint32(4 * i, state[i], isLE);
    }
    digest() {
        const { buffer, outputLen } = this;
        this.digestInto(buffer);
        const res = buffer.slice(0, outputLen);
        this.destroy();
        return res;
    }
    _cloneInto(to) {
        to || (to = new this.constructor());
        to.set(...this.get());
        const { blockLen, buffer, length, finished, destroyed, pos } = this;
        to.length = length;
        to.pos = pos;
        to.finished = finished;
        to.destroyed = destroyed;
        if (length % blockLen)
            to.buffer.set(buffer);
        return to;
    }
}
//# sourceMappingURL=_md.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/_u64.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/_u64.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   add: () => (/* binding */ add),
/* harmony export */   add3H: () => (/* binding */ add3H),
/* harmony export */   add3L: () => (/* binding */ add3L),
/* harmony export */   add4H: () => (/* binding */ add4H),
/* harmony export */   add4L: () => (/* binding */ add4L),
/* harmony export */   add5H: () => (/* binding */ add5H),
/* harmony export */   add5L: () => (/* binding */ add5L),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   fromBig: () => (/* binding */ fromBig),
/* harmony export */   rotlBH: () => (/* binding */ rotlBH),
/* harmony export */   rotlBL: () => (/* binding */ rotlBL),
/* harmony export */   rotlSH: () => (/* binding */ rotlSH),
/* harmony export */   rotlSL: () => (/* binding */ rotlSL),
/* harmony export */   rotr32H: () => (/* binding */ rotr32H),
/* harmony export */   rotr32L: () => (/* binding */ rotr32L),
/* harmony export */   rotrBH: () => (/* binding */ rotrBH),
/* harmony export */   rotrBL: () => (/* binding */ rotrBL),
/* harmony export */   rotrSH: () => (/* binding */ rotrSH),
/* harmony export */   rotrSL: () => (/* binding */ rotrSL),
/* harmony export */   shrSH: () => (/* binding */ shrSH),
/* harmony export */   shrSL: () => (/* binding */ shrSL),
/* harmony export */   split: () => (/* binding */ split),
/* harmony export */   toBig: () => (/* binding */ toBig)
/* harmony export */ });
const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);
const _32n = /* @__PURE__ */ BigInt(32);
// We are not using BigUint64Array, because they are extremely slow as per 2022
function fromBig(n, le = false) {
    if (le)
        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };
    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };
}
function split(lst, le = false) {
    let Ah = new Uint32Array(lst.length);
    let Al = new Uint32Array(lst.length);
    for (let i = 0; i < lst.length; i++) {
        const { h, l } = fromBig(lst[i], le);
        [Ah[i], Al[i]] = [h, l];
    }
    return [Ah, Al];
}
const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);
// for Shift in [0, 32)
const shrSH = (h, _l, s) => h >>> s;
const shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);
// Right rotate for Shift in [1, 32)
const rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));
const rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);
// Right rotate for Shift in (32, 64), NOTE: 32 is special case.
const rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));
const rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));
// Right rotate for shift===32 (just swaps l&h)
const rotr32H = (_h, l) => l;
const rotr32L = (h, _l) => h;
// Left rotate for Shift in [1, 32)
const rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));
const rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));
// Left rotate for Shift in (32, 64), NOTE: 32 is special case.
const rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));
const rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));
// JS uses 32-bit signed integers for bitwise operations which means we cannot
// simple take carry out of low bit sum by shift, we need to use division.
function add(Ah, Al, Bh, Bl) {
    const l = (Al >>> 0) + (Bl >>> 0);
    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };
}
// Addition with more than 2 elements
const add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);
const add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;
const add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);
const add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;
const add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);
const add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;
// prettier-ignore

// prettier-ignore
const u64 = {
    fromBig, split, toBig,
    shrSH, shrSL,
    rotrSH, rotrSL, rotrBH, rotrBL,
    rotr32H, rotr32L,
    rotlSH, rotlSL, rotlBH, rotlBL,
    add, add3L, add3H, add4L, add4H, add5H, add5L,
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (u64);
//# sourceMappingURL=_u64.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/crypto.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/crypto.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   crypto: () => (/* binding */ crypto)
/* harmony export */ });
const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;
//# sourceMappingURL=crypto.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/hmac.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/hmac.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HMAC: () => (/* binding */ HMAC),
/* harmony export */   hmac: () => (/* binding */ hmac)
/* harmony export */ });
/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_assert.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/_assert.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/utils.js");


// HMAC (RFC 2104)
class HMAC extends _utils_js__WEBPACK_IMPORTED_MODULE_1__.Hash {
    constructor(hash, _key) {
        super();
        this.finished = false;
        this.destroyed = false;
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.hash)(hash);
        const key = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.toBytes)(_key);
        this.iHash = hash.create();
        if (typeof this.iHash.update !== 'function')
            throw new Error('Expected instance of class which extends utils.Hash');
        this.blockLen = this.iHash.blockLen;
        this.outputLen = this.iHash.outputLen;
        const blockLen = this.blockLen;
        const pad = new Uint8Array(blockLen);
        // blockLen can be bigger than outputLen
        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);
        for (let i = 0; i < pad.length; i++)
            pad[i] ^= 0x36;
        this.iHash.update(pad);
        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone
        this.oHash = hash.create();
        // Undo internal XOR && apply outer XOR
        for (let i = 0; i < pad.length; i++)
            pad[i] ^= 0x36 ^ 0x5c;
        this.oHash.update(pad);
        pad.fill(0);
    }
    update(buf) {
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.exists)(this);
        this.iHash.update(buf);
        return this;
    }
    digestInto(out) {
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.exists)(this);
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.bytes)(out, this.outputLen);
        this.finished = true;
        this.iHash.digestInto(out);
        this.oHash.update(out);
        this.oHash.digestInto(out);
        this.destroy();
    }
    digest() {
        const out = new Uint8Array(this.oHash.outputLen);
        this.digestInto(out);
        return out;
    }
    _cloneInto(to) {
        // Create new instance without calling constructor since key already in state and we don't know it.
        to || (to = Object.create(Object.getPrototypeOf(this), {}));
        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;
        to = to;
        to.finished = finished;
        to.destroyed = destroyed;
        to.blockLen = blockLen;
        to.outputLen = outputLen;
        to.oHash = oHash._cloneInto(to.oHash);
        to.iHash = iHash._cloneInto(to.iHash);
        return to;
    }
    destroy() {
        this.destroyed = true;
        this.oHash.destroy();
        this.iHash.destroy();
    }
}
/**
 * HMAC: RFC2104 message authentication code.
 * @param hash - function that would be used e.g. sha256
 * @param key - message key
 * @param message - message data
 */
const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();
hmac.create = (hash, key) => new HMAC(hash, key);
//# sourceMappingURL=hmac.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/pbkdf2.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/pbkdf2.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   pbkdf2: () => (/* binding */ pbkdf2),
/* harmony export */   pbkdf2Async: () => (/* binding */ pbkdf2Async)
/* harmony export */ });
/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_assert.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/_assert.js");
/* harmony import */ var _hmac_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hmac.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/hmac.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/utils.js");



// Common prologue and epilogue for sync/async functions
function pbkdf2Init(hash, _password, _salt, _opts) {
    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.hash)(hash);
    const opts = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.checkOpts)({ dkLen: 32, asyncTick: 10 }, _opts);
    const { c, dkLen, asyncTick } = opts;
    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.number)(c);
    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.number)(dkLen);
    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.number)(asyncTick);
    if (c < 1)
        throw new Error('PBKDF2: iterations (c) should be >= 1');
    const password = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(_password);
    const salt = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(_salt);
    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);
    const DK = new Uint8Array(dkLen);
    // U1 = PRF(Password, Salt + INT_32_BE(i))
    const PRF = _hmac_js__WEBPACK_IMPORTED_MODULE_1__.hmac.create(hash, password);
    const PRFSalt = PRF._cloneInto().update(salt);
    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };
}
function pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {
    PRF.destroy();
    PRFSalt.destroy();
    if (prfW)
        prfW.destroy();
    u.fill(0);
    return DK;
}
/**
 * PBKDF2-HMAC: RFC 2898 key derivation function
 * @param hash - hash function that would be used e.g. sha256
 * @param password - password from which a derived key is generated
 * @param salt - cryptographic salt
 * @param opts - {c, dkLen} where c is work factor and dkLen is output message size
 */
function pbkdf2(hash, password, salt, opts) {
    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);
    let prfW; // Working copy
    const arr = new Uint8Array(4);
    const view = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.createView)(arr);
    const u = new Uint8Array(PRF.outputLen);
    // DK = T1 + T2 + ⋯ + Tdklen/hlen
    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {
        // Ti = F(Password, Salt, c, i)
        const Ti = DK.subarray(pos, pos + PRF.outputLen);
        view.setInt32(0, ti, false);
        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc
        // U1 = PRF(Password, Salt + INT_32_BE(i))
        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);
        Ti.set(u.subarray(0, Ti.length));
        for (let ui = 1; ui < c; ui++) {
            // Uc = PRF(Password, Uc−1)
            PRF._cloneInto(prfW).update(u).digestInto(u);
            for (let i = 0; i < Ti.length; i++)
                Ti[i] ^= u[i];
        }
    }
    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);
}
async function pbkdf2Async(hash, password, salt, opts) {
    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);
    let prfW; // Working copy
    const arr = new Uint8Array(4);
    const view = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.createView)(arr);
    const u = new Uint8Array(PRF.outputLen);
    // DK = T1 + T2 + ⋯ + Tdklen/hlen
    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {
        // Ti = F(Password, Salt, c, i)
        const Ti = DK.subarray(pos, pos + PRF.outputLen);
        view.setInt32(0, ti, false);
        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc
        // U1 = PRF(Password, Salt + INT_32_BE(i))
        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);
        Ti.set(u.subarray(0, Ti.length));
        await (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.asyncLoop)(c - 1, asyncTick, () => {
            // Uc = PRF(Password, Uc−1)
            PRF._cloneInto(prfW).update(u).digestInto(u);
            for (let i = 0; i < Ti.length; i++)
                Ti[i] ^= u[i];
        });
    }
    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);
}
//# sourceMappingURL=pbkdf2.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/scrypt.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/scrypt.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   scrypt: () => (/* binding */ scrypt),
/* harmony export */   scryptAsync: () => (/* binding */ scryptAsync)
/* harmony export */ });
/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_assert.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/_assert.js");
/* harmony import */ var _sha256_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sha256.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/sha256.js");
/* harmony import */ var _pbkdf2_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pbkdf2.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/pbkdf2.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/utils.js");




// RFC 7914 Scrypt KDF
// The main Scrypt loop: uses Salsa extensively.
// Six versions of the function were tried, this is the fastest one.
// prettier-ignore
function XorAndSalsa(prev, pi, input, ii, out, oi) {
    // Based on https://cr.yp.to/salsa20.html
    // Xor blocks
    let y00 = prev[pi++] ^ input[ii++], y01 = prev[pi++] ^ input[ii++];
    let y02 = prev[pi++] ^ input[ii++], y03 = prev[pi++] ^ input[ii++];
    let y04 = prev[pi++] ^ input[ii++], y05 = prev[pi++] ^ input[ii++];
    let y06 = prev[pi++] ^ input[ii++], y07 = prev[pi++] ^ input[ii++];
    let y08 = prev[pi++] ^ input[ii++], y09 = prev[pi++] ^ input[ii++];
    let y10 = prev[pi++] ^ input[ii++], y11 = prev[pi++] ^ input[ii++];
    let y12 = prev[pi++] ^ input[ii++], y13 = prev[pi++] ^ input[ii++];
    let y14 = prev[pi++] ^ input[ii++], y15 = prev[pi++] ^ input[ii++];
    // Save state to temporary variables (salsa)
    let x00 = y00, x01 = y01, x02 = y02, x03 = y03, x04 = y04, x05 = y05, x06 = y06, x07 = y07, x08 = y08, x09 = y09, x10 = y10, x11 = y11, x12 = y12, x13 = y13, x14 = y14, x15 = y15;
    // Main loop (salsa)
    for (let i = 0; i < 8; i += 2) {
        x04 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x00 + x12 | 0, 7);
        x08 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x04 + x00 | 0, 9);
        x12 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x08 + x04 | 0, 13);
        x00 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x12 + x08 | 0, 18);
        x09 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x05 + x01 | 0, 7);
        x13 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x09 + x05 | 0, 9);
        x01 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x13 + x09 | 0, 13);
        x05 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x01 + x13 | 0, 18);
        x14 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x10 + x06 | 0, 7);
        x02 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x14 + x10 | 0, 9);
        x06 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x02 + x14 | 0, 13);
        x10 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x06 + x02 | 0, 18);
        x03 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x15 + x11 | 0, 7);
        x07 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x03 + x15 | 0, 9);
        x11 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x07 + x03 | 0, 13);
        x15 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x11 + x07 | 0, 18);
        x01 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x00 + x03 | 0, 7);
        x02 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x01 + x00 | 0, 9);
        x03 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x02 + x01 | 0, 13);
        x00 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x03 + x02 | 0, 18);
        x06 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x05 + x04 | 0, 7);
        x07 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x06 + x05 | 0, 9);
        x04 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x07 + x06 | 0, 13);
        x05 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x04 + x07 | 0, 18);
        x11 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x10 + x09 | 0, 7);
        x08 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x11 + x10 | 0, 9);
        x09 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x08 + x11 | 0, 13);
        x10 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x09 + x08 | 0, 18);
        x12 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x15 + x14 | 0, 7);
        x13 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x12 + x15 | 0, 9);
        x14 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x13 + x12 | 0, 13);
        x15 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotl)(x14 + x13 | 0, 18);
    }
    // Write output (salsa)
    out[oi++] = (y00 + x00) | 0;
    out[oi++] = (y01 + x01) | 0;
    out[oi++] = (y02 + x02) | 0;
    out[oi++] = (y03 + x03) | 0;
    out[oi++] = (y04 + x04) | 0;
    out[oi++] = (y05 + x05) | 0;
    out[oi++] = (y06 + x06) | 0;
    out[oi++] = (y07 + x07) | 0;
    out[oi++] = (y08 + x08) | 0;
    out[oi++] = (y09 + x09) | 0;
    out[oi++] = (y10 + x10) | 0;
    out[oi++] = (y11 + x11) | 0;
    out[oi++] = (y12 + x12) | 0;
    out[oi++] = (y13 + x13) | 0;
    out[oi++] = (y14 + x14) | 0;
    out[oi++] = (y15 + x15) | 0;
}
function BlockMix(input, ii, out, oi, r) {
    // The block B is r 128-byte chunks (which is equivalent of 2r 64-byte chunks)
    let head = oi + 0;
    let tail = oi + 16 * r;
    for (let i = 0; i < 16; i++)
        out[tail + i] = input[ii + (2 * r - 1) * 16 + i]; // X ← B[2r−1]
    for (let i = 0; i < r; i++, head += 16, ii += 16) {
        // We write odd & even Yi at same time. Even: 0bXXXXX0 Odd:  0bXXXXX1
        XorAndSalsa(out, tail, input, ii, out, head); // head[i] = Salsa(blockIn[2*i] ^ tail[i-1])
        if (i > 0)
            tail += 16; // First iteration overwrites tmp value in tail
        XorAndSalsa(out, head, input, (ii += 16), out, tail); // tail[i] = Salsa(blockIn[2*i+1] ^ head[i])
    }
}
// Common prologue and epilogue for sync/async functions
function scryptInit(password, salt, _opts) {
    // Maxmem - 1GB+1KB by default
    const opts = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.checkOpts)({
        dkLen: 32,
        asyncTick: 10,
        maxmem: 1024 ** 3 + 1024,
    }, _opts);
    const { N, r, p, dkLen, asyncTick, maxmem, onProgress } = opts;
    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.number)(N);
    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.number)(r);
    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.number)(p);
    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.number)(dkLen);
    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.number)(asyncTick);
    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.number)(maxmem);
    if (onProgress !== undefined && typeof onProgress !== 'function')
        throw new Error('progressCb should be function');
    const blockSize = 128 * r;
    const blockSize32 = blockSize / 4;
    if (N <= 1 || (N & (N - 1)) !== 0 || N >= 2 ** (blockSize / 8) || N > 2 ** 32) {
        // NOTE: we limit N to be less than 2**32 because of 32 bit variant of Integrify function
        // There is no JS engines that allows alocate more than 4GB per single Uint8Array for now, but can change in future.
        throw new Error('Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32');
    }
    if (p < 0 || p > ((2 ** 32 - 1) * 32) / blockSize) {
        throw new Error('Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)');
    }
    if (dkLen < 0 || dkLen > (2 ** 32 - 1) * 32) {
        throw new Error('Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32');
    }
    const memUsed = blockSize * (N + p);
    if (memUsed > maxmem) {
        throw new Error(`Scrypt: parameters too large, ${memUsed} (128 * r * (N + p)) > ${maxmem} (maxmem)`);
    }
    // [B0...Bp−1] ← PBKDF2HMAC-SHA256(Passphrase, Salt, 1, blockSize*ParallelizationFactor)
    // Since it has only one iteration there is no reason to use async variant
    const B = (0,_pbkdf2_js__WEBPACK_IMPORTED_MODULE_2__.pbkdf2)(_sha256_js__WEBPACK_IMPORTED_MODULE_1__.sha256, password, salt, { c: 1, dkLen: blockSize * p });
    const B32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.u32)(B);
    // Re-used between parallel iterations. Array(iterations) of B
    const V = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.u32)(new Uint8Array(blockSize * N));
    const tmp = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.u32)(new Uint8Array(blockSize));
    let blockMixCb = () => { };
    if (onProgress) {
        const totalBlockMix = 2 * N * p;
        // Invoke callback if progress changes from 10.01 to 10.02
        // Allows to draw smooth progress bar on up to 8K screen
        const callbackPer = Math.max(Math.floor(totalBlockMix / 10000), 1);
        let blockMixCnt = 0;
        blockMixCb = () => {
            blockMixCnt++;
            if (onProgress && (!(blockMixCnt % callbackPer) || blockMixCnt === totalBlockMix))
                onProgress(blockMixCnt / totalBlockMix);
        };
    }
    return { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick };
}
function scryptOutput(password, dkLen, B, V, tmp) {
    const res = (0,_pbkdf2_js__WEBPACK_IMPORTED_MODULE_2__.pbkdf2)(_sha256_js__WEBPACK_IMPORTED_MODULE_1__.sha256, password, B, { c: 1, dkLen });
    B.fill(0);
    V.fill(0);
    tmp.fill(0);
    return res;
}
/**
 * Scrypt KDF from RFC 7914.
 * @param password - pass
 * @param salt - salt
 * @param opts - parameters
 * - `N` is cpu/mem work factor (power of 2 e.g. 2**18)
 * - `r` is block size (8 is common), fine-tunes sequential memory read size and performance
 * - `p` is parallelization factor (1 is common)
 * - `dkLen` is output key length in bytes e.g. 32.
 * - `asyncTick` - (default: 10) max time in ms for which async function can block execution
 * - `maxmem` - (default: `1024 ** 3 + 1024` aka 1GB+1KB). A limit that the app could use for scrypt
 * - `onProgress` - callback function that would be executed for progress report
 * @returns Derived key
 */
function scrypt(password, salt, opts) {
    const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb } = scryptInit(password, salt, opts);
    if (!_utils_js__WEBPACK_IMPORTED_MODULE_3__.isLE)
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.byteSwap32)(B32);
    for (let pi = 0; pi < p; pi++) {
        const Pi = blockSize32 * pi;
        for (let i = 0; i < blockSize32; i++)
            V[i] = B32[Pi + i]; // V[0] = B[i]
        for (let i = 0, pos = 0; i < N - 1; i++) {
            BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);
            blockMixCb();
        }
        BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element
        blockMixCb();
        for (let i = 0; i < N; i++) {
            // First u32 of the last 64-byte block (u32 is LE)
            const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations
            for (let k = 0; k < blockSize32; k++)
                tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]
            BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])
            blockMixCb();
        }
    }
    if (!_utils_js__WEBPACK_IMPORTED_MODULE_3__.isLE)
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.byteSwap32)(B32);
    return scryptOutput(password, dkLen, B, V, tmp);
}
/**
 * Scrypt KDF from RFC 7914.
 */
async function scryptAsync(password, salt, opts) {
    const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick } = scryptInit(password, salt, opts);
    if (!_utils_js__WEBPACK_IMPORTED_MODULE_3__.isLE)
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.byteSwap32)(B32);
    for (let pi = 0; pi < p; pi++) {
        const Pi = blockSize32 * pi;
        for (let i = 0; i < blockSize32; i++)
            V[i] = B32[Pi + i]; // V[0] = B[i]
        let pos = 0;
        await (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.asyncLoop)(N - 1, asyncTick, () => {
            BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);
            blockMixCb();
        });
        BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element
        blockMixCb();
        await (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.asyncLoop)(N, asyncTick, () => {
            // First u32 of the last 64-byte block (u32 is LE)
            const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations
            for (let k = 0; k < blockSize32; k++)
                tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]
            BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])
            blockMixCb();
        });
    }
    if (!_utils_js__WEBPACK_IMPORTED_MODULE_3__.isLE)
        (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.byteSwap32)(B32);
    return scryptOutput(password, dkLen, B, V, tmp);
}
//# sourceMappingURL=scrypt.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/sha256.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/sha256.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   sha224: () => (/* binding */ sha224),
/* harmony export */   sha256: () => (/* binding */ sha256)
/* harmony export */ });
/* harmony import */ var _md_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_md.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/_md.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/utils.js");


// SHA2-256 need to try 2^128 hashes to execute birthday attack.
// BTC network is doing 2^67 hashes/sec as per early 2023.
// Round constants:
// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)
// prettier-ignore
const SHA256_K = /* @__PURE__ */ new Uint32Array([
    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
]);
// Initial state:
// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19
// prettier-ignore
const SHA256_IV = /* @__PURE__ */ new Uint32Array([
    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
]);
// Temporary buffer, not used to store anything between runs
// Named this way because it matches specification.
const SHA256_W = /* @__PURE__ */ new Uint32Array(64);
class SHA256 extends _md_js__WEBPACK_IMPORTED_MODULE_0__.HashMD {
    constructor() {
        super(64, 32, 8, false);
        // We cannot use array here since array allows indexing by variable
        // which means optimizer/compiler cannot use registers.
        this.A = SHA256_IV[0] | 0;
        this.B = SHA256_IV[1] | 0;
        this.C = SHA256_IV[2] | 0;
        this.D = SHA256_IV[3] | 0;
        this.E = SHA256_IV[4] | 0;
        this.F = SHA256_IV[5] | 0;
        this.G = SHA256_IV[6] | 0;
        this.H = SHA256_IV[7] | 0;
    }
    get() {
        const { A, B, C, D, E, F, G, H } = this;
        return [A, B, C, D, E, F, G, H];
    }
    // prettier-ignore
    set(A, B, C, D, E, F, G, H) {
        this.A = A | 0;
        this.B = B | 0;
        this.C = C | 0;
        this.D = D | 0;
        this.E = E | 0;
        this.F = F | 0;
        this.G = G | 0;
        this.H = H | 0;
    }
    process(view, offset) {
        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array
        for (let i = 0; i < 16; i++, offset += 4)
            SHA256_W[i] = view.getUint32(offset, false);
        for (let i = 16; i < 64; i++) {
            const W15 = SHA256_W[i - 15];
            const W2 = SHA256_W[i - 2];
            const s0 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W15, 7) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W15, 18) ^ (W15 >>> 3);
            const s1 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W2, 17) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W2, 19) ^ (W2 >>> 10);
            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;
        }
        // Compression function main loop, 64 rounds
        let { A, B, C, D, E, F, G, H } = this;
        for (let i = 0; i < 64; i++) {
            const sigma1 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(E, 6) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(E, 11) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(E, 25);
            const T1 = (H + sigma1 + (0,_md_js__WEBPACK_IMPORTED_MODULE_0__.Chi)(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;
            const sigma0 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(A, 2) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(A, 13) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(A, 22);
            const T2 = (sigma0 + (0,_md_js__WEBPACK_IMPORTED_MODULE_0__.Maj)(A, B, C)) | 0;
            H = G;
            G = F;
            F = E;
            E = (D + T1) | 0;
            D = C;
            C = B;
            B = A;
            A = (T1 + T2) | 0;
        }
        // Add the compressed chunk to the current hash value
        A = (A + this.A) | 0;
        B = (B + this.B) | 0;
        C = (C + this.C) | 0;
        D = (D + this.D) | 0;
        E = (E + this.E) | 0;
        F = (F + this.F) | 0;
        G = (G + this.G) | 0;
        H = (H + this.H) | 0;
        this.set(A, B, C, D, E, F, G, H);
    }
    roundClean() {
        SHA256_W.fill(0);
    }
    destroy() {
        this.set(0, 0, 0, 0, 0, 0, 0, 0);
        this.buffer.fill(0);
    }
}
// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf
class SHA224 extends SHA256 {
    constructor() {
        super();
        this.A = 0xc1059ed8 | 0;
        this.B = 0x367cd507 | 0;
        this.C = 0x3070dd17 | 0;
        this.D = 0xf70e5939 | 0;
        this.E = 0xffc00b31 | 0;
        this.F = 0x68581511 | 0;
        this.G = 0x64f98fa7 | 0;
        this.H = 0xbefa4fa4 | 0;
        this.outputLen = 28;
    }
}
/**
 * SHA2-256 hash function
 * @param message - data that would be hashed
 */
const sha256 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapConstructor)(() => new SHA256());
const sha224 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapConstructor)(() => new SHA224());
//# sourceMappingURL=sha256.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/sha3.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/sha3.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Keccak: () => (/* binding */ Keccak),
/* harmony export */   keccakP: () => (/* binding */ keccakP),
/* harmony export */   keccak_224: () => (/* binding */ keccak_224),
/* harmony export */   keccak_256: () => (/* binding */ keccak_256),
/* harmony export */   keccak_384: () => (/* binding */ keccak_384),
/* harmony export */   keccak_512: () => (/* binding */ keccak_512),
/* harmony export */   sha3_224: () => (/* binding */ sha3_224),
/* harmony export */   sha3_256: () => (/* binding */ sha3_256),
/* harmony export */   sha3_384: () => (/* binding */ sha3_384),
/* harmony export */   sha3_512: () => (/* binding */ sha3_512),
/* harmony export */   shake128: () => (/* binding */ shake128),
/* harmony export */   shake256: () => (/* binding */ shake256)
/* harmony export */ });
/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_assert.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/_assert.js");
/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_u64.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/_u64.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/utils.js");



// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.
// It's called a sponge function.
// Various per round constants calculations
const SHA3_PI = [];
const SHA3_ROTL = [];
const _SHA3_IOTA = [];
const _0n = /* @__PURE__ */ BigInt(0);
const _1n = /* @__PURE__ */ BigInt(1);
const _2n = /* @__PURE__ */ BigInt(2);
const _7n = /* @__PURE__ */ BigInt(7);
const _256n = /* @__PURE__ */ BigInt(256);
const _0x71n = /* @__PURE__ */ BigInt(0x71);
for (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {
    // Pi
    [x, y] = [y, (2 * x + 3 * y) % 5];
    SHA3_PI.push(2 * (5 * y + x));
    // Rotational
    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);
    // Iota
    let t = _0n;
    for (let j = 0; j < 7; j++) {
        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;
        if (R & _2n)
            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);
    }
    _SHA3_IOTA.push(t);
}
const [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ (0,_u64_js__WEBPACK_IMPORTED_MODULE_1__.split)(_SHA3_IOTA, true);
// Left rotation (without 0, 32, 64)
const rotlH = (h, l, s) => (s > 32 ? (0,_u64_js__WEBPACK_IMPORTED_MODULE_1__.rotlBH)(h, l, s) : (0,_u64_js__WEBPACK_IMPORTED_MODULE_1__.rotlSH)(h, l, s));
const rotlL = (h, l, s) => (s > 32 ? (0,_u64_js__WEBPACK_IMPORTED_MODULE_1__.rotlBL)(h, l, s) : (0,_u64_js__WEBPACK_IMPORTED_MODULE_1__.rotlSL)(h, l, s));
// Same as keccakf1600, but allows to skip some rounds
function keccakP(s, rounds = 24) {
    const B = new Uint32Array(5 * 2);
    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)
    for (let round = 24 - rounds; round < 24; round++) {
        // Theta θ
        for (let x = 0; x < 10; x++)
            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];
        for (let x = 0; x < 10; x += 2) {
            const idx1 = (x + 8) % 10;
            const idx0 = (x + 2) % 10;
            const B0 = B[idx0];
            const B1 = B[idx0 + 1];
            const Th = rotlH(B0, B1, 1) ^ B[idx1];
            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];
            for (let y = 0; y < 50; y += 10) {
                s[x + y] ^= Th;
                s[x + y + 1] ^= Tl;
            }
        }
        // Rho (ρ) and Pi (π)
        let curH = s[2];
        let curL = s[3];
        for (let t = 0; t < 24; t++) {
            const shift = SHA3_ROTL[t];
            const Th = rotlH(curH, curL, shift);
            const Tl = rotlL(curH, curL, shift);
            const PI = SHA3_PI[t];
            curH = s[PI];
            curL = s[PI + 1];
            s[PI] = Th;
            s[PI + 1] = Tl;
        }
        // Chi (χ)
        for (let y = 0; y < 50; y += 10) {
            for (let x = 0; x < 10; x++)
                B[x] = s[y + x];
            for (let x = 0; x < 10; x++)
                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];
        }
        // Iota (ι)
        s[0] ^= SHA3_IOTA_H[round];
        s[1] ^= SHA3_IOTA_L[round];
    }
    B.fill(0);
}
class Keccak extends _utils_js__WEBPACK_IMPORTED_MODULE_2__.Hash {
    // NOTE: we accept arguments in bytes instead of bits here.
    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {
        super();
        this.blockLen = blockLen;
        this.suffix = suffix;
        this.outputLen = outputLen;
        this.enableXOF = enableXOF;
        this.rounds = rounds;
        this.pos = 0;
        this.posOut = 0;
        this.finished = false;
        this.destroyed = false;
        // Can be passed from user as dkLen
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.number)(outputLen);
        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes
        if (0 >= this.blockLen || this.blockLen >= 200)
            throw new Error('Sha3 supports only keccak-f1600 function');
        this.state = new Uint8Array(200);
        this.state32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.u32)(this.state);
    }
    keccak() {
        if (!_utils_js__WEBPACK_IMPORTED_MODULE_2__.isLE)
            (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.byteSwap32)(this.state32);
        keccakP(this.state32, this.rounds);
        if (!_utils_js__WEBPACK_IMPORTED_MODULE_2__.isLE)
            (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.byteSwap32)(this.state32);
        this.posOut = 0;
        this.pos = 0;
    }
    update(data) {
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.exists)(this);
        const { blockLen, state } = this;
        data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(data);
        const len = data.length;
        for (let pos = 0; pos < len;) {
            const take = Math.min(blockLen - this.pos, len - pos);
            for (let i = 0; i < take; i++)
                state[this.pos++] ^= data[pos++];
            if (this.pos === blockLen)
                this.keccak();
        }
        return this;
    }
    finish() {
        if (this.finished)
            return;
        this.finished = true;
        const { state, suffix, pos, blockLen } = this;
        // Do the padding
        state[pos] ^= suffix;
        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)
            this.keccak();
        state[blockLen - 1] ^= 0x80;
        this.keccak();
    }
    writeInto(out) {
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.exists)(this, false);
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.bytes)(out);
        this.finish();
        const bufferOut = this.state;
        const { blockLen } = this;
        for (let pos = 0, len = out.length; pos < len;) {
            if (this.posOut >= blockLen)
                this.keccak();
            const take = Math.min(blockLen - this.posOut, len - pos);
            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);
            this.posOut += take;
            pos += take;
        }
        return out;
    }
    xofInto(out) {
        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF
        if (!this.enableXOF)
            throw new Error('XOF is not possible for this instance');
        return this.writeInto(out);
    }
    xof(bytes) {
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.number)(bytes);
        return this.xofInto(new Uint8Array(bytes));
    }
    digestInto(out) {
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.output)(out, this);
        if (this.finished)
            throw new Error('digest() was already called');
        this.writeInto(out);
        this.destroy();
        return out;
    }
    digest() {
        return this.digestInto(new Uint8Array(this.outputLen));
    }
    destroy() {
        this.destroyed = true;
        this.state.fill(0);
    }
    _cloneInto(to) {
        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;
        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));
        to.state32.set(this.state32);
        to.pos = this.pos;
        to.posOut = this.posOut;
        to.finished = this.finished;
        to.rounds = rounds;
        // Suffix can change in cSHAKE
        to.suffix = suffix;
        to.outputLen = outputLen;
        to.enableXOF = enableXOF;
        to.destroyed = this.destroyed;
        return to;
    }
}
const gen = (suffix, blockLen, outputLen) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));
const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);
/**
 * SHA3-256 hash function
 * @param message - that would be hashed
 */
const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);
const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);
const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);
const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);
/**
 * keccak-256 hash function. Different from SHA3-256.
 * @param message - that would be hashed
 */
const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);
const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);
const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);
const genShake = (suffix, blockLen, outputLen) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapXOFConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));
const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);
const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);
//# sourceMappingURL=sha3.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/sha512.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/sha512.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SHA512: () => (/* binding */ SHA512),
/* harmony export */   sha384: () => (/* binding */ sha384),
/* harmony export */   sha512: () => (/* binding */ sha512),
/* harmony export */   sha512_224: () => (/* binding */ sha512_224),
/* harmony export */   sha512_256: () => (/* binding */ sha512_256)
/* harmony export */ });
/* harmony import */ var _md_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_md.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/_md.js");
/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_u64.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/_u64.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/utils.js");



// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):
// prettier-ignore
const [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].split([
    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',
    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',
    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',
    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',
    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',
    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',
    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',
    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',
    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',
    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',
    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',
    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',
    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',
    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',
    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',
    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',
    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',
    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',
    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',
    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'
].map(n => BigInt(n))))();
// Temporary buffer, not used to store anything between runs
const SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);
const SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);
class SHA512 extends _md_js__WEBPACK_IMPORTED_MODULE_0__.HashMD {
    constructor() {
        super(128, 64, 16, false);
        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.
        // Also looks cleaner and easier to verify with spec.
        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):
        // h -- high 32 bits, l -- low 32 bits
        this.Ah = 0x6a09e667 | 0;
        this.Al = 0xf3bcc908 | 0;
        this.Bh = 0xbb67ae85 | 0;
        this.Bl = 0x84caa73b | 0;
        this.Ch = 0x3c6ef372 | 0;
        this.Cl = 0xfe94f82b | 0;
        this.Dh = 0xa54ff53a | 0;
        this.Dl = 0x5f1d36f1 | 0;
        this.Eh = 0x510e527f | 0;
        this.El = 0xade682d1 | 0;
        this.Fh = 0x9b05688c | 0;
        this.Fl = 0x2b3e6c1f | 0;
        this.Gh = 0x1f83d9ab | 0;
        this.Gl = 0xfb41bd6b | 0;
        this.Hh = 0x5be0cd19 | 0;
        this.Hl = 0x137e2179 | 0;
    }
    // prettier-ignore
    get() {
        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;
        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];
    }
    // prettier-ignore
    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {
        this.Ah = Ah | 0;
        this.Al = Al | 0;
        this.Bh = Bh | 0;
        this.Bl = Bl | 0;
        this.Ch = Ch | 0;
        this.Cl = Cl | 0;
        this.Dh = Dh | 0;
        this.Dl = Dl | 0;
        this.Eh = Eh | 0;
        this.El = El | 0;
        this.Fh = Fh | 0;
        this.Fl = Fl | 0;
        this.Gh = Gh | 0;
        this.Gl = Gl | 0;
        this.Hh = Hh | 0;
        this.Hl = Hl | 0;
    }
    process(view, offset) {
        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array
        for (let i = 0; i < 16; i++, offset += 4) {
            SHA512_W_H[i] = view.getUint32(offset);
            SHA512_W_L[i] = view.getUint32((offset += 4));
        }
        for (let i = 16; i < 80; i++) {
            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)
            const W15h = SHA512_W_H[i - 15] | 0;
            const W15l = SHA512_W_L[i - 15] | 0;
            const s0h = _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].rotrSH(W15h, W15l, 1) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].rotrSH(W15h, W15l, 8) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].shrSH(W15h, W15l, 7);
            const s0l = _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].rotrSL(W15h, W15l, 1) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].rotrSL(W15h, W15l, 8) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].shrSL(W15h, W15l, 7);
            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)
            const W2h = SHA512_W_H[i - 2] | 0;
            const W2l = SHA512_W_L[i - 2] | 0;
            const s1h = _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].rotrSH(W2h, W2l, 19) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].rotrBH(W2h, W2l, 61) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].shrSH(W2h, W2l, 6);
            const s1l = _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].rotrSL(W2h, W2l, 19) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].rotrBL(W2h, W2l, 61) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].shrSL(W2h, W2l, 6);
            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];
            const SUMl = _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);
            const SUMh = _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);
            SHA512_W_H[i] = SUMh | 0;
            SHA512_W_L[i] = SUMl | 0;
        }
        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;
        // Compression function main loop, 80 rounds
        for (let i = 0; i < 80; i++) {
            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)
            const sigma1h = _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].rotrSH(Eh, El, 14) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].rotrSH(Eh, El, 18) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].rotrBH(Eh, El, 41);
            const sigma1l = _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].rotrSL(Eh, El, 14) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].rotrSL(Eh, El, 18) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].rotrBL(Eh, El, 41);
            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;
            const CHIh = (Eh & Fh) ^ (~Eh & Gh);
            const CHIl = (El & Fl) ^ (~El & Gl);
            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]
            // prettier-ignore
            const T1ll = _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);
            const T1h = _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);
            const T1l = T1ll | 0;
            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)
            const sigma0h = _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].rotrSH(Ah, Al, 28) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].rotrBH(Ah, Al, 34) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].rotrBH(Ah, Al, 39);
            const sigma0l = _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].rotrSL(Ah, Al, 28) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].rotrBL(Ah, Al, 34) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].rotrBL(Ah, Al, 39);
            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);
            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);
            Hh = Gh | 0;
            Hl = Gl | 0;
            Gh = Fh | 0;
            Gl = Fl | 0;
            Fh = Eh | 0;
            Fl = El | 0;
            ({ h: Eh, l: El } = _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));
            Dh = Ch | 0;
            Dl = Cl | 0;
            Ch = Bh | 0;
            Cl = Bl | 0;
            Bh = Ah | 0;
            Bl = Al | 0;
            const All = _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].add3L(T1l, sigma0l, MAJl);
            Ah = _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].add3H(All, T1h, sigma0h, MAJh);
            Al = All | 0;
        }
        // Add the compressed chunk to the current hash value
        ({ h: Ah, l: Al } = _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));
        ({ h: Bh, l: Bl } = _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));
        ({ h: Ch, l: Cl } = _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));
        ({ h: Dh, l: Dl } = _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));
        ({ h: Eh, l: El } = _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));
        ({ h: Fh, l: Fl } = _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));
        ({ h: Gh, l: Gl } = _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));
        ({ h: Hh, l: Hl } = _u64_js__WEBPACK_IMPORTED_MODULE_1__["default"].add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));
        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);
    }
    roundClean() {
        SHA512_W_H.fill(0);
        SHA512_W_L.fill(0);
    }
    destroy() {
        this.buffer.fill(0);
        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    }
}
class SHA512_224 extends SHA512 {
    constructor() {
        super();
        // h -- high 32 bits, l -- low 32 bits
        this.Ah = 0x8c3d37c8 | 0;
        this.Al = 0x19544da2 | 0;
        this.Bh = 0x73e19966 | 0;
        this.Bl = 0x89dcd4d6 | 0;
        this.Ch = 0x1dfab7ae | 0;
        this.Cl = 0x32ff9c82 | 0;
        this.Dh = 0x679dd514 | 0;
        this.Dl = 0x582f9fcf | 0;
        this.Eh = 0x0f6d2b69 | 0;
        this.El = 0x7bd44da8 | 0;
        this.Fh = 0x77e36f73 | 0;
        this.Fl = 0x04c48942 | 0;
        this.Gh = 0x3f9d85a8 | 0;
        this.Gl = 0x6a1d36c8 | 0;
        this.Hh = 0x1112e6ad | 0;
        this.Hl = 0x91d692a1 | 0;
        this.outputLen = 28;
    }
}
class SHA512_256 extends SHA512 {
    constructor() {
        super();
        // h -- high 32 bits, l -- low 32 bits
        this.Ah = 0x22312194 | 0;
        this.Al = 0xfc2bf72c | 0;
        this.Bh = 0x9f555fa3 | 0;
        this.Bl = 0xc84c64c2 | 0;
        this.Ch = 0x2393b86b | 0;
        this.Cl = 0x6f53b151 | 0;
        this.Dh = 0x96387719 | 0;
        this.Dl = 0x5940eabd | 0;
        this.Eh = 0x96283ee2 | 0;
        this.El = 0xa88effe3 | 0;
        this.Fh = 0xbe5e1e25 | 0;
        this.Fl = 0x53863992 | 0;
        this.Gh = 0x2b0199fc | 0;
        this.Gl = 0x2c85b8aa | 0;
        this.Hh = 0x0eb72ddc | 0;
        this.Hl = 0x81c52ca2 | 0;
        this.outputLen = 32;
    }
}
class SHA384 extends SHA512 {
    constructor() {
        super();
        // h -- high 32 bits, l -- low 32 bits
        this.Ah = 0xcbbb9d5d | 0;
        this.Al = 0xc1059ed8 | 0;
        this.Bh = 0x629a292a | 0;
        this.Bl = 0x367cd507 | 0;
        this.Ch = 0x9159015a | 0;
        this.Cl = 0x3070dd17 | 0;
        this.Dh = 0x152fecd8 | 0;
        this.Dl = 0xf70e5939 | 0;
        this.Eh = 0x67332667 | 0;
        this.El = 0xffc00b31 | 0;
        this.Fh = 0x8eb44a87 | 0;
        this.Fl = 0x68581511 | 0;
        this.Gh = 0xdb0c2e0d | 0;
        this.Gl = 0x64f98fa7 | 0;
        this.Hh = 0x47b5481d | 0;
        this.Hl = 0xbefa4fa4 | 0;
        this.outputLen = 48;
    }
}
const sha512 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructor)(() => new SHA512());
const sha512_224 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructor)(() => new SHA512_224());
const sha512_256 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructor)(() => new SHA512_256());
const sha384 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructor)(() => new SHA384());
//# sourceMappingURL=sha512.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/utils.js":
/*!********************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/utils.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Hash: () => (/* binding */ Hash),
/* harmony export */   asyncLoop: () => (/* binding */ asyncLoop),
/* harmony export */   byteSwap: () => (/* binding */ byteSwap),
/* harmony export */   byteSwap32: () => (/* binding */ byteSwap32),
/* harmony export */   byteSwapIfBE: () => (/* binding */ byteSwapIfBE),
/* harmony export */   bytesToHex: () => (/* binding */ bytesToHex),
/* harmony export */   checkOpts: () => (/* binding */ checkOpts),
/* harmony export */   concatBytes: () => (/* binding */ concatBytes),
/* harmony export */   createView: () => (/* binding */ createView),
/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),
/* harmony export */   isBytes: () => (/* binding */ isBytes),
/* harmony export */   isLE: () => (/* binding */ isLE),
/* harmony export */   nextTick: () => (/* binding */ nextTick),
/* harmony export */   randomBytes: () => (/* binding */ randomBytes),
/* harmony export */   rotl: () => (/* binding */ rotl),
/* harmony export */   rotr: () => (/* binding */ rotr),
/* harmony export */   toBytes: () => (/* binding */ toBytes),
/* harmony export */   u32: () => (/* binding */ u32),
/* harmony export */   u8: () => (/* binding */ u8),
/* harmony export */   utf8ToBytes: () => (/* binding */ utf8ToBytes),
/* harmony export */   wrapConstructor: () => (/* binding */ wrapConstructor),
/* harmony export */   wrapConstructorWithOpts: () => (/* binding */ wrapConstructorWithOpts),
/* harmony export */   wrapXOFConstructorWithOpts: () => (/* binding */ wrapXOFConstructorWithOpts)
/* harmony export */ });
/* harmony import */ var _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/crypto */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/crypto.js");
/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_assert.js */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/_assert.js");
/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.
// node.js versions earlier than v19 don't declare it in global scope.
// For node.js, package.json#exports field mapping rewrites import
// from `crypto` to `cryptoNode`, which imports native module.
// Makes the utils un-importable in browsers without a bundler.
// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.


// export { isBytes } from './_assert.js';
// We can't reuse isBytes from _assert, because somehow this causes huge perf issues
function isBytes(a) {
    return (a instanceof Uint8Array ||
        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));
}
// Cast array to different type
const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);
const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));
// Cast array to view
const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);
// The rotate right (circular right shift) operation for uint32
const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);
// The rotate left (circular left shift) operation for uint32
const rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);
const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;
// The byte swap operation for uint32
const byteSwap = (word) => ((word << 24) & 0xff000000) |
    ((word << 8) & 0xff0000) |
    ((word >>> 8) & 0xff00) |
    ((word >>> 24) & 0xff);
// Conditionally byte swap if on a big-endian platform
const byteSwapIfBE = isLE ? (n) => n : (n) => byteSwap(n);
// In place byte swap for Uint32Array
function byteSwap32(arr) {
    for (let i = 0; i < arr.length; i++) {
        arr[i] = byteSwap(arr[i]);
    }
}
// Array where index 0xf0 (240) is mapped to string 'f0'
const hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));
/**
 * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'
 */
function bytesToHex(bytes) {
    (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.bytes)(bytes);
    // pre-caching improves the speed 6x
    let hex = '';
    for (let i = 0; i < bytes.length; i++) {
        hex += hexes[bytes[i]];
    }
    return hex;
}
// We use optimized technique to convert hex string to byte array
const asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };
function asciiToBase16(char) {
    if (char >= asciis._0 && char <= asciis._9)
        return char - asciis._0;
    if (char >= asciis._A && char <= asciis._F)
        return char - (asciis._A - 10);
    if (char >= asciis._a && char <= asciis._f)
        return char - (asciis._a - 10);
    return;
}
/**
 * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])
 */
function hexToBytes(hex) {
    if (typeof hex !== 'string')
        throw new Error('hex string expected, got ' + typeof hex);
    const hl = hex.length;
    const al = hl / 2;
    if (hl % 2)
        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);
    const array = new Uint8Array(al);
    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {
        const n1 = asciiToBase16(hex.charCodeAt(hi));
        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));
        if (n1 === undefined || n2 === undefined) {
            const char = hex[hi] + hex[hi + 1];
            throw new Error('hex string expected, got non-hex character "' + char + '" at index ' + hi);
        }
        array[ai] = n1 * 16 + n2;
    }
    return array;
}
// There is no setImmediate in browser and setTimeout is slow.
// call of async fn will return Promise, which will be fullfiled only on
// next scheduler queue processing step and this is exactly what we need.
const nextTick = async () => { };
// Returns control to thread each 'tick' ms to avoid blocking
async function asyncLoop(iters, tick, cb) {
    let ts = Date.now();
    for (let i = 0; i < iters; i++) {
        cb(i);
        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too
        const diff = Date.now() - ts;
        if (diff >= 0 && diff < tick)
            continue;
        await nextTick();
        ts += diff;
    }
}
/**
 * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])
 */
function utf8ToBytes(str) {
    if (typeof str !== 'string')
        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);
    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809
}
/**
 * Normalizes (non-hex) string or Uint8Array to Uint8Array.
 * Warning: when Uint8Array is passed, it would NOT get copied.
 * Keep in mind for future mutable operations.
 */
function toBytes(data) {
    if (typeof data === 'string')
        data = utf8ToBytes(data);
    (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.bytes)(data);
    return data;
}
/**
 * Copies several Uint8Arrays into one.
 */
function concatBytes(...arrays) {
    let sum = 0;
    for (let i = 0; i < arrays.length; i++) {
        const a = arrays[i];
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.bytes)(a);
        sum += a.length;
    }
    const res = new Uint8Array(sum);
    for (let i = 0, pad = 0; i < arrays.length; i++) {
        const a = arrays[i];
        res.set(a, pad);
        pad += a.length;
    }
    return res;
}
// For runtime check if class implements interface
class Hash {
    // Safe version that clones internal state
    clone() {
        return this._cloneInto();
    }
}
const toStr = {}.toString;
function checkOpts(defaults, opts) {
    if (opts !== undefined && toStr.call(opts) !== '[object Object]')
        throw new Error('Options should be object or undefined');
    const merged = Object.assign(defaults, opts);
    return merged;
}
function wrapConstructor(hashCons) {
    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();
    const tmp = hashCons();
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = () => hashCons();
    return hashC;
}
function wrapConstructorWithOpts(hashCons) {
    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();
    const tmp = hashCons({});
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = (opts) => hashCons(opts);
    return hashC;
}
function wrapXOFConstructorWithOpts(hashCons) {
    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();
    const tmp = hashCons({});
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = (opts) => hashCons(opts);
    return hashC;
}
/**
 * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.
 */
function randomBytes(bytesLength = 32) {
    if (_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto && typeof _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.getRandomValues === 'function') {
        return _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.getRandomValues(new Uint8Array(bytesLength));
    }
    throw new Error('crypto.getRandomValues must be defined');
}
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "./node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/esm/aes.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/esm/aes.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decrypt: () => (/* binding */ decrypt),
/* harmony export */   encrypt: () => (/* binding */ encrypt)
/* harmony export */ });
/* harmony import */ var _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/crypto */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/crypto.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/esm/utils.js");


const crypto = { web: _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto };
function validateOpt(key, iv, mode) {
    if (!mode.startsWith("aes-")) {
        throw new Error(`AES submodule doesn't support mode ${mode}`);
    }
    if (iv.length !== 16) {
        throw new Error("AES: wrong IV length");
    }
    if ((mode.startsWith("aes-128") && key.length !== 16) ||
        (mode.startsWith("aes-256") && key.length !== 32)) {
        throw new Error("AES: wrong key length");
    }
}
async function getBrowserKey(mode, key, iv) {
    if (!crypto.web) {
        throw new Error("Browser crypto not available.");
    }
    let keyMode;
    if (["aes-128-cbc", "aes-256-cbc"].includes(mode)) {
        keyMode = "cbc";
    }
    if (["aes-128-ctr", "aes-256-ctr"].includes(mode)) {
        keyMode = "ctr";
    }
    if (!keyMode) {
        throw new Error("AES: unsupported mode");
    }
    const wKey = await crypto.web.subtle.importKey("raw", key, { name: `AES-${keyMode.toUpperCase()}`, length: key.length * 8 }, true, ["encrypt", "decrypt"]);
    // node.js uses whole 128 bit as a counter, without nonce, instead of 64 bit
    // recommended by NIST SP800-38A
    return [wKey, { name: `aes-${keyMode}`, iv, counter: iv, length: 128 }];
}
async function encrypt(msg, key, iv, mode = "aes-128-ctr", pkcs7PaddingEnabled = true) {
    validateOpt(key, iv, mode);
    if (crypto.web) {
        const [wKey, wOpt] = await getBrowserKey(mode, key, iv);
        const cipher = await crypto.web.subtle.encrypt(wOpt, wKey, msg);
        // Remove PKCS7 padding on cbc mode by stripping end of message
        let res = new Uint8Array(cipher);
        if (!pkcs7PaddingEnabled && wOpt.name === "aes-cbc" && !(msg.length % 16)) {
            res = res.slice(0, -16);
        }
        return res;
    }
    else if (crypto.node) {
        const cipher = crypto.node.createCipheriv(mode, key, iv);
        cipher.setAutoPadding(pkcs7PaddingEnabled);
        return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.concatBytes)(cipher.update(msg), cipher.final());
    }
    else {
        throw new Error("The environment doesn't have AES module");
    }
}
async function getPadding(cypherText, key, iv, mode) {
    const lastBlock = cypherText.slice(-16);
    for (let i = 0; i < 16; i++) {
        // Undo xor of iv and fill with lastBlock ^ padding (16)
        lastBlock[i] ^= iv[i] ^ 16;
    }
    const res = await encrypt(lastBlock, key, iv, mode);
    return res.slice(0, 16);
}
async function decrypt(cypherText, key, iv, mode = "aes-128-ctr", pkcs7PaddingEnabled = true) {
    validateOpt(key, iv, mode);
    if (crypto.web) {
        const [wKey, wOpt] = await getBrowserKey(mode, key, iv);
        // Add empty padding so Chrome will correctly decrypt message
        if (!pkcs7PaddingEnabled && wOpt.name === "aes-cbc") {
            const padding = await getPadding(cypherText, key, iv, mode);
            cypherText = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.concatBytes)(cypherText, padding);
        }
        const msg = await crypto.web.subtle.decrypt(wOpt, wKey, cypherText);
        const msgBytes = new Uint8Array(msg);
        // Safari always ignores padding (if no padding -> broken message)
        if (wOpt.name === "aes-cbc") {
            const encrypted = await encrypt(msgBytes, key, iv, mode);
            if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equalsBytes)(encrypted, cypherText)) {
                throw new Error("AES: wrong padding");
            }
        }
        return msgBytes;
    }
    else if (crypto.node) {
        const decipher = crypto.node.createDecipheriv(mode, key, iv);
        decipher.setAutoPadding(pkcs7PaddingEnabled);
        return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.concatBytes)(decipher.update(cypherText), decipher.final());
    }
    else {
        throw new Error("The environment doesn't have AES module");
    }
}


/***/ }),

/***/ "./node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/esm/keccak.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/esm/keccak.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   keccak224: () => (/* binding */ keccak224),
/* harmony export */   keccak256: () => (/* binding */ keccak256),
/* harmony export */   keccak384: () => (/* binding */ keccak384),
/* harmony export */   keccak512: () => (/* binding */ keccak512)
/* harmony export */ });
/* harmony import */ var _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/sha3 */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/sha3.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/esm/utils.js");


const keccak224 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapHash)(_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__.keccak_224);
const keccak256 = (() => {
    const k = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapHash)(_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__.keccak_256);
    k.create = _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__.keccak_256.create;
    return k;
})();
const keccak384 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapHash)(_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__.keccak_384);
const keccak512 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapHash)(_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__.keccak_512);


/***/ }),

/***/ "./node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/esm/pbkdf2.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/esm/pbkdf2.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   pbkdf2: () => (/* binding */ pbkdf2),
/* harmony export */   pbkdf2Sync: () => (/* binding */ pbkdf2Sync)
/* harmony export */ });
/* harmony import */ var _noble_hashes_pbkdf2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/pbkdf2 */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/pbkdf2.js");
/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/sha256 */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/sha256.js");
/* harmony import */ var _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/hashes/sha512 */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/sha512.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/esm/utils.js");




async function pbkdf2(password, salt, iterations, keylen, digest) {
    if (!["sha256", "sha512"].includes(digest)) {
        throw new Error("Only sha256 and sha512 are supported");
    }
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.assertBytes)(password);
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.assertBytes)(salt);
    return (0,_noble_hashes_pbkdf2__WEBPACK_IMPORTED_MODULE_0__.pbkdf2Async)(digest === "sha256" ? _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__.sha256 : _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_2__.sha512, password, salt, {
        c: iterations,
        dkLen: keylen
    });
}
function pbkdf2Sync(password, salt, iterations, keylen, digest) {
    if (!["sha256", "sha512"].includes(digest)) {
        throw new Error("Only sha256 and sha512 are supported");
    }
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.assertBytes)(password);
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.assertBytes)(salt);
    return (0,_noble_hashes_pbkdf2__WEBPACK_IMPORTED_MODULE_0__.pbkdf2)(digest === "sha256" ? _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__.sha256 : _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_2__.sha512, password, salt, {
        c: iterations,
        dkLen: keylen
    });
}


/***/ }),

/***/ "./node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/esm/scrypt.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/esm/scrypt.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   scrypt: () => (/* binding */ scrypt),
/* harmony export */   scryptSync: () => (/* binding */ scryptSync)
/* harmony export */ });
/* harmony import */ var _noble_hashes_scrypt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/scrypt */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/scrypt.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/esm/utils.js");


async function scrypt(password, salt, n, p, r, dkLen, onProgress) {
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.assertBytes)(password);
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.assertBytes)(salt);
    return (0,_noble_hashes_scrypt__WEBPACK_IMPORTED_MODULE_0__.scryptAsync)(password, salt, { N: n, r, p, dkLen, onProgress });
}
function scryptSync(password, salt, n, p, r, dkLen, onProgress) {
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.assertBytes)(password);
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.assertBytes)(salt);
    return (0,_noble_hashes_scrypt__WEBPACK_IMPORTED_MODULE_0__.scrypt)(password, salt, { N: n, r, p, dkLen, onProgress });
}


/***/ }),

/***/ "./node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/esm/secp256k1.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/esm/secp256k1.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   secp256k1: () => (/* reexport safe */ _noble_curves_secp256k1__WEBPACK_IMPORTED_MODULE_0__.secp256k1)
/* harmony export */ });
/* harmony import */ var _noble_curves_secp256k1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/curves/secp256k1 */ "./node_modules/web3-eth-accounts/node_modules/@noble/curves/esm/secp256k1.js");



/***/ }),

/***/ "./node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/esm/utils.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/esm/utils.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   assertBool: () => (/* binding */ assertBool),
/* harmony export */   assertBytes: () => (/* binding */ assertBytes),
/* harmony export */   bytesToHex: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex),
/* harmony export */   bytesToUtf8: () => (/* binding */ bytesToUtf8),
/* harmony export */   concatBytes: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.concatBytes),
/* harmony export */   createView: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.createView),
/* harmony export */   crypto: () => (/* binding */ crypto),
/* harmony export */   equalsBytes: () => (/* binding */ equalsBytes),
/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),
/* harmony export */   toHex: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex),
/* harmony export */   utf8ToBytes: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes),
/* harmony export */   wrapHash: () => (/* binding */ wrapHash)
/* harmony export */ });
/* harmony import */ var _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/_assert */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/_assert.js");
/* harmony import */ var _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/utils */ "./node_modules/web3-eth-accounts/node_modules/@noble/hashes/esm/utils.js");


const assertBool = _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__["default"].bool;
const assertBytes = _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__["default"].bytes;


// buf.toString('utf8') -> bytesToUtf8(buf)
function bytesToUtf8(data) {
    if (!(data instanceof Uint8Array)) {
        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);
    }
    return new TextDecoder().decode(data);
}
function hexToBytes(data) {
    const sliced = data.startsWith("0x") ? data.substring(2) : data;
    return (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(sliced);
}
// buf.equals(buf2) -> equalsBytes(buf, buf2)
function equalsBytes(a, b) {
    if (a.length !== b.length) {
        return false;
    }
    for (let i = 0; i < a.length; i++) {
        if (a[i] !== b[i]) {
            return false;
        }
    }
    return true;
}
// Internal utils
function wrapHash(hash) {
    return (msg) => {
        _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__["default"].bytes(msg);
        return hash(msg);
    };
}
// TODO(v3): switch away from node crypto, remove this unnecessary variable.
const crypto = (() => {
    const webCrypto = typeof globalThis === "object" && "crypto" in globalThis ? globalThis.crypto : undefined;
    const nodeRequire = typeof module !== "undefined" &&
        typeof module.require === "function" &&
        module.require.bind(module);
    return {
        node: nodeRequire && !webCrypto ? nodeRequire("crypto") : undefined,
        web: webCrypto
    };
})();


/***/ }),

/***/ "./node_modules/web3-eth-contract/lib/esm/contract-deployer-method-class.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/web3-eth-contract/lib/esm/contract-deployer-method-class.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DeployerMethodClass: () => (/* binding */ DeployerMethodClass)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_eth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-eth */ "./node_modules/web3-eth/lib/esm/index.js");
/* harmony import */ var web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-eth-abi */ "./node_modules/web3-eth-abi/lib/esm/index.js");
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var _encoding_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./encoding.js */ "./node_modules/web3-eth-contract/lib/esm/encoding.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-contract/lib/esm/utils.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};








/*
 * This class is only supposed to be used for the return of `new Contract(...).deploy(...)` method.
 */
class DeployerMethodClass {
    _contractMethodDeploySend(tx) {
        // eslint-disable-next-line no-use-before-define
        const returnTxOptions = {
            transactionResolver: (receipt) => {
                if (receipt.status === BigInt(0)) {
                    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.Web3ContractError("code couldn't be stored", receipt);
                }
                const newContract = this.parent.clone();
                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
                newContract.options.address = receipt.contractAddress;
                return newContract;
            },
            contractAbi: this.parent.options.jsonInterface,
            // TODO Should make this configurable by the user
            checkRevertBeforeSending: false,
        };
        return (0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isNullish)(this.parent.getTransactionMiddleware())
            ? (0,web3_eth__WEBPACK_IMPORTED_MODULE_1__.sendTransaction)(this.parent, tx, this.parent.defaultReturnFormat, returnTxOptions) // not calling this with undefined Middleware because it will not break if Eth package is not updated
            : (0,web3_eth__WEBPACK_IMPORTED_MODULE_1__.sendTransaction)(this.parent, tx, this.parent.defaultReturnFormat, returnTxOptions, this.parent.getTransactionMiddleware());
    }
    constructor(
    // eslint-disable-next-line no-use-before-define
    parent, deployOptions) {
        this.parent = parent;
        this.deployOptions = deployOptions;
        const { args, abi, contractOptions, deployData } = this.calculateDeployParams();
        this.args = args;
        this.constructorAbi = abi;
        this.contractOptions = contractOptions;
        this.deployData = deployData;
    }
    send(options) {
        const modifiedOptions = Object.assign({}, options);
        const tx = this.populateTransaction(modifiedOptions);
        return this._contractMethodDeploySend(tx);
    }
    populateTransaction(txOptions) {
        var _a, _b;
        const modifiedContractOptions = Object.assign(Object.assign({}, this.contractOptions), { from: (_b = (_a = this.contractOptions.from) !== null && _a !== void 0 ? _a : this.parent.defaultAccount) !== null && _b !== void 0 ? _b : undefined });
        // args, abi, contractOptions, deployData
        const tx = (0,_utils_js__WEBPACK_IMPORTED_MODULE_7__.getSendTxParams)({
            abi: this.constructorAbi,
            params: this.args,
            options: Object.assign(Object.assign({}, txOptions), { dataInputFill: this.parent.contractDataInputFill }),
            contractOptions: modifiedContractOptions,
        });
        // @ts-expect-error remove unnecessary field
        if (tx.dataInputFill) {
            // @ts-expect-error remove unnecessary field
            delete tx.dataInputFill;
        }
        return tx;
    }
    calculateDeployParams() {
        var _a, _b, _c, _d, _e, _f;
        let abi = this.parent.options.jsonInterface.find(j => j.type === 'constructor');
        if (!abi) {
            abi = {
                type: 'constructor',
                stateMutability: '',
            };
        }
        const _input = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.format)({ format: 'bytes' }, (_b = (_a = this.deployOptions) === null || _a === void 0 ? void 0 : _a.input) !== null && _b !== void 0 ? _b : this.parent.options.input, web3_types__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_RETURN_FORMAT);
        const _data = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.format)({ format: 'bytes' }, (_d = (_c = this.deployOptions) === null || _c === void 0 ? void 0 : _c.data) !== null && _d !== void 0 ? _d : this.parent.options.data, web3_types__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_RETURN_FORMAT);
        if ((!_input || _input.trim() === '0x') && (!_data || _data.trim() === '0x')) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.Web3ContractError('contract creation without any data provided.');
        }
        const args = (_f = (_e = this.deployOptions) === null || _e === void 0 ? void 0 : _e.arguments) !== null && _f !== void 0 ? _f : [];
        const contractOptions = Object.assign(Object.assign({}, this.parent.options), { input: _input, data: _data });
        const deployData = _input !== null && _input !== void 0 ? _input : _data;
        return { args, abi, contractOptions, deployData };
    }
    estimateGas(options_1) {
        return __awaiter(this, arguments, void 0, function* (options, returnFormat = this.parent.defaultReturnFormat) {
            const modifiedOptions = Object.assign({}, options);
            return this.parent.contractMethodEstimateGas({
                abi: this.constructorAbi,
                params: this.args,
                returnFormat,
                options: modifiedOptions,
                contractOptions: this.contractOptions,
            });
        });
    }
    encodeABI() {
        return (0,_encoding_js__WEBPACK_IMPORTED_MODULE_6__.encodeMethodABI)(this.constructorAbi, this.args, (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.format)({ format: 'bytes' }, this.deployData, this.parent.defaultReturnFormat));
    }
    decodeData(data) {
        return Object.assign(Object.assign({}, (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__.decodeFunctionCall)(this.constructorAbi, data.replace(this.deployData, ''), false)), { __method__: this.constructorAbi.type });
    }
}
//# sourceMappingURL=contract-deployer-method-class.js.map

/***/ }),

/***/ "./node_modules/web3-eth-contract/lib/esm/contract-subscription-manager.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/web3-eth-contract/lib/esm/contract-subscription-manager.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ContractSubscriptionManager: () => (/* binding */ ContractSubscriptionManager)
/* harmony export */ });
/* harmony import */ var web3_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-core */ "./node_modules/web3-core/lib/esm/index.js");
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};


/**
 * Similar to `Web3SubscriptionManager` but has a reference to the Contract that uses
 */
class ContractSubscriptionManager extends web3_core__WEBPACK_IMPORTED_MODULE_0__.Web3SubscriptionManager {
    /**
     *
     * @param - Web3SubscriptionManager
     * @param - parentContract
     *
     * @example
     * ```ts
     * const requestManager = new Web3RequestManager("ws://localhost:8545");
     * const contract = new Contract(...)
     * const subscriptionManager = new Web3SubscriptionManager(requestManager, {}, contract);
     * ```
     */
    constructor(self, parentContract) {
        super(self.requestManager, self.registeredSubscriptions);
        this.parentContract = parentContract;
    }
    /**
     * Will create a new subscription
     *
     * @param name - The subscription you want to subscribe to
     * @param args - Optional additional parameters, depending on the subscription type
     * @param returnFormat- ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.
     *
     * Will subscribe to a specific topic (note: name)
     * @returns The subscription object
     */
    subscribe(name_1, args_1) {
        const _super = Object.create(null, {
            subscribe: { get: () => super.subscribe }
        });
        return __awaiter(this, arguments, void 0, function* (name, args, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_RETURN_FORMAT) {
            return _super.subscribe.call(this, name, args !== null && args !== void 0 ? args : this.parentContract.options, returnFormat);
        });
    }
}
//# sourceMappingURL=contract-subscription-manager.js.map

/***/ }),

/***/ "./node_modules/web3-eth-contract/lib/esm/contract.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-eth-contract/lib/esm/contract.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Contract: () => (/* binding */ Contract)
/* harmony export */ });
/* harmony import */ var web3_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-core */ "./node_modules/web3-core/lib/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_eth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-eth */ "./node_modules/web3-eth/lib/esm/index.js");
/* harmony import */ var web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-eth-abi */ "./node_modules/web3-eth-abi/lib/esm/index.js");
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var _encoding_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./encoding.js */ "./node_modules/web3-eth-contract/lib/esm/encoding.js");
/* harmony import */ var _contract_log_subscription_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./contract_log_subscription.js */ "./node_modules/web3-eth-contract/lib/esm/contract_log_subscription.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-contract/lib/esm/utils.js");
/* harmony import */ var _contract_deployer_method_class_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./contract-deployer-method-class.js */ "./node_modules/web3-eth-contract/lib/esm/contract-deployer-method-class.js");
/* harmony import */ var _contract_subscription_manager_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./contract-subscription-manager.js */ "./node_modules/web3-eth-contract/lib/esm/contract-subscription-manager.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};










// eslint-disable-next-line import/no-cycle

// eslint-disable-next-line import/no-cycle

const contractSubscriptions = {
    logs: _contract_log_subscription_js__WEBPACK_IMPORTED_MODULE_8__.ContractLogsSubscription,
    newHeads: web3_eth__WEBPACK_IMPORTED_MODULE_2__.NewHeadsSubscription,
    newBlockHeaders: web3_eth__WEBPACK_IMPORTED_MODULE_2__.NewHeadsSubscription,
};
/**
 * The `web3.eth.Contract` makes it easy to interact with smart contracts on the ethereum blockchain.
 * For using contract package, first install Web3 package using: `npm i web3` or `yarn add web3` based on your package manager, after that contracts features can be used as mentioned in following snippet.
 * ```ts
 *
 * import { Web3 } from 'web3';
 *
 * const web3 = new Web3('https://127.0.0.1:4545');
 * const abi = [...] as const; // your contract ABI
 *
 * let contract = new web3.eth.Contract(abi,'0xdAC17F958D2ee523a2206206994597C13D831ec7');
 * await contract.methods.balanceOf('0xdAC17F958D2ee523a2206206994597C13D831ec7').call();
 * ```
 * For using individual package install `web3-eth-contract` and `web3-core` packages using: `npm i web3-eth-contract web3-core` or `yarn add web3-eth-contract web3-core`. This is more efficient approach for building lightweight applications.
 * ```ts
 *
 * import { Web3Context } from 'web3-core';
 * import { Contract } from 'web3-eth-contract';
 *
 * const abi = [...] as const; // your contract ABI
 *
 * let contract = new web3.eth.Contract(
 * 	abi,
 * 	'0xdAC17F958D2ee523a2206206994597C13D831ec7'
 * 	 new Web3Context('http://127.0.0.1:8545'));
 *
 * await contract.methods.balanceOf('0xdAC17F958D2ee523a2206206994597C13D831ec7').call();
 * ```
 * ## Generated Methods
 * Following methods are generated by web3.js contract object for each of contract functions by using its ABI.
 *
 * ### send
 * This is used to send a transaction to the smart contract and execute its method. Note this can alter the smart contract state.
 *
 * #### Parameters
 * options?: PayableTxOptions | NonPayableTxOptions
 *
 * #### Returns
 * [Web3PromiEvent](/api/web3/namespace/core#Web3PromiEvent) : Web3 Promi Event
 *
 * ```ts
 * // using the promise
 * myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'})
 * 	.then(function(receipt){
 * 		// other parts of code to use receipt
 * 	});
 *
 *
 * // using the event emitter
 * myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'})
 * 	.on('transactionHash', function(hash){
 * 		// ...
 * 	})
 * 	.on('confirmation', function(confirmationNumber, receipt){
 * 		// ...
 * 	})
 * 	.on('receipt', function(receipt){
 * 		// ...
 * 	})
 * 	.on('error', function(error, receipt) {
 * 		// ...
 * 	});
 *
 * ```
 *
 * ### call
 * This will execute smart contract method in the EVM without sending any transaction. Note calling cannot alter the smart contract state.
 *
 * #### Parameters
 * options?: PayableCallOptions | NonPayableCallOptions,
 * block?: BlockNumberOrTag,
 *
 * #### Returns
 * Promise : having results of call
 *
 * ```ts
 *
 * let myContract = new web3.eth.Contract(abi, address);
 *
 * myContract.methods.myFunction().call()
 * .then(console.log);
 *
 * ```
 * ### estimateGas
 * Returns the amount of gas consumed by executing the method in EVM without creating a new transaction on the blockchain. The returned amount can be used as a gas estimate for executing the transaction publicly. The actual gas used can be different when sending the transaction later, as the state of the smart contract can be different at that time.
 *
 * #### Parameters
 * options?: PayableCallOptions,
 * returnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,
 *
 * #### Returns
 * Promise: The gas amount estimated.
 *
 * ```ts
 * const estimatedGas = await contract.methods.approve('0xdAC17F958D2ee523a2206206994597C13D831ec7', 300)
 *     .estimateGas();
 *
 * ```
 *
 * ### encodeABI
 * Encodes the ABI for this method. The resulting hex string is 32-bit function signature hash plus the passed parameters in Solidity tightly packed format. This can be used to send a transaction, call a method, or pass it into another smart contract’s method as arguments. Set the data field on web3.eth.sendTransaction options as the encodeABI() result and it is the same as calling the contract method with contract.myMethod.send().
 *
 * Some use cases for encodeABI() include: preparing a smart contract transaction for a multisignature wallet, working with offline wallets and cold storage and creating transaction payload for complex smart contract proxy calls.
 *
 * #### Parameters
 * None
 *
 * #### Returns
 * String: The encoded ABI.
 *
 * ```ts
 * const encodedABI = await contract.methods.approve('0xdAC17F958D2ee523a2206206994597C13D831ec7', 300)
 *     .encodeABI();
 *
 * ```
 *

 * ### decodeMethodData
 * Decodes the given ABI-encoded data, revealing both the method name and the parameters used in the smart contract call.
 * This function reverses the encoding process happens at the method `encodeABI`.
 * It's particularly useful for debugging and understanding the interactions with and between smart contracts.
 *
 * #### Parameters
 *
 * - `data` **HexString**: The string of ABI-encoded data that needs to be decoded. This should include the method signature and the encoded parameters.
 *
 * #### Returns
 *
 * - **Object**: This object combines both the decoded parameters and the method name in a readable format. Specifically, the returned object contains:
 *   - `__method__` **String**: The name of the contract method, reconstructed from the ABI.
 *   - `__length__` **Number**: The number of parameters decoded.
 *   - Additional properties representing each parameter by name, as well as their position and values.
 *
 * #### Example
 *
 * Given an ABI-encoded string from a transaction, you can decode this data to identify the method called and the parameters passed.
 * Here's a simplified example:
 *
 *
 * ```typescript
 * const GreeterAbi = [
 * 	{
 * 		inputs: [
 * 			{
 * 				internalType: 'string',
 * 				name: '_greeting',
 * 				type: 'string',
 * 			},
 * 		],
 * 		name: 'setGreeting',
 * 		outputs: [],
 * 		type: 'function',
 * 	},
 * ];
 * const contract = new Contract(GreeterAbi); // Initialize with your contract's ABI
 *
 * // The ABI-encoded data string for "setGreeting('Hello World')"
 * const encodedData =
 * 	'0xa41368620000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000b48656c6c6f20576f726c64000000000000000000000000000000000000000000';
 *
 * try {
 * 	const decoded = contract.decodeMethodData(encodedData);
 * 	console.log(decoded.__method__); // Outputs: "setGreeting(string)"
 * 	console.log(decoded); // Outputs the detailed parameter data
 * 	// This tells that the method called was `setGreeting` with a single string parameter "Hello World":
 * 	// {
 * 	//   __method__: 'setGreeting(string)',
 * 	//   __length__: 1,
 * 	//   '0': 'Hello World',
 * 	//   _greeting: 'Hello World'
 * 	// }
 * } catch (error) {
 * 	console.error(error);
 * }
 * ```
 *

 * ### createAccessList
 * This will create an access list a method execution will access when executed in the EVM.
 * Note: You must specify a from address and gas if it’s not specified in options when instantiating parent contract object.
 *
 * #### Parameters
 * options?: PayableCallOptions | NonPayableCallOptions,
 * block?: BlockNumberOrTag,
 *
 * #### Returns
 * Promise: The generated access list for transaction.
 *
 * ```ts
 * const accessList = await contract.methods.approve('0xbEe634C21c16F05B03B704BaE071536121e6cFeA', 300)
 *     .createAccessList({
 *         from: "0x9992695e1053bb737d3cfae4743dcfc4b94f203d"
 *    });
 * ```
 *
 */
class Contract extends web3_core__WEBPACK_IMPORTED_MODULE_0__.Web3Context {
    get subscriptionManager() {
        return this._subscriptionManager;
    }
    constructor(jsonInterface, addressOrOptionsOrContext, optionsOrContextOrReturnFormat, contextOrReturnFormat, returnFormat) {
        var _a, _b, _c;
        // eslint-disable-next-line no-nested-ternary
        const options = (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.isContractInitOptions)(addressOrOptionsOrContext)
            ? addressOrOptionsOrContext
            : (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.isContractInitOptions)(optionsOrContextOrReturnFormat)
                ? optionsOrContextOrReturnFormat
                : undefined;
        let contractContext;
        if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_9__.isWeb3ContractContext)(addressOrOptionsOrContext)) {
            contractContext = addressOrOptionsOrContext;
        }
        else if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_9__.isWeb3ContractContext)(optionsOrContextOrReturnFormat)) {
            contractContext = optionsOrContextOrReturnFormat;
        }
        else {
            contractContext = contextOrReturnFormat;
        }
        let provider;
        if (typeof addressOrOptionsOrContext === 'object' &&
            'provider' in addressOrOptionsOrContext) {
            provider = addressOrOptionsOrContext.provider;
        }
        else if (typeof optionsOrContextOrReturnFormat === 'object' &&
            'provider' in optionsOrContextOrReturnFormat) {
            provider = optionsOrContextOrReturnFormat.provider;
        }
        else if (typeof contextOrReturnFormat === 'object' &&
            'provider' in contextOrReturnFormat) {
            provider = contextOrReturnFormat.provider;
        }
        else {
            provider = Contract.givenProvider;
        }
        super(Object.assign(Object.assign({}, contractContext), { provider, registeredSubscriptions: contractSubscriptions }));
        /**
         * Set to true if you want contracts' defaults to sync with global defaults.
         */
        this.syncWithContext = false;
        this._functions = {};
        this._subscriptionManager = new _contract_subscription_manager_js__WEBPACK_IMPORTED_MODULE_11__.ContractSubscriptionManager(super.subscriptionManager, this);
        // Init protected properties
        if (contractContext === null || contractContext === void 0 ? void 0 : contractContext.wallet) {
            this._wallet = contractContext.wallet;
        }
        if (contractContext === null || contractContext === void 0 ? void 0 : contractContext.accountProvider) {
            this._accountProvider = contractContext.accountProvider;
        }
        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_6__.isNullish)(options) &&
            !(0,web3_validator__WEBPACK_IMPORTED_MODULE_6__.isNullish)(options.data) &&
            !(0,web3_validator__WEBPACK_IMPORTED_MODULE_6__.isNullish)(options.input) &&
            this.config.contractDataInputFill !== 'both')
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.ContractTransactionDataAndInputError({
                data: options.data,
                input: options.input,
            });
        this._overloadedMethodAbis = new Map();
        // eslint-disable-next-line no-nested-ternary
        const returnDataFormat = (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.isDataFormat)(contextOrReturnFormat)
            ? contextOrReturnFormat
            : (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.isDataFormat)(optionsOrContextOrReturnFormat)
                ? optionsOrContextOrReturnFormat
                : returnFormat !== null && returnFormat !== void 0 ? returnFormat : this.defaultReturnFormat;
        const address = typeof addressOrOptionsOrContext === 'string' ? addressOrOptionsOrContext : undefined;
        this.config.contractDataInputFill =
            (_a = options === null || options === void 0 ? void 0 : options.dataInputFill) !== null && _a !== void 0 ? _a : this.config.contractDataInputFill;
        this._parseAndSetJsonInterface(jsonInterface, returnDataFormat);
        if (this.defaultReturnFormat !== returnDataFormat) {
            this.defaultReturnFormat = returnDataFormat;
        }
        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_6__.isNullish)(address)) {
            this._parseAndSetAddress(address, returnDataFormat);
        }
        this.options = {
            address,
            jsonInterface: this._jsonInterface,
            gas: (_b = options === null || options === void 0 ? void 0 : options.gas) !== null && _b !== void 0 ? _b : options === null || options === void 0 ? void 0 : options.gasLimit,
            gasPrice: options === null || options === void 0 ? void 0 : options.gasPrice,
            from: options === null || options === void 0 ? void 0 : options.from,
            input: options === null || options === void 0 ? void 0 : options.input,
            data: options === null || options === void 0 ? void 0 : options.data,
        };
        this.syncWithContext = (_c = options === null || options === void 0 ? void 0 : options.syncWithContext) !== null && _c !== void 0 ? _c : false;
        if (contractContext instanceof web3_core__WEBPACK_IMPORTED_MODULE_0__.Web3Context) {
            this.subscribeToContextEvents(contractContext);
        }
        Object.defineProperty(this.options, 'address', {
            set: (value) => this._parseAndSetAddress(value, returnDataFormat),
            get: () => this._address,
        });
        Object.defineProperty(this.options, 'jsonInterface', {
            set: (value) => this._parseAndSetJsonInterface(value, returnDataFormat),
            get: () => this._jsonInterface,
        });
        if (contractContext instanceof web3_core__WEBPACK_IMPORTED_MODULE_0__.Web3Context) {
            contractContext.on(web3_core__WEBPACK_IMPORTED_MODULE_0__.Web3ConfigEvent.CONFIG_CHANGE, event => {
                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
                this.setConfig({ [event.name]: event.newValue });
            });
        }
    }
    setTransactionMiddleware(transactionMiddleware) {
        this.transactionMiddleware = transactionMiddleware;
    }
    getTransactionMiddleware() {
        return this.transactionMiddleware;
    }
    /**
     * Subscribe to an event.
     *
     * ```ts
     * await myContract.events.MyEvent([options])
     * ```
     *
     * There is a special event `allEvents` that can be used to subscribe all events.
     *
     * ```ts
     * await myContract.events.allEvents([options])
     * ```
     *
     * @returns - When individual event is accessed will returns {@link ContractBoundEvent} object
     */
    get events() {
        return this._events;
    }
    /**
     * Creates a transaction object for that method, which then can be `called`, `send`, `estimated`, `createAccessList` , or `ABI encoded`.
     *
     * The methods of this smart contract are available through:
     *
     * The name: `myContract.methods.myMethod(123)`
     * The name with parameters: `myContract.methods['myMethod(uint256)'](123)`
     * The signature `myContract.methods['0x58cf5f10'](123)`
     *
     * This allows calling functions with same name but different parameters from the JavaScript contract object.
     *
     * \> The method signature does not provide a type safe interface, so we recommend to use method `name` instead.
     *
     * ```ts
     * // calling a method
     * const result = await myContract.methods.myMethod(123).call({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'});
     *
     * // or sending and using a promise
     * const receipt = await myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'});
     *
     * // or sending and using the events
     * const sendObject = myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'});
     * sendObject.on('transactionHash', function(hash){
     *   ...
     * });
     * sendObject.on('receipt', function(receipt){
     *   ...
     * });
     * sendObject.on('confirmation', function(confirmationNumber, receipt){
     *   ...
     * });
     * sendObject.on('error', function(error, receipt) {
     *   ...
     * });
     * ```
     *
     * @returns - Either returns {@link PayableMethodObject} or {@link NonPayableMethodObject} based on the definitions of the ABI of that contract.
     */
    get methods() {
        return this._methods;
    }
    /**
     * Clones the current contract instance. This doesn't deploy contract on blockchain and only creates a local clone.
     *
     * @returns - The new contract instance.
     *
     * ```ts
     * const contract1 = new web3.eth.Contract(abi, address, {gasPrice: '12345678', from: fromAddress});
     *
     * const contract2 = contract1.clone();
     * contract2.options.address = '0xdAC17F958D2ee523a2206206994597C13D831ec7';
     *
     * (contract1.options.address !== contract2.options.address);
     * > true
     * ```
     */
    clone() {
        let newContract;
        if (this.options.address) {
            newContract = new Contract([...this._jsonInterface, ...this._errorsInterface], this.options.address, {
                gas: this.options.gas,
                gasPrice: this.options.gasPrice,
                from: this.options.from,
                input: this.options.input,
                data: this.options.data,
                provider: this.currentProvider,
                syncWithContext: this.syncWithContext,
                dataInputFill: this.config.contractDataInputFill,
            }, this.getContextObject());
        }
        else {
            newContract = new Contract([...this._jsonInterface, ...this._errorsInterface], {
                gas: this.options.gas,
                gasPrice: this.options.gasPrice,
                from: this.options.from,
                input: this.options.input,
                data: this.options.data,
                provider: this.currentProvider,
                syncWithContext: this.syncWithContext,
                dataInputFill: this.config.contractDataInputFill,
            }, this.getContextObject());
        }
        if (this.context)
            newContract.subscribeToContextEvents(this.context);
        return newContract;
    }
    /**
     * Call this function to deploy the contract to the blockchain. After successful deployment the promise will resolve with a new contract instance.
     *
     * ```ts
     * myContract.deploy({
     *   input: '0x12345...', // data keyword can be used, too.
     *   arguments: [123, 'My String']
     * })
     * .send({
     *   from: '0x1234567890123456789012345678901234567891',
     *   gas: 1500000,
     *   gasPrice: '30000000000000'
     * }, function(error, transactionHash){ ... })
     * .on('error', function(error){ ... })
     * .on('transactionHash', function(transactionHash){ ... })
     * .on('receipt', function(receipt){
     *  console.log(receipt.contractAddress) // contains the new contract address
     * })
     * .on('confirmation', function(confirmationNumber, receipt){ ... })
     * .then(function(newContractInstance){
     *   console.log(newContractInstance.options.address) // instance with the new contract address
     * });
     *
     *
     * // When the data is already set as an option to the contract itself
     * myContract.options.data = '0x12345...';
     *
     * myContract.deploy({
     *   arguments: [123, 'My String']
     * })
     * .send({
     *   from: '0x1234567890123456789012345678901234567891',
     *   gas: 1500000,
     *   gasPrice: '30000000000000'
     * })
     * .then(function(newContractInstance){
     *   console.log(newContractInstance.options.address) // instance with the new contract address
     * });
     *
     *
     * // Simply encoding
     * myContract.deploy({
     *   input: '0x12345...',
     *   arguments: [123, 'My String']
     * })
     * .encodeABI();
     * > '0x12345...0000012345678765432'
     *
     *
     * // decoding
     * myContract.deploy({
     *   input: '0x12345...',
     *   // arguments: [123, 'My Greeting'] if you just need to decode the data, you can skip the arguments
     * })
     * .decodeData('0x12345...0000012345678765432');
     * > {
     *      __method__: 'constructor',
     *      __length__: 2,
     *      '0': '123',
     *      _id: '123',
     *      '1': 'My Greeting',
     *      _greeting: 'My Greeting',
     *   }
     *
     *
     * // Gas estimation
     * myContract.deploy({
     *   input: '0x12345...',
     *   arguments: [123, 'My String']
     * })
     * .estimateGas(function(err, gas){
     *   console.log(gas);
     * });
     * ```
     *
     * @returns - The transaction object
     */
    deploy(deployOptions) {
        return new _contract_deployer_method_class_js__WEBPACK_IMPORTED_MODULE_10__.DeployerMethodClass(this, deployOptions);
    }
    getPastEvents(param1, param2, param3) {
        return __awaiter(this, void 0, void 0, function* () {
            var _a;
            const eventName = typeof param1 === 'string' ? param1 : web3_eth__WEBPACK_IMPORTED_MODULE_2__.ALL_EVENTS;
            const options = 
            // eslint-disable-next-line no-nested-ternary
            typeof param1 !== 'string' && !(0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.isDataFormat)(param1)
                ? param1
                : !(0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.isDataFormat)(param2)
                    ? param2
                    : {};
            // eslint-disable-next-line no-nested-ternary
            const returnFormat = (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.isDataFormat)(param1)
                ? param1
                : (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.isDataFormat)(param2)
                    ? param2
                    : param3 !== null && param3 !== void 0 ? param3 : this.defaultReturnFormat;
            const abi = eventName === 'allEvents' || eventName === web3_eth__WEBPACK_IMPORTED_MODULE_2__.ALL_EVENTS
                ? web3_eth__WEBPACK_IMPORTED_MODULE_2__.ALL_EVENTS_ABI
                : this._jsonInterface.find(j => 'name' in j && j.name === eventName);
            if (!abi) {
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.Web3ContractError(`Event ${String(eventName)} not found.`);
            }
            const { fromBlock, toBlock, topics, address } = (0,_encoding_js__WEBPACK_IMPORTED_MODULE_7__.encodeEventABI)(this.options, abi, options !== null && options !== void 0 ? options : {});
            const logs = yield (0,web3_eth__WEBPACK_IMPORTED_MODULE_2__.getLogs)(this, { fromBlock, toBlock, topics, address }, returnFormat);
            const decodedLogs = logs
                ? logs.map(log => typeof log === 'string'
                    ? log
                    : (0,web3_eth__WEBPACK_IMPORTED_MODULE_2__.decodeEventABI)(abi, log, this._jsonInterface, returnFormat))
                : [];
            const filter = (_a = options === null || options === void 0 ? void 0 : options.filter) !== null && _a !== void 0 ? _a : {};
            const filterKeys = Object.keys(filter);
            if (filterKeys.length > 0) {
                return decodedLogs.filter(log => {
                    if (typeof log === 'string')
                        return true;
                    return filterKeys.every((key) => {
                        var _a;
                        if (Array.isArray(filter[key])) {
                            return filter[key].some((v) => String(log.returnValues[key]).toUpperCase() ===
                                String(v).toUpperCase());
                        }
                        const inputAbi = (_a = abi.inputs) === null || _a === void 0 ? void 0 : _a.filter(input => input.name === key)[0];
                        if ((inputAbi === null || inputAbi === void 0 ? void 0 : inputAbi.indexed) && inputAbi.type === 'string') {
                            const hashedIndexedString = (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.keccak256)(filter[key]);
                            if (hashedIndexedString === String(log.returnValues[key]))
                                return true;
                        }
                        return (String(log.returnValues[key]).toUpperCase() ===
                            String(filter[key]).toUpperCase());
                    });
                });
            }
            return decodedLogs;
        });
    }
    _parseAndSetAddress(value, returnFormat = this.defaultReturnFormat) {
        this._address = value
            ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.toChecksumAddress)((0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.format)({ format: 'address' }, value, returnFormat))
            : value;
    }
    decodeMethodData(data) {
        const methodSignature = data.slice(0, 10);
        const functionsAbis = this._jsonInterface.filter(j => j.type !== 'error');
        const abi = functionsAbis.find(a => methodSignature === (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.encodeFunctionSignature)((0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.jsonInterfaceMethodToString)(a)));
        if (!abi) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.Web3ContractError(`The ABI for the provided method signature ${methodSignature} was not found.`);
        }
        return (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.decodeFunctionCall)(abi, data);
    }
    _parseAndSetJsonInterface(abis, returnFormat = this.defaultReturnFormat) {
        var _a, _b;
        this._functions = {};
        this._methods = {};
        this._events = {};
        let result = [];
        const functionsAbi = abis.filter(abi => abi.type !== 'error');
        const errorsAbi = abis.filter(abi => (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.isAbiErrorFragment)(abi));
        for (const a of functionsAbi) {
            const abi = Object.assign(Object.assign({}, a), { signature: '' });
            if ((0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.isAbiFunctionFragment)(abi)) {
                const methodName = (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.jsonInterfaceMethodToString)(abi);
                const methodSignature = (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.encodeFunctionSignature)(methodName);
                abi.methodNameWithInputs = methodName;
                abi.signature = methodSignature;
                // make constant and payable backwards compatible
                abi.constant =
                    abi.stateMutability === 'view' ||
                        abi.stateMutability === 'pure' ||
                        abi.constant;
                abi.payable = abi.stateMutability === 'payable' || abi.payable;
                this._overloadedMethodAbis.set(abi.name, [
                    ...((_a = this._overloadedMethodAbis.get(abi.name)) !== null && _a !== void 0 ? _a : []),
                    abi,
                ]);
                const abiFragment = (_b = this._overloadedMethodAbis.get(abi.name)) !== null && _b !== void 0 ? _b : [];
                const contractMethod = this._createContractMethod(abiFragment, errorsAbi);
                const exactContractMethod = this._createContractMethod(abiFragment, errorsAbi, true);
                this._functions[methodName] = {
                    signature: methodSignature,
                    method: exactContractMethod,
                };
                // We don't know a particular type of the Abi method so can't type check
                this._methods[abi.name] =
                    contractMethod;
                // We don't know a particular type of the Abi method so can't type check
                this._methods[methodName] =
                    exactContractMethod;
                // We don't know a particular type of the Abi method so can't type check
                this._methods[methodSignature] =
                    exactContractMethod;
            }
            else if ((0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.isAbiEventFragment)(abi)) {
                const eventName = (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.jsonInterfaceMethodToString)(abi);
                const eventSignature = (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.encodeEventSignature)(eventName);
                const event = this._createContractEvent(abi, returnFormat);
                abi.signature = eventSignature;
                if (!(eventName in this._events) || abi.name === 'bound') {
                    // It's a private type and we don't want to expose it and no need to check
                    this._events[eventName] = event;
                }
                // It's a private type and we don't want to expose it and no need to check
                this._events[abi.name] = event;
                // It's a private type and we don't want to expose it and no need to check
                this._events[eventSignature] = event;
            }
            result = [...result, abi];
        }
        this._events.allEvents = this._createContractEvent(web3_eth__WEBPACK_IMPORTED_MODULE_2__.ALL_EVENTS_ABI, returnFormat);
        this._jsonInterface = [...result];
        this._errorsInterface = errorsAbi;
    }
    // eslint-disable-next-line class-methods-use-this
    _getAbiParams(abi, params) {
        var _a;
        try {
            return web3_validator__WEBPACK_IMPORTED_MODULE_6__.utils.transformJsonDataToAbiFormat((_a = abi.inputs) !== null && _a !== void 0 ? _a : [], params);
        }
        catch (error) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.Web3ContractError(`Invalid parameters for method ${abi.name}: ${error.message}`);
        }
    }
    _createContractMethod(abiArr, errorsAbis, exact = false) {
        const abi = abiArr[abiArr.length - 1];
        return (...params) => {
            var _a, _b, _c;
            let abiParams;
            const abis = (_b = (exact
                ? (_a = this._overloadedMethodAbis
                    .get(abi.name)) === null || _a === void 0 ? void 0 : _a.filter(_abi => _abi.signature === abi.signature)
                : this._overloadedMethodAbis.get(abi.name))) !== null && _b !== void 0 ? _b : [];
            let methodAbi = abis[0];
            const internalErrorsAbis = errorsAbis;
            const arrayOfAbis = abis.filter(_abi => { var _a; return ((_a = _abi.inputs) !== null && _a !== void 0 ? _a : []).length === params.length; });
            if (abis.length === 1 || arrayOfAbis.length === 0) {
                abiParams = this._getAbiParams(methodAbi, params);
                web3_validator__WEBPACK_IMPORTED_MODULE_6__.validator.validate((_c = abi.inputs) !== null && _c !== void 0 ? _c : [], abiParams);
            }
            else {
                const errors = [];
                // all the methods that have is valid for the given inputs
                const applicableMethodAbi = [];
                for (const _abi of arrayOfAbis) {
                    try {
                        abiParams = this._getAbiParams(_abi, params);
                        web3_validator__WEBPACK_IMPORTED_MODULE_6__.validator.validate(_abi.inputs, abiParams);
                        applicableMethodAbi.push(_abi);
                    }
                    catch (e) {
                        errors.push(e);
                    }
                }
                if (applicableMethodAbi.length === 1) {
                    [methodAbi] = applicableMethodAbi; // take the first item that is the only item in the array
                }
                else if (applicableMethodAbi.length > 1) {
                    [methodAbi] = applicableMethodAbi; // take the first item in the array
                    console.warn(`Multiple methods found that is compatible with the given inputs.\n\tFound ${applicableMethodAbi.length} compatible methods: ${JSON.stringify(applicableMethodAbi.map(m => `${m.methodNameWithInputs} (signature: ${m.signature})`))} \n\tThe first one will be used: ${methodAbi.methodNameWithInputs}`);
                    // TODO: 5.x Should throw a new error with the list of methods found.
                    // Related issue: https://github.com/web3/web3.js/issues/6923
                    // This is in order to provide an error message when there is more than one method found that fits the inputs.
                    // To do that, replace the pervious line of code with something like the following line:
                    // throw new Web3ValidatorError({ message: 'Multiple methods found',  ... list of applicable methods }));
                }
                if (errors.length === arrayOfAbis.length) {
                    throw new web3_validator__WEBPACK_IMPORTED_MODULE_6__.Web3ValidatorError(errors);
                }
            }
            const methods = {
                arguments: abiParams,
                call: (options, block) => __awaiter(this, void 0, void 0, function* () {
                    return this._contractMethodCall(methodAbi, abiParams, internalErrorsAbis, options, block);
                }),
                send: (options) => this._contractMethodSend(methodAbi, abiParams, internalErrorsAbis, options),
                populateTransaction: (options, contractOptions) => {
                    var _a, _b;
                    let modifiedContractOptions = contractOptions !== null && contractOptions !== void 0 ? contractOptions : this.options;
                    modifiedContractOptions = Object.assign(Object.assign({}, modifiedContractOptions), { input: undefined, from: (_b = (_a = modifiedContractOptions === null || modifiedContractOptions === void 0 ? void 0 : modifiedContractOptions.from) !== null && _a !== void 0 ? _a : this.defaultAccount) !== null && _b !== void 0 ? _b : undefined });
                    const tx = (0,_utils_js__WEBPACK_IMPORTED_MODULE_9__.getSendTxParams)({
                        abi,
                        params,
                        options: Object.assign(Object.assign({}, options), { dataInputFill: this.config.contractDataInputFill }),
                        contractOptions: modifiedContractOptions,
                    });
                    // @ts-expect-error remove unnecessary field
                    if (tx.dataInputFill) {
                        // @ts-expect-error remove unnecessary field
                        delete tx.dataInputFill;
                    }
                    return tx;
                },
                estimateGas: (options_1, ...args_1) => __awaiter(this, [options_1, ...args_1], void 0, function* (options, returnFormat = this
                    .defaultReturnFormat) {
                    return this.contractMethodEstimateGas({
                        abi: methodAbi,
                        params: abiParams,
                        returnFormat,
                        options,
                    });
                }),
                encodeABI: () => (0,_encoding_js__WEBPACK_IMPORTED_MODULE_7__.encodeMethodABI)(methodAbi, abiParams),
                decodeData: (data) => (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.decodeFunctionCall)(methodAbi, data),
                createAccessList: (options, block) => __awaiter(this, void 0, void 0, function* () {
                    return this._contractMethodCreateAccessList(methodAbi, abiParams, internalErrorsAbis, options, block);
                }),
            };
            if (methodAbi.stateMutability === 'payable') {
                return methods;
            }
            return methods;
        };
    }
    _contractMethodCall(abi, params, errorsAbi, options, block) {
        return __awaiter(this, void 0, void 0, function* () {
            var _a;
            const tx = (0,_utils_js__WEBPACK_IMPORTED_MODULE_9__.getEthTxCallParams)({
                abi,
                params,
                options: Object.assign(Object.assign({}, options), { dataInputFill: this.config.contractDataInputFill }),
                contractOptions: Object.assign(Object.assign({}, this.options), { from: (_a = this.options.from) !== null && _a !== void 0 ? _a : this.config.defaultAccount }),
            });
            try {
                const result = yield (0,web3_eth__WEBPACK_IMPORTED_MODULE_2__.call)(this, tx, block, this.defaultReturnFormat);
                return (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.decodeFunctionReturn)(abi, result);
            }
            catch (error) {
                if (error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_1__.ContractExecutionError) {
                    // this will parse the error data by trying to decode the ABI error inputs according to EIP-838
                    (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.decodeContractErrorData)(errorsAbi, error.cause);
                }
                throw error;
            }
        });
    }
    _contractMethodCreateAccessList(abi, params, errorsAbi, options, block) {
        return __awaiter(this, void 0, void 0, function* () {
            var _a;
            const tx = (0,_utils_js__WEBPACK_IMPORTED_MODULE_9__.getCreateAccessListParams)({
                abi,
                params,
                options: Object.assign(Object.assign({}, options), { dataInputFill: this.config.contractDataInputFill }),
                contractOptions: Object.assign(Object.assign({}, this.options), { from: (_a = this.options.from) !== null && _a !== void 0 ? _a : this.config.defaultAccount }),
            });
            try {
                return (0,web3_eth__WEBPACK_IMPORTED_MODULE_2__.createAccessList)(this, tx, block, this.defaultReturnFormat);
            }
            catch (error) {
                if (error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_1__.ContractExecutionError) {
                    // this will parse the error data by trying to decode the ABI error inputs according to EIP-838
                    (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.decodeContractErrorData)(errorsAbi, error.cause);
                }
                throw error;
            }
        });
    }
    _contractMethodSend(abi, params, errorsAbi, options, contractOptions) {
        var _a, _b;
        let modifiedContractOptions = contractOptions !== null && contractOptions !== void 0 ? contractOptions : this.options;
        modifiedContractOptions = Object.assign(Object.assign({}, modifiedContractOptions), { input: undefined, from: (_b = (_a = modifiedContractOptions.from) !== null && _a !== void 0 ? _a : this.defaultAccount) !== null && _b !== void 0 ? _b : undefined });
        const tx = (0,_utils_js__WEBPACK_IMPORTED_MODULE_9__.getSendTxParams)({
            abi,
            params,
            options: Object.assign(Object.assign({}, options), { dataInputFill: this.config.contractDataInputFill }),
            contractOptions: modifiedContractOptions,
        });
        const transactionToSend = (0,web3_validator__WEBPACK_IMPORTED_MODULE_6__.isNullish)(this.transactionMiddleware)
            ? (0,web3_eth__WEBPACK_IMPORTED_MODULE_2__.sendTransaction)(this, tx, this.defaultReturnFormat, {
                // TODO Should make this configurable by the user
                checkRevertBeforeSending: false,
                contractAbi: this._jsonInterface, // explicitly not passing middleware so if some one is using old eth package it will not break
            })
            : (0,web3_eth__WEBPACK_IMPORTED_MODULE_2__.sendTransaction)(this, tx, this.defaultReturnFormat, {
                // TODO Should make this configurable by the user
                checkRevertBeforeSending: false,
                contractAbi: this._jsonInterface,
            }, this.transactionMiddleware);
        // eslint-disable-next-line no-void
        void transactionToSend.on('error', (error) => {
            if (error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_1__.ContractExecutionError) {
                // this will parse the error data by trying to decode the ABI error inputs according to EIP-838
                (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.decodeContractErrorData)(errorsAbi, error.cause);
            }
        });
        return transactionToSend;
    }
    contractMethodEstimateGas(_a) {
        return __awaiter(this, arguments, void 0, function* ({ abi, params, returnFormat, options, contractOptions, }) {
            const tx = (0,_utils_js__WEBPACK_IMPORTED_MODULE_9__.getEstimateGasParams)({
                abi,
                params,
                options: Object.assign(Object.assign({}, options), { dataInputFill: this.config.contractDataInputFill }),
                contractOptions: contractOptions !== null && contractOptions !== void 0 ? contractOptions : this.options,
            });
            return (0,web3_eth__WEBPACK_IMPORTED_MODULE_2__.estimateGas)(this, tx, web3_types__WEBPACK_IMPORTED_MODULE_4__.BlockTags.LATEST, returnFormat !== null && returnFormat !== void 0 ? returnFormat : this.defaultReturnFormat);
        });
    }
    // eslint-disable-next-line class-methods-use-this
    _createContractEvent(abi, returnFormat = this.defaultReturnFormat) {
        return (...params) => {
            var _a;
            const { topics, fromBlock } = (0,_encoding_js__WEBPACK_IMPORTED_MODULE_7__.encodeEventABI)(this.options, abi, params[0]);
            const sub = new _contract_log_subscription_js__WEBPACK_IMPORTED_MODULE_8__.ContractLogsSubscription({
                address: this.options.address,
                topics,
                abi,
                jsonInterface: this._jsonInterface,
            }, {
                subscriptionManager: this.subscriptionManager,
                returnFormat,
            });
            if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_6__.isNullish)(fromBlock)) {
                // emit past events when fromBlock is defined
                this.getPastEvents(abi.name, { fromBlock, topics }, returnFormat)
                    .then(logs => {
                    if (logs) {
                        logs.forEach(log => sub.emit('data', log));
                    }
                })
                    .catch((error) => {
                    sub.emit('error', new web3_errors__WEBPACK_IMPORTED_MODULE_1__.SubscriptionError('Failed to get past events.', error));
                });
            }
            (_a = this.subscriptionManager) === null || _a === void 0 ? void 0 : _a.addSubscription(sub).catch((error) => {
                sub.emit('error', new web3_errors__WEBPACK_IMPORTED_MODULE_1__.SubscriptionError('Failed to subscribe.', error));
            });
            return sub;
        };
    }
    subscribeToContextEvents(context) {
        // eslint-disable-next-line @typescript-eslint/no-this-alias
        const contractThis = this;
        this.context = context;
        if (contractThis.syncWithContext) {
            context.on(web3_core__WEBPACK_IMPORTED_MODULE_0__.Web3ConfigEvent.CONFIG_CHANGE, event => {
                contractThis.setConfig({ [event.name]: event.newValue });
            });
        }
    }
}
//# sourceMappingURL=contract.js.map

/***/ }),

/***/ "./node_modules/web3-eth-contract/lib/esm/contract_log_subscription.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/web3-eth-contract/lib/esm/contract_log_subscription.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ContractLogsSubscription: () => (/* binding */ ContractLogsSubscription),
/* harmony export */   LogsSubscription: () => (/* binding */ LogsSubscription)
/* harmony export */ });
/* harmony import */ var web3_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-core */ "./node_modules/web3-core/lib/esm/index.js");
/* harmony import */ var web3_eth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-eth */ "./node_modules/web3-eth/lib/esm/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/


/**
 * ContractLogsSubscription to be used to subscribe to events logs.
 *
 * Following events are supported and can be accessed with either {@link ContractLogsSubscription.once} or ${@link ContractLogsSubscription.on} methods.
 *
 * - **connected**: Emitted when the subscription is connected.
 * - **data**: Fires on each incoming event with the event object as argument.
 * - **changed**: Fires on each event which was removed from the blockchain. The event will have the additional property `removed: true`.
 * - **error**: Fires on each error.
 *
 * ```ts
 * const subscription = await myContract.events.MyEvent({
 *   filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'}, // Using an array means OR: e.g. 20 or 23
 *   fromBlock: 0
 * });
 *
 * subscription.on("connected", function(subscriptionId){
 *   console.log(subscriptionId);
 * });
 *
 * subscription.on('data', function(event){
 *   console.log(event); // same results as the optional callback above
 * });
 *
 * subscription.on('changed', function(event){
 *   // remove event from local database
 * })
 *
 * subscription.on('error', function(error, receipt) { // If the transaction was rejected by the network with a receipt, the second parameter will be the receipt.
 *   ...
 * });
 *
 * // event output example
 * > {
 *   returnValues: {
 *       myIndexedParam: 20,
 *       myOtherIndexedParam: '0x123456789...',
 *       myNonIndexParam: 'My String'
 *   },
 *   raw: {
 *       data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',
 *       topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']
 *   },
 *   event: 'MyEvent',
 *   signature: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',
 *   logIndex: 0,
 *   transactionIndex: 0,
 *   transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',
 *   blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',
 *   blockNumber: 1234,
 *   address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'
 * }
 * ```
 */
class ContractLogsSubscription extends web3_core__WEBPACK_IMPORTED_MODULE_0__.Web3Subscription {
    constructor(args, options) {
        super(args, options);
        this.address = args.address;
        this.topics = args.topics;
        this.abi = args.abi;
        this.jsonInterface = args.jsonInterface;
    }
    _buildSubscriptionParams() {
        return ['logs', { address: this.address, topics: this.topics }];
    }
    formatSubscriptionResult(data) {
        return (0,web3_eth__WEBPACK_IMPORTED_MODULE_1__.decodeEventABI)(this.abi, data, this.jsonInterface, super.returnFormat);
    }
}
/**
 * @deprecated LogsSubscription is renamed to ContractLogsSubscription in this package to not be confused with LogsSubscription at 'web3-eth'.
 */
const LogsSubscription = ContractLogsSubscription;
//# sourceMappingURL=contract_log_subscription.js.map

/***/ }),

/***/ "./node_modules/web3-eth-contract/lib/esm/encoding.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-eth-contract/lib/esm/encoding.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decodeEventABI: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_3__.decodeEventABI),
/* harmony export */   decodeMethodParams: () => (/* binding */ decodeMethodParams),
/* harmony export */   decodeMethodReturn: () => (/* binding */ decodeMethodReturn),
/* harmony export */   encodeEventABI: () => (/* binding */ encodeEventABI),
/* harmony export */   encodeMethodABI: () => (/* binding */ encodeMethodABI)
/* harmony export */ });
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/* harmony import */ var web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-eth-abi */ "./node_modules/web3-eth-abi/lib/esm/index.js");
/* harmony import */ var web3_eth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-eth */ "./node_modules/web3-eth/lib/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/






const encodeEventABI = ({ address }, event, options) => {
    var _a, _b;
    const topics = options === null || options === void 0 ? void 0 : options.topics;
    const filter = (_a = options === null || options === void 0 ? void 0 : options.filter) !== null && _a !== void 0 ? _a : {};
    const opts = {};
    if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.isNullish)(options === null || options === void 0 ? void 0 : options.fromBlock)) {
        opts.fromBlock = (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)(web3_eth__WEBPACK_IMPORTED_MODULE_3__.blockSchema.properties.number, options === null || options === void 0 ? void 0 : options.fromBlock, {
            number: web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_NUMBER.HEX,
            bytes: web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_BYTES.HEX,
        });
    }
    if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.isNullish)(options === null || options === void 0 ? void 0 : options.toBlock)) {
        opts.toBlock = (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)(web3_eth__WEBPACK_IMPORTED_MODULE_3__.blockSchema.properties.number, options === null || options === void 0 ? void 0 : options.toBlock, {
            number: web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_NUMBER.HEX,
            bytes: web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_BYTES.HEX,
        });
    }
    if (topics && Array.isArray(topics)) {
        opts.topics = [...topics];
    }
    else {
        opts.topics = [];
        // add event signature
        if (event && !event.anonymous && ![web3_eth__WEBPACK_IMPORTED_MODULE_3__.ALL_EVENTS, 'allEvents'].includes(event.name)) {
            opts.topics.push((_b = event.signature) !== null && _b !== void 0 ? _b : (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__.encodeEventSignature)((0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__.jsonInterfaceMethodToString)(event)));
        }
        // add event topics (indexed arguments)
        if (![web3_eth__WEBPACK_IMPORTED_MODULE_3__.ALL_EVENTS, 'allEvents'].includes(event.name) && event.inputs) {
            for (const input of event.inputs) {
                if (!input.indexed) {
                    continue;
                }
                const value = filter[input.name];
                if (!value) {
                    // eslint-disable-next-line no-null/no-null
                    opts.topics.push(null);
                    continue;
                }
                // TODO: https://github.com/ethereum/web3.js/issues/344
                // TODO: deal properly with components
                if (Array.isArray(value)) {
                    opts.topics.push(value.map(v => (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__.encodeParameter)(input.type, v)));
                }
                else if (input.type === 'string') {
                    opts.topics.push((0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.keccak256)(value));
                }
                else {
                    opts.topics.push((0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__.encodeParameter)(input.type, value));
                }
            }
        }
    }
    if (!opts.topics.length)
        delete opts.topics;
    if (address) {
        opts.address = address.toLowerCase();
    }
    return opts;
};
const encodeMethodABI = (abi, args, deployData) => {
    const inputLength = Array.isArray(abi.inputs) ? abi.inputs.length : 0;
    if (abi.inputs && inputLength !== args.length) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_4__.Web3ContractError(`The number of arguments is not matching the methods required number. You need to pass ${inputLength} arguments.`);
    }
    let params;
    if (abi.inputs) {
        params = (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__.encodeParameters)(Array.isArray(abi.inputs) ? abi.inputs : [], args).replace('0x', '');
    }
    else {
        params = (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__.inferTypesAndEncodeParameters)(args).replace('0x', '');
    }
    if ((0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__.isAbiConstructorFragment)(abi)) {
        if (!deployData)
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_4__.Web3ContractError('The contract has no contract data option set. This is necessary to append the constructor parameters.');
        if (!deployData.startsWith('0x')) {
            return `0x${deployData}${params}`;
        }
        return `${deployData}${params}`;
    }
    return `${(0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__.encodeFunctionSignature)(abi)}${params}`;
};
/** @deprecated import `decodeFunctionCall` from ''web3-eth-abi' instead. */
const decodeMethodParams = web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__.decodeFunctionCall;
/** @deprecated import `decodeFunctionReturn` from ''web3-eth-abi' instead. */
const decodeMethodReturn = web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__.decodeFunctionReturn;
//# sourceMappingURL=encoding.js.map

/***/ }),

/***/ "./node_modules/web3-eth-contract/lib/esm/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/web3-eth-contract/lib/esm/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Contract: () => (/* reexport safe */ _contract_js__WEBPACK_IMPORTED_MODULE_0__.Contract),
/* harmony export */   ContractLogsSubscription: () => (/* reexport safe */ _contract_log_subscription_js__WEBPACK_IMPORTED_MODULE_3__.ContractLogsSubscription),
/* harmony export */   DeployerMethodClass: () => (/* reexport safe */ _contract_deployer_method_class_js__WEBPACK_IMPORTED_MODULE_2__.DeployerMethodClass),
/* harmony export */   LogsSubscription: () => (/* reexport safe */ _contract_log_subscription_js__WEBPACK_IMPORTED_MODULE_3__.LogsSubscription),
/* harmony export */   create2ContractAddress: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.create2ContractAddress),
/* harmony export */   createContractAddress: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.createContractAddress),
/* harmony export */   decodeEventABI: () => (/* reexport safe */ _encoding_js__WEBPACK_IMPORTED_MODULE_1__.decodeEventABI),
/* harmony export */   decodeMethodParams: () => (/* reexport safe */ _encoding_js__WEBPACK_IMPORTED_MODULE_1__.decodeMethodParams),
/* harmony export */   decodeMethodReturn: () => (/* reexport safe */ _encoding_js__WEBPACK_IMPORTED_MODULE_1__.decodeMethodReturn),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   encodeEventABI: () => (/* reexport safe */ _encoding_js__WEBPACK_IMPORTED_MODULE_1__.encodeEventABI),
/* harmony export */   encodeMethodABI: () => (/* reexport safe */ _encoding_js__WEBPACK_IMPORTED_MODULE_1__.encodeMethodABI),
/* harmony export */   getCreateAccessListParams: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.getCreateAccessListParams),
/* harmony export */   getEstimateGasParams: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.getEstimateGasParams),
/* harmony export */   getEthTxCallParams: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.getEthTxCallParams),
/* harmony export */   getSendTxParams: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.getSendTxParams),
/* harmony export */   isWeb3ContractContext: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.isWeb3ContractContext)
/* harmony export */ });
/* harmony import */ var _contract_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./contract.js */ "./node_modules/web3-eth-contract/lib/esm/contract.js");
/* harmony import */ var _encoding_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./encoding.js */ "./node_modules/web3-eth-contract/lib/esm/encoding.js");
/* harmony import */ var _contract_deployer_method_class_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./contract-deployer-method-class.js */ "./node_modules/web3-eth-contract/lib/esm/contract-deployer-method-class.js");
/* harmony import */ var _contract_log_subscription_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./contract_log_subscription.js */ "./node_modules/web3-eth-contract/lib/esm/contract_log_subscription.js");
/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types.js */ "./node_modules/web3-eth-contract/lib/esm/types.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-contract/lib/esm/utils.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * The `web3.eth.Contract` object makes it easy to interact with smart contracts on the Ethereum blockchain.
 * When you create a new contract object you give it the JSON interface of the respective smart contract and
 * web3 will auto convert all calls into low level ABI calls over RPC for you.
 * This allows you to interact with smart contracts as if they were JavaScript objects.
 *
 * To use it standalone:
 *
 * ```ts
 * const Contract = require('web3-eth-contract');
 *
 * // set provider for all later instances to use
 * Contract.setProvider('ws://localhost:8546');
 *
 * const contract = new Contract(jsonInterface, address);
 *
 * contract.methods.somFunc().send({from: ....})
 * .on('receipt', function(){
 *    ...
 * });
 * ```
 */
/**
 * This comment _supports3_ [Markdown](https://marked.js.org/)
 */







/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_contract_js__WEBPACK_IMPORTED_MODULE_0__.Contract);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/web3-eth-contract/lib/esm/types.js":
/*!*********************************************************!*\
  !*** ./node_modules/web3-eth-contract/lib/esm/types.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/web3-eth-contract/lib/esm/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/web3-eth-contract/lib/esm/utils.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   create2ContractAddress: () => (/* binding */ create2ContractAddress),
/* harmony export */   createContractAddress: () => (/* binding */ createContractAddress),
/* harmony export */   getCreateAccessListParams: () => (/* binding */ getCreateAccessListParams),
/* harmony export */   getEstimateGasParams: () => (/* binding */ getEstimateGasParams),
/* harmony export */   getEthTxCallParams: () => (/* binding */ getEthTxCallParams),
/* harmony export */   getSendTxParams: () => (/* binding */ getSendTxParams),
/* harmony export */   isWeb3ContractContext: () => (/* binding */ isWeb3ContractContext)
/* harmony export */ });
/* harmony import */ var _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethereumjs/rlp */ "./node_modules/web3-eth-contract/node_modules/@ethereumjs/rlp/dist/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var _encoding_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./encoding.js */ "./node_modules/web3-eth-contract/lib/esm/encoding.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/





const dataInputEncodeMethodHelper = (txParams, abi, params, dataInputFill) => {
    var _a, _b;
    const tx = {};
    if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isNullish)(txParams.data) || dataInputFill === 'both') {
        tx.data = (0,_encoding_js__WEBPACK_IMPORTED_MODULE_4__.encodeMethodABI)(abi, params, ((_a = txParams.data) !== null && _a !== void 0 ? _a : txParams.input));
    }
    if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isNullish)(txParams.input) || dataInputFill === 'both') {
        tx.input = (0,_encoding_js__WEBPACK_IMPORTED_MODULE_4__.encodeMethodABI)(abi, params, ((_b = txParams.input) !== null && _b !== void 0 ? _b : txParams.data));
    }
    // if input and data is empty, use web3config default
    if ((0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isNullish)(tx.input) && (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isNullish)(tx.data)) {
        tx[dataInputFill] = (0,_encoding_js__WEBPACK_IMPORTED_MODULE_4__.encodeMethodABI)(abi, params);
    }
    return { data: tx.data, input: tx.input };
};
const getSendTxParams = ({ abi, params, options, contractOptions, }) => {
    var _a, _b, _c;
    const deploymentCall = (_c = (_b = (_a = options === null || options === void 0 ? void 0 : options.input) !== null && _a !== void 0 ? _a : options === null || options === void 0 ? void 0 : options.data) !== null && _b !== void 0 ? _b : contractOptions.input) !== null && _c !== void 0 ? _c : contractOptions.data;
    if (!deploymentCall && !(options === null || options === void 0 ? void 0 : options.to) && !contractOptions.address) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.Web3ContractError('Contract address not specified');
    }
    if (!(options === null || options === void 0 ? void 0 : options.from) && !contractOptions.from) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.Web3ContractError('Contract "from" address not specified');
    }
    let txParams = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.mergeDeep)({
        to: contractOptions.address,
        gas: contractOptions.gas,
        gasPrice: contractOptions.gasPrice,
        from: contractOptions.from,
        input: contractOptions.input,
        maxPriorityFeePerGas: contractOptions.maxPriorityFeePerGas,
        maxFeePerGas: contractOptions.maxFeePerGas,
        data: contractOptions.data,
    }, options);
    const dataInput = dataInputEncodeMethodHelper(txParams, abi, params, options === null || options === void 0 ? void 0 : options.dataInputFill);
    txParams = Object.assign(Object.assign({}, txParams), { data: dataInput.data, input: dataInput.input });
    return txParams;
};
const getEthTxCallParams = ({ abi, params, options, contractOptions, }) => {
    if (!(options === null || options === void 0 ? void 0 : options.to) && !contractOptions.address) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.Web3ContractError('Contract address not specified');
    }
    let txParams = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.mergeDeep)({
        to: contractOptions.address,
        gas: contractOptions.gas,
        gasPrice: contractOptions.gasPrice,
        from: contractOptions.from,
        input: contractOptions.input,
        maxPriorityFeePerGas: contractOptions.maxPriorityFeePerGas,
        maxFeePerGas: contractOptions.maxFeePerGas,
        data: contractOptions.data,
    }, options);
    const dataInput = dataInputEncodeMethodHelper(txParams, abi, params, options === null || options === void 0 ? void 0 : options.dataInputFill);
    txParams = Object.assign(Object.assign({}, txParams), { data: dataInput.data, input: dataInput.input });
    return txParams;
};
const getEstimateGasParams = ({ abi, params, options, contractOptions, }) => {
    let txParams = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.mergeDeep)({
        to: contractOptions.address,
        gas: contractOptions.gas,
        gasPrice: contractOptions.gasPrice,
        from: contractOptions.from,
        input: contractOptions.input,
        data: contractOptions.data,
    }, options);
    const dataInput = dataInputEncodeMethodHelper(txParams, abi, params, options === null || options === void 0 ? void 0 : options.dataInputFill);
    txParams = Object.assign(Object.assign({}, txParams), { data: dataInput.data, input: dataInput.input });
    return txParams;
};
const isWeb3ContractContext = (options) => typeof options === 'object' &&
    !(0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isNullish)(options) &&
    Object.keys(options).length !== 0 &&
    !(0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isContractInitOptions)(options);
const getCreateAccessListParams = ({ abi, params, options, contractOptions, }) => {
    if (!(options === null || options === void 0 ? void 0 : options.to) && !contractOptions.address) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.Web3ContractError('Contract address not specified');
    }
    if (!(options === null || options === void 0 ? void 0 : options.from) && !contractOptions.from) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.Web3ContractError('Contract "from" address not specified');
    }
    let txParams = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.mergeDeep)({
        to: contractOptions.address,
        gas: contractOptions.gas,
        gasPrice: contractOptions.gasPrice,
        from: contractOptions.from,
        input: contractOptions.input,
        maxPriorityFeePerGas: contractOptions.maxPriorityFeePerGas,
        maxFeePerGas: contractOptions.maxFeePerGas,
        data: contractOptions.data,
    }, options);
    const dataInput = dataInputEncodeMethodHelper(txParams, abi, params, options === null || options === void 0 ? void 0 : options.dataInputFill);
    txParams = Object.assign(Object.assign({}, txParams), { data: dataInput.data, input: dataInput.input });
    return txParams;
};
const createContractAddress = (from, nonce) => {
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isAddress)(from))
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.InvalidAddressError(`Invalid address given ${from}`);
    let nonceValue = nonce;
    if (typeof nonce === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isHexString)(nonce))
        nonceValue = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.hexToNumber)(nonce);
    else if (typeof nonce === 'string' && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isHexString)(nonce))
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.InvalidNumberError('Invalid nonce value format');
    const rlpEncoded = _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_0__.RLP.encode([from, nonceValue]);
    const result = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.keccak256)(rlpEncoded);
    const contractAddress = '0x'.concat(result.substring(26));
    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.toChecksumAddress)(contractAddress);
};
const create2ContractAddress = (from, salt, initCode) => {
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isAddress)(from))
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.InvalidAddressError(`Invalid address given ${from}`);
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isHexString)(salt))
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.InvalidMethodParamsError(`Invalid salt value ${salt}`);
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isHexString)(initCode))
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.InvalidMethodParamsError(`Invalid initCode value ${initCode}`);
    const initCodeHash = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.keccak256)(initCode);
    const initCodeHashPadded = initCodeHash.padStart(64, '0'); // Pad to 32 bytes (64 hex characters)
    const create2Params = ['0xff', from, salt, initCodeHashPadded].map(x => x.replace(/0x/, ''));
    const create2Address = `0x${create2Params.join('')}`;
    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.toChecksumAddress)(`0x${(0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.keccak256)(create2Address).slice(26)}`); // Slice to get the last 20 bytes (40 hex characters) & checksum
};
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "./node_modules/web3-eth-contract/node_modules/@ethereumjs/rlp/dist/esm/index.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/web3-eth-contract/node_modules/@ethereumjs/rlp/dist/esm/index.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RLP: () => (/* binding */ RLP),
/* harmony export */   decode: () => (/* binding */ decode),
/* harmony export */   encode: () => (/* binding */ encode),
/* harmony export */   utils: () => (/* binding */ utils)
/* harmony export */ });
/**
 * RLP Encoding based on https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/
 * This function takes in data, converts it to Uint8Array if not,
 * and adds a length for recursion.
 * @param input Will be converted to Uint8Array
 * @returns Uint8Array of encoded data
 **/
function encode(input) {
    if (Array.isArray(input)) {
        const output = [];
        let outputLength = 0;
        for (let i = 0; i < input.length; i++) {
            const encoded = encode(input[i]);
            output.push(encoded);
            outputLength += encoded.length;
        }
        return concatBytes(encodeLength(outputLength, 192), ...output);
    }
    const inputBuf = toBytes(input);
    if (inputBuf.length === 1 && inputBuf[0] < 128) {
        return inputBuf;
    }
    return concatBytes(encodeLength(inputBuf.length, 128), inputBuf);
}
/**
 * Slices a Uint8Array, throws if the slice goes out-of-bounds of the Uint8Array.
 * E.g. `safeSlice(hexToBytes('aa'), 1, 2)` will throw.
 * @param input
 * @param start
 * @param end
 */
function safeSlice(input, start, end) {
    if (end > input.length) {
        throw new Error('invalid RLP (safeSlice): end slice of Uint8Array out-of-bounds');
    }
    return input.slice(start, end);
}
/**
 * Parse integers. Check if there is no leading zeros
 * @param v The value to parse
 */
function decodeLength(v) {
    if (v[0] === 0) {
        throw new Error('invalid RLP: extra zeros');
    }
    return parseHexByte(bytesToHex(v));
}
function encodeLength(len, offset) {
    if (len < 56) {
        return Uint8Array.from([len + offset]);
    }
    const hexLength = numberToHex(len);
    const lLength = hexLength.length / 2;
    const firstByte = numberToHex(offset + 55 + lLength);
    return Uint8Array.from(hexToBytes(firstByte + hexLength));
}
function decode(input, stream = false) {
    if (typeof input === 'undefined' || input === null || input.length === 0) {
        return Uint8Array.from([]);
    }
    const inputBytes = toBytes(input);
    const decoded = _decode(inputBytes);
    if (stream) {
        return {
            data: decoded.data,
            remainder: decoded.remainder.slice(),
        };
    }
    if (decoded.remainder.length !== 0) {
        throw new Error('invalid RLP: remainder must be zero');
    }
    return decoded.data;
}
/** Decode an input with RLP */
function _decode(input) {
    let length, llength, data, innerRemainder, d;
    const decoded = [];
    const firstByte = input[0];
    if (firstByte <= 0x7f) {
        // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.
        return {
            data: input.slice(0, 1),
            remainder: input.subarray(1),
        };
    }
    else if (firstByte <= 0xb7) {
        // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string
        // The range of the first byte is [0x80, 0xb7]
        length = firstByte - 0x7f;
        // set 0x80 null to 0
        if (firstByte === 0x80) {
            data = Uint8Array.from([]);
        }
        else {
            data = safeSlice(input, 1, length);
        }
        if (length === 2 && data[0] < 0x80) {
            throw new Error('invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed');
        }
        return {
            data,
            remainder: input.subarray(length),
        };
    }
    else if (firstByte <= 0xbf) {
        // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),
        // followed by the length, followed by the string
        llength = firstByte - 0xb6;
        if (input.length - 1 < llength) {
            throw new Error('invalid RLP: not enough bytes for string length');
        }
        length = decodeLength(safeSlice(input, 1, llength));
        if (length <= 55) {
            throw new Error('invalid RLP: expected string length to be greater than 55');
        }
        data = safeSlice(input, llength, length + llength);
        return {
            data,
            remainder: input.subarray(length + llength),
        };
    }
    else if (firstByte <= 0xf7) {
        // a list between 0-55 bytes long
        length = firstByte - 0xbf;
        innerRemainder = safeSlice(input, 1, length);
        while (innerRemainder.length) {
            d = _decode(innerRemainder);
            decoded.push(d.data);
            innerRemainder = d.remainder;
        }
        return {
            data: decoded,
            remainder: input.subarray(length),
        };
    }
    else {
        // a list over 55 bytes long
        llength = firstByte - 0xf6;
        length = decodeLength(safeSlice(input, 1, llength));
        if (length < 56) {
            throw new Error('invalid RLP: encoded list too short');
        }
        const totalLength = llength + length;
        if (totalLength > input.length) {
            throw new Error('invalid RLP: total length is larger than the data');
        }
        innerRemainder = safeSlice(input, llength, totalLength);
        while (innerRemainder.length) {
            d = _decode(innerRemainder);
            decoded.push(d.data);
            innerRemainder = d.remainder;
        }
        return {
            data: decoded,
            remainder: input.subarray(totalLength),
        };
    }
}
const cachedHexes = Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'));
function bytesToHex(uint8a) {
    // Pre-caching chars with `cachedHexes` speeds this up 6x
    let hex = '';
    for (let i = 0; i < uint8a.length; i++) {
        hex += cachedHexes[uint8a[i]];
    }
    return hex;
}
function parseHexByte(hexByte) {
    const byte = Number.parseInt(hexByte, 16);
    if (Number.isNaN(byte))
        throw new Error('Invalid byte sequence');
    return byte;
}
// Caching slows it down 2-3x
function hexToBytes(hex) {
    if (typeof hex !== 'string') {
        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);
    }
    if (hex.length % 2)
        throw new Error('hexToBytes: received invalid unpadded hex');
    const array = new Uint8Array(hex.length / 2);
    for (let i = 0; i < array.length; i++) {
        const j = i * 2;
        array[i] = parseHexByte(hex.slice(j, j + 2));
    }
    return array;
}
/** Concatenates two Uint8Arrays into one. */
function concatBytes(...arrays) {
    if (arrays.length === 1)
        return arrays[0];
    const length = arrays.reduce((a, arr) => a + arr.length, 0);
    const result = new Uint8Array(length);
    for (let i = 0, pad = 0; i < arrays.length; i++) {
        const arr = arrays[i];
        result.set(arr, pad);
        pad += arr.length;
    }
    return result;
}
function utf8ToBytes(utf) {
    return new TextEncoder().encode(utf);
}
/** Transform an integer into its hexadecimal value */
function numberToHex(integer) {
    if (integer < 0) {
        throw new Error('Invalid integer as argument, must be unsigned!');
    }
    const hex = integer.toString(16);
    return hex.length % 2 ? `0${hex}` : hex;
}
/** Pad a string to be even */
function padToEven(a) {
    return a.length % 2 ? `0${a}` : a;
}
/** Check if a string is prefixed by 0x */
function isHexPrefixed(str) {
    return str.length >= 2 && str[0] === '0' && str[1] === 'x';
}
/** Removes 0x from a given String */
function stripHexPrefix(str) {
    if (typeof str !== 'string') {
        return str;
    }
    return isHexPrefixed(str) ? str.slice(2) : str;
}
/** Transform anything into a Uint8Array */
function toBytes(v) {
    if (v instanceof Uint8Array) {
        return v;
    }
    if (typeof v === 'string') {
        if (isHexPrefixed(v)) {
            return hexToBytes(padToEven(stripHexPrefix(v)));
        }
        return utf8ToBytes(v);
    }
    if (typeof v === 'number' || typeof v === 'bigint') {
        if (!v) {
            return Uint8Array.from([]);
        }
        return hexToBytes(numberToHex(v));
    }
    if (v === null || v === undefined) {
        return Uint8Array.from([]);
    }
    throw new Error('toBytes: received unsupported type ' + typeof v);
}
const utils = {
    bytesToHex,
    concatBytes,
    hexToBytes,
    utf8ToBytes,
};
const RLP = { encode, decode };
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/web3-eth-ens/lib/esm/abi/ens/ENSRegistry.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-eth-ens/lib/esm/abi/ens/ENSRegistry.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ENSRegistryAbi: () => (/* binding */ ENSRegistryAbi)
/* harmony export */ });
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
// https://github.com/ensdomains/ens-contracts/blob/master/contracts/registry/ENSRegistry.sol
const ENSRegistryAbi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'label',
                type: 'bytes32',
            },
            {
                indexed: false,
                internalType: 'address',
                name: 'owner',
                type: 'address',
            },
        ],
        name: 'NewOwner',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
            {
                indexed: false,
                internalType: 'address',
                name: 'resolver',
                type: 'address',
            },
        ],
        name: 'NewResolver',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
            {
                indexed: false,
                internalType: 'address',
                name: 'owner',
                type: 'address',
            },
        ],
        name: 'Transfer',
        type: 'event',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'owner',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'operator',
                type: 'address',
            },
        ],
        name: 'isApprovedForAll',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
        ],
        name: 'owner',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
        ],
        name: 'recordExists',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
        ],
        name: 'resolver',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
        ],
        name: 'ttl',
        outputs: [
            {
                internalType: 'uint64',
                name: '',
                type: 'uint64',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
];
//# sourceMappingURL=ENSRegistry.js.map

/***/ }),

/***/ "./node_modules/web3-eth-ens/lib/esm/abi/ens/PublicResolver.js":
/*!*********************************************************************!*\
  !*** ./node_modules/web3-eth-ens/lib/esm/abi/ens/PublicResolver.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PublicResolverAbi: () => (/* binding */ PublicResolverAbi)
/* harmony export */ });
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
// https://github.com/ensdomains/ens-contracts/blob/master/contracts/resolvers/PublicResolver.sol
const PublicResolverAbi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
            {
                indexed: false,
                internalType: 'address',
                name: 'a',
                type: 'address',
            },
        ],
        name: 'AddrChanged',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'coinType',
                type: 'uint256',
            },
            {
                indexed: false,
                internalType: 'bytes',
                name: 'newAddress',
                type: 'bytes',
            },
        ],
        name: 'AddressChanged',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'owner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'operator',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'bool',
                name: 'approved',
                type: 'bool',
            },
        ],
        name: 'ApprovalForAll',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
            {
                indexed: false,
                internalType: 'bytes',
                name: 'hash',
                type: 'bytes',
            },
        ],
        name: 'ContenthashChanged',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
            {
                indexed: false,
                internalType: 'bytes',
                name: 'name',
                type: 'bytes',
            },
            {
                indexed: false,
                internalType: 'uint16',
                name: 'resource',
                type: 'uint16',
            },
            {
                indexed: false,
                internalType: 'bytes',
                name: 'record',
                type: 'bytes',
            },
        ],
        name: 'DNSRecordChanged',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
            {
                indexed: false,
                internalType: 'bytes',
                name: 'name',
                type: 'bytes',
            },
            {
                indexed: false,
                internalType: 'uint16',
                name: 'resource',
                type: 'uint16',
            },
        ],
        name: 'DNSRecordDeleted',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
        ],
        name: 'DNSZoneCleared',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
            {
                indexed: false,
                internalType: 'bytes',
                name: 'lastzonehash',
                type: 'bytes',
            },
            {
                indexed: false,
                internalType: 'bytes',
                name: 'zonehash',
                type: 'bytes',
            },
        ],
        name: 'DNSZonehashChanged',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
            {
                indexed: true,
                internalType: 'bytes4',
                name: 'interfaceID',
                type: 'bytes4',
            },
            {
                indexed: false,
                internalType: 'address',
                name: 'implementer',
                type: 'address',
            },
        ],
        name: 'InterfaceChanged',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
            {
                indexed: false,
                internalType: 'string',
                name: 'name',
                type: 'string',
            },
        ],
        name: 'NameChanged',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
            {
                indexed: false,
                internalType: 'bytes32',
                name: 'x',
                type: 'bytes32',
            },
            {
                indexed: false,
                internalType: 'bytes32',
                name: 'y',
                type: 'bytes32',
            },
        ],
        name: 'PubkeyChanged',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
            {
                indexed: true,
                internalType: 'string',
                name: 'indexedKey',
                type: 'string',
            },
            {
                indexed: false,
                internalType: 'string',
                name: 'key',
                type: 'string',
            },
        ],
        name: 'TextChanged',
        type: 'event',
    },
    {
        inputs: [
            {
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
            {
                internalType: 'uint256',
                name: 'contentTypes',
                type: 'uint256',
            },
        ],
        name: 'ABI',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
        ],
        name: 'addr',
        outputs: [
            {
                internalType: 'address payable',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
            {
                internalType: 'uint256',
                name: 'coinType',
                type: 'uint256',
            },
        ],
        name: 'addr',
        outputs: [
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
        ],
        name: 'contenthash',
        outputs: [
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
            {
                internalType: 'bytes32',
                name: 'name',
                type: 'bytes32',
            },
            {
                internalType: 'uint16',
                name: 'resource',
                type: 'uint16',
            },
        ],
        name: 'dnsRecord',
        outputs: [
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
            {
                internalType: 'bytes32',
                name: 'name',
                type: 'bytes32',
            },
        ],
        name: 'hasDNSRecords',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
            {
                internalType: 'bytes4',
                name: 'interfaceID',
                type: 'bytes4',
            },
        ],
        name: 'interfaceImplementer',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'account',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'operator',
                type: 'address',
            },
        ],
        name: 'isApprovedForAll',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
        ],
        name: 'name',
        outputs: [
            {
                internalType: 'string',
                name: '',
                type: 'string',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
        ],
        name: 'pubkey',
        outputs: [
            {
                internalType: 'bytes32',
                name: 'x',
                type: 'bytes32',
            },
            {
                internalType: 'bytes32',
                name: 'y',
                type: 'bytes32',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes4',
                name: 'interfaceID',
                type: 'bytes4',
            },
        ],
        name: 'supportsInterface',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
            {
                internalType: 'string',
                name: 'key',
                type: 'string',
            },
        ],
        name: 'text',
        outputs: [
            {
                internalType: 'string',
                name: '',
                type: 'string',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
        ],
        name: 'zonehash',
        outputs: [
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes32',
                name: 'node',
                type: 'bytes32',
            },
            {
                internalType: 'address',
                name: 'a',
                type: 'address',
            },
        ],
        name: 'setAddr',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
];
//# sourceMappingURL=PublicResolver.js.map

/***/ }),

/***/ "./node_modules/web3-eth-ens/lib/esm/config.js":
/*!*****************************************************!*\
  !*** ./node_modules/web3-eth-ens/lib/esm/config.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   interfaceIds: () => (/* binding */ interfaceIds),
/* harmony export */   methodsInInterface: () => (/* binding */ methodsInInterface),
/* harmony export */   networkIds: () => (/* binding */ networkIds),
/* harmony export */   registryAddresses: () => (/* binding */ registryAddresses)
/* harmony export */ });
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
//
/**
 * An object holding the interface Ids of the ENS resolver contracts. Please see [how to write a resolver](https://docs.ens.domains/contract-developer-guide/writing-a-resolver).
 */
const interfaceIds = {
    addr: '0x3b3b57de',
    name: '0x691f3431',
    abi: '0x2203ab56',
    pubkey: '0xc8690233',
    text: '0x59d1d43c',
    contenthash: '0xbc1c58d1',
};
/**
 * An object holding the functions that are supported by the ENS resolver contracts/interfaces.
 */
const methodsInInterface = {
    setAddr: 'addr',
    addr: 'addr',
    setPubkey: 'pubkey',
    pubkey: 'pubkey',
    setContenthash: 'contenthash',
    contenthash: 'contenthash',
    text: 'text',
    name: 'name',
};
/**
 * An object holding the addressed of the ENS registries on the different networks (mainnet, goerli).
 */
const registryAddresses = {
    main: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',
    goerli: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',
};
const networkIds = {
    '0x1': 'main',
    '0x5': 'goerli',
};
//# sourceMappingURL=config.js.map

/***/ }),

/***/ "./node_modules/web3-eth-ens/lib/esm/ens.js":
/*!**************************************************!*\
  !*** ./node_modules/web3-eth-ens/lib/esm/ens.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ENS: () => (/* binding */ ENS)
/* harmony export */ });
/* harmony import */ var web3_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-core */ "./node_modules/web3-core/lib/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_eth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-eth */ "./node_modules/web3-eth/lib/esm/index.js");
/* harmony import */ var web3_net__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-net */ "./node_modules/web3-net/lib/esm/index.js");
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./config.js */ "./node_modules/web3-eth-ens/lib/esm/config.js");
/* harmony import */ var _registry_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./registry.js */ "./node_modules/web3-eth-ens/lib/esm/registry.js");
/* harmony import */ var _resolver_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./resolver.js */ "./node_modules/web3-eth-ens/lib/esm/resolver.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};









/**
 * This class is designed to interact with the ENS system on the Ethereum blockchain.
 * For using ENS package, first install Web3 package using: `npm i web3` or `yarn add web3` based on your package manager, after that ENS features can be used as mentioned in following snippet.
 * ```ts
 *
 * import { Web3 } from 'web3';
 *
 * const web3 = new Web3('https://127.0.0.1:4545');
 *
 * console.log(await web3.eth.ens.getAddress('ethereum.eth'))
 * ```
 * For using individual package install `web3-eth-ens` packages using: `npm i web3-eth-ens` or `yarn add web3-eth-ens`. This is more efficient approach for building lightweight applications.
 *
 * ```ts
 *import { ENS } from 'web3-eth-ens';
 *
 * const ens = new ENS(undefined,'https://127.0.0.1:4545');
 *
 * console.log(await ens.getAddress('vitalik.eth'));
 * ```
 */
class ENS extends web3_core__WEBPACK_IMPORTED_MODULE_0__.Web3Context {
    /**
     * Use to create an instance of ENS
     * @param registryAddr - (Optional) The address of the ENS registry (default: mainnet registry address)
     * @param provider - (Optional) The provider to use for the ENS instance
     * @example
     * ```ts
     * const ens = new ENS(
     * 	"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
     * 	"http://localhost:8545"
     * );
     *
     * console.log( ens.defaultChain);
     * > mainnet
     * ```
     */
    constructor(registryAddr, provider) {
        super(provider !== null && provider !== void 0 ? provider : '');
        this.registryAddress = registryAddr !== null && registryAddr !== void 0 ? registryAddr : _config_js__WEBPACK_IMPORTED_MODULE_6__.registryAddresses.main; // will default to main registry address
        this._registry = new _registry_js__WEBPACK_IMPORTED_MODULE_7__.Registry(this.getContextObject(), registryAddr);
        this._resolver = new _resolver_js__WEBPACK_IMPORTED_MODULE_8__.Resolver(this._registry);
    }
    /**
     * Returns the Resolver by the given address
     * @param name - The name of the ENS domain
     * @returns - An contract instance of the resolver
     *
     * @example
     * ```ts
     * const resolver = await ens.getResolver('resolver');
     *
     * console.log(resolver.options.address);
     * > '0x1234567890123456789012345678901234567890'
     * ```
     */
    getResolver(name) {
        return __awaiter(this, void 0, void 0, function* () {
            return this._registry.getResolver(name);
        });
    }
    /**
     * Returns true if the record exists
     * @param name - The ENS name
     * @returns - Returns `true` if node exists in this ENS registry. This will return `false` for records that are in the legacy ENS registry but have not yet been migrated to the new one.
     * @example
     * ```ts
     * const exists = await web3.eth.ens.recordExists('ethereum.eth');
     * ```
     */
    recordExists(name) {
        return __awaiter(this, void 0, void 0, function* () {
            return this._registry.recordExists(name);
        });
    }
    /**
     * Returns the caching TTL (time-to-live) of an ENS name.
     * @param name - The ENS name
     * @returns - Returns the caching TTL (time-to-live) of a name.
     * @example
     * ```ts
     * const owner = await web3.eth.ens.getTTL('ethereum.eth');
     * ```
     */
    getTTL(name) {
        return __awaiter(this, void 0, void 0, function* () {
            return this._registry.getTTL(name);
        });
    }
    /**
     * Returns the owner by the given name and current configured or detected Registry
     * @param name - The ENS name
     * @returns - Returns the address of the owner of the name.
     * @example
     * ```ts
     * const owner = await web3.eth.ens.getOwner('ethereum.eth');
     * ```
     */
    getOwner(name) {
        return __awaiter(this, void 0, void 0, function* () {
            return this._registry.getOwner(name);
        });
    }
    /**
     * Resolves an ENS name to an Ethereum address.
     * @param ENSName - The ENS name to resolve
     * @param coinType - (Optional) The coin type, defaults to 60 (ETH)
     * @returns - The Ethereum address of the given name
     * ```ts
     * const address = await web3.eth.ens.getAddress('ethereum.eth');
     * console.log(address);
     * > '0xfB6916095ca1df60bB79Ce92cE3Ea74c37c5d359'
     * ```
     */
    getAddress(ENSName, coinType = 60) {
        return __awaiter(this, void 0, void 0, function* () {
            return this._resolver.getAddress(ENSName, coinType);
        });
    }
    /**
     * ERC-634 - Returns the text content stored in the resolver for the specified key.
     * @param ENSName - The ENS name to resolve
     * @param key - The key to resolve https://github.com/ethereum/ercs/blob/master/ERCS/erc-634.md#global-keys
     * @returns - The value content stored in the resolver for the specified key
     */
    getText(ENSNameOrAddr, key) {
        return __awaiter(this, void 0, void 0, function* () {
            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isAddress)(ENSNameOrAddr))
                return this._resolver.getText(yield (this._resolver.getName(ENSNameOrAddr, false)), key);
            return this._resolver.getText(ENSNameOrAddr, key);
        });
    }
    /**
     * Resolves the name of an ENS node.
     * @param ENSName - The node to resolve
     * @returns - The name
     */
    getName(ENSName, checkInterfaceSupport = true) {
        return __awaiter(this, void 0, void 0, function* () {
            return this._resolver.getName(ENSName, checkInterfaceSupport);
        });
    }
    /**
     * Returns the X and Y coordinates of the curve point for the public key.
     * @param ENSName - The ENS name
     * @returns - The X and Y coordinates of the curve point for the public key
     * @example
     * ```ts
     * const key = await web3.eth.ens.getPubkey('ethereum.eth');
     * console.log(key);
     * > {
     * "0": "0x0000000000000000000000000000000000000000000000000000000000000000",
     * "1": "0x0000000000000000000000000000000000000000000000000000000000000000",
     * "x": "0x0000000000000000000000000000000000000000000000000000000000000000",
     * "y": "0x0000000000000000000000000000000000000000000000000000000000000000"
     * }
     * ```
     */
    getPubkey(ENSName) {
        return __awaiter(this, void 0, void 0, function* () {
            return this._resolver.getPubkey(ENSName);
        });
    }
    /**
     * Returns the content hash object associated with an ENS node.
     * @param ENSName - The ENS name
     * @returns - The content hash object associated with an ENS node
     * @example
     * ```ts
     * const hash = await web3.eth.ens.getContenthash('ethereum.eth');
     * console.log(hash);
     * > 'QmaEBknbGT4bTQiQoe2VNgBJbRfygQGktnaW5TbuKixjYL'
     * ```
     */
    getContenthash(ENSName) {
        return __awaiter(this, void 0, void 0, function* () {
            return this._resolver.getContenthash(ENSName);
        });
    }
    /**
     * Checks if the current used network is synced and looks for ENS support there.
     * Throws an error if not.
     * @returns - The address of the ENS registry if the network has been detected successfully
     * @example
     * ```ts
     * console.log(await web3.eth.ens.checkNetwork());
     * > '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'
     * ```
     */
    checkNetwork() {
        return __awaiter(this, void 0, void 0, function* () {
            const now = Date.now() / 1000;
            if (!this._lastSyncCheck || now - this._lastSyncCheck > 3600) {
                const syncInfo = yield (0,web3_eth__WEBPACK_IMPORTED_MODULE_2__.isSyncing)(this);
                if (!(typeof syncInfo === 'boolean' && !syncInfo)) {
                    throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.ENSNetworkNotSyncedError();
                }
                this._lastSyncCheck = now;
            }
            if (this._detectedAddress) {
                return this._detectedAddress;
            }
            const networkType = yield (0,web3_net__WEBPACK_IMPORTED_MODULE_3__.getId)(this, Object.assign(Object.assign({}, this.defaultReturnFormat), { number: web3_types__WEBPACK_IMPORTED_MODULE_4__.FMT_NUMBER.HEX })); // get the network from provider
            const addr = _config_js__WEBPACK_IMPORTED_MODULE_6__.registryAddresses[_config_js__WEBPACK_IMPORTED_MODULE_6__.networkIds[networkType]];
            if (typeof addr === 'undefined') {
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.ENSUnsupportedNetworkError(networkType);
            }
            this._detectedAddress = addr;
            return this._detectedAddress;
        });
    }
    /**
     * Returns true if the related Resolver does support the given signature or interfaceId.
     * @param ENSName - The ENS name
     * @param interfaceId - The signature of the function or the interfaceId as described in the ENS documentation
     * @returns - `true` if the related Resolver does support the given signature or interfaceId.
     * @example
     * ```ts
     * const supports = await web3.eth.ens.supportsInterface('ethereum.eth', 'addr(bytes32');
     * console.log(supports);
     * > true
     * ```
     */
    supportsInterface(ENSName, interfaceId) {
        return __awaiter(this, void 0, void 0, function* () {
            return this._resolver.supportsInterface(ENSName, interfaceId);
        });
    }
    /**
     * @returns - Returns all events that can be emitted by the ENS registry.
     */
    get events() {
        return this._registry.events;
    }
    /**
     * Sets the address of an ENS name in his resolver.
     * @param name - The ENS name
     * @param address - The address to set
     * @param txConfig - (Optional) The transaction config
     * @returns - The transaction receipt
     * ```ts
     * const receipt = await ens.setAddress('web3js.eth','0xe2597eb05cf9a87eb1309e86750c903ec38e527e');
     *```
     */
    setAddress(name, address, txConfig) {
        return __awaiter(this, void 0, void 0, function* () {
            return this._resolver.setAddress(name, address, txConfig);
        });
    }
}
//# sourceMappingURL=ens.js.map

/***/ }),

/***/ "./node_modules/web3-eth-ens/lib/esm/index.js":
/*!****************************************************!*\
  !*** ./node_modules/web3-eth-ens/lib/esm/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ENS: () => (/* reexport safe */ _ens_js__WEBPACK_IMPORTED_MODULE_1__.ENS),
/* harmony export */   registryAddresses: () => (/* reexport safe */ _config_js__WEBPACK_IMPORTED_MODULE_0__.registryAddresses)
/* harmony export */ });
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config.js */ "./node_modules/web3-eth-ens/lib/esm/config.js");
/* harmony import */ var _ens_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ens.js */ "./node_modules/web3-eth-ens/lib/esm/ens.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * The `web3.eth.ens` functions let you interact with ENS. We recommend reading the [ENS documentation](https://docs.ens.domains/) to get deeper insights about the internals of the name service.
 *
 * ## Breaking Changes
 *
 * -   All the API level interfaces returning or accepting `null` in 1.x, use `undefined` in 4.x.
 * -   Functions don't accept a callback anymore.
 * -   Functions that accepted an optional `TransactionConfig` as the last argument, now accept an optional `NonPayableCallOptions`. See `web3-eth-contract` package for more details.
 * -   Removed all non-read methods. If you need modifing resolver or registry, please use https://www.npmjs.com/package/@ensdomains/ensjs
 */
/**
 * This comment _supports3_ [Markdown](https://marked.js.org/)
 */



//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/web3-eth-ens/lib/esm/registry.js":
/*!*******************************************************!*\
  !*** ./node_modules/web3-eth-ens/lib/esm/registry.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Registry: () => (/* binding */ Registry)
/* harmony export */ });
/* harmony import */ var web3_eth_contract__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-eth-contract */ "./node_modules/web3-eth-contract/lib/esm/index.js");
/* harmony import */ var _abi_ens_ENSRegistry_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./abi/ens/ENSRegistry.js */ "./node_modules/web3-eth-ens/lib/esm/abi/ens/ENSRegistry.js");
/* harmony import */ var _abi_ens_PublicResolver_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./abi/ens/PublicResolver.js */ "./node_modules/web3-eth-ens/lib/esm/abi/ens/PublicResolver.js");
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./config.js */ "./node_modules/web3-eth-ens/lib/esm/config.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-ens/lib/esm/utils.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};





class Registry {
    constructor(context, customRegistryAddress) {
        this.contract = new web3_eth_contract__WEBPACK_IMPORTED_MODULE_0__.Contract(_abi_ens_ENSRegistry_js__WEBPACK_IMPORTED_MODULE_1__.ENSRegistryAbi, customRegistryAddress !== null && customRegistryAddress !== void 0 ? customRegistryAddress : _config_js__WEBPACK_IMPORTED_MODULE_3__.registryAddresses.main, context);
        this.context = context;
    }
    getOwner(name) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const result = this.contract.methods.owner((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.namehash)(name)).call();
                return result;
            }
            catch (error) {
                throw new Error(); // TODO: TransactionRevertInstructionError Needs to be added after web3-eth call method is implemented
            }
        });
    }
    getTTL(name) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                return this.contract.methods.ttl((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.namehash)(name)).call();
            }
            catch (error) {
                throw new Error(); // TODO: TransactionRevertInstructionError Needs to be added after web3-eth call method is implemented
            }
        });
    }
    recordExists(name) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const promise = this.contract.methods.recordExists((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.namehash)(name)).call();
                return promise;
            }
            catch (error) {
                throw new Error(); // TODO: TransactionRevertInstructionError Needs to be added after web3-eth call method is implemented
            }
        });
    }
    getResolver(name) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                return this.contract.methods
                    .resolver((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.namehash)(name))
                    .call()
                    .then(address => {
                    // address type is unknown, not sure why
                    if (typeof address === 'string') {
                        const contract = new web3_eth_contract__WEBPACK_IMPORTED_MODULE_0__.Contract(_abi_ens_PublicResolver_js__WEBPACK_IMPORTED_MODULE_2__.PublicResolverAbi, address, this.context);
                        // TODO: set contract provider needs to be added when ens current provider
                        return contract;
                    }
                    throw new Error();
                });
            }
            catch (error) {
                throw new Error(); // TODO: TransactionRevertInstructionError Needs to be added after web3-eth call method is implemented
            }
        });
    }
    get events() {
        return this.contract.events;
    }
}
//# sourceMappingURL=registry.js.map

/***/ }),

/***/ "./node_modules/web3-eth-ens/lib/esm/resolver.js":
/*!*******************************************************!*\
  !*** ./node_modules/web3-eth-ens/lib/esm/resolver.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Resolver: () => (/* binding */ Resolver)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./config.js */ "./node_modules/web3-eth-ens/lib/esm/config.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-eth-ens/lib/esm/utils.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};





//  Default public resolver
//  https://github.com/ensdomains/resolvers/blob/master/contracts/PublicResolver.sol
class Resolver {
    constructor(registry) {
        this.registry = registry;
    }
    getResolverContractAdapter(ENSName) {
        return __awaiter(this, void 0, void 0, function* () {
            //  TODO : (Future 4.1.0 TDB) cache resolver contract if frequently queried same ENS name, refresh cache based on TTL and usage, also limit cache size, optional cache with a flag
            return this.registry.getResolver(ENSName);
        });
    }
    //  https://eips.ethereum.org/EIPS/eip-165
    // eslint-disable-next-line class-methods-use-this
    checkInterfaceSupport(resolverContract, methodName) {
        var _a, _b;
        return __awaiter(this, void 0, void 0, function* () {
            if ((0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(_config_js__WEBPACK_IMPORTED_MODULE_3__.interfaceIds[methodName]))
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.ResolverMethodMissingError((_a = resolverContract.options.address) !== null && _a !== void 0 ? _a : '', methodName);
            const supported = yield resolverContract.methods
                .supportsInterface(_config_js__WEBPACK_IMPORTED_MODULE_3__.interfaceIds[methodName])
                .call();
            if (!supported)
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.ResolverMethodMissingError((_b = resolverContract.options.address) !== null && _b !== void 0 ? _b : '', methodName);
        });
    }
    supportsInterface(ENSName, interfaceId) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const resolverContract = yield this.getResolverContractAdapter(ENSName);
            let interfaceIdParam = interfaceId;
            if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHexStrict)(interfaceIdParam)) {
                interfaceIdParam = (_a = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.sha3)(interfaceId)) !== null && _a !== void 0 ? _a : '';
                if (interfaceId === '')
                    throw new Error('Invalid interface Id');
                interfaceIdParam = interfaceIdParam.slice(0, 10);
            }
            return resolverContract.methods.supportsInterface(interfaceIdParam).call();
        });
    }
    // eslint-disable-next-line @typescript-eslint/no-inferrable-types
    getAddress(ENSName, coinType = 60) {
        return __awaiter(this, void 0, void 0, function* () {
            const resolverContract = yield this.getResolverContractAdapter(ENSName);
            yield this.checkInterfaceSupport(resolverContract, _config_js__WEBPACK_IMPORTED_MODULE_3__.methodsInInterface.addr);
            return resolverContract.methods.addr((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.namehash)(ENSName), coinType).call();
        });
    }
    getPubkey(ENSName) {
        return __awaiter(this, void 0, void 0, function* () {
            const resolverContract = yield this.getResolverContractAdapter(ENSName);
            yield this.checkInterfaceSupport(resolverContract, _config_js__WEBPACK_IMPORTED_MODULE_3__.methodsInInterface.pubkey);
            return resolverContract.methods.pubkey((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.namehash)(ENSName)).call();
        });
    }
    getContenthash(ENSName) {
        return __awaiter(this, void 0, void 0, function* () {
            const resolverContract = yield this.getResolverContractAdapter(ENSName);
            yield this.checkInterfaceSupport(resolverContract, _config_js__WEBPACK_IMPORTED_MODULE_3__.methodsInInterface.contenthash);
            return resolverContract.methods.contenthash((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.namehash)(ENSName)).call();
        });
    }
    setAddress(ENSName, address, txConfig) {
        return __awaiter(this, void 0, void 0, function* () {
            const resolverContract = yield this.getResolverContractAdapter(ENSName);
            yield this.checkInterfaceSupport(resolverContract, _config_js__WEBPACK_IMPORTED_MODULE_3__.methodsInInterface.setAddr);
            return resolverContract.methods
                .setAddr((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.namehash)(ENSName), address)
                .send(txConfig);
        });
    }
    getText(ENSName, key) {
        return __awaiter(this, void 0, void 0, function* () {
            const resolverContract = yield this.getResolverContractAdapter(ENSName);
            yield this.checkInterfaceSupport(resolverContract, _config_js__WEBPACK_IMPORTED_MODULE_3__.methodsInInterface.text);
            return resolverContract.methods
                .text((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.namehash)(ENSName), key).call();
        });
    }
    getName(address, checkInterfaceSupport = true) {
        return __awaiter(this, void 0, void 0, function* () {
            const reverseName = `${address.toLowerCase().substring(2)}.addr.reverse`;
            const resolverContract = yield this.getResolverContractAdapter(reverseName);
            if (checkInterfaceSupport)
                yield this.checkInterfaceSupport(resolverContract, _config_js__WEBPACK_IMPORTED_MODULE_3__.methodsInInterface.name);
            return resolverContract.methods
                .name((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.namehash)(reverseName)).call();
        });
    }
}
//# sourceMappingURL=resolver.js.map

/***/ }),

/***/ "./node_modules/web3-eth-ens/lib/esm/utils.js":
/*!****************************************************!*\
  !*** ./node_modules/web3-eth-ens/lib/esm/utils.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   namehash: () => (/* binding */ namehash),
/* harmony export */   normalize: () => (/* binding */ normalize)
/* harmony export */ });
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var _adraffy_ens_normalize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @adraffy/ens-normalize */ "./node_modules/@adraffy/ens-normalize/dist/index.mjs");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

// eslint-disable-next-line camelcase

const normalize = (name) => (0,_adraffy_ens_normalize__WEBPACK_IMPORTED_MODULE_1__.ens_normalize)(name);
const namehash = (inputName) => {
    // Reject empty names:
    let node = '';
    for (let i = 0; i < 32; i += 1) {
        node += '00';
    }
    if (inputName) {
        const name = normalize(inputName);
        const labels = name.split('.');
        for (let i = labels.length - 1; i >= 0; i -= 1) {
            const labelSha = (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.sha3Raw)(labels[i]).slice(2);
            node = (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.sha3Raw)(`0x${node}${labelSha}`).slice(2);
        }
    }
    return `0x${node}`;
};
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "./node_modules/web3-eth-iban/lib/esm/iban.js":
/*!****************************************************!*\
  !*** ./node_modules/web3-eth-iban/lib/esm/iban.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Iban: () => (/* binding */ Iban)
/* harmony export */ });
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/



/**
 * Converts Ethereum addresses to IBAN or BBAN addresses and vice versa.
 */
class Iban {
    /**
     * Construct a direct or indirect IBAN that has conversion methods and validity checks.
     * If the provided string was not of either the length of a direct IBAN (34 or 35),
     * nor the length of an indirect IBAN (20), an Error will be thrown ('Invalid IBAN was provided').
     *
     * @param iban - a Direct or an Indirect IBAN
     * @returns - Iban instance
     *
     * @example
     * ```ts
     * const iban = new web3.eth.Iban("XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS");
     * > Iban { _iban: 'XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS' }
     * ```
     */
    constructor(iban) {
        /**
         * This method should be used to create the equivalent ethereum address for the early provided Direct IBAN address.
         * If the provided string was not a direct IBAN (has the length of 34 or 35), an Error will be thrown:
         * ('Iban is indirect and cannot be converted. Must be length of 34 or 35').
         * Note: this is also available as a static method.
         *
         * @return the equivalent ethereum address
         *
         * @example
         * ```ts
         * const iban = new web3.eth.Iban("XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS");
         * iban.toAddress();
         * > "0x00c5496aEe77C1bA1f0854206A26DdA82a81D6D8"
         * ```
         */
        this.toAddress = () => {
            if (this.isDirect()) {
                // check if Iban can be converted to an address
                const base36 = this._iban.slice(4);
                const parsedBigInt = Iban._parseInt(base36, 36); // convert the base36 string to a bigint
                const paddedBigInt = (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.leftPad)(parsedBigInt, 40);
                return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.toChecksumAddress)(paddedBigInt);
            }
            throw new Error('Iban is indirect and cannot be converted. Must be length of 34 or 35');
        };
        if (Iban.isIndirect(iban) || Iban.isDirect(iban)) {
            this._iban = iban;
        }
        else {
            throw new Error('Invalid IBAN was provided');
        }
    }
    /**
     * A static method that checks if an IBAN is Direct.
     * It actually check the length of the provided variable and, only if it is 34 or 35, it returns true.
     * Note: this is also available as a method at an Iban instance.
     * @param iban - an IBAN to be checked
     * @returns - `true` if the provided `iban` is a Direct IBAN, and `false` otherwise.
     *
     * @example
     * ```ts
     * web3.eth.Iban.isDirect("XE81ETHXREGGAVOFYORK");
     * > false
     * ```
     */
    static isDirect(iban) {
        return iban.length === 34 || iban.length === 35;
    }
    /**
     * An instance method that checks if iban number is Direct.
     * It actually check the length of the provided variable and, only if it is 34 or 35, it returns true.
     * Note: this is also available as a static method.
     * @param iban - an IBAN to be checked
     * @returns - `true` if the provided `iban` is a Direct IBAN, and `false` otherwise.
     *
     * @example
     * ```ts
     * const iban = new web3.eth.Iban("XE81ETHXREGGAVOFYORK");
     * iban.isDirect();
     * > false
     * ```
     */
    isDirect() {
        return Iban.isDirect(this._iban);
    }
    /**
     * A static method that checks if an IBAN is Indirect.
     * It actually check the length of the provided variable and, only if it is 20, it returns true.
     * Note: this is also available as a method at an Iban instance.
     * @param iban - an IBAN to be checked
     * @returns - `true` if the provided `iban` is an Indirect IBAN, and `false` otherwise.
     *
     * @example
     * ```ts
     * web3.eth.Iban.isIndirect("XE81ETHXREGGAVOFYORK");
     * > true
     * ```
     */
    static isIndirect(iban) {
        return iban.length === 20;
    }
    /**
     * check if iban number if indirect
     * It actually check the length of the provided variable and, only if it is 20, it returns true.
     * Note: this is also available as a static method.
     * @param iban - an IBAN to be checked
     * @returns - `true` if the provided `iban` is an Indirect IBAN, and `false` otherwise.
     *
     * @example
     * ```ts
     * const iban = new web3.eth.Iban("XE81ETHXREGGAVOFYORK");
     * iban.isIndirect();
     * > true
     * ```
     */
    isIndirect() {
        return Iban.isIndirect(this._iban);
    }
    /**
     * This method could be used to check if a given string is valid IBAN object.
     * Note: this is also available as a method at an Iban instance.
     *
     * @param iban - a string to be checked if it is in IBAN
     * @returns - true if it is valid IBAN
     *
     * @example
     * ```ts
     * web3.eth.Iban.isValid("XE81ETHXREGGAVOFYORK");
     * > true
     *
     * web3.eth.Iban.isValid("XE82ETHXREGGAVOFYORK");
     * > false // because the checksum is incorrect
     * ```
     */
    static isValid(iban) {
        return (/^XE[0-9]{2}(ETH[0-9A-Z]{13}|[0-9A-Z]{30,31})$/.test(iban) &&
            Iban._mod9710(Iban._iso13616Prepare(iban)) === 1);
    }
    /**
     * Should be called to check if the early provided IBAN is correct.
     * Note: this is also available as a static method.
     *
     * @example
     * ```ts
     * const iban = new web3.eth.Iban("XE81ETHXREGGAVOFYORK");
     * iban.isValid();
     * > true
     *
     * const iban = new web3.eth.Iban("XE82ETHXREGGAVOFYORK");
     * iban.isValid();
     * > false // because the checksum is incorrect
     * ```
     */
    isValid() {
        return Iban.isValid(this._iban);
    }
    /**
     * Convert the passed BBAN to an IBAN for this country specification.
     * Please note that <i>"generation of the IBAN shall be the exclusive responsibility of the bank/branch servicing the account"</i>.
     * This method implements the preferred algorithm described in http://en.wikipedia.org/wiki/International_Bank_Account_Number#Generating_IBAN_check_digits
     *
     * @param bban - the BBAN to convert to IBAN
     * @returns an Iban class instance that holds the equivalent IBAN
     *
     * @example
     * ```ts
     * web3.eth.Iban.fromBban('ETHXREGGAVOFYORK');
     * > Iban {_iban: "XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS"}
     * ```
     */
    static fromBban(bban) {
        const countryCode = 'XE';
        const remainder = this._mod9710(this._iso13616Prepare(`${countryCode}00${bban}`));
        const checkDigit = `0${(98 - remainder).toString()}`.slice(-2);
        return new Iban(`${countryCode}${checkDigit}${bban}`);
    }
    /**
     * Should be used to create IBAN object for given institution and identifier
     *
     * @param options - an object holds the `institution` and the `identifier` which will be composed to create an `Iban` object from.
     * @returns an Iban class instance that holds the equivalent IBAN
     *
     * @example
     * ```ts
     * web3.eth.Iban.createIndirect({
     *     institution: "XREG",
     *     identifier: "GAVOFYORK"
     * });
     * > Iban {_iban: "XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS"}
     * ```
     */
    static createIndirect(options) {
        return Iban.fromBban(`ETH${options.institution}${options.identifier}`);
    }
    /**
     * This method should be used to create iban object from an Ethereum address.
     *
     * @param address - an Ethereum address
     * @returns an Iban class instance that holds the equivalent IBAN
     *
     * @example
     * ```ts
     * web3.eth.Iban.fromAddress("0x00c5496aEe77C1bA1f0854206A26DdA82a81D6D8");
     * > Iban {_iban: "XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS"}
     * ```
     */
    static fromAddress(address) {
        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isAddress)(address)) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidAddressError(address);
        }
        const num = BigInt((0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.hexToNumber)(address));
        const base36 = num.toString(36);
        const padded = (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.leftPad)(base36, 15);
        return Iban.fromBban(padded.toUpperCase());
    }
    /**
     * This method should be used to create IBAN address from an Ethereum address
     *
     * @param address - an Ethereum address
     * @return the equivalent IBAN address
     *
     * @example
     * ```ts
     * web3.eth.Iban.toIban("0x00c5496aEe77C1bA1f0854206A26DdA82a81D6D8");
     * > "XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS"
     * ```
     */
    static toIban(address) {
        return Iban.fromAddress(address).toString();
    }
    /**
     * Should be called to get client identifier within institution
     *
     * @return the client of the IBAN instance.
     *
     * @example
     * ```ts
     * const iban = new web3.eth.Iban("XE81ETHXREGGAVOFYORK");
     * iban.client();
     * > 'GAVOFYORK'
     * ```
     */
    client() {
        return this.isIndirect() ? this._iban.slice(11) : '';
    }
    /**
     * Returns the IBAN checksum of the early provided IBAN
     *
     * @example
     * ```ts
     * const iban = new web3.eth.Iban("XE81ETHXREGGAVOFYORK");
     * iban.checksum();
     * > "81"
     * ```
     *
     */
    checksum() {
        return this._iban.slice(2, 4);
    }
    /**
     * Returns institution identifier from the early provided  IBAN
     *
     * @example
     * ```ts
     * const iban = new web3.eth.Iban("XE81ETHXREGGAVOFYORK");
     * iban.institution();
     * > 'XREG'
     * ```
     */
    institution() {
        return this.isIndirect() ? this._iban.slice(7, 11) : '';
    }
    /**
     * Simply returns the early provided IBAN
     *
     * @example
     * ```ts
     * const iban = new web3.eth.Iban('XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS');
     * iban.toString();
     * > 'XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS'
     * ```
     */
    toString() {
        return this._iban;
    }
}
/**
 * Prepare an IBAN for mod 97 computation by moving the first 4 chars to the end and transforming the letters to
 * numbers (A = 10, B = 11, ..., Z = 35), as specified in ISO13616.
 */
Iban._iso13616Prepare = (iban) => {
    const A = 'A'.charCodeAt(0);
    const Z = 'Z'.charCodeAt(0);
    const upperIban = iban.toUpperCase();
    const modifiedIban = `${upperIban.slice(4)}${upperIban.slice(0, 4)}`;
    return modifiedIban
        .split('')
        .map(n => {
        const code = n.charCodeAt(0);
        if (code >= A && code <= Z) {
            // A = 10, B = 11, ... Z = 35
            return code - A + 10;
        }
        return n;
    })
        .join('');
};
/**
 * return the bigint of the given string with the specified base
 */
Iban._parseInt = (str, base) => [...str].reduce((acc, curr) => BigInt(parseInt(curr, base)) + BigInt(base) * acc, BigInt(0));
/**
 * Calculates the MOD 97 10 of the passed IBAN as specified in ISO7064.
 */
Iban._mod9710 = (iban) => {
    let remainder = iban;
    let block;
    while (remainder.length > 2) {
        block = remainder.slice(0, 9);
        remainder = `${(parseInt(block, 10) % 97).toString()}${remainder.slice(block.length)}`;
    }
    return parseInt(remainder, 10) % 97;
};
/**
 * This method should be used to create an ethereum address from a Direct IBAN address.
 * If the provided string was not a direct IBAN (has the length of 34 or 35), an Error will be thrown:
 * ('Iban is indirect and cannot be converted. Must be length of 34 or 35').
 * Note: this is also available as a method at an Iban instance.
 *
 * @param iban - a Direct IBAN address
 * @return the equivalent ethereum address
 *
 * @example
 * ```ts
 * web3.eth.Iban.toAddress("XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS");
 * > "0x00c5496aEe77C1bA1f0854206A26DdA82a81D6D8"
 * ```
 */
Iban.toAddress = (iban) => {
    const ibanObject = new Iban(iban);
    return ibanObject.toAddress();
};
//# sourceMappingURL=iban.js.map

/***/ }),

/***/ "./node_modules/web3-eth-iban/lib/esm/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/web3-eth-iban/lib/esm/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Iban: () => (/* reexport safe */ _iban_js__WEBPACK_IMPORTED_MODULE_0__.Iban),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _iban_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iban.js */ "./node_modules/web3-eth-iban/lib/esm/iban.js");
/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types.js */ "./node_modules/web3-eth-iban/lib/esm/types.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_iban_js__WEBPACK_IMPORTED_MODULE_0__.Iban);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/web3-eth-iban/lib/esm/types.js":
/*!*****************************************************!*\
  !*** ./node_modules/web3-eth-iban/lib/esm/types.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/web3-eth-personal/lib/esm/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/web3-eth-personal/lib/esm/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Personal: () => (/* reexport safe */ _personal_js__WEBPACK_IMPORTED_MODULE_0__.Personal),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _personal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./personal.js */ "./node_modules/web3-eth-personal/lib/esm/personal.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * The `web3-eth-personal` package allows you to interact with the Ethereum node’s accounts.
 *
 * **_NOTE:_**  Many of these functions send sensitive information like passwords. Never call these functions over a unsecured Websocket or HTTP provider, as your password will be sent in plain text!
 *
 * import Personal from 'web3-eth-personal';
 *
 * const personal = new Personal('http://localhost:8545');
 *
 * or using the web3 umbrella package
 *
 * import Personal from 'web3-eth-personal';
 * const web3 = new Web3('http://localhost:8545');
 * // web3.eth.personal
 */
/**
 * This comment _supports3_ [Markdown](https://marked.js.org/)
 */


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_personal_js__WEBPACK_IMPORTED_MODULE_0__.Personal);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/web3-eth-personal/lib/esm/personal.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-eth-personal/lib/esm/personal.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Personal: () => (/* binding */ Personal)
/* harmony export */ });
/* harmony import */ var web3_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-core */ "./node_modules/web3-core/lib/esm/index.js");
/* harmony import */ var _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rpc_method_wrappers.js */ "./node_modules/web3-eth-personal/lib/esm/rpc_method_wrappers.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};


/**
 * Eth Personal allows you to interact with the Ethereum node’s accounts.
 * For using Eth Personal package, first install Web3 package using: `npm i web3` or `yarn add web3` based on your package manager.
 * ```ts
 *
 *import { Web3 } from 'web3';
 *  const web3 = new Web3('http://127.0.0.1:7545');
 *
 *  console.log(await web3.eth.personal.getAccounts());
 *
 * ```
 * For using individual package install `web3-eth-personal` packages using: `npm i web3-eth-personal` or `yarn add web3-eth-personal`.
 *
 * ```ts
 * import {Personal} from 'web3-eth-personal';
 *
 * const personal = new Personal('http://127.0.0.1:7545');
 * console.log(await personal.getAccounts());
 * ```
 */
class Personal extends web3_core__WEBPACK_IMPORTED_MODULE_0__.Web3Context {
    /**
     *Returns a list of accounts the node controls by using the provider and calling the RPC method personal_listAccounts. Using `web3.eth.accounts.create()` will not add accounts into this list. For that use `web3.eth.personal.newAccount()`.
     * @returns - An array of addresses controlled by the node.
     * @example
     * ```ts
     *  const accounts = await personal.getAccounts();
     * console.log(accounts);
     * >
     * [
     * 	'0x79D7BbaC53C9aF700d0B250e9AE789E503Fcd6AE',
     * 	'0xe2597eB05CF9a87eB1309e86750C903EC38E527e',
     * 	'0x7eD0e85B8E1E925600B4373e6d108F34AB38a401',
     * 	'0xE4bEEf667408b99053dC147Ed19592aDa0d77F59',
     * 	'0x7AB80aeB6bb488B7f6c41c58e83Ef248eB39c882',
     * 	'0x12B1D9d74d73b1C3A245B19C1C5501c653aF1af9',
     * 	'0x1a6075A263Ee140e00Dbf8E374Fc5A443d097894',
     * 	'0x4FEC0A51024B13030D26E70904B066C6d41157A5',
     * 	'0x03095dc4857BB26f3a4550c5651Df8b7f6b6B1Ef',
     * 	'0xac0B9b6e8A17991cb172B2ABAF45Fb5eb769E540'
     * ]
     * ```
     */
    getAccounts() {
        return __awaiter(this, void 0, void 0, function* () {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__.getAccounts(this.requestManager);
        });
    }
    /**
     * Creates a new account and returns its address.
     * **_NOTE:_**  This function sends a sensitive information like password. Never call this function over a unsecured Websocket or HTTP provider, as your password will be sent in plain text!
     * @param password - The password to encrypt the account with.
     * @returns - The address of the new account.
     * @example
     * ```ts
     * const addr = await web3.eth.personal.newAccount('password');
     * console.log(addr);
     * > '0x1234567891011121314151617181920212223456'
     * ```
     */
    newAccount(password) {
        return __awaiter(this, void 0, void 0, function* () {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__.newAccount(this.requestManager, password);
        });
    }
    /**
     * Unlocks an account for a given duration.
     * @param address - The address of the account to unlock.
     * @param password - The password of the account to unlock.
     * @param unlockDuration - The duration in seconds to unlock the account for.
     * @example
     * ```ts
     * await personal.unlockAccount(
     * 	"0x0d4aa485ecbc499c70860feb7e5aaeaf5fd8172e",
     * 	"123456",
     * 	600
     * );
     * ```
     */
    unlockAccount(address, password, unlockDuration) {
        return __awaiter(this, void 0, void 0, function* () {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__.unlockAccount(this.requestManager, address, password, unlockDuration);
        });
    }
    /**
     * Locks the given account
     * @param address - The address of the account to lock.
     * @returns - `true` if the account was locked, otherwise `false`.
     * @example
     * ```ts
     * await personal.lockAccount(
     * 	"0x0d4aa485ecbc499c70860feb7e5aaeaf5fd8172e"
     * );
     * ```
     */
    lockAccount(address) {
        return __awaiter(this, void 0, void 0, function* () {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__.lockAccount(this.requestManager, address);
        });
    }
    /**
     * Imports the given private key into the key store, encrypting it with the passphrase.
     * @param keyData - An unencrypted private key (hex string).
     * @param passphrase  - The password of the account
     * @returns - The address of the new account.
     * @example
     * ```ts
     * const accountAddress = await personal.importRawKey(
     * 	"abe40cb08850da918ee951b237fa87946499b2d8643e4aa12b0610b050c731f6",
     * 	"123456"
     * );
     *
     * console.log(unlockTx);
     * > 0x8727a8b34ec833154b72b62cac05d69f86eb6556
     * ```
     */
    importRawKey(keyData, passphrase) {
        return __awaiter(this, void 0, void 0, function* () {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__.importRawKey(this.requestManager, keyData, passphrase);
        });
    }
    /**
     * This method sends a transaction over the management API.
     * **_NOTE:_** Sending your account password over an unsecured HTTP RPC connection is highly unsecure.
     * @param tx - The transaction options
     * @param passphrase - The passphrase of the current account
     * @returns - The transaction hash
     * @example
     * ```ts
     * const txHash = personal
     * .sendTransaction({
     *  	from: "0x0d4aa485ecbc499c70860feb7e5aaeaf5fd8172e",
     * 	gasPrice: "20000000000",
     * 	gas: "21000",
     * 	to: "0x3535353535353535353535353535353535353535",
     * 	value: "1000000",
     * 	data: "",
     * 	nonce: 0,
     * },
     * "123456");
     *
     * console.log(txHash);
     * > 0x9445325c3c5638c9fe425b003b8c32f03e9f99d409555a650a6838ba712bb51b
     * ```
     */
    sendTransaction(tx, passphrase) {
        return __awaiter(this, void 0, void 0, function* () {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__.sendTransaction(this.requestManager, tx, passphrase, this.config);
        });
    }
    /**
     * Signs a transaction. This account needs to be unlocked.
     * **_NOTE:_** Sending your account password over an unsecured HTTP RPC connection is highly unsecure.
     * @param tx - The transaction data to sign. See sendTransaction  for more information.
     * @param passphrase - The password of the `from` account, to sign the transaction with.
     * @returns - The RLP encoded transaction. The `raw` property can be used to send the transaction using  sendSignedTransaction.
     * @example
     * ```ts
     * const tx = personal
     * .signTransaction({
     * 	from: "0x0d4aa485ecbc499c70860feb7e5aaeaf5fd8172e",
     * 	gasPrice: "20000000000",
     * 	gas: "21000",
     * 	to: "0x3535353535353535353535353535353535353535",
     * 	value: "1000000000000000000",
     * 	data: "",
     * 	nonce: 0,
     * },
     * "123456");
     *
     * console.log(tx);
     *
     * > {
     * 	raw: '0xf86e808504a817c800825208943535353535353535353535353535353535353535880de0b6b3a764000080820a95a0c951c03238fe930e6e69ab9d6af9f29248a514048e44884f0e60c4de40de3526a038b71399bf0c8925749ab79e91ce6cd2fc068c84c18ff6a197b48c4cbef01e00',
     * 	tx: {
     * 	type: '0x0',
     * 	nonce: '0x0',
     * 	gasPrice: '0x4a817c800',
     * 	maxPriorityFeePerGas: null,
     * 	maxFeePerGas: null,
     * 	gas: '0x5208',
     * 	value: '0xde0b6b3a7640000',
     * 	input: '0x',
     * 	v: '0xa95',
     * 	r: '0xc951c03238fe930e6e69ab9d6af9f29248a514048e44884f0e60c4de40de3526',
     * 	s: '0x38b71399bf0c8925749ab79e91ce6cd2fc068c84c18ff6a197b48c4cbef01e00',
     * 	to: '0x3535353535353535353535353535353535353535',
     * 	hash: '0x65e3df790ab2a32068b13cff970b26445b8995229ae4abbed61bd996f09fce69'
     * 	}
     * }
     * ```
     */
    signTransaction(tx, passphrase) {
        return __awaiter(this, void 0, void 0, function* () {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__.signTransaction(this.requestManager, tx, passphrase, this.config);
        });
    }
    /**
     * Calculates an Ethereum specific signature with:
     * sign(keccak256("\x19Ethereum Signed Message:\n" + dataToSign.length + dataToSign)))
     * Adding a prefix to the message makes the calculated signature recognisable as an Ethereum specific signature.
     *
     * If you have the original message and the signed message, you can discover the signing account address using web3.eth.personal.ecRecover
     * **_NOTE:_** Sending your account password over an unsecured HTTP RPC connection is highly unsecure.
     * @param data - The data to sign.
     * @param address - The address to sign with.
     * @param passphrase - The passphrase to decrypt the account with.
     * @returns - The signature.
     * @example
     * ```ts
     * const sig = await personal.sign("Hello world", "0x0D4Aa485ECbC499c70860fEb7e5AaeAf5fd8172E", "123456")
     * console.log(sig)
     * > 0x5d21d01b3198ac34d0585a9d76c4d1c8123e5e06746c8962318a1c08ffb207596e6fce4a6f377b7c0fc98c5f646cd73438c80e8a1a95cbec55a84c2889dca0301b
     * ```
     */
    sign(data, address, passphrase) {
        return __awaiter(this, void 0, void 0, function* () {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__.sign(this.requestManager, data, address, passphrase);
        });
    }
    /**
     * Recovers the account that signed the data.
     * @param signedData - Data that was signed. If String it will be converted using {@link utf8ToHex}
     * @param signature - The signature
     * @returns - The address of the account that signed the data.
     * @example
     * ```ts
     *  const address = await personal.ecRecover(
     * 	"Hello world",
     * 	"0x5d21d01b3198ac34d0585a9d76c4d1c8123e5e06746c8962318a1c08ffb207596e6fce4a6f377b7c0fc98c5f646cd73438c80e8a1a95cbec55a84c2889dca0301b"
     * );
     * console.log(address);
     * > 0x0d4aa485ecbc499c70860feb7e5aaeaf5fd8172e
     * ```
     */
    ecRecover(signedData, signature) {
        return __awaiter(this, void 0, void 0, function* () {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__.ecRecover(this.requestManager, signedData, signature);
        });
    }
}
//# sourceMappingURL=personal.js.map

/***/ }),

/***/ "./node_modules/web3-eth-personal/lib/esm/rpc_method_wrappers.js":
/*!***********************************************************************!*\
  !*** ./node_modules/web3-eth-personal/lib/esm/rpc_method_wrappers.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ecRecover: () => (/* binding */ ecRecover),
/* harmony export */   getAccounts: () => (/* binding */ getAccounts),
/* harmony export */   importRawKey: () => (/* binding */ importRawKey),
/* harmony export */   lockAccount: () => (/* binding */ lockAccount),
/* harmony export */   newAccount: () => (/* binding */ newAccount),
/* harmony export */   sendTransaction: () => (/* binding */ sendTransaction),
/* harmony export */   sign: () => (/* binding */ sign),
/* harmony export */   signTransaction: () => (/* binding */ signTransaction),
/* harmony export */   unlockAccount: () => (/* binding */ unlockAccount)
/* harmony export */ });
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_eth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-eth */ "./node_modules/web3-eth/lib/esm/index.js");
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! web3-rpc-methods */ "./node_modules/web3-rpc-methods/lib/esm/index.js");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};





const getAccounts = (requestManager) => __awaiter(void 0, void 0, void 0, function* () {
    const result = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.personalRpcMethods.getAccounts(requestManager);
    return result.map(web3_utils__WEBPACK_IMPORTED_MODULE_0__.toChecksumAddress);
});
const newAccount = (requestManager, password) => __awaiter(void 0, void 0, void 0, function* () {
    web3_validator__WEBPACK_IMPORTED_MODULE_3__.validator.validate(['string'], [password]);
    const result = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.personalRpcMethods.newAccount(requestManager, password);
    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.toChecksumAddress)(result);
});
const unlockAccount = (requestManager, address, password, unlockDuration) => __awaiter(void 0, void 0, void 0, function* () {
    web3_validator__WEBPACK_IMPORTED_MODULE_3__.validator.validate(['address', 'string', 'uint'], [address, password, unlockDuration]);
    return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.personalRpcMethods.unlockAccount(requestManager, address, password, unlockDuration);
});
const lockAccount = (requestManager, address) => __awaiter(void 0, void 0, void 0, function* () {
    web3_validator__WEBPACK_IMPORTED_MODULE_3__.validator.validate(['address'], [address]);
    return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.personalRpcMethods.lockAccount(requestManager, address);
});
const importRawKey = (requestManager, keyData, passphrase) => __awaiter(void 0, void 0, void 0, function* () {
    web3_validator__WEBPACK_IMPORTED_MODULE_3__.validator.validate(['string', 'string'], [keyData, passphrase]);
    return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.personalRpcMethods.importRawKey(requestManager, keyData, passphrase);
});
const sendTransaction = (requestManager, tx, passphrase, config) => __awaiter(void 0, void 0, void 0, function* () {
    const formattedTx = (0,web3_eth__WEBPACK_IMPORTED_MODULE_1__.formatTransaction)(tx, web3_types__WEBPACK_IMPORTED_MODULE_2__.ETH_DATA_FORMAT, {
        transactionSchema: config === null || config === void 0 ? void 0 : config.customTransactionSchema,
    });
    return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.personalRpcMethods.sendTransaction(requestManager, formattedTx, passphrase);
});
const signTransaction = (requestManager, tx, passphrase, config) => __awaiter(void 0, void 0, void 0, function* () {
    const formattedTx = (0,web3_eth__WEBPACK_IMPORTED_MODULE_1__.formatTransaction)(tx, web3_types__WEBPACK_IMPORTED_MODULE_2__.ETH_DATA_FORMAT, {
        transactionSchema: config === null || config === void 0 ? void 0 : config.customTransactionSchema,
    });
    return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.personalRpcMethods.signTransaction(requestManager, formattedTx, passphrase);
});
const sign = (requestManager, data, address, passphrase) => __awaiter(void 0, void 0, void 0, function* () {
    web3_validator__WEBPACK_IMPORTED_MODULE_3__.validator.validate(['string', 'address', 'string'], [data, address, passphrase]);
    const dataToSign = (0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(data) ? data : (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.utf8ToHex)(data);
    return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.personalRpcMethods.sign(requestManager, dataToSign, address, passphrase);
});
const ecRecover = (requestManager, signedData, signature) => __awaiter(void 0, void 0, void 0, function* () {
    web3_validator__WEBPACK_IMPORTED_MODULE_3__.validator.validate(['string', 'string'], [signedData, signature]);
    const signedDataString = (0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(signedData) ? signedData : (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.utf8ToHex)(signedData);
    return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.personalRpcMethods.ecRecover(requestManager, signedDataString, signature);
});
//# sourceMappingURL=rpc_method_wrappers.js.map

/***/ }),

/***/ "./node_modules/web3-eth/lib/esm/constants.js":
/*!****************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/constants.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ALL_EVENTS: () => (/* binding */ ALL_EVENTS),
/* harmony export */   ALL_EVENTS_ABI: () => (/* binding */ ALL_EVENTS_ABI),
/* harmony export */   NUMBER_DATA_FORMAT: () => (/* binding */ NUMBER_DATA_FORMAT)
/* harmony export */ });
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

const ALL_EVENTS = 'ALLEVENTS';
const ALL_EVENTS_ABI = {
    name: ALL_EVENTS,
    signature: '',
    type: 'event',
    inputs: [],
};
const NUMBER_DATA_FORMAT = { bytes: web3_types__WEBPACK_IMPORTED_MODULE_0__.FMT_BYTES.HEX, number: web3_types__WEBPACK_IMPORTED_MODULE_0__.FMT_NUMBER.NUMBER };
//# sourceMappingURL=constants.js.map

/***/ }),

/***/ "./node_modules/web3-eth/lib/esm/filtering_rpc_method_wrappers.js":
/*!************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/filtering_rpc_method_wrappers.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createNewBlockFilter: () => (/* binding */ createNewBlockFilter),
/* harmony export */   createNewFilter: () => (/* binding */ createNewFilter),
/* harmony export */   createNewPendingTransactionFilter: () => (/* binding */ createNewPendingTransactionFilter),
/* harmony export */   getFilterChanges: () => (/* binding */ getFilterChanges),
/* harmony export */   getFilterLogs: () => (/* binding */ getFilterLogs),
/* harmony export */   uninstallFilter: () => (/* binding */ uninstallFilter)
/* harmony export */ });
/* harmony import */ var web3_rpc_methods__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-rpc-methods */ "./node_modules/web3-rpc-methods/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./schemas.js */ "./node_modules/web3-eth/lib/esm/schemas.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




/**
 * View additional documentations here: {@link Web3Eth.createNewPendingTransactionFilter}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 * @param returnFormat ({@link DataFormat}) Return format
 */
function createNewPendingTransactionFilter(web3Context, returnFormat) {
    return __awaiter(this, void 0, void 0, function* () {
        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_0__.ethRpcMethods.newPendingTransactionFilter(web3Context.requestManager);
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.format)({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
    });
}
/**
 * View additional documentations here: {@link Web3Eth.createNewFilter}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 * @param filter ({@link FilterParam}) Filter param optional having from-block to-block address or params
 * @param returnFormat ({@link DataFormat}) Return format
 */
function createNewFilter(web3Context, filter, returnFormat) {
    return __awaiter(this, void 0, void 0, function* () {
        // format type bigint or number toBlock and fromBlock to hexstring.
        let { toBlock, fromBlock } = filter;
        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(toBlock)) {
            if (typeof toBlock === 'number' || typeof toBlock === 'bigint') {
                toBlock = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(toBlock);
            }
        }
        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(fromBlock)) {
            if (typeof fromBlock === 'number' || typeof fromBlock === 'bigint') {
                fromBlock = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(fromBlock);
            }
        }
        const formattedFilter = Object.assign(Object.assign({}, filter), { fromBlock, toBlock });
        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_0__.ethRpcMethods.newFilter(web3Context.requestManager, formattedFilter);
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.format)({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
    });
}
/**
 * View additional documentations here: {@link Web3Eth.createNewBlockFilter}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 * @param returnFormat ({@link DataFormat}) Return format
 */
function createNewBlockFilter(web3Context, returnFormat) {
    return __awaiter(this, void 0, void 0, function* () {
        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_0__.ethRpcMethods.newBlockFilter(web3Context.requestManager);
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.format)({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
    });
}
/**
 * View additional documentations here: {@link Web3Eth.uninstallFilter}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 * @param filterIdentifier ({@link Numbers}) filter id
 */
function uninstallFilter(web3Context, filterIdentifier) {
    return __awaiter(this, void 0, void 0, function* () {
        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_0__.ethRpcMethods.uninstallFilter(web3Context.requestManager, (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(filterIdentifier));
        return response;
    });
}
/**
 * View additional documentations here: {@link Web3Eth.getFilterChanges}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 * @param filterIdentifier ({@link Numbers}) filter id
 */
function getFilterChanges(web3Context, filterIdentifier, returnFormat) {
    return __awaiter(this, void 0, void 0, function* () {
        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_0__.ethRpcMethods.getFilterChanges(web3Context.requestManager, (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(filterIdentifier));
        const result = response.map(res => {
            if (typeof res === 'string') {
                return res;
            }
            return (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_3__.logSchema, res, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
        });
        return result;
    });
}
/**
 * View additional documentations here: {@link Web3Eth.getFilterLogs}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 * @param filterIdentifier ({@link Numbers}) filter id
 */
function getFilterLogs(web3Context, filterIdentifier, returnFormat) {
    return __awaiter(this, void 0, void 0, function* () {
        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_0__.ethRpcMethods.getFilterLogs(web3Context.requestManager, (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(filterIdentifier));
        const result = response.map(res => {
            if (typeof res === 'string') {
                return res;
            }
            return (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_3__.logSchema, res, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
        });
        return result;
    });
}
//# sourceMappingURL=filtering_rpc_method_wrappers.js.map

/***/ }),

/***/ "./node_modules/web3-eth/lib/esm/index.js":
/*!************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/index.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ALL_EVENTS: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_4__.ALL_EVENTS),
/* harmony export */   ALL_EVENTS_ABI: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_4__.ALL_EVENTS_ABI),
/* harmony export */   LogsSubscription: () => (/* reexport safe */ _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_10__.LogsSubscription),
/* harmony export */   NUMBER_DATA_FORMAT: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_4__.NUMBER_DATA_FORMAT),
/* harmony export */   NewHeadsSubscription: () => (/* reexport safe */ _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_10__.NewHeadsSubscription),
/* harmony export */   NewPendingTransactionsSubscription: () => (/* reexport safe */ _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_10__.NewPendingTransactionsSubscription),
/* harmony export */   SendTxHelper: () => (/* reexport safe */ _utils_send_tx_helper_js__WEBPACK_IMPORTED_MODULE_15__.SendTxHelper),
/* harmony export */   SignatureObjectSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.SignatureObjectSchema),
/* harmony export */   SyncingSubscription: () => (/* reexport safe */ _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_10__.SyncingSubscription),
/* harmony export */   Web3Eth: () => (/* reexport safe */ _web3_eth_js__WEBPACK_IMPORTED_MODULE_1__.Web3Eth),
/* harmony export */   accessListItemSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.accessListItemSchema),
/* harmony export */   accessListResultSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.accessListResultSchema),
/* harmony export */   accessListSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.accessListSchema),
/* harmony export */   accountSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.accountSchema),
/* harmony export */   blockHeaderSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.blockHeaderSchema),
/* harmony export */   blockSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.blockSchema),
/* harmony export */   call: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.call),
/* harmony export */   chainSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.chainSchema),
/* harmony export */   createAccessList: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.createAccessList),
/* harmony export */   customChainSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.customChainSchema),
/* harmony export */   decodeEventABI: () => (/* reexport safe */ _utils_decoding_js__WEBPACK_IMPORTED_MODULE_2__.decodeEventABI),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   detectTransactionType: () => (/* reexport safe */ _utils_detect_transaction_type_js__WEBPACK_IMPORTED_MODULE_11__.detectTransactionType),
/* harmony export */   estimateGas: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.estimateGas),
/* harmony export */   feeHistorySchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.feeHistorySchema),
/* harmony export */   formatTransaction: () => (/* reexport safe */ _utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_8__.formatTransaction),
/* harmony export */   getBalance: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getBalance),
/* harmony export */   getBlock: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getBlock),
/* harmony export */   getBlockNumber: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getBlockNumber),
/* harmony export */   getBlockTransactionCount: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getBlockTransactionCount),
/* harmony export */   getBlockUncleCount: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getBlockUncleCount),
/* harmony export */   getChainId: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getChainId),
/* harmony export */   getCode: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getCode),
/* harmony export */   getCoinbase: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getCoinbase),
/* harmony export */   getFeeHistory: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getFeeHistory),
/* harmony export */   getGasPrice: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getGasPrice),
/* harmony export */   getHashRate: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getHashRate),
/* harmony export */   getLogs: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getLogs),
/* harmony export */   getMaxPriorityFeePerGas: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getMaxPriorityFeePerGas),
/* harmony export */   getPendingTransactions: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getPendingTransactions),
/* harmony export */   getProof: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getProof),
/* harmony export */   getProtocolVersion: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getProtocolVersion),
/* harmony export */   getStorageAt: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getStorageAt),
/* harmony export */   getTransaction: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getTransaction),
/* harmony export */   getTransactionCount: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getTransactionCount),
/* harmony export */   getTransactionFromBlock: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getTransactionFromBlock),
/* harmony export */   getTransactionFromOrToAttr: () => (/* reexport safe */ _utils_transaction_builder_js__WEBPACK_IMPORTED_MODULE_12__.getTransactionFromOrToAttr),
/* harmony export */   getTransactionReceipt: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getTransactionReceipt),
/* harmony export */   getUncle: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getUncle),
/* harmony export */   hardforkSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.hardforkSchema),
/* harmony export */   isAccessList: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.isAccessList),
/* harmony export */   isAccessListEntry: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.isAccessListEntry),
/* harmony export */   isBaseTransaction: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.isBaseTransaction),
/* harmony export */   isMining: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.isMining),
/* harmony export */   isSyncing: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.isSyncing),
/* harmony export */   isTransaction1559Unsigned: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.isTransaction1559Unsigned),
/* harmony export */   isTransaction2930Unsigned: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.isTransaction2930Unsigned),
/* harmony export */   isTransactionCall: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.isTransactionCall),
/* harmony export */   isTransactionLegacyUnsigned: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.isTransactionLegacyUnsigned),
/* harmony export */   isTransactionWithSender: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.isTransactionWithSender),
/* harmony export */   logSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.logSchema),
/* harmony export */   prepareTransactionForSigning: () => (/* reexport safe */ _utils_prepare_transaction_for_signing_js__WEBPACK_IMPORTED_MODULE_9__.prepareTransactionForSigning),
/* harmony export */   registeredSubscriptions: () => (/* reexport safe */ _web3_eth_js__WEBPACK_IMPORTED_MODULE_1__.registeredSubscriptions),
/* harmony export */   sendSignedTransaction: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.sendSignedTransaction),
/* harmony export */   sendTransaction: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.sendTransaction),
/* harmony export */   sign: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.sign),
/* harmony export */   signTransaction: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.signTransaction),
/* harmony export */   signTypedData: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.signTypedData),
/* harmony export */   storageProofSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.storageProofSchema),
/* harmony export */   syncSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.syncSchema),
/* harmony export */   transactionBuilder: () => (/* reexport safe */ _utils_transaction_builder_js__WEBPACK_IMPORTED_MODULE_12__.transactionBuilder),
/* harmony export */   transactionInfoSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.transactionInfoSchema),
/* harmony export */   transactionReceiptSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.transactionReceiptSchema),
/* harmony export */   transactionSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.transactionSchema),
/* harmony export */   trySendTransaction: () => (/* reexport safe */ _utils_try_send_transaction_js__WEBPACK_IMPORTED_MODULE_14__.trySendTransaction),
/* harmony export */   validateBaseChain: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateBaseChain),
/* harmony export */   validateChainInfo: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateChainInfo),
/* harmony export */   validateCustomChainInfo: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateCustomChainInfo),
/* harmony export */   validateFeeMarketGas: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateFeeMarketGas),
/* harmony export */   validateGas: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateGas),
/* harmony export */   validateHardfork: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateHardfork),
/* harmony export */   validateLegacyGas: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateLegacyGas),
/* harmony export */   validateTransactionCall: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateTransactionCall),
/* harmony export */   validateTransactionForSigning: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateTransactionForSigning),
/* harmony export */   validateTransactionWithSender: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateTransactionWithSender),
/* harmony export */   waitForTransactionReceipt: () => (/* reexport safe */ _utils_wait_for_transaction_receipt_js__WEBPACK_IMPORTED_MODULE_13__.waitForTransactionReceipt),
/* harmony export */   withdrawalsSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.withdrawalsSchema)
/* harmony export */ });
/* harmony import */ var setimmediate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! setimmediate */ "./node_modules/setimmediate/setImmediate.js");
/* harmony import */ var _web3_eth_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./web3_eth.js */ "./node_modules/web3-eth/lib/esm/web3_eth.js");
/* harmony import */ var _utils_decoding_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/decoding.js */ "./node_modules/web3-eth/lib/esm/utils/decoding.js");
/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./schemas.js */ "./node_modules/web3-eth/lib/esm/schemas.js");
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants.js */ "./node_modules/web3-eth/lib/esm/constants.js");
/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types.js */ "./node_modules/web3-eth/lib/esm/types.js");
/* harmony import */ var _validation_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./validation.js */ "./node_modules/web3-eth/lib/esm/validation.js");
/* harmony import */ var _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./rpc_method_wrappers.js */ "./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js");
/* harmony import */ var _utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/format_transaction.js */ "./node_modules/web3-eth/lib/esm/utils/format_transaction.js");
/* harmony import */ var _utils_prepare_transaction_for_signing_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/prepare_transaction_for_signing.js */ "./node_modules/web3-eth/lib/esm/utils/prepare_transaction_for_signing.js");
/* harmony import */ var _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./web3_subscriptions.js */ "./node_modules/web3-eth/lib/esm/web3_subscriptions.js");
/* harmony import */ var _utils_detect_transaction_type_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/detect_transaction_type.js */ "./node_modules/web3-eth/lib/esm/utils/detect_transaction_type.js");
/* harmony import */ var _utils_transaction_builder_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/transaction_builder.js */ "./node_modules/web3-eth/lib/esm/utils/transaction_builder.js");
/* harmony import */ var _utils_wait_for_transaction_receipt_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utils/wait_for_transaction_receipt.js */ "./node_modules/web3-eth/lib/esm/utils/wait_for_transaction_receipt.js");
/* harmony import */ var _utils_try_send_transaction_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utils/try_send_transaction.js */ "./node_modules/web3-eth/lib/esm/utils/try_send_transaction.js");
/* harmony import */ var _utils_send_tx_helper_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./utils/send_tx_helper.js */ "./node_modules/web3-eth/lib/esm/utils/send_tx_helper.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * The `web3-eth` package allows you to interact with an Ethereum blockchain and Ethereum smart contracts.
 *
 * To use this package standalone and use its methods use:
 * ```ts
 * import { Web3Context } from 'web3-core';
 * import { BlockTags } from 'web3-types';
 * import { DEFAULT_RETURN_FORMAT } from 'web3-types';
 * import { getBalance} from 'web3-eth';
 *
 * getBalance(
 *      new Web3Context('http://127.0.0.1:8545'),
 *      '0x407d73d8a49eeb85d32cf465507dd71d507100c1',
 *      BlockTags.LATEST,
 *      DEFAULT_RETURN_FORMAT
 * ).then(console.log);
 * > 1000000000000n
 * ```
 *
 * To use this package within the `web3` object use:
 * ```ts
 * import Web3 from 'web3';
 *
 * const web3 = new Web3(Web3.givenProvider || 'ws://some.local-or-remote.node:8546');
 * web3.eth.getBalance('0x407d73d8a49eeb85d32cf465507dd71d507100c1').then(console.log);
 * > 1000000000000n
 *```
 *
 * With `web3-eth` you can also subscribe (if supported by provider) to events in the Ethereum Blockchain, using the `subscribe` function. See more at the {@link Web3Eth.subscribe} function.
 */
/**
 *
 */

















/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_web3_eth_js__WEBPACK_IMPORTED_MODULE_1__.Web3Eth);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js":
/*!**************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   call: () => (/* binding */ call),
/* harmony export */   createAccessList: () => (/* binding */ createAccessList),
/* harmony export */   estimateGas: () => (/* binding */ estimateGas),
/* harmony export */   getBalance: () => (/* binding */ getBalance),
/* harmony export */   getBlock: () => (/* binding */ getBlock),
/* harmony export */   getBlockNumber: () => (/* binding */ getBlockNumber),
/* harmony export */   getBlockTransactionCount: () => (/* binding */ getBlockTransactionCount),
/* harmony export */   getBlockUncleCount: () => (/* binding */ getBlockUncleCount),
/* harmony export */   getChainId: () => (/* binding */ getChainId),
/* harmony export */   getCode: () => (/* binding */ getCode),
/* harmony export */   getCoinbase: () => (/* binding */ getCoinbase),
/* harmony export */   getFeeHistory: () => (/* binding */ getFeeHistory),
/* harmony export */   getGasPrice: () => (/* binding */ getGasPrice),
/* harmony export */   getHashRate: () => (/* binding */ getHashRate),
/* harmony export */   getLogs: () => (/* binding */ getLogs),
/* harmony export */   getMaxPriorityFeePerGas: () => (/* binding */ getMaxPriorityFeePerGas),
/* harmony export */   getPendingTransactions: () => (/* binding */ getPendingTransactions),
/* harmony export */   getProof: () => (/* binding */ getProof),
/* harmony export */   getProtocolVersion: () => (/* binding */ getProtocolVersion),
/* harmony export */   getStorageAt: () => (/* binding */ getStorageAt),
/* harmony export */   getTransaction: () => (/* binding */ getTransaction),
/* harmony export */   getTransactionCount: () => (/* binding */ getTransactionCount),
/* harmony export */   getTransactionFromBlock: () => (/* binding */ getTransactionFromBlock),
/* harmony export */   getTransactionReceipt: () => (/* binding */ getTransactionReceipt),
/* harmony export */   getUncle: () => (/* binding */ getUncle),
/* harmony export */   isMining: () => (/* binding */ isMining),
/* harmony export */   isSyncing: () => (/* binding */ isSyncing),
/* harmony export */   sendSignedTransaction: () => (/* binding */ sendSignedTransaction),
/* harmony export */   sendTransaction: () => (/* binding */ sendTransaction),
/* harmony export */   sign: () => (/* binding */ sign),
/* harmony export */   signTransaction: () => (/* binding */ signTransaction),
/* harmony export */   signTypedData: () => (/* binding */ signTypedData)
/* harmony export */ });
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/* harmony import */ var web3_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-core */ "./node_modules/web3-core/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_eth_accounts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-eth-accounts */ "./node_modules/web3-eth-accounts/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! web3-rpc-methods */ "./node_modules/web3-rpc-methods/lib/esm/index.js");
/* harmony import */ var _utils_decode_signed_transaction_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/decode_signed_transaction.js */ "./node_modules/web3-eth/lib/esm/utils/decode_signed_transaction.js");
/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./schemas.js */ "./node_modules/web3-eth/lib/esm/schemas.js");
/* harmony import */ var _utils_transaction_builder_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/transaction_builder.js */ "./node_modules/web3-eth/lib/esm/utils/transaction_builder.js");
/* harmony import */ var _utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/format_transaction.js */ "./node_modules/web3-eth/lib/esm/utils/format_transaction.js");
/* harmony import */ var _utils_try_send_transaction_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/try_send_transaction.js */ "./node_modules/web3-eth/lib/esm/utils/try_send_transaction.js");
/* harmony import */ var _utils_wait_for_transaction_receipt_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/wait_for_transaction_receipt.js */ "./node_modules/web3-eth/lib/esm/utils/wait_for_transaction_receipt.js");
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./constants.js */ "./node_modules/web3-eth/lib/esm/constants.js");
/* harmony import */ var _utils_send_tx_helper_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utils/send_tx_helper.js */ "./node_modules/web3-eth/lib/esm/utils/send_tx_helper.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
// Disabling because returnTypes must be last param to match 1.x params
/* eslint-disable default-param-last */









// eslint-disable-next-line import/no-cycle


// eslint-disable-next-line import/no-cycle

// eslint-disable-next-line import/no-cycle


// eslint-disable-next-line import/no-cycle

/**
 * View additional documentations here: {@link Web3Eth.getProtocolVersion}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
const getProtocolVersion = (web3Context) => __awaiter(void 0, void 0, void 0, function* () { return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getProtocolVersion(web3Context.requestManager); });
// TODO Add returnFormat parameter
/**
 * View additional documentations here: {@link Web3Eth.isSyncing}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
const isSyncing = (web3Context) => __awaiter(void 0, void 0, void 0, function* () { return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getSyncing(web3Context.requestManager); });
// TODO consider adding returnFormat parameter (to format address as bytes)
/**
 * View additional documentations here: {@link Web3Eth.getCoinbase}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
const getCoinbase = (web3Context) => __awaiter(void 0, void 0, void 0, function* () { return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getCoinbase(web3Context.requestManager); });
/**
 * View additional documentations here: {@link Web3Eth.isMining}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
const isMining = (web3Context) => __awaiter(void 0, void 0, void 0, function* () { return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getMining(web3Context.requestManager); });
/**
 * View additional documentations here: {@link Web3Eth.getHashRate}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function getHashRate(web3Context, returnFormat) {
    return __awaiter(this, void 0, void 0, function* () {
        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getHashRate(web3Context.requestManager);
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
    });
}
/**
 * View additional documentations here: {@link Web3Eth.getGasPrice}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function getGasPrice(web3Context, returnFormat) {
    return __awaiter(this, void 0, void 0, function* () {
        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getGasPrice(web3Context.requestManager);
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
    });
}
/**
 * View additional documentations here: {@link Web3Eth.getMaxPriorityFeePerGas}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function getMaxPriorityFeePerGas(web3Context, returnFormat) {
    return __awaiter(this, void 0, void 0, function* () {
        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getMaxPriorityFeePerGas(web3Context.requestManager);
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
    });
}
/**
 * View additional documentations here: {@link Web3Eth.getBlockNumber}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function getBlockNumber(web3Context, returnFormat) {
    return __awaiter(this, void 0, void 0, function* () {
        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getBlockNumber(web3Context.requestManager);
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
    });
}
/**
 * View additional documentations here: {@link Web3Eth.getBalance}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function getBalance(web3Context_1, address_1) {
    return __awaiter(this, arguments, void 0, function* (web3Context, address, blockNumber = web3Context.defaultBlock, returnFormat) {
        const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(blockNumber)
            ? blockNumber
            : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, blockNumber, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getBalance(web3Context.requestManager, address, blockNumberFormatted);
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
    });
}
/**
 * View additional documentations here: {@link Web3Eth.getStorageAt}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function getStorageAt(web3Context_1, address_1, storageSlot_1) {
    return __awaiter(this, arguments, void 0, function* (web3Context, address, storageSlot, blockNumber = web3Context.defaultBlock, returnFormat) {
        const storageSlotFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, storageSlot, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
        const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(blockNumber)
            ? blockNumber
            : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, blockNumber, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getStorageAt(web3Context.requestManager, address, storageSlotFormatted, blockNumberFormatted);
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
    });
}
/**
 * View additional documentations here: {@link Web3Eth.getCode}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function getCode(web3Context_1, address_1) {
    return __awaiter(this, arguments, void 0, function* (web3Context, address, blockNumber = web3Context.defaultBlock, returnFormat) {
        const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(blockNumber)
            ? blockNumber
            : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, blockNumber, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getCode(web3Context.requestManager, address, blockNumberFormatted);
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
    });
}
/**
 * View additional documentations here: {@link Web3Eth.getBlock}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function getBlock(web3Context_1) {
    return __awaiter(this, arguments, void 0, function* (web3Context, block = web3Context.defaultBlock, hydrated = false, returnFormat) {
        var _a;
        let response;
        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBytes)(block)) {
            const blockHashFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes32' }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getBlockByHash(web3Context.requestManager, blockHashFormatted, hydrated);
        }
        else {
            const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(block)
                ? block
                : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getBlockByNumber(web3Context.requestManager, blockNumberFormatted, hydrated);
        }
        const res = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.blockSchema, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(res)) {
            const result = Object.assign(Object.assign({}, res), { transactions: (_a = res.transactions) !== null && _a !== void 0 ? _a : [] });
            return result;
        }
        return res;
    });
}
/**
 * View additional documentations here: {@link Web3Eth.getBlockTransactionCount}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function getBlockTransactionCount(web3Context_1) {
    return __awaiter(this, arguments, void 0, function* (web3Context, block = web3Context.defaultBlock, returnFormat) {
        let response;
        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBytes)(block)) {
            const blockHashFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes32' }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getBlockTransactionCountByHash(web3Context.requestManager, blockHashFormatted);
        }
        else {
            const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(block)
                ? block
                : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getBlockTransactionCountByNumber(web3Context.requestManager, blockNumberFormatted);
        }
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
    });
}
/**
 * View additional documentations here: {@link Web3Eth.getBlockUncleCount}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function getBlockUncleCount(web3Context_1) {
    return __awaiter(this, arguments, void 0, function* (web3Context, block = web3Context.defaultBlock, returnFormat) {
        let response;
        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBytes)(block)) {
            const blockHashFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes32' }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getUncleCountByBlockHash(web3Context.requestManager, blockHashFormatted);
        }
        else {
            const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(block)
                ? block
                : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getUncleCountByBlockNumber(web3Context.requestManager, blockNumberFormatted);
        }
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
    });
}
/**
 * View additional documentations here: {@link Web3Eth.getUncle}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function getUncle(web3Context_1) {
    return __awaiter(this, arguments, void 0, function* (web3Context, block = web3Context.defaultBlock, uncleIndex, returnFormat) {
        const uncleIndexFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, uncleIndex, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
        let response;
        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBytes)(block)) {
            const blockHashFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes32' }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getUncleByBlockHashAndIndex(web3Context.requestManager, blockHashFormatted, uncleIndexFormatted);
        }
        else {
            const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(block)
                ? block
                : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getUncleByBlockNumberAndIndex(web3Context.requestManager, blockNumberFormatted, uncleIndexFormatted);
        }
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.blockSchema, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
    });
}
/**
 * View additional documentations here: {@link Web3Eth.getTransaction}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function getTransaction(web3Context_1, transactionHash_1) {
    return __awaiter(this, arguments, void 0, function* (web3Context, transactionHash, returnFormat = web3Context.defaultReturnFormat) {
        const transactionHashFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes32' }, transactionHash, web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT);
        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getTransactionByHash(web3Context.requestManager, transactionHashFormatted);
        return (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(response)
            ? response
            : (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__.formatTransaction)(response, returnFormat, {
                transactionSchema: web3Context.config.customTransactionSchema,
                fillInputAndData: true,
            });
    });
}
/**
 * View additional documentations here: {@link Web3Eth.getPendingTransactions}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function getPendingTransactions(web3Context, returnFormat) {
    return __awaiter(this, void 0, void 0, function* () {
        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getPendingTransactions(web3Context.requestManager);
        return response.map(transaction => (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__.formatTransaction)(transaction, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat, {
            transactionSchema: web3Context.config.customTransactionSchema,
            fillInputAndData: true,
        }));
    });
}
/**
 * View additional documentations here: {@link Web3Eth.getTransactionFromBlock}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function getTransactionFromBlock(web3Context_1) {
    return __awaiter(this, arguments, void 0, function* (web3Context, block = web3Context.defaultBlock, transactionIndex, returnFormat) {
        const transactionIndexFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, transactionIndex, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
        let response;
        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBytes)(block)) {
            const blockHashFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes32' }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getTransactionByBlockHashAndIndex(web3Context.requestManager, blockHashFormatted, transactionIndexFormatted);
        }
        else {
            const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(block)
                ? block
                : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getTransactionByBlockNumberAndIndex(web3Context.requestManager, blockNumberFormatted, transactionIndexFormatted);
        }
        return (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(response)
            ? response
            : (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__.formatTransaction)(response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat, {
                transactionSchema: web3Context.config.customTransactionSchema,
                fillInputAndData: true,
            });
    });
}
/**
 * View additional documentations here: {@link Web3Eth.getTransactionReceipt}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function getTransactionReceipt(web3Context, transactionHash, returnFormat) {
    return __awaiter(this, void 0, void 0, function* () {
        const transactionHashFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes32' }, transactionHash, web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT);
        let response;
        try {
            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getTransactionReceipt(web3Context.requestManager, transactionHashFormatted);
        }
        catch (error) {
            // geth indexing error, we poll until transactions stopped indexing
            if (typeof error === 'object' &&
                !(0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(error) &&
                'message' in error &&
                error.message === 'transaction indexing is in progress') {
                console.warn('Transaction indexing is in progress.');
            }
            else {
                throw error;
            }
        }
        return (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(response)
            ? response
            : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.transactionReceiptSchema, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
    });
}
/**
 * View additional documentations here: {@link Web3Eth.getTransactionCount}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function getTransactionCount(web3Context_1, address_1) {
    return __awaiter(this, arguments, void 0, function* (web3Context, address, blockNumber = web3Context.defaultBlock, returnFormat) {
        const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(blockNumber)
            ? blockNumber
            : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, blockNumber, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getTransactionCount(web3Context.requestManager, address, blockNumberFormatted);
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
    });
}
/**
 * View additional documentations here: {@link Web3Eth.sendTransaction}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function sendTransaction(web3Context, transactionObj, returnFormat, options = { checkRevertBeforeSending: true }, transactionMiddleware) {
    const promiEvent = new web3_core__WEBPACK_IMPORTED_MODULE_1__.Web3PromiEvent((resolve, reject) => {
        setImmediate(() => {
            (() => __awaiter(this, void 0, void 0, function* () {
                const sendTxHelper = new _utils_send_tx_helper_js__WEBPACK_IMPORTED_MODULE_14__.SendTxHelper({
                    web3Context,
                    promiEvent,
                    options,
                    returnFormat,
                });
                let transaction = Object.assign({}, transactionObj);
                if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(transactionMiddleware)) {
                    transaction = yield transactionMiddleware.processTransaction(transaction);
                }
                let transactionFormatted = (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__.formatTransaction)(Object.assign(Object.assign({}, transaction), { from: (0,_utils_transaction_builder_js__WEBPACK_IMPORTED_MODULE_9__.getTransactionFromOrToAttr)('from', web3Context, transaction), to: (0,_utils_transaction_builder_js__WEBPACK_IMPORTED_MODULE_9__.getTransactionFromOrToAttr)('to', web3Context, transaction) }), web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT, {
                    transactionSchema: web3Context.config.customTransactionSchema,
                });
                try {
                    transactionFormatted = (yield sendTxHelper.populateGasPrice({
                        transaction,
                        transactionFormatted,
                    }));
                    yield sendTxHelper.checkRevertBeforeSending(transactionFormatted);
                    sendTxHelper.emitSending(transactionFormatted);
                    let wallet;
                    if (web3Context.wallet && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(transactionFormatted.from)) {
                        wallet = web3Context.wallet.get(transactionFormatted.from);
                    }
                    const transactionHash = yield sendTxHelper.signAndSend({
                        wallet,
                        tx: transactionFormatted,
                    });
                    const transactionHashFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes32' }, transactionHash, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
                    sendTxHelper.emitSent(transactionFormatted);
                    sendTxHelper.emitTransactionHash(transactionHashFormatted);
                    const transactionReceipt = yield (0,_utils_wait_for_transaction_receipt_js__WEBPACK_IMPORTED_MODULE_12__.waitForTransactionReceipt)(web3Context, transactionHash, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
                    const transactionReceiptFormatted = sendTxHelper.getReceiptWithEvents((0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.transactionReceiptSchema, transactionReceipt, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat));
                    sendTxHelper.emitReceipt(transactionReceiptFormatted);
                    resolve(yield sendTxHelper.handleResolve({
                        receipt: transactionReceiptFormatted,
                        tx: transactionFormatted,
                    }));
                    sendTxHelper.emitConfirmation({
                        receipt: transactionReceiptFormatted,
                        transactionHash,
                    });
                }
                catch (error) {
                    reject(yield sendTxHelper.handleError({
                        error,
                        tx: transactionFormatted,
                    }));
                }
            }))();
        });
    });
    return promiEvent;
}
/**
 * View additional documentations here: {@link Web3Eth.sendSignedTransaction}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function sendSignedTransaction(web3Context, signedTransaction, returnFormat, options = { checkRevertBeforeSending: true }) {
    // TODO - Promise returned in function argument where a void return was expected
    // eslint-disable-next-line @typescript-eslint/no-misused-promises
    const promiEvent = new web3_core__WEBPACK_IMPORTED_MODULE_1__.Web3PromiEvent((resolve, reject) => {
        setImmediate(() => {
            (() => __awaiter(this, void 0, void 0, function* () {
                const sendTxHelper = new _utils_send_tx_helper_js__WEBPACK_IMPORTED_MODULE_14__.SendTxHelper({
                    web3Context,
                    promiEvent,
                    options,
                    returnFormat,
                });
                // Formatting signedTransaction to be send to RPC endpoint
                const signedTransactionFormattedHex = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes' }, signedTransaction, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
                const unSerializedTransaction = web3_eth_accounts__WEBPACK_IMPORTED_MODULE_3__.TransactionFactory.fromSerializedData((0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.bytesToUint8Array)((0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.hexToBytes)(signedTransactionFormattedHex)));
                const unSerializedTransactionWithFrom = Object.assign(Object.assign({}, unSerializedTransaction.toJSON()), { 
                    // Some providers will default `from` to address(0) causing the error
                    // reported from `eth_call` to not be the reason the user's tx failed
                    // e.g. `eth_call` will return an Out of Gas error for a failed
                    // smart contract execution contract, because the sender, address(0),
                    // has no balance to pay for the gas of the transaction execution
                    from: unSerializedTransaction.getSenderAddress().toString() });
                try {
                    const { v, r, s } = unSerializedTransactionWithFrom, txWithoutSigParams = __rest(unSerializedTransactionWithFrom, ["v", "r", "s"]);
                    yield sendTxHelper.checkRevertBeforeSending(txWithoutSigParams);
                    sendTxHelper.emitSending(signedTransactionFormattedHex);
                    const transactionHash = yield (0,_utils_try_send_transaction_js__WEBPACK_IMPORTED_MODULE_11__.trySendTransaction)(web3Context, () => __awaiter(this, void 0, void 0, function* () {
                        return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.sendRawTransaction(web3Context.requestManager, signedTransactionFormattedHex);
                    }));
                    sendTxHelper.emitSent(signedTransactionFormattedHex);
                    const transactionHashFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes32' }, transactionHash, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
                    sendTxHelper.emitTransactionHash(transactionHashFormatted);
                    const transactionReceipt = yield (0,_utils_wait_for_transaction_receipt_js__WEBPACK_IMPORTED_MODULE_12__.waitForTransactionReceipt)(web3Context, transactionHash, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
                    const transactionReceiptFormatted = sendTxHelper.getReceiptWithEvents((0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.transactionReceiptSchema, transactionReceipt, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat));
                    sendTxHelper.emitReceipt(transactionReceiptFormatted);
                    resolve(yield sendTxHelper.handleResolve({
                        receipt: transactionReceiptFormatted,
                        tx: unSerializedTransactionWithFrom,
                    }));
                    sendTxHelper.emitConfirmation({
                        receipt: transactionReceiptFormatted,
                        transactionHash,
                    });
                }
                catch (error) {
                    reject(yield sendTxHelper.handleError({
                        error,
                        tx: unSerializedTransactionWithFrom,
                    }));
                }
            }))();
        });
    });
    return promiEvent;
}
/**
 * View additional documentations here: {@link Web3Eth.sign}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function sign(web3Context_1, message_1, addressOrIndex_1) {
    return __awaiter(this, arguments, void 0, function* (web3Context, message, addressOrIndex, returnFormat = web3Context.defaultReturnFormat) {
        var _a;
        const messageFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes' }, message, web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT);
        if ((_a = web3Context.wallet) === null || _a === void 0 ? void 0 : _a.get(addressOrIndex)) {
            const wallet = web3Context.wallet.get(addressOrIndex);
            const signed = wallet.sign(messageFormatted);
            return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.SignatureObjectSchema, signed, returnFormat);
        }
        if (typeof addressOrIndex === 'number') {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_5__.SignatureError(message, 'RPC method "eth_sign" does not support index signatures');
        }
        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.sign(web3Context.requestManager, addressOrIndex, messageFormatted);
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes' }, response, returnFormat);
    });
}
/**
 * View additional documentations here: {@link Web3Eth.signTransaction}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function signTransaction(web3Context_1, transaction_1) {
    return __awaiter(this, arguments, void 0, function* (web3Context, transaction, returnFormat = web3Context.defaultReturnFormat) {
        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.signTransaction(web3Context.requestManager, (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__.formatTransaction)(transaction, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT, {
            transactionSchema: web3Context.config.customTransactionSchema,
        }));
        // Some clients only return the encoded signed transaction (e.g. Ganache)
        // while clients such as Geth return the desired SignedTransactionInfoAPI object
        return (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isString)(response)
            ? (0,_utils_decode_signed_transaction_js__WEBPACK_IMPORTED_MODULE_7__.decodeSignedTransaction)(response, returnFormat, {
                fillInputAndData: true,
            })
            : {
                raw: (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes' }, response.raw, returnFormat),
                tx: (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__.formatTransaction)(response.tx, returnFormat, {
                    transactionSchema: web3Context.config.customTransactionSchema,
                    fillInputAndData: true,
                }),
            };
    });
}
// TODO Decide what to do with transaction.to
// https://github.com/ChainSafe/web3.js/pull/4525#issuecomment-982330076
/**
 * View additional documentations here: {@link Web3Eth.call}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function call(web3Context_1, transaction_1) {
    return __awaiter(this, arguments, void 0, function* (web3Context, transaction, blockNumber = web3Context.defaultBlock, returnFormat = web3Context.defaultReturnFormat) {
        const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(blockNumber)
            ? blockNumber
            : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, blockNumber, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.call(web3Context.requestManager, (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__.formatTransaction)(transaction, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT, {
            transactionSchema: web3Context.config.customTransactionSchema,
        }), blockNumberFormatted);
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes' }, response, returnFormat);
    });
}
// TODO - Investigate whether response is padded as 1.x docs suggest
/**
 * View additional documentations here: {@link Web3Eth.estimateGas}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function estimateGas(web3Context_1, transaction_1) {
    return __awaiter(this, arguments, void 0, function* (web3Context, transaction, blockNumber = web3Context.defaultBlock, returnFormat) {
        const transactionFormatted = (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__.formatTransaction)(transaction, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT, {
            transactionSchema: web3Context.config.customTransactionSchema,
        });
        const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(blockNumber)
            ? blockNumber
            : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, blockNumber, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.estimateGas(web3Context.requestManager, transactionFormatted, blockNumberFormatted);
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
    });
}
// TODO - Add input formatting to filter
/**
 * View additional documentations here: {@link Web3Eth.getPastLogs}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function getLogs(web3Context, filter, returnFormat) {
    return __awaiter(this, void 0, void 0, function* () {
        // format type bigint or number toBlock and fromBlock to hexstring.
        let { toBlock, fromBlock } = filter;
        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(toBlock)) {
            if (typeof toBlock === 'number' || typeof toBlock === 'bigint') {
                toBlock = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.numberToHex)(toBlock);
            }
        }
        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(fromBlock)) {
            if (typeof fromBlock === 'number' || typeof fromBlock === 'bigint') {
                fromBlock = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.numberToHex)(fromBlock);
            }
        }
        const formattedFilter = Object.assign(Object.assign({}, filter), { fromBlock, toBlock });
        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getLogs(web3Context.requestManager, formattedFilter);
        const result = response.map(res => {
            if (typeof res === 'string') {
                return res;
            }
            return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.logSchema, res, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
        });
        return result;
    });
}
/**
 * View additional documentations here: {@link Web3Eth.getChainId}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function getChainId(web3Context, returnFormat) {
    return __awaiter(this, void 0, void 0, function* () {
        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getChainId(web3Context.requestManager);
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, 
        // Response is number in hex formatted string
        response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
    });
}
/**
 * View additional documentations here: {@link Web3Eth.getProof}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function getProof(web3Context_1, address_1, storageKeys_1) {
    return __awaiter(this, arguments, void 0, function* (web3Context, address, storageKeys, blockNumber = web3Context.defaultBlock, returnFormat) {
        const storageKeysFormatted = storageKeys.map(storageKey => (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes' }, storageKey, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT));
        const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(blockNumber)
            ? blockNumber
            : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, blockNumber, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getProof(web3Context.requestManager, address, storageKeysFormatted, blockNumberFormatted);
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.accountSchema, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
    });
}
// TODO Throwing an error with Geth, but not Infura
// TODO gasUsedRatio and reward not formatting
/**
 * View additional documentations here: {@link Web3Eth.getFeeHistory}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function getFeeHistory(web3Context_1, blockCount_1) {
    return __awaiter(this, arguments, void 0, function* (web3Context, blockCount, newestBlock = web3Context.defaultBlock, rewardPercentiles, returnFormat) {
        const blockCountFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, blockCount, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
        const newestBlockFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(newestBlock)
            ? newestBlock
            : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, newestBlock, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
        const rewardPercentilesFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({
            type: 'array',
            items: {
                format: 'uint',
            },
        }, rewardPercentiles, _constants_js__WEBPACK_IMPORTED_MODULE_13__.NUMBER_DATA_FORMAT);
        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getFeeHistory(web3Context.requestManager, blockCountFormatted, newestBlockFormatted, rewardPercentilesFormatted);
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.feeHistorySchema, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
    });
}
/**
 * View additional documentations here: {@link Web3Eth.createAccessList}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function createAccessList(web3Context_1, transaction_1) {
    return __awaiter(this, arguments, void 0, function* (web3Context, transaction, blockNumber = web3Context.defaultBlock, returnFormat) {
        const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(blockNumber)
            ? blockNumber
            : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, blockNumber, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
        const response = (yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.createAccessList(web3Context.requestManager, (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__.formatTransaction)(transaction, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT, {
            transactionSchema: web3Context.config.customTransactionSchema,
        }), blockNumberFormatted));
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.accessListResultSchema, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
    });
}
/**
 * View additional documentations here: {@link Web3Eth.signTypedData}
 * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 */
function signTypedData(web3Context, address, typedData, useLegacy, returnFormat) {
    return __awaiter(this, void 0, void 0, function* () {
        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.signTypedData(web3Context.requestManager, address, typedData, useLegacy);
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);
    });
}
//# sourceMappingURL=rpc_method_wrappers.js.map

/***/ }),

/***/ "./node_modules/web3-eth/lib/esm/schemas.js":
/*!**************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/schemas.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SignatureObjectSchema: () => (/* binding */ SignatureObjectSchema),
/* harmony export */   accessListItemSchema: () => (/* binding */ accessListItemSchema),
/* harmony export */   accessListResultSchema: () => (/* binding */ accessListResultSchema),
/* harmony export */   accessListSchema: () => (/* binding */ accessListSchema),
/* harmony export */   accountSchema: () => (/* binding */ accountSchema),
/* harmony export */   blockHeaderSchema: () => (/* binding */ blockHeaderSchema),
/* harmony export */   blockSchema: () => (/* binding */ blockSchema),
/* harmony export */   chainSchema: () => (/* binding */ chainSchema),
/* harmony export */   customChainSchema: () => (/* binding */ customChainSchema),
/* harmony export */   feeHistorySchema: () => (/* binding */ feeHistorySchema),
/* harmony export */   hardforkSchema: () => (/* binding */ hardforkSchema),
/* harmony export */   logSchema: () => (/* binding */ logSchema),
/* harmony export */   storageProofSchema: () => (/* binding */ storageProofSchema),
/* harmony export */   syncSchema: () => (/* binding */ syncSchema),
/* harmony export */   transactionInfoSchema: () => (/* binding */ transactionInfoSchema),
/* harmony export */   transactionReceiptSchema: () => (/* binding */ transactionReceiptSchema),
/* harmony export */   transactionSchema: () => (/* binding */ transactionSchema),
/* harmony export */   withdrawalsSchema: () => (/* binding */ withdrawalsSchema)
/* harmony export */ });
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
const accessListItemSchema = {
    type: 'object',
    properties: {
        address: {
            format: 'address',
        },
        storageKeys: {
            type: 'array',
            items: {
                format: 'bytes32',
            },
        },
    },
};
const accessListSchema = {
    type: 'array',
    items: Object.assign({}, accessListItemSchema),
};
const accessListResultSchema = {
    type: 'object',
    properties: {
        accessList: Object.assign({}, accessListSchema),
        gasUsed: {
            type: 'string',
        },
    },
};
const chainSchema = {
    type: 'string',
    enum: ['goerli', 'kovan', 'mainnet', 'rinkeby', 'ropsten', 'sepolia'],
};
const hardforkSchema = {
    type: 'string',
    enum: [
        'arrowGlacier',
        'berlin',
        'byzantium',
        'chainstart',
        'constantinople',
        'dao',
        'homestead',
        'istanbul',
        'london',
        'merge',
        'muirGlacier',
        'petersburg',
        'shanghai',
        'spuriousDragon',
        'tangerineWhistle',
    ],
};
const customChainSchema = {
    type: 'object',
    properties: {
        name: {
            format: 'string',
        },
        networkId: {
            format: 'uint',
        },
        chainId: {
            format: 'uint',
        },
    },
};
const transactionSchema = {
    type: 'object',
    properties: {
        from: {
            format: 'address',
        },
        to: {
            oneOf: [{ format: 'address' }, { type: 'null' }],
        },
        value: {
            format: 'uint',
        },
        gas: {
            format: 'uint',
        },
        gasPrice: {
            format: 'uint',
        },
        effectiveGasPrice: {
            format: 'uint',
        },
        type: {
            format: 'uint',
        },
        maxFeePerGas: {
            format: 'uint',
        },
        maxPriorityFeePerGas: {
            format: 'uint',
        },
        accessList: Object.assign({}, accessListSchema),
        data: {
            format: 'bytes',
        },
        input: {
            format: 'bytes',
        },
        nonce: {
            format: 'uint',
        },
        chain: Object.assign({}, chainSchema),
        hardfork: Object.assign({}, hardforkSchema),
        chainId: {
            format: 'uint',
        },
        networkId: {
            format: 'uint',
        },
        common: {
            type: 'object',
            properties: {
                customChain: Object.assign({}, customChainSchema),
                baseChain: Object.assign({}, chainSchema),
                hardfork: Object.assign({}, hardforkSchema),
            },
        },
        gasLimit: {
            format: 'uint',
        },
        v: {
            format: 'uint',
        },
        r: {
            format: 'bytes32',
        },
        s: {
            format: 'bytes32',
        },
    },
};
const transactionInfoSchema = {
    type: 'object',
    properties: Object.assign(Object.assign({}, transactionSchema.properties), { blockHash: {
            format: 'bytes32',
        }, blockNumber: {
            format: 'uint',
        }, hash: {
            format: 'bytes32',
        }, transactionIndex: {
            format: 'uint',
        }, from: {
            format: 'address',
        }, to: {
            oneOf: [{ format: 'address' }, { type: 'null' }],
        }, value: {
            format: 'uint',
        }, gas: {
            format: 'uint',
        }, gasPrice: {
            format: 'uint',
        }, effectiveGasPrice: {
            format: 'uint',
        }, type: {
            format: 'uint',
        }, maxFeePerGas: {
            format: 'uint',
        }, maxPriorityFeePerGas: {
            format: 'uint',
        }, accessList: Object.assign({}, accessListSchema), data: {
            format: 'bytes',
        }, input: {
            format: 'bytes',
        }, nonce: {
            format: 'uint',
        }, gasLimit: {
            format: 'uint',
        }, v: {
            format: 'uint',
        }, r: {
            format: 'bytes32',
        }, s: {
            format: 'bytes32',
        } }),
};
const withdrawalsSchema = {
    type: 'object',
    properties: {
        index: {
            format: 'uint',
        },
        validatorIndex: {
            format: 'uint',
        },
        address: {
            format: 'address',
        },
        amount: {
            format: 'uint',
        },
    },
};
const blockSchema = {
    type: 'object',
    properties: {
        baseFeePerGas: {
            format: 'uint',
        },
        blobGasUsed: {
            format: 'uint',
        },
        difficulty: {
            format: 'uint',
        },
        excessBlobGas: {
            format: 'uint',
        },
        extraData: {
            format: 'bytes',
        },
        gasLimit: {
            format: 'uint',
        },
        gasUsed: {
            format: 'uint',
        },
        hash: {
            format: 'bytes32',
        },
        logsBloom: {
            format: 'bytes256',
        },
        miner: {
            format: 'bytes',
        },
        mixHash: {
            format: 'bytes32',
        },
        nonce: {
            format: 'uint',
        },
        number: {
            format: 'uint',
        },
        parentBeaconBlockRoot: {
            format: 'bytes32',
        },
        parentHash: {
            format: 'bytes32',
        },
        receiptsRoot: {
            format: 'bytes32',
        },
        sha3Uncles: {
            format: 'bytes32',
        },
        size: {
            format: 'uint',
        },
        stateRoot: {
            format: 'bytes32',
        },
        timestamp: {
            format: 'uint',
        },
        totalDifficulty: {
            format: 'uint',
        },
        transactions: {
            oneOf: [
                {
                    type: 'array',
                    items: Object.assign({}, transactionInfoSchema),
                },
                {
                    type: 'array',
                    items: {
                        format: 'bytes32',
                    },
                },
            ],
        },
        transactionsRoot: {
            format: 'bytes32',
        },
        uncles: {
            type: 'array',
            items: {
                format: 'bytes32',
            },
        },
        withdrawals: {
            type: 'array',
            items: Object.assign({}, withdrawalsSchema),
        },
        withdrawalsRoot: {
            format: 'bytes32',
        },
    },
};
const blockHeaderSchema = {
    type: 'object',
    properties: {
        author: {
            format: 'bytes32',
        },
        excessDataGas: {
            format: 'uint',
        },
        baseFeePerGas: {
            format: 'uint',
        },
        blobGasUsed: {
            format: 'uint',
        },
        difficulty: {
            format: 'uint',
        },
        excessBlobGas: {
            format: 'uint',
        },
        extraData: {
            format: 'bytes',
        },
        gasLimit: {
            format: 'uint',
        },
        gasUsed: {
            format: 'uint',
        },
        hash: {
            format: 'bytes32',
        },
        logsBloom: {
            format: 'bytes256',
        },
        miner: {
            format: 'bytes',
        },
        mixHash: {
            format: 'bytes32',
        },
        nonce: {
            format: 'uint',
        },
        number: {
            format: 'uint',
        },
        parentBeaconBlockRoot: {
            format: 'bytes32',
        },
        parentHash: {
            format: 'bytes32',
        },
        receiptsRoot: {
            format: 'bytes32',
        },
        sha3Uncles: {
            format: 'bytes32',
        },
        size: {
            format: 'uint',
        },
        stateRoot: {
            format: 'bytes32',
        },
        timestamp: {
            format: 'uint',
        },
        totalDifficulty: {
            format: 'uint',
        },
        transactions: {
            type: 'array',
            items: {
                format: 'bytes32',
            },
        },
        transactionsRoot: {
            format: 'bytes32',
        },
        uncles: {
            type: 'array',
            items: {
                format: 'bytes32',
            },
        },
        withdrawals: {
            type: 'array',
            items: Object.assign({}, withdrawalsSchema),
        },
        withdrawalsRoot: {
            format: 'bytes32',
        },
    },
};
const logSchema = {
    type: 'object',
    properties: {
        removed: {
            format: 'bool',
        },
        logIndex: {
            format: 'uint',
        },
        transactionIndex: {
            format: 'uint',
        },
        transactionHash: {
            format: 'bytes32',
        },
        blockHash: {
            format: 'bytes32',
        },
        blockNumber: {
            format: 'uint',
        },
        address: {
            format: 'address',
        },
        data: {
            format: 'bytes',
        },
        topics: {
            type: 'array',
            items: {
                format: 'bytes32',
            },
        },
    },
};
const syncSchema = {
    type: 'object',
    properties: {
        startingBlock: {
            format: 'string',
        },
        currentBlock: {
            format: 'string',
        },
        highestBlock: {
            format: 'string',
        },
        knownStates: {
            format: 'string',
        },
        pulledStates: {
            format: 'string',
        },
    },
};
const transactionReceiptSchema = {
    type: 'object',
    properties: {
        transactionHash: {
            format: 'bytes32',
        },
        transactionIndex: {
            format: 'uint',
        },
        blockHash: {
            format: 'bytes32',
        },
        blockNumber: {
            format: 'uint',
        },
        from: {
            format: 'address',
        },
        to: {
            format: 'address',
        },
        cumulativeGasUsed: {
            format: 'uint',
        },
        gasUsed: {
            format: 'uint',
        },
        effectiveGasPrice: {
            format: 'uint',
        },
        contractAddress: {
            format: 'address',
        },
        logs: {
            type: 'array',
            items: Object.assign({}, logSchema),
        },
        logsBloom: {
            format: 'bytes',
        },
        root: {
            format: 'bytes',
        },
        status: {
            format: 'uint',
        },
        type: {
            format: 'uint',
        },
    },
};
const SignatureObjectSchema = {
    type: 'object',
    properties: {
        messageHash: {
            format: 'bytes',
        },
        r: {
            format: 'bytes32',
        },
        s: {
            format: 'bytes32',
        },
        v: {
            format: 'bytes',
        },
        message: {
            format: 'bytes',
        },
        signature: {
            format: 'bytes',
        },
    },
};
const feeHistorySchema = {
    type: 'object',
    properties: {
        oldestBlock: {
            format: 'uint',
        },
        baseFeePerGas: {
            type: 'array',
            items: {
                format: 'uint',
            },
        },
        reward: {
            type: 'array',
            items: {
                type: 'array',
                items: {
                    format: 'uint',
                },
            },
        },
        gasUsedRatio: {
            type: 'array',
            items: {
                type: 'number',
            },
        },
    },
};
const storageProofSchema = {
    type: 'object',
    properties: {
        key: {
            format: 'bytes32',
        },
        value: {
            format: 'uint',
        },
        proof: {
            type: 'array',
            items: {
                format: 'bytes32',
            },
        },
    },
};
const accountSchema = {
    type: 'object',
    properties: {
        balance: {
            format: 'uint',
        },
        codeHash: {
            format: 'bytes32',
        },
        nonce: {
            format: 'uint',
        },
        storageHash: {
            format: 'bytes32',
        },
        accountProof: {
            type: 'array',
            items: {
                format: 'bytes32',
            },
        },
        storageProof: {
            type: 'array',
            items: Object.assign({}, storageProofSchema),
        },
    },
};
//# sourceMappingURL=schemas.js.map

/***/ }),

/***/ "./node_modules/web3-eth/lib/esm/types.js":
/*!************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/types.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/web3-eth/lib/esm/utils/decode_signed_transaction.js":
/*!**************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/decode_signed_transaction.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decodeSignedTransaction: () => (/* binding */ decodeSignedTransaction)
/* harmony export */ });
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_eth_accounts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-eth-accounts */ "./node_modules/web3-eth-accounts/lib/esm/index.js");
/* harmony import */ var _detect_transaction_type_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./detect_transaction_type.js */ "./node_modules/web3-eth/lib/esm/utils/detect_transaction_type.js");
/* harmony import */ var _format_transaction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./format_transaction.js */ "./node_modules/web3-eth/lib/esm/utils/format_transaction.js");




/**
 * Decodes an [RLP](https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/#top) encoded transaction.
 *
 * @param encodedSignedTransaction The RLP encoded transaction.
 * @param returnFormat ({@link DataFormat} Specifies how the return data should be formatted.
 * @returns {@link SignedTransactionInfoAPI}, an object containing the RLP encoded signed transaction (accessed via the `raw` property) and the signed transaction object (accessed via the `tx` property).
 */
function decodeSignedTransaction(encodedSignedTransaction, returnFormat, options = {
    fillInputAndData: false,
}) {
    return {
        raw: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({ format: 'bytes' }, encodedSignedTransaction, returnFormat),
        tx: (0,_format_transaction_js__WEBPACK_IMPORTED_MODULE_3__.formatTransaction)(Object.assign(Object.assign({}, web3_eth_accounts__WEBPACK_IMPORTED_MODULE_1__.TransactionFactory.fromSerializedData((0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.hexToBytes)(encodedSignedTransaction)).toJSON()), { hash: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)((0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.keccak256)((0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.hexToBytes)(encodedSignedTransaction))), type: (0,_detect_transaction_type_js__WEBPACK_IMPORTED_MODULE_2__.detectRawTransactionType)((0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.hexToBytes)(encodedSignedTransaction)) }), returnFormat, {
            fillInputAndData: options.fillInputAndData,
            transactionSchema: options.transactionSchema,
        }),
    };
}
//# sourceMappingURL=decode_signed_transaction.js.map

/***/ }),

/***/ "./node_modules/web3-eth/lib/esm/utils/decoding.js":
/*!*********************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/decoding.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decodeEventABI: () => (/* binding */ decodeEventABI)
/* harmony export */ });
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/* harmony import */ var web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-eth-abi */ "./node_modules/web3-eth-abi/lib/esm/index.js");
/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../schemas.js */ "./node_modules/web3-eth/lib/esm/schemas.js");
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constants.js */ "./node_modules/web3-eth/lib/esm/constants.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/





const decodeEventABI = (event, data, jsonInterface, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_RETURN_FORMAT) => {
    var _a, _b, _c, _d, _e, _f;
    let modifiedEvent = Object.assign({}, event);
    const result = (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_3__.logSchema, data, returnFormat);
    // if allEvents get the right event
    if ([_constants_js__WEBPACK_IMPORTED_MODULE_4__.ALL_EVENTS, 'allEvents'].includes(modifiedEvent.name)) {
        const matchedEvent = jsonInterface.find(j => j.signature === data.topics[0]);
        if (matchedEvent) {
            modifiedEvent = matchedEvent;
        }
        else {
            modifiedEvent = { anonymous: true };
        }
    }
    // create empty inputs if none are present (e.g. anonymous events on allEvents)
    modifiedEvent.inputs = (_b = (_a = modifiedEvent.inputs) !== null && _a !== void 0 ? _a : event.inputs) !== null && _b !== void 0 ? _b : [];
    // Handle case where an event signature shadows the current ABI with non-identical
    // arg indexing. If # of topics doesn't match, event is anon.
    if (!modifiedEvent.anonymous) {
        let indexedInputs = 0;
        ((_c = modifiedEvent.inputs) !== null && _c !== void 0 ? _c : []).forEach(input => {
            if (input.indexed) {
                indexedInputs += 1;
            }
        });
        if (indexedInputs > 0 && (data === null || data === void 0 ? void 0 : data.topics) && (data === null || data === void 0 ? void 0 : data.topics.length) !== indexedInputs + 1) {
            // checks if event is anonymous
            modifiedEvent = Object.assign(Object.assign({}, modifiedEvent), { anonymous: true, inputs: [] });
        }
    }
    const argTopics = modifiedEvent.anonymous ? data.topics : ((_d = data.topics) !== null && _d !== void 0 ? _d : []).slice(1);
    return Object.assign(Object.assign({}, result), { returnValues: (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__.decodeLog)([...((_e = modifiedEvent.inputs) !== null && _e !== void 0 ? _e : [])], data.data, argTopics), event: modifiedEvent.name, signature: !modifiedEvent.anonymous && ((_f = data.topics) === null || _f === void 0 ? void 0 : _f.length) > 0 && data.topics[0]
            ? data.topics[0]
            : undefined, raw: {
            data: data.data,
            topics: data.topics,
        } });
};
//# sourceMappingURL=decoding.js.map

/***/ }),

/***/ "./node_modules/web3-eth/lib/esm/utils/detect_transaction_type.js":
/*!************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/detect_transaction_type.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   defaultTransactionTypeParser: () => (/* binding */ defaultTransactionTypeParser),
/* harmony export */   detectRawTransactionType: () => (/* binding */ detectRawTransactionType),
/* harmony export */   detectTransactionType: () => (/* binding */ detectTransactionType)
/* harmony export */ });
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/




// undefined is treated as null for JSON schema validator
const transactionType0x0Schema = {
    type: 'object',
    properties: {
        accessList: {
            type: 'null',
        },
        maxFeePerGas: {
            type: 'null',
        },
        maxPriorityFeePerGas: {
            type: 'null',
        },
    },
};
const transactionType0x1Schema = {
    type: 'object',
    properties: {
        maxFeePerGas: {
            type: 'null',
        },
        maxPriorityFeePerGas: {
            type: 'null',
        },
    },
};
const transactionType0x2Schema = {
    type: 'object',
    properties: {
        gasPrice: {
            type: 'null',
        },
    },
};
const validateTxTypeAndHandleErrors = (txSchema, tx, txType) => {
    try {
        web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validateJSONSchema(txSchema, tx);
    }
    catch (error) {
        if (error instanceof web3_validator__WEBPACK_IMPORTED_MODULE_2__.Web3ValidatorError)
            // Erroneously reported error
            // eslint-disable-next-line @typescript-eslint/no-unsafe-call
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidPropertiesForTransactionTypeError(error.errors, txType);
        throw error;
    }
};
const defaultTransactionTypeParser = transaction => {
    var _a, _b;
    const tx = transaction;
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(tx.type)) {
        let txSchema;
        switch (tx.type) {
            case '0x0':
                txSchema = transactionType0x0Schema;
                break;
            case '0x1':
                txSchema = transactionType0x1Schema;
                break;
            case '0x2':
                txSchema = transactionType0x2Schema;
                break;
            default:
                return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({ format: 'uint' }, tx.type, web3_types__WEBPACK_IMPORTED_MODULE_1__.ETH_DATA_FORMAT);
        }
        validateTxTypeAndHandleErrors(txSchema, tx, tx.type);
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({ format: 'uint' }, tx.type, web3_types__WEBPACK_IMPORTED_MODULE_1__.ETH_DATA_FORMAT);
    }
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(tx.maxFeePerGas) || !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(tx.maxPriorityFeePerGas)) {
        validateTxTypeAndHandleErrors(transactionType0x2Schema, tx, '0x2');
        return '0x2';
    }
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(tx.accessList)) {
        validateTxTypeAndHandleErrors(transactionType0x1Schema, tx, '0x1');
        return '0x1';
    }
    const givenHardfork = (_a = tx.hardfork) !== null && _a !== void 0 ? _a : (_b = tx.common) === null || _b === void 0 ? void 0 : _b.hardfork;
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(givenHardfork)) {
        const hardforkIndex = Object.keys(web3_types__WEBPACK_IMPORTED_MODULE_1__.HardforksOrdered).indexOf(givenHardfork);
        // givenHardfork is London or later, so EIP-2718 is supported
        if (hardforkIndex >= Object.keys(web3_types__WEBPACK_IMPORTED_MODULE_1__.HardforksOrdered).indexOf('london'))
            return !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(tx.gasPrice) ? '0x0' : '0x2';
        // givenHardfork is Berlin, tx.accessList is undefined, assume type is 0x0
        if (hardforkIndex === Object.keys(web3_types__WEBPACK_IMPORTED_MODULE_1__.HardforksOrdered).indexOf('berlin'))
            return '0x0';
    }
    // gasprice is defined
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(tx.gasPrice)) {
        validateTxTypeAndHandleErrors(transactionType0x0Schema, tx, '0x0');
        return '0x0';
    }
    // no transaction type can be inferred from properties, use default transaction type
    return undefined;
};
const detectTransactionType = (transaction, web3Context) => {
    var _a;
    return ((_a = web3Context === null || web3Context === void 0 ? void 0 : web3Context.transactionTypeParser) !== null && _a !== void 0 ? _a : defaultTransactionTypeParser)(transaction);
};
const detectRawTransactionType = (transaction) => transaction[0] > 0x7f ? '0x0' : (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.toHex)(transaction[0]);
//# sourceMappingURL=detect_transaction_type.js.map

/***/ }),

/***/ "./node_modules/web3-eth/lib/esm/utils/format_transaction.js":
/*!*******************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/format_transaction.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   formatTransaction: () => (/* binding */ formatTransaction)
/* harmony export */ });
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../schemas.js */ "./node_modules/web3-eth/lib/esm/schemas.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/





function formatTransaction(transaction, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT, options = {
    transactionSchema: _schemas_js__WEBPACK_IMPORTED_MODULE_4__.transactionInfoSchema,
    fillInputAndData: false,
}) {
    var _a, _b;
    let formattedTransaction = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.mergeDeep)({}, transaction);
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction === null || transaction === void 0 ? void 0 : transaction.common)) {
        formattedTransaction.common = Object.assign({}, transaction.common);
        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)((_a = transaction.common) === null || _a === void 0 ? void 0 : _a.customChain))
            formattedTransaction.common.customChain = Object.assign({}, transaction.common.customChain);
    }
    formattedTransaction = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)((_b = options.transactionSchema) !== null && _b !== void 0 ? _b : _schemas_js__WEBPACK_IMPORTED_MODULE_4__.transactionInfoSchema, formattedTransaction, returnFormat);
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(formattedTransaction.data) &&
        !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(formattedTransaction.input) &&
        // Converting toHex is accounting for data and input being Uint8Arrays
        // since comparing Uint8Array is not as straightforward as comparing strings
        (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.toHex)(formattedTransaction.data) !== (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.toHex)(formattedTransaction.input))
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.TransactionDataAndInputError({
            data: (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.bytesToHex)(formattedTransaction.data),
            input: (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.bytesToHex)(formattedTransaction.input),
        });
    if (options.fillInputAndData) {
        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(formattedTransaction.data)) {
            formattedTransaction.input = formattedTransaction.data;
        }
        else if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(formattedTransaction.input)) {
            formattedTransaction.data = formattedTransaction.input;
        }
    }
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(formattedTransaction.gasLimit)) {
        formattedTransaction.gas = formattedTransaction.gasLimit;
        delete formattedTransaction.gasLimit;
    }
    return formattedTransaction;
}
//# sourceMappingURL=format_transaction.js.map

/***/ }),

/***/ "./node_modules/web3-eth/lib/esm/utils/get_revert_reason.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/get_revert_reason.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getRevertReason: () => (/* binding */ getRevertReason),
/* harmony export */   parseTransactionError: () => (/* binding */ parseTransactionError)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_eth_abi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-eth-abi */ "./node_modules/web3-eth-abi/lib/esm/index.js");
/* harmony import */ var _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../rpc_method_wrappers.js */ "./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};


// eslint-disable-next-line import/no-cycle

const parseTransactionError = (error, contractAbi) => {
    var _a, _b, _c, _d, _e;
    if (error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_0__.ContractExecutionError && error.cause instanceof web3_errors__WEBPACK_IMPORTED_MODULE_0__.Eip838ExecutionError) {
        if (contractAbi !== undefined) {
            const errorsAbi = contractAbi.filter(abi => (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_1__.isAbiErrorFragment)(abi));
            (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_1__.decodeContractErrorData)(errorsAbi, error.cause);
            return {
                reason: error.cause.message,
                signature: (_a = error.cause.data) === null || _a === void 0 ? void 0 : _a.slice(0, 10),
                data: (_b = error.cause.data) === null || _b === void 0 ? void 0 : _b.substring(10),
                customErrorName: error.cause.errorName,
                customErrorDecodedSignature: error.cause.errorSignature,
                customErrorArguments: error.cause.errorArgs,
            };
        }
        return {
            reason: error.cause.message,
            signature: (_c = error.cause.data) === null || _c === void 0 ? void 0 : _c.slice(0, 10),
            data: (_d = error.cause.data) === null || _d === void 0 ? void 0 : _d.substring(10),
        };
    }
    if (error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidResponseError &&
        !Array.isArray((_e = error.cause) === null || _e === void 0 ? void 0 : _e.errors) &&
        error.cause !== undefined) {
        return error.cause.message;
    }
    throw error;
};
/**
 *	Returns the revert reason generated by the EVM if the transaction were to be executed.
 *
 * @param web3Context - ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.
 * @param transaction - A transaction object where all properties are optional except `to`, however it's recommended to include the `from` property or it may default to `0x0000000000000000000000000000000000000000` depending on your node or provider.
 * @returns `undefined` if no revert reason was given, a revert reason object, a revert reason string, or an `unknown` error
 */
function getRevertReason(web3Context_1, transaction_1, contractAbi_1) {
    return __awaiter(this, arguments, void 0, function* (web3Context, transaction, contractAbi, returnFormat = web3Context.defaultReturnFormat) {
        try {
            yield (0,_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_2__.call)(web3Context, transaction, web3Context.defaultBlock, returnFormat);
            return undefined;
        }
        catch (error) {
            return parseTransactionError(error, contractAbi);
        }
    });
}
//# sourceMappingURL=get_revert_reason.js.map

/***/ }),

/***/ "./node_modules/web3-eth/lib/esm/utils/get_transaction_error.js":
/*!**********************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/get_transaction_error.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getTransactionError: () => (/* binding */ getTransactionError)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var _get_revert_reason_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get_revert_reason.js */ "./node_modules/web3-eth/lib/esm/utils/get_revert_reason.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};

// eslint-disable-next-line import/no-cycle

function getTransactionError(web3Context, transactionFormatted, transactionReceiptFormatted, receivedError, contractAbi, knownReason) {
    return __awaiter(this, void 0, void 0, function* () {
        let _reason = knownReason;
        if (_reason === undefined) {
            if (receivedError !== undefined) {
                _reason = (0,_get_revert_reason_js__WEBPACK_IMPORTED_MODULE_1__.parseTransactionError)(receivedError);
            }
            else if (web3Context.handleRevert && transactionFormatted !== undefined) {
                _reason = yield (0,_get_revert_reason_js__WEBPACK_IMPORTED_MODULE_1__.getRevertReason)(web3Context, transactionFormatted, contractAbi);
            }
        }
        let error;
        if (_reason === undefined) {
            error = new web3_errors__WEBPACK_IMPORTED_MODULE_0__.TransactionRevertedWithoutReasonError(transactionReceiptFormatted);
        }
        else if (typeof _reason === 'string') {
            error = new web3_errors__WEBPACK_IMPORTED_MODULE_0__.TransactionRevertInstructionError(_reason, undefined, transactionReceiptFormatted);
        }
        else if (_reason.customErrorName !== undefined &&
            _reason.customErrorDecodedSignature !== undefined &&
            _reason.customErrorArguments !== undefined) {
            const reasonWithCustomError = _reason;
            error = new web3_errors__WEBPACK_IMPORTED_MODULE_0__.TransactionRevertWithCustomError(reasonWithCustomError.reason, reasonWithCustomError.customErrorName, reasonWithCustomError.customErrorDecodedSignature, reasonWithCustomError.customErrorArguments, reasonWithCustomError.signature, transactionReceiptFormatted, reasonWithCustomError.data);
        }
        else {
            error = new web3_errors__WEBPACK_IMPORTED_MODULE_0__.TransactionRevertInstructionError(_reason.reason, _reason.signature, transactionReceiptFormatted, _reason.data);
        }
        return error;
    });
}
//# sourceMappingURL=get_transaction_error.js.map

/***/ }),

/***/ "./node_modules/web3-eth/lib/esm/utils/get_transaction_gas_pricing.js":
/*!****************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/get_transaction_gas_pricing.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getTransactionGasPricing: () => (/* binding */ getTransactionGasPricing)
/* harmony export */ });
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../rpc_method_wrappers.js */ "./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js");
/* harmony import */ var _transaction_builder_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./transaction_builder.js */ "./node_modules/web3-eth/lib/esm/utils/transaction_builder.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




// eslint-disable-next-line import/no-cycle

// eslint-disable-next-line import/no-cycle

function getEip1559GasPricing(transaction, web3Context, returnFormat) {
    return __awaiter(this, void 0, void 0, function* () {
        var _a, _b, _c, _d;
        const block = yield (0,_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_4__.getBlock)(web3Context, web3Context.defaultBlock, false, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(block.baseFeePerGas))
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.Eip1559NotSupportedError();
        let gasPrice;
        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.gasPrice) && BigInt(block.baseFeePerGas) === BigInt(0)) {
            gasPrice = yield (0,_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_4__.getGasPrice)(web3Context, returnFormat);
        }
        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.gasPrice) || !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(gasPrice)) {
            const convertedTransactionGasPrice = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.format)({ format: 'uint' }, (_a = transaction.gasPrice) !== null && _a !== void 0 ? _a : gasPrice, returnFormat);
            return {
                maxPriorityFeePerGas: convertedTransactionGasPrice,
                maxFeePerGas: convertedTransactionGasPrice,
            };
        }
        return {
            maxPriorityFeePerGas: (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.format)({ format: 'uint' }, (_b = transaction.maxPriorityFeePerGas) !== null && _b !== void 0 ? _b : web3Context.defaultMaxPriorityFeePerGas, returnFormat),
            maxFeePerGas: (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.format)({ format: 'uint' }, ((_c = transaction.maxFeePerGas) !== null && _c !== void 0 ? _c : BigInt(block.baseFeePerGas) * BigInt(2) +
                BigInt((_d = transaction.maxPriorityFeePerGas) !== null && _d !== void 0 ? _d : web3Context.defaultMaxPriorityFeePerGas)), returnFormat),
        };
    });
}
function getTransactionGasPricing(transaction, web3Context, returnFormat) {
    return __awaiter(this, void 0, void 0, function* () {
        const transactionType = (0,_transaction_builder_js__WEBPACK_IMPORTED_MODULE_5__.getTransactionType)(transaction, web3Context);
        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transactionType)) {
            if (transactionType.startsWith('-'))
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.UnsupportedTransactionTypeError(transactionType);
            // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2718.md#transactions
            if (Number(transactionType) < 0 || Number(transactionType) > 127)
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.UnsupportedTransactionTypeError(transactionType);
            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.gasPrice) &&
                (transactionType === '0x0' || transactionType === '0x1'))
                return {
                    gasPrice: yield (0,_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_4__.getGasPrice)(web3Context, returnFormat),
                    maxPriorityFeePerGas: undefined,
                    maxFeePerGas: undefined,
                };
            if (transactionType === '0x2') {
                return Object.assign({ gasPrice: undefined }, (yield getEip1559GasPricing(transaction, web3Context, returnFormat)));
            }
        }
        return undefined;
    });
}
//# sourceMappingURL=get_transaction_gas_pricing.js.map

/***/ }),

/***/ "./node_modules/web3-eth/lib/esm/utils/prepare_transaction_for_signing.js":
/*!********************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/prepare_transaction_for_signing.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   prepareTransactionForSigning: () => (/* binding */ prepareTransactionForSigning)
/* harmony export */ });
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_eth_accounts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-eth-accounts */ "./node_modules/web3-eth-accounts/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var _validation_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../validation.js */ "./node_modules/web3-eth/lib/esm/validation.js");
/* harmony import */ var _format_transaction_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./format_transaction.js */ "./node_modules/web3-eth/lib/esm/utils/format_transaction.js");
/* harmony import */ var _transaction_builder_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./transaction_builder.js */ "./node_modules/web3-eth/lib/esm/utils/transaction_builder.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};







const getEthereumjsTxDataFromTransaction = (transaction) => {
    var _a, _b;
    return (Object.assign(Object.assign({}, transaction), { nonce: transaction.nonce, gasPrice: transaction.gasPrice, gasLimit: (_a = transaction.gasLimit) !== null && _a !== void 0 ? _a : transaction.gas, to: transaction.to, value: transaction.value, data: (_b = transaction.data) !== null && _b !== void 0 ? _b : transaction.input, type: transaction.type, chainId: transaction.chainId, accessList: transaction.accessList, maxPriorityFeePerGas: transaction.maxPriorityFeePerGas, maxFeePerGas: transaction.maxFeePerGas }));
};
const getEthereumjsTransactionOptions = (transaction, web3Context) => {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;
    const hasTransactionSigningOptions = (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(transaction.chain) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(transaction.hardfork)) ||
        !(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(transaction.common);
    let common;
    if (!hasTransactionSigningOptions) {
        // if defaultcommon is specified, use that.
        if (web3Context.defaultCommon) {
            common = Object.assign({}, web3Context.defaultCommon);
            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(common.hardfork))
                common.hardfork = (_a = transaction.hardfork) !== null && _a !== void 0 ? _a : web3Context.defaultHardfork;
            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(common.baseChain))
                common.baseChain = web3Context.defaultChain;
        }
        else {
            common = web3_eth_accounts__WEBPACK_IMPORTED_MODULE_2__.Common.custom({
                name: 'custom-network',
                chainId: (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.toNumber)(transaction.chainId),
                networkId: !(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(transaction.networkId)
                    ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.toNumber)(transaction.networkId)
                    : undefined,
                defaultHardfork: (_b = transaction.hardfork) !== null && _b !== void 0 ? _b : web3Context.defaultHardfork,
            }, {
                baseChain: web3Context.defaultChain,
            });
        }
    }
    else {
        const name = (_f = (_e = (_d = (_c = transaction === null || transaction === void 0 ? void 0 : transaction.common) === null || _c === void 0 ? void 0 : _c.customChain) === null || _d === void 0 ? void 0 : _d.name) !== null && _e !== void 0 ? _e : transaction.chain) !== null && _f !== void 0 ? _f : 'custom-network';
        const chainId = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.toNumber)((_j = (_h = (_g = transaction === null || transaction === void 0 ? void 0 : transaction.common) === null || _g === void 0 ? void 0 : _g.customChain) === null || _h === void 0 ? void 0 : _h.chainId) !== null && _j !== void 0 ? _j : transaction === null || transaction === void 0 ? void 0 : transaction.chainId);
        const networkId = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.toNumber)((_m = (_l = (_k = transaction === null || transaction === void 0 ? void 0 : transaction.common) === null || _k === void 0 ? void 0 : _k.customChain) === null || _l === void 0 ? void 0 : _l.networkId) !== null && _m !== void 0 ? _m : transaction === null || transaction === void 0 ? void 0 : transaction.networkId);
        const defaultHardfork = (_q = (_p = (_o = transaction === null || transaction === void 0 ? void 0 : transaction.common) === null || _o === void 0 ? void 0 : _o.hardfork) !== null && _p !== void 0 ? _p : transaction === null || transaction === void 0 ? void 0 : transaction.hardfork) !== null && _q !== void 0 ? _q : web3Context.defaultHardfork;
        const baseChain = (_t = (_s = (_r = transaction.common) === null || _r === void 0 ? void 0 : _r.baseChain) !== null && _s !== void 0 ? _s : transaction.chain) !== null && _t !== void 0 ? _t : web3Context.defaultChain;
        if (chainId && networkId && name) {
            common = web3_eth_accounts__WEBPACK_IMPORTED_MODULE_2__.Common.custom({
                name,
                chainId,
                networkId,
                defaultHardfork,
            }, {
                baseChain,
            });
        }
    }
    return { common };
};
const prepareTransactionForSigning = (transaction_1, web3Context_1, privateKey_1, ...args_1) => __awaiter(void 0, [transaction_1, web3Context_1, privateKey_1, ...args_1], void 0, function* (transaction, web3Context, privateKey, fillGasPrice = false, fillGasLimit = true) {
    const populatedTransaction = (yield (0,_transaction_builder_js__WEBPACK_IMPORTED_MODULE_6__.transactionBuilder)({
        transaction,
        web3Context,
        privateKey,
        fillGasPrice,
        fillGasLimit,
    }));
    const formattedTransaction = (0,_format_transaction_js__WEBPACK_IMPORTED_MODULE_5__.formatTransaction)(populatedTransaction, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT, {
        transactionSchema: web3Context.config.customTransactionSchema,
    });
    (0,_validation_js__WEBPACK_IMPORTED_MODULE_4__.validateTransactionForSigning)(formattedTransaction, undefined, {
        transactionSchema: web3Context.config.customTransactionSchema,
    });
    return web3_eth_accounts__WEBPACK_IMPORTED_MODULE_2__.TransactionFactory.fromTxData(getEthereumjsTxDataFromTransaction(formattedTransaction), getEthereumjsTransactionOptions(formattedTransaction, web3Context));
});
//# sourceMappingURL=prepare_transaction_for_signing.js.map

/***/ }),

/***/ "./node_modules/web3-eth/lib/esm/utils/reject_if_block_timeout.js":
/*!************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/reject_if_block_timeout.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   rejectIfBlockTimeout: () => (/* binding */ rejectIfBlockTimeout)
/* harmony export */ });
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ "./node_modules/web3-eth/lib/esm/constants.js");
/* harmony import */ var _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../rpc_method_wrappers.js */ "./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



// eslint-disable-next-line import/no-cycle

function resolveByPolling(web3Context, starterBlockNumber, transactionHash) {
    const pollingInterval = web3Context.transactionPollingInterval;
    const [intervalId, promiseToError] = (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.rejectIfConditionAtInterval)(() => __awaiter(this, void 0, void 0, function* () {
        let lastBlockNumber;
        try {
            lastBlockNumber = yield (0,_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_3__.getBlockNumber)(web3Context, _constants_js__WEBPACK_IMPORTED_MODULE_2__.NUMBER_DATA_FORMAT);
        }
        catch (error) {
            console.warn('An error happen while trying to get the block number', error);
            return undefined;
        }
        const numberOfBlocks = lastBlockNumber - starterBlockNumber;
        if (numberOfBlocks >= web3Context.transactionBlockTimeout) {
            return new web3_errors__WEBPACK_IMPORTED_MODULE_1__.TransactionBlockTimeoutError({
                starterBlockNumber,
                numberOfBlocks,
                transactionHash,
            });
        }
        return undefined;
    }), pollingInterval);
    const clean = () => {
        clearInterval(intervalId);
    };
    return [promiseToError, { clean }];
}
function resolveBySubscription(web3Context, starterBlockNumber, transactionHash) {
    return __awaiter(this, void 0, void 0, function* () {
        var _a;
        // The following variable will stay true except if the data arrived,
        //	or if watching started after an error had occurred.
        let needToWatchLater = true;
        let subscription;
        let resourceCleaner;
        // internal helper function
        function revertToPolling(reject, previousError) {
            if (previousError) {
                console.warn('error happened at subscription. So revert to polling...', previousError);
            }
            resourceCleaner.clean();
            needToWatchLater = false;
            const [promiseToError, newResourceCleaner] = resolveByPolling(web3Context, starterBlockNumber, transactionHash);
            resourceCleaner.clean = newResourceCleaner.clean;
            promiseToError.catch(error => reject(error));
        }
        try {
            subscription = (yield ((_a = web3Context.subscriptionManager) === null || _a === void 0 ? void 0 : _a.subscribe('newHeads')));
            resourceCleaner = {
                clean: () => {
                    var _a;
                    // Remove the subscription, if it was not removed somewhere
                    // 	else by calling, for example, subscriptionManager.clear()
                    if (subscription.id) {
                        (_a = web3Context.subscriptionManager) === null || _a === void 0 ? void 0 : _a.removeSubscription(subscription).then(() => {
                            // Subscription ended successfully
                        }).catch(() => {
                            // An error happened while ending subscription. But no need to take any action.
                        });
                    }
                },
            };
        }
        catch (error) {
            return resolveByPolling(web3Context, starterBlockNumber, transactionHash);
        }
        const promiseToError = new Promise((_, reject) => {
            try {
                subscription.on('data', (lastBlockHeader) => {
                    needToWatchLater = false;
                    if (!(lastBlockHeader === null || lastBlockHeader === void 0 ? void 0 : lastBlockHeader.number)) {
                        return;
                    }
                    const numberOfBlocks = Number(BigInt(lastBlockHeader.number) - BigInt(starterBlockNumber));
                    if (numberOfBlocks >= web3Context.transactionBlockTimeout) {
                        // Transaction Block Timeout is known to be reached by subscribing to new heads
                        reject(new web3_errors__WEBPACK_IMPORTED_MODULE_1__.TransactionBlockTimeoutError({
                            starterBlockNumber,
                            numberOfBlocks,
                            transactionHash,
                        }));
                    }
                });
                subscription.on('error', error => {
                    revertToPolling(reject, error);
                });
            }
            catch (error) {
                revertToPolling(reject, error);
            }
            // Fallback to polling if tx receipt didn't arrived in "blockHeaderTimeout" [10 seconds]
            setTimeout(() => {
                if (needToWatchLater) {
                    revertToPolling(reject);
                }
            }, web3Context.blockHeaderTimeout * 1000);
        });
        return [promiseToError, resourceCleaner];
    });
}
/* TODO: After merge, there will be constant block mining time (exactly 12 second each block, except slot missed that currently happens in <1% of slots. ) so we can optimize following function
for POS NWs, we can skip checking getBlockNumber(); after interval and calculate only based on time  that certain num of blocked are mined after that for internal double check, can do one getBlockNumber() call and timeout.
*/
function rejectIfBlockTimeout(web3Context, transactionHash) {
    return __awaiter(this, void 0, void 0, function* () {
        var _a, _b;
        const { provider } = web3Context.requestManager;
        let callingRes;
        const starterBlockNumber = yield (0,_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_3__.getBlockNumber)(web3Context, _constants_js__WEBPACK_IMPORTED_MODULE_2__.NUMBER_DATA_FORMAT);
        // TODO: once https://github.com/web3/web3.js/issues/5521 is implemented, remove checking for `enableExperimentalFeatures.useSubscriptionWhenCheckingBlockTimeout`
        if (((_b = (_a = provider).supportsSubscriptions) === null || _b === void 0 ? void 0 : _b.call(_a)) &&
            web3Context.enableExperimentalFeatures.useSubscriptionWhenCheckingBlockTimeout) {
            // eslint-disable-next-line @typescript-eslint/no-floating-promises
            callingRes = yield resolveBySubscription(web3Context, starterBlockNumber, transactionHash);
        }
        else {
            // eslint-disable-next-line @typescript-eslint/no-floating-promises
            callingRes = resolveByPolling(web3Context, starterBlockNumber, transactionHash);
        }
        return callingRes;
    });
}
//# sourceMappingURL=reject_if_block_timeout.js.map

/***/ }),

/***/ "./node_modules/web3-eth/lib/esm/utils/send_tx_helper.js":
/*!***************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/send_tx_helper.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SendTxHelper: () => (/* binding */ SendTxHelper)
/* harmony export */ });
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_rpc_methods__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-rpc-methods */ "./node_modules/web3-rpc-methods/lib/esm/index.js");
/* harmony import */ var _get_transaction_gas_pricing_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./get_transaction_gas_pricing.js */ "./node_modules/web3-eth/lib/esm/utils/get_transaction_gas_pricing.js");
/* harmony import */ var _try_send_transaction_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./try_send_transaction.js */ "./node_modules/web3-eth/lib/esm/utils/try_send_transaction.js");
/* harmony import */ var _watch_transaction_for_confirmations_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./watch_transaction_for_confirmations.js */ "./node_modules/web3-eth/lib/esm/utils/watch_transaction_for_confirmations.js");
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../constants.js */ "./node_modules/web3-eth/lib/esm/constants.js");
/* harmony import */ var _get_transaction_error_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./get_transaction_error.js */ "./node_modules/web3-eth/lib/esm/utils/get_transaction_error.js");
/* harmony import */ var _get_revert_reason_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./get_revert_reason.js */ "./node_modules/web3-eth/lib/esm/utils/get_revert_reason.js");
/* harmony import */ var _decoding_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./decoding.js */ "./node_modules/web3-eth/lib/esm/utils/decoding.js");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/




// eslint-disable-next-line import/no-cycle

// eslint-disable-next-line import/no-cycle

// eslint-disable-next-line import/no-cycle


// eslint-disable-next-line import/no-cycle

// eslint-disable-next-line import/no-cycle


class SendTxHelper {
    constructor({ options, web3Context, promiEvent, returnFormat, }) {
        this.options = {
            checkRevertBeforeSending: true,
        };
        this.options = options;
        this.web3Context = web3Context;
        this.promiEvent = promiEvent;
        this.returnFormat = returnFormat;
    }
    getReceiptWithEvents(data) {
        var _a, _b;
        const result = Object.assign({}, (data !== null && data !== void 0 ? data : {}));
        if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.contractAbi) && result.logs && result.logs.length > 0) {
            result.events = {};
            for (const log of result.logs) {
                const event = (0,_decoding_js__WEBPACK_IMPORTED_MODULE_10__.decodeEventABI)(_constants_js__WEBPACK_IMPORTED_MODULE_7__.ALL_EVENTS_ABI, log, (_b = this.options) === null || _b === void 0 ? void 0 : _b.contractAbi, this.returnFormat);
                if (event.event) {
                    result.events[event.event] = event;
                }
            }
        }
        return result;
    }
    checkRevertBeforeSending(tx) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.options.checkRevertBeforeSending !== false) {
                let formatTx = tx;
                if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(tx.data) && (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(tx.input) && (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(tx.gas)) {
                    // eth.call runs into error if data isnt filled and gas is not defined, its a simple transaction so we fill it with 21000
                    formatTx = Object.assign(Object.assign({}, tx), { gas: 21000 });
                }
                const reason = yield (0,_get_revert_reason_js__WEBPACK_IMPORTED_MODULE_9__.getRevertReason)(this.web3Context, formatTx, this.options.contractAbi);
                if (reason !== undefined) {
                    throw yield (0,_get_transaction_error_js__WEBPACK_IMPORTED_MODULE_8__.getTransactionError)(this.web3Context, tx, undefined, undefined, this.options.contractAbi, reason);
                }
            }
        });
    }
    emitSending(tx) {
        if (this.promiEvent.listenerCount('sending') > 0) {
            this.promiEvent.emit('sending', tx);
        }
    }
    populateGasPrice(_a) {
        return __awaiter(this, arguments, void 0, function* ({ transactionFormatted, transaction, }) {
            var _b;
            let result = transactionFormatted;
            if (!this.web3Context.config.ignoreGasPricing &&
                !((_b = this.options) === null || _b === void 0 ? void 0 : _b.ignoreGasPricing) &&
                (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transactionFormatted.gasPrice) &&
                ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.maxPriorityFeePerGas) ||
                    (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.maxFeePerGas))) {
                result = Object.assign(Object.assign({}, transactionFormatted), (yield (0,_get_transaction_gas_pricing_js__WEBPACK_IMPORTED_MODULE_4__.getTransactionGasPricing)(transactionFormatted, this.web3Context, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT)));
            }
            return result;
        });
    }
    signAndSend(_a) {
        return __awaiter(this, arguments, void 0, function* ({ wallet, tx, }) {
            if (wallet) {
                const signedTransaction = yield wallet.signTransaction(tx);
                return (0,_try_send_transaction_js__WEBPACK_IMPORTED_MODULE_5__.trySendTransaction)(this.web3Context, () => __awaiter(this, void 0, void 0, function* () {
                    return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_3__.ethRpcMethods.sendRawTransaction(this.web3Context.requestManager, signedTransaction.rawTransaction);
                }), signedTransaction.transactionHash);
            }
            return (0,_try_send_transaction_js__WEBPACK_IMPORTED_MODULE_5__.trySendTransaction)(this.web3Context, () => __awaiter(this, void 0, void 0, function* () {
                return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_3__.ethRpcMethods.sendTransaction(this.web3Context.requestManager, tx);
            }));
        });
    }
    emitSent(tx) {
        if (this.promiEvent.listenerCount('sent') > 0) {
            this.promiEvent.emit('sent', tx);
        }
    }
    emitTransactionHash(hash) {
        if (this.promiEvent.listenerCount('transactionHash') > 0) {
            this.promiEvent.emit('transactionHash', hash);
        }
    }
    emitReceipt(receipt) {
        if (this.promiEvent.listenerCount('receipt') > 0) {
            this.promiEvent.emit('receipt', 
            // @ts-expect-error unknown type fix
            receipt);
        }
    }
    handleError(_a) {
        return __awaiter(this, arguments, void 0, function* ({ error, tx }) {
            var _b;
            let _error = error;
            if (_error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_2__.ContractExecutionError && this.web3Context.handleRevert) {
                _error = yield (0,_get_transaction_error_js__WEBPACK_IMPORTED_MODULE_8__.getTransactionError)(this.web3Context, tx, undefined, undefined, (_b = this.options) === null || _b === void 0 ? void 0 : _b.contractAbi);
            }
            if ((_error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidResponseError ||
                _error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_2__.ContractExecutionError ||
                _error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_2__.TransactionRevertWithCustomError ||
                _error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_2__.TransactionRevertedWithoutReasonError ||
                _error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_2__.TransactionRevertInstructionError ||
                _error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_2__.TransactionPollingTimeoutError) &&
                this.promiEvent.listenerCount('error') > 0) {
                this.promiEvent.emit('error', _error);
            }
            return _error;
        });
    }
    emitConfirmation({ receipt, transactionHash, customTransactionReceiptSchema, }) {
        if (this.promiEvent.listenerCount('confirmation') > 0) {
            (0,_watch_transaction_for_confirmations_js__WEBPACK_IMPORTED_MODULE_6__.watchTransactionForConfirmations)(this.web3Context, this.promiEvent, receipt, transactionHash, this.returnFormat, customTransactionReceiptSchema);
        }
    }
    handleResolve(_a) {
        return __awaiter(this, arguments, void 0, function* ({ receipt, tx }) {
            var _b, _c, _d;
            if ((_b = this.options) === null || _b === void 0 ? void 0 : _b.transactionResolver) {
                return (_c = this.options) === null || _c === void 0 ? void 0 : _c.transactionResolver(receipt);
            }
            if (receipt.status === BigInt(0)) {
                const error = yield (0,_get_transaction_error_js__WEBPACK_IMPORTED_MODULE_8__.getTransactionError)(this.web3Context, tx, 
                // @ts-expect-error unknown type fix
                receipt, undefined, (_d = this.options) === null || _d === void 0 ? void 0 : _d.contractAbi);
                if (this.promiEvent.listenerCount('error') > 0) {
                    this.promiEvent.emit('error', error);
                }
                throw error;
            }
            else {
                return receipt;
            }
        });
    }
}
//# sourceMappingURL=send_tx_helper.js.map

/***/ }),

/***/ "./node_modules/web3-eth/lib/esm/utils/transaction_builder.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/transaction_builder.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   defaultTransactionBuilder: () => (/* binding */ defaultTransactionBuilder),
/* harmony export */   getTransactionFromOrToAttr: () => (/* binding */ getTransactionFromOrToAttr),
/* harmony export */   getTransactionNonce: () => (/* binding */ getTransactionNonce),
/* harmony export */   getTransactionType: () => (/* binding */ getTransactionType),
/* harmony export */   transactionBuilder: () => (/* binding */ transactionBuilder)
/* harmony export */ });
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/* harmony import */ var web3_eth_accounts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-eth-accounts */ "./node_modules/web3-eth-accounts/lib/esm/index.js");
/* harmony import */ var web3_net__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-net */ "./node_modules/web3-net/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../constants.js */ "./node_modules/web3-eth/lib/esm/constants.js");
/* harmony import */ var _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../rpc_method_wrappers.js */ "./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js");
/* harmony import */ var _detect_transaction_type_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./detect_transaction_type.js */ "./node_modules/web3-eth/lib/esm/utils/detect_transaction_type.js");
/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../schemas.js */ "./node_modules/web3-eth/lib/esm/schemas.js");
/* harmony import */ var _get_transaction_gas_pricing_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./get_transaction_gas_pricing.js */ "./node_modules/web3-eth/lib/esm/utils/get_transaction_gas_pricing.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};







// eslint-disable-next-line import/no-cycle



// eslint-disable-next-line import/no-cycle

const getTransactionFromOrToAttr = (attr, web3Context, transaction, privateKey) => {
    if (transaction !== undefined && attr in transaction && transaction[attr] !== undefined) {
        if (typeof transaction[attr] === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isAddress)(transaction[attr])) {
            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion
            return transaction[attr];
        }
        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(transaction[attr]) && (0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNumber)(transaction[attr])) {
            if (web3Context.wallet) {
                const account = web3Context.wallet.get((0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.format)({ format: 'uint' }, transaction[attr], _constants_js__WEBPACK_IMPORTED_MODULE_6__.NUMBER_DATA_FORMAT));
                if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(account)) {
                    return account.address;
                }
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_4__.LocalWalletNotAvailableError();
            }
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_4__.LocalWalletNotAvailableError();
        }
        else {
            throw attr === 'from'
                ? new web3_errors__WEBPACK_IMPORTED_MODULE_4__.InvalidTransactionWithSender(transaction.from)
                : // eslint-disable-next-line @typescript-eslint/no-unsafe-call
                    new web3_errors__WEBPACK_IMPORTED_MODULE_4__.InvalidTransactionWithReceiver(transaction.to);
        }
    }
    if (attr === 'from') {
        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(privateKey))
            return (0,web3_eth_accounts__WEBPACK_IMPORTED_MODULE_1__.privateKeyToAddress)(privateKey);
        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(web3Context.defaultAccount))
            return web3Context.defaultAccount;
    }
    return undefined;
};
const getTransactionNonce = (web3Context_1, address_1, ...args_1) => __awaiter(void 0, [web3Context_1, address_1, ...args_1], void 0, function* (web3Context, address, returnFormat = web3Context.defaultReturnFormat) {
    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(address)) {
        // TODO if (web3.eth.accounts.wallet) use address from local wallet
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_4__.UnableToPopulateNonceError();
    }
    return (0,_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getTransactionCount)(web3Context, address, web3Context.defaultBlock, returnFormat);
});
const getTransactionType = (transaction, web3Context) => {
    const inferredType = (0,_detect_transaction_type_js__WEBPACK_IMPORTED_MODULE_8__.detectTransactionType)(transaction, web3Context);
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(inferredType))
        return inferredType;
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(web3Context.defaultTransactionType))
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.format)({ format: 'uint' }, web3Context.defaultTransactionType, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
    return undefined;
};
// Keep in mind that the order the properties of populateTransaction get populated matters
// as some of the properties are dependent on others
function defaultTransactionBuilder(options) {
    return __awaiter(this, void 0, void 0, function* () {
        var _a, _b;
        let populatedTransaction = (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_9__.transactionSchema, options.transaction, options.web3Context.defaultReturnFormat);
        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.from)) {
            populatedTransaction.from = getTransactionFromOrToAttr('from', options.web3Context, undefined, options.privateKey);
        }
        // TODO: Debug why need to typecase getTransactionNonce
        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.nonce)) {
            populatedTransaction.nonce = yield getTransactionNonce(options.web3Context, populatedTransaction.from, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
        }
        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.value)) {
            populatedTransaction.value = '0x0';
        }
        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.data)) {
            if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.input) &&
                populatedTransaction.data !== populatedTransaction.input)
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_4__.TransactionDataAndInputError({
                    data: (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.bytesToHex)(populatedTransaction.data),
                    input: (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.bytesToHex)(populatedTransaction.input),
                });
            if (!populatedTransaction.data.startsWith('0x'))
                populatedTransaction.data = `0x${populatedTransaction.data}`;
        }
        else if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.input)) {
            if (!populatedTransaction.input.startsWith('0x'))
                populatedTransaction.input = `0x${populatedTransaction.input}`;
        }
        else {
            populatedTransaction.input = '0x';
        }
        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.common)) {
            if (options.web3Context.defaultCommon) {
                const common = options.web3Context.defaultCommon;
                const chainId = common.customChain.chainId;
                const networkId = common.customChain.networkId;
                const name = common.customChain.name;
                populatedTransaction.common = Object.assign(Object.assign({}, common), { customChain: { chainId, networkId, name } });
            }
            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.chain)) {
                populatedTransaction.chain = options.web3Context.defaultChain;
            }
            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.hardfork)) {
                populatedTransaction.hardfork = options.web3Context.defaultHardfork;
            }
        }
        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.chainId) &&
            (0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)((_a = populatedTransaction.common) === null || _a === void 0 ? void 0 : _a.customChain.chainId)) {
            populatedTransaction.chainId = yield (0,_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getChainId)(options.web3Context, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
        }
        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.networkId)) {
            populatedTransaction.networkId =
                (_b = options.web3Context.defaultNetworkId) !== null && _b !== void 0 ? _b : (yield (0,web3_net__WEBPACK_IMPORTED_MODULE_2__.getId)(options.web3Context, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT));
        }
        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.gasLimit) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.gas)) {
            populatedTransaction.gasLimit = populatedTransaction.gas;
        }
        populatedTransaction.type = getTransactionType(populatedTransaction, options.web3Context);
        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.accessList) &&
            (populatedTransaction.type === '0x1' || populatedTransaction.type === '0x2')) {
            populatedTransaction.accessList = [];
        }
        if (options.fillGasPrice)
            populatedTransaction = Object.assign(Object.assign({}, populatedTransaction), (yield (0,_get_transaction_gas_pricing_js__WEBPACK_IMPORTED_MODULE_10__.getTransactionGasPricing)(populatedTransaction, options.web3Context, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT)));
        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.gas) &&
            (0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.gasLimit) &&
            options.fillGasLimit) {
            const fillGasLimit = yield (0,_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.estimateGas)(options.web3Context, populatedTransaction, 'latest', web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
            populatedTransaction = Object.assign(Object.assign({}, populatedTransaction), { gas: (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.format)({ format: 'uint' }, fillGasLimit, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT) });
        }
        return populatedTransaction;
    });
}
const transactionBuilder = (options) => __awaiter(void 0, void 0, void 0, function* () {
    var _a;
    return ((_a = options.web3Context.transactionBuilder) !== null && _a !== void 0 ? _a : defaultTransactionBuilder)(Object.assign(Object.assign({}, options), { transaction: options.transaction }));
});
//# sourceMappingURL=transaction_builder.js.map

/***/ }),

/***/ "./node_modules/web3-eth/lib/esm/utils/try_send_transaction.js":
/*!*********************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/try_send_transaction.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   trySendTransaction: () => (/* binding */ trySendTransaction)
/* harmony export */ });
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var _reject_if_block_timeout_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reject_if_block_timeout.js */ "./node_modules/web3-eth/lib/esm/utils/reject_if_block_timeout.js");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};


// eslint-disable-next-line import/no-cycle

/**
 * An internal function to send a transaction or throws if sending did not finish during the timeout during the blocks-timeout.
 * @param web3Context - the context to read the configurations from
 * @param sendTransactionFunc - the function that will send the transaction (could be sendTransaction or sendRawTransaction)
 * @param transactionHash - to be used inside the exception message if there will be any exceptions.
 * @returns the Promise<string> returned by the `sendTransactionFunc`.
 */
function trySendTransaction(web3Context, sendTransactionFunc, transactionHash) {
    return __awaiter(this, void 0, void 0, function* () {
        const [timeoutId, rejectOnTimeout] = (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.rejectIfTimeout)(web3Context.transactionSendTimeout, new web3_errors__WEBPACK_IMPORTED_MODULE_1__.TransactionSendTimeoutError({
            numberOfSeconds: web3Context.transactionSendTimeout / 1000,
            transactionHash,
        }));
        const [rejectOnBlockTimeout, blockTimeoutResourceCleaner] = yield (0,_reject_if_block_timeout_js__WEBPACK_IMPORTED_MODULE_2__.rejectIfBlockTimeout)(web3Context, transactionHash);
        try {
            // If an error happened here, do not catch it, just clear the resources before raising it to the caller function.
            return yield Promise.race([
                sendTransactionFunc(), // this is the function that will send the transaction
                rejectOnTimeout, // this will throw an error on Transaction Send Timeout
                rejectOnBlockTimeout, // this will throw an error on Transaction Block Timeout
            ]);
        }
        finally {
            clearTimeout(timeoutId);
            blockTimeoutResourceCleaner.clean();
        }
    });
}
//# sourceMappingURL=try_send_transaction.js.map

/***/ }),

/***/ "./node_modules/web3-eth/lib/esm/utils/wait_for_transaction_receipt.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/wait_for_transaction_receipt.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   waitForTransactionReceipt: () => (/* binding */ waitForTransactionReceipt)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var _reject_if_block_timeout_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reject_if_block_timeout.js */ "./node_modules/web3-eth/lib/esm/utils/reject_if_block_timeout.js");
/* harmony import */ var _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../rpc_method_wrappers.js */ "./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};

// eslint-disable-next-line import/no-cycle

// eslint-disable-next-line import/no-cycle

// eslint-disable-next-line import/no-cycle

function waitForTransactionReceipt(web3Context, transactionHash, returnFormat, customGetTransactionReceipt) {
    return __awaiter(this, void 0, void 0, function* () {
        var _a;
        const pollingInterval = (_a = web3Context.transactionReceiptPollingInterval) !== null && _a !== void 0 ? _a : web3Context.transactionPollingInterval;
        const [awaitableTransactionReceipt, IntervalId] = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.pollTillDefinedAndReturnIntervalId)(() => __awaiter(this, void 0, void 0, function* () {
            try {
                return (customGetTransactionReceipt !== null && customGetTransactionReceipt !== void 0 ? customGetTransactionReceipt : _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_3__.getTransactionReceipt)(web3Context, transactionHash, returnFormat);
            }
            catch (error) {
                console.warn('An error happen while trying to get the transaction receipt', error);
                return undefined;
            }
        }), pollingInterval);
        const [timeoutId, rejectOnTimeout] = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.rejectIfTimeout)(web3Context.transactionPollingTimeout, new web3_errors__WEBPACK_IMPORTED_MODULE_0__.TransactionPollingTimeoutError({
            numberOfSeconds: web3Context.transactionPollingTimeout / 1000,
            transactionHash,
        }));
        const [rejectOnBlockTimeout, blockTimeoutResourceCleaner] = yield (0,_reject_if_block_timeout_js__WEBPACK_IMPORTED_MODULE_2__.rejectIfBlockTimeout)(web3Context, transactionHash);
        try {
            // If an error happened here, do not catch it, just clear the resources before raising it to the caller function.
            return yield Promise.race([
                awaitableTransactionReceipt,
                rejectOnTimeout, // this will throw an error on Transaction Polling Timeout
                rejectOnBlockTimeout, // this will throw an error on Transaction Block Timeout
            ]);
        }
        finally {
            if (timeoutId)
                clearTimeout(timeoutId);
            if (IntervalId)
                clearInterval(IntervalId);
            blockTimeoutResourceCleaner.clean();
        }
    });
}
//# sourceMappingURL=wait_for_transaction_receipt.js.map

/***/ }),

/***/ "./node_modules/web3-eth/lib/esm/utils/watch_transaction_by_polling.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/watch_transaction_by_polling.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   watchTransactionByPolling: () => (/* binding */ watchTransactionByPolling)
/* harmony export */ });
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_rpc_methods__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-rpc-methods */ "./node_modules/web3-rpc-methods/lib/esm/index.js");
/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../schemas.js */ "./node_modules/web3-eth/lib/esm/schemas.js");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



/**
 * This function watches a Transaction by subscribing to new heads.
 * It is used by `watchTransactionForConfirmations`, in case the provider does not support subscription.
 * And it is also used by `watchTransactionBySubscription`, as a fallback, if the subscription failed for any reason.
 */
const watchTransactionByPolling = ({ web3Context, transactionReceipt, transactionPromiEvent, customTransactionReceiptSchema, returnFormat, }) => {
    var _a;
    // Having a transactionReceipt means that the transaction has already been included
    // in at least one block, so we start with 1
    let confirmations = 1;
    const intervalId = setInterval(() => {
        (() => __awaiter(void 0, void 0, void 0, function* () {
            if (confirmations >= web3Context.transactionConfirmationBlocks) {
                clearInterval(intervalId);
                return;
            }
            const nextBlock = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_1__.ethRpcMethods.getBlockByNumber(web3Context.requestManager, (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(BigInt(transactionReceipt.blockNumber) + BigInt(confirmations)), false);
            if (nextBlock === null || nextBlock === void 0 ? void 0 : nextBlock.hash) {
                confirmations += 1;
                transactionPromiEvent.emit('confirmation', {
                    confirmations: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({ format: 'uint' }, confirmations, returnFormat),
                    receipt: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)(customTransactionReceiptSchema !== null && customTransactionReceiptSchema !== void 0 ? customTransactionReceiptSchema : _schemas_js__WEBPACK_IMPORTED_MODULE_2__.transactionReceiptSchema, transactionReceipt, returnFormat),
                    latestBlockHash: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({ format: 'bytes32' }, nextBlock.hash, returnFormat),
                });
            }
        }))();
    }, (_a = web3Context.transactionReceiptPollingInterval) !== null && _a !== void 0 ? _a : web3Context.transactionPollingInterval);
};
//# sourceMappingURL=watch_transaction_by_polling.js.map

/***/ }),

/***/ "./node_modules/web3-eth/lib/esm/utils/watch_transaction_by_subscription.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/watch_transaction_by_subscription.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   watchTransactionBySubscription: () => (/* binding */ watchTransactionBySubscription)
/* harmony export */ });
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../schemas.js */ "./node_modules/web3-eth/lib/esm/schemas.js");
/* harmony import */ var _watch_transaction_by_polling_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./watch_transaction_by_polling.js */ "./node_modules/web3-eth/lib/esm/utils/watch_transaction_by_polling.js");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



/**
 * This function watches a Transaction by subscribing to new heads.
 * It is used by `watchTransactionForConfirmations`, in case the provider supports subscription.
 */
const watchTransactionBySubscription = ({ web3Context, transactionReceipt, transactionPromiEvent, customTransactionReceiptSchema, returnFormat, }) => {
    // The following variable will stay true except if the data arrived,
    //	or if watching started after an error had occurred.
    let needToWatchLater = true;
    let lastCaughtBlockHash;
    setImmediate(() => {
        var _a;
        (_a = web3Context.subscriptionManager) === null || _a === void 0 ? void 0 : _a.subscribe('newHeads').then((subscription) => {
            subscription.on('data', (newBlockHeader) => __awaiter(void 0, void 0, void 0, function* () {
                var _a;
                needToWatchLater = false;
                if (!(newBlockHeader === null || newBlockHeader === void 0 ? void 0 : newBlockHeader.number) ||
                    // For some cases, the on-data event is fired couple times for the same block!
                    // This needs investigation but seems to be because of multiple `subscription.on('data'...)` even this should not cause that.
                    lastCaughtBlockHash === (newBlockHeader === null || newBlockHeader === void 0 ? void 0 : newBlockHeader.parentHash)) {
                    return;
                }
                lastCaughtBlockHash = newBlockHeader === null || newBlockHeader === void 0 ? void 0 : newBlockHeader.parentHash;
                const confirmations = BigInt(newBlockHeader.number) -
                    BigInt(transactionReceipt.blockNumber) +
                    BigInt(1);
                transactionPromiEvent.emit('confirmation', {
                    confirmations: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({ format: 'uint' }, confirmations, returnFormat),
                    receipt: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)(customTransactionReceiptSchema !== null && customTransactionReceiptSchema !== void 0 ? customTransactionReceiptSchema : _schemas_js__WEBPACK_IMPORTED_MODULE_1__.transactionReceiptSchema, transactionReceipt, returnFormat),
                    latestBlockHash: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({ format: 'bytes32' }, newBlockHeader.parentHash, returnFormat),
                });
                if (confirmations >= web3Context.transactionConfirmationBlocks) {
                    yield ((_a = web3Context.subscriptionManager) === null || _a === void 0 ? void 0 : _a.removeSubscription(subscription));
                }
            }));
            subscription.on('error', () => __awaiter(void 0, void 0, void 0, function* () {
                var _a;
                yield ((_a = web3Context.subscriptionManager) === null || _a === void 0 ? void 0 : _a.removeSubscription(subscription));
                needToWatchLater = false;
                (0,_watch_transaction_by_polling_js__WEBPACK_IMPORTED_MODULE_2__.watchTransactionByPolling)({
                    web3Context,
                    transactionReceipt,
                    transactionPromiEvent,
                    customTransactionReceiptSchema,
                    returnFormat,
                });
            }));
        }).catch(() => {
            needToWatchLater = false;
            (0,_watch_transaction_by_polling_js__WEBPACK_IMPORTED_MODULE_2__.watchTransactionByPolling)({
                web3Context,
                transactionReceipt,
                customTransactionReceiptSchema,
                transactionPromiEvent,
                returnFormat,
            });
        });
    });
    // Fallback to polling if tx receipt didn't arrived in "blockHeaderTimeout" [10 seconds]
    setTimeout(() => {
        if (needToWatchLater) {
            (0,_watch_transaction_by_polling_js__WEBPACK_IMPORTED_MODULE_2__.watchTransactionByPolling)({
                web3Context,
                transactionReceipt,
                transactionPromiEvent,
                returnFormat,
            });
        }
    }, web3Context.blockHeaderTimeout * 1000);
};
//# sourceMappingURL=watch_transaction_by_subscription.js.map

/***/ }),

/***/ "./node_modules/web3-eth/lib/esm/utils/watch_transaction_for_confirmations.js":
/*!************************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/watch_transaction_for_confirmations.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   watchTransactionForConfirmations: () => (/* binding */ watchTransactionForConfirmations)
/* harmony export */ });
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../schemas.js */ "./node_modules/web3-eth/lib/esm/schemas.js");
/* harmony import */ var _watch_transaction_by_polling_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./watch_transaction_by_polling.js */ "./node_modules/web3-eth/lib/esm/utils/watch_transaction_by_polling.js");
/* harmony import */ var _watch_transaction_by_subscription_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./watch_transaction_by_subscription.js */ "./node_modules/web3-eth/lib/esm/utils/watch_transaction_by_subscription.js");






function watchTransactionForConfirmations(web3Context, transactionPromiEvent, transactionReceipt, transactionHash, returnFormat, customTransactionReceiptSchema) {
    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transactionReceipt) || (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transactionReceipt.blockHash))
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.TransactionMissingReceiptOrBlockHashError({
            receipt: transactionReceipt,
            blockHash: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({ format: 'bytes32' }, transactionReceipt === null || transactionReceipt === void 0 ? void 0 : transactionReceipt.blockHash, returnFormat),
            transactionHash: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({ format: 'bytes32' }, transactionHash, returnFormat),
        });
    if (!transactionReceipt.blockNumber)
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.TransactionReceiptMissingBlockNumberError({ receipt: transactionReceipt });
    // As we have the receipt, it's the first confirmation that tx is accepted.
    transactionPromiEvent.emit('confirmation', {
        confirmations: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({ format: 'uint' }, 1, returnFormat),
        receipt: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)(customTransactionReceiptSchema !== null && customTransactionReceiptSchema !== void 0 ? customTransactionReceiptSchema : _schemas_js__WEBPACK_IMPORTED_MODULE_3__.transactionReceiptSchema, transactionReceipt, returnFormat),
        latestBlockHash: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({ format: 'bytes32' }, transactionReceipt.blockHash, returnFormat),
    });
    // so a subscription for newBlockHeaders can be made instead of polling
    const provider = web3Context.requestManager.provider;
    if (provider && 'supportsSubscriptions' in provider && provider.supportsSubscriptions()) {
        (0,_watch_transaction_by_subscription_js__WEBPACK_IMPORTED_MODULE_5__.watchTransactionBySubscription)({
            web3Context,
            transactionReceipt,
            transactionPromiEvent,
            customTransactionReceiptSchema,
            returnFormat,
        });
    }
    else {
        (0,_watch_transaction_by_polling_js__WEBPACK_IMPORTED_MODULE_4__.watchTransactionByPolling)({
            web3Context,
            transactionReceipt,
            transactionPromiEvent,
            customTransactionReceiptSchema,
            returnFormat,
        });
    }
}
//# sourceMappingURL=watch_transaction_for_confirmations.js.map

/***/ }),

/***/ "./node_modules/web3-eth/lib/esm/validation.js":
/*!*****************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/validation.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isAccessList: () => (/* binding */ isAccessList),
/* harmony export */   isAccessListEntry: () => (/* binding */ isAccessListEntry),
/* harmony export */   isBaseTransaction: () => (/* binding */ isBaseTransaction),
/* harmony export */   isTransaction1559Unsigned: () => (/* binding */ isTransaction1559Unsigned),
/* harmony export */   isTransaction2930Unsigned: () => (/* binding */ isTransaction2930Unsigned),
/* harmony export */   isTransactionCall: () => (/* binding */ isTransactionCall),
/* harmony export */   isTransactionLegacyUnsigned: () => (/* binding */ isTransactionLegacyUnsigned),
/* harmony export */   isTransactionWithSender: () => (/* binding */ isTransactionWithSender),
/* harmony export */   validateBaseChain: () => (/* binding */ validateBaseChain),
/* harmony export */   validateChainInfo: () => (/* binding */ validateChainInfo),
/* harmony export */   validateCustomChainInfo: () => (/* binding */ validateCustomChainInfo),
/* harmony export */   validateFeeMarketGas: () => (/* binding */ validateFeeMarketGas),
/* harmony export */   validateGas: () => (/* binding */ validateGas),
/* harmony export */   validateHardfork: () => (/* binding */ validateHardfork),
/* harmony export */   validateLegacyGas: () => (/* binding */ validateLegacyGas),
/* harmony export */   validateTransactionCall: () => (/* binding */ validateTransactionCall),
/* harmony export */   validateTransactionForSigning: () => (/* binding */ validateTransactionForSigning),
/* harmony export */   validateTransactionWithSender: () => (/* binding */ validateTransactionWithSender)
/* harmony export */ });
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var _utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/format_transaction.js */ "./node_modules/web3-eth/lib/esm/utils/format_transaction.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/




function isBaseTransaction(value) {
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.to) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isAddress)(value.to))
        return false;
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.type) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.type) && value.type.length !== 2)
        return false;
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.nonce))
        return false;
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.gas))
        return false;
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.value))
        return false;
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.input))
        return false;
    if (value.chainId && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.chainId))
        return false;
    return true;
}
function isAccessListEntry(value) {
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.address) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isAddress)(value.address))
        return false;
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.storageKeys) &&
        !value.storageKeys.every(storageKey => (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexString32Bytes)(storageKey)))
        return false;
    return true;
}
function isAccessList(value) {
    if (!Array.isArray(value) ||
        !value.every(accessListEntry => isAccessListEntry(accessListEntry)))
        return false;
    return true;
}
function isTransaction1559Unsigned(value) {
    if (!isBaseTransaction(value))
        return false;
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.maxFeePerGas))
        return false;
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.maxPriorityFeePerGas))
        return false;
    if (!isAccessList(value.accessList))
        return false;
    return true;
}
function isTransaction2930Unsigned(value) {
    if (!isBaseTransaction(value))
        return false;
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.gasPrice))
        return false;
    if (!isAccessList(value.accessList))
        return false;
    return true;
}
function isTransactionLegacyUnsigned(value) {
    if (!isBaseTransaction(value))
        return false;
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.gasPrice))
        return false;
    return true;
}
function isTransactionWithSender(value) {
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isAddress)(value.from))
        return false;
    if (!isBaseTransaction(value))
        return false;
    if (!isTransaction1559Unsigned(value) &&
        !isTransaction2930Unsigned(value) &&
        !isTransactionLegacyUnsigned(value))
        return false;
    return true;
}
function validateTransactionWithSender(value) {
    if (!isTransactionWithSender(value))
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidTransactionWithSender(value);
}
function isTransactionCall(value) {
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.from) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isAddress)(value.from))
        return false;
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isAddress)(value.to))
        return false;
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.gas) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.gas))
        return false;
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.gasPrice) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.gasPrice))
        return false;
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.value) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.value))
        return false;
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.data) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.data))
        return false;
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.input) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.input))
        return false;
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.type))
        return false;
    if (isTransaction1559Unsigned(value))
        return false;
    if (isTransaction2930Unsigned(value))
        return false;
    return true;
}
function validateTransactionCall(value) {
    if (!isTransactionCall(value))
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidTransactionCall(value);
}
const validateCustomChainInfo = (transaction) => {
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.common)) {
        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.common.customChain))
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.MissingCustomChainError();
        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.common.customChain.chainId))
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.MissingCustomChainIdError();
        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.chainId) &&
            transaction.chainId !== transaction.common.customChain.chainId)
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.ChainIdMismatchError({
                txChainId: transaction.chainId,
                customChainId: transaction.common.customChain.chainId,
            });
    }
};
const validateChainInfo = (transaction) => {
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.common) &&
        !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.chain) &&
        !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.hardfork)) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.CommonOrChainAndHardforkError();
    }
    if ((!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.chain) && (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.hardfork)) ||
        (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.hardfork) && (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.chain)))
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.MissingChainOrHardforkError({
            chain: transaction.chain,
            hardfork: transaction.hardfork,
        });
};
const validateBaseChain = (transaction) => {
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.common))
        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.common.baseChain))
            if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.chain) &&
                transaction.chain !== transaction.common.baseChain) {
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.ChainMismatchError({
                    txChain: transaction.chain,
                    baseChain: transaction.common.baseChain,
                });
            }
};
const validateHardfork = (transaction) => {
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.common))
        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.common.hardfork))
            if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.hardfork) &&
                transaction.hardfork !== transaction.common.hardfork) {
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.HardforkMismatchError({
                    txHardfork: transaction.hardfork,
                    commonHardfork: transaction.common.hardfork,
                });
            }
};
const validateLegacyGas = (transaction) => {
    if (
    // This check is verifying gas and gasPrice aren't less than 0.
    (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.gas) ||
        !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isUInt)(transaction.gas) ||
        (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.gasPrice) ||
        !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isUInt)(transaction.gasPrice))
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidGasOrGasPrice({
            gas: transaction.gas,
            gasPrice: transaction.gasPrice,
        });
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.maxFeePerGas) || !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.maxPriorityFeePerGas))
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.UnsupportedFeeMarketError({
            maxFeePerGas: transaction.maxFeePerGas,
            maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,
        });
};
const validateFeeMarketGas = (transaction) => {
    // These errors come from 1.x, so they must be checked before
    // InvalidMaxPriorityFeePerGasOrMaxFeePerGas to throw the same error
    // for the same code executing in 1.x
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.gasPrice) && transaction.type === '0x2')
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.Eip1559GasPriceError(transaction.gasPrice);
    if (transaction.type === '0x0' || transaction.type === '0x1')
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.UnsupportedFeeMarketError({
            maxFeePerGas: transaction.maxFeePerGas,
            maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,
        });
    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.maxFeePerGas) ||
        !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isUInt)(transaction.maxFeePerGas) ||
        (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.maxPriorityFeePerGas) ||
        !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isUInt)(transaction.maxPriorityFeePerGas))
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidMaxPriorityFeePerGasOrMaxFeePerGas({
            maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,
            maxFeePerGas: transaction.maxFeePerGas,
        });
};
/**
 * This method checks if all required gas properties are present for either
 * legacy gas (type 0x0 and 0x1) OR fee market transactions (0x2)
 */
const validateGas = (transaction) => {
    const gasPresent = !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.gas) || !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.gasLimit);
    const legacyGasPresent = gasPresent && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.gasPrice);
    const feeMarketGasPresent = gasPresent &&
        !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.maxPriorityFeePerGas) &&
        !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.maxFeePerGas);
    if (!legacyGasPresent && !feeMarketGasPresent)
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.MissingGasError({
            gas: transaction.gas,
            gasPrice: transaction.gasPrice,
            maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,
            maxFeePerGas: transaction.maxFeePerGas,
        });
    if (legacyGasPresent && feeMarketGasPresent)
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.TransactionGasMismatchError({
            gas: transaction.gas,
            gasPrice: transaction.gasPrice,
            maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,
            maxFeePerGas: transaction.maxFeePerGas,
        });
    (legacyGasPresent ? validateLegacyGas : validateFeeMarketGas)(transaction);
    (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.type) && transaction.type > '0x1'
        ? validateFeeMarketGas
        : validateLegacyGas)(transaction);
};
const validateTransactionForSigning = (transaction, overrideMethod, options = { transactionSchema: undefined }) => {
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(overrideMethod)) {
        overrideMethod(transaction);
        return;
    }
    if (typeof transaction !== 'object' || (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction))
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidTransactionObjectError(transaction);
    validateCustomChainInfo(transaction);
    validateChainInfo(transaction);
    validateBaseChain(transaction);
    validateHardfork(transaction);
    const formattedTransaction = (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_3__.formatTransaction)(transaction, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT, {
        transactionSchema: options.transactionSchema,
    });
    validateGas(formattedTransaction);
    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(formattedTransaction.nonce) ||
        (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(formattedTransaction.chainId) ||
        formattedTransaction.nonce.startsWith('-') ||
        formattedTransaction.chainId.startsWith('-'))
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidNonceOrChainIdError({
            nonce: transaction.nonce,
            chainId: transaction.chainId,
        });
};
//# sourceMappingURL=validation.js.map

/***/ }),

/***/ "./node_modules/web3-eth/lib/esm/web3_eth.js":
/*!***************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/web3_eth.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Web3Eth: () => (/* binding */ Web3Eth),
/* harmony export */   registeredSubscriptions: () => (/* binding */ registeredSubscriptions)
/* harmony export */ });
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/* harmony import */ var web3_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-core */ "./node_modules/web3-core/lib/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! web3-rpc-methods */ "./node_modules/web3-rpc-methods/lib/esm/index.js");
/* harmony import */ var _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./rpc_method_wrappers.js */ "./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js");
/* harmony import */ var _filtering_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./filtering_rpc_method_wrappers.js */ "./node_modules/web3-eth/lib/esm/filtering_rpc_method_wrappers.js");
/* harmony import */ var _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./web3_subscriptions.js */ "./node_modules/web3-eth/lib/esm/web3_subscriptions.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
// Disabling because returnTypes must be last param to match 1.x params
/* eslint-disable default-param-last */








const registeredSubscriptions = {
    logs: _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_7__.LogsSubscription,
    newPendingTransactions: _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_7__.NewPendingTransactionsSubscription,
    newHeads: _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_7__.NewHeadsSubscription,
    syncing: _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_7__.SyncingSubscription,
    pendingTransactions: _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_7__.NewPendingTransactionsSubscription, // the same as newPendingTransactions. just for support API like in version 1.x
    newBlockHeaders: _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_7__.NewHeadsSubscription, // the same as newHeads. just for support API like in version 1.x
};
/**
 *
 * The Web3Eth allows you to interact with an Ethereum blockchain.
 *
 * For using Web3 Eth functions, first install Web3 package using `npm i web3` or `yarn add web3` based on your package manager usage.
 * After that, Web3 Eth functions will be available as mentioned in following snippet.
 * ```ts
 * import { Web3 } from 'web3';
 * const web3 = new Web3('https://mainnet.infura.io/v3/<YOURPROJID>');
 *
 * const block = await web3.eth.getBlock(0);
 *
 * ```
 *
 * For using individual package install `web3-eth` package using `npm i web3-eth` or `yarn add web3-eth` and only import required functions.
 * This is more efficient approach for building lightweight applications.
 * ```ts
 * import { Web3Eth } from 'web3-eth';
 *
 * const eth = new Web3Eth('https://mainnet.infura.io/v3/<YOURPROJID>');
 * const block = await eth.getBlock(0);
 *
 * ```
 */
class Web3Eth extends web3_core__WEBPACK_IMPORTED_MODULE_1__.Web3Context {
    constructor(
    // eslint-disable-next-line  @typescript-eslint/no-explicit-any
    providerOrContext) {
        if (typeof providerOrContext === 'string' ||
            // eslint-disable-next-line  @typescript-eslint/no-explicit-any
            (0,web3_core__WEBPACK_IMPORTED_MODULE_1__.isSupportedProvider)(providerOrContext)) {
            // @ts-expect-error disable the error: "A 'super' call must be a root-level statement within a constructor of a derived class that contains initialized properties, parameter properties, or private identifiers."
            super({
                // eslint-disable-next-line  @typescript-eslint/no-explicit-any
                provider: providerOrContext,
                registeredSubscriptions,
            });
            return;
        }
        if (providerOrContext.registeredSubscriptions) {
            super(providerOrContext);
            return;
        }
        super(Object.assign(Object.assign({}, providerOrContext), { registeredSubscriptions }));
        // an alias for calculateFeeData
        // eslint-disable-next-line
        this.getFeeData = this.calculateFeeData;
    }
    setTransactionMiddleware(transactionMiddleware) {
        this.transactionMiddleware = transactionMiddleware;
    }
    getTransactionMiddleware() {
        return this.transactionMiddleware;
    }
    /**
     * @returns Returns the ethereum protocol version of the node.
     *
     * ```ts
     * web3.eth.getProtocolVersion().then(console.log);
     * > "63"
     * ```
     */
    getProtocolVersion() {
        return __awaiter(this, void 0, void 0, function* () {
            return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.ethRpcMethods.getProtocolVersion(this.requestManager);
        });
    }
    // TODO Add returnFormat parameter
    /**
     * Checks if the node is currently syncing.
     *
     * @returns Either a {@link SyncingStatusAPI}, or `false`.
     *
     * ```ts
     * web3.eth.isSyncing().then(console.log);
     * > {
     *     startingBlock: 100,
     *     currentBlock: 312,
     *     highestBlock: 512,
     *     knownStates: 234566,
     *     pulledStates: 123455
     * }
     * ```
     */
    isSyncing() {
        return __awaiter(this, void 0, void 0, function* () {
            return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.ethRpcMethods.getSyncing(this.requestManager);
        });
    }
    // TODO consider adding returnFormat parameter (to format address as bytes)
    /**
     * @returns Returns the coinbase address to which mining rewards will go.
     *
     * ```ts
     * web3.eth.getCoinbase().then(console.log);
     * > "0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe"
     * ```
     */
    getCoinbase() {
        return __awaiter(this, void 0, void 0, function* () {
            return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.ethRpcMethods.getCoinbase(this.requestManager);
        });
    }
    /**
     * Checks whether the node is mining or not.
     *
     * @returns `true` if the node is mining, otherwise `false`.
     *
     * ```ts
     * web3.eth.isMining().then(console.log);
     * > true
     * ```
     */
    isMining() {
        return __awaiter(this, void 0, void 0, function* () {
            return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.ethRpcMethods.getMining(this.requestManager);
        });
    }
    /**
     * @deprecated Will be removed in the future, please use {@link Web3Eth.getHashRate} method instead.
     *
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.
     * @returns The number of hashes per second that the node is mining with.
     *
     * ```ts
     * web3.eth.getHashrate().then(console.log);
     * > 493736n
     *
     * web3.eth.getHashrate({ number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);
     * > "0x788a8"
     * ```
     */
    getHashrate(returnFormat) {
        return __awaiter(this, void 0, void 0, function* () {
            var _a;
            if (returnFormat === void 0) { returnFormat = ((_a = this.defaultReturnFormat) !== null && _a !== void 0 ? _a : web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT); }
            return this.getHashRate(returnFormat);
        });
    }
    /**
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.
     * @returns The number of hashes per second that the node is mining with.
     *
     * ```ts
     * web3.eth.getHashRate().then(console.log);
     * > 493736n
     *
     * web3.eth.getHashRate({ number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);
     * > "0x788a8"
     * ```
     */
    getHashRate() {
        return __awaiter(this, arguments, void 0, function* (returnFormat = this.defaultReturnFormat) {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getHashRate(this, returnFormat);
        });
    }
    /**
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.
     * @returns The gas price determined by the last few blocks median gas price.
     *
     * ```ts
     * web3.eth.getGasPrice().then(console.log);
     * > 20000000000n
     *
     * web3.eth.getGasPrice({ number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);
     * > "0x4a817c800"
     * ```
     */
    getGasPrice() {
        return __awaiter(this, arguments, void 0, function* (returnFormat = this.defaultReturnFormat) {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getGasPrice(this, returnFormat);
        });
    }
    /**
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.
     * @returns the current maxPriorityFeePerGas per gas in wei.
     *
     * ```ts
     * web3.eth.getMaxPriorityFeePerGas().then(console.log);
     * > 20000000000n
     *
     * web3.eth.getMaxPriorityFeePerGas({ number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);
     * > "0x4a817c800"
     * ```
     */
    getMaxPriorityFeePerGas() {
        return __awaiter(this, arguments, void 0, function* (returnFormat = this.defaultReturnFormat) {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getMaxPriorityFeePerGas(this, returnFormat);
        });
    }
    /**
     * Calculates the current Fee Data.
     * If the node supports EIP-1559, then `baseFeePerGas` and `maxPriorityFeePerGas` will be returned along with the calculated `maxFeePerGas` value.
     * `maxFeePerGas` is calculated as `baseFeePerGas` * `baseFeePerGasFactor` + `maxPriorityFeePerGas`.
     * If the node does not support EIP-1559, then the `gasPrice` will be returned and the other values will be undefined.
     *
     * @param baseFeePerGasFactor (optional) The factor to multiply the `baseFeePerGas` with when calculating `maxFeePerGas`, if the node supports EIP-1559. This can be a `bigint` for precise calculation or a `number` to support decimals. The default value is 2 (BigInt).
     * If a `number` is provided, it will be converted to `bigint` with three decimal precision.
     * @param alternativeMaxPriorityFeePerGas (optional) The alternative `maxPriorityFeePerGas` to use when calculating `maxFeePerGas`, if the node supports EIP-1559 but does not support the method `eth_maxPriorityFeePerGas`. The default value is 1 gwei.
     * @returns The current fee data.
     *
     * @example
     * web3.eth.calculateFeeData().then(console.log);
     * > {
     *     gasPrice: 20000000000n,
     *     maxFeePerGas: 60000000000n,
     *     maxPriorityFeePerGas: 20000000000n,
     *     baseFeePerGas: 20000000000n
     * }
     *
     * @example
     * // Using a `bigint` for baseFeePerGasFactor
     * web3.eth.calculateFeeData(1n).then(console.log);
     * > {
     *     gasPrice: 20000000000n,
     *     maxFeePerGas: 40000000000n,
     *     maxPriorityFeePerGas: 20000000000n,
     *     baseFeePerGas: 20000000000n
     * }
     *
     * @example
     * // Using a `number` for baseFeePerGasFactor (with decimals)
     * web3.eth.calculateFeeData(1.5).then(console.log);
     * > {
     *     gasPrice: 20000000000n,
     *     maxFeePerGas: 50000000000n,  // baseFeePerGasFactor is converted to BigInt(1.500)
     *     maxPriorityFeePerGas: 20000000000n,
     *     baseFeePerGas: 20000000000n
     * }
     *
     * @example
     * web3.eth.calculateFeeData(3n).then(console.log);
     * > {
     *     gasPrice: 20000000000n,
     *     maxFeePerGas: 80000000000n,
     *     maxPriorityFeePerGas: 20000000000n,
     *     baseFeePerGas: 20000000000n
     * }
     */
    calculateFeeData() {
        return __awaiter(this, arguments, void 0, function* (baseFeePerGasFactor = BigInt(2), alternativeMaxPriorityFeePerGas = web3_utils__WEBPACK_IMPORTED_MODULE_3__.ethUnitMap.Gwei) {
            var _a;
            const block = yield this.getBlock(undefined, false);
            const baseFeePerGas = (_a = block === null || block === void 0 ? void 0 : block.baseFeePerGas) !== null && _a !== void 0 ? _a : undefined; // use undefined if it was null
            let gasPrice;
            try {
                gasPrice = yield this.getGasPrice();
            }
            catch (error) {
                // do nothing
            }
            let maxPriorityFeePerGas;
            try {
                maxPriorityFeePerGas = yield this.getMaxPriorityFeePerGas();
            }
            catch (error) {
                // do nothing
            }
            let maxFeePerGas;
            // if the `block.baseFeePerGas` is available, then EIP-1559 is supported
            // and we can calculate the `maxFeePerGas` from the `block.baseFeePerGas`
            if (baseFeePerGas) {
                // tip the miner with alternativeMaxPriorityFeePerGas, if no value available from getMaxPriorityFeePerGas
                maxPriorityFeePerGas = maxPriorityFeePerGas !== null && maxPriorityFeePerGas !== void 0 ? maxPriorityFeePerGas : alternativeMaxPriorityFeePerGas;
                // basically maxFeePerGas = (baseFeePerGas +- 12.5%) + maxPriorityFeePerGas
                // and we multiply the `baseFeePerGas` by `baseFeePerGasFactor`, to allow
                // trying to include the transaction in the next few blocks even if the
                // baseFeePerGas is increasing fast
                let baseFeeMultiplier;
                if (typeof baseFeePerGasFactor === 'number') {
                    // Convert number to bigint with three decimal places
                    baseFeeMultiplier = BigInt(Math.floor(baseFeePerGasFactor * 1000)) / BigInt(1000);
                }
                else {
                    // It's already a BigInt, so just use it as-is
                    baseFeeMultiplier = baseFeePerGasFactor;
                }
                maxFeePerGas = baseFeePerGas * baseFeeMultiplier + maxPriorityFeePerGas;
            }
            return { gasPrice, maxFeePerGas, maxPriorityFeePerGas, baseFeePerGas };
        });
    }
    /**
     * @returns A list of accounts the node controls (addresses are checksummed).
     *
     * ```ts
     * web3.eth.getAccounts().then(console.log);
     * > ["0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe", "0xDCc6960376d6C6dEa93647383FfB245CfCed97Cf"]
     * ```
     */
    getAccounts() {
        return __awaiter(this, void 0, void 0, function* () {
            var _a;
            const hexAddresses = (_a = (yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.ethRpcMethods.getAccounts(this.requestManager))) !== null && _a !== void 0 ? _a : [];
            return hexAddresses.map(address => (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.toChecksumAddress)(address));
        });
    }
    /**
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.
     * @returns The current block number.
     *
     * ```ts
     * web3.eth.getBlockNumber().then(console.log);
     * > 2744n
     *
     * web3.eth.getBlockNumber({ number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);
     * > "0xab8"
     * ```
     */
    getBlockNumber() {
        return __awaiter(this, arguments, void 0, function* (returnFormat = this.defaultReturnFormat) {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getBlockNumber(this, returnFormat);
        });
    }
    /**
     * Get the balance of an address at a given block.
     *
     * @param address The address to get the balance of.
     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) Specifies what block to use as the current state for the balance query.
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.
     * @returns The current balance for the given address in `wei`.
     *
     * ```ts
     * web3.eth.getBalance("0x407d73d8a49eeb85d32cf465507dd71d507100c1").then(console.log);
     * > 1000000000000n
     *
     * web3.eth.getBalance("0x407d73d8a49eeb85d32cf465507dd71d507100c1").then(console.log);
     * > "0xe8d4a51000"
     * ```
     */
    getBalance(address_1) {
        return __awaiter(this, arguments, void 0, function* (address, blockNumber = this.defaultBlock, returnFormat = this.defaultReturnFormat) {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getBalance(this, address, blockNumber, returnFormat);
        });
    }
    /**
     * Get the storage at a specific position of an address.
     *
     * @param address The address to get the storage from.
     * @param storageSlot The index position of the storage.
     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) Specifies what block to use as the current state for the storage query.
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.
     * @returns The value in storage at the given position.
     *
     * ```ts
     * web3.eth.getStorageAt("0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234", 0).then(console.log);
     * > "0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234"
     *
     * web3.eth.getStorageAt(
     *      "0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234",
     *      0,
     *      undefined,
     *      { number: FMT_NUMBER.HEX , bytes: FMT_BYTES.UINT8ARRAY }
     * ).then(console.log);
     * > Uint8Array(31) [
     *       3, 52,  86, 115,  33,  35, 255, 255,
     *       35, 66,  52,  45, 209,  35,  66,  67,
     *       67, 36,  35,  66,  52, 253,  35,  79,
     *       210, 63, 212, 242,  61,  66,  52
     *    ]
     * ```
     */
    getStorageAt(address_1, storageSlot_1) {
        return __awaiter(this, arguments, void 0, function* (address, storageSlot, blockNumber = this.defaultBlock, returnFormat = this.defaultReturnFormat) {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getStorageAt(this, address, storageSlot, blockNumber, returnFormat);
        });
    }
    /**
     * Get the code at a specific address.
     *
     * @param address The address to get the code from.
     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) Specifies what block to use as the current state for the code query.
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.
     * @returns The [data](https://ethereum.org/en/developers/docs/transactions/#the-data-field) at the provided `address`.
     *
     * ```ts
     * web3.eth.getCode("0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234").then(console.log);
     * > "0x600160008035811a818181146012578301005b601b6001356025565b8060005260206000f25b600060078202905091905056"
     *
     * web3.eth.getCode(
     *      "0x407d73d8a49eeb85d32cf465507dd71d507100c1",
     *      undefined,
     *      { number: FMT_NUMBER.HEX , bytes: FMT_BYTES.UINT8ARRAY }
     * ).then(console.log);
     * > Uint8Array(50) [
     *   96,  1,  96,   0, 128, 53, 129, 26, 129, 129, 129,
     *   20, 96,  18,  87, 131,  1,   0, 91,  96,  27,  96,
     *   1, 53,  96,  37,  86, 91, 128, 96,   0,  82,  96,
     *   32, 96,   0, 242,  91, 96,   0, 96,   7, 130,   2,
     *   144, 80, 145, 144,  80, 86
     * ]
     * ```
     */
    getCode(address_1) {
        return __awaiter(this, arguments, void 0, function* (address, blockNumber = this.defaultBlock, returnFormat = this.defaultReturnFormat) {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getCode(this, address, blockNumber, returnFormat);
        });
    }
    /**
     * Retrieves a {@link Block} matching the provided block number, block hash or block tag.
     *
     * @param block The {@link BlockNumberOrTag} (defaults to {@link Web3Eth.defaultBlock}) or block hash of the desired block.
     * @param hydrated If specified `true`, the returned block will contain all transactions as objects. If `false` it will only contain transaction hashes.
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted (does not format transaction objects or hashes).
     * @returns A {@link Block} object matching the provided block number or block hash.
     *
     * ```ts
     * web3.eth.getBlock(0).then(console.log);
     * > {
     *    hash: '0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d',
     *    parentHash: '0x0000000000000000000000000000000000000000000000000000000000000000',
     *    sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',
     *    miner: '0x0000000000000000000000000000000000000000',
     *    stateRoot: '0x5ed9882897d363c4632a6e67fba6203df61bd994813dcf048da59be442a9c6c4',
     *    transactionsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',
     *    receiptsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',
     *    logsBloom: '0x
     *    difficulty: 1n,
     *    number: 0n,
     *    gasLimit: 30000000n,
     *    gasUsed: 0n,
     *    timestamp: 1658281638n,
     *    extraData: '0x',
     *    mixHash: '0x0000000000000000000000000000000000000000000000000000000000000000',
     *    nonce: 0n,
     *    totalDifficulty: 1n,
     *    baseFeePerGas: 1000000000n,
     *    size: 514n,
     *    transactions: [],
     *    uncles: []
     *  }
     *
     * web3.eth.getBlock(
     *      "0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d",
     *      false,
     *      { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }
     * ).then(console.log);
     * > {
     *    hash: '0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d',
     *    parentHash: '0x0000000000000000000000000000000000000000000000000000000000000000',
     *    sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',
     *    miner: '0x0000000000000000000000000000000000000000',
     *    stateRoot: '0x5ed9882897d363c4632a6e67fba6203df61bd994813dcf048da59be442a9c6c4',
     *    transactionsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',
     *    receiptsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',
     *    logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
     *    difficulty: 1,
     *    number: 0,
     *    gasLimit: 30000000,
     *    gasUsed: 0,
     *    timestamp: 1658281638,
     *    extraData: '0x',
     *    mixHash: '0x0000000000000000000000000000000000000000000000000000000000000000',
     *    nonce: 0,
     *    totalDifficulty: 1,
     *    baseFeePerGas: 1000000000,
     *    size: 514,
     *    transactions: [],
     *    uncles: []
     *  }
     * ```
     */
    getBlock() {
        return __awaiter(this, arguments, void 0, function* (block = this.defaultBlock, hydrated = false, returnFormat = this.defaultReturnFormat) {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getBlock(this, block, hydrated, returnFormat);
        });
    }
    /**
     * @param block The {@link BlockNumberOrTag} (defaults to {@link Web3Eth.defaultBlock}) or block hash of the desired block.
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.
     * @returns The number of transactions in the provided block.
     *
     * ```ts
     * web3.eth.getBlockTransactionCount("0x407d73d8a49eeb85d32cf465507dd71d507100c1").then(console.log);
     * > 1n
     *
     * web3.eth.getBlockTransactionCount(
     *     "0x407d73d8a49eeb85d32cf465507dd71d507100c1",
     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }
     * ).then(console.log);
     * > 1
     * ```
     */
    getBlockTransactionCount() {
        return __awaiter(this, arguments, void 0, function* (block = this.defaultBlock, returnFormat = this.defaultReturnFormat) {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getBlockTransactionCount(this, block, returnFormat);
        });
    }
    /**
     * @param block The {@link BlockNumberOrTag} (defaults to {@link Web3Eth.defaultBlock}) or block hash of the desired block.
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.
     * @returns The number of [uncles](https://ethereum.org/en/glossary/#ommer) in the provided block.
     *
     * ```ts
     * web3.eth.getBlockUncleCount("0x407d73d8a49eeb85d32cf465507dd71d507100c1").then(console.log);
     * > 1n
     *
     * web3.eth.getBlockUncleCount(
     *     "0x407d73d8a49eeb85d32cf465507dd71d507100c1",
     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }
     * ).then(console.log);
     * > 1
     * ```
     */
    getBlockUncleCount() {
        return __awaiter(this, arguments, void 0, function* (block = this.defaultBlock, returnFormat = this.defaultReturnFormat) {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getBlockUncleCount(this, block, returnFormat);
        });
    }
    /**
     *
     * @param block The {@link BlockNumberOrTag} (defaults to {@link Web3Eth.defaultBlock}) or block hash of the desired block.
     * @param uncleIndex The index position of the uncle.
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.
     * @returns A blocks [uncle](https://ethereum.org/en/glossary/#ommer) by a given uncle index position.
     *
     * ```ts
     * web3.eth.getUncle(0, 1).then(console.log);
     * > {
     *    hash: '0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d',
     *    parentHash: '0x0000000000000000000000000000000000000000000000000000000000000000',
     *    sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',
     *    miner: '0x0000000000000000000000000000000000000000',
     *    stateRoot: '0x5ed9882897d363c4632a6e67fba6203df61bd994813dcf048da59be442a9c6c4',
     *    transactionsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',
     *    receiptsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',
     *    logsBloom: '0x
     *    difficulty: 1n,
     *    number: 0n,
     *    gasLimit: 30000000n,
     *    gasUsed: 0n,
     *    timestamp: 1658281638n,
     *    extraData: '0x',
     *    mixHash: '0x0000000000000000000000000000000000000000000000000000000000000000',
     *    nonce: 0n,
     *    totalDifficulty: 1n,
     *    baseFeePerGas: 1000000000n,
     *    size: 514n,
     *    transactions: [],
     *    uncles: []
     *  }
     *
     * web3.eth.getUncle(
     *      "0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d",
     *      1,
     *      { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }
     * ).then(console.log);
     * > {
     *    hash: '0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d',
     *    parentHash: '0x0000000000000000000000000000000000000000000000000000000000000000',
     *    sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',
     *    miner: '0x0000000000000000000000000000000000000000',
     *    stateRoot: '0x5ed9882897d363c4632a6e67fba6203df61bd994813dcf048da59be442a9c6c4',
     *    transactionsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',
     *    receiptsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',
     *    logsBloom: '0x
     *    difficulty: 1,
     *    number: 0,
     *    gasLimit: 30000000,
     *    gasUsed: 0,
     *    timestamp: 1658281638,
     *    extraData: '0x',
     *    mixHash: '0x0000000000000000000000000000000000000000000000000000000000000000',
     *    nonce: 0,
     *    totalDifficulty: 1,
     *    baseFeePerGas: 1000000000,
     *    size: 514,
     *    transactions: [],
     *    uncles: []
     *  }
     * ```
     */
    getUncle() {
        return __awaiter(this, arguments, void 0, function* (block = this.defaultBlock, uncleIndex, returnFormat = this.defaultReturnFormat) {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getUncle(this, block, uncleIndex, returnFormat);
        });
    }
    /**
     * @param transactionHash The hash of the desired transaction.
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.
     * @returns The desired transaction object.
     *
     * ```ts
     * web3.eth.getTransaction('0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc').then(console.log);
     * {
     *    hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',
     *    type: 0n,
     *    nonce: 0n,
     *    blockHash: '0x43202bd16b6bd54bea1b310736bd78bdbe93a64ad940f7586739d9eb25ad8d00',
     *    blockNumber: 1n,
     *    transactionIndex: 0n,
     *    from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',
     *    to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',
     *    value: 1n,
     *    gas: 90000n,
     *    gasPrice: 2000000000n,
     *    input: '0x',
     *    v: 2709n,
     *    r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',
     *    s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'
     *  }
     *
     * web3.eth.getTransaction(
     *     web3.utils.hexToBytes("0x30755ed65396facf86c53e6217c52b4daebe72aa4941d89635409de4c9c7f9466d4e9aaec7977f05e923889b33c0d0dd27d7226b6e6f56ce737465c5cfd04be400"),
     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }
     * ).then(console.log);
     * {
     *    hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',
     *    type: 0,
     *    nonce: 0,
     *    blockHash: '0x43202bd16b6bd54bea1b310736bd78bdbe93a64ad940f7586739d9eb25ad8d00',
     *    blockNumber: 1,
     *    transactionIndex: 0,
     *    from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',
     *    to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',
     *    value: 1,
     *    gas: 90000,
     *    gasPrice: 2000000000,
     *    input: '0x',
     *    v: 2709,
     *    r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',
     *    s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'
     *  }
     * ```
     */
    getTransaction(transactionHash_1) {
        return __awaiter(this, arguments, void 0, function* (transactionHash, returnFormat = this.defaultReturnFormat) {
            const response = yield _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getTransaction(this, transactionHash, returnFormat);
            if (!response)
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.TransactionNotFound();
            return response;
        });
    }
    /**
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.
     * @returns A list of pending transactions.
     *
     * ```ts
     * web3.eth.getPendingTransactions().then(console.log);
     * > [
     *      {
     *          hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',
     *          type: 0n,
     *          nonce: 0n,
     *          blockHash: '0x0000000000000000000000000000000000000000000000000000000000000000',
     *          blockNumber: null,
     *          transactionIndex: 0n,
     *          from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',
     *          to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',
     *          value: 1n,
     *          gas: 90000n,
     *          gasPrice: 2000000000n,
     *          input: '0x',
     *          v: 2709n,
     *          r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',
     *          s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'
     *      },
     *      {
     *          hash: '0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f',
     *          type: 0n,
     *          nonce: 1n,
     *          blockHash: '0x0000000000000000000000000000000000000000000000000000000000000000',
     *          blockNumber: null,
     *          transactionIndex: 0n,
     *          from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',
     *          to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',
     *          value: 1n,
     *          gas: 90000n,
     *          gasPrice: 2000000000n,
     *          input: '0x',
     *          v: 2710n,
     *          r: '0x55ac19fade21db035a1b7ea0a8d49e265e05dbb926e75f273f836ad67ce5c96a',
     *          s: '0x6550036a7c3fd426d5c3d35d96a7075cd673957620b7889846a980d2d017ec08'
     *      }
     *   ]
     *
     * * web3.eth.getPendingTransactions({ number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }).then(console.log);
     * > [
     *      {
     *          hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',
     *          type: 0,
     *          nonce: 0,
     *          blockHash: '0x0000000000000000000000000000000000000000000000000000000000000000',
     *          blockNumber: null,
     *          transactionIndex: 0,
     *          from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',
     *          to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',
     *          value: 1,
     *          gas: 90000,
     *          gasPrice: 2000000000,
     *          input: '0x',
     *          v: 2709,
     *          r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',
     *          s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'
     *      },
     *      {
     *          hash: '0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f',
     *          type: 0,
     *          nonce: 1,
     *          blockHash: '0x0000000000000000000000000000000000000000000000000000000000000000',
     *          blockNumber: null,
     *          transactionIndex: 0,
     *          from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',
     *          to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',
     *          value: 1,
     *          gas: 90000,
     *          gasPrice: 2000000000,
     *          input: '0x',
     *          v: 2710,
     *          r: '0x55ac19fade21db035a1b7ea0a8d49e265e05dbb926e75f273f836ad67ce5c96a',
     *          s: '0x6550036a7c3fd426d5c3d35d96a7075cd673957620b7889846a980d2d017ec08'
     *      }
     *   ]
     * ```
     */
    getPendingTransactions() {
        return __awaiter(this, arguments, void 0, function* (returnFormat = this.defaultReturnFormat) {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getPendingTransactions(this, returnFormat);
        });
    }
    /**
     * @param block The {@link BlockNumberOrTag} (defaults to {@link Web3Eth.defaultBlock}) or block hash of the desired block.
     * @param transactionIndex The index position of the transaction.
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.
     * @returns The desired transaction object.
     *
     * ```ts
     * web3.eth.getTransactionFromBlock('0x43202bd16b6bd54bea1b310736bd78bdbe93a64ad940f7586739d9eb25ad8d00', 0).then(console.log);
     * {
     *    hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',
     *    type: 0n,
     *    nonce: 0n,
     *    blockHash: '0x43202bd16b6bd54bea1b310736bd78bdbe93a64ad940f7586739d9eb25ad8d00',
     *    blockNumber: 1n,
     *    transactionIndex: 0n,
     *    from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',
     *    to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',
     *    value: 1n,
     *    gas: 90000n,
     *    gasPrice: 2000000000n,
     *    input: '0x',
     *    v: 2709n,
     *    r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',
     *    s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'
     *  }
     *
     * web3.eth.getTransactionFromBlock(
     *     hexToBytes("0x30755ed65396facf86c53e6217c52b4daebe72aa4941d89635409de4c9c7f9466d4e9aaec7977f05e923889b33c0d0dd27d7226b6e6f56ce737465c5cfd04be400"),
     *     0,
     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }
     * ).then(console.log);
     * {
     *    hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',
     *    type: 0,
     *    nonce: 0,
     *    blockHash: '0x43202bd16b6bd54bea1b310736bd78bdbe93a64ad940f7586739d9eb25ad8d00',
     *    blockNumber: 1,
     *    transactionIndex: 0,
     *    from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',
     *    to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',
     *    value: 1,
     *    gas: 90000,
     *    gasPrice: 2000000000,
     *    input: '0x',
     *    v: 2709,
     *    r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',
     *    s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'
     *  }
     * ```
     */
    getTransactionFromBlock() {
        return __awaiter(this, arguments, void 0, function* (block = this.defaultBlock, transactionIndex, returnFormat = this.defaultReturnFormat) {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getTransactionFromBlock(this, block, transactionIndex, returnFormat);
        });
    }
    /**
     * @param transactionHash Hash of the transaction to retrieve the receipt for.
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.
     * @returns The desired {@link TransactionReceipt} object.
     *
     * ```ts
     * web3.eth.getTransactionReceipt("0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f").then(console.log);
     * > {
     *      transactionHash: '0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f',
     *      transactionIndex: 0n,
     *      blockNumber: 2n,
     *      blockHash: '0xeb1565a08b23429552dafa92e32409f42eb43944f7611963c63ce40e7243941a',
     *      from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',
     *      to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',
     *      cumulativeGasUsed: 21000n,
     *      gasUsed: 21000n,
     *      logs: [],
     *      logsBloom: '0x
     *      status: 1n,
     *      effectiveGasPrice: 2000000000n,
     *      type: 0n
     *  }
     *
     * web3.eth.getTransactionReceipt(
     *      "0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f",
     *      { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }
     * ).then(console.log);
     * > {
     *      transactionHash: '0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f',
     *      transactionIndex: 0,
     *      blockNumber: 2,
     *      blockHash: '0xeb1565a08b23429552dafa92e32409f42eb43944f7611963c63ce40e7243941a',
     *      from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',
     *      to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',
     *      cumulativeGasUsed: 21000,
     *      gasUsed: 21000,
     *      logs: [],
     *      logsBloom: '0x
     *      status: 1,
     *      effectiveGasPrice: 2000000000,
     *      type: 0n
     *  }
     * ```
     */
    getTransactionReceipt(transactionHash_1) {
        return __awaiter(this, arguments, void 0, function* (transactionHash, returnFormat = this.defaultReturnFormat) {
            const response = yield _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getTransactionReceipt(this, transactionHash, returnFormat);
            if (!response)
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.TransactionNotFound();
            return response;
        });
    }
    /**
     * @param address The address to get the number of transactions for.
     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) Specifies what block to use as the current state for the query.
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.
     * @returns The number of transactions sent from the provided address.
     *
     * ```ts
     * web3.eth.getTransactionCount("0x407d73d8a49eeb85d32cf465507dd71d507100c1").then(console.log);
     * > 1n
     *
     * web3.eth.getTransactionCount(
     *     "0x407d73d8a49eeb85d32cf465507dd71d507100c1",
     *     undefined,
     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }
     * ).then(console.log);
     * > 1
     * ```
     */
    getTransactionCount(address_1) {
        return __awaiter(this, arguments, void 0, function* (address, blockNumber = this.defaultBlock, returnFormat = this.defaultReturnFormat) {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getTransactionCount(this, address, blockNumber, returnFormat);
        });
    }
    /**
     * @param transaction The {@link Transaction}, {@link TransactionWithFromLocalWalletIndex}, {@link TransactionWithToLocalWalletIndex} or {@link TransactionWithFromAndToLocalWalletIndex} to send. __Note:__ In the `to` and `from` fields when hex strings are used, it is assumed they are addresses, for any other form (number, string number, etc.) it is assumed they are wallet indexes.
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.
     * @param options A configuration object used to change the behavior of the `sendTransaction` method.
     * @returns If `await`ed or `.then`d (i.e. the promise resolves), the transaction hash is returned.
     * ```ts
     * const transaction = {
     *   from: '0x6E599DA0bfF7A6598AC1224E4985430Bf16458a4',
     *   to: '0x6f1DF96865D09d21e8f3f9a7fbA3b17A11c7C53C',
     *   value: '0x1'
     * }
     *
     * const transactionReceipt = await web3.eth.sendTransaction(transaction);
     * console.log(transactionReceipt);
     * > {
     *      blockHash: '0x39cee0da843293ae3136cee0de4c0803745868b6e72b7cd05fba395bffa0ee85',
     *      blockNumber: 6659547n,
     *      cumulativeGasUsed: 1029036n,
     *      effectiveGasPrice: 6765796845n,
     *      from: '0x6E599DA0bfF7A6598AC1224E4985430Bf16458a4',
     *      gasUsed: 21000n,
     *      logs: [],
     *      logsBloom: '0x
     *      status: 1n,
     *      to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',
     *      transactionHash: '0x619de868dd73c07bd0c096adcd405c93c1e924fdf741e684a127a52324c28bb9',
     *      transactionIndex: 16n,
     *      type: 2n
     *}
     *
     * web3.eth.sendTransaction(transaction).then(console.log);
     * > {
     *      blockHash: '0x39cee0da843293ae3136cee0de4c0803745868b6e72b7cd05fba395bffa0ee85',
     *      blockNumber: 6659547n,
     *      cumulativeGasUsed: 1029036n,
     *      effectiveGasPrice: 6765796845n,
     *      from: '0x6E599DA0bfF7A6598AC1224E4985430Bf16458a4',
     *      gasUsed: 21000n,
     *      logs: [],
     *      logsBloom: '0x
     *      status: 1n,
     *      to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',
     *      transactionHash: '0x619de868dd73c07bd0c096adcd405c93c1e924fdf741e684a127a52324c28bb9',
     *      transactionIndex: 16n,
     *      type: 2n
     *}
     *
     * web3.eth.sendTransaction(transaction).catch(console.log);
     * > <Some TransactionError>
     *
     * // Example using options.ignoreGasPricing = true
     * web3.eth.sendTransaction(transaction, undefined, { ignoreGasPricing: true }).then(console.log);
     * > {
     *      blockHash: '0x39cee0da843293ae3136cee0de4c0803745868b6e72b7cd05fba395bffa0ee85',
     *      blockNumber: 6659547n,
     *      cumulativeGasUsed: 1029036n,
     *      effectiveGasPrice: 6765796845n,
     *      from: '0x6E599DA0bfF7A6598AC1224E4985430Bf16458a4',
     *      gasUsed: 21000n,
     *      logs: [],
     *      logsBloom: '0x
     *      status: 1n,
     *      to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',
     *      transactionHash: '0x619de868dd73c07bd0c096adcd405c93c1e924fdf741e684a127a52324c28bb9',
     *      transactionIndex: 16n,
     *      type: 2n
     *}
     * ```
     *
     *
     * Otherwise, a {@link Web3PromiEvent} is returned which has several events than can be listened to using the `.on` syntax, such as:
     * - `sending`
     * ```ts
     * web3.eth.sendTransaction(transaction).on('sending', transactionToBeSent => console.log(transactionToBeSent));
     * > {
     *      from: '0x6E599DA0bfF7A6598AC1224E4985430Bf16458a4',
     *      to: '0x6f1DF96865D09d21e8f3f9a7fbA3b17A11c7C53C',
     *      value: '0x1',
     *      gasPrice: '0x77359400',
     *      maxPriorityFeePerGas: undefined,
     *      maxFeePerGas: undefined
     * }
     * ```
     * - `sent`
     * ```ts
     * web3.eth.sendTransaction(transaction).on('sent', sentTransaction => console.log(sentTransaction));
     * > {
     *      from: '0x6E599DA0bfF7A6598AC1224E4985430Bf16458a4',
     *      to: '0x6f1DF96865D09d21e8f3f9a7fbA3b17A11c7C53C',
     *      value: '0x1',
     *      gasPrice: '0x77359400',
     *      maxPriorityFeePerGas: undefined,
     *      maxFeePerGas: undefined
     * }
     * ```
     * - `transactionHash`
     * ```ts
     * web3.eth.sendTransaction(transaction).on('transactionHash', transactionHash => console.log(transactionHash));
     * > 0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f
     * ```
     * - `receipt`
     * ```ts
     * web3.eth.sendTransaction(transaction).on('receipt', receipt => console.log(receipt));
     * > {
     *      transactionHash: '0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f',
     *      transactionIndex: 0n,
     *      blockNumber: 2n,
     *      blockHash: '0xeb1565a08b23429552dafa92e32409f42eb43944f7611963c63ce40e7243941a',
     *      from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',
     *      to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',
     *      cumulativeGasUsed: 21000n,
     *      gasUsed: 21000n,
     *      logs: [],
     *      logsBloom: '0x
     *      status: 1n,
     *      effectiveGasPrice: 2000000000n,
     *      type: 0n
     * }
     * ```
     * - `confirmation`
     * ```ts
     * web3.eth.sendTransaction(transaction).on('confirmation', confirmation => console.log(confirmation));
     * > {
     *      confirmations: 1n,
     *      receipt: {
     *         transactionHash: '0xb4a3a35ae0f3e77ef0ff7be42010d948d011b21a4e341072ee18717b67e99ab8',
     *         transactionIndex: 0n,
     *         blockNumber: 5n,
     *         blockHash: '0xb57fbe6f145cefd86a305a9a024a4351d15d4d39607d7af53d69a319bc3b5548',
     *         from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',
     *         to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',
     *         cumulativeGasUsed: 21000n,
     *         gasUsed: 21000n,
     *         logs: [],
     *         logsBloom: '0x
     *         status: 1n,
     *         effectiveGasPrice: 2000000000n,
     *         type: 0n
     *      },
     *      latestBlockHash: '0xb57fbe6f145cefd86a305a9a024a4351d15d4d39607d7af53d69a319bc3b5548'
     * }
     * ```
     * - `error`
     * ```ts
     * web3.eth.sendTransaction(transaction).on('error', error => console.log);
     * > <Some TransactionError>
     * ```
     */
    sendTransaction(transaction, returnFormat = this.defaultReturnFormat, options) {
        return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.sendTransaction(this, transaction, returnFormat, options, this.transactionMiddleware);
    }
    /**
     * @param transaction Signed transaction in one of the valid {@link Bytes} format.
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.
     * @param options A configuration object used to change the behavior of the method
     * @returns If `await`ed or `.then`d (i.e. the promise resolves), the transaction hash is returned.
     * ```ts
     * const signedTransaction = "0xf86580843b9aca0182520894e899f0130fd099c0b896b2ce4e5e15a25b23139a0180820a95a03a42d53ca5b71f845e1cd4c65359b05446a85d16881372d3bfaab8980935cb04a0711497bc8dd3b541152e2fed14fe650a647f1f0edab0d386ad9506f0e642410f"
     *
     * const transactionHash = await web3.eth.sendSignedTransaction(signedTransaction);
     * console.log(transactionHash);
     * > 0xed8c241ea44d57f4605dc22c63500de46254d6c7844fd65fa438b128c80cf700
     *
     * web3.eth.sendSignedTransaction(signedTransaction).then(console.log);
     * > 0xed8c241ea44d57f4605dc22c63500de46254d6c7844fd65fa438b128c80cf700
     *
     * web3.eth.sendSignedTransaction(signedTransaction).catch(console.log);
     * > <Some TransactionError>
     * ```
     *
     *
     * Otherwise, a {@link Web3PromiEvent} is returned which has several events than can be listened to using the `.on` syntax, such as:
     * - `sending`
     * ```ts
     * web3.eth.sendSignedTransaction(signedTransaction).on('sending', transactionToBeSent => console.log(transactionToBeSent));
     * > "0xf86580843b9aca0182520894e899f0130fd099c0b896b2ce4e5e15a25b23139a0180820a95a03a42d53ca5b71f845e1cd4c65359b05446a85d16881372d3bfaab8980935cb04a0711497bc8dd3b541152e2fed14fe650a647f1f0edab0d386ad9506f0e642410f"
     * ```
     * - `sent`
     * ```ts
     * web3.eth.sendSignedTransaction(signedTransaction).on('sent', sentTransaction => console.log(sentTransaction));
     * > "0xf86580843b9aca0182520894e899f0130fd099c0b896b2ce4e5e15a25b23139a0180820a95a03a42d53ca5b71f845e1cd4c65359b05446a85d16881372d3bfaab8980935cb04a0711497bc8dd3b541152e2fed14fe650a647f1f0edab0d386ad9506f0e642410f"
     * ```
     * - `transactionHash`
     * ```ts
     * web3.eth.sendSignedTransaction(signedTransaction).on('transactionHash', transactionHash => console.log(transactionHash));
     * > 0xed8c241ea44d57f4605dc22c63500de46254d6c7844fd65fa438b128c80cf700
     * ```
     * - `receipt`
     * ```ts
     * web3.eth.sendSignedTransaction(signedTransaction).on('receipt', receipt => console.log(receipt));
     * > {
     *      blockHash: '0xff2b1687995d81066361bc6affe4455746120a7d4bb75fc938211a2692a50081',
     *      blockNumber: 1n,
     *      cumulativeGasUsed: 21000n,
     *      effectiveGasPrice: 1000000001n,
     *      from: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',
     *      gasUsed: 21000n,
     *      logs: [],
     *      logsBloom: '0x
     *      status: 1n,
     *      to: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',
     *      transactionHash: '0xed8c241ea44d57f4605dc22c63500de46254d6c7844fd65fa438b128c80cf700',
     *      transactionIndex: 0n,
     *      type: 0n
     * }
     * ```
     * - `confirmation`
     * ```ts
     * web3.eth.sendSignedTransaction(signedTransaction).on('confirmation', confirmation => console.log(confirmation));
     * > {
     *     confirmations: 1n,
     *     receipt: {
     *          blockHash: '0xff2b1687995d81066361bc6affe4455746120a7d4bb75fc938211a2692a50081',
     *          blockNumber: 1n,
     *          cumulativeGasUsed: 21000n,
     *          effectiveGasPrice: 1000000001n,
     *          from: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',
     *          gasUsed: 21000n,
     *          logs: [],
     *          logsBloom: '0x
     *          status: 1n,
     *          to: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',
     *          transactionHash: '0xed8c241ea44d57f4605dc22c63500de46254d6c7844fd65fa438b128c80cf700',
     *          transactionIndex: 0n,
     *          type: 0n
     *     },
     *     latestBlockHash: '0xff2b1687995d81066361bc6affe4455746120a7d4bb75fc938211a2692a50081'
     * }
     * ```
     * - `error`
     * ```ts
     * web3.eth.sendSignedTransaction(signedTransaction).on('error', error => console.log(error));
     * > <Some TransactionError>
     * ```
     */
    sendSignedTransaction(transaction, returnFormat = this.defaultReturnFormat, options) {
        return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.sendSignedTransaction(this, transaction, returnFormat, options);
    }
    /**
     * @param message Data to sign in one of the valid {@link Bytes} format.
     * @param address Address to sign data with, can be an address or the index of a local wallet.
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.
     * @returns The signed `message`.
     *
     * ```ts
     * // Using an unlocked account managed by connected RPC client
     * web3.eth.sign("0x48656c6c6f20776f726c64", "0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe").then(console.log);
     * > "0x30755ed65396facf86c53e6217c52b4daebe72aa4941d89635409de4c9c7f9466d4e9aaec7977f05e923889b33c0d0dd27d7226b6e6f56ce737465c5cfd04be400"
     *
     * // Using an unlocked account managed by connected RPC client
     * web3.eth.sign("0x48656c6c6f20776f726c64", "0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe", { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.UINT8ARRAY }).then(console.log);
     * > Uint8Array(65) [
     *    48, 117,  94, 214,  83, 150, 250, 207, 134, 197,  62,
     *    98,  23, 197,  43,  77, 174, 190, 114, 170,  73,  65,
     *   216, 150,  53,  64, 157, 228, 201, 199, 249,  70, 109,
     *    78, 154, 174, 199, 151, 127,   5, 233,  35, 136, 155,
     *    51, 192, 208, 221,  39, 215,  34, 107, 110, 111,  86,
     *   206, 115, 116, 101, 197, 207, 208,  75, 228,   0
     * ]
     * ```
     *
     * // Using an indexed account managed by local Web3 wallet
     * web3.eth.sign("0x48656c6c6f20776f726c64", 0).then(console.log);
     * > "0x30755ed65396facf86c53e6217c52b4daebe72aa4941d89635409de4c9c7f9466d4e9aaec7977f05e923889b33c0d0dd27d7226b6e6f56ce737465c5cfd04be400"
     */
    sign(message_1, addressOrIndex_1) {
        return __awaiter(this, arguments, void 0, function* (message, addressOrIndex, returnFormat = this.defaultReturnFormat) {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.sign(this, message, addressOrIndex, returnFormat);
        });
    }
    /**
     * @param transaction The transaction object to sign.
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.
     * @returns {@link SignedTransactionInfoAPI}, an object containing the [RLP](https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/#top) encoded signed transaction (accessed via the `raw` property) and the signed transaction object (accessed via the `tx` property).
     *
     * ```ts
     * const transaction = {
     *      from: '0xe899f0130FD099c0b896B2cE4E5E15A25b23139a',
     *      to: '0xe899f0130FD099c0b896B2cE4E5E15A25b23139a',
     *      value: '0x1',
     *      gas: '21000',
     *      gasPrice: await web3Eth.getGasPrice(),
     *      nonce: '0x1',
     *      type: '0x0'
     * }
     *
     * web3.eth.signTransaction(transaction).then(console.log);
     * > {
     *   raw: '0xf86501843b9aca0182520894e899f0130fd099c0b896b2ce4e5e15a25b23139a0180820a96a0adb3468dbb4dce89fe1785ea9182e85fb56b399b378f82b93af7a8a12a4f9679a027d37d736e9bcf00121f78b2d10e4404fa5c45856d62b746574345f5cd278097',
     *   tx: {
     *      type: 0n,
     *      nonce: 1n,
     *      gasPrice: 1000000001n,
     *      gas: 21000n,
     *      value: 1n,
     *      v: 2710n,
     *      r: '0xadb3468dbb4dce89fe1785ea9182e85fb56b399b378f82b93af7a8a12a4f9679',
     *      s: '0x27d37d736e9bcf00121f78b2d10e4404fa5c45856d62b746574345f5cd278097',
     *      to: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',
     *      data: '0x'
     *   }
     * }
     *
     * web3.eth.signTransaction(transaction, { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }).then(console.log);
     * > {
     *   raw: '0xf86501843b9aca0182520894e899f0130fd099c0b896b2ce4e5e15a25b23139a0180820a96a0adb3468dbb4dce89fe1785ea9182e85fb56b399b378f82b93af7a8a12a4f9679a027d37d736e9bcf00121f78b2d10e4404fa5c45856d62b746574345f5cd278097',
     *   tx: {
     *      type: 0,
     *      nonce: 1,
     *      gasPrice: 1000000001,
     *      gas: 21000,
     *      value: 1,
     *      v: 2710,
     *      r: '0xadb3468dbb4dce89fe1785ea9182e85fb56b399b378f82b93af7a8a12a4f9679',
     *      s: '0x27d37d736e9bcf00121f78b2d10e4404fa5c45856d62b746574345f5cd278097',
     *      to: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',
     *      data: '0x'
     *   }
     * }
     * ```
     */
    signTransaction(transaction_1) {
        return __awaiter(this, arguments, void 0, function* (transaction, returnFormat = this.defaultReturnFormat) {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.signTransaction(this, transaction, returnFormat);
        });
    }
    // TODO Decide what to do with transaction.to
    // https://github.com/ChainSafe/web3.js/pull/4525#issuecomment-982330076
    /**
     * Executes a message call within the EVM without creating a transaction.
     * It does not publish anything to the blockchain and does not consume any gas.
     *
     * @param transaction - A transaction object where all properties are optional except `to`, however it's recommended to include the `from` property or it may default to `0x0000000000000000000000000000000000000000` depending on your node or provider.
     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) - Specifies what block to use as the current state of the blockchain while processing the transaction.
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.
     * @returns The returned data of the call, e.g. a smart contract function's return value.
     */
    call(transaction_1) {
        return __awaiter(this, arguments, void 0, function* (transaction, blockNumber = this.defaultBlock, returnFormat = this.defaultReturnFormat) {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.call(this, transaction, blockNumber, returnFormat);
        });
    }
    /**
     * Simulates the transaction within the EVM to estimate the amount of gas to be used by the transaction.
     * The transaction will not be added to the blockchain, and actual gas usage can vary when interacting
     * with a contract as a result of updating the contract's state.
     *
     * @param transaction The {@link Transaction} object to estimate the gas for.
     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) - Specifies what block to use as the current state of the blockchain while processing the gas estimation.
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.
     * @returns The used gas for the simulated transaction execution.
     *
     * ```ts
     * const transaction = {
     *       from: '0xe899f0130FD099c0b896B2cE4E5E15A25b23139a',
     *       to: '0xe899f0130FD099c0b896B2cE4E5E15A25b23139a',
     *       value: '0x1',
     *       nonce: '0x1',
     *       type: '0x0'
     * }
     *
     * web3.eth.estimateGas(transaction).then(console.log);
     * > 21000n
     *
     * web3.eth.estimateGas(transaction, { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }).then(console.log);
     * > 21000
     * ```
     */
    estimateGas(transaction_1) {
        return __awaiter(this, arguments, void 0, function* (transaction, blockNumber = this.defaultBlock, returnFormat = this.defaultReturnFormat) {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.estimateGas(this, transaction, blockNumber, returnFormat);
        });
    }
    /**
     * Gets past logs, matching the provided `filter`.
     *
     * @param filter A {@link Filter} object containing the properties for the desired logs.
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.
     * @returns {@link FilterResultsAPI}, an array of {@link Log} objects.
     *
     * ```ts
     * web3.eth.getPastLogs({
     *      address: "0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe",
     *      topics: ["0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234"]
     *  }).then(console.log);
     * > [{
     *       data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',
     *       topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']
     *       logIndex: 0n,
     *       transactionIndex: 0n,
     *       transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',
     *       blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',
     *       blockNumber: 1234n,
     *       address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'
     *   },
     *   {...}]
     *
     * web3.eth.getPastLogs(
     *     {
     *       address: "0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe",
     *       topics: ["0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234"]
     *     },
     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }
     * ).then(console.log);
     * > [{
     *       data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',
     *       topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']
     *       logIndex: 0,
     *       transactionIndex: 0,
     *       transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',
     *       blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',
     *       blockNumber: 1234,
     *       address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'
     *   },
     *   {...}]
     * ```
     */
    getPastLogs(filter_1) {
        return __awaiter(this, arguments, void 0, function* (filter, returnFormat = this.defaultReturnFormat) {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getLogs(this, filter, returnFormat);
        });
    }
    /**
     * Gets work for miners to mine on. Returns the hash of the current block, the seedHash, and the boundary condition to be met ('target').
     *
     * @returns The mining work as an array of strings with the following structure:
     *
     * String 32 Bytes - at index 0: current block header pow-hash
     * String 32 Bytes - at index 1: the seed hash used for the DAG.
     * String 32 Bytes - at index 2: the boundary condition ('target'), 2^256 / difficulty.
     *
     * ```ts
     * web3.eth.getWork().then(console.log);
     * > [
     *     "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef",
     *     "0x5EED00000000000000000000000000005EED0000000000000000000000000000",
     *     "0xd1ff1c01710000000000000000000000d1ff1c01710000000000000000000000"
     * ]
     * ```
     */
    getWork() {
        return __awaiter(this, void 0, void 0, function* () {
            return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.ethRpcMethods.getWork(this.requestManager);
        });
    }
    /**
     * Used for submitting a proof-of-work solution.
     *
     * @param nonce The nonce found (8 bytes).
     * @param hash  The header’s pow-hash (32 bytes).
     * @param digest The mix digest (32 bytes).
     * @returns Returns `true` if the provided solution is valid, otherwise `false`.
     *
     * ```ts
     * web3.eth.submitWork([
     *     "0x0000000000000001",
     *     "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef",
     *     "0xD1FE5700000000000000000000000000D1FE5700000000000000000000000000"
     * ]).then(console.log);
     * > true
     * ```
     */
    submitWork(nonce, hash, digest) {
        return __awaiter(this, void 0, void 0, function* () {
            return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.ethRpcMethods.submitWork(this.requestManager, nonce, hash, digest);
        });
    }
    // TODO - Format addresses
    /**
     * This method will request/enable the accounts from the current environment and for supporting [EIP 1102](https://eips.ethereum.org/EIPS/eip-1102)
     * This method will only work if you’re using the injected provider from a application like Metamask, Status or TrustWallet.
     * It doesn’t work if you’re connected to a node with a default Web3.js provider (WebsocketProvider, HttpProvider and IpcProvider).
     * For more information about the behavior of this method please read [EIP-1102](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1102.md): Opt-in account exposure.
     *
     * @returns An array of enabled accounts.
     *
     * ```ts
     * web3.eth.requestAccounts().then(console.log);
     * > ['0aae0B295369a9FD31d5F28D9Ec85E40f4cb692BAf', '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe']
     * ```
     */
    requestAccounts() {
        return __awaiter(this, void 0, void 0, function* () {
            return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.ethRpcMethods.requestAccounts(this.requestManager);
        });
    }
    /**
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.
     * @returns The chain ID of the current connected node as described in the [EIP-695](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-695.md).
     *
     * ```ts
     * web3.eth.getChainId().then(console.log);
     * > 61n
     *
     * web3.eth.getChainId({ number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }).then(console.log);
     * > 61
     * ```
     */
    getChainId() {
        return __awaiter(this, arguments, void 0, function* (returnFormat = this.defaultReturnFormat) {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getChainId(this, returnFormat);
        });
    }
    /**
     * @returns The current client version.
     *
     * ```ts
     * web3.eth.getNodeInfo().then(console.log);
     * > "Mist/v0.9.3/darwin/go1.4.1"
     * ```
     */
    getNodeInfo() {
        return __awaiter(this, void 0, void 0, function* () {
            return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.ethRpcMethods.getNodeInfo(this.requestManager);
        });
    }
    /**
     * @param address The Address of the account or contract.
     * @param storageKeys Array of storage-keys which should be proofed and included. See {@link web3.getStorageAt}.
     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) - Specifies what block to use as the current state of the blockchain while processing the gas estimation.
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.
     * @returns The account and storage-values of the specified account including the Merkle-proof as described in [EIP-1186](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1186.md).
     *
     * ```ts
     * web3.eth.getProof(
     *     "0x1234567890123456789012345678901234567890",
     *     ["0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000001"],
     *     "latest"
     * ).then(console.log);
     * > {
     *     "address": "0x1234567890123456789012345678901234567890",
     *     "accountProof": [
     *         "0xf90211a090dcaf88c40c7bbc95a912cbdde67c175767b31173df9ee4b0d733bfdd511c43a0babe369f6b12092f49181ae04ca173fb68d1a5456f18d20fa32cba73954052bda0473ecf8a7e36a829e75039a3b055e51b8332cbf03324ab4af2066bbd6fbf0021a0bbda34753d7aa6c38e603f360244e8f59611921d9e1f128372fec0d586d4f9e0a04e44caecff45c9891f74f6a2156735886eedf6f1a733628ebc802ec79d844648a0a5f3f2f7542148c973977c8a1e154c4300fec92f755f7846f1b734d3ab1d90e7a0e823850f50bf72baae9d1733a36a444ab65d0a6faaba404f0583ce0ca4dad92da0f7a00cbe7d4b30b11faea3ae61b7f1f2b315b61d9f6bd68bfe587ad0eeceb721a07117ef9fc932f1a88e908eaead8565c19b5645dc9e5b1b6e841c5edbdfd71681a069eb2de283f32c11f859d7bcf93da23990d3e662935ed4d6b39ce3673ec84472a0203d26456312bbc4da5cd293b75b840fc5045e493d6f904d180823ec22bfed8ea09287b5c21f2254af4e64fca76acc5cd87399c7f1ede818db4326c98ce2dc2208a06fc2d754e304c48ce6a517753c62b1a9c1d5925b89707486d7fc08919e0a94eca07b1c54f15e299bd58bdfef9741538c7828b5d7d11a489f9c20d052b3471df475a051f9dd3739a927c89e357580a4c97b40234aa01ed3d5e0390dc982a7975880a0a089d613f26159af43616fd9455bb461f4869bfede26f2130835ed067a8b967bfb80",
     *         "0xf90211a0395d87a95873cd98c21cf1df9421af03f7247880a2554e20738eec2c7507a494a0bcf6546339a1e7e14eb8fb572a968d217d2a0d1f3bc4257b22ef5333e9e4433ca012ae12498af8b2752c99efce07f3feef8ec910493be749acd63822c3558e6671a0dbf51303afdc36fc0c2d68a9bb05dab4f4917e7531e4a37ab0a153472d1b86e2a0ae90b50f067d9a2244e3d975233c0a0558c39ee152969f6678790abf773a9621a01d65cd682cc1be7c5e38d8da5c942e0a73eeaef10f387340a40a106699d494c3a06163b53d956c55544390c13634ea9aa75309f4fd866f312586942daf0f60fb37a058a52c1e858b1382a8893eb9c1f111f266eb9e21e6137aff0dddea243a567000a037b4b100761e02de63ea5f1fcfcf43e81a372dafb4419d126342136d329b7a7ba032472415864b08f808ba4374092003c8d7c40a9f7f9fe9cc8291f62538e1cc14a074e238ff5ec96b810364515551344100138916594d6af966170ff326a092fab0a0d31ac4eef14a79845200a496662e92186ca8b55e29ed0f9f59dbc6b521b116fea090607784fe738458b63c1942bba7c0321ae77e18df4961b2bc66727ea996464ea078f757653c1b63f72aff3dcc3f2a2e4c8cb4a9d36d1117c742833c84e20de994a0f78407de07f4b4cb4f899dfb95eedeb4049aeb5fc1635d65cf2f2f4dfd25d1d7a0862037513ba9d45354dd3e36264aceb2b862ac79d2050f14c95657e43a51b85c80",
     *         "0xf90171a04ad705ea7bf04339fa36b124fa221379bd5a38ffe9a6112cb2d94be3a437b879a08e45b5f72e8149c01efcb71429841d6a8879d4bbe27335604a5bff8dfdf85dcea00313d9b2f7c03733d6549ea3b810e5262ed844ea12f70993d87d3e0f04e3979ea0b59e3cdd6750fa8b15164612a5cb6567cdfb386d4e0137fccee5f35ab55d0efda0fe6db56e42f2057a071c980a778d9a0b61038f269dd74a0e90155b3f40f14364a08538587f2378a0849f9608942cf481da4120c360f8391bbcc225d811823c6432a026eac94e755534e16f9552e73025d6d9c30d1d7682a4cb5bd7741ddabfd48c50a041557da9a74ca68da793e743e81e2029b2835e1cc16e9e25bd0c1e89d4ccad6980a041dda0a40a21ade3a20fcd1a4abb2a42b74e9a32b02424ff8db4ea708a5e0fb9a09aaf8326a51f613607a8685f57458329b41e938bb761131a5747e066b81a0a16808080a022e6cef138e16d2272ef58434ddf49260dc1de1f8ad6dfca3da5d2a92aaaadc58080",
     *         "0xf851808080a009833150c367df138f1538689984b8a84fc55692d3d41fe4d1e5720ff5483a6980808080808080808080a0a319c1c415b271afc0adcb664e67738d103ac168e0bc0b7bd2da7966165cb9518080"
     *     ],
     *     "balance": 0n,
     *     "codeHash": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
     *     "nonce": 0n,
     *     "storageHash": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
     *     "storageProof": [
     *         {
     *             "key": "0x0000000000000000000000000000000000000000000000000000000000000000",
     *             "value": 0n,
     *             "proof": []
     *         },
     *         {
     *             "key": "0x0000000000000000000000000000000000000000000000000000000000000001",
     *             "value": 0n,
     *             "proof": []
     *         }
     *     ]
     * }
     *
     * web3.eth.getProof(
     *     "0x1234567890123456789012345678901234567890",
     *     ["0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000001"],
     *     undefined,
     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }
     * ).then(console.log);
     * > {
     *     "address": "0x1234567890123456789012345678901234567890",
     *     "accountProof": [
     *         "0xf90211a090dcaf88c40c7bbc95a912cbdde67c175767b31173df9ee4b0d733bfdd511c43a0babe369f6b12092f49181ae04ca173fb68d1a5456f18d20fa32cba73954052bda0473ecf8a7e36a829e75039a3b055e51b8332cbf03324ab4af2066bbd6fbf0021a0bbda34753d7aa6c38e603f360244e8f59611921d9e1f128372fec0d586d4f9e0a04e44caecff45c9891f74f6a2156735886eedf6f1a733628ebc802ec79d844648a0a5f3f2f7542148c973977c8a1e154c4300fec92f755f7846f1b734d3ab1d90e7a0e823850f50bf72baae9d1733a36a444ab65d0a6faaba404f0583ce0ca4dad92da0f7a00cbe7d4b30b11faea3ae61b7f1f2b315b61d9f6bd68bfe587ad0eeceb721a07117ef9fc932f1a88e908eaead8565c19b5645dc9e5b1b6e841c5edbdfd71681a069eb2de283f32c11f859d7bcf93da23990d3e662935ed4d6b39ce3673ec84472a0203d26456312bbc4da5cd293b75b840fc5045e493d6f904d180823ec22bfed8ea09287b5c21f2254af4e64fca76acc5cd87399c7f1ede818db4326c98ce2dc2208a06fc2d754e304c48ce6a517753c62b1a9c1d5925b89707486d7fc08919e0a94eca07b1c54f15e299bd58bdfef9741538c7828b5d7d11a489f9c20d052b3471df475a051f9dd3739a927c89e357580a4c97b40234aa01ed3d5e0390dc982a7975880a0a089d613f26159af43616fd9455bb461f4869bfede26f2130835ed067a8b967bfb80",
     *         "0xf90211a0395d87a95873cd98c21cf1df9421af03f7247880a2554e20738eec2c7507a494a0bcf6546339a1e7e14eb8fb572a968d217d2a0d1f3bc4257b22ef5333e9e4433ca012ae12498af8b2752c99efce07f3feef8ec910493be749acd63822c3558e6671a0dbf51303afdc36fc0c2d68a9bb05dab4f4917e7531e4a37ab0a153472d1b86e2a0ae90b50f067d9a2244e3d975233c0a0558c39ee152969f6678790abf773a9621a01d65cd682cc1be7c5e38d8da5c942e0a73eeaef10f387340a40a106699d494c3a06163b53d956c55544390c13634ea9aa75309f4fd866f312586942daf0f60fb37a058a52c1e858b1382a8893eb9c1f111f266eb9e21e6137aff0dddea243a567000a037b4b100761e02de63ea5f1fcfcf43e81a372dafb4419d126342136d329b7a7ba032472415864b08f808ba4374092003c8d7c40a9f7f9fe9cc8291f62538e1cc14a074e238ff5ec96b810364515551344100138916594d6af966170ff326a092fab0a0d31ac4eef14a79845200a496662e92186ca8b55e29ed0f9f59dbc6b521b116fea090607784fe738458b63c1942bba7c0321ae77e18df4961b2bc66727ea996464ea078f757653c1b63f72aff3dcc3f2a2e4c8cb4a9d36d1117c742833c84e20de994a0f78407de07f4b4cb4f899dfb95eedeb4049aeb5fc1635d65cf2f2f4dfd25d1d7a0862037513ba9d45354dd3e36264aceb2b862ac79d2050f14c95657e43a51b85c80",
     *         "0xf90171a04ad705ea7bf04339fa36b124fa221379bd5a38ffe9a6112cb2d94be3a437b879a08e45b5f72e8149c01efcb71429841d6a8879d4bbe27335604a5bff8dfdf85dcea00313d9b2f7c03733d6549ea3b810e5262ed844ea12f70993d87d3e0f04e3979ea0b59e3cdd6750fa8b15164612a5cb6567cdfb386d4e0137fccee5f35ab55d0efda0fe6db56e42f2057a071c980a778d9a0b61038f269dd74a0e90155b3f40f14364a08538587f2378a0849f9608942cf481da4120c360f8391bbcc225d811823c6432a026eac94e755534e16f9552e73025d6d9c30d1d7682a4cb5bd7741ddabfd48c50a041557da9a74ca68da793e743e81e2029b2835e1cc16e9e25bd0c1e89d4ccad6980a041dda0a40a21ade3a20fcd1a4abb2a42b74e9a32b02424ff8db4ea708a5e0fb9a09aaf8326a51f613607a8685f57458329b41e938bb761131a5747e066b81a0a16808080a022e6cef138e16d2272ef58434ddf49260dc1de1f8ad6dfca3da5d2a92aaaadc58080",
     *         "0xf851808080a009833150c367df138f1538689984b8a84fc55692d3d41fe4d1e5720ff5483a6980808080808080808080a0a319c1c415b271afc0adcb664e67738d103ac168e0bc0b7bd2da7966165cb9518080"
     *     ],
     *     "balance": 0,
     *     "codeHash": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
     *     "nonce": 0,
     *     "storageHash": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
     *     "storageProof": [
     *         {
     *             "key": "0x0000000000000000000000000000000000000000000000000000000000000000",
     *             "value": 0,
     *             "proof": []
     *         },
     *         {
     *             "key": "0x0000000000000000000000000000000000000000000000000000000000000001",
     *             "value": 0,
     *             "proof": []
     *         }
     *     ]
     * }
     * ```
     */
    getProof(address_1, storageKeys_1) {
        return __awaiter(this, arguments, void 0, function* (address, storageKeys, blockNumber = this.defaultBlock, returnFormat = this.defaultReturnFormat) {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getProof(this, address, storageKeys, blockNumber, returnFormat);
        });
    }
    // TODO Throwing an error with Geth, but not Infura
    // TODO gasUsedRatio and reward not formatting
    /**
     * @param blockCount Number of blocks in the requested range. Between `1` and `1024` blocks can be requested in a single query. Less than requested may be returned if not all blocks are available.
     * @param newestBlock Highest number block of the requested range.
     * @param rewardPercentiles A monotonically increasing list of percentile values to sample from each block’s effective priority fees per gas in ascending order, weighted by gas used. Example: `['0', '25', '50', '75', '100']` or `['0', '0.5', '1', '1.5', '3', '80']`
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.
     * @returns `baseFeePerGas` and transaction effective `priorityFeePerGas` history for the requested block range if available.
     * The range between `headBlock - 4` and `headBlock` is guaranteed to be available while retrieving data from the `pending` block and older history are optional to support.
     * For pre-EIP-1559 blocks the `gasPrice`s are returned as `rewards` and zeroes are returned for the `baseFeePerGas`.
     *
     * ```ts
     * web3.eth.getFeeHistory(4, 'pending', [0, 25, 75, 100]).then(console.log);
     * > {
     *     baseFeePerGas: [
     *         22983878621n,
     *         21417903463n,
     *         19989260230n,
     *         17770954829n,
     *         18850641304n
     *     ],
     *     gasUsedRatio: [
     *         0.22746546666666667,
     *         0.2331871,
     *         0.05610054885262125,
     *         0.7430227268212117
     *     ],
     *     oldestBlock: 15216343n,
     *     reward: [
     *         [ '0x3b9aca00', '0x53724e00', '0x77359400', '0x1d92c03423' ],
     *         [ '0x3b9aca00', '0x3b9aca00', '0x3b9aca00', '0xee6b2800' ],
     *         [ '0x3b9aca00', '0x4f86a721', '0x77d9743a', '0x9502f900' ],
     *         [ '0xcc8ff9e', '0x53724e00', '0x77359400', '0x1ec9771bb3' ]
     *     ]
     * }
     *
     * web3.eth.getFeeHistory(4, BlockTags.LATEST, [0, 25, 75, 100], { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }).then(console.log);
     * > {
     *     baseFeePerGas: [
     *         22983878621,
     *         21417903463,
     *         19989260230,
     *         17770954829,
     *         18850641304
     *     ],
     *     gasUsedRatio: [
     *         0.22746546666666667,
     *         0.2331871,
     *         0.05610054885262125,
     *         0.7430227268212117
     *     ],
     *     oldestBlock: 15216343,
     *     reward: [
     *         [ '0x3b9aca00', '0x53724e00', '0x77359400', '0x1d92c03423' ],
     *         [ '0x3b9aca00', '0x3b9aca00', '0x3b9aca00', '0xee6b2800' ],
     *         [ '0x3b9aca00', '0x4f86a721', '0x77d9743a', '0x9502f900' ],
     *         [ '0xcc8ff9e', '0x53724e00', '0x77359400', '0x1ec9771bb3' ]
     *     ]
     * }
     * ```
     */
    getFeeHistory(blockCount_1) {
        return __awaiter(this, arguments, void 0, function* (blockCount, newestBlock = this.defaultBlock, rewardPercentiles, returnFormat = this.defaultReturnFormat) {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getFeeHistory(this, blockCount, newestBlock, rewardPercentiles, returnFormat);
        });
    }
    /**
     * This method generates an access list for a transaction.
     *
     * @param transaction - A transaction object where all properties are optional except `from`, however it's recommended to include the `to` property.
     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) - Specifies what block to use as the current state of the blockchain while processing the transaction.
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the createAccessList should be formatted.
     * @returns The returned data of the createAccessList,  e.g. The generated access list for transaction.
     * @example
     * ```ts
     * web3.eth.createAccessList({
     * from: '0xDe95305a63302C3aa4d3A9B42654659AeA72b694',
     * data: '0x9a67c8b100000000000000000000000000000000000000000000000000000000000004d0',
     * gasPrice: '0x3b9aca00',
     * gas: '0x3d0900',
     * to: '0x940b25304947ae863568B3804434EC77E2160b87'
     * })
     * .then(console.log);
     *
     * > {
     *  "accessList": [
     *     {
     *       "address": "0x15859bdf5aff2080a9968f6a410361e9598df62f",
     *       "storageKeys": [
     *         "0x0000000000000000000000000000000000000000000000000000000000000000"
     *       ]
     *     }
     *   ],
     *   "gasUsed": "0x7671"
     * }
     * ```
     */
    createAccessList(transaction_1) {
        return __awaiter(this, arguments, void 0, function* (transaction, blockNumber = this.defaultBlock, returnFormat = this.defaultReturnFormat) {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.createAccessList(this, transaction, blockNumber, returnFormat);
        });
    }
    /**
     * This method sends EIP-712 typed data to the RPC provider to be signed.
     *
     * @param address The address that corresponds with the private key used to sign the typed data.
     * @param typedData The EIP-712 typed data object.
     * @param useLegacy A boolean flag determining whether the RPC call uses the legacy method `eth_signTypedData` or the newer method `eth_signTypedData_v4`
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the signed typed data should be formatted.
     * @returns The signed typed data.
     */
    signTypedData(address, typedData, useLegacy, returnFormat) {
        return __awaiter(this, void 0, void 0, function* () {
            var _a;
            if (useLegacy === void 0) { useLegacy = false; }
            if (returnFormat === void 0) { returnFormat = ((_a = this.defaultReturnFormat) !== null && _a !== void 0 ? _a : web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT); }
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.signTypedData(this, address, typedData, useLegacy, returnFormat);
        });
    }
    /**
     * Lets you subscribe to specific events in the blockchain.
     *
     * @param name - The subscription you want to subscribe to.
     * @param args - Optional additional parameters, depending on the subscription type.
     * @returns A subscription object of type {@link RegisteredSubscription}. The object contains:
     *  - subscription.id: The subscription id, used to identify and unsubscribing the subscription.
     *  - subscription.subscribe(): Can be used to re-subscribe with the same parameters.
     *  - subscription.unsubscribe(): Unsubscribes the subscription and returns TRUE in the callback if successful.
     *  - subscription.args: The subscription arguments, used when re-subscribing.
     *
     *
     * You can use the subscription object to listen on:
     *
     * - on("data") - Fires on each incoming log with the log object as argument.
     * - on("changed") - Fires on each log which was removed from the blockchain. The log will have the additional property "removed: true".
     * - on("error") - Fires when an error in the subscription occurs.
     * - on("connected") - Fires once after the subscription successfully connected. Returns the subscription id.
     *
     * @example **Subscribe to Smart Contract events**
     * ```ts
     * // Subscribe to `logs`
     * const logSubscription = web3.eth.subscribe('logs', {
     *     address: '0x1234567890123456789012345678901234567890',
     *     topics: ['0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234']
     * });
     * logSubscription.on('data', (data: any) => console.log(data));
     * logSubscription.on('error', (error: any) => console.log(error));
     *
     * ```
     *
     * @example **Subscribe to new block headers**
     * ```ts
     * // Subscribe to `newBlockHeaders`
     * const newBlocksSubscription = await web3.eth.subscribe('newBlockHeaders');
     *
     * newBlocksSubscription.on('data', async blockhead => {
     * 	console.log('New block header: ', blockhead);
     *
     * 	// You do not need the next line, if you like to keep notified for every new block
     * 	await newBlocksSubscription.unsubscribe();
     * 	console.log('Unsubscribed from new block headers.');
     * });
     * newBlocksSubscription.on('error', error =>
     * 	console.log('Error when subscribing to New block header: ', error),
     * );
     * ```
     *
     * 	### subscribe('pendingTransactions')
     *
     * Subscribes to incoming pending transactions.
     * You can subscribe to pending transactions by calling web3.eth.subscribe('pendingTransactions').
     *
     * ```ts
     * (await web3.eth.subscribe('pendingTransactions')).on('data', console.log);
     * ```
     *
     * ### subscribe('newHeads')
     * ( same as subscribe('newBlockHeaders'))
     * Subscribes to incoming block headers. This can be used as timer to check for changes on the blockchain.
     *
     * The structure of a returned block header is {@link BlockHeaderOutput}:
     *
     * ```ts
     * (await web3.eth.subscribe('newHeads')).on( // 'newBlockHeaders' would work as well
     *  'data',
     * console.log
     * );
     * >{
     * parentHash: '0x9e746a1d906b299def98c75b06f714d62dacadd567c7515d76eeaa8c8074c738',
     * sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',
     * miner: '0x0000000000000000000000000000000000000000',
     * stateRoot: '0xe0f04b04861ecfa95e82a9310d6a7ef7aef8d7417f5209c182582bfb98a8e307',
     * transactionsRoot: '0x31ab4ea571a9e10d3a19aaed07d190595b1dfa34e03960c04293fec565dea536',
     * logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
     * difficulty: 2n,
     * number: 21n,
     * gasLimit: 11738125n,
     * gasUsed: 830006n,
     * timestamp: 1678797237n,
     * extraData: '0xd883010b02846765746888676f312e32302e31856c696e757800000000000000e0a6e93cf40e2e71a72e493272210c3f43738ccc7e7d7b14ffd51833797d896c09117e8dc4fbcbc969bd21b42e5af3e276a911524038c001b2109b63b8e0352601',
     * nonce: 0n
     * }
     * ```
     *
     * ### subscribe('syncing')
     * Subscribe to syncing events. This will return `true` when the node is syncing and when it’s finished syncing will return `false`, for the `changed` event.
     *
     * ```ts
     * (await web3.eth.subscribe('syncing')).on('changed', console.log);
     * > `true` // when syncing
     *
     * (await web3.eth.subscribe('syncing')).on('data', console.log);
     * > {
     *      startingBlock: 0,
     *      currentBlock: 0,
     *      highestBlock: 0,
     *      pulledStates: 0,
     *      knownStates: 0
     *   }
     * ```
     *
     * ### subscribe('logs', options)
     * Subscribes to incoming logs, filtered by the given options. If a valid numerical fromBlock options property is set, web3.js will retrieve logs beginning from this point, backfilling the response as necessary.
     *
     * options: You can subscribe to logs matching a given filter object, which can take the following parameters:
     * - `fromBlock`: (optional, default: 'latest') Integer block number, or `'latest'` for the last mined block or `'pending'`, `'earliest'` for not yet mined transactions.
     * - `address`: (optional) Contract address or a list of addresses from which logs should originate.
     * - `topics`: (optional) Array of 32 Bytes DATA topics. Topics are order-dependent. Each topic can also be an array of DATA with `or` options.
     *
     * ```ts
     *  (await web3.eth.subscribe('logs', {
     *    address: '0xdac17f958d2ee523a2206206994597c13d831ec7',
     *   })).on('data', console.log);
     *
     * > {
     * removed: false,
     * logIndex: 119n,
     * transactionIndex: 58n,
     * transactionHash: '0x61533efa77937360215069d5d6cb0be09a22af9721e6dc3df59d957833ed8870',
     * blockHash: '0xe32bb97084479d32247f66f8b46d00af2fbc3c2db2bc6e5843fe2e4d1ca9b099',
     * blockNumber: 18771966n,
     * address: '0xdac17f958d2ee523a2206206994597c13d831ec7',
     * data: '0x00000000000000000000000000000000000000000000000000000000d88b2e40',
     * topics: [
     * '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',
     * '0x0000000000000000000000002fb2457f6ec1865dc0d4e7300c696b69c2a1b989',
     * '0x00000000000000000000000027fd43babfbe83a81d14665b1a6fb8030a60c9b4'
     * ]
     * }
     *```
     */
    subscribe(name, args, returnFormat) {
        return __awaiter(this, void 0, void 0, function* () {
            var _a, _b;
            if (returnFormat === void 0) { returnFormat = ((_a = this.defaultReturnFormat) !== null && _a !== void 0 ? _a : web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT); }
            const subscription = yield ((_b = this.subscriptionManager) === null || _b === void 0 ? void 0 : _b.subscribe(name, args, returnFormat));
            if (subscription instanceof _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_7__.LogsSubscription &&
                name === 'logs' &&
                typeof args === 'object' &&
                !(0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.isNullish)(args.fromBlock) &&
                Number.isFinite(Number(args.fromBlock))) {
                setImmediate(() => {
                    this.getPastLogs(args)
                        .then(logs => {
                        for (const log of logs) {
                            subscription._processSubscriptionResult(log);
                        }
                    })
                        .catch(e => {
                        subscription._processSubscriptionError(e);
                    });
                });
            }
            return subscription;
        });
    }
    static shouldClearSubscription({ sub }) {
        return !(sub instanceof _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_7__.SyncingSubscription);
    }
    /**
     * Resets subscriptions.
     *
     * @param notClearSyncing If `true` it keeps the `syncing` subscription.
     * @returns A promise to an array of subscription ids that were cleared.
     *
     * ```ts
     * web3.eth.clearSubscriptions().then(console.log);
     * > [...] An array of subscription ids that were cleared
     * ```
     */
    clearSubscriptions(notClearSyncing = false) {
        var _a;
        return (_a = this.subscriptionManager) === null || _a === void 0 ? void 0 : _a.unsubscribe(
        // eslint-disable-next-line
        notClearSyncing ? Web3Eth.shouldClearSubscription : undefined);
    }
    /**
     * Creates a filter in the node, to notify when new pending transactions arrive. To check if the state has changed.
     *
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.
     * @returns A filter id.
     *
     * ```ts
     * web3.eth.createNewPendingTransactionFilter().then(console.log);
     * > 1n
     *
     * web3.eth.createNewPendingTransactionFilter({ number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);
     * > "0x1"
     * ```
     */
    createNewPendingTransactionFilter() {
        return __awaiter(this, arguments, void 0, function* (returnFormat = this.defaultReturnFormat) {
            return _filtering_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_6__.createNewPendingTransactionFilter(this, returnFormat);
        });
    }
    /**
     * Creates a filter object, based on filter options, to notify when the state changes (logs)
     *
     * @param filter A {@link FilterParams} object containing the filter properties.
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.
     * @returns A filter id.
     *
     * ```ts
     * web3.eth.createNewFilter(filterParams).then(console.log);
     * > 1n
     *
     * web3.eth.createNewFilter(filterParams, { number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);
     * > "0x1"
     * ```
     */
    createNewFilter(filter_1) {
        return __awaiter(this, arguments, void 0, function* (filter, returnFormat = this.defaultReturnFormat) {
            return _filtering_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_6__.createNewFilter(this, filter, returnFormat);
        });
    }
    /**
     * Creates a filter in the node, to notify when a new block arrives.
     *
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.
     * @returns A filter id.
     *
     * ```ts
     * web3.eth.createNewBlockFilter().then(console.log);
     * > 1n
     *
     * web3.eth.createNewBlockFilter({ number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);
     * > "0x1"
     * ```
     */
    createNewBlockFilter() {
        return __awaiter(this, arguments, void 0, function* (returnFormat = this.defaultReturnFormat) {
            return _filtering_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_6__.createNewBlockFilter(this, returnFormat);
        });
    }
    /**
     * Uninstalls a filter with given id. Should always be called when watch is no longer needed.
     *
     * @param filterIdentifier ({@link Numbers} filter id
     * @returns true if the filter was successfully uninstalled, otherwise false.
     *
     * ```ts
     * web3.eth.uninstallFilter(123).then(console.log);
     * > true
     *
     * web3.eth.uninstallFilter('0x123').then(console.log);
     * > true
     *
     * web3.eth.uninstallFilter(12n).then(console.log);
     * > true
     * ```
     */
    uninstallFilter(filterIdentifier) {
        return __awaiter(this, void 0, void 0, function* () {
            return _filtering_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_6__.uninstallFilter(this, filterIdentifier);
        });
    }
    /**
     *  Polling method for a filter, which returns an array of logs which occurred since last poll.
     *
     * @param filterIdentifier ({@link Numbers} filter id
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.
     * @returns {@link FilterResultsAPI}, an array of {@link Log} objects.
     *
     * ```ts
     * web3.eth.getFilterChanges(123).then(console.log);
     * > [{
     *       data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',
     *       topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']
     *       logIndex: 0n,
     *       transactionIndex: 0n,
     *       transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',
     *       blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',
     *       blockNumber: 1234n,
     *       address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'
     *   },
     *   {...}]
     */
    getFilterChanges(filterIdentifier_1) {
        return __awaiter(this, arguments, void 0, function* (filterIdentifier, returnFormat = this.defaultReturnFormat) {
            return _filtering_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_6__.getFilterChanges(this, filterIdentifier, returnFormat);
        });
    }
    /**
     *  Returns an array of all logs matching filter with given id.
     *
     * @param filterIdentifier ({@link Numbers} filter id
     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.
     * @returns {@link FilterResultsAPI}, an array of {@link Log} objects.
     *
     * ```ts
     * web3.eth.getFilterLogs(123).then(console.log);
     * > [{
     *       data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',
     *       topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']
     *       logIndex: 0n,
     *       transactionIndex: 0n,
     *       transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',
     *       blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',
     *       blockNumber: 1234n,
     *       address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'
     *   },
     *   {...}]
     */
    getFilterLogs(filterIdentifier_1) {
        return __awaiter(this, arguments, void 0, function* (filterIdentifier, returnFormat = this.defaultReturnFormat) {
            return _filtering_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_6__.getFilterLogs(this, filterIdentifier, returnFormat);
        });
    }
}
//# sourceMappingURL=web3_eth.js.map

/***/ }),

/***/ "./node_modules/web3-eth/lib/esm/web3_subscriptions.js":
/*!*************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/web3_subscriptions.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LogsSubscription: () => (/* binding */ LogsSubscription),
/* harmony export */   NewHeadsSubscription: () => (/* binding */ NewHeadsSubscription),
/* harmony export */   NewPendingTransactionsSubscription: () => (/* binding */ NewPendingTransactionsSubscription),
/* harmony export */   SyncingSubscription: () => (/* binding */ SyncingSubscription)
/* harmony export */ });
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-core */ "./node_modules/web3-core/lib/esm/index.js");
/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./schemas.js */ "./node_modules/web3-eth/lib/esm/schemas.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/* eslint-disable-next-line max-classes-per-file */



/**
 * ## subscribe('logs')
 * Subscribes to incoming logs, filtered by the given options. If a valid numerical fromBlock options property is set, web3.js will retrieve logs beginning from this point, backfilling the response as necessary.
 *
 * You can subscribe to logs matching a given filter object, which can take the following parameters:
 * - `fromBlock`: (optional, default: 'latest') Integer block number, or `'latest'` for the last mined block or `'pending'`, `'earliest'` for not yet mined transactions.
 * - `address`: (optional) Contract address or a list of addresses from which logs should originate.
 * - `topics`: (optional) Array of 32 Bytes DATA topics. Topics are order-dependent. Each topic can also be an array of DATA with `or` options.
 *
 */
class LogsSubscription extends web3_core__WEBPACK_IMPORTED_MODULE_1__.Web3Subscription {
    _buildSubscriptionParams() {
        return ['logs', this.args];
    }
    formatSubscriptionResult(data) {
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_2__.logSchema, data, super.returnFormat);
    }
}
/**
 * ## subscribe('pendingTransactions')
 * Subscribes to incoming pending transactions.
 *
 * You can subscribe to pending transactions by calling web3.eth.subscribe('pendingTransactions').
 * @example
 * ```ts
 * (await web3.eth.subscribe('pendingTransactions')).on('data', console.log);
 * ```
 */
class NewPendingTransactionsSubscription extends web3_core__WEBPACK_IMPORTED_MODULE_1__.Web3Subscription {
    // eslint-disable-next-line
    _buildSubscriptionParams() {
        return ['newPendingTransactions'];
    }
    formatSubscriptionResult(data) {
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({ format: 'string' }, data, super.returnFormat);
    }
}
/**
 * ## subscribe('newHeads') ( same as subscribe('newBlockHeaders'))
 *
 * Subscribes to incoming block headers. This can be used as timer to check for changes on the blockchain.
 *
 * The structure of a returned block header is {@link BlockHeaderOutput}:
 * @example
 * ```ts
 * (await web3.eth.subscribe('newHeads')).on( // 'newBlockHeaders' would work as well
 *  'data',
 * console.log
 * );
 * >{
 * parentHash: '0x9e746a1d906b299def98c75b06f714d62dacadd567c7515d76eeaa8c8074c738',
 * sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',
 * miner: '0x0000000000000000000000000000000000000000',
 * stateRoot: '0xe0f04b04861ecfa95e82a9310d6a7ef7aef8d7417f5209c182582bfb98a8e307',
 * transactionsRoot: '0x31ab4ea571a9e10d3a19aaed07d190595b1dfa34e03960c04293fec565dea536',
 * logsBloom: '0x
 * difficulty: 2n,
 * number: 21n,
 * gasLimit: 11738125n,
 * gasUsed: 830006n,
 * timestamp: 1678797237n,
 * extraData: '0xd883010b02846765746888676f312e32302e31856c696e757800000000000000e0a6e93cf40e2e71a72e493272210c3f43738ccc7e7d7b14ffd51833797d896c09117e8dc4fbcbc969bd21b42e5af3e276a911524038c001b2109b63b8e0352601',
 * nonce: 0n
 * }
 * ```
 */
class NewHeadsSubscription extends web3_core__WEBPACK_IMPORTED_MODULE_1__.Web3Subscription {
    // eslint-disable-next-line
    _buildSubscriptionParams() {
        return ['newHeads'];
    }
    formatSubscriptionResult(data) {
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_2__.blockHeaderSchema, data, super.returnFormat);
    }
}
/**
 * ## subscribe('syncing')
 *
 * Subscribe to syncing events. This will return `true` when the node is syncing and when it’s finished syncing will return `false`, for the `changed` event.
 * @example
 * ```ts
 * (await web3.eth.subscribe('syncing')).on('changed', console.log);
 * > `true` // when syncing
 *
 * (await web3.eth.subscribe('syncing')).on('data', console.log);
 * > {
 *      startingBlock: 0,
 *      currentBlock: 0,
 *      highestBlock: 0,
 *      pulledStates: 0,
 *      knownStates: 0
 *   }
 * ```
 */
class SyncingSubscription extends web3_core__WEBPACK_IMPORTED_MODULE_1__.Web3Subscription {
    // eslint-disable-next-line
    _buildSubscriptionParams() {
        return ['syncing'];
    }
    _processSubscriptionResult(data) {
        if (typeof data === 'boolean') {
            this.emit('changed', data);
        }
        else {
            const mappedData = Object.fromEntries(Object.entries((data === null || data === void 0 ? void 0 : data.status) || data).map(([key, value]) => [
                key.charAt(0).toLowerCase() + key.substring(1),
                value,
            ]));
            this.emit('changed', data.syncing);
            this.emit('data', (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_2__.syncSchema, mappedData, super.returnFormat));
        }
    }
}
//# sourceMappingURL=web3_subscriptions.js.map

/***/ }),

/***/ "./node_modules/web3-net/lib/esm/index.js":
/*!************************************************!*\
  !*** ./node_modules/web3-net/lib/esm/index.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Net: () => (/* reexport safe */ _net_js__WEBPACK_IMPORTED_MODULE_0__.Net),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   getId: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__.getId),
/* harmony export */   getPeerCount: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__.getPeerCount),
/* harmony export */   isListening: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__.isListening)
/* harmony export */ });
/* harmony import */ var _net_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./net.js */ "./node_modules/web3-net/lib/esm/net.js");
/* harmony import */ var _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rpc_method_wrappers.js */ "./node_modules/web3-net/lib/esm/rpc_method_wrappers.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * The web3-net package allows you to interact with an Ethereum node’s network properties.
 *
 * ```ts
 * import Net from 'web3-net';
 *
 * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');
 * // or using the web3 umbrella package
 * import Web3 from 'web3';
 * const web3 = new Web3(Web3.givenProvider || 'ws://some.local-or-remote.node:8546');
 *
 * // -> web3.eth.net
 *
 * // get the ID of the network
 * await web3.eth.net.getId();
 * > 5777n
 *
 * // get the peer count
 * await web3.eth.net.getPeerCount();
 * > 0n
 *
 * // Check if the node is listening for peers
 * await web3.eth.net.isListening();
 * > true
 * ```
 */
/**
 *
 */



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_net_js__WEBPACK_IMPORTED_MODULE_0__.Net);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/web3-net/lib/esm/net.js":
/*!**********************************************!*\
  !*** ./node_modules/web3-net/lib/esm/net.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Net: () => (/* binding */ Net)
/* harmony export */ });
/* harmony import */ var web3_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-core */ "./node_modules/web3-core/lib/esm/index.js");
/* harmony import */ var _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rpc_method_wrappers.js */ "./node_modules/web3-net/lib/esm/rpc_method_wrappers.js");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/


/**
 * Net class allows you to interact with an Ethereum node’s network properties.
 * For using Net package, first install Web3 package using: `npm i web3` or `yarn add web3` based on your package manager, after that Net features can be used.
 * ```ts
 *
 * import { Web3 } from 'web3';
 * const web3 = new Web3('https://mainnet.infura.io/v3/<YOURPROJID>');
 *
 * console.log(await web3.eth.net.getId());
 *
 * ```
 * For using individual package install `web3-net` packages using: `npm i web3-net` or `yarn add web3-net`.
 *
 * ```ts
 * import {Net} from 'web3-net';
 *
 *  const net = new Net('https://mainnet.infura.io/v3/<YOURPROJID>');
 *  console.log(await net.getId());
 * ```
 */
class Net extends web3_core__WEBPACK_IMPORTED_MODULE_0__.Web3Context {
    /**
     * Gets the current network ID
     *
     * @param returnFormat - Return format
     * @returns A Promise of the network ID.
     * @example
     * ```ts
     * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');
     * await net.getId();
     * > 1
     * ```
     */
    getId(returnFormat = this.defaultReturnFormat) {
        return __awaiter(this, void 0, void 0, function* () {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__.getId(this, returnFormat);
        });
    }
    /**
     * Get the number of peers connected to.
     *
     * @param returnFormat - Return format
     * @returns A promise of the number of the peers connected to.
     * @example
     * ```ts
     * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');
     * await net.getPeerCount();
     * > 0
     * ```
     */
    getPeerCount(returnFormat = this.defaultReturnFormat) {
        return __awaiter(this, void 0, void 0, function* () {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__.getPeerCount(this, returnFormat);
        });
    }
    /**
     * Check if the node is listening for peers
     *
     * @returns A promise of a boolean if the node is listening to peers
     * @example
     * ```ts
     * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');
     * await net.isListening();
     * > true
     * ```
     */
    isListening() {
        return __awaiter(this, void 0, void 0, function* () {
            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__.isListening(this);
        });
    }
}
//# sourceMappingURL=net.js.map

/***/ }),

/***/ "./node_modules/web3-net/lib/esm/rpc_method_wrappers.js":
/*!**************************************************************!*\
  !*** ./node_modules/web3-net/lib/esm/rpc_method_wrappers.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getId: () => (/* binding */ getId),
/* harmony export */   getPeerCount: () => (/* binding */ getPeerCount),
/* harmony export */   isListening: () => (/* binding */ isListening)
/* harmony export */ });
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_rpc_methods__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-rpc-methods */ "./node_modules/web3-rpc-methods/lib/esm/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};


function getId(web3Context, returnFormat) {
    return __awaiter(this, void 0, void 0, function* () {
        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_1__.netRpcMethods.getId(web3Context.requestManager);
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({ format: 'uint' }, response, returnFormat);
    });
}
function getPeerCount(web3Context, returnFormat) {
    return __awaiter(this, void 0, void 0, function* () {
        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_1__.netRpcMethods.getPeerCount(web3Context.requestManager);
        // Data returned is number in hex format
        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({ format: 'uint' }, response, returnFormat);
    });
}
const isListening = (web3Context) => __awaiter(void 0, void 0, void 0, function* () { return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_1__.netRpcMethods.isListening(web3Context.requestManager); });
//# sourceMappingURL=rpc_method_wrappers.js.map

/***/ }),

/***/ "./node_modules/web3-providers-http/lib/esm/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/web3-providers-http/lib/esm/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HttpProvider: () => (/* binding */ HttpProvider),
/* harmony export */   "default": () => (/* binding */ HttpProvider)
/* harmony export */ });
/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cross-fetch */ "./node_modules/web3-providers-http/node_modules/cross-fetch/dist/browser-ponyfill.js");
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



class HttpProvider extends web3_types__WEBPACK_IMPORTED_MODULE_1__.Web3BaseProvider {
    constructor(clientUrl, httpProviderOptions) {
        super();
        if (!HttpProvider.validateClientUrl(clientUrl))
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidClientError(clientUrl);
        this.clientUrl = clientUrl;
        this.httpProviderOptions = httpProviderOptions;
    }
    static validateClientUrl(clientUrl) {
        return typeof clientUrl === 'string' ? /^http(s)?:\/\//i.test(clientUrl) : false;
    }
    /* eslint-disable class-methods-use-this */
    getStatus() {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.MethodNotImplementedError();
    }
    /* eslint-disable class-methods-use-this */
    supportsSubscriptions() {
        return false;
    }
    request(payload, requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const providerOptionsCombined = Object.assign(Object.assign({}, (_a = this.httpProviderOptions) === null || _a === void 0 ? void 0 : _a.providerOptions), requestOptions);
            const response = yield cross_fetch__WEBPACK_IMPORTED_MODULE_0__(this.clientUrl, Object.assign(Object.assign({}, providerOptionsCombined), { method: 'POST', headers: Object.assign(Object.assign({}, providerOptionsCombined.headers), { 'Content-Type': 'application/json' }), body: JSON.stringify(payload) }));
            if (!response.ok) {
                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.ResponseError(yield response.json(), undefined, undefined, response.status);
            }
            ;
            return (yield response.json());
        });
    }
    /* eslint-disable class-methods-use-this */
    on() {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.MethodNotImplementedError();
    }
    /* eslint-disable class-methods-use-this */
    removeListener() {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.MethodNotImplementedError();
    }
    /* eslint-disable class-methods-use-this */
    once() {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.MethodNotImplementedError();
    }
    /* eslint-disable class-methods-use-this */
    removeAllListeners() {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.MethodNotImplementedError();
    }
    /* eslint-disable class-methods-use-this */
    connect() {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.MethodNotImplementedError();
    }
    /* eslint-disable class-methods-use-this */
    disconnect() {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.MethodNotImplementedError();
    }
    /* eslint-disable class-methods-use-this */
    reset() {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.MethodNotImplementedError();
    }
    /* eslint-disable class-methods-use-this */
    reconnect() {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.MethodNotImplementedError();
    }
}

//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/web3-providers-http/node_modules/cross-fetch/dist/browser-ponyfill.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/web3-providers-http/node_modules/cross-fetch/dist/browser-ponyfill.js ***!
  \********************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

// Save global object in a variable
var __global__ =
(typeof globalThis !== 'undefined' && globalThis) ||
(typeof self !== 'undefined' && self) ||
(typeof __webpack_require__.g !== 'undefined' && __webpack_require__.g);
// Create an object that extends from __global__ without the fetch function
var __globalThis__ = (function () {
function F() {
this.fetch = false;
this.DOMException = __global__.DOMException
}
F.prototype = __global__; // Needed for feature detection on whatwg-fetch's code
return new F();
})();
// Wraps whatwg-fetch with a function scope to hijack the global object
// "globalThis" that's going to be patched
(function(globalThis) {

var irrelevant = (function (exports) {

  /* eslint-disable no-prototype-builtins */
  var g =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof self !== 'undefined' && self) ||
    // eslint-disable-next-line no-undef
    (typeof __webpack_require__.g !== 'undefined' && __webpack_require__.g) ||
    {};

  var support = {
    searchParams: 'URLSearchParams' in g,
    iterable: 'Symbol' in g && 'iterator' in Symbol,
    blob:
      'FileReader' in g &&
      'Blob' in g &&
      (function() {
        try {
          new Blob();
          return true
        } catch (e) {
          return false
        }
      })(),
    formData: 'FormData' in g,
    arrayBuffer: 'ArrayBuffer' in g
  };

  function isDataView(obj) {
    return obj && DataView.prototype.isPrototypeOf(obj)
  }

  if (support.arrayBuffer) {
    var viewClasses = [
      '[object Int8Array]',
      '[object Uint8Array]',
      '[object Uint8ClampedArray]',
      '[object Int16Array]',
      '[object Uint16Array]',
      '[object Int32Array]',
      '[object Uint32Array]',
      '[object Float32Array]',
      '[object Float64Array]'
    ];

    var isArrayBufferView =
      ArrayBuffer.isView ||
      function(obj) {
        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1
      };
  }

  function normalizeName(name) {
    if (typeof name !== 'string') {
      name = String(name);
    }
    if (/[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(name) || name === '') {
      throw new TypeError('Invalid character in header field name: "' + name + '"')
    }
    return name.toLowerCase()
  }

  function normalizeValue(value) {
    if (typeof value !== 'string') {
      value = String(value);
    }
    return value
  }

  // Build a destructive iterator for the value list
  function iteratorFor(items) {
    var iterator = {
      next: function() {
        var value = items.shift();
        return {done: value === undefined, value: value}
      }
    };

    if (support.iterable) {
      iterator[Symbol.iterator] = function() {
        return iterator
      };
    }

    return iterator
  }

  function Headers(headers) {
    this.map = {};

    if (headers instanceof Headers) {
      headers.forEach(function(value, name) {
        this.append(name, value);
      }, this);
    } else if (Array.isArray(headers)) {
      headers.forEach(function(header) {
        if (header.length != 2) {
          throw new TypeError('Headers constructor: expected name/value pair to be length 2, found' + header.length)
        }
        this.append(header[0], header[1]);
      }, this);
    } else if (headers) {
      Object.getOwnPropertyNames(headers).forEach(function(name) {
        this.append(name, headers[name]);
      }, this);
    }
  }

  Headers.prototype.append = function(name, value) {
    name = normalizeName(name);
    value = normalizeValue(value);
    var oldValue = this.map[name];
    this.map[name] = oldValue ? oldValue + ', ' + value : value;
  };

  Headers.prototype['delete'] = function(name) {
    delete this.map[normalizeName(name)];
  };

  Headers.prototype.get = function(name) {
    name = normalizeName(name);
    return this.has(name) ? this.map[name] : null
  };

  Headers.prototype.has = function(name) {
    return this.map.hasOwnProperty(normalizeName(name))
  };

  Headers.prototype.set = function(name, value) {
    this.map[normalizeName(name)] = normalizeValue(value);
  };

  Headers.prototype.forEach = function(callback, thisArg) {
    for (var name in this.map) {
      if (this.map.hasOwnProperty(name)) {
        callback.call(thisArg, this.map[name], name, this);
      }
    }
  };

  Headers.prototype.keys = function() {
    var items = [];
    this.forEach(function(value, name) {
      items.push(name);
    });
    return iteratorFor(items)
  };

  Headers.prototype.values = function() {
    var items = [];
    this.forEach(function(value) {
      items.push(value);
    });
    return iteratorFor(items)
  };

  Headers.prototype.entries = function() {
    var items = [];
    this.forEach(function(value, name) {
      items.push([name, value]);
    });
    return iteratorFor(items)
  };

  if (support.iterable) {
    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;
  }

  function consumed(body) {
    if (body._noBody) return
    if (body.bodyUsed) {
      return Promise.reject(new TypeError('Already read'))
    }
    body.bodyUsed = true;
  }

  function fileReaderReady(reader) {
    return new Promise(function(resolve, reject) {
      reader.onload = function() {
        resolve(reader.result);
      };
      reader.onerror = function() {
        reject(reader.error);
      };
    })
  }

  function readBlobAsArrayBuffer(blob) {
    var reader = new FileReader();
    var promise = fileReaderReady(reader);
    reader.readAsArrayBuffer(blob);
    return promise
  }

  function readBlobAsText(blob) {
    var reader = new FileReader();
    var promise = fileReaderReady(reader);
    var match = /charset=([A-Za-z0-9_-]+)/.exec(blob.type);
    var encoding = match ? match[1] : 'utf-8';
    reader.readAsText(blob, encoding);
    return promise
  }

  function readArrayBufferAsText(buf) {
    var view = new Uint8Array(buf);
    var chars = new Array(view.length);

    for (var i = 0; i < view.length; i++) {
      chars[i] = String.fromCharCode(view[i]);
    }
    return chars.join('')
  }

  function bufferClone(buf) {
    if (buf.slice) {
      return buf.slice(0)
    } else {
      var view = new Uint8Array(buf.byteLength);
      view.set(new Uint8Array(buf));
      return view.buffer
    }
  }

  function Body() {
    this.bodyUsed = false;

    this._initBody = function(body) {
      /*
        fetch-mock wraps the Response object in an ES6 Proxy to
        provide useful test harness features such as flush. However, on
        ES5 browsers without fetch or Proxy support pollyfills must be used;
        the proxy-pollyfill is unable to proxy an attribute unless it exists
        on the object before the Proxy is created. This change ensures
        Response.bodyUsed exists on the instance, while maintaining the
        semantic of setting Request.bodyUsed in the constructor before
        _initBody is called.
      */
      // eslint-disable-next-line no-self-assign
      this.bodyUsed = this.bodyUsed;
      this._bodyInit = body;
      if (!body) {
        this._noBody = true;
        this._bodyText = '';
      } else if (typeof body === 'string') {
        this._bodyText = body;
      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
        this._bodyBlob = body;
      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
        this._bodyFormData = body;
      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
        this._bodyText = body.toString();
      } else if (support.arrayBuffer && support.blob && isDataView(body)) {
        this._bodyArrayBuffer = bufferClone(body.buffer);
        // IE 10-11 can't handle a DataView body.
        this._bodyInit = new Blob([this._bodyArrayBuffer]);
      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
        this._bodyArrayBuffer = bufferClone(body);
      } else {
        this._bodyText = body = Object.prototype.toString.call(body);
      }

      if (!this.headers.get('content-type')) {
        if (typeof body === 'string') {
          this.headers.set('content-type', 'text/plain;charset=UTF-8');
        } else if (this._bodyBlob && this._bodyBlob.type) {
          this.headers.set('content-type', this._bodyBlob.type);
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
        }
      }
    };

    if (support.blob) {
      this.blob = function() {
        var rejected = consumed(this);
        if (rejected) {
          return rejected
        }

        if (this._bodyBlob) {
          return Promise.resolve(this._bodyBlob)
        } else if (this._bodyArrayBuffer) {
          return Promise.resolve(new Blob([this._bodyArrayBuffer]))
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as blob')
        } else {
          return Promise.resolve(new Blob([this._bodyText]))
        }
      };
    }

    this.arrayBuffer = function() {
      if (this._bodyArrayBuffer) {
        var isConsumed = consumed(this);
        if (isConsumed) {
          return isConsumed
        } else if (ArrayBuffer.isView(this._bodyArrayBuffer)) {
          return Promise.resolve(
            this._bodyArrayBuffer.buffer.slice(
              this._bodyArrayBuffer.byteOffset,
              this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength
            )
          )
        } else {
          return Promise.resolve(this._bodyArrayBuffer)
        }
      } else if (support.blob) {
        return this.blob().then(readBlobAsArrayBuffer)
      } else {
        throw new Error('could not read as ArrayBuffer')
      }
    };

    this.text = function() {
      var rejected = consumed(this);
      if (rejected) {
        return rejected
      }

      if (this._bodyBlob) {
        return readBlobAsText(this._bodyBlob)
      } else if (this._bodyArrayBuffer) {
        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))
      } else if (this._bodyFormData) {
        throw new Error('could not read FormData body as text')
      } else {
        return Promise.resolve(this._bodyText)
      }
    };

    if (support.formData) {
      this.formData = function() {
        return this.text().then(decode)
      };
    }

    this.json = function() {
      return this.text().then(JSON.parse)
    };

    return this
  }

  // HTTP methods whose capitalization should be normalized
  var methods = ['CONNECT', 'DELETE', 'GET', 'HEAD', 'OPTIONS', 'PATCH', 'POST', 'PUT', 'TRACE'];

  function normalizeMethod(method) {
    var upcased = method.toUpperCase();
    return methods.indexOf(upcased) > -1 ? upcased : method
  }

  function Request(input, options) {
    if (!(this instanceof Request)) {
      throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.')
    }

    options = options || {};
    var body = options.body;

    if (input instanceof Request) {
      if (input.bodyUsed) {
        throw new TypeError('Already read')
      }
      this.url = input.url;
      this.credentials = input.credentials;
      if (!options.headers) {
        this.headers = new Headers(input.headers);
      }
      this.method = input.method;
      this.mode = input.mode;
      this.signal = input.signal;
      if (!body && input._bodyInit != null) {
        body = input._bodyInit;
        input.bodyUsed = true;
      }
    } else {
      this.url = String(input);
    }

    this.credentials = options.credentials || this.credentials || 'same-origin';
    if (options.headers || !this.headers) {
      this.headers = new Headers(options.headers);
    }
    this.method = normalizeMethod(options.method || this.method || 'GET');
    this.mode = options.mode || this.mode || null;
    this.signal = options.signal || this.signal || (function () {
      if ('AbortController' in g) {
        var ctrl = new AbortController();
        return ctrl.signal;
      }
    }());
    this.referrer = null;

    if ((this.method === 'GET' || this.method === 'HEAD') && body) {
      throw new TypeError('Body not allowed for GET or HEAD requests')
    }
    this._initBody(body);

    if (this.method === 'GET' || this.method === 'HEAD') {
      if (options.cache === 'no-store' || options.cache === 'no-cache') {
        // Search for a '_' parameter in the query string
        var reParamSearch = /([?&])_=[^&]*/;
        if (reParamSearch.test(this.url)) {
          // If it already exists then set the value with the current time
          this.url = this.url.replace(reParamSearch, '$1_=' + new Date().getTime());
        } else {
          // Otherwise add a new '_' parameter to the end with the current time
          var reQueryString = /\?/;
          this.url += (reQueryString.test(this.url) ? '&' : '?') + '_=' + new Date().getTime();
        }
      }
    }
  }

  Request.prototype.clone = function() {
    return new Request(this, {body: this._bodyInit})
  };

  function decode(body) {
    var form = new FormData();
    body
      .trim()
      .split('&')
      .forEach(function(bytes) {
        if (bytes) {
          var split = bytes.split('=');
          var name = split.shift().replace(/\+/g, ' ');
          var value = split.join('=').replace(/\+/g, ' ');
          form.append(decodeURIComponent(name), decodeURIComponent(value));
        }
      });
    return form
  }

  function parseHeaders(rawHeaders) {
    var headers = new Headers();
    // Replace instances of \r\n and \n followed by at least one space or horizontal tab with a space
    // https://tools.ietf.org/html/rfc7230#section-3.2
    var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, ' ');
    // Avoiding split via regex to work around a common IE11 bug with the core-js 3.6.0 regex polyfill
    // https://github.com/github/fetch/issues/748
    // https://github.com/zloirock/core-js/issues/751
    preProcessedHeaders
      .split('\r')
      .map(function(header) {
        return header.indexOf('\n') === 0 ? header.substr(1, header.length) : header
      })
      .forEach(function(line) {
        var parts = line.split(':');
        var key = parts.shift().trim();
        if (key) {
          var value = parts.join(':').trim();
          try {
            headers.append(key, value);
          } catch (error) {
            console.warn('Response ' + error.message);
          }
        }
      });
    return headers
  }

  Body.call(Request.prototype);

  function Response(bodyInit, options) {
    if (!(this instanceof Response)) {
      throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.')
    }
    if (!options) {
      options = {};
    }

    this.type = 'default';
    this.status = options.status === undefined ? 200 : options.status;
    if (this.status < 200 || this.status > 599) {
      throw new RangeError("Failed to construct 'Response': The status provided (0) is outside the range [200, 599].")
    }
    this.ok = this.status >= 200 && this.status < 300;
    this.statusText = options.statusText === undefined ? '' : '' + options.statusText;
    this.headers = new Headers(options.headers);
    this.url = options.url || '';
    this._initBody(bodyInit);
  }

  Body.call(Response.prototype);

  Response.prototype.clone = function() {
    return new Response(this._bodyInit, {
      status: this.status,
      statusText: this.statusText,
      headers: new Headers(this.headers),
      url: this.url
    })
  };

  Response.error = function() {
    var response = new Response(null, {status: 200, statusText: ''});
    response.ok = false;
    response.status = 0;
    response.type = 'error';
    return response
  };

  var redirectStatuses = [301, 302, 303, 307, 308];

  Response.redirect = function(url, status) {
    if (redirectStatuses.indexOf(status) === -1) {
      throw new RangeError('Invalid status code')
    }

    return new Response(null, {status: status, headers: {location: url}})
  };

  exports.DOMException = g.DOMException;
  try {
    new exports.DOMException();
  } catch (err) {
    exports.DOMException = function(message, name) {
      this.message = message;
      this.name = name;
      var error = Error(message);
      this.stack = error.stack;
    };
    exports.DOMException.prototype = Object.create(Error.prototype);
    exports.DOMException.prototype.constructor = exports.DOMException;
  }

  function fetch(input, init) {
    return new Promise(function(resolve, reject) {
      var request = new Request(input, init);

      if (request.signal && request.signal.aborted) {
        return reject(new exports.DOMException('Aborted', 'AbortError'))
      }

      var xhr = new XMLHttpRequest();

      function abortXhr() {
        xhr.abort();
      }

      xhr.onload = function() {
        var options = {
          statusText: xhr.statusText,
          headers: parseHeaders(xhr.getAllResponseHeaders() || '')
        };
        // This check if specifically for when a user fetches a file locally from the file system
        // Only if the status is out of a normal range
        if (request.url.indexOf('file://') === 0 && (xhr.status < 200 || xhr.status > 599)) {
          options.status = 200;
        } else {
          options.status = xhr.status;
        }
        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
        var body = 'response' in xhr ? xhr.response : xhr.responseText;
        setTimeout(function() {
          resolve(new Response(body, options));
        }, 0);
      };

      xhr.onerror = function() {
        setTimeout(function() {
          reject(new TypeError('Network request failed'));
        }, 0);
      };

      xhr.ontimeout = function() {
        setTimeout(function() {
          reject(new TypeError('Network request timed out'));
        }, 0);
      };

      xhr.onabort = function() {
        setTimeout(function() {
          reject(new exports.DOMException('Aborted', 'AbortError'));
        }, 0);
      };

      function fixUrl(url) {
        try {
          return url === '' && g.location.href ? g.location.href : url
        } catch (e) {
          return url
        }
      }

      xhr.open(request.method, fixUrl(request.url), true);

      if (request.credentials === 'include') {
        xhr.withCredentials = true;
      } else if (request.credentials === 'omit') {
        xhr.withCredentials = false;
      }

      if ('responseType' in xhr) {
        if (support.blob) {
          xhr.responseType = 'blob';
        } else if (
          support.arrayBuffer
        ) {
          xhr.responseType = 'arraybuffer';
        }
      }

      if (init && typeof init.headers === 'object' && !(init.headers instanceof Headers || (g.Headers && init.headers instanceof g.Headers))) {
        var names = [];
        Object.getOwnPropertyNames(init.headers).forEach(function(name) {
          names.push(normalizeName(name));
          xhr.setRequestHeader(name, normalizeValue(init.headers[name]));
        });
        request.headers.forEach(function(value, name) {
          if (names.indexOf(name) === -1) {
            xhr.setRequestHeader(name, value);
          }
        });
      } else {
        request.headers.forEach(function(value, name) {
          xhr.setRequestHeader(name, value);
        });
      }

      if (request.signal) {
        request.signal.addEventListener('abort', abortXhr);

        xhr.onreadystatechange = function() {
          // DONE (success or failure)
          if (xhr.readyState === 4) {
            request.signal.removeEventListener('abort', abortXhr);
          }
        };
      }

      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
    })
  }

  fetch.polyfill = true;

  if (!g.fetch) {
    g.fetch = fetch;
    g.Headers = Headers;
    g.Request = Request;
    g.Response = Response;
  }

  exports.Headers = Headers;
  exports.Request = Request;
  exports.Response = Response;
  exports.fetch = fetch;

  return exports;

})({});
})(__globalThis__);
// This is a ponyfill, so...
__globalThis__.fetch.ponyfill = true;
delete __globalThis__.fetch.polyfill;
// Choose between native implementation (__global__) or custom implementation (__globalThis__)
var ctx = __global__.fetch ? __global__ : __globalThis__;
exports = ctx.fetch // To enable: import fetch from 'cross-fetch'
exports["default"] = ctx.fetch // For TypeScript consumers without esModuleInterop.
exports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'
exports.Headers = ctx.Headers
exports.Request = ctx.Request
exports.Response = ctx.Response
module.exports = exports


/***/ }),

/***/ "./node_modules/web3-providers-ws/lib/esm/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/web3-providers-ws/lib/esm/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WebSocketProvider: () => (/* binding */ WebSocketProvider),
/* harmony export */   "default": () => (/* binding */ WebSocketProvider)
/* harmony export */ });
/* harmony import */ var isomorphic_ws__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! isomorphic-ws */ "./node_modules/isomorphic-ws/browser.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/



/**
 * Use WebSocketProvider to connect to a Node using a WebSocket connection, i.e. over the `ws` or `wss` protocol.
 *
 * @example
 * ```ts
 * const provider = new WebSocketProvider(
 * 		`ws://localhost:8545`,
 * 		{
 * 			headers: {
 * 				// to provide the API key if the Node requires the key to be inside the `headers` for example:
 * 				'x-api-key': '<Api key>',
 * 			},
 * 		},
 * 		{
 * 			delay: 500,
 * 			autoReconnect: true,
 * 			maxAttempts: 10,
 * 		},
 * 	);
 * ```
 *
 * The second and the third parameters are both optional. And you can for example, the second parameter could be an empty object or undefined.
 *  * @example
 * ```ts
 * const provider = new WebSocketProvider(
 * 		`ws://localhost:8545`,
 * 		{},
 * 		{
 * 			delay: 500,
 * 			autoReconnect: true,
 * 			maxAttempts: 10,
 * 		},
 * 	);
 * ```
 */
class WebSocketProvider extends web3_utils__WEBPACK_IMPORTED_MODULE_1__.SocketProvider {
    /**
     * This is a class used for Web Socket connections. It extends the abstract class SocketProvider {@link SocketProvider} that extends the EIP-1193 provider {@link EIP1193Provider}.
     * @param socketPath - The path to the Web Socket.
     * @param socketOptions - The options for the Web Socket client.
     * @param reconnectOptions - The options for the socket reconnection {@link ReconnectOptions}
     */
    // this constructor is to specify the type for `socketOptions` for a better intellisense.
    // eslint-disable-next-line no-useless-constructor
    constructor(socketPath, socketOptions, reconnectOptions) {
        super(socketPath, socketOptions, reconnectOptions);
    }
    // eslint-disable-next-line class-methods-use-this
    _validateProviderPath(providerUrl) {
        return typeof providerUrl === 'string' ? /^ws(s)?:\/\//i.test(providerUrl) : false;
    }
    getStatus() {
        if (this._socketConnection && !(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(this._socketConnection)) {
            switch (this._socketConnection.readyState) {
                case this._socketConnection.CONNECTING: {
                    return 'connecting';
                }
                case this._socketConnection.OPEN: {
                    return 'connected';
                }
                default: {
                    return 'disconnected';
                }
            }
        }
        return 'disconnected';
    }
    _openSocketConnection() {
        this._socketConnection = new isomorphic_ws__WEBPACK_IMPORTED_MODULE_0__["default"](this._socketPath, undefined, this._socketOptions && Object.keys(this._socketOptions).length === 0
            ? undefined
            : this._socketOptions);
    }
    _closeSocketConnection(code, data) {
        var _a;
        (_a = this._socketConnection) === null || _a === void 0 ? void 0 : _a.close(code, data);
    }
    _sendToSocket(payload) {
        var _a;
        if (this.getStatus() === 'disconnected') {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.ConnectionNotOpenError();
        }
        (_a = this._socketConnection) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(payload));
    }
    _parseResponses(event) {
        return this.chunkResponseParser.parseResponse(event.data);
    }
    _addSocketListeners() {
        var _a, _b, _c, _d;
        (_a = this._socketConnection) === null || _a === void 0 ? void 0 : _a.addEventListener('open', this._onOpenHandler);
        (_b = this._socketConnection) === null || _b === void 0 ? void 0 : _b.addEventListener('message', this._onMessageHandler);
        (_c = this._socketConnection) === null || _c === void 0 ? void 0 : _c.addEventListener('close', e => this._onCloseHandler(e));
        (_d = this._socketConnection) === null || _d === void 0 ? void 0 : _d.addEventListener('error', this._onErrorHandler);
    }
    _removeSocketListeners() {
        var _a, _b, _c;
        (_a = this._socketConnection) === null || _a === void 0 ? void 0 : _a.removeEventListener('message', this._onMessageHandler);
        (_b = this._socketConnection) === null || _b === void 0 ? void 0 : _b.removeEventListener('open', this._onOpenHandler);
        (_c = this._socketConnection) === null || _c === void 0 ? void 0 : _c.removeEventListener('close', this._onCloseHandler);
        // note: we intentionally keep the error event listener to be able to emit it in case an error happens when closing the connection
    }
    _onCloseEvent(event) {
        var _a;
        if (this._reconnectOptions.autoReconnect &&
            (![1000, 1001].includes(event.code) || !event.wasClean)) {
            this._reconnect();
            return;
        }
        this._clearQueues(event);
        this._removeSocketListeners();
        this._onDisconnect(event.code, event.reason);
        // disconnect was successful and can safely remove error listener
        (_a = this._socketConnection) === null || _a === void 0 ? void 0 : _a.removeEventListener('error', this._onErrorHandler);
    }
}

//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/web3-rpc-methods/lib/esm/eth_rpc_methods.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-rpc-methods/lib/esm/eth_rpc_methods.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   call: () => (/* binding */ call),
/* harmony export */   compileLLL: () => (/* binding */ compileLLL),
/* harmony export */   compileSerpent: () => (/* binding */ compileSerpent),
/* harmony export */   compileSolidity: () => (/* binding */ compileSolidity),
/* harmony export */   createAccessList: () => (/* binding */ createAccessList),
/* harmony export */   estimateGas: () => (/* binding */ estimateGas),
/* harmony export */   getAccounts: () => (/* binding */ getAccounts),
/* harmony export */   getBalance: () => (/* binding */ getBalance),
/* harmony export */   getBlockByHash: () => (/* binding */ getBlockByHash),
/* harmony export */   getBlockByNumber: () => (/* binding */ getBlockByNumber),
/* harmony export */   getBlockNumber: () => (/* binding */ getBlockNumber),
/* harmony export */   getBlockTransactionCountByHash: () => (/* binding */ getBlockTransactionCountByHash),
/* harmony export */   getBlockTransactionCountByNumber: () => (/* binding */ getBlockTransactionCountByNumber),
/* harmony export */   getChainId: () => (/* binding */ getChainId),
/* harmony export */   getCode: () => (/* binding */ getCode),
/* harmony export */   getCoinbase: () => (/* binding */ getCoinbase),
/* harmony export */   getCompilers: () => (/* binding */ getCompilers),
/* harmony export */   getFeeHistory: () => (/* binding */ getFeeHistory),
/* harmony export */   getFilterChanges: () => (/* binding */ getFilterChanges),
/* harmony export */   getFilterLogs: () => (/* binding */ getFilterLogs),
/* harmony export */   getGasPrice: () => (/* binding */ getGasPrice),
/* harmony export */   getHashRate: () => (/* binding */ getHashRate),
/* harmony export */   getLogs: () => (/* binding */ getLogs),
/* harmony export */   getMaxPriorityFeePerGas: () => (/* binding */ getMaxPriorityFeePerGas),
/* harmony export */   getMining: () => (/* binding */ getMining),
/* harmony export */   getNodeInfo: () => (/* binding */ getNodeInfo),
/* harmony export */   getPendingTransactions: () => (/* binding */ getPendingTransactions),
/* harmony export */   getProof: () => (/* binding */ getProof),
/* harmony export */   getProtocolVersion: () => (/* binding */ getProtocolVersion),
/* harmony export */   getStorageAt: () => (/* binding */ getStorageAt),
/* harmony export */   getSyncing: () => (/* binding */ getSyncing),
/* harmony export */   getTransactionByBlockHashAndIndex: () => (/* binding */ getTransactionByBlockHashAndIndex),
/* harmony export */   getTransactionByBlockNumberAndIndex: () => (/* binding */ getTransactionByBlockNumberAndIndex),
/* harmony export */   getTransactionByHash: () => (/* binding */ getTransactionByHash),
/* harmony export */   getTransactionCount: () => (/* binding */ getTransactionCount),
/* harmony export */   getTransactionReceipt: () => (/* binding */ getTransactionReceipt),
/* harmony export */   getUncleByBlockHashAndIndex: () => (/* binding */ getUncleByBlockHashAndIndex),
/* harmony export */   getUncleByBlockNumberAndIndex: () => (/* binding */ getUncleByBlockNumberAndIndex),
/* harmony export */   getUncleCountByBlockHash: () => (/* binding */ getUncleCountByBlockHash),
/* harmony export */   getUncleCountByBlockNumber: () => (/* binding */ getUncleCountByBlockNumber),
/* harmony export */   getWork: () => (/* binding */ getWork),
/* harmony export */   newBlockFilter: () => (/* binding */ newBlockFilter),
/* harmony export */   newFilter: () => (/* binding */ newFilter),
/* harmony export */   newPendingTransactionFilter: () => (/* binding */ newPendingTransactionFilter),
/* harmony export */   requestAccounts: () => (/* binding */ requestAccounts),
/* harmony export */   sendRawTransaction: () => (/* binding */ sendRawTransaction),
/* harmony export */   sendTransaction: () => (/* binding */ sendTransaction),
/* harmony export */   sign: () => (/* binding */ sign),
/* harmony export */   signTransaction: () => (/* binding */ signTransaction),
/* harmony export */   signTypedData: () => (/* binding */ signTypedData),
/* harmony export */   submitHashrate: () => (/* binding */ submitHashrate),
/* harmony export */   submitWork: () => (/* binding */ submitWork),
/* harmony export */   uninstallFilter: () => (/* binding */ uninstallFilter)
/* harmony export */ });
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};

function getProtocolVersion(requestManager) {
    return __awaiter(this, void 0, void 0, function* () {
        return requestManager.send({
            method: 'eth_protocolVersion',
            params: [],
        });
    });
}
function getSyncing(requestManager) {
    return __awaiter(this, void 0, void 0, function* () {
        return requestManager.send({
            method: 'eth_syncing',
            params: [],
        });
    });
}
function getCoinbase(requestManager) {
    return __awaiter(this, void 0, void 0, function* () {
        return requestManager.send({
            method: 'eth_coinbase',
            params: [],
        });
    });
}
function getMining(requestManager) {
    return __awaiter(this, void 0, void 0, function* () {
        return requestManager.send({
            method: 'eth_mining',
            params: [],
        });
    });
}
function getHashRate(requestManager) {
    return __awaiter(this, void 0, void 0, function* () {
        return requestManager.send({
            method: 'eth_hashrate',
            params: [],
        });
    });
}
function getGasPrice(requestManager) {
    return __awaiter(this, void 0, void 0, function* () {
        return requestManager.send({
            method: 'eth_gasPrice',
            params: [],
        });
    });
}
function getMaxPriorityFeePerGas(requestManager) {
    return __awaiter(this, void 0, void 0, function* () {
        return requestManager.send({
            method: 'eth_maxPriorityFeePerGas',
            params: [],
        });
    });
}
function getAccounts(requestManager) {
    return __awaiter(this, void 0, void 0, function* () {
        return requestManager.send({
            method: 'eth_accounts',
            params: [],
        });
    });
}
function getBlockNumber(requestManager) {
    return __awaiter(this, void 0, void 0, function* () {
        return requestManager.send({
            method: 'eth_blockNumber',
            params: [],
        });
    });
}
function getBalance(requestManager, address, blockNumber) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['address', 'blockNumberOrTag'], [address, blockNumber]);
        return requestManager.send({
            method: 'eth_getBalance',
            params: [address, blockNumber],
        });
    });
}
function getStorageAt(requestManager, address, storageSlot, blockNumber) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['address', 'hex', 'blockNumberOrTag'], [address, storageSlot, blockNumber]);
        return requestManager.send({
            method: 'eth_getStorageAt',
            params: [address, storageSlot, blockNumber],
        });
    });
}
function getTransactionCount(requestManager, address, blockNumber) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['address', 'blockNumberOrTag'], [address, blockNumber]);
        return requestManager.send({
            method: 'eth_getTransactionCount',
            params: [address, blockNumber],
        });
    });
}
function getBlockTransactionCountByHash(requestManager, blockHash) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['bytes32'], [blockHash]);
        return requestManager.send({
            method: 'eth_getBlockTransactionCountByHash',
            params: [blockHash],
        });
    });
}
function getBlockTransactionCountByNumber(requestManager, blockNumber) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['blockNumberOrTag'], [blockNumber]);
        return requestManager.send({
            method: 'eth_getBlockTransactionCountByNumber',
            params: [blockNumber],
        });
    });
}
function getUncleCountByBlockHash(requestManager, blockHash) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['bytes32'], [blockHash]);
        return requestManager.send({
            method: 'eth_getUncleCountByBlockHash',
            params: [blockHash],
        });
    });
}
function getUncleCountByBlockNumber(requestManager, blockNumber) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['blockNumberOrTag'], [blockNumber]);
        return requestManager.send({
            method: 'eth_getUncleCountByBlockNumber',
            params: [blockNumber],
        });
    });
}
function getCode(requestManager, address, blockNumber) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['address', 'blockNumberOrTag'], [address, blockNumber]);
        return requestManager.send({
            method: 'eth_getCode',
            params: [address, blockNumber],
        });
    });
}
function sign(requestManager, address, message) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['address', 'hex'], [address, message]);
        return requestManager.send({
            method: 'eth_sign',
            params: [address, message],
        });
    });
}
// TODO - Validation should be:
// isTransactionWithSender(transaction)
// ? validateTransactionWithSender(transaction)
// : validateTransactionWithSender(transaction, true) with true being a isPartial flag
function signTransaction(requestManager, transaction) {
    return __awaiter(this, void 0, void 0, function* () {
        return requestManager.send({
            method: 'eth_signTransaction',
            params: [transaction],
        });
    });
}
// TODO - Validation should be:
// isTransactionWithSender(transaction)
// ? validateTransactionWithSender(transaction)
// : validateTransactionWithSender(transaction, true) with true being a isPartial flag
function sendTransaction(requestManager, transaction) {
    return __awaiter(this, void 0, void 0, function* () {
        return requestManager.send({
            method: 'eth_sendTransaction',
            params: [transaction],
        });
    });
}
function sendRawTransaction(requestManager, transaction) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['hex'], [transaction]);
        return requestManager.send({
            method: 'eth_sendRawTransaction',
            params: [transaction],
        });
    });
}
// TODO - validate transaction
function call(requestManager, transaction, blockNumber) {
    return __awaiter(this, void 0, void 0, function* () {
        // validateTransactionCall(transaction);
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['blockNumberOrTag'], [blockNumber]);
        return requestManager.send({
            method: 'eth_call',
            params: [transaction, blockNumber],
        });
    });
}
// TODO Not sure how to best validate Partial<TransactionWithSender>
function estimateGas(requestManager, transaction, blockNumber) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['blockNumberOrTag'], [blockNumber]);
        return requestManager.send({
            method: 'eth_estimateGas',
            params: [transaction, blockNumber],
        });
    });
}
function getBlockByHash(requestManager, blockHash, hydrated) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['bytes32', 'bool'], [blockHash, hydrated]);
        return requestManager.send({
            method: 'eth_getBlockByHash',
            params: [blockHash, hydrated],
        });
    });
}
function getBlockByNumber(requestManager, blockNumber, hydrated) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['blockNumberOrTag', 'bool'], [blockNumber, hydrated]);
        return requestManager.send({
            method: 'eth_getBlockByNumber',
            params: [blockNumber, hydrated],
        });
    });
}
function getTransactionByHash(requestManager, transactionHash) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['bytes32'], [transactionHash]);
        return requestManager.send({
            method: 'eth_getTransactionByHash',
            params: [transactionHash],
        });
    });
}
function getTransactionByBlockHashAndIndex(requestManager, blockHash, transactionIndex) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['bytes32', 'hex'], [blockHash, transactionIndex]);
        return requestManager.send({
            method: 'eth_getTransactionByBlockHashAndIndex',
            params: [blockHash, transactionIndex],
        });
    });
}
function getTransactionByBlockNumberAndIndex(requestManager, blockNumber, transactionIndex) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['blockNumberOrTag', 'hex'], [blockNumber, transactionIndex]);
        return requestManager.send({
            method: 'eth_getTransactionByBlockNumberAndIndex',
            params: [blockNumber, transactionIndex],
        });
    });
}
function getTransactionReceipt(requestManager, transactionHash) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['bytes32'], [transactionHash]);
        return requestManager.send({
            method: 'eth_getTransactionReceipt',
            params: [transactionHash],
        });
    });
}
function getUncleByBlockHashAndIndex(requestManager, blockHash, uncleIndex) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['bytes32', 'hex'], [blockHash, uncleIndex]);
        return requestManager.send({
            method: 'eth_getUncleByBlockHashAndIndex',
            params: [blockHash, uncleIndex],
        });
    });
}
function getUncleByBlockNumberAndIndex(requestManager, blockNumber, uncleIndex) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['blockNumberOrTag', 'hex'], [blockNumber, uncleIndex]);
        return requestManager.send({
            method: 'eth_getUncleByBlockNumberAndIndex',
            params: [blockNumber, uncleIndex],
        });
    });
}
function getCompilers(requestManager) {
    return __awaiter(this, void 0, void 0, function* () {
        return requestManager.send({
            method: 'eth_getCompilers',
            params: [],
        });
    });
}
function compileSolidity(requestManager, code) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['string'], [code]);
        return requestManager.send({
            method: 'eth_compileSolidity',
            params: [code],
        });
    });
}
function compileLLL(requestManager, code) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['string'], [code]);
        return requestManager.send({
            method: 'eth_compileLLL',
            params: [code],
        });
    });
}
function compileSerpent(requestManager, code) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['string'], [code]);
        return requestManager.send({
            method: 'eth_compileSerpent',
            params: [code],
        });
    });
}
function newFilter(requestManager, filter) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['filter'], [filter]);
        return requestManager.send({
            method: 'eth_newFilter',
            params: [filter],
        });
    });
}
function newBlockFilter(requestManager) {
    return __awaiter(this, void 0, void 0, function* () {
        return requestManager.send({
            method: 'eth_newBlockFilter',
            params: [],
        });
    });
}
function newPendingTransactionFilter(requestManager) {
    return __awaiter(this, void 0, void 0, function* () {
        return requestManager.send({
            method: 'eth_newPendingTransactionFilter',
            params: [],
        });
    });
}
function uninstallFilter(requestManager, filterIdentifier) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['hex'], [filterIdentifier]);
        return requestManager.send({
            method: 'eth_uninstallFilter',
            params: [filterIdentifier],
        });
    });
}
function getFilterChanges(requestManager, filterIdentifier) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['hex'], [filterIdentifier]);
        return requestManager.send({
            method: 'eth_getFilterChanges',
            params: [filterIdentifier],
        });
    });
}
function getFilterLogs(requestManager, filterIdentifier) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['hex'], [filterIdentifier]);
        return requestManager.send({
            method: 'eth_getFilterLogs',
            params: [filterIdentifier],
        });
    });
}
function getLogs(requestManager, filter) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['filter'], [filter]);
        return requestManager.send({
            method: 'eth_getLogs',
            params: [filter],
        });
    });
}
function getWork(requestManager) {
    return __awaiter(this, void 0, void 0, function* () {
        return requestManager.send({
            method: 'eth_getWork',
            params: [],
        });
    });
}
function submitWork(requestManager, nonce, hash, digest) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['bytes8', 'bytes32', 'bytes32'], [nonce, hash, digest]);
        return requestManager.send({
            method: 'eth_submitWork',
            params: [nonce, hash, digest],
        });
    });
}
function submitHashrate(requestManager, hashRate, id) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['bytes32', 'bytes32'], [hashRate, id]);
        return requestManager.send({
            method: 'eth_submitHashrate',
            params: [hashRate, id],
        });
    });
}
function getFeeHistory(requestManager, blockCount, newestBlock, rewardPercentiles) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['hex', 'blockNumberOrTag'], [blockCount, newestBlock]);
        for (const rewardPercentile of rewardPercentiles) {
            web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['number'], [rewardPercentile]);
        }
        return requestManager.send({
            method: 'eth_feeHistory',
            params: [blockCount, newestBlock, rewardPercentiles],
        });
    });
}
function getPendingTransactions(requestManager) {
    return __awaiter(this, void 0, void 0, function* () {
        return requestManager.send({
            method: 'eth_pendingTransactions',
            params: [],
        });
    });
}
function requestAccounts(requestManager) {
    return __awaiter(this, void 0, void 0, function* () {
        return requestManager.send({
            method: 'eth_requestAccounts',
            params: [],
        });
    });
}
function getChainId(requestManager) {
    return __awaiter(this, void 0, void 0, function* () {
        return requestManager.send({
            method: 'eth_chainId',
            params: [],
        });
    });
}
function getProof(requestManager, address, storageKeys, blockNumber) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['address', 'bytes32[]', 'blockNumberOrTag'], [address, storageKeys, blockNumber]);
        return requestManager.send({
            method: 'eth_getProof',
            params: [address, storageKeys, blockNumber],
        });
    });
}
function getNodeInfo(requestManager) {
    return __awaiter(this, void 0, void 0, function* () {
        return requestManager.send({
            method: 'web3_clientVersion',
            params: [],
        });
    });
}
function createAccessList(requestManager, transaction, blockNumber) {
    return __awaiter(this, void 0, void 0, function* () {
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['blockNumberOrTag'], [blockNumber]);
        return requestManager.send({
            method: 'eth_createAccessList',
            params: [transaction, blockNumber],
        });
    });
}
function signTypedData(requestManager, address, typedData, useLegacy = false) {
    return __awaiter(this, void 0, void 0, function* () {
        // TODO Add validation for typedData
        web3_validator__WEBPACK_IMPORTED_MODULE_0__.validator.validate(['address'], [address]);
        return requestManager.send({
            method: `eth_signTypedData${useLegacy ? '' : '_v4'}`,
            params: [address, typedData],
        });
    });
}
//# sourceMappingURL=eth_rpc_methods.js.map

/***/ }),

/***/ "./node_modules/web3-rpc-methods/lib/esm/index.js":
/*!********************************************************!*\
  !*** ./node_modules/web3-rpc-methods/lib/esm/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ethRpcMethods: () => (/* reexport module object */ _eth_rpc_methods_js__WEBPACK_IMPORTED_MODULE_0__),
/* harmony export */   netRpcMethods: () => (/* reexport module object */ _net_rpc_methods_js__WEBPACK_IMPORTED_MODULE_1__),
/* harmony export */   personalRpcMethods: () => (/* reexport module object */ _personal_rpc_methods_js__WEBPACK_IMPORTED_MODULE_2__)
/* harmony export */ });
/* harmony import */ var _eth_rpc_methods_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./eth_rpc_methods.js */ "./node_modules/web3-rpc-methods/lib/esm/eth_rpc_methods.js");
/* harmony import */ var _net_rpc_methods_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./net_rpc_methods.js */ "./node_modules/web3-rpc-methods/lib/esm/net_rpc_methods.js");
/* harmony import */ var _personal_rpc_methods_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./personal_rpc_methods.js */ "./node_modules/web3-rpc-methods/lib/esm/personal_rpc_methods.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/




//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/web3-rpc-methods/lib/esm/net_rpc_methods.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-rpc-methods/lib/esm/net_rpc_methods.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getId: () => (/* binding */ getId),
/* harmony export */   getPeerCount: () => (/* binding */ getPeerCount),
/* harmony export */   isListening: () => (/* binding */ isListening)
/* harmony export */ });
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
function getId(requestManager) {
    return __awaiter(this, void 0, void 0, function* () {
        return requestManager.send({
            method: 'net_version',
            params: [],
        });
    });
}
function getPeerCount(requestManager) {
    return __awaiter(this, void 0, void 0, function* () {
        return requestManager.send({
            method: 'net_peerCount',
            params: [],
        });
    });
}
function isListening(requestManager) {
    return __awaiter(this, void 0, void 0, function* () {
        return requestManager.send({
            method: 'net_listening',
            params: [],
        });
    });
}
//# sourceMappingURL=net_rpc_methods.js.map

/***/ }),

/***/ "./node_modules/web3-rpc-methods/lib/esm/personal_rpc_methods.js":
/*!***********************************************************************!*\
  !*** ./node_modules/web3-rpc-methods/lib/esm/personal_rpc_methods.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ecRecover: () => (/* binding */ ecRecover),
/* harmony export */   getAccounts: () => (/* binding */ getAccounts),
/* harmony export */   importRawKey: () => (/* binding */ importRawKey),
/* harmony export */   lockAccount: () => (/* binding */ lockAccount),
/* harmony export */   newAccount: () => (/* binding */ newAccount),
/* harmony export */   sendTransaction: () => (/* binding */ sendTransaction),
/* harmony export */   sign: () => (/* binding */ sign),
/* harmony export */   signTransaction: () => (/* binding */ signTransaction),
/* harmony export */   unlockAccount: () => (/* binding */ unlockAccount)
/* harmony export */ });
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const getAccounts = (requestManager) => __awaiter(void 0, void 0, void 0, function* () {
    return requestManager.send({
        method: 'personal_listAccounts',
        params: [],
    });
});
const newAccount = (requestManager, password) => __awaiter(void 0, void 0, void 0, function* () {
    return requestManager.send({
        method: 'personal_newAccount',
        params: [password],
    });
});
const unlockAccount = (requestManager, address, password, unlockDuration) => __awaiter(void 0, void 0, void 0, function* () {
    return requestManager.send({
        method: 'personal_unlockAccount',
        params: [address, password, unlockDuration],
    });
});
const lockAccount = (requestManager, address) => __awaiter(void 0, void 0, void 0, function* () {
    return requestManager.send({
        method: 'personal_lockAccount',
        params: [address],
    });
});
const importRawKey = (requestManager, keyData, passphrase) => __awaiter(void 0, void 0, void 0, function* () {
    return requestManager.send({
        method: 'personal_importRawKey',
        params: [keyData, passphrase],
    });
});
const sendTransaction = (requestManager, tx, passphrase) => __awaiter(void 0, void 0, void 0, function* () {
    return requestManager.send({
        method: 'personal_sendTransaction',
        params: [tx, passphrase],
    });
});
const signTransaction = (requestManager, tx, passphrase) => __awaiter(void 0, void 0, void 0, function* () {
    return requestManager.send({
        method: 'personal_signTransaction',
        params: [tx, passphrase],
    });
});
const sign = (requestManager, data, address, passphrase) => __awaiter(void 0, void 0, void 0, function* () {
    return requestManager.send({
        method: 'personal_sign',
        params: [data, address, passphrase],
    });
});
const ecRecover = (requestManager, signedData, signature) => __awaiter(void 0, void 0, void 0, function* () {
    return requestManager.send({
        method: 'personal_ecRecover',
        params: [signedData, signature],
    });
});
//# sourceMappingURL=personal_rpc_methods.js.map

/***/ }),

/***/ "./node_modules/web3-rpc-providers/lib/esm/errors.js":
/*!***********************************************************!*\
  !*** ./node_modules/web3-rpc-providers/lib/esm/errors.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ProviderConfigOptionsError: () => (/* binding */ ProviderConfigOptionsError),
/* harmony export */   QuickNodeRateLimitError: () => (/* binding */ QuickNodeRateLimitError)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/* eslint-disable max-classes-per-file */

const ERR_QUICK_NODE_RATE_LIMIT = 1300;
class QuickNodeRateLimitError extends web3_errors__WEBPACK_IMPORTED_MODULE_0__.BaseWeb3Error {
    constructor(error) {
        super(`You've reach the rate limit of free RPC calls from our Partner Quick Nodes. There are two options you can either create a paid Quick Nodes account and get 20% off for 2 months using WEB3JS referral code, or use Free public RPC endpoint.`, error);
        this.code = ERR_QUICK_NODE_RATE_LIMIT;
    }
}
const ERR_PROVIDER_CONFIG_OPTIONS = 1301;
class ProviderConfigOptionsError extends web3_errors__WEBPACK_IMPORTED_MODULE_0__.BaseWeb3Error {
    constructor(msg) {
        super(`Invalid provider config options given for ${msg}`);
        this.code = ERR_PROVIDER_CONFIG_OPTIONS;
    }
}
/* eslint-enable max-classes-per-file */
//# sourceMappingURL=errors.js.map

/***/ }),

/***/ "./node_modules/web3-rpc-providers/lib/esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/web3-rpc-providers/lib/esm/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Network: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_1__.Network),
/* harmony export */   ProviderConfigOptionsError: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_4__.ProviderConfigOptionsError),
/* harmony export */   PublicNodeProvider: () => (/* reexport safe */ _web3_provider_publicnode_js__WEBPACK_IMPORTED_MODULE_2__.PublicNodeProvider),
/* harmony export */   QuickNodeProvider: () => (/* reexport safe */ _web3_provider_quicknode_js__WEBPACK_IMPORTED_MODULE_0__.QuickNodeProvider),
/* harmony export */   QuickNodeRateLimitError: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_4__.QuickNodeRateLimitError),
/* harmony export */   Transport: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_1__.Transport),
/* harmony export */   Web3ExternalProvider: () => (/* reexport safe */ _web3_provider_js__WEBPACK_IMPORTED_MODULE_3__.Web3ExternalProvider),
/* harmony export */   mainnet: () => (/* binding */ mainnet)
/* harmony export */ });
/* harmony import */ var _web3_provider_quicknode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./web3_provider_quicknode.js */ "./node_modules/web3-rpc-providers/lib/esm/web3_provider_quicknode.js");
/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types.js */ "./node_modules/web3-rpc-providers/lib/esm/types.js");
/* harmony import */ var _web3_provider_publicnode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./web3_provider_publicnode.js */ "./node_modules/web3-rpc-providers/lib/esm/web3_provider_publicnode.js");
/* harmony import */ var _web3_provider_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./web3_provider.js */ "./node_modules/web3-rpc-providers/lib/esm/web3_provider.js");
/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./errors.js */ "./node_modules/web3-rpc-providers/lib/esm/errors.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/






// default providers
const mainnet = new _web3_provider_quicknode_js__WEBPACK_IMPORTED_MODULE_0__.QuickNodeProvider();
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/web3-rpc-providers/lib/esm/types.js":
/*!**********************************************************!*\
  !*** ./node_modules/web3-rpc-providers/lib/esm/types.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Network: () => (/* binding */ Network),
/* harmony export */   Transport: () => (/* binding */ Transport)
/* harmony export */ });
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var Transport;
(function (Transport) {
    Transport["HTTPS"] = "https";
    Transport["WebSocket"] = "wss";
})(Transport || (Transport = {}));
var Network;
(function (Network) {
    Network["ETH_MAINNET"] = "eth_mainnet";
    Network["ETH_SEPOLIA"] = "eth_sepolia";
    Network["ETH_HOLESKY"] = "eth_holesky";
    Network["POLYGON_MAINNET"] = "polygon_mainnet";
    Network["POLYGON_AMOY"] = "polygon_amoy";
    Network["AVALANCHE_C_MAINNET"] = "avalanche_c_mainnet";
    Network["AVALANCHE_P_MAINNET"] = "avalanche_p_mainnet";
    Network["AVALANCHE_X_MAINNET"] = "avalanche_x_mainnet";
    Network["ARBITRUM_MAINNET"] = "arbitrum_mainnet";
    Network["ARBITRUM_SEPOLIA"] = "arbitrum_sepolia";
    Network["BASE_MAINNET"] = "base_mainnet";
    Network["BASE_SEPOLIA"] = "base_sepolia";
    Network["OPTIMISM_MAINNET"] = "optimism_mainnet";
    Network["OPTIMISM_SEPOLIA"] = "optimism_sepolia";
    Network["FANTOM_MAINNET"] = "fantom_mainnet";
    Network["FANTOM_TESTNET"] = "fantom_testnet";
    Network["DYMENSION_MAINNET"] = "dymension_mainnet";
    Network["DYMENSION_TESTNET"] = "dymension_testnet";
    Network["BNB_MAINNET"] = "bnb_mainnet";
    Network["BNB_TESTNET"] = "bnb_testnet";
    Network["BSC_MAINNET"] = "bsc_mainnet";
    Network["BSC_TESTNET"] = "bsc_testnet";
    Network["ARBITRUM_ONE"] = "arbitrum_one";
    Network["ARBITRUM_NOVA"] = "arbitrum_nova";
    Network["AVALANCHE_FUJI_C"] = "avalanche_fuji_c";
    Network["AVALANCHE_FUJI_P"] = "avalanche_fuji_p";
    Network["AVALANCHE_FUJI_X"] = "avalanche_fuji_x";
    Network["BLAST_MAINNET"] = "blast_mainnet";
    Network["OPBNB_MAINNET"] = "opbnb_mainnet";
    Network["OPBNB_TESTNET"] = "opbnb_testnet";
    Network["GNOSIS_MAINNET"] = "gnosis_mainnet";
    Network["GNOSIS_CHIADO"] = "gnosis_chiado";
    Network["PULSECHAIN_MAINNET"] = "pulsechain_mainnet";
    Network["PULSECHAIN_TESTNET"] = "pulsechain_testnet";
    Network["KAVA_MAINNET"] = "kava_mainnet";
    Network["CRONOS_MAINNET"] = "cronos_mainnet";
    Network["MANTLE_MAINNET"] = "mantle_mainnet";
    Network["CHILIZ_MAINNET"] = "chiliz_mainnet";
    Network["CHILIZ_SPICY"] = "chiliz_spicy";
    Network["MOONBEAM_MAINNET"] = "moonbeam_mainnet";
    Network["TAIKO_MAINNET"] = "taiko_mainnet";
    Network["TAIKO_HEKLA"] = "taiko_hekla";
    Network["LINEA_MAINNET"] = "linea_mainnet";
    Network["LINEA_SEPOLIA"] = "linea_sepolia";
    Network["BAHAMUT_MAINNET"] = "bahamut_mainnet";
    Network["SCROLL_MAINNET"] = "scroll_mainnet";
    Network["SCROLL_SEPOLIA"] = "scroll_sepolia";
    Network["TRON_MAINNET"] = "tron_mainnet";
    Network["SYSCOIN_MAINNET"] = "syscoin_mainnet";
    Network["SYSCOIN_TANENBAUM"] = "syscoin_tanenbaum";
    Network["MOONRIVER_MAINNET"] = "moonriver_mainnet";
    Network["HAQQ_MAINNET"] = "haqq_mainnet";
    Network["EVMOS_MAINNET"] = "evmos_mainnet";
    Network["EVMOS_TESTNET"] = "evmos_testnet";
    Network["BERACHAIN_TESTNET"] = "berachain_testnet";
})(Network || (Network = {}));
//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/web3-rpc-providers/lib/esm/web3_provider.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-rpc-providers/lib/esm/web3_provider.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Web3ExternalProvider: () => (/* binding */ Web3ExternalProvider)
/* harmony export */ });
/* harmony import */ var web3_providers_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-providers-http */ "./node_modules/web3-providers-http/lib/esm/index.js");
/* harmony import */ var web3_providers_ws__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-providers-ws */ "./node_modules/web3-providers-ws/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types.js */ "./node_modules/web3-rpc-providers/lib/esm/types.js");
/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./errors.js */ "./node_modules/web3-rpc-providers/lib/esm/errors.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};





/*
This class can be used to create new providers only when there is custom logic required in each Request method like
checking specific HTTP status codes and performing any action, throwing new error types or setting additional HTTP headers in requests, or even modifying requests.

Another simpler approach can be a function simply returning URL strings instead of using the following class in case if
no additional logic implementation is required in the provider.
*/
class Web3ExternalProvider extends web3_utils__WEBPACK_IMPORTED_MODULE_2__.Eip1193Provider {
    constructor(network, transport, token, host, providerConfigOptions) {
        super();
        if (providerConfigOptions !== undefined &&
            transport === _types_js__WEBPACK_IMPORTED_MODULE_3__.Transport.HTTPS &&
            !('providerOptions' in providerConfigOptions)) {
            throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.ProviderConfigOptionsError('HTTP Provider');
        }
        else if (providerConfigOptions !== undefined &&
            transport === _types_js__WEBPACK_IMPORTED_MODULE_3__.Transport.WebSocket &&
            !('socketOptions' in providerConfigOptions ||
                'reconnectOptions' in providerConfigOptions)) {
            throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.ProviderConfigOptionsError('Websocket Provider');
        }
        this.transport = transport;
        if (transport === _types_js__WEBPACK_IMPORTED_MODULE_3__.Transport.HTTPS) {
            this.provider = new web3_providers_http__WEBPACK_IMPORTED_MODULE_0__["default"](this.getRPCURL(network, transport, token, host), providerConfigOptions);
        }
        else if (transport === _types_js__WEBPACK_IMPORTED_MODULE_3__.Transport.WebSocket) {
            this.provider = new web3_providers_ws__WEBPACK_IMPORTED_MODULE_1__["default"](this.getRPCURL(network, transport, token, host), providerConfigOptions === null || providerConfigOptions === void 0 ? void 0 : providerConfigOptions.socketOptions, providerConfigOptions === null || providerConfigOptions === void 0 ? void 0 : providerConfigOptions.reconnectOptions);
        }
    }
    request(payload, requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.transport === _types_js__WEBPACK_IMPORTED_MODULE_3__.Transport.HTTPS) {
                return (yield this.provider.request(payload, requestOptions));
            }
            return this.provider.request(payload);
        });
    }
    getStatus() {
        return this.provider.getStatus();
    }
    supportsSubscriptions() {
        return this.provider.supportsSubscriptions();
    }
    once(_type, _listener) {
        var _a;
        if ((_a = this.provider) === null || _a === void 0 ? void 0 : _a.once) {
            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
            this.provider.once(_type, _listener);
        }
    }
    removeAllListeners(_type) {
        var _a;
        if ((_a = this.provider) === null || _a === void 0 ? void 0 : _a.removeAllListeners)
            this.provider.removeAllListeners(_type);
    }
    connect() {
        var _a;
        if ((_a = this.provider) === null || _a === void 0 ? void 0 : _a.connect)
            this.provider.connect();
    }
    disconnect(_code, _data) {
        var _a;
        if ((_a = this.provider) === null || _a === void 0 ? void 0 : _a.disconnect)
            this.provider.disconnect(_code, _data);
    }
    reset() {
        var _a;
        if ((_a = this.provider) === null || _a === void 0 ? void 0 : _a.reset)
            this.provider.reset();
    }
    on(_type, _listener) {
        if (this.provider)
            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
            this.provider.on(_type, _listener);
    }
    removeListener(_type, _listener) {
        if (this.provider)
            this.provider.removeListener(_type, _listener);
    }
}
//# sourceMappingURL=web3_provider.js.map

/***/ }),

/***/ "./node_modules/web3-rpc-providers/lib/esm/web3_provider_publicnode.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/web3-rpc-providers/lib/esm/web3_provider_publicnode.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PublicNodeProvider: () => (/* binding */ PublicNodeProvider)
/* harmony export */ });
/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types.js */ "./node_modules/web3-rpc-providers/lib/esm/types.js");
/* harmony import */ var _web3_provider_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./web3_provider.js */ "./node_modules/web3-rpc-providers/lib/esm/web3_provider.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/


const isValid = (str) => str !== undefined && str.trim().length > 0;
const websocketExclusions = [
    _types_js__WEBPACK_IMPORTED_MODULE_0__.Network.DYMENSION_MAINNET,
    _types_js__WEBPACK_IMPORTED_MODULE_0__.Network.DYMENSION_TESTNET,
    _types_js__WEBPACK_IMPORTED_MODULE_0__.Network.KAVA_MAINNET,
    _types_js__WEBPACK_IMPORTED_MODULE_0__.Network.CRONOS_MAINNET,
    // deprecated
    _types_js__WEBPACK_IMPORTED_MODULE_0__.Network.POLYGON_MAINNET,
];
class PublicNodeProvider extends _web3_provider_js__WEBPACK_IMPORTED_MODULE_1__.Web3ExternalProvider {
    // eslint-disable-next-line default-param-last
    constructor(network = _types_js__WEBPACK_IMPORTED_MODULE_0__.Network.ETH_MAINNET, transport = _types_js__WEBPACK_IMPORTED_MODULE_0__.Transport.HTTPS, host = '', providerConfigOptions) {
        super(network, transport, '', host, providerConfigOptions);
    }
    // eslint-disable-next-line class-methods-use-this
    getRPCURL(network, transport, _, _host) {
        if (!PublicNodeProvider.networkHostMap[network]) {
            throw new Error('Network info not avalible.');
        }
        const defaultHost = `${PublicNodeProvider.networkHostMap[network]}.publicnode.com`;
        const host = isValid(_host) ? _host : defaultHost;
        if (websocketExclusions.includes(network) && transport === _types_js__WEBPACK_IMPORTED_MODULE_0__.Transport.WebSocket) {
            return `${transport}://${host}/websocket`;
        }
        return `${transport}://${host}`;
    }
}
PublicNodeProvider.networkHostMap = {
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.POLYGON_AMOY]: 'polygon-amoy-bor-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.DYMENSION_MAINNET]: 'dymension-evm-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.DYMENSION_TESTNET]: 'dymension-testnet-evm-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.BLAST_MAINNET]: 'blast-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.GNOSIS_MAINNET]: 'gnosis-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.PULSECHAIN_MAINNET]: 'pulsechain-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.PULSECHAIN_TESTNET]: 'pulsechain-testnet-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.KAVA_MAINNET]: 'kava-evm-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.CRONOS_MAINNET]: 'cronos-evm-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.MANTLE_MAINNET]: 'mantle-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.TAIKO_MAINNET]: 'taiko-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.TAIKO_HEKLA]: 'taiko-hekla-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.LINEA_MAINNET]: 'linea-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.LINEA_SEPOLIA]: 'linea-sepolia-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.SCROLL_MAINNET]: 'scroll-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.SCROLL_SEPOLIA]: 'scroll-sepolia-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.SYSCOIN_MAINNET]: 'syscoin-evm-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.SYSCOIN_TANENBAUM]: 'syscoin-tanenbaum-evm-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.HAQQ_MAINNET]: 'haqq-evm-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.EVMOS_MAINNET]: 'evmos-evm-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.EVMOS_TESTNET]: 'evmos-testnet-evm-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.BERACHAIN_TESTNET]: 'berachain-testnet-evm-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.ETH_MAINNET]: 'ethereum-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.ETH_SEPOLIA]: 'ethereum-sepolia-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.ETH_HOLESKY]: 'ethereum-holesky-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.BSC_MAINNET]: 'bsc-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.BSC_TESTNET]: 'bsc-testnet-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.POLYGON_MAINNET]: 'polygon-bor-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.BASE_MAINNET]: 'base-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.BASE_SEPOLIA]: 'base-sepolia-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.ARBITRUM_ONE]: 'arbitrum-one-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.ARBITRUM_NOVA]: 'arbitrum-nova-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.ARBITRUM_SEPOLIA]: 'arbitrum-sepolia-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.AVALANCHE_C_MAINNET]: 'avalanche-c-chain-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.AVALANCHE_P_MAINNET]: 'avalanche-p-chain-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.AVALANCHE_X_MAINNET]: 'avalanche-x-chain-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.AVALANCHE_FUJI_C]: 'avalanche-fuji-c-chain-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.AVALANCHE_FUJI_P]: 'avalanche-fuji-p-chain-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.AVALANCHE_FUJI_X]: 'avalanche-fuji-x-chain-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.OPTIMISM_MAINNET]: 'optimism-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.OPTIMISM_SEPOLIA]: 'optimism-sepolia-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.FANTOM_MAINNET]: 'fantom-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.FANTOM_TESTNET]: 'fantom-testnet-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.OPBNB_MAINNET]: 'opbnb-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.OPBNB_TESTNET]: 'opbnb-testnet-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.GNOSIS_CHIADO]: 'gnosis-chiado-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.CHILIZ_MAINNET]: 'chiliz-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.CHILIZ_SPICY]: 'chiliz-spicy-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.MOONBEAM_MAINNET]: 'moonbeam-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.BAHAMUT_MAINNET]: 'bahamut-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.TRON_MAINNET]: 'tron-evm-rpc',
    [_types_js__WEBPACK_IMPORTED_MODULE_0__.Network.MOONRIVER_MAINNET]: 'moonriver-rpc',
};
//# sourceMappingURL=web3_provider_publicnode.js.map

/***/ }),

/***/ "./node_modules/web3-rpc-providers/lib/esm/web3_provider_quicknode.js":
/*!****************************************************************************!*\
  !*** ./node_modules/web3-rpc-providers/lib/esm/web3_provider_quicknode.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   QuickNodeProvider: () => (/* binding */ QuickNodeProvider)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types.js */ "./node_modules/web3-rpc-providers/lib/esm/types.js");
/* harmony import */ var _web3_provider_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./web3_provider.js */ "./node_modules/web3-rpc-providers/lib/esm/web3_provider.js");
/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors.js */ "./node_modules/web3-rpc-providers/lib/esm/errors.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




const isValid = (str) => str !== undefined && str.trim().length > 0;
class QuickNodeProvider extends _web3_provider_js__WEBPACK_IMPORTED_MODULE_2__.Web3ExternalProvider {
    // eslint-disable-next-line default-param-last
    constructor(network = _types_js__WEBPACK_IMPORTED_MODULE_1__.Network.ETH_MAINNET, transport = _types_js__WEBPACK_IMPORTED_MODULE_1__.Transport.HTTPS, token = '', host = '', providerConfigOptions) {
        super(network, transport, token, host, providerConfigOptions);
    }
    request(payload, requestOptions) {
        const _super = Object.create(null, {
            request: { get: () => super.request }
        });
        return __awaiter(this, void 0, void 0, function* () {
            try {
                return yield _super.request.call(this, payload, requestOptions);
            }
            catch (error) {
                if (error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_0__.ResponseError && error.statusCode === 429) {
                    throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.QuickNodeRateLimitError(error);
                }
                throw error;
            }
        });
    }
    // eslint-disable-next-line class-methods-use-this
    getRPCURL(network, transport, _token, _host) {
        let host = '';
        let token = '';
        switch (network) {
            case _types_js__WEBPACK_IMPORTED_MODULE_1__.Network.ETH_MAINNET:
                host = isValid(_host) ? _host : 'powerful-holy-bush.quiknode.pro';
                token = isValid(_token) ? _token : '3240624a343867035925ff7561eb60dfdba2a668';
                break;
            case _types_js__WEBPACK_IMPORTED_MODULE_1__.Network.ETH_SEPOLIA:
                host = isValid(_host)
                    ? _host
                    : 'dimensional-fabled-glitter.ethereum-sepolia.quiknode.pro';
                token = isValid(_token) ? _token : '382a3b5a4b938f2d6e8686c19af4b22921fde2cd';
                break;
            case _types_js__WEBPACK_IMPORTED_MODULE_1__.Network.ETH_HOLESKY:
                host = isValid(_host) ? _host : 'yolo-morning-card.ethereum-holesky.quiknode.pro';
                token = isValid(_token) ? _token : '481ebe70638c4dcf176af617a16d02ab866b9af9';
                break;
            case _types_js__WEBPACK_IMPORTED_MODULE_1__.Network.ARBITRUM_MAINNET:
                host = isValid(_host)
                    ? _host
                    : 'autumn-divine-dinghy.arbitrum-mainnet.quiknode.pro';
                token = isValid(_token) ? _token : 'a5d7bfbf60b5ae9ce3628e53d69ef50d529e9a8c';
                break;
            case _types_js__WEBPACK_IMPORTED_MODULE_1__.Network.ARBITRUM_SEPOLIA:
                host = isValid(_host) ? _host : 'few-patient-pond.arbitrum-sepolia.quiknode.pro';
                token = isValid(_token) ? _token : '3be985450970628c860b959c65cd2642dcafe53c';
                break;
            case _types_js__WEBPACK_IMPORTED_MODULE_1__.Network.BNB_MAINNET:
                host = isValid(_host) ? _host : 'purple-empty-reel.bsc.quiknode.pro';
                token = isValid(_token) ? _token : 'ebf6c532961e21f092ff2facce1ec4c89c540158';
                break;
            case _types_js__WEBPACK_IMPORTED_MODULE_1__.Network.BNB_TESTNET:
                host = isValid(_host) ? _host : 'floral-rough-scion.bsc-testnet.quiknode.pro';
                token = isValid(_token) ? _token : '5b297e5acff5f81f4c37ebf6f235f7299b6f9d28';
                break;
            case _types_js__WEBPACK_IMPORTED_MODULE_1__.Network.POLYGON_MAINNET:
                host = isValid(_host) ? _host : 'small-chaotic-moon.matic.quiknode.pro';
                token = isValid(_token) ? _token : '847569f8a017e84d985e10d0f44365d965a951f1';
                break;
            case _types_js__WEBPACK_IMPORTED_MODULE_1__.Network.POLYGON_AMOY:
                host = isValid(_host) ? _host : 'prettiest-side-shape.matic-amoy.quiknode.pro';
                token = isValid(_token) ? _token : '79a9476eea661d4f82de614db1d8a895b14b881c';
                break;
            default:
                throw new Error('Network info not avalible.');
        }
        return `${transport}://${host}/${token}`;
    }
}
//# sourceMappingURL=web3_provider_quicknode.js.map

/***/ }),

/***/ "./node_modules/web3-types/lib/esm/apis/eth_execution_api.js":
/*!*******************************************************************!*\
  !*** ./node_modules/web3-types/lib/esm/apis/eth_execution_api.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=eth_execution_api.js.map

/***/ }),

/***/ "./node_modules/web3-types/lib/esm/apis/eth_personal_api.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-types/lib/esm/apis/eth_personal_api.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=eth_personal_api.js.map

/***/ }),

/***/ "./node_modules/web3-types/lib/esm/apis/web3_eth_execution_api.js":
/*!************************************************************************!*\
  !*** ./node_modules/web3-types/lib/esm/apis/web3_eth_execution_api.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=web3_eth_execution_api.js.map

/***/ }),

/***/ "./node_modules/web3-types/lib/esm/apis/web3_net_api.js":
/*!**************************************************************!*\
  !*** ./node_modules/web3-types/lib/esm/apis/web3_net_api.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=web3_net_api.js.map

/***/ }),

/***/ "./node_modules/web3-types/lib/esm/data_format_types.js":
/*!**************************************************************!*\
  !*** ./node_modules/web3-types/lib/esm/data_format_types.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DEFAULT_RETURN_FORMAT: () => (/* binding */ DEFAULT_RETURN_FORMAT),
/* harmony export */   ETH_DATA_FORMAT: () => (/* binding */ ETH_DATA_FORMAT),
/* harmony export */   FMT_BYTES: () => (/* binding */ FMT_BYTES),
/* harmony export */   FMT_NUMBER: () => (/* binding */ FMT_NUMBER)
/* harmony export */ });
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var FMT_NUMBER;
(function (FMT_NUMBER) {
    FMT_NUMBER["NUMBER"] = "NUMBER_NUMBER";
    FMT_NUMBER["HEX"] = "NUMBER_HEX";
    FMT_NUMBER["STR"] = "NUMBER_STR";
    FMT_NUMBER["BIGINT"] = "NUMBER_BIGINT";
})(FMT_NUMBER || (FMT_NUMBER = {}));
var FMT_BYTES;
(function (FMT_BYTES) {
    FMT_BYTES["HEX"] = "BYTES_HEX";
    FMT_BYTES["UINT8ARRAY"] = "BYTES_UINT8ARRAY";
})(FMT_BYTES || (FMT_BYTES = {}));
const DEFAULT_RETURN_FORMAT = {
    number: FMT_NUMBER.BIGINT,
    bytes: FMT_BYTES.HEX,
};
const ETH_DATA_FORMAT = { number: FMT_NUMBER.HEX, bytes: FMT_BYTES.HEX };
//# sourceMappingURL=data_format_types.js.map

/***/ }),

/***/ "./node_modules/web3-types/lib/esm/error_types.js":
/*!********************************************************!*\
  !*** ./node_modules/web3-types/lib/esm/error_types.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

//# sourceMappingURL=error_types.js.map

/***/ }),

/***/ "./node_modules/web3-types/lib/esm/eth_abi_types.js":
/*!**********************************************************!*\
  !*** ./node_modules/web3-types/lib/esm/eth_abi_types.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

//# sourceMappingURL=eth_abi_types.js.map

/***/ }),

/***/ "./node_modules/web3-types/lib/esm/eth_contract_types.js":
/*!***************************************************************!*\
  !*** ./node_modules/web3-types/lib/esm/eth_contract_types.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

//# sourceMappingURL=eth_contract_types.js.map

/***/ }),

/***/ "./node_modules/web3-types/lib/esm/eth_types.js":
/*!******************************************************!*\
  !*** ./node_modules/web3-types/lib/esm/eth_types.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BlockTags: () => (/* binding */ BlockTags),
/* harmony export */   HardforksOrdered: () => (/* binding */ HardforksOrdered)
/* harmony export */ });
var BlockTags;
(function (BlockTags) {
    BlockTags["EARLIEST"] = "earliest";
    BlockTags["LATEST"] = "latest";
    BlockTags["PENDING"] = "pending";
    BlockTags["SAFE"] = "safe";
    BlockTags["FINALIZED"] = "finalized";
    BlockTags["COMMITTED"] = "committed";
})(BlockTags || (BlockTags = {}));
// This list of hardforks is expected to be in order
// keep this in mind when making changes to it
var HardforksOrdered;
(function (HardforksOrdered) {
    HardforksOrdered["chainstart"] = "chainstart";
    HardforksOrdered["frontier"] = "frontier";
    HardforksOrdered["homestead"] = "homestead";
    HardforksOrdered["dao"] = "dao";
    HardforksOrdered["tangerineWhistle"] = "tangerineWhistle";
    HardforksOrdered["spuriousDragon"] = "spuriousDragon";
    HardforksOrdered["byzantium"] = "byzantium";
    HardforksOrdered["constantinople"] = "constantinople";
    HardforksOrdered["petersburg"] = "petersburg";
    HardforksOrdered["istanbul"] = "istanbul";
    HardforksOrdered["muirGlacier"] = "muirGlacier";
    HardforksOrdered["berlin"] = "berlin";
    HardforksOrdered["london"] = "london";
    HardforksOrdered["altair"] = "altair";
    HardforksOrdered["arrowGlacier"] = "arrowGlacier";
    HardforksOrdered["grayGlacier"] = "grayGlacier";
    HardforksOrdered["bellatrix"] = "bellatrix";
    HardforksOrdered["merge"] = "merge";
    HardforksOrdered["capella"] = "capella";
    HardforksOrdered["shanghai"] = "shanghai";
})(HardforksOrdered || (HardforksOrdered = {}));
//# sourceMappingURL=eth_types.js.map

/***/ }),

/***/ "./node_modules/web3-types/lib/esm/index.js":
/*!**************************************************!*\
  !*** ./node_modules/web3-types/lib/esm/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BlockTags: () => (/* reexport safe */ _eth_types_js__WEBPACK_IMPORTED_MODULE_6__.BlockTags),
/* harmony export */   DEFAULT_RETURN_FORMAT: () => (/* reexport safe */ _data_format_types_js__WEBPACK_IMPORTED_MODULE_5__.DEFAULT_RETURN_FORMAT),
/* harmony export */   ETH_DATA_FORMAT: () => (/* reexport safe */ _data_format_types_js__WEBPACK_IMPORTED_MODULE_5__.ETH_DATA_FORMAT),
/* harmony export */   FMT_BYTES: () => (/* reexport safe */ _data_format_types_js__WEBPACK_IMPORTED_MODULE_5__.FMT_BYTES),
/* harmony export */   FMT_NUMBER: () => (/* reexport safe */ _data_format_types_js__WEBPACK_IMPORTED_MODULE_5__.FMT_NUMBER),
/* harmony export */   HardforksOrdered: () => (/* reexport safe */ _eth_types_js__WEBPACK_IMPORTED_MODULE_6__.HardforksOrdered),
/* harmony export */   TypedArray: () => (/* reexport safe */ _primitives_types_js__WEBPACK_IMPORTED_MODULE_10__.TypedArray),
/* harmony export */   Web3BaseProvider: () => (/* reexport safe */ _web3_base_provider_js__WEBPACK_IMPORTED_MODULE_13__.Web3BaseProvider),
/* harmony export */   Web3BaseWallet: () => (/* reexport safe */ _web3_base_wallet_js__WEBPACK_IMPORTED_MODULE_14__.Web3BaseWallet)
/* harmony export */ });
/* harmony import */ var _error_types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error_types.js */ "./node_modules/web3-types/lib/esm/error_types.js");
/* harmony import */ var _apis_eth_execution_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./apis/eth_execution_api.js */ "./node_modules/web3-types/lib/esm/apis/eth_execution_api.js");
/* harmony import */ var _apis_web3_eth_execution_api_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./apis/web3_eth_execution_api.js */ "./node_modules/web3-types/lib/esm/apis/web3_eth_execution_api.js");
/* harmony import */ var _apis_web3_net_api_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./apis/web3_net_api.js */ "./node_modules/web3-types/lib/esm/apis/web3_net_api.js");
/* harmony import */ var _apis_eth_personal_api_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./apis/eth_personal_api.js */ "./node_modules/web3-types/lib/esm/apis/eth_personal_api.js");
/* harmony import */ var _data_format_types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./data_format_types.js */ "./node_modules/web3-types/lib/esm/data_format_types.js");
/* harmony import */ var _eth_types_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./eth_types.js */ "./node_modules/web3-types/lib/esm/eth_types.js");
/* harmony import */ var _eth_abi_types_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./eth_abi_types.js */ "./node_modules/web3-types/lib/esm/eth_abi_types.js");
/* harmony import */ var _eth_contract_types_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./eth_contract_types.js */ "./node_modules/web3-types/lib/esm/eth_contract_types.js");
/* harmony import */ var _json_rpc_types_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./json_rpc_types.js */ "./node_modules/web3-types/lib/esm/json_rpc_types.js");
/* harmony import */ var _primitives_types_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./primitives_types.js */ "./node_modules/web3-types/lib/esm/primitives_types.js");
/* harmony import */ var _utility_types_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utility_types.js */ "./node_modules/web3-types/lib/esm/utility_types.js");
/* harmony import */ var _web3_api_types_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./web3_api_types.js */ "./node_modules/web3-types/lib/esm/web3_api_types.js");
/* harmony import */ var _web3_base_provider_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./web3_base_provider.js */ "./node_modules/web3-types/lib/esm/web3_base_provider.js");
/* harmony import */ var _web3_base_wallet_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./web3_base_wallet.js */ "./node_modules/web3-types/lib/esm/web3_base_wallet.js");
/* harmony import */ var _web3_deferred_promise_type_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./web3_deferred_promise_type.js */ "./node_modules/web3-types/lib/esm/web3_deferred_promise_type.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
















//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/web3-types/lib/esm/json_rpc_types.js":
/*!***********************************************************!*\
  !*** ./node_modules/web3-types/lib/esm/json_rpc_types.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=json_rpc_types.js.map

/***/ }),

/***/ "./node_modules/web3-types/lib/esm/primitives_types.js":
/*!*************************************************************!*\
  !*** ./node_modules/web3-types/lib/esm/primitives_types.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TypedArray: () => (/* binding */ TypedArray)
/* harmony export */ });
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
const TypedArray = Object.getPrototypeOf(Uint8Array);
//# sourceMappingURL=primitives_types.js.map

/***/ }),

/***/ "./node_modules/web3-types/lib/esm/utility_types.js":
/*!**********************************************************!*\
  !*** ./node_modules/web3-types/lib/esm/utility_types.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

//# sourceMappingURL=utility_types.js.map

/***/ }),

/***/ "./node_modules/web3-types/lib/esm/web3_api_types.js":
/*!***********************************************************!*\
  !*** ./node_modules/web3-types/lib/esm/web3_api_types.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

//# sourceMappingURL=web3_api_types.js.map

/***/ }),

/***/ "./node_modules/web3-types/lib/esm/web3_base_provider.js":
/*!***************************************************************!*\
  !*** ./node_modules/web3-types/lib/esm/web3_base_provider.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Web3BaseProvider: () => (/* binding */ Web3BaseProvider)
/* harmony export */ });
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const symbol = Symbol.for('web3/base-provider');
// Provider interface compatible with EIP-1193
// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md
class Web3BaseProvider {
    static isWeb3Provider(provider) {
        return (provider instanceof Web3BaseProvider ||
            Boolean(provider && provider[symbol]));
    }
    // To match an object "instanceof" does not work if
    // matcher class and object is using different package versions
    // to overcome this bottleneck used this approach.
    // The symbol value for one string will always remain same regardless of package versions
    // eslint-disable-next-line class-methods-use-this
    get [symbol]() {
        return true;
    }
    /**
     * @deprecated Please use `.request` instead.
     * @param payload - Request Payload
     * @param callback - Callback
     */
    send(payload, 
    // eslint-disable-next-line @typescript-eslint/ban-types
    callback) {
        this.request(payload)
            .then(response => {
            // eslint-disable-next-line no-null/no-null
            callback(null, response);
        })
            .catch((err) => {
            callback(err);
        });
    }
    /**
     * @deprecated Please use `.request` instead.
     * @param payload - Request Payload
     */
    sendAsync(payload) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request(payload);
        });
    }
    /**
     * Modify the return type of the request method to be fully compatible with EIP-1193
     *
     * [deprecated] In the future major releases (\>= v5) all providers are supposed to be fully compatible with EIP-1193.
     * So this method will not be needed and would not be available in the future.
     *
     * @returns A new instance of the provider with the request method fully compatible with EIP-1193
     *
     * @example
     * ```ts
     * const provider = new Web3HttpProvider('http://localhost:8545');
     * const fullyCompatibleProvider = provider.asEIP1193Provider();
     * const result = await fullyCompatibleProvider.request({ method: 'eth_getBalance' });
     * console.log(result); // '0x0234c8a3397aab58' or something like that
     * ```
     */
    asEIP1193Provider() {
        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
        const newObj = Object.create(this);
        // eslint-disable-next-line @typescript-eslint/unbound-method
        const originalRequest = newObj.request;
        newObj.request = function request(args) {
            return __awaiter(this, void 0, void 0, function* () {
                // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion
                const response = (yield originalRequest(args));
                return response.result;
            });
        };
        // @ts-expect-error the property should not be available in the new object because of using Object.create(this).
        //	But it is available if we do not delete it.
        newObj.asEIP1193Provider = undefined; // to prevent the user for calling this method again
        return newObj;
    }
}
//# sourceMappingURL=web3_base_provider.js.map

/***/ }),

/***/ "./node_modules/web3-types/lib/esm/web3_base_wallet.js":
/*!*************************************************************!*\
  !*** ./node_modules/web3-types/lib/esm/web3_base_wallet.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Web3BaseWallet: () => (/* binding */ Web3BaseWallet)
/* harmony export */ });
class Web3BaseWallet extends Array {
    constructor(accountProvider) {
        super();
        this._accountProvider = accountProvider;
    }
}
//# sourceMappingURL=web3_base_wallet.js.map

/***/ }),

/***/ "./node_modules/web3-types/lib/esm/web3_deferred_promise_type.js":
/*!***********************************************************************!*\
  !*** ./node_modules/web3-types/lib/esm/web3_deferred_promise_type.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

//# sourceMappingURL=web3_deferred_promise_type.js.map

/***/ }),

/***/ "./node_modules/web3-utils/lib/esm/chunk_response_parser.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/chunk_response_parser.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChunkResponseParser: () => (/* binding */ ChunkResponseParser)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");

class ChunkResponseParser {
    constructor(eventEmitter, autoReconnect) {
        this.eventEmitter = eventEmitter;
        this.autoReconnect = autoReconnect;
        this.chunkTimeout = 1000 * 15;
    }
    clearQueues() {
        if (typeof this._clearQueues === 'function') {
            this._clearQueues();
        }
    }
    onError(clearQueues) {
        this._clearQueues = clearQueues;
    }
    parseResponse(data) {
        const returnValues = [];
        // DE-CHUNKER
        const dechunkedData = data
            .replace(/\}[\n\r]?\{/g, '}|--|{') // }{
            .replace(/\}\][\n\r]?\[\{/g, '}]|--|[{') // }][{
            .replace(/\}[\n\r]?\[\{/g, '}|--|[{') // }[{
            .replace(/\}\][\n\r]?\{/g, '}]|--|{') // }]{
            .split('|--|');
        dechunkedData.forEach(_chunkData => {
            // prepend the last chunk
            let chunkData = _chunkData;
            if (this.lastChunk) {
                chunkData = this.lastChunk + chunkData;
            }
            let result;
            try {
                result = JSON.parse(chunkData);
            }
            catch (e) {
                this.lastChunk = chunkData;
                // start timeout to cancel all requests
                if (this.lastChunkTimeout) {
                    clearTimeout(this.lastChunkTimeout);
                }
                this.lastChunkTimeout = setTimeout(() => {
                    if (this.autoReconnect)
                        return;
                    this.clearQueues();
                    this.eventEmitter.emit('error', new web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidResponseError({
                        id: 1,
                        jsonrpc: '2.0',
                        error: { code: 2, message: 'Chunk timeout' },
                    }));
                }, this.chunkTimeout);
                return;
            }
            // cancel timeout and set chunk to null
            clearTimeout(this.lastChunkTimeout);
            this.lastChunk = undefined;
            if (result)
                returnValues.push(result);
        });
        return returnValues;
    }
}
//# sourceMappingURL=chunk_response_parser.js.map

/***/ }),

/***/ "./node_modules/web3-utils/lib/esm/converters.js":
/*!*******************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/converters.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   asciiToHex: () => (/* binding */ asciiToHex),
/* harmony export */   bytesToHex: () => (/* binding */ bytesToHex),
/* harmony export */   bytesToUint8Array: () => (/* binding */ bytesToUint8Array),
/* harmony export */   ethUnitMap: () => (/* binding */ ethUnitMap),
/* harmony export */   fromAscii: () => (/* binding */ fromAscii),
/* harmony export */   fromDecimal: () => (/* binding */ fromDecimal),
/* harmony export */   fromUtf8: () => (/* binding */ fromUtf8),
/* harmony export */   fromWei: () => (/* binding */ fromWei),
/* harmony export */   hexToAscii: () => (/* binding */ hexToAscii),
/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),
/* harmony export */   hexToNumber: () => (/* binding */ hexToNumber),
/* harmony export */   hexToNumberString: () => (/* binding */ hexToNumberString),
/* harmony export */   hexToString: () => (/* binding */ hexToString),
/* harmony export */   hexToUtf8: () => (/* binding */ hexToUtf8),
/* harmony export */   numberToHex: () => (/* binding */ numberToHex),
/* harmony export */   stringToHex: () => (/* binding */ stringToHex),
/* harmony export */   toAscii: () => (/* binding */ toAscii),
/* harmony export */   toBigInt: () => (/* binding */ toBigInt),
/* harmony export */   toBool: () => (/* binding */ toBool),
/* harmony export */   toChecksumAddress: () => (/* binding */ toChecksumAddress),
/* harmony export */   toDecimal: () => (/* binding */ toDecimal),
/* harmony export */   toHex: () => (/* binding */ toHex),
/* harmony export */   toNumber: () => (/* binding */ toNumber),
/* harmony export */   toUtf8: () => (/* binding */ toUtf8),
/* harmony export */   toWei: () => (/* binding */ toWei),
/* harmony export */   utf8ToBytes: () => (/* binding */ utf8ToBytes),
/* harmony export */   utf8ToHex: () => (/* binding */ utf8ToHex)
/* harmony export */ });
/* harmony import */ var ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/keccak.js */ "./node_modules/web3-utils/node_modules/ethereum-cryptography/esm/keccak.js");
/* harmony import */ var ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethereum-cryptography/utils.js */ "./node_modules/web3-utils/node_modules/ethereum-cryptography/esm/utils.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var _uint8array_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./uint8array.js */ "./node_modules/web3-utils/lib/esm/uint8array.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * @module Utils
 */





// Ref: https://ethdocs.org/en/latest/ether.html
// Note: this could be simplified using ** operator, but babel does not handle it well (https://github.com/babel/babel/issues/13109)
/** @internal */
const ethUnitMap = {
    noether: BigInt(0),
    wei: BigInt(1),
    kwei: BigInt(1000),
    Kwei: BigInt(1000),
    babbage: BigInt(1000),
    femtoether: BigInt(1000),
    mwei: BigInt(1000000),
    Mwei: BigInt(1000000),
    lovelace: BigInt(1000000),
    picoether: BigInt(1000000),
    gwei: BigInt(1000000000),
    Gwei: BigInt(1000000000),
    shannon: BigInt(1000000000),
    nanoether: BigInt(1000000000),
    nano: BigInt(1000000000),
    szabo: BigInt(1000000000000),
    microether: BigInt(1000000000000),
    micro: BigInt(1000000000000),
    finney: BigInt(1000000000000000),
    milliether: BigInt(1000000000000000),
    milli: BigInt(1000000000000000),
    ether: BigInt('1000000000000000000'),
    kether: BigInt('1000000000000000000000'),
    grand: BigInt('1000000000000000000000'),
    mether: BigInt('1000000000000000000000000'),
    gether: BigInt('1000000000000000000000000000'),
    tether: BigInt('1000000000000000000000000000000'),
};
const PrecisionLossWarning = 'Warning: Using type `number` with values that are large or contain many decimals may cause loss of precision, it is recommended to use type `string` or `BigInt` when using conversion methods';
/**
 * Convert a value from bytes to Uint8Array
 * @param data - Data to be converted
 * @returns - The Uint8Array representation of the input data
 *
 * @example
 * ```ts
 * console.log(web3.utils.bytesToUint8Array("0xab")));
 * > Uint8Array(1) [ 171 ]
 * ```
 */
const bytesToUint8Array = (data) => {
    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate(['bytes'], [data]);
    if ((0,_uint8array_js__WEBPACK_IMPORTED_MODULE_4__.isUint8Array)(data)) {
        return data;
    }
    if (Array.isArray(data)) {
        return new Uint8Array(data);
    }
    if (typeof data === 'string') {
        return web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.hexToUint8Array(data);
    }
    throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidBytesError(data);
};
/**
 * @internal
 */
const { uint8ArrayToHexString } = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils;
/**
 * Convert a byte array to a hex string
 * @param bytes - Byte array to be converted
 * @returns - The hex string representation of the input byte array
 *
 * @example
 * ```ts
 * console.log(web3.utils.bytesToHex(new Uint8Array([72, 12])));
 * > "0x480c"
 *
 */
const bytesToHex = (bytes) => uint8ArrayToHexString(bytesToUint8Array(bytes));
/**
 * Convert a hex string to a byte array
 * @param hex - Hex string to be converted
 * @returns - The byte array representation of the input hex string
 *
 * @example
 * ```ts
 * console.log(web3.utils.hexToBytes('0x74657374'));
 * > Uint8Array(4) [ 116, 101, 115, 116 ]
 * ```
 */
const hexToBytes = (bytes) => {
    if (typeof bytes === 'string' && bytes.slice(0, 2).toLowerCase() !== '0x') {
        return bytesToUint8Array(`0x${bytes}`);
    }
    return bytesToUint8Array(bytes);
};
/**
 * Converts value to it's number representation
 * @param value - Hex string to be converted
 * @returns - The number representation of the input value
 *
 * @example
 * ```ts
 * conoslle.log(web3.utils.hexToNumber('0xa'));
 * > 10
 * ```
 */
const hexToNumber = (value) => {
    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate(['hex'], [value]);
    // To avoid duplicate code and circular dependency we will
    // use `hexToNumber` implementation from `web3-validator`
    return web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.hexToNumber(value);
};
/**
 * Converts value to it's number representation @alias `hexToNumber`
 */
const toDecimal = hexToNumber;
/**
 * Converts value to it's hex representation
 * @param value - Value to be converted
 * @param hexstrict - Add padding to converted value if odd, to make it hexstrict
 * @returns - The hex representation of the input value
 *
 * @example
 * ```ts
 * console.log(web3.utils.numberToHex(10));
 * > "0xa"
 * ```
 */
const numberToHex = (value, hexstrict) => {
    if (typeof value !== 'bigint')
        web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate(['int'], [value]);
    // To avoid duplicate code and circular dependency we will
    // use `numberToHex` implementation from `web3-validator`
    let updatedValue = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.numberToHex(value);
    if (hexstrict) {
        if (!updatedValue.startsWith('-') && updatedValue.length % 2 === 1) {
            // To avoid duplicate a circular dependency we will not be using the padLeft method
            updatedValue = '0x0'.concat(updatedValue.slice(2));
        }
        else if (updatedValue.length % 2 === 0 && updatedValue.startsWith('-'))
            updatedValue = '-0x0'.concat(updatedValue.slice(3));
    }
    return updatedValue;
};
/**
 * Converts value to it's hex representation @alias `numberToHex`
 *
 */
const fromDecimal = numberToHex;
/**
 * Converts value to it's decimal representation in string
 * @param value - Hex string to be converted
 * @returns - The decimal representation of the input value
 *
 * @example
 * ```ts
 * console.log(web3.utils.hexToNumberString('0xa'));
 * > "10"
 * ```
 */
const hexToNumberString = (data) => hexToNumber(data).toString();
/**
 * Should be called to get hex representation (prefixed by 0x) of utf8 string
 * @param str - Utf8 string to be converted
 * @returns - The hex representation of the input string
 *
 * @example
 * ```ts
 * console.log(utf8ToHex('web3.js'));
 * > "0x776562332e6a73"
 * ```
 *
 */
const utf8ToHex = (str) => {
    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate(['string'], [str]);
    // To be compatible with 1.x trim null character
    // eslint-disable-next-line no-control-regex
    let strWithoutNullCharacter = str.replace(/^(?:\u0000)/, '');
    // eslint-disable-next-line no-control-regex
    strWithoutNullCharacter = strWithoutNullCharacter.replace(/(?:\u0000)$/, '');
    return bytesToHex(new TextEncoder().encode(strWithoutNullCharacter));
};
/**
 * @alias utf8ToHex
 */
const fromUtf8 = utf8ToHex;
/**
 * @alias utf8ToHex
 */
const stringToHex = utf8ToHex;
/**
 * Should be called to get utf8 from it's hex representation
 * @param str - Hex string to be converted
 * @returns - Utf8 string
 *
 * @example
 * ```ts
 * console.log(web3.utils.hexToUtf8('0x48656c6c6f20576f726c64'));
 * > Hello World
 * ```
 */
const hexToUtf8 = (str) => (0,ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.bytesToUtf8)(hexToBytes(str));
/**
 * @alias hexToUtf8
 */
const toUtf8 = (input) => {
    if (typeof input === 'string') {
        return hexToUtf8(input);
    }
    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate(['bytes'], [input]);
    return (0,ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.bytesToUtf8)(input);
};
const utf8ToBytes = ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes;
/**
 * @alias hexToUtf8
 */
const hexToString = hexToUtf8;
/**
 * Should be called to get hex representation (prefixed by 0x) of ascii string
 * @param str - String to be converted to hex
 * @returns - Hex string
 *
 * @example
 * ```ts
 * console.log(web3.utils.asciiToHex('Hello World'));
 * > 0x48656c6c6f20576f726c64
 * ```
 */
const asciiToHex = (str) => {
    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate(['string'], [str]);
    let hexString = '';
    for (let i = 0; i < str.length; i += 1) {
        const hexCharCode = str.charCodeAt(i).toString(16);
        // might need a leading 0
        hexString += hexCharCode.length % 2 !== 0 ? `0${hexCharCode}` : hexCharCode;
    }
    return `0x${hexString}`;
};
/**
 * @alias asciiToHex
 */
const fromAscii = asciiToHex;
/**
 * Should be called to get ascii from it's hex representation
 * @param str - Hex string to be converted to ascii
 * @returns - Ascii string
 *
 * @example
 * ```ts
 * console.log(web3.utils.hexToAscii('0x48656c6c6f20576f726c64'));
 * > Hello World
 * ```
 */
const hexToAscii = (str) => {
    const decoder = new TextDecoder('ascii');
    return decoder.decode(hexToBytes(str));
};
/**
 * @alias hexToAscii
 */
const toAscii = hexToAscii;
/**
 * Auto converts any given value into it's hex representation.
 * @param value - Value to be converted to hex
 * @param returnType - If true, it will return the type of the value
 *
 * @example
 * ```ts
 * console.log(web3.utils.toHex(10));
 * > 0xa
 *
 * console.log(web3.utils.toHex('0x123', true));
 * > bytes
 *```
 */
const toHex = (value, returnType) => {
    if (typeof value === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isAddress)(value)) {
        return returnType ? 'address' : `0x${value.toLowerCase().replace(/^0x/i, '')}`;
    }
    if (typeof value === 'boolean') {
        // eslint-disable-next-line no-nested-ternary
        return returnType ? 'bool' : value ? '0x01' : '0x00';
    }
    if (typeof value === 'number') {
        // eslint-disable-next-line no-nested-ternary
        return returnType ? (value < 0 ? 'int256' : 'uint256') : numberToHex(value);
    }
    if (typeof value === 'bigint') {
        return returnType ? 'bigint' : numberToHex(value);
    }
    if ((0,_uint8array_js__WEBPACK_IMPORTED_MODULE_4__.isUint8Array)(value)) {
        return returnType ? 'bytes' : bytesToHex(value);
    }
    if (typeof value === 'object' && !!value) {
        return returnType ? 'string' : utf8ToHex(JSON.stringify(value));
    }
    if (typeof value === 'string') {
        if (value.startsWith('-0x') || value.startsWith('-0X')) {
            return returnType ? 'int256' : numberToHex(value);
        }
        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHexStrict)(value)) {
            return returnType ? 'bytes' : value;
        }
        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHex)(value) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isInt)(value) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isUInt)(value)) {
            return returnType ? 'bytes' : `0x${value}`;
        }
        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHex)(value) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isInt)(value) && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isUInt)(value)) {
            // This condition seems problematic because meeting
            // both conditions `!isInt(value) && isUInt(value)` should be impossible.
            // But a value pass for those conditions: "101611154195520776335741463917853444671577865378275924493376429267637792638729"
            // Note that according to the docs: it is supposed to be treated as a string (https://docs.web3js.org/guides/web3_upgrade_guide/x/web3_utils_migration_guide#conversion-to-hex)
            // In short, the strange is that isInt(value) is false but isUInt(value) is true for the value above.
            // TODO: isUInt(value) should be investigated.
            // However, if `toHex('101611154195520776335741463917853444671577865378275924493376429267637792638729', true)` is called, it will return `true`.
            // But, if `toHex('101611154195520776335741463917853444671577865378275924493376429267637792638729')` is called, it will throw inside `numberToHex`.
            return returnType ? 'uint' : numberToHex(value);
        }
        if (!Number.isFinite(value)) {
            return returnType ? 'string' : utf8ToHex(value);
        }
    }
    throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.HexProcessingError(value);
};
/**
 * Converts any given value into it's number representation, if possible, else into it's bigint representation.
 * @param value - The value to convert
 * @returns - Returns the value in number or bigint representation
 *
 * @example
 * ```ts
 * console.log(web3.utils.toNumber(1));
 * > 1
 * console.log(web3.utils.toNumber(Number.MAX_SAFE_INTEGER));
 * > 9007199254740991
 *
 * console.log(web3.utils.toNumber(BigInt(Number.MAX_SAFE_INTEGER)));
 * > 9007199254740991
 *
 * console.log(web3.utils.toNumber(BigInt(Number.MAX_SAFE_INTEGER) + BigInt(1)));
 * > 9007199254740992n
 *
 * ```
 */
const toNumber = (value) => {
    if (typeof value === 'number') {
        if (value > 1e20) {
            console.warn(PrecisionLossWarning);
            // JavaScript converts numbers >= 10^21 to scientific notation when coerced to strings,
            // leading to potential parsing errors and incorrect representations.
            // For instance, String(10000000000000000000000) yields '1e+22'.
            // Using BigInt prevents this
            return BigInt(value);
        }
        return value;
    }
    if (typeof value === 'bigint') {
        return value >= Number.MIN_SAFE_INTEGER && value <= Number.MAX_SAFE_INTEGER
            ? Number(value)
            : value;
    }
    if (typeof value === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHexStrict)(value)) {
        return hexToNumber(value);
    }
    try {
        return toNumber(BigInt(value));
    }
    catch (_a) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidNumberError(value);
    }
};
/**
 * Auto converts any given value into it's bigint representation
 *
 * @param value - The value to convert
 * @returns - Returns the value in bigint representation

 * @example
 * ```ts
 * console.log(web3.utils.toBigInt(1));
 * > 1n
 * ```
 */
const toBigInt = (value) => {
    if (typeof value === 'number') {
        return BigInt(value);
    }
    if (typeof value === 'bigint') {
        return value;
    }
    // isHex passes for dec, too
    if (typeof value === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHex)(value)) {
        if (value.startsWith('-')) {
            return -BigInt(value.substring(1));
        }
        return BigInt(value);
    }
    throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidNumberError(value);
};
/**
 * Takes a number of wei and converts it to any other ether unit.
 * @param number - The value in wei
 * @param unit - The unit to convert to
 * @returns - Returns the converted value in the given unit
 *
 * @example
 * ```ts
 * console.log(web3.utils.fromWei("1", "ether"));
 * > 0.000000000000000001
 *
 * console.log(web3.utils.fromWei("1", "shannon"));
 * > 0.000000001
 * ```
 */
const fromWei = (number, unit) => {
    let denomination;
    if (typeof unit === 'string') {
        denomination = ethUnitMap[unit];
        if (!denomination) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidUnitError(unit);
        }
    }
    else {
        if (unit < 0 || !Number.isInteger(unit)) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidIntegerError(unit);
        }
        denomination = (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.bigintPower)(BigInt(10), BigInt(unit));
    }
    // value in wei would always be integer
    // 13456789, 1234
    const value = String(toNumber(number));
    // count number of zeros in denomination
    // 1000000 -> 6
    const numberOfZerosInDenomination = denomination.toString().length - 1;
    if (numberOfZerosInDenomination <= 0) {
        return value.toString();
    }
    // pad the value with required zeros
    // 13456789 -> 13456789, 1234 -> 001234
    const zeroPaddedValue = value.padStart(numberOfZerosInDenomination, '0');
    // get the integer part of value by counting number of zeros from start
    // 13456789 -> '13'
    // 001234 -> ''
    const integer = zeroPaddedValue.slice(0, -numberOfZerosInDenomination);
    // get the fraction part of value by counting number of zeros backward
    // 13456789 -> '456789'
    // 001234 -> '001234'
    const fraction = zeroPaddedValue.slice(-numberOfZerosInDenomination).replace(/\.?0+$/, '');
    if (integer === '') {
        return fraction ? `0.${fraction}` : '0';
    }
    if (fraction === '') {
        return integer;
    }
    const updatedValue = `${integer}.${fraction}`;
    return updatedValue.slice(0, integer.length + numberOfZerosInDenomination + 1);
};
/**
 * Takes a number of a unit and converts it to wei.
 *
 * @param number - The number to convert.
 * @param unit - {@link EtherUnits} The unit of the number passed.
 * @returns The number converted to wei.
 *
 * @example
 * ```ts
 * console.log(web3.utils.toWei("0.001", "ether"));
 * > 1000000000000000 //(wei)
 * ```
 */
// todo in 1.x unit defaults to 'ether'
const toWei = (number, unit) => {
    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate(['number'], [number]);
    let denomination;
    if (typeof unit === 'string') {
        denomination = ethUnitMap[unit];
        if (!denomination) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidUnitError(unit);
        }
    }
    else {
        if (unit < 0 || !Number.isInteger(unit)) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidIntegerError(unit);
        }
        denomination = (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.bigintPower)(BigInt(10), BigInt(unit));
    }
    let parsedNumber = number;
    if (typeof parsedNumber === 'number') {
        if (parsedNumber < 1e-15) {
            console.warn(PrecisionLossWarning);
        }
        if (parsedNumber > 1e20) {
            console.warn(PrecisionLossWarning);
            parsedNumber = BigInt(parsedNumber);
        }
        else {
            // in case there is a decimal point, we need to convert it to string
            parsedNumber = parsedNumber.toLocaleString('fullwide', {
                useGrouping: false,
                maximumFractionDigits: 20,
            });
        }
    }
    // if value is decimal e.g. 24.56 extract `integer` and `fraction` part
    // to avoid `fraction` to be null use `concat` with empty string
    const [integer, fraction] = String(typeof parsedNumber === 'string' && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHexStrict)(parsedNumber)
        ? parsedNumber
        : toNumber(parsedNumber))
        .split('.')
        .concat('');
    // join the value removing `.` from
    // 24.56 -> 2456
    const value = BigInt(`${integer}${fraction}`);
    // multiply value with denomination
    // 2456 * 1000000 -> 2456000000
    const updatedValue = value * denomination;
    // check if whole number was passed in
    const decimals = fraction.length;
    if (decimals === 0) {
        return updatedValue.toString();
    }
    // trim the value to remove extra zeros
    return updatedValue.toString().slice(0, -decimals);
};
/**
 * Will convert an upper or lowercase Ethereum address to a checksum address.
 * @param address - An address string
 * @returns	The checksum address
 * @example
 * ```ts
 * web3.utils.toChecksumAddress('0xc1912fee45d61c87cc5ea59dae31190fffff232d');
 * > "0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d"
 * ```
 */
const toChecksumAddress = (address) => {
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isAddress)(address, false)) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidAddressError(address);
    }
    const lowerCaseAddress = address.toLowerCase().replace(/^0x/i, '');
    // calling `Uint8Array.from` because `noble-hashes` checks with `instanceof Uint8Array` that fails in some edge cases:
    // 	https://github.com/paulmillr/noble-hashes/issues/25#issuecomment-1750106284
    const hash = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.uint8ArrayToHexString((0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.ensureIfUint8Array(utf8ToBytes(lowerCaseAddress))));
    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(hash) ||
        hash === '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470')
        return ''; // // EIP-1052 if hash is equal to c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470, keccak was given empty data
    let checksumAddress = '0x';
    const addressHash = hash.replace(/^0x/i, '');
    for (let i = 0; i < lowerCaseAddress.length; i += 1) {
        // If ith character is 8 to f then make it uppercase
        if (parseInt(addressHash[i], 16) > 7) {
            checksumAddress += lowerCaseAddress[i].toUpperCase();
        }
        else {
            checksumAddress += lowerCaseAddress[i];
        }
    }
    return checksumAddress;
};
const toBool = (value) => {
    if (typeof value === 'boolean') {
        return value;
    }
    if (typeof value === 'number' && (value === 0 || value === 1)) {
        return Boolean(value);
    }
    if (typeof value === 'bigint' && (value === BigInt(0) || value === BigInt(1))) {
        return Boolean(value);
    }
    if (typeof value === 'string' &&
        !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHexStrict)(value) &&
        (value === '1' || value === '0' || value === 'false' || value === 'true')) {
        if (value === 'true') {
            return true;
        }
        if (value === 'false') {
            return false;
        }
        return Boolean(Number(value));
    }
    if (typeof value === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHexStrict)(value) && (value === '0x1' || value === '0x0')) {
        return Boolean(toNumber(value));
    }
    throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidBooleanError(value);
};
//# sourceMappingURL=converters.js.map

/***/ }),

/***/ "./node_modules/web3-utils/lib/esm/event_emitter.js":
/*!**********************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/event_emitter.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EventEmitter: () => (/* binding */ EventEmitter)
/* harmony export */ });
/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! eventemitter3 */ "./node_modules/web3-utils/node_modules/eventemitter3/index.mjs");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/* eslint-disable max-classes-per-file */

/**
 * This class copy the behavior of Node.js EventEmitter class.
 * It is used to provide the same interface for the browser environment.
 */
class EventEmitter extends eventemitter3__WEBPACK_IMPORTED_MODULE_0__["default"] {
    constructor() {
        super(...arguments);
        // must be defined for backwards compatibility
        this.maxListeners = Number.MAX_SAFE_INTEGER;
    }
    setMaxListeners(maxListeners) {
        this.maxListeners = maxListeners;
        return this;
    }
    getMaxListeners() {
        return this.maxListeners;
    }
}
//# sourceMappingURL=event_emitter.js.map

/***/ }),

/***/ "./node_modules/web3-utils/lib/esm/formatter.js":
/*!******************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/formatter.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   convert: () => (/* binding */ convert),
/* harmony export */   convertScalarValue: () => (/* binding */ convertScalarValue),
/* harmony export */   format: () => (/* binding */ format),
/* harmony export */   isDataFormat: () => (/* binding */ isDataFormat)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./converters.js */ "./node_modules/web3-utils/lib/esm/converters.js");
/* harmony import */ var _objects_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./objects.js */ "./node_modules/web3-utils/lib/esm/objects.js");
/* harmony import */ var _string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./string_manipulation.js */ "./node_modules/web3-utils/lib/esm/string_manipulation.js");
/* harmony import */ var _uint8array_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./uint8array.js */ "./node_modules/web3-utils/lib/esm/uint8array.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/







const { parseBaseType } = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils;
const isDataFormat = (dataFormat) => typeof dataFormat === 'object' &&
    !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(dataFormat) &&
    'number' in dataFormat &&
    'bytes' in dataFormat;
/**
 * Finds the schema that corresponds to a specific data path within a larger JSON schema.
 * It works by iterating over the dataPath array and traversing the JSON schema one step at a time until it reaches the end of the path.
 *
 * @param schema - represents a JSON schema, which is an object that describes the structure of JSON data
 * @param dataPath - represents an array of strings that specifies the path to the data within the JSON schema
 * @param oneOfPath - represents an optional array of two-element tuples that specifies the "oneOf" option to choose, if the schema has oneOf and the data path can match multiple subschemas
 * @returns the JSON schema that matches the data path
 *
 */
const findSchemaByDataPath = (schema, dataPath, oneOfPath = []) => {
    let result = Object.assign({}, schema);
    let previousDataPath;
    for (const dataPart of dataPath) {
        if (result.oneOf && previousDataPath) {
            const currentDataPath = previousDataPath;
            const path = oneOfPath.find(([key]) => key === currentDataPath);
            if (path && path[0] === previousDataPath) {
                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access
                result = result.oneOf[path[1]];
            }
        }
        if (!result.properties && !result.items) {
            return undefined;
        }
        if (result.properties) {
            result = result.properties[dataPart];
        }
        else if (result.items && result.items.properties) {
            const node = result.items.properties;
            result = node[dataPart];
        }
        else if (result.items && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(result.items)) {
            result = result.items;
        }
        else if (result.items && Array.isArray(result.items)) {
            result = result.items[parseInt(dataPart, 10)];
        }
        if (result && dataPart)
            previousDataPath = dataPart;
    }
    return result;
};
/**
 * Converts a value depending on the format
 * @param value - value to convert
 * @param ethType - The type of the value to be parsed
 * @param format - The format to be converted to
 * @returns - The value converted to the specified format
 */
const convertScalarValue = (value, ethType, format) => {
    try {
        const { baseType, baseTypeSize } = parseBaseType(ethType);
        if (baseType === 'int' || baseType === 'uint') {
            switch (format.number) {
                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_NUMBER.NUMBER:
                    return Number((0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.toBigInt)(value));
                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_NUMBER.HEX:
                    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.numberToHex)((0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.toBigInt)(value));
                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_NUMBER.STR:
                    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.toBigInt)(value).toString();
                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_NUMBER.BIGINT:
                    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.toBigInt)(value);
                default:
                    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.FormatterError(`Invalid format: ${String(format.number)}`);
            }
        }
        if (baseType === 'bytes') {
            let paddedValue;
            if (baseTypeSize) {
                if (typeof value === 'string')
                    paddedValue = (0,_string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__.padLeft)(value, baseTypeSize * 2);
                else if ((0,_uint8array_js__WEBPACK_IMPORTED_MODULE_6__.isUint8Array)(value)) {
                    paddedValue = (0,_uint8array_js__WEBPACK_IMPORTED_MODULE_6__.uint8ArrayConcat)(new Uint8Array(baseTypeSize - value.length), value);
                }
            }
            else {
                paddedValue = value;
            }
            switch (format.bytes) {
                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_BYTES.HEX:
                    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)((0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.bytesToUint8Array)(paddedValue));
                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_BYTES.UINT8ARRAY:
                    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.bytesToUint8Array)(paddedValue);
                default:
                    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.FormatterError(`Invalid format: ${String(format.bytes)}`);
            }
        }
        if (baseType === 'string') {
            return String(value);
        }
    }
    catch (error) {
        // If someone didn't use `eth` keyword we can return original value
        // as the scope of this code is formatting not validation
        return value;
    }
    return value;
};
const convertArray = ({ value, schemaProp, schema, object, key, dataPath, format, oneOfPath = [], }) => {
    var _a, _b;
    // If value is an array
    if (Array.isArray(value)) {
        let _schemaProp = schemaProp;
        // TODO This is a naive approach to solving the issue of
        // a schema using oneOf. This chunk of code was intended to handle
        // BlockSchema.transactions
        // TODO BlockSchema.transactions are not being formatted
        if ((schemaProp === null || schemaProp === void 0 ? void 0 : schemaProp.oneOf) !== undefined) {
            // The following code is basically saying:
            // if the schema specifies oneOf, then we are to loop
            // over each possible schema and check if they type of the schema
            // matches the type of value[0], and if so we use the oneOfSchemaProp
            // as the schema for formatting
            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call
            schemaProp.oneOf.forEach((oneOfSchemaProp, index) => {
                var _a, _b;
                if (!Array.isArray(schemaProp === null || schemaProp === void 0 ? void 0 : schemaProp.items) &&
                    ((typeof value[0] === 'object' &&
                        ((_a = oneOfSchemaProp === null || oneOfSchemaProp === void 0 ? void 0 : oneOfSchemaProp.items) === null || _a === void 0 ? void 0 : _a.type) === 'object') ||
                        (typeof value[0] === 'string' &&
                            ((_b = oneOfSchemaProp === null || oneOfSchemaProp === void 0 ? void 0 : oneOfSchemaProp.items) === null || _b === void 0 ? void 0 : _b.type) !== 'object'))) {
                    _schemaProp = oneOfSchemaProp;
                    oneOfPath.push([key, index]);
                }
            });
        }
        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(_schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items)) {
            // Can not find schema for array item, delete that item
            // eslint-disable-next-line no-param-reassign
            delete object[key];
            dataPath.pop();
            return true;
        }
        // If schema for array items is a single type
        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(_schemaProp.items) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(_schemaProp.items.format)) {
            for (let i = 0; i < value.length; i += 1) {
                // eslint-disable-next-line no-param-reassign
                object[key][i] = convertScalarValue(value[i], 
                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
                (_a = _schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items) === null || _a === void 0 ? void 0 : _a.format, format);
            }
            dataPath.pop();
            return true;
        }
        // If schema for array items is an object
        if (!Array.isArray(_schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items) && ((_b = _schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items) === null || _b === void 0 ? void 0 : _b.type) === 'object') {
            for (const arrObject of value) {
                // eslint-disable-next-line no-use-before-define
                convert(arrObject, schema, dataPath, format, oneOfPath);
            }
            dataPath.pop();
            return true;
        }
        // If schema for array is a tuple
        if (Array.isArray(_schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items)) {
            for (let i = 0; i < value.length; i += 1) {
                // eslint-disable-next-line no-param-reassign
                object[key][i] = convertScalarValue(value[i], _schemaProp.items[i].format, format);
            }
            dataPath.pop();
            return true;
        }
    }
    return false;
};
/**
 * Converts the data to the specified format
 * @param data - data to convert
 * @param schema - The JSON schema that describes the structure of the data
 * @param dataPath - A string array that specifies the path to the data within the JSON schema
 * @param format  - The format to be converted to
 * @param oneOfPath - An optional array of two-element tuples that specifies the "oneOf" option to choose, if the schema has oneOf and the data path can match multiple subschemas
 * @returns - The data converted to the specified format
 */
const convert = (data, schema, dataPath, format, oneOfPath = []) => {
    var _a;
    // If it's a scalar value
    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(data) && !Array.isArray(data)) {
        return convertScalarValue(data, schema === null || schema === void 0 ? void 0 : schema.format, format);
    }
    const object = data;
    // case when schema is array and `items` is object
    if (Array.isArray(object) &&
        (schema === null || schema === void 0 ? void 0 : schema.type) === 'array' &&
        ((_a = schema === null || schema === void 0 ? void 0 : schema.items) === null || _a === void 0 ? void 0 : _a.type) === 'object') {
        convertArray({
            value: object,
            schemaProp: schema,
            schema,
            object,
            key: '',
            dataPath,
            format,
            oneOfPath,
        });
    }
    else {
        for (const [key, value] of Object.entries(object)) {
            dataPath.push(key);
            let schemaProp = findSchemaByDataPath(schema, dataPath, oneOfPath);
            // If value is a scaler value
            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(schemaProp)) {
                delete object[key];
                dataPath.pop();
                continue;
            }
            // If value is an object, recurse into it
            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(value)) {
                convert(value, schema, dataPath, format, oneOfPath);
                dataPath.pop();
                continue;
            }
            // If value is an array
            if (convertArray({
                value,
                schemaProp,
                schema,
                object,
                key,
                dataPath,
                format,
                oneOfPath,
            })) {
                continue;
            }
            // The following code is basically saying:
            // if the schema specifies oneOf, then we are to loop
            // over each possible schema and check if they type of the schema specifies format
            // and if so we use the oneOfSchemaProp as the schema for formatting
            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call
            if ((schemaProp === null || schemaProp === void 0 ? void 0 : schemaProp.format) === undefined && (schemaProp === null || schemaProp === void 0 ? void 0 : schemaProp.oneOf) !== undefined) {
                for (const [_index, oneOfSchemaProp] of schemaProp.oneOf.entries()) {
                    if ((oneOfSchemaProp === null || oneOfSchemaProp === void 0 ? void 0 : oneOfSchemaProp.format) !== undefined) {
                        schemaProp = oneOfSchemaProp;
                        break;
                    }
                }
            }
            object[key] = convertScalarValue(value, schemaProp.format, format);
            dataPath.pop();
        }
    }
    return object;
};
/**
 * Given data that can be interpreted according to the provided schema, returns equivalent data that has been formatted
 * according to the provided return format.
 *
 * @param schema - how to interpret the data
 * @param data - data to be formatted
 * @param returnFormat - how to format the data
 * @returns - formatted data
 *
 * @example
 *
 * ```js
 * import { FMT_NUMBER, utils } from "web3";
 *
 * console.log(
 *   utils.format({ format: "uint" }, "221", { number: FMT_NUMBER.HEX }),
 * );
 * // 0xdd
 * ```
 *
 */
const format = (schema, data, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_RETURN_FORMAT) => {
    let dataToParse;
    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(data)) {
        dataToParse = (0,_objects_js__WEBPACK_IMPORTED_MODULE_4__.mergeDeep)({}, data);
    }
    else if (Array.isArray(data)) {
        dataToParse = [...data];
    }
    else {
        dataToParse = data;
    }
    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
    const jsonSchema = (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(schema) ? schema : web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.ethAbiToJsonSchema(schema);
    if (!jsonSchema.properties && !jsonSchema.items && !jsonSchema.format) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.FormatterError('Invalid json schema for formatting');
    }
    return convert(dataToParse, jsonSchema, [], returnFormat);
};
//# sourceMappingURL=formatter.js.map

/***/ }),

/***/ "./node_modules/web3-utils/lib/esm/hash.js":
/*!*************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/hash.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   encodePacked: () => (/* binding */ encodePacked),
/* harmony export */   getStorageSlotNumForLongString: () => (/* binding */ getStorageSlotNumForLongString),
/* harmony export */   keccak256: () => (/* binding */ keccak256Wrapper),
/* harmony export */   keccak256Wrapper: () => (/* binding */ keccak256Wrapper),
/* harmony export */   processSolidityEncodePackedArgs: () => (/* binding */ processSolidityEncodePackedArgs),
/* harmony export */   sha3: () => (/* binding */ sha3),
/* harmony export */   sha3Raw: () => (/* binding */ sha3Raw),
/* harmony export */   soliditySha3: () => (/* binding */ soliditySha3),
/* harmony export */   soliditySha3Raw: () => (/* binding */ soliditySha3Raw)
/* harmony export */ });
/* harmony import */ var ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/keccak.js */ "./node_modules/web3-utils/node_modules/ethereum-cryptography/esm/keccak.js");
/* harmony import */ var ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethereum-cryptography/utils.js */ "./node_modules/web3-utils/node_modules/ethereum-cryptography/esm/utils.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./converters.js */ "./node_modules/web3-utils/lib/esm/converters.js");
/* harmony import */ var _string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./string_manipulation.js */ "./node_modules/web3-utils/lib/esm/string_manipulation.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * This package provides utility functions for Ethereum dapps and other web3.js packages.
 *
 * For using Utils functions, first install Web3 package using `npm i web3` or `yarn add web3`.
 * After that, Web3 Utils functions will be available as mentioned below.
 * ```ts
 * import { Web3 } from 'web3';
 * const web3 = new Web3();
 *
 * const value = web3.utils.fromWei("1", "ether")
 *
 * ```
 *
 * For using individual package install `web3-utils` package using `npm i web3-utils` or `yarn add web3-utils` and only import required functions.
 * This is more efficient approach for building lightweight applications.
 * ```ts
 * import { fromWei, soliditySha3Raw } from 'web3-utils';
 *
 * console.log(fromWei("1", "ether"));
 * console.log(soliditySha3Raw({ type: "string", value: "helloworld" }))
 *
 * ```
 * @module Utils
 */






const SHA3_EMPTY_BYTES = '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';
/**
 * A wrapper for ethereum-cryptography/keccak256 to allow hashing a `string` and a `bigint` in addition to `UInt8Array`
 * @param data - the input to hash
 * @returns - the Keccak-256 hash of the input
 *
 * @example
 * ```ts
 * console.log(web3.utils.keccak256Wrapper('web3.js'));
 * > 0x63667efb1961039c9bb0d6ea7a5abdd223a3aca7daa5044ad894226e1f83919a
 *
 * console.log(web3.utils.keccak256Wrapper(1));
 * > 0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6
 *
 * console.log(web3.utils.keccak256Wrapper(0xaf12fd));
 * > 0x358640fd4719fa923525d74ab5ae80a594301aba5543e3492b052bf4598b794c
 * ```
 */
const keccak256Wrapper = (data) => {
    let processedData;
    if (typeof data === 'bigint' || typeof data === 'number') {
        processedData = (0,ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(data.toString());
    }
    else if (Array.isArray(data)) {
        processedData = new Uint8Array(data);
    }
    else if (typeof data === 'string' && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(data)) {
        processedData = (0,ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(data);
    }
    else {
        processedData = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.bytesToUint8Array)(data);
    }
    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)((0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(web3_validator__WEBPACK_IMPORTED_MODULE_3__.utils.ensureIfUint8Array(processedData)));
};

/**
 * computes the Keccak-256 hash of the input and returns a hexstring
 * @param data - the input to hash
 * @returns - the Keccak-256 hash of the input
 *
 * @example
 * ```ts
 * console.log(web3.utils.sha3('web3.js'));
 * > 0x63667efb1961039c9bb0d6ea7a5abdd223a3aca7daa5044ad894226e1f83919a
 *
 * console.log(web3.utils.sha3(''));
 * > undefined
 * ```
 */
const sha3 = (data) => {
    let updatedData;
    if (typeof data === 'string') {
        if (data.startsWith('0x') && (0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(data)) {
            updatedData = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(data);
        }
        else {
            updatedData = (0,ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(data);
        }
    }
    else {
        updatedData = data;
    }
    const hash = keccak256Wrapper(updatedData);
    // EIP-1052 if hash is equal to c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470, keccak was given empty data
    return hash === SHA3_EMPTY_BYTES ? undefined : hash;
};
/**
 * Will calculate the sha3 of the input but does return the hash value instead of null if for example a empty string is passed.
 * @param data - the input to hash
 * @returns - the Keccak-256 hash of the input
 *
 * @example
 * ```ts
 * conosle.log(web3.utils.sha3Raw('web3.js'));
 * > 0x63667efb1961039c9bb0d6ea7a5abdd223a3aca7daa5044ad894226e1f83919a
 *
 * console.log(web3.utils.sha3Raw(''));
 * > 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470
 * ```
 */
const sha3Raw = (data) => {
    const hash = sha3(data);
    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(hash)) {
        return SHA3_EMPTY_BYTES;
    }
    return hash;
};
/**
 * returns type and value
 * @param arg - the input to return the type and value
 * @returns - the type and value of the input
 */
const getType = (arg) => {
    if (Array.isArray(arg)) {
        throw new Error('Autodetection of array types is not supported.');
    }
    let type;
    let value;
    // if type is given
    if (typeof arg === 'object' &&
        ('t' in arg || 'type' in arg) &&
        ('v' in arg || 'value' in arg)) {
        type = 't' in arg ? arg.t : arg.type;
        value = 'v' in arg ? arg.v : arg.value;
        type = type.toLowerCase() === 'bigint' ? 'int' : type;
    }
    else if (typeof arg === 'bigint') {
        return ['int', arg];
    }
    // otherwise try to guess the type
    else {
        type = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.toHex)(arg, true);
        value = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.toHex)(arg);
        if (!type.startsWith('int') && !type.startsWith('uint')) {
            type = 'bytes';
        }
    }
    if ((type.startsWith('int') || type.startsWith('uint')) &&
        typeof value === 'string' &&
        !/^(-)?0x/i.test(value)) {
        value = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.toBigInt)(value);
    }
    return [type, value];
};
/**
 * returns the type with size if uint or int
 * @param name - the input to return the type with size
 * @returns - the type with size of the input
 */
const elementaryName = (name) => {
    if (name.startsWith('int[')) {
        return `int256${name.slice(3)}`;
    }
    if (name === 'int') {
        return 'int256';
    }
    if (name.startsWith('uint[')) {
        return `uint256'${name.slice(4)}`;
    }
    if (name === 'uint') {
        return 'uint256';
    }
    return name;
};
/**
 * returns the size of the value of type 'byte'
 */
const parseTypeN = (value, typeLength) => {
    const typesize = /^(\d+).*$/.exec(value.slice(typeLength));
    return typesize ? parseInt(typesize[1], 10) : 0;
};
/**
 * returns the bit length of the value
 * @param value - the input to return the bit length
 * @returns - the bit length of the input
 */
const bitLength = (value) => {
    const updatedVal = value.toString(2);
    return updatedVal.length;
};
/**
 * Pads the value based on size and type
 * returns a string of the padded value
 * @param type - the input to pad
 * @returns = the padded value
 */
const solidityPack = (type, val) => {
    const value = val.toString();
    if (type === 'string') {
        if (typeof val === 'string')
            return (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.utf8ToHex)(val);
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidStringError(val);
    }
    if (type === 'bool' || type === 'boolean') {
        if (typeof val === 'boolean')
            return val ? '01' : '00';
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidBooleanError(val);
    }
    if (type === 'address') {
        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isAddress)(value)) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidAddressError(value);
        }
        return value;
    }
    const name = elementaryName(type);
    if (type.startsWith('uint')) {
        const size = parseTypeN(name, 'uint'.length);
        if (size % 8 || size < 8 || size > 256) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidSizeError(value);
        }
        const num = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.toNumber)(value);
        if (bitLength(num) > size) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidLargeValueError(value);
        }
        if (num < BigInt(0)) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidUnsignedIntegerError(value);
        }
        return size ? (0,_string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__.leftPad)(num.toString(16), (size / 8) * 2) : num.toString(16);
    }
    if (type.startsWith('int')) {
        const size = parseTypeN(name, 'int'.length);
        if (size % 8 || size < 8 || size > 256) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidSizeError(type);
        }
        const num = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.toNumber)(value);
        if (bitLength(num) > size) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidLargeValueError(value);
        }
        if (num < BigInt(0)) {
            return (0,_string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__.toTwosComplement)(num.toString(), (size / 8) * 2);
        }
        return size ? (0,_string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__.leftPad)(num.toString(16), size / 4) : num.toString(16);
    }
    if (name === 'bytes') {
        if (value.replace(/^0x/i, '').length % 2 !== 0) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidBytesError(value);
        }
        return value;
    }
    if (type.startsWith('bytes')) {
        if (value.replace(/^0x/i, '').length % 2 !== 0) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidBytesError(value);
        }
        const size = parseTypeN(type, 'bytes'.length);
        if (!size || size < 1 || size > 64 || size < value.replace(/^0x/i, '').length / 2) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidBytesError(value);
        }
        return (0,_string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__.rightPad)(value, size * 2);
    }
    return '';
};
/**
 * returns a string of the tightly packed value given based on the type
 * @param arg - the input to return the tightly packed value
 * @returns - the tightly packed value
 */
const processSolidityEncodePackedArgs = (arg) => {
    const [type, val] = getType(arg);
    // array case
    if (Array.isArray(val)) {
        // go through each element of the array and use map function to create new hexarg list
        const hexArg = val.map((v) => solidityPack(type, v).replace('0x', ''));
        return hexArg.join('');
    }
    const hexArg = solidityPack(type, val);
    return hexArg.replace('0x', '');
};
/**
 * Encode packed arguments to a hexstring
 */
const encodePacked = (...values) => {
    const hexArgs = values.map(processSolidityEncodePackedArgs);
    return `0x${hexArgs.join('').toLowerCase()}`;
};
/**
 * Will tightly pack values given in the same way solidity would then hash.
 * returns a hash string, or null if input is empty
 * @param values - the input to return the tightly packed values
 * @returns - the keccack246 of the tightly packed values
 *
 * @example
 * ```ts
 * console.log(web3.utils.soliditySha3({ type: "string", value: "31323334" }));
 * > 0xf15f8da2ad27e486d632dc37d24912f634398918d6f9913a0a0ff84e388be62b
 * ```
 */
const soliditySha3 = (...values) => sha3(encodePacked(...values));
/**
 * Will tightly pack values given in the same way solidity would then hash.
 * returns a hash string, if input is empty will return `0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470`
 * @param values - the input to return the tightly packed values
 * @returns - the keccack246 of the tightly packed values
 *
 * @example
 * ```ts
 * console.log(web3.utils.soliditySha3Raw({ type: "string", value: "helloworld" }))
 * > 0xfa26db7ca85ead399216e7c6316bc50ed24393c3122b582735e7f3b0f91b93f0
 * ```
 */
const soliditySha3Raw = (...values) => sha3Raw(encodePacked(...values));
/**
 * Get slot number for storage long string in contract. Basically for getStorage method
 * returns slotNumber where will data placed
 * @param mainSlotNumber - the slot number where will be stored hash of long string
 * @returns - the slot number where will be stored long string
 */
const getStorageSlotNumForLongString = (mainSlotNumber) => sha3(`0x${(typeof mainSlotNumber === 'number'
    ? mainSlotNumber.toString()
    : mainSlotNumber).padStart(64, '0')}`);
//# sourceMappingURL=hash.js.map

/***/ }),

/***/ "./node_modules/web3-utils/lib/esm/index.js":
/*!**************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChunkResponseParser: () => (/* reexport safe */ _chunk_response_parser_js__WEBPACK_IMPORTED_MODULE_11__.ChunkResponseParser),
/* harmony export */   Eip1193Provider: () => (/* reexport safe */ _web3_eip1193_provider_js__WEBPACK_IMPORTED_MODULE_13__.Eip1193Provider),
/* harmony export */   EventEmitter: () => (/* reexport safe */ _event_emitter_js__WEBPACK_IMPORTED_MODULE_1__.EventEmitter),
/* harmony export */   SocketProvider: () => (/* reexport safe */ _socket_provider_js__WEBPACK_IMPORTED_MODULE_14__.SocketProvider),
/* harmony export */   Web3DeferredPromise: () => (/* reexport safe */ _web3_deferred_promise_js__WEBPACK_IMPORTED_MODULE_10__.Web3DeferredPromise),
/* harmony export */   asciiToHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.asciiToHex),
/* harmony export */   bytesToHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.bytesToHex),
/* harmony export */   bytesToUint8Array: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.bytesToUint8Array),
/* harmony export */   checkAddressCheckSum: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.checkAddressCheckSum),
/* harmony export */   compareBlockNumbers: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.compareBlockNumbers),
/* harmony export */   convert: () => (/* reexport safe */ _formatter_js__WEBPACK_IMPORTED_MODULE_3__.convert),
/* harmony export */   convertScalarValue: () => (/* reexport safe */ _formatter_js__WEBPACK_IMPORTED_MODULE_3__.convertScalarValue),
/* harmony export */   encodePacked: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.encodePacked),
/* harmony export */   ethUnitMap: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.ethUnitMap),
/* harmony export */   format: () => (/* reexport safe */ _formatter_js__WEBPACK_IMPORTED_MODULE_3__.format),
/* harmony export */   fromAscii: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.fromAscii),
/* harmony export */   fromDecimal: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.fromDecimal),
/* harmony export */   fromTwosComplement: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.fromTwosComplement),
/* harmony export */   fromUtf8: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.fromUtf8),
/* harmony export */   fromWei: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.fromWei),
/* harmony export */   getStorageSlotNumForLongString: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.getStorageSlotNumForLongString),
/* harmony export */   hexToAscii: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToAscii),
/* harmony export */   hexToBytes: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToBytes),
/* harmony export */   hexToNumber: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToNumber),
/* harmony export */   hexToNumberString: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToNumberString),
/* harmony export */   hexToString: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToString),
/* harmony export */   hexToUtf8: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToUtf8),
/* harmony export */   isAddress: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isAddress),
/* harmony export */   isBatchRequest: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isBatchRequest),
/* harmony export */   isBatchResponse: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isBatchResponse),
/* harmony export */   isBloom: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isBloom),
/* harmony export */   isContractAddressInBloom: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isContractAddressInBloom),
/* harmony export */   isContractInitOptions: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isContractInitOptions),
/* harmony export */   isDataFormat: () => (/* reexport safe */ _formatter_js__WEBPACK_IMPORTED_MODULE_3__.isDataFormat),
/* harmony export */   isHex: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isHex),
/* harmony export */   isHexStrict: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isHexStrict),
/* harmony export */   isInBloom: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isInBloom),
/* harmony export */   isNullish: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isNullish),
/* harmony export */   isPromise: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.isPromise),
/* harmony export */   isResponseRpcError: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isResponseRpcError),
/* harmony export */   isResponseWithError: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isResponseWithError),
/* harmony export */   isResponseWithNotification: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isResponseWithNotification),
/* harmony export */   isResponseWithResult: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isResponseWithResult),
/* harmony export */   isSubscriptionResult: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isSubscriptionResult),
/* harmony export */   isTopic: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isTopic),
/* harmony export */   isTopicInBloom: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isTopicInBloom),
/* harmony export */   isUint8Array: () => (/* reexport safe */ _uint8array_js__WEBPACK_IMPORTED_MODULE_15__.isUint8Array),
/* harmony export */   isUserEthereumAddressInBloom: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isUserEthereumAddressInBloom),
/* harmony export */   isValidResponse: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isValidResponse),
/* harmony export */   jsonRpc: () => (/* reexport module object */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__),
/* harmony export */   keccak256: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.keccak256),
/* harmony export */   keccak256Wrapper: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.keccak256Wrapper),
/* harmony export */   leftPad: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.leftPad),
/* harmony export */   mergeDeep: () => (/* reexport safe */ _objects_js__WEBPACK_IMPORTED_MODULE_7__.mergeDeep),
/* harmony export */   numberToHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex),
/* harmony export */   padLeft: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.padLeft),
/* harmony export */   padRight: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.padRight),
/* harmony export */   pollTillDefined: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.pollTillDefined),
/* harmony export */   pollTillDefinedAndReturnIntervalId: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.pollTillDefinedAndReturnIntervalId),
/* harmony export */   processSolidityEncodePackedArgs: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.processSolidityEncodePackedArgs),
/* harmony export */   randomBytes: () => (/* reexport safe */ _random_js__WEBPACK_IMPORTED_MODULE_5__.randomBytes),
/* harmony export */   randomHex: () => (/* reexport safe */ _random_js__WEBPACK_IMPORTED_MODULE_5__.randomHex),
/* harmony export */   rejectIfConditionAtInterval: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.rejectIfConditionAtInterval),
/* harmony export */   rejectIfTimeout: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.rejectIfTimeout),
/* harmony export */   rightPad: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.rightPad),
/* harmony export */   setRequestIdStart: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.setRequestIdStart),
/* harmony export */   sha3: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.sha3),
/* harmony export */   sha3Raw: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.sha3Raw),
/* harmony export */   soliditySha3: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.soliditySha3),
/* harmony export */   soliditySha3Raw: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.soliditySha3Raw),
/* harmony export */   stringToHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.stringToHex),
/* harmony export */   toAscii: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toAscii),
/* harmony export */   toBatchPayload: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.toBatchPayload),
/* harmony export */   toBigInt: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toBigInt),
/* harmony export */   toBool: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toBool),
/* harmony export */   toChecksumAddress: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toChecksumAddress),
/* harmony export */   toDecimal: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toDecimal),
/* harmony export */   toHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toHex),
/* harmony export */   toNumber: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toNumber),
/* harmony export */   toPayload: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.toPayload),
/* harmony export */   toTwosComplement: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.toTwosComplement),
/* harmony export */   toUtf8: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toUtf8),
/* harmony export */   toWei: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toWei),
/* harmony export */   uint8ArrayConcat: () => (/* reexport safe */ _uint8array_js__WEBPACK_IMPORTED_MODULE_15__.uint8ArrayConcat),
/* harmony export */   uint8ArrayEquals: () => (/* reexport safe */ _uint8array_js__WEBPACK_IMPORTED_MODULE_15__.uint8ArrayEquals),
/* harmony export */   utf8ToBytes: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.utf8ToBytes),
/* harmony export */   utf8ToHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.utf8ToHex),
/* harmony export */   uuidV4: () => (/* reexport safe */ _uuid_js__WEBPACK_IMPORTED_MODULE_12__.uuidV4),
/* harmony export */   validateResponse: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.validateResponse),
/* harmony export */   waitWithTimeout: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.waitWithTimeout)
/* harmony export */ });
/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./converters.js */ "./node_modules/web3-utils/lib/esm/converters.js");
/* harmony import */ var _event_emitter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./event_emitter.js */ "./node_modules/web3-utils/lib/esm/event_emitter.js");
/* harmony import */ var _validation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./validation.js */ "./node_modules/web3-utils/lib/esm/validation.js");
/* harmony import */ var _formatter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./formatter.js */ "./node_modules/web3-utils/lib/esm/formatter.js");
/* harmony import */ var _hash_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hash.js */ "./node_modules/web3-utils/lib/esm/hash.js");
/* harmony import */ var _random_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./random.js */ "./node_modules/web3-utils/lib/esm/random.js");
/* harmony import */ var _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./string_manipulation.js */ "./node_modules/web3-utils/lib/esm/string_manipulation.js");
/* harmony import */ var _objects_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./objects.js */ "./node_modules/web3-utils/lib/esm/objects.js");
/* harmony import */ var _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./promise_helpers.js */ "./node_modules/web3-utils/lib/esm/promise_helpers.js");
/* harmony import */ var _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./json_rpc.js */ "./node_modules/web3-utils/lib/esm/json_rpc.js");
/* harmony import */ var _web3_deferred_promise_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./web3_deferred_promise.js */ "./node_modules/web3-utils/lib/esm/web3_deferred_promise.js");
/* harmony import */ var _chunk_response_parser_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./chunk_response_parser.js */ "./node_modules/web3-utils/lib/esm/chunk_response_parser.js");
/* harmony import */ var _uuid_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./uuid.js */ "./node_modules/web3-utils/lib/esm/uuid.js");
/* harmony import */ var _web3_eip1193_provider_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./web3_eip1193_provider.js */ "./node_modules/web3-utils/lib/esm/web3_eip1193_provider.js");
/* harmony import */ var _socket_provider_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./socket_provider.js */ "./node_modules/web3-utils/lib/esm/socket_provider.js");
/* harmony import */ var _uint8array_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./uint8array.js */ "./node_modules/web3-utils/lib/esm/uint8array.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

















//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/web3-utils/lib/esm/json_rpc.js":
/*!*****************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/json_rpc.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isBatchRequest: () => (/* binding */ isBatchRequest),
/* harmony export */   isBatchResponse: () => (/* binding */ isBatchResponse),
/* harmony export */   isResponseRpcError: () => (/* binding */ isResponseRpcError),
/* harmony export */   isResponseWithError: () => (/* binding */ isResponseWithError),
/* harmony export */   isResponseWithNotification: () => (/* binding */ isResponseWithNotification),
/* harmony export */   isResponseWithResult: () => (/* binding */ isResponseWithResult),
/* harmony export */   isSubscriptionResult: () => (/* binding */ isSubscriptionResult),
/* harmony export */   isValidResponse: () => (/* binding */ isValidResponse),
/* harmony export */   setRequestIdStart: () => (/* binding */ setRequestIdStart),
/* harmony export */   toBatchPayload: () => (/* binding */ toBatchPayload),
/* harmony export */   toPayload: () => (/* binding */ toPayload),
/* harmony export */   validateResponse: () => (/* binding */ validateResponse)
/* harmony export */ });
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var _uuid_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./uuid.js */ "./node_modules/web3-utils/lib/esm/uuid.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/



// check if code is a valid rpc server error code
const isResponseRpcError = (rpcError) => {
    const errorCode = rpcError.error.code;
    return web3_errors__WEBPACK_IMPORTED_MODULE_1__.rpcErrorsMap.has(errorCode) || (errorCode >= -32099 && errorCode <= -32000);
};
const isResponseWithResult = (response) => !Array.isArray(response) &&
    !!response &&
    response.jsonrpc === '2.0' &&
    // JSON RPC consider "null" as valid response
    'result' in response &&
    (0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(response.error) &&
    (typeof response.id === 'number' || typeof response.id === 'string');
// To avoid circular package dependency, copied to code here. If you update this please update same function in `response_errors.ts`
const isResponseWithError = (response) => !Array.isArray(response) &&
    response.jsonrpc === '2.0' &&
    !!response &&
    (0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(response.result) &&
    // JSON RPC consider "null" as valid response
    'error' in response &&
    (typeof response.id === 'number' || typeof response.id === 'string');
const isResponseWithNotification = (response) => !Array.isArray(response) &&
    !!response &&
    response.jsonrpc === '2.0' &&
    !(0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(response.params) &&
    !(0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(response.method);
const isSubscriptionResult = (response) => !Array.isArray(response) &&
    !!response &&
    response.jsonrpc === '2.0' &&
    'id' in response &&
    // JSON RPC consider "null" as valid response
    'result' in response;
const validateResponse = (response) => isResponseWithResult(response) || isResponseWithError(response);
const isValidResponse = (response) => Array.isArray(response) ? response.every(validateResponse) : validateResponse(response);
const isBatchResponse = (response) => Array.isArray(response) && response.length > 0 && isValidResponse(response);
// internal optional variable to increment and use for the jsonrpc `id`
let requestIdSeed;
/**
 * Optionally use to make the jsonrpc `id` start from a specific number.
 * Without calling this function, the `id` will be filled with a Uuid.
 * But after this being called with a number, the `id` will be a number starting from the provided `start` variable.
 * However, if `undefined` was passed to this function, the `id` will be a Uuid again.
 * @param start - a number to start incrementing from.
 * 	Or `undefined` to use a new Uuid (this is the default behavior)
 */
const setRequestIdStart = (start) => {
    requestIdSeed = start;
};
const toPayload = (request) => {
    var _a, _b, _c, _d;
    if (typeof requestIdSeed !== 'undefined') {
        requestIdSeed += 1;
    }
    return {
        jsonrpc: (_a = request.jsonrpc) !== null && _a !== void 0 ? _a : '2.0',
        id: (_c = (_b = request.id) !== null && _b !== void 0 ? _b : requestIdSeed) !== null && _c !== void 0 ? _c : (0,_uuid_js__WEBPACK_IMPORTED_MODULE_2__.uuidV4)(),
        method: request.method,
        params: (_d = request.params) !== null && _d !== void 0 ? _d : undefined,
    };
};
const toBatchPayload = (requests) => requests.map(request => toPayload(request));
const isBatchRequest = (request) => Array.isArray(request) && request.length > 0;
//# sourceMappingURL=json_rpc.js.map

/***/ }),

/***/ "./node_modules/web3-utils/lib/esm/objects.js":
/*!****************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/objects.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   mergeDeep: () => (/* binding */ mergeDeep)
/* harmony export */ });
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/


const isIterable = (item) => typeof item === 'object' &&
    !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item) &&
    !Array.isArray(item) &&
    !(item instanceof web3_types__WEBPACK_IMPORTED_MODULE_0__.TypedArray);
// The following code is a derivative work of the code from the "LiskHQ/lisk-sdk" project,
// which is licensed under Apache version 2.
/**
 * Deep merge two objects.
 * @param destination - The destination object.
 * @param sources - An array of source objects.
 * @returns - The merged object.
 */
const mergeDeep = (destination, ...sources) => {
    if (!isIterable(destination)) {
        return destination;
    }
    const result = Object.assign({}, destination); // clone deep here
    for (const src of sources) {
        // const src = { ..._src };
        // eslint-disable-next-line no-restricted-syntax
        for (const key in src) {
            if (isIterable(src[key])) {
                if (!result[key]) {
                    result[key] = {};
                }
                result[key] = mergeDeep(result[key], src[key]);
            }
            else if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(src[key]) && Object.hasOwnProperty.call(src, key)) {
                if (Array.isArray(src[key]) || src[key] instanceof web3_types__WEBPACK_IMPORTED_MODULE_0__.TypedArray) {
                    result[key] = src[key].slice(0);
                }
                else {
                    result[key] = src[key];
                }
            }
        }
    }
    return result;
};
//# sourceMappingURL=objects.js.map

/***/ }),

/***/ "./node_modules/web3-utils/lib/esm/promise_helpers.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/promise_helpers.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isPromise: () => (/* binding */ isPromise),
/* harmony export */   pollTillDefined: () => (/* binding */ pollTillDefined),
/* harmony export */   pollTillDefinedAndReturnIntervalId: () => (/* binding */ pollTillDefinedAndReturnIntervalId),
/* harmony export */   rejectIfConditionAtInterval: () => (/* binding */ rejectIfConditionAtInterval),
/* harmony export */   rejectIfTimeout: () => (/* binding */ rejectIfTimeout),
/* harmony export */   waitWithTimeout: () => (/* binding */ waitWithTimeout)
/* harmony export */ });
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};

/**
 * An alternative to the node function `isPromise` that exists in `util/types` because it is not available on the browser.
 * @param object - to check if it is a `Promise`
 * @returns `true` if it is an `object` or a `function` that has a `then` function. And returns `false` otherwise.
 */
function isPromise(object) {
    return ((typeof object === 'object' || typeof object === 'function') &&
        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
        typeof object.then === 'function');
}
/**
 * Wait for a promise but interrupt it if it did not resolve within a given timeout.
 * If the timeout reached, before the promise code resolve, either throw an error if an error object was provided, or return `undefined`.
 * @param awaitable - The promise or function to wait for.
 * @param timeout - The timeout in milliseconds.
 * @param error - (Optional) The error to throw if the timeout reached.
 */
function waitWithTimeout(awaitable, timeout, error) {
    return __awaiter(this, void 0, void 0, function* () {
        let timeoutId;
        const result = yield Promise.race([
            awaitable instanceof Promise ? awaitable : awaitable(),
            new Promise((resolve, reject) => {
                timeoutId = setTimeout(() => (error ? reject(error) : resolve(undefined)), timeout);
            }),
        ]);
        if (timeoutId) {
            clearTimeout(timeoutId);
        }
        if (result instanceof Error) {
            throw result;
        }
        return result;
    });
}
/**
 * Repeatedly calls an async function with a given interval until the result of the function is defined (not undefined or null),
 * or until a timeout is reached. It returns promise and intervalId.
 * @param func - The function to call.
 * @param interval - The interval in milliseconds.
 */
function pollTillDefinedAndReturnIntervalId(func, interval) {
    let intervalId;
    const polledRes = new Promise((resolve, reject) => {
        intervalId = setInterval((function intervalCallbackFunc() {
            (() => __awaiter(this, void 0, void 0, function* () {
                try {
                    const res = yield waitWithTimeout(func, interval);
                    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(res)) {
                        clearInterval(intervalId);
                        resolve(res);
                    }
                }
                catch (error) {
                    clearInterval(intervalId);
                    reject(error);
                }
            }))();
            return intervalCallbackFunc;
        })(), // this will immediate invoke first call
        interval);
    });
    return [polledRes, intervalId];
}
/**
 * Repeatedly calls an async function with a given interval until the result of the function is defined (not undefined or null),
 * or until a timeout is reached.
 * pollTillDefinedAndReturnIntervalId() function should be used instead of pollTillDefined if you need IntervalId in result.
 * This function will be deprecated in next major release so use pollTillDefinedAndReturnIntervalId().
 * @param func - The function to call.
 * @param interval - The interval in milliseconds.
 */
function pollTillDefined(func, interval) {
    return __awaiter(this, void 0, void 0, function* () {
        return pollTillDefinedAndReturnIntervalId(func, interval)[0];
    });
}
/**
 * Enforce a timeout on a promise, so that it can be rejected if it takes too long to complete
 * @param timeout - The timeout to enforced in milliseconds.
 * @param error - The error to throw if the timeout is reached.
 * @returns A tuple of the timeout id and the promise that will be rejected if the timeout is reached.
 *
 * @example
 * ```ts
 * const [timerId, promise] = web3.utils.rejectIfTimeout(100, new Error('time out'));
 * ```
 */
function rejectIfTimeout(timeout, error) {
    let timeoutId;
    const rejectOnTimeout = new Promise((_, reject) => {
        timeoutId = setTimeout(() => {
            reject(error);
        }, timeout);
    });
    return [timeoutId, rejectOnTimeout];
}
/**
 * Sets an interval that repeatedly executes the given cond function with the specified interval between each call.
 * If the condition is met, the interval is cleared and a Promise that rejects with the returned value is returned.
 * @param cond - The function/condition to call.
 * @param interval - The interval in milliseconds.
 * @returns - an array with the interval ID and the Promise.
 */
function rejectIfConditionAtInterval(cond, interval) {
    let intervalId;
    const rejectIfCondition = new Promise((_, reject) => {
        intervalId = setInterval(() => {
            (() => __awaiter(this, void 0, void 0, function* () {
                const error = yield cond();
                if (error) {
                    clearInterval(intervalId);
                    reject(error);
                }
            }))();
        }, interval);
    });
    return [intervalId, rejectIfCondition];
}
//# sourceMappingURL=promise_helpers.js.map

/***/ }),

/***/ "./node_modules/web3-utils/lib/esm/random.js":
/*!***************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/random.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   randomBytes: () => (/* binding */ randomBytes),
/* harmony export */   randomHex: () => (/* binding */ randomHex)
/* harmony export */ });
/* harmony import */ var ethereum_cryptography_random_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/random.js */ "./node_modules/web3-utils/node_modules/ethereum-cryptography/esm/random.js");
/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./converters.js */ "./node_modules/web3-utils/lib/esm/converters.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * @module Utils
 */


/**
 * Returns a random byte array by the given bytes size
 * @param size - The size of the random byte array returned
 * @returns - random byte array
 *
 * @example
 * ```ts
 * console.log(web3.utils.randomBytes(32));
 * > Uint8Array(32) [
 *       93, 172, 226,  32,  33, 176, 156, 156,
 *       182,  30, 240,   2,  69,  96, 174, 197,
 *       33, 136, 194, 241, 197, 156, 110, 111,
 *       66,  87,  17,  88,  67,  48, 245, 183
 *    ]
 * ```
 */
const randomBytes = (size) => (0,ethereum_cryptography_random_js__WEBPACK_IMPORTED_MODULE_0__.getRandomBytesSync)(size);
/**
 * Returns a random hex string by the given bytes size
 * @param byteSize - The size of the random hex string returned
 * @returns - random hex string
 *
 * ```ts
 * console.log(web3.utils.randomHex(32));
 * > 0x139f5b88b72a25eab053d3b57fe1f8a9dbc62a526b1cb1774d0d7db1c3e7ce9e
 * ```
 */
const randomHex = (byteSize) => (0,_converters_js__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(randomBytes(byteSize));
//# sourceMappingURL=random.js.map

/***/ }),

/***/ "./node_modules/web3-utils/lib/esm/socket_provider.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/socket_provider.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SocketProvider: () => (/* binding */ SocketProvider)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var _web3_eip1193_provider_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./web3_eip1193_provider.js */ "./node_modules/web3-utils/lib/esm/web3_eip1193_provider.js");
/* harmony import */ var _chunk_response_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk_response_parser.js */ "./node_modules/web3-utils/lib/esm/chunk_response_parser.js");
/* harmony import */ var _validation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./validation.js */ "./node_modules/web3-utils/lib/esm/validation.js");
/* harmony import */ var _web3_deferred_promise_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./web3_deferred_promise.js */ "./node_modules/web3-utils/lib/esm/web3_deferred_promise.js");
/* harmony import */ var _json_rpc_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./json_rpc.js */ "./node_modules/web3-utils/lib/esm/json_rpc.js");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};






const DEFAULT_RECONNECTION_OPTIONS = {
    autoReconnect: true,
    delay: 5000,
    maxAttempts: 5,
};
const NORMAL_CLOSE_CODE = 1000; // https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/close
class SocketProvider extends _web3_eip1193_provider_js__WEBPACK_IMPORTED_MODULE_1__.Eip1193Provider {
    get SocketConnection() {
        return this._socketConnection;
    }
    /**
     * This is an abstract class for implementing a socket provider (e.g. WebSocket, IPC). It extends the EIP-1193 provider {@link EIP1193Provider}.
     * @param socketPath - The path to the socket (e.g. /ipc/path or ws://localhost:8546)
     * @param socketOptions - The options for the socket connection. Its type is supposed to be specified in the inherited classes.
     * @param reconnectOptions - The options for the socket reconnection {@link ReconnectOptions}
     */
    constructor(socketPath, socketOptions, reconnectOptions) {
        super();
        this._connectionStatus = 'connecting';
        // Message handlers. Due to bounding of `this` and removing the listeners we have to keep it's reference.
        this._onMessageHandler = this._onMessage.bind(this);
        this._onOpenHandler = this._onConnect.bind(this);
        this._onCloseHandler = this._onCloseEvent.bind(this);
        this._onErrorHandler = this._onError.bind(this);
        if (!this._validateProviderPath(socketPath))
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidClientError(socketPath);
        this._socketPath = socketPath;
        this._socketOptions = socketOptions;
        this._reconnectOptions = Object.assign(Object.assign({}, DEFAULT_RECONNECTION_OPTIONS), (reconnectOptions !== null && reconnectOptions !== void 0 ? reconnectOptions : {}));
        this._pendingRequestsQueue = new Map();
        this._sentRequestsQueue = new Map();
        this._init();
        this.connect();
        this.chunkResponseParser = new _chunk_response_parser_js__WEBPACK_IMPORTED_MODULE_2__.ChunkResponseParser(this._eventEmitter, this._reconnectOptions.autoReconnect);
        this.chunkResponseParser.onError(() => {
            this._clearQueues();
        });
        this.isReconnecting = false;
    }
    _init() {
        this._reconnectAttempts = 0;
    }
    /**
     * Try to establish a connection to the socket
     */
    connect() {
        try {
            this._openSocketConnection();
            this._connectionStatus = 'connecting';
            this._addSocketListeners();
        }
        catch (e) {
            if (!this.isReconnecting) {
                this._connectionStatus = 'disconnected';
                if (e && e.message) {
                    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.ConnectionError(`Error while connecting to ${this._socketPath}. Reason: ${e.message}`);
                }
                else {
                    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidClientError(this._socketPath);
                }
            }
            else {
                setImmediate(() => {
                    this._reconnect();
                });
            }
        }
    }
    // eslint-disable-next-line class-methods-use-this
    _validateProviderPath(path) {
        return !!path;
    }
    /**
     *
     * @returns the pendingRequestQueue size
     */
    // eslint-disable-next-line class-methods-use-this
    getPendingRequestQueueSize() {
        return this._pendingRequestsQueue.size;
    }
    /**
     *
     * @returns the sendPendingRequests size
     */
    // eslint-disable-next-line class-methods-use-this
    getSentRequestsQueueSize() {
        return this._sentRequestsQueue.size;
    }
    /**
     *
     * @returns `true` if the socket supports subscriptions
     */
    // eslint-disable-next-line class-methods-use-this
    supportsSubscriptions() {
        return true;
    }
    on(type, listener) {
        this._eventEmitter.on(type, listener);
    }
    once(type, listener) {
        this._eventEmitter.once(type, listener);
    }
    removeListener(type, listener) {
        this._eventEmitter.removeListener(type, listener);
    }
    _onDisconnect(code, data) {
        this._connectionStatus = 'disconnected';
        super._onDisconnect(code, data);
    }
    /**
     * Disconnects the socket
     * @param code - The code to be sent to the server
     * @param data - The data to be sent to the server
     */
    disconnect(code, data) {
        const disconnectCode = code !== null && code !== void 0 ? code : NORMAL_CLOSE_CODE;
        this._removeSocketListeners();
        if (this.getStatus() !== 'disconnected') {
            this._closeSocketConnection(disconnectCode, data);
        }
        this._onDisconnect(disconnectCode, data);
    }
    /**
     * Safely disconnects the socket, async and waits for request size to be 0 before disconnecting
     * @param forceDisconnect - If true, will clear queue after 5 attempts of waiting for both pending and sent queue to be 0
     * @param ms - Determines the ms of setInterval
     * @param code - The code to be sent to the server
     * @param data - The data to be sent to the server
     */
    safeDisconnect(code_1, data_1) {
        return __awaiter(this, arguments, void 0, function* (code, data, forceDisconnect = false, ms = 1000) {
            let retryAttempt = 0;
            const checkQueue = () => __awaiter(this, void 0, void 0, function* () {
                return new Promise(resolve => {
                    const interval = setInterval(() => {
                        if (forceDisconnect && retryAttempt >= 5) {
                            this.clearQueues();
                        }
                        if (this.getPendingRequestQueueSize() === 0 &&
                            this.getSentRequestsQueueSize() === 0) {
                            clearInterval(interval);
                            resolve(true);
                        }
                        retryAttempt += 1;
                    }, ms);
                });
            });
            yield checkQueue();
            this.disconnect(code, data);
        });
    }
    /**
     * Removes all listeners for the specified event type.
     * @param type - The event type to remove the listeners for
     */
    removeAllListeners(type) {
        this._eventEmitter.removeAllListeners(type);
    }
    _onError(event) {
        // do not emit error while trying to reconnect
        if (this.isReconnecting) {
            this._reconnect();
        }
        else {
            this._eventEmitter.emit('error', event);
        }
    }
    /**
     * Resets the socket, removing all listeners and pending requests
     */
    reset() {
        this._sentRequestsQueue.clear();
        this._pendingRequestsQueue.clear();
        this._init();
        this._removeSocketListeners();
        this._addSocketListeners();
    }
    _reconnect() {
        if (this.isReconnecting) {
            return;
        }
        this.isReconnecting = true;
        if (this._sentRequestsQueue.size > 0) {
            this._sentRequestsQueue.forEach((request, key) => {
                request.deferredPromise.reject(new web3_errors__WEBPACK_IMPORTED_MODULE_0__.PendingRequestsOnReconnectingError());
                this._sentRequestsQueue.delete(key);
            });
        }
        if (this._reconnectAttempts < this._reconnectOptions.maxAttempts) {
            this._reconnectAttempts += 1;
            setTimeout(() => {
                this._removeSocketListeners();
                this.connect(); // this can error out
                this.isReconnecting = false;
            }, this._reconnectOptions.delay);
        }
        else {
            this.isReconnecting = false;
            this._clearQueues();
            this._removeSocketListeners();
            this._eventEmitter.emit('error', new web3_errors__WEBPACK_IMPORTED_MODULE_0__.MaxAttemptsReachedOnReconnectingError(this._reconnectOptions.maxAttempts));
        }
    }
    /**
     *  Creates a request object to be sent to the server
     */
    request(request) {
        return __awaiter(this, void 0, void 0, function* () {
            if ((0,_validation_js__WEBPACK_IMPORTED_MODULE_3__.isNullish)(this._socketConnection)) {
                throw new Error('Connection is undefined');
            }
            // if socket disconnected - open connection
            if (this.getStatus() === 'disconnected') {
                this.connect();
            }
            const requestId = _json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isBatchRequest(request)
                ? request[0].id
                : request.id;
            if (!requestId) {
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.Web3WSProviderError('Request Id not defined');
            }
            if (this._sentRequestsQueue.has(requestId)) {
                throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.RequestAlreadySentError(requestId);
            }
            const deferredPromise = new _web3_deferred_promise_js__WEBPACK_IMPORTED_MODULE_4__.Web3DeferredPromise();
            deferredPromise.catch(error => {
                this._eventEmitter.emit('error', error);
            });
            const reqItem = {
                payload: request,
                deferredPromise,
            };
            if (this.getStatus() === 'connecting') {
                this._pendingRequestsQueue.set(requestId, reqItem);
                return reqItem.deferredPromise;
            }
            this._sentRequestsQueue.set(requestId, reqItem);
            try {
                this._sendToSocket(reqItem.payload);
            }
            catch (error) {
                this._sentRequestsQueue.delete(requestId);
                this._eventEmitter.emit('error', error);
            }
            return deferredPromise;
        });
    }
    _onConnect() {
        this._connectionStatus = 'connected';
        this._reconnectAttempts = 0;
        super._onConnect();
        this._sendPendingRequests();
    }
    _sendPendingRequests() {
        for (const [id, value] of this._pendingRequestsQueue.entries()) {
            try {
                this._sendToSocket(value.payload);
                this._pendingRequestsQueue.delete(id);
                this._sentRequestsQueue.set(id, value);
            }
            catch (error) {
                // catches if sendTosocket fails
                this._pendingRequestsQueue.delete(id);
                this._eventEmitter.emit('error', error);
            }
        }
    }
    _onMessage(event) {
        const responses = this._parseResponses(event);
        if ((0,_validation_js__WEBPACK_IMPORTED_MODULE_3__.isNullish)(responses) || responses.length === 0) {
            return;
        }
        for (const response of responses) {
            if (_json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isResponseWithNotification(response) &&
                response.method.endsWith('_subscription')) {
                this._eventEmitter.emit('message', response);
                return;
            }
            const requestId = _json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isBatchResponse(response)
                ? response[0].id
                : response.id;
            const requestItem = this._sentRequestsQueue.get(requestId);
            if (!requestItem) {
                return;
            }
            if (_json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isBatchResponse(response) ||
                _json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isResponseWithResult(response) ||
                _json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isResponseWithError(response)) {
                this._eventEmitter.emit('message', response);
                requestItem.deferredPromise.resolve(response);
            }
            this._sentRequestsQueue.delete(requestId);
        }
    }
    clearQueues(event) {
        this._clearQueues(event);
    }
    _clearQueues(event) {
        if (this._pendingRequestsQueue.size > 0) {
            this._pendingRequestsQueue.forEach((request, key) => {
                request.deferredPromise.reject(new web3_errors__WEBPACK_IMPORTED_MODULE_0__.ConnectionNotOpenError(event));
                this._pendingRequestsQueue.delete(key);
            });
        }
        if (this._sentRequestsQueue.size > 0) {
            this._sentRequestsQueue.forEach((request, key) => {
                request.deferredPromise.reject(new web3_errors__WEBPACK_IMPORTED_MODULE_0__.ConnectionNotOpenError(event));
                this._sentRequestsQueue.delete(key);
            });
        }
        this._removeSocketListeners();
    }
}
//# sourceMappingURL=socket_provider.js.map

/***/ }),

/***/ "./node_modules/web3-utils/lib/esm/string_manipulation.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/string_manipulation.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   fromTwosComplement: () => (/* binding */ fromTwosComplement),
/* harmony export */   leftPad: () => (/* binding */ leftPad),
/* harmony export */   padLeft: () => (/* binding */ padLeft),
/* harmony export */   padRight: () => (/* binding */ padRight),
/* harmony export */   rightPad: () => (/* binding */ rightPad),
/* harmony export */   toTwosComplement: () => (/* binding */ toTwosComplement)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./converters.js */ "./node_modules/web3-utils/lib/esm/converters.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/



/**
 * Adds a padding on the left of a string, if value is a integer or bigInt will be converted to a hex string.
 * @param value - The value to be padded.
 * @param characterAmount - The amount of characters the string should have.
 * @param sign - The sign to be added (default is 0).
 * @returns The padded string.
 *
 * @example
 * ```ts
 *
 * console.log(web3.utils.padLeft('0x123', 10));
 * >0x0000000123
 * ```
 */
const padLeft = (value, characterAmount, sign = '0') => {
    // To avoid duplicate code and circular dependency we will
    // use `padLeft` implementation from `web3-validator`
    if (typeof value === 'string') {
        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value)) {
            return value.padStart(characterAmount, sign);
        }
        return web3_validator__WEBPACK_IMPORTED_MODULE_1__.utils.padLeft(value, characterAmount, sign);
    }
    web3_validator__WEBPACK_IMPORTED_MODULE_1__.validator.validate(['int'], [value]);
    return web3_validator__WEBPACK_IMPORTED_MODULE_1__.utils.padLeft(value, characterAmount, sign);
};
/**
 * Adds a padding on the right of a string, if value is a integer or bigInt will be converted to a hex string.
 * @param value - The value to be padded.
 * @param characterAmount - The amount of characters the string should have.
 * @param sign - The sign to be added (default is 0).
 * @returns The padded string.
 *
 * @example
 * ```ts
 * console.log(web3.utils.padRight('0x123', 10));
 * > 0x1230000000
 *
 * console.log(web3.utils.padRight('0x123', 10, '1'));
 * > 0x1231111111
 * ```
 */
const padRight = (value, characterAmount, sign = '0') => {
    if (typeof value === 'string' && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value)) {
        return value.padEnd(characterAmount, sign);
    }
    const hexString = typeof value === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value) ? value : (0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.numberToHex)(value);
    const prefixLength = hexString.startsWith('-') ? 3 : 2;
    web3_validator__WEBPACK_IMPORTED_MODULE_1__.validator.validate([hexString.startsWith('-') ? 'int' : 'uint'], [value]);
    return hexString.padEnd(characterAmount + prefixLength, sign);
};
/**
 * Adds a padding on the right of a string, if value is a integer or bigInt will be converted to a hex string. @alias `padRight`
 */
const rightPad = padRight;
/**
 * Adds a padding on the left of a string, if value is a integer or bigInt will be converted to a hex string. @alias `padLeft`
 */
const leftPad = padLeft;
/**
 * Converts a negative number into the two’s complement and return a hexstring of 64 nibbles.
 * @param value - The value to be converted.
 * @param nibbleWidth - The nibble width of the hex string (default is 64).
 *
 * @returns The hex string of the two’s complement.
 *
 * @example
 * ```ts
 * console.log(web3.utils.toTwosComplement(13, 32));
 * > 0x0000000000000000000000000000000d
 *
 * console.log(web3.utils.toTwosComplement('-0x1', 32));
 * > 0xffffffffffffffffffffffffffffffff
 *
 * console.log(web3.utils.toTwosComplement(BigInt('9007199254740992'), 32));
 * > 0x00000000000000000020000000000000
 * ```
 */
const toTwosComplement = (value, nibbleWidth = 64) => {
    web3_validator__WEBPACK_IMPORTED_MODULE_1__.validator.validate(['int'], [value]);
    const val = (0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.toNumber)(value);
    if (val >= 0)
        return padLeft((0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.toHex)(val), nibbleWidth);
    const largestBit = (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.bigintPower)(BigInt(2), BigInt(nibbleWidth * 4));
    if (-val >= largestBit) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.NibbleWidthError(`value: ${value}, nibbleWidth: ${nibbleWidth}`);
    }
    const updatedVal = BigInt(val);
    const complement = updatedVal + largestBit;
    return padLeft((0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.numberToHex)(complement), nibbleWidth);
};
/**
 * Converts the twos complement into a decimal number or big int.
 * @param value - The value to be converted.
 * @param nibbleWidth - The nibble width of the hex string (default is 64).
 * @returns The decimal number or big int.
 *
 * @example
 * ```ts
 * console.log(web3.utils.fromTwosComplement('0x0000000000000000000000000000000d', 32'));
 * > 13
 *
 * console.log(web3.utils.fromTwosComplement('0x00000000000000000020000000000000', 32));
 * > 9007199254740992n
 * ```
 */
const fromTwosComplement = (value, nibbleWidth = 64) => {
    web3_validator__WEBPACK_IMPORTED_MODULE_1__.validator.validate(['int'], [value]);
    const val = (0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.toNumber)(value);
    if (val < 0)
        return val;
    const largestBit = Math.ceil(Math.log(Number(val)) / Math.log(2));
    if (largestBit > nibbleWidth * 4)
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.NibbleWidthError(`value: "${value}", nibbleWidth: "${nibbleWidth}"`);
    // check the largest bit to see if negative
    if (nibbleWidth * 4 !== largestBit)
        return val;
    const complement = (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.bigintPower)(BigInt(2), BigInt(nibbleWidth) * BigInt(4));
    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.toNumber)(BigInt(val) - complement);
};
//# sourceMappingURL=string_manipulation.js.map

/***/ }),

/***/ "./node_modules/web3-utils/lib/esm/uint8array.js":
/*!*******************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/uint8array.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isUint8Array: () => (/* binding */ isUint8Array),
/* harmony export */   uint8ArrayConcat: () => (/* binding */ uint8ArrayConcat),
/* harmony export */   uint8ArrayEquals: () => (/* binding */ uint8ArrayEquals)
/* harmony export */ });
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
function isUint8Array(data) {
    var _a, _b;
    return (data instanceof Uint8Array ||
        ((_a = data === null || data === void 0 ? void 0 : data.constructor) === null || _a === void 0 ? void 0 : _a.name) === 'Uint8Array' ||
        ((_b = data === null || data === void 0 ? void 0 : data.constructor) === null || _b === void 0 ? void 0 : _b.name) === 'Buffer');
}
function uint8ArrayConcat(...parts) {
    const length = parts.reduce((prev, part) => {
        const agg = prev + part.length;
        return agg;
    }, 0);
    const result = new Uint8Array(length);
    let offset = 0;
    for (const part of parts) {
        result.set(part, offset);
        offset += part.length;
    }
    return result;
}
/**
 * Returns true if the two passed Uint8Arrays have the same content
 */
function uint8ArrayEquals(a, b) {
    if (a === b) {
        return true;
    }
    if (a.byteLength !== b.byteLength) {
        return false;
    }
    for (let i = 0; i < a.byteLength; i += 1) {
        if (a[i] !== b[i]) {
            return false;
        }
    }
    return true;
}
//# sourceMappingURL=uint8array.js.map

/***/ }),

/***/ "./node_modules/web3-utils/lib/esm/uuid.js":
/*!*************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/uuid.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   uuidV4: () => (/* binding */ uuidV4)
/* harmony export */ });
/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./converters.js */ "./node_modules/web3-utils/lib/esm/converters.js");
/* harmony import */ var _random_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./random.js */ "./node_modules/web3-utils/lib/esm/random.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * @module Utils
 */


/**
 * Generate a version 4 (random) uuid
 * https://github.com/uuidjs/uuid/blob/main/src/v4.js#L5
 * @returns - A version 4 uuid of the form xxxxxxxx-xxxx-4xxx-xxxx-xxxxxxxxxxxx
 * @example
 * ```ts
 * console.log(web3.utils.uuidV4());
 * > "1b9d6bcd-bbfd-4b2d-9b5d-ab8dfbbd4bed"
 * ```
 */
const uuidV4 = () => {
    const bytes = (0,_random_js__WEBPACK_IMPORTED_MODULE_1__.randomBytes)(16);
    // https://github.com/ethers-io/ethers.js/blob/ce8f1e4015c0f27bf178238770b1325136e3351a/packages/json-wallets/src.ts/utils.ts#L54
    // Section: 4.1.3:
    // - time_hi_and_version[12:16] = 0b0100
    /* eslint-disable-next-line */
    bytes[6] = (bytes[6] & 0x0f) | 0x40;
    // Section 4.4
    // - clock_seq_hi_and_reserved[6] = 0b0
    // - clock_seq_hi_and_reserved[7] = 0b1
    /* eslint-disable-next-line */
    bytes[8] = (bytes[8] & 0x3f) | 0x80;
    const hexString = (0,_converters_js__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)(bytes);
    return [
        hexString.substring(2, 10),
        hexString.substring(10, 14),
        hexString.substring(14, 18),
        hexString.substring(18, 22),
        hexString.substring(22, 34),
    ].join('-');
};
//# sourceMappingURL=uuid.js.map

/***/ }),

/***/ "./node_modules/web3-utils/lib/esm/validation.js":
/*!*******************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/validation.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   checkAddressCheckSum: () => (/* binding */ checkAddressCheckSum),
/* harmony export */   compareBlockNumbers: () => (/* binding */ compareBlockNumbers),
/* harmony export */   isAddress: () => (/* binding */ isAddress),
/* harmony export */   isBloom: () => (/* binding */ isBloom),
/* harmony export */   isContractAddressInBloom: () => (/* binding */ isContractAddressInBloom),
/* harmony export */   isContractInitOptions: () => (/* binding */ isContractInitOptions),
/* harmony export */   isHex: () => (/* binding */ isHex),
/* harmony export */   isHexStrict: () => (/* binding */ isHexStrict),
/* harmony export */   isInBloom: () => (/* binding */ isInBloom),
/* harmony export */   isNullish: () => (/* binding */ isNullish),
/* harmony export */   isTopic: () => (/* binding */ isTopic),
/* harmony export */   isTopicInBloom: () => (/* binding */ isTopicInBloom),
/* harmony export */   isUserEthereumAddressInBloom: () => (/* binding */ isUserEthereumAddressInBloom)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * @module Utils
 */



/**
 * @deprecated Will be removed in next release. Please use `web3-validator` package instead.
 */
const isHexStrict = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict;
/**
 * returns true if input is a hexstring, number or bigint
 *
 * @deprecated Will be removed in next release. Please use `web3-validator` package instead.
 */
const isHex = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHex;
/**
 * Checks the checksum of a given address. Will also return false on non-checksum addresses.
 *
 * @deprecated Will be removed in next release. Please use `web3-validator` package instead.
 */
const checkAddressCheckSum = web3_validator__WEBPACK_IMPORTED_MODULE_1__.checkAddressCheckSum;
/**
 * Checks if a given string is a valid Ethereum address. It will also check the checksum, if the address has upper and lowercase letters.
 *
 * @deprecated Will be removed in next release. Please use `web3-validator` package instead.
 */
const isAddress = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isAddress;
/**
 * Returns true if the bloom is a valid bloom
 * https://github.com/joshstevens19/ethereum-bloom-filters/blob/fbeb47b70b46243c3963fe1c2988d7461ef17236/src/index.ts#L7
 *
 * @deprecated Will be removed in next release. Please use `web3-validator` package instead.
 */
const isBloom = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isBloom;
/**
 * Returns true if the value is part of the given bloom
 * note: false positives are possible.
 *
 * @deprecated Will be removed in next release. Please use `web3-validator` package instead.
 */
const isInBloom = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isInBloom;
/**
 * Returns true if the ethereum users address is part of the given bloom note: false positives are possible.
 *
 * @deprecated Will be removed in next release. Please use `web3-validator` package instead.
 */
const isUserEthereumAddressInBloom = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isUserEthereumAddressInBloom;
/**
 * Returns true if the contract address is part of the given bloom.
 * note: false positives are possible.
 *
 * @deprecated Will be removed in next release. Please use `web3-validator` package instead.
 */
const isContractAddressInBloom = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isContractAddressInBloom;
/**
 * Checks if its a valid topic
 *
 * @deprecated Will be removed in next release. Please use `web3-validator` package instead.
 */
const isTopic = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isTopic;
/**
 * Returns true if the topic is part of the given bloom.
 * note: false positives are possible.
 *
 * @deprecated Will be removed in next release. Please use `web3-validator` package instead.
 */
const isTopicInBloom = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isTopicInBloom;
/**
 * Compares between block A and block B
 * @param blockA - Block number or string
 * @param blockB - Block number or string
 *
 * @returns - Returns -1 if a \< b, returns 1 if a \> b and returns 0 if a == b
 *
 * @example
 * ```ts
 * console.log(web3.utils.compareBlockNumbers('latest', 'pending'));
 * > -1
 *
 * console.log(web3.utils.compareBlockNumbers(12, 11));
 * > 1
 * ```
 */
const compareBlockNumbers = (blockA, blockB) => {
    const isABlockTag = typeof blockA === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isBlockTag)(blockA);
    const isBBlockTag = typeof blockB === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isBlockTag)(blockB);
    if (blockA === blockB ||
        ((blockA === 'earliest' || blockA === 0) && (blockB === 'earliest' || blockB === 0)) // only exception compare blocktag with number
    ) {
        return 0;
    }
    if (blockA === 'earliest') {
        return -1;
    }
    if (blockB === 'earliest') {
        return 1;
    }
    if (isABlockTag && isBBlockTag) {
        // Increasing order:  earliest, finalized , safe, latest, pending
        const tagsOrder = {
            [web3_types__WEBPACK_IMPORTED_MODULE_2__.BlockTags.EARLIEST]: 1,
            [web3_types__WEBPACK_IMPORTED_MODULE_2__.BlockTags.FINALIZED]: 2,
            [web3_types__WEBPACK_IMPORTED_MODULE_2__.BlockTags.SAFE]: 3,
            [web3_types__WEBPACK_IMPORTED_MODULE_2__.BlockTags.LATEST]: 4,
            [web3_types__WEBPACK_IMPORTED_MODULE_2__.BlockTags.PENDING]: 5,
        };
        if (tagsOrder[blockA] < tagsOrder[blockB]) {
            return -1;
        }
        return 1;
    }
    if ((isABlockTag && !isBBlockTag) || (!isABlockTag && isBBlockTag)) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidBlockError('Cannot compare blocktag with provided non-blocktag input.');
    }
    const bigIntA = BigInt(blockA);
    const bigIntB = BigInt(blockB);
    if (bigIntA < bigIntB) {
        return -1;
    }
    if (bigIntA === bigIntB) {
        return 0;
    }
    return 1;
};
const isContractInitOptions = (options) => typeof options === 'object' &&
    !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(options) &&
    Object.keys(options).length !== 0 &&
    [
        'input',
        'data',
        'from',
        'gas',
        'gasPrice',
        'gasLimit',
        'address',
        'jsonInterface',
        'syncWithContext',
        'dataInputFill',
    ].some(key => key in options);
const isNullish = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish;
//# sourceMappingURL=validation.js.map

/***/ }),

/***/ "./node_modules/web3-utils/lib/esm/web3_deferred_promise.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/web3_deferred_promise.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Web3DeferredPromise: () => (/* binding */ Web3DeferredPromise)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var _a;

/**
 * The class is a simple implementation of a deferred promise with optional timeout functionality,
 * which can be useful when dealing with asynchronous tasks.
 *
 */
class Web3DeferredPromise {
    /**
     *
     * @param timeout - (optional) The timeout in milliseconds.
     * @param eagerStart - (optional) If true, the timer starts as soon as the promise is created.
     * @param timeoutMessage - (optional) The message to include in the timeout erro that is thrown when the promise times out.
     */
    constructor({ timeout, eagerStart, timeoutMessage, } = {
        timeout: 0,
        eagerStart: false,
        timeoutMessage: 'DeferredPromise timed out',
    }) {
        // public tag to treat object as promise by different libs
        // eslint-disable-next-line @typescript-eslint/prefer-as-const
        this[_a] = 'Promise';
        this._state = 'pending';
        this._promise = new Promise((resolve, reject) => {
            this._resolve = resolve;
            this._reject = reject;
        });
        this._timeoutMessage = timeoutMessage;
        this._timeoutInterval = timeout;
        if (eagerStart) {
            this.startTimer();
        }
    }
    /**
     * Returns the current state of the promise.
     * @returns 'pending' | 'fulfilled' | 'rejected'
     */
    get state() {
        return this._state;
    }
    /**
     *
     * @param onfulfilled - (optional) The callback to execute when the promise is fulfilled.
     * @param onrejected  - (optional) The callback to execute when the promise is rejected.
     * @returns
     */
    then(onfulfilled, onrejected) {
        return __awaiter(this, void 0, void 0, function* () {
            return this._promise.then(onfulfilled, onrejected);
        });
    }
    /**
     *
     * @param onrejected - (optional) The callback to execute when the promise is rejected.
     * @returns
     */
    catch(
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    onrejected) {
        return __awaiter(this, void 0, void 0, function* () {
            return this._promise.catch(onrejected);
        });
    }
    /**
     *
     * @param onfinally - (optional) The callback to execute when the promise is settled (fulfilled or rejected).
     * @returns
     */
    finally(onfinally) {
        return __awaiter(this, void 0, void 0, function* () {
            return this._promise.finally(onfinally);
        });
    }
    /**
     * Resolves the current promise.
     * @param value - The value to resolve the promise with.
     */
    resolve(value) {
        this._resolve(value);
        this._state = 'fulfilled';
        this._clearTimeout();
    }
    /**
     * Rejects the current promise.
     * @param reason - The reason to reject the promise with.
     */
    reject(reason) {
        this._reject(reason);
        this._state = 'rejected';
        this._clearTimeout();
    }
    /**
     * Starts the timeout timer for the promise.
     */
    startTimer() {
        if (this._timeoutInterval && this._timeoutInterval > 0) {
            this._timeoutId = setTimeout(this._checkTimeout.bind(this), this._timeoutInterval);
        }
    }
    _checkTimeout() {
        if (this._state === 'pending' && this._timeoutId) {
            this.reject(new web3_errors__WEBPACK_IMPORTED_MODULE_0__.OperationTimeoutError(this._timeoutMessage));
        }
    }
    _clearTimeout() {
        if (this._timeoutId) {
            clearTimeout(this._timeoutId);
        }
    }
}
_a = Symbol.toStringTag;
//# sourceMappingURL=web3_deferred_promise.js.map

/***/ }),

/***/ "./node_modules/web3-utils/lib/esm/web3_eip1193_provider.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/web3_eip1193_provider.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Eip1193Provider: () => (/* binding */ Eip1193Provider)
/* harmony export */ });
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! eventemitter3 */ "./node_modules/web3-utils/node_modules/eventemitter3/index.mjs");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var _json_rpc_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./json_rpc.js */ "./node_modules/web3-utils/lib/esm/json_rpc.js");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/




/**
 * This is an abstract class, which extends {@link Web3BaseProvider} class. This class is used to implement a provider that adheres to the EIP-1193 standard for Ethereum providers.
 */
class Eip1193Provider extends web3_types__WEBPACK_IMPORTED_MODULE_0__.Web3BaseProvider {
    constructor() {
        super(...arguments);
        this._eventEmitter = new eventemitter3__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this._chainId = '';
        this._accounts = [];
    }
    _getChainId() {
        return __awaiter(this, void 0, void 0, function* () {
            var _a;
            const data = yield this.request((0,_json_rpc_js__WEBPACK_IMPORTED_MODULE_3__.toPayload)({
                method: 'eth_chainId',
                params: [],
            }));
            return (_a = data === null || data === void 0 ? void 0 : data.result) !== null && _a !== void 0 ? _a : '';
        });
    }
    _getAccounts() {
        return __awaiter(this, void 0, void 0, function* () {
            var _a;
            const data = yield this.request((0,_json_rpc_js__WEBPACK_IMPORTED_MODULE_3__.toPayload)({
                method: 'eth_accounts',
                params: [],
            }));
            return (_a = data === null || data === void 0 ? void 0 : data.result) !== null && _a !== void 0 ? _a : [];
        });
    }
    _onConnect() {
        Promise.all([
            this._getChainId()
                .then(chainId => {
                if (chainId !== this._chainId) {
                    this._chainId = chainId;
                    this._eventEmitter.emit('chainChanged', this._chainId);
                }
            })
                .catch(err => {
                // todo: add error handler
                console.error(err);
            }),
            this._getAccounts()
                .then(accounts => {
                if (!(this._accounts.length === accounts.length &&
                    accounts.every(v => accounts.includes(v)))) {
                    this._accounts = accounts;
                    this._onAccountsChanged();
                }
            })
                .catch(err => {
                // todo: add error handler
                // eslint-disable-next-line no-console
                console.error(err);
            }),
        ])
            .then(() => this._eventEmitter.emit('connect', {
            chainId: this._chainId,
        }))
            .catch(err => {
            // todo: add error handler
            // eslint-disable-next-line no-console
            console.error(err);
        });
    }
    // todo this must be ProvideRpcError with a message too
    _onDisconnect(code, data) {
        this._eventEmitter.emit('disconnect', new web3_errors__WEBPACK_IMPORTED_MODULE_2__.EIP1193ProviderRpcError(code, data));
    }
    _onAccountsChanged() {
        // get chainId and safe to local
        this._eventEmitter.emit('accountsChanged', this._accounts);
    }
}
//# sourceMappingURL=web3_eip1193_provider.js.map

/***/ }),

/***/ "./node_modules/web3-utils/node_modules/@noble/hashes/esm/_assert.js":
/*!***************************************************************************!*\
  !*** ./node_modules/web3-utils/node_modules/@noble/hashes/esm/_assert.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   bool: () => (/* binding */ bool),
/* harmony export */   bytes: () => (/* binding */ bytes),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   exists: () => (/* binding */ exists),
/* harmony export */   hash: () => (/* binding */ hash),
/* harmony export */   isBytes: () => (/* binding */ isBytes),
/* harmony export */   number: () => (/* binding */ number),
/* harmony export */   output: () => (/* binding */ output)
/* harmony export */ });
function number(n) {
    if (!Number.isSafeInteger(n) || n < 0)
        throw new Error(`positive integer expected, not ${n}`);
}
function bool(b) {
    if (typeof b !== 'boolean')
        throw new Error(`boolean expected, not ${b}`);
}
// copied from utils
function isBytes(a) {
    return (a instanceof Uint8Array ||
        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));
}
function bytes(b, ...lengths) {
    if (!isBytes(b))
        throw new Error('Uint8Array expected');
    if (lengths.length > 0 && !lengths.includes(b.length))
        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);
}
function hash(h) {
    if (typeof h !== 'function' || typeof h.create !== 'function')
        throw new Error('Hash should be wrapped by utils.wrapConstructor');
    number(h.outputLen);
    number(h.blockLen);
}
function exists(instance, checkFinished = true) {
    if (instance.destroyed)
        throw new Error('Hash instance has been destroyed');
    if (checkFinished && instance.finished)
        throw new Error('Hash#digest() has already been called');
}
function output(out, instance) {
    bytes(out);
    const min = instance.outputLen;
    if (out.length < min) {
        throw new Error(`digestInto() expects output buffer of length at least ${min}`);
    }
}

const assert = { number, bool, bytes, hash, exists, output };
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (assert);
//# sourceMappingURL=_assert.js.map

/***/ }),

/***/ "./node_modules/web3-utils/node_modules/@noble/hashes/esm/_u64.js":
/*!************************************************************************!*\
  !*** ./node_modules/web3-utils/node_modules/@noble/hashes/esm/_u64.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   add: () => (/* binding */ add),
/* harmony export */   add3H: () => (/* binding */ add3H),
/* harmony export */   add3L: () => (/* binding */ add3L),
/* harmony export */   add4H: () => (/* binding */ add4H),
/* harmony export */   add4L: () => (/* binding */ add4L),
/* harmony export */   add5H: () => (/* binding */ add5H),
/* harmony export */   add5L: () => (/* binding */ add5L),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   fromBig: () => (/* binding */ fromBig),
/* harmony export */   rotlBH: () => (/* binding */ rotlBH),
/* harmony export */   rotlBL: () => (/* binding */ rotlBL),
/* harmony export */   rotlSH: () => (/* binding */ rotlSH),
/* harmony export */   rotlSL: () => (/* binding */ rotlSL),
/* harmony export */   rotr32H: () => (/* binding */ rotr32H),
/* harmony export */   rotr32L: () => (/* binding */ rotr32L),
/* harmony export */   rotrBH: () => (/* binding */ rotrBH),
/* harmony export */   rotrBL: () => (/* binding */ rotrBL),
/* harmony export */   rotrSH: () => (/* binding */ rotrSH),
/* harmony export */   rotrSL: () => (/* binding */ rotrSL),
/* harmony export */   shrSH: () => (/* binding */ shrSH),
/* harmony export */   shrSL: () => (/* binding */ shrSL),
/* harmony export */   split: () => (/* binding */ split),
/* harmony export */   toBig: () => (/* binding */ toBig)
/* harmony export */ });
const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);
const _32n = /* @__PURE__ */ BigInt(32);
// We are not using BigUint64Array, because they are extremely slow as per 2022
function fromBig(n, le = false) {
    if (le)
        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };
    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };
}
function split(lst, le = false) {
    let Ah = new Uint32Array(lst.length);
    let Al = new Uint32Array(lst.length);
    for (let i = 0; i < lst.length; i++) {
        const { h, l } = fromBig(lst[i], le);
        [Ah[i], Al[i]] = [h, l];
    }
    return [Ah, Al];
}
const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);
// for Shift in [0, 32)
const shrSH = (h, _l, s) => h >>> s;
const shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);
// Right rotate for Shift in [1, 32)
const rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));
const rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);
// Right rotate for Shift in (32, 64), NOTE: 32 is special case.
const rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));
const rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));
// Right rotate for shift===32 (just swaps l&h)
const rotr32H = (_h, l) => l;
const rotr32L = (h, _l) => h;
// Left rotate for Shift in [1, 32)
const rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));
const rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));
// Left rotate for Shift in (32, 64), NOTE: 32 is special case.
const rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));
const rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));
// JS uses 32-bit signed integers for bitwise operations which means we cannot
// simple take carry out of low bit sum by shift, we need to use division.
function add(Ah, Al, Bh, Bl) {
    const l = (Al >>> 0) + (Bl >>> 0);
    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };
}
// Addition with more than 2 elements
const add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);
const add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;
const add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);
const add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;
const add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);
const add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;
// prettier-ignore

// prettier-ignore
const u64 = {
    fromBig, split, toBig,
    shrSH, shrSL,
    rotrSH, rotrSL, rotrBH, rotrBL,
    rotr32H, rotr32L,
    rotlSH, rotlSL, rotlBH, rotlBL,
    add, add3L, add3H, add4L, add4H, add5H, add5L,
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (u64);
//# sourceMappingURL=_u64.js.map

/***/ }),

/***/ "./node_modules/web3-utils/node_modules/@noble/hashes/esm/crypto.js":
/*!**************************************************************************!*\
  !*** ./node_modules/web3-utils/node_modules/@noble/hashes/esm/crypto.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   crypto: () => (/* binding */ crypto)
/* harmony export */ });
const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;
//# sourceMappingURL=crypto.js.map

/***/ }),

/***/ "./node_modules/web3-utils/node_modules/@noble/hashes/esm/sha3.js":
/*!************************************************************************!*\
  !*** ./node_modules/web3-utils/node_modules/@noble/hashes/esm/sha3.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Keccak: () => (/* binding */ Keccak),
/* harmony export */   keccakP: () => (/* binding */ keccakP),
/* harmony export */   keccak_224: () => (/* binding */ keccak_224),
/* harmony export */   keccak_256: () => (/* binding */ keccak_256),
/* harmony export */   keccak_384: () => (/* binding */ keccak_384),
/* harmony export */   keccak_512: () => (/* binding */ keccak_512),
/* harmony export */   sha3_224: () => (/* binding */ sha3_224),
/* harmony export */   sha3_256: () => (/* binding */ sha3_256),
/* harmony export */   sha3_384: () => (/* binding */ sha3_384),
/* harmony export */   sha3_512: () => (/* binding */ sha3_512),
/* harmony export */   shake128: () => (/* binding */ shake128),
/* harmony export */   shake256: () => (/* binding */ shake256)
/* harmony export */ });
/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_assert.js */ "./node_modules/web3-utils/node_modules/@noble/hashes/esm/_assert.js");
/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_u64.js */ "./node_modules/web3-utils/node_modules/@noble/hashes/esm/_u64.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-utils/node_modules/@noble/hashes/esm/utils.js");



// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.
// It's called a sponge function.
// Various per round constants calculations
const SHA3_PI = [];
const SHA3_ROTL = [];
const _SHA3_IOTA = [];
const _0n = /* @__PURE__ */ BigInt(0);
const _1n = /* @__PURE__ */ BigInt(1);
const _2n = /* @__PURE__ */ BigInt(2);
const _7n = /* @__PURE__ */ BigInt(7);
const _256n = /* @__PURE__ */ BigInt(256);
const _0x71n = /* @__PURE__ */ BigInt(0x71);
for (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {
    // Pi
    [x, y] = [y, (2 * x + 3 * y) % 5];
    SHA3_PI.push(2 * (5 * y + x));
    // Rotational
    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);
    // Iota
    let t = _0n;
    for (let j = 0; j < 7; j++) {
        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;
        if (R & _2n)
            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);
    }
    _SHA3_IOTA.push(t);
}
const [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ (0,_u64_js__WEBPACK_IMPORTED_MODULE_1__.split)(_SHA3_IOTA, true);
// Left rotation (without 0, 32, 64)
const rotlH = (h, l, s) => (s > 32 ? (0,_u64_js__WEBPACK_IMPORTED_MODULE_1__.rotlBH)(h, l, s) : (0,_u64_js__WEBPACK_IMPORTED_MODULE_1__.rotlSH)(h, l, s));
const rotlL = (h, l, s) => (s > 32 ? (0,_u64_js__WEBPACK_IMPORTED_MODULE_1__.rotlBL)(h, l, s) : (0,_u64_js__WEBPACK_IMPORTED_MODULE_1__.rotlSL)(h, l, s));
// Same as keccakf1600, but allows to skip some rounds
function keccakP(s, rounds = 24) {
    const B = new Uint32Array(5 * 2);
    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)
    for (let round = 24 - rounds; round < 24; round++) {
        // Theta θ
        for (let x = 0; x < 10; x++)
            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];
        for (let x = 0; x < 10; x += 2) {
            const idx1 = (x + 8) % 10;
            const idx0 = (x + 2) % 10;
            const B0 = B[idx0];
            const B1 = B[idx0 + 1];
            const Th = rotlH(B0, B1, 1) ^ B[idx1];
            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];
            for (let y = 0; y < 50; y += 10) {
                s[x + y] ^= Th;
                s[x + y + 1] ^= Tl;
            }
        }
        // Rho (ρ) and Pi (π)
        let curH = s[2];
        let curL = s[3];
        for (let t = 0; t < 24; t++) {
            const shift = SHA3_ROTL[t];
            const Th = rotlH(curH, curL, shift);
            const Tl = rotlL(curH, curL, shift);
            const PI = SHA3_PI[t];
            curH = s[PI];
            curL = s[PI + 1];
            s[PI] = Th;
            s[PI + 1] = Tl;
        }
        // Chi (χ)
        for (let y = 0; y < 50; y += 10) {
            for (let x = 0; x < 10; x++)
                B[x] = s[y + x];
            for (let x = 0; x < 10; x++)
                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];
        }
        // Iota (ι)
        s[0] ^= SHA3_IOTA_H[round];
        s[1] ^= SHA3_IOTA_L[round];
    }
    B.fill(0);
}
class Keccak extends _utils_js__WEBPACK_IMPORTED_MODULE_2__.Hash {
    // NOTE: we accept arguments in bytes instead of bits here.
    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {
        super();
        this.blockLen = blockLen;
        this.suffix = suffix;
        this.outputLen = outputLen;
        this.enableXOF = enableXOF;
        this.rounds = rounds;
        this.pos = 0;
        this.posOut = 0;
        this.finished = false;
        this.destroyed = false;
        // Can be passed from user as dkLen
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.number)(outputLen);
        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes
        if (0 >= this.blockLen || this.blockLen >= 200)
            throw new Error('Sha3 supports only keccak-f1600 function');
        this.state = new Uint8Array(200);
        this.state32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.u32)(this.state);
    }
    keccak() {
        if (!_utils_js__WEBPACK_IMPORTED_MODULE_2__.isLE)
            (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.byteSwap32)(this.state32);
        keccakP(this.state32, this.rounds);
        if (!_utils_js__WEBPACK_IMPORTED_MODULE_2__.isLE)
            (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.byteSwap32)(this.state32);
        this.posOut = 0;
        this.pos = 0;
    }
    update(data) {
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.exists)(this);
        const { blockLen, state } = this;
        data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(data);
        const len = data.length;
        for (let pos = 0; pos < len;) {
            const take = Math.min(blockLen - this.pos, len - pos);
            for (let i = 0; i < take; i++)
                state[this.pos++] ^= data[pos++];
            if (this.pos === blockLen)
                this.keccak();
        }
        return this;
    }
    finish() {
        if (this.finished)
            return;
        this.finished = true;
        const { state, suffix, pos, blockLen } = this;
        // Do the padding
        state[pos] ^= suffix;
        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)
            this.keccak();
        state[blockLen - 1] ^= 0x80;
        this.keccak();
    }
    writeInto(out) {
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.exists)(this, false);
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.bytes)(out);
        this.finish();
        const bufferOut = this.state;
        const { blockLen } = this;
        for (let pos = 0, len = out.length; pos < len;) {
            if (this.posOut >= blockLen)
                this.keccak();
            const take = Math.min(blockLen - this.posOut, len - pos);
            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);
            this.posOut += take;
            pos += take;
        }
        return out;
    }
    xofInto(out) {
        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF
        if (!this.enableXOF)
            throw new Error('XOF is not possible for this instance');
        return this.writeInto(out);
    }
    xof(bytes) {
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.number)(bytes);
        return this.xofInto(new Uint8Array(bytes));
    }
    digestInto(out) {
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.output)(out, this);
        if (this.finished)
            throw new Error('digest() was already called');
        this.writeInto(out);
        this.destroy();
        return out;
    }
    digest() {
        return this.digestInto(new Uint8Array(this.outputLen));
    }
    destroy() {
        this.destroyed = true;
        this.state.fill(0);
    }
    _cloneInto(to) {
        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;
        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));
        to.state32.set(this.state32);
        to.pos = this.pos;
        to.posOut = this.posOut;
        to.finished = this.finished;
        to.rounds = rounds;
        // Suffix can change in cSHAKE
        to.suffix = suffix;
        to.outputLen = outputLen;
        to.enableXOF = enableXOF;
        to.destroyed = this.destroyed;
        return to;
    }
}
const gen = (suffix, blockLen, outputLen) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));
const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);
/**
 * SHA3-256 hash function
 * @param message - that would be hashed
 */
const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);
const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);
const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);
const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);
/**
 * keccak-256 hash function. Different from SHA3-256.
 * @param message - that would be hashed
 */
const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);
const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);
const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);
const genShake = (suffix, blockLen, outputLen) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapXOFConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));
const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);
const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);
//# sourceMappingURL=sha3.js.map

/***/ }),

/***/ "./node_modules/web3-utils/node_modules/@noble/hashes/esm/utils.js":
/*!*************************************************************************!*\
  !*** ./node_modules/web3-utils/node_modules/@noble/hashes/esm/utils.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Hash: () => (/* binding */ Hash),
/* harmony export */   asyncLoop: () => (/* binding */ asyncLoop),
/* harmony export */   byteSwap: () => (/* binding */ byteSwap),
/* harmony export */   byteSwap32: () => (/* binding */ byteSwap32),
/* harmony export */   byteSwapIfBE: () => (/* binding */ byteSwapIfBE),
/* harmony export */   bytesToHex: () => (/* binding */ bytesToHex),
/* harmony export */   checkOpts: () => (/* binding */ checkOpts),
/* harmony export */   concatBytes: () => (/* binding */ concatBytes),
/* harmony export */   createView: () => (/* binding */ createView),
/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),
/* harmony export */   isBytes: () => (/* binding */ isBytes),
/* harmony export */   isLE: () => (/* binding */ isLE),
/* harmony export */   nextTick: () => (/* binding */ nextTick),
/* harmony export */   randomBytes: () => (/* binding */ randomBytes),
/* harmony export */   rotl: () => (/* binding */ rotl),
/* harmony export */   rotr: () => (/* binding */ rotr),
/* harmony export */   toBytes: () => (/* binding */ toBytes),
/* harmony export */   u32: () => (/* binding */ u32),
/* harmony export */   u8: () => (/* binding */ u8),
/* harmony export */   utf8ToBytes: () => (/* binding */ utf8ToBytes),
/* harmony export */   wrapConstructor: () => (/* binding */ wrapConstructor),
/* harmony export */   wrapConstructorWithOpts: () => (/* binding */ wrapConstructorWithOpts),
/* harmony export */   wrapXOFConstructorWithOpts: () => (/* binding */ wrapXOFConstructorWithOpts)
/* harmony export */ });
/* harmony import */ var _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/crypto */ "./node_modules/web3-utils/node_modules/@noble/hashes/esm/crypto.js");
/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_assert.js */ "./node_modules/web3-utils/node_modules/@noble/hashes/esm/_assert.js");
/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.
// node.js versions earlier than v19 don't declare it in global scope.
// For node.js, package.json#exports field mapping rewrites import
// from `crypto` to `cryptoNode`, which imports native module.
// Makes the utils un-importable in browsers without a bundler.
// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.


// export { isBytes } from './_assert.js';
// We can't reuse isBytes from _assert, because somehow this causes huge perf issues
function isBytes(a) {
    return (a instanceof Uint8Array ||
        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));
}
// Cast array to different type
const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);
const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));
// Cast array to view
const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);
// The rotate right (circular right shift) operation for uint32
const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);
// The rotate left (circular left shift) operation for uint32
const rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);
const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;
// The byte swap operation for uint32
const byteSwap = (word) => ((word << 24) & 0xff000000) |
    ((word << 8) & 0xff0000) |
    ((word >>> 8) & 0xff00) |
    ((word >>> 24) & 0xff);
// Conditionally byte swap if on a big-endian platform
const byteSwapIfBE = isLE ? (n) => n : (n) => byteSwap(n);
// In place byte swap for Uint32Array
function byteSwap32(arr) {
    for (let i = 0; i < arr.length; i++) {
        arr[i] = byteSwap(arr[i]);
    }
}
// Array where index 0xf0 (240) is mapped to string 'f0'
const hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));
/**
 * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'
 */
function bytesToHex(bytes) {
    (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.bytes)(bytes);
    // pre-caching improves the speed 6x
    let hex = '';
    for (let i = 0; i < bytes.length; i++) {
        hex += hexes[bytes[i]];
    }
    return hex;
}
// We use optimized technique to convert hex string to byte array
const asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };
function asciiToBase16(char) {
    if (char >= asciis._0 && char <= asciis._9)
        return char - asciis._0;
    if (char >= asciis._A && char <= asciis._F)
        return char - (asciis._A - 10);
    if (char >= asciis._a && char <= asciis._f)
        return char - (asciis._a - 10);
    return;
}
/**
 * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])
 */
function hexToBytes(hex) {
    if (typeof hex !== 'string')
        throw new Error('hex string expected, got ' + typeof hex);
    const hl = hex.length;
    const al = hl / 2;
    if (hl % 2)
        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);
    const array = new Uint8Array(al);
    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {
        const n1 = asciiToBase16(hex.charCodeAt(hi));
        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));
        if (n1 === undefined || n2 === undefined) {
            const char = hex[hi] + hex[hi + 1];
            throw new Error('hex string expected, got non-hex character "' + char + '" at index ' + hi);
        }
        array[ai] = n1 * 16 + n2;
    }
    return array;
}
// There is no setImmediate in browser and setTimeout is slow.
// call of async fn will return Promise, which will be fullfiled only on
// next scheduler queue processing step and this is exactly what we need.
const nextTick = async () => { };
// Returns control to thread each 'tick' ms to avoid blocking
async function asyncLoop(iters, tick, cb) {
    let ts = Date.now();
    for (let i = 0; i < iters; i++) {
        cb(i);
        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too
        const diff = Date.now() - ts;
        if (diff >= 0 && diff < tick)
            continue;
        await nextTick();
        ts += diff;
    }
}
/**
 * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])
 */
function utf8ToBytes(str) {
    if (typeof str !== 'string')
        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);
    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809
}
/**
 * Normalizes (non-hex) string or Uint8Array to Uint8Array.
 * Warning: when Uint8Array is passed, it would NOT get copied.
 * Keep in mind for future mutable operations.
 */
function toBytes(data) {
    if (typeof data === 'string')
        data = utf8ToBytes(data);
    (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.bytes)(data);
    return data;
}
/**
 * Copies several Uint8Arrays into one.
 */
function concatBytes(...arrays) {
    let sum = 0;
    for (let i = 0; i < arrays.length; i++) {
        const a = arrays[i];
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.bytes)(a);
        sum += a.length;
    }
    const res = new Uint8Array(sum);
    for (let i = 0, pad = 0; i < arrays.length; i++) {
        const a = arrays[i];
        res.set(a, pad);
        pad += a.length;
    }
    return res;
}
// For runtime check if class implements interface
class Hash {
    // Safe version that clones internal state
    clone() {
        return this._cloneInto();
    }
}
const toStr = {}.toString;
function checkOpts(defaults, opts) {
    if (opts !== undefined && toStr.call(opts) !== '[object Object]')
        throw new Error('Options should be object or undefined');
    const merged = Object.assign(defaults, opts);
    return merged;
}
function wrapConstructor(hashCons) {
    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();
    const tmp = hashCons();
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = () => hashCons();
    return hashC;
}
function wrapConstructorWithOpts(hashCons) {
    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();
    const tmp = hashCons({});
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = (opts) => hashCons(opts);
    return hashC;
}
function wrapXOFConstructorWithOpts(hashCons) {
    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();
    const tmp = hashCons({});
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = (opts) => hashCons(opts);
    return hashC;
}
/**
 * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.
 */
function randomBytes(bytesLength = 32) {
    if (_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto && typeof _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.getRandomValues === 'function') {
        return _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.getRandomValues(new Uint8Array(bytesLength));
    }
    throw new Error('crypto.getRandomValues must be defined');
}
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "./node_modules/web3-utils/node_modules/ethereum-cryptography/esm/keccak.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/web3-utils/node_modules/ethereum-cryptography/esm/keccak.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   keccak224: () => (/* binding */ keccak224),
/* harmony export */   keccak256: () => (/* binding */ keccak256),
/* harmony export */   keccak384: () => (/* binding */ keccak384),
/* harmony export */   keccak512: () => (/* binding */ keccak512)
/* harmony export */ });
/* harmony import */ var _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/sha3 */ "./node_modules/web3-utils/node_modules/@noble/hashes/esm/sha3.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-utils/node_modules/ethereum-cryptography/esm/utils.js");


const keccak224 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapHash)(_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__.keccak_224);
const keccak256 = (() => {
    const k = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapHash)(_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__.keccak_256);
    k.create = _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__.keccak_256.create;
    return k;
})();
const keccak384 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapHash)(_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__.keccak_384);
const keccak512 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapHash)(_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__.keccak_512);


/***/ }),

/***/ "./node_modules/web3-utils/node_modules/ethereum-cryptography/esm/random.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/web3-utils/node_modules/ethereum-cryptography/esm/random.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getRandomBytes: () => (/* binding */ getRandomBytes),
/* harmony export */   getRandomBytesSync: () => (/* binding */ getRandomBytesSync)
/* harmony export */ });
/* harmony import */ var _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/utils */ "./node_modules/web3-utils/node_modules/@noble/hashes/esm/utils.js");

function getRandomBytesSync(bytes) {
    return (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_0__.randomBytes)(bytes);
}
async function getRandomBytes(bytes) {
    return (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_0__.randomBytes)(bytes);
}


/***/ }),

/***/ "./node_modules/web3-utils/node_modules/ethereum-cryptography/esm/utils.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/web3-utils/node_modules/ethereum-cryptography/esm/utils.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   assertBool: () => (/* binding */ assertBool),
/* harmony export */   assertBytes: () => (/* binding */ assertBytes),
/* harmony export */   bytesToHex: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex),
/* harmony export */   bytesToUtf8: () => (/* binding */ bytesToUtf8),
/* harmony export */   concatBytes: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.concatBytes),
/* harmony export */   createView: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.createView),
/* harmony export */   crypto: () => (/* binding */ crypto),
/* harmony export */   equalsBytes: () => (/* binding */ equalsBytes),
/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),
/* harmony export */   toHex: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex),
/* harmony export */   utf8ToBytes: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes),
/* harmony export */   wrapHash: () => (/* binding */ wrapHash)
/* harmony export */ });
/* harmony import */ var _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/_assert */ "./node_modules/web3-utils/node_modules/@noble/hashes/esm/_assert.js");
/* harmony import */ var _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/utils */ "./node_modules/web3-utils/node_modules/@noble/hashes/esm/utils.js");


const assertBool = _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__["default"].bool;
const assertBytes = _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__["default"].bytes;


// buf.toString('utf8') -> bytesToUtf8(buf)
function bytesToUtf8(data) {
    if (!(data instanceof Uint8Array)) {
        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);
    }
    return new TextDecoder().decode(data);
}
function hexToBytes(data) {
    const sliced = data.startsWith("0x") ? data.substring(2) : data;
    return (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(sliced);
}
// buf.equals(buf2) -> equalsBytes(buf, buf2)
function equalsBytes(a, b) {
    if (a.length !== b.length) {
        return false;
    }
    for (let i = 0; i < a.length; i++) {
        if (a[i] !== b[i]) {
            return false;
        }
    }
    return true;
}
// Internal utils
function wrapHash(hash) {
    return (msg) => {
        _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__["default"].bytes(msg);
        return hash(msg);
    };
}
// TODO(v3): switch away from node crypto, remove this unnecessary variable.
const crypto = (() => {
    const webCrypto = typeof globalThis === "object" && "crypto" in globalThis ? globalThis.crypto : undefined;
    const nodeRequire = typeof module !== "undefined" &&
        typeof module.require === "function" &&
        module.require.bind(module);
    return {
        node: nodeRequire && !webCrypto ? nodeRequire("crypto") : undefined,
        web: webCrypto
    };
})();


/***/ }),

/***/ "./node_modules/web3-utils/node_modules/eventemitter3/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/web3-utils/node_modules/eventemitter3/index.js ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";


var has = Object.prototype.hasOwnProperty
  , prefix = '~';

/**
 * Constructor to create a storage for our `EE` objects.
 * An `Events` instance is a plain object whose properties are event names.
 *
 * @constructor
 * @private
 */
function Events() {}

//
// We try to not inherit from `Object.prototype`. In some engines creating an
// instance in this way is faster than calling `Object.create(null)` directly.
// If `Object.create(null)` is not supported we prefix the event names with a
// character to make sure that the built-in object properties are not
// overridden or used as an attack vector.
//
if (Object.create) {
  Events.prototype = Object.create(null);

  //
  // This hack is needed because the `__proto__` property is still inherited in
  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.
  //
  if (!new Events().__proto__) prefix = false;
}

/**
 * Representation of a single event listener.
 *
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} [once=false] Specify if the listener is a one-time listener.
 * @constructor
 * @private
 */
function EE(fn, context, once) {
  this.fn = fn;
  this.context = context;
  this.once = once || false;
}

/**
 * Add a listener for a given event.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} once Specify if the listener is a one-time listener.
 * @returns {EventEmitter}
 * @private
 */
function addListener(emitter, event, fn, context, once) {
  if (typeof fn !== 'function') {
    throw new TypeError('The listener must be a function');
  }

  var listener = new EE(fn, context || emitter, once)
    , evt = prefix ? prefix + event : event;

  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;
  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);
  else emitter._events[evt] = [emitter._events[evt], listener];

  return emitter;
}

/**
 * Clear event by name.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} evt The Event name.
 * @private
 */
function clearEvent(emitter, evt) {
  if (--emitter._eventsCount === 0) emitter._events = new Events();
  else delete emitter._events[evt];
}

/**
 * Minimal `EventEmitter` interface that is molded against the Node.js
 * `EventEmitter` interface.
 *
 * @constructor
 * @public
 */
function EventEmitter() {
  this._events = new Events();
  this._eventsCount = 0;
}

/**
 * Return an array listing the events for which the emitter has registered
 * listeners.
 *
 * @returns {Array}
 * @public
 */
EventEmitter.prototype.eventNames = function eventNames() {
  var names = []
    , events
    , name;

  if (this._eventsCount === 0) return names;

  for (name in (events = this._events)) {
    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);
  }

  if (Object.getOwnPropertySymbols) {
    return names.concat(Object.getOwnPropertySymbols(events));
  }

  return names;
};

/**
 * Return the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Array} The registered listeners.
 * @public
 */
EventEmitter.prototype.listeners = function listeners(event) {
  var evt = prefix ? prefix + event : event
    , handlers = this._events[evt];

  if (!handlers) return [];
  if (handlers.fn) return [handlers.fn];

  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {
    ee[i] = handlers[i].fn;
  }

  return ee;
};

/**
 * Return the number of listeners listening to a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Number} The number of listeners.
 * @public
 */
EventEmitter.prototype.listenerCount = function listenerCount(event) {
  var evt = prefix ? prefix + event : event
    , listeners = this._events[evt];

  if (!listeners) return 0;
  if (listeners.fn) return 1;
  return listeners.length;
};

/**
 * Calls each of the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Boolean} `true` if the event had listeners, else `false`.
 * @public
 */
EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
  var evt = prefix ? prefix + event : event;

  if (!this._events[evt]) return false;

  var listeners = this._events[evt]
    , len = arguments.length
    , args
    , i;

  if (listeners.fn) {
    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);

    switch (len) {
      case 1: return listeners.fn.call(listeners.context), true;
      case 2: return listeners.fn.call(listeners.context, a1), true;
      case 3: return listeners.fn.call(listeners.context, a1, a2), true;
      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;
      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
    }

    for (i = 1, args = new Array(len -1); i < len; i++) {
      args[i - 1] = arguments[i];
    }

    listeners.fn.apply(listeners.context, args);
  } else {
    var length = listeners.length
      , j;

    for (i = 0; i < length; i++) {
      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);

      switch (len) {
        case 1: listeners[i].fn.call(listeners[i].context); break;
        case 2: listeners[i].fn.call(listeners[i].context, a1); break;
        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;
        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;
        default:
          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {
            args[j - 1] = arguments[j];
          }

          listeners[i].fn.apply(listeners[i].context, args);
      }
    }
  }

  return true;
};

/**
 * Add a listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.on = function on(event, fn, context) {
  return addListener(this, event, fn, context, false);
};

/**
 * Add a one-time listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.once = function once(event, fn, context) {
  return addListener(this, event, fn, context, true);
};

/**
 * Remove the listeners of a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn Only remove the listeners that match this function.
 * @param {*} context Only remove the listeners that have this context.
 * @param {Boolean} once Only remove one-time listeners.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
  var evt = prefix ? prefix + event : event;

  if (!this._events[evt]) return this;
  if (!fn) {
    clearEvent(this, evt);
    return this;
  }

  var listeners = this._events[evt];

  if (listeners.fn) {
    if (
      listeners.fn === fn &&
      (!once || listeners.once) &&
      (!context || listeners.context === context)
    ) {
      clearEvent(this, evt);
    }
  } else {
    for (var i = 0, events = [], length = listeners.length; i < length; i++) {
      if (
        listeners[i].fn !== fn ||
        (once && !listeners[i].once) ||
        (context && listeners[i].context !== context)
      ) {
        events.push(listeners[i]);
      }
    }

    //
    // Reset the array, or remove it completely if we have no more listeners.
    //
    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;
    else clearEvent(this, evt);
  }

  return this;
};

/**
 * Remove all listeners, or those of the specified event.
 *
 * @param {(String|Symbol)} [event] The event name.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
  var evt;

  if (event) {
    evt = prefix ? prefix + event : event;
    if (this._events[evt]) clearEvent(this, evt);
  } else {
    this._events = new Events();
    this._eventsCount = 0;
  }

  return this;
};

//
// Alias methods names because people roll like that.
//
EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.addListener = EventEmitter.prototype.on;

//
// Expose the prefix.
//
EventEmitter.prefixed = prefix;

//
// Allow `EventEmitter` to be imported as module namespace.
//
EventEmitter.EventEmitter = EventEmitter;

//
// Expose the module.
//
if (true) {
  module.exports = EventEmitter;
}


/***/ }),

/***/ "./node_modules/web3-utils/node_modules/eventemitter3/index.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/web3-utils/node_modules/eventemitter3/index.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EventEmitter: () => (/* reexport default export from named module */ _index_js__WEBPACK_IMPORTED_MODULE_0__),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ "./node_modules/web3-utils/node_modules/eventemitter3/index.js");



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_index_js__WEBPACK_IMPORTED_MODULE_0__);


/***/ }),

/***/ "./node_modules/web3-validator/lib/esm/constants.js":
/*!**********************************************************!*\
  !*** ./node_modules/web3-validator/lib/esm/constants.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   VALID_ETH_BASE_TYPES: () => (/* binding */ VALID_ETH_BASE_TYPES)
/* harmony export */ });
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
const VALID_ETH_BASE_TYPES = ['bool', 'int', 'uint', 'bytes', 'string', 'address', 'tuple'];
//# sourceMappingURL=constants.js.map

/***/ }),

/***/ "./node_modules/web3-validator/lib/esm/default_validator.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-validator/lib/esm/default_validator.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   validator: () => (/* binding */ validator)
/* harmony export */ });
/* harmony import */ var _web3_validator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./web3_validator.js */ "./node_modules/web3-validator/lib/esm/web3_validator.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

const validator = new _web3_validator_js__WEBPACK_IMPORTED_MODULE_0__.Web3Validator();
//# sourceMappingURL=default_validator.js.map

/***/ }),

/***/ "./node_modules/web3-validator/lib/esm/errors.js":
/*!*******************************************************!*\
  !*** ./node_modules/web3-validator/lib/esm/errors.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Web3ValidatorError: () => (/* binding */ Web3ValidatorError)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

const errorFormatter = (error) => {
    if (error.message) {
        return error.message;
    }
    return 'unspecified error';
};
class Web3ValidatorError extends web3_errors__WEBPACK_IMPORTED_MODULE_0__.BaseWeb3Error {
    constructor(errors) {
        super();
        this.code = web3_errors__WEBPACK_IMPORTED_MODULE_0__.ERR_VALIDATION;
        this.errors = errors;
        super.message = `Web3 validator found ${errors.length} error[s]:\n${this._compileErrors().join('\n')}`;
    }
    _compileErrors() {
        return this.errors.map(errorFormatter);
    }
}
//# sourceMappingURL=errors.js.map

/***/ }),

/***/ "./node_modules/web3-validator/lib/esm/formats.js":
/*!********************************************************!*\
  !*** ./node_modules/web3-validator/lib/esm/formats.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _validation_address_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validation/address.js */ "./node_modules/web3-validator/lib/esm/validation/address.js");
/* harmony import */ var _validation_block_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./validation/block.js */ "./node_modules/web3-validator/lib/esm/validation/block.js");
/* harmony import */ var _validation_bloom_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./validation/bloom.js */ "./node_modules/web3-validator/lib/esm/validation/bloom.js");
/* harmony import */ var _validation_boolean_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./validation/boolean.js */ "./node_modules/web3-validator/lib/esm/validation/boolean.js");
/* harmony import */ var _validation_bytes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./validation/bytes.js */ "./node_modules/web3-validator/lib/esm/validation/bytes.js");
/* harmony import */ var _validation_filter_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./validation/filter.js */ "./node_modules/web3-validator/lib/esm/validation/filter.js");
/* harmony import */ var _validation_string_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./validation/string.js */ "./node_modules/web3-validator/lib/esm/validation/string.js");
/* harmony import */ var _validation_numbers_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./validation/numbers.js */ "./node_modules/web3-validator/lib/esm/validation/numbers.js");








const formats = {
    address: (data) => (0,_validation_address_js__WEBPACK_IMPORTED_MODULE_0__.isAddress)(data),
    bloom: (data) => (0,_validation_bloom_js__WEBPACK_IMPORTED_MODULE_2__.isBloom)(data),
    blockNumber: (data) => (0,_validation_block_js__WEBPACK_IMPORTED_MODULE_1__.isBlockNumber)(data),
    blockTag: (data) => (0,_validation_block_js__WEBPACK_IMPORTED_MODULE_1__.isBlockTag)(data),
    blockNumberOrTag: (data) => (0,_validation_block_js__WEBPACK_IMPORTED_MODULE_1__.isBlockNumberOrTag)(data),
    bool: (data) => (0,_validation_boolean_js__WEBPACK_IMPORTED_MODULE_3__.isBoolean)(data),
    bytes: (data) => (0,_validation_bytes_js__WEBPACK_IMPORTED_MODULE_4__.isBytes)(data),
    filter: (data) => (0,_validation_filter_js__WEBPACK_IMPORTED_MODULE_5__.isFilterObject)(data),
    hex: (data) => (0,_validation_string_js__WEBPACK_IMPORTED_MODULE_6__.isHexStrict)(data),
    uint: (data) => (0,_validation_numbers_js__WEBPACK_IMPORTED_MODULE_7__.isUInt)(data),
    int: (data) => (0,_validation_numbers_js__WEBPACK_IMPORTED_MODULE_7__.isInt)(data),
    number: (data) => (0,_validation_numbers_js__WEBPACK_IMPORTED_MODULE_7__.isNumber)(data),
    string: (data) => (0,_validation_string_js__WEBPACK_IMPORTED_MODULE_6__.isString)(data),
};
// generate formats for all numbers types
for (let bitSize = 8; bitSize <= 256; bitSize += 8) {
    formats[`int${bitSize}`] = data => (0,_validation_numbers_js__WEBPACK_IMPORTED_MODULE_7__.isInt)(data, { bitSize });
    formats[`uint${bitSize}`] = data => (0,_validation_numbers_js__WEBPACK_IMPORTED_MODULE_7__.isUInt)(data, { bitSize });
}
// generate bytes
for (let size = 1; size <= 32; size += 1) {
    formats[`bytes${size}`] = data => (0,_validation_bytes_js__WEBPACK_IMPORTED_MODULE_4__.isBytes)(data, { size });
}
formats.bytes256 = formats.bytes;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (formats);
//# sourceMappingURL=formats.js.map

/***/ }),

/***/ "./node_modules/web3-validator/lib/esm/index.js":
/*!******************************************************!*\
  !*** ./node_modules/web3-validator/lib/esm/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   VALID_ETH_BASE_TYPES: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_5__.VALID_ETH_BASE_TYPES),
/* harmony export */   Web3Validator: () => (/* reexport safe */ _web3_validator_js__WEBPACK_IMPORTED_MODULE_0__.Web3Validator),
/* harmony export */   Web3ValidatorError: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_4__.Web3ValidatorError),
/* harmony export */   bigintPower: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.bigintPower),
/* harmony export */   checkAddressCheckSum: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.checkAddressCheckSum),
/* harmony export */   isAddress: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isAddress),
/* harmony export */   isBigInt: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isBigInt),
/* harmony export */   isBlockNumber: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isBlockNumber),
/* harmony export */   isBlockNumberOrTag: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isBlockNumberOrTag),
/* harmony export */   isBlockTag: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isBlockTag),
/* harmony export */   isBloom: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isBloom),
/* harmony export */   isBoolean: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isBoolean),
/* harmony export */   isBytes: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isBytes),
/* harmony export */   isContractAddressInBloom: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isContractAddressInBloom),
/* harmony export */   isFilterObject: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isFilterObject),
/* harmony export */   isHex: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isHex),
/* harmony export */   isHexPrefixed: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isHexPrefixed),
/* harmony export */   isHexStrict: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isHexStrict),
/* harmony export */   isHexString: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isHexString),
/* harmony export */   isHexString32Bytes: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isHexString32Bytes),
/* harmony export */   isHexString8Bytes: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isHexString8Bytes),
/* harmony export */   isInBloom: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isInBloom),
/* harmony export */   isInt: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isInt),
/* harmony export */   isNullish: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isNullish),
/* harmony export */   isNumber: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isNumber),
/* harmony export */   isObject: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isObject),
/* harmony export */   isString: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isString),
/* harmony export */   isTopic: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isTopic),
/* harmony export */   isTopicInBloom: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isTopicInBloom),
/* harmony export */   isUInt: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isUInt),
/* harmony export */   isUint8Array: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isUint8Array),
/* harmony export */   isUserEthereumAddressInBloom: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isUserEthereumAddressInBloom),
/* harmony export */   isValidEthBaseType: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.isValidEthBaseType),
/* harmony export */   utils: () => (/* reexport module object */ _utils_js__WEBPACK_IMPORTED_MODULE_3__),
/* harmony export */   validateNoLeadingZeroes: () => (/* reexport safe */ _validation_index_js__WEBPACK_IMPORTED_MODULE_6__.validateNoLeadingZeroes),
/* harmony export */   validator: () => (/* reexport safe */ _default_validator_js__WEBPACK_IMPORTED_MODULE_1__.validator)
/* harmony export */ });
/* harmony import */ var _web3_validator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./web3_validator.js */ "./node_modules/web3-validator/lib/esm/web3_validator.js");
/* harmony import */ var _default_validator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./default_validator.js */ "./node_modules/web3-validator/lib/esm/default_validator.js");
/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types.js */ "./node_modules/web3-validator/lib/esm/types.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-validator/lib/esm/utils.js");
/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./errors.js */ "./node_modules/web3-validator/lib/esm/errors.js");
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constants.js */ "./node_modules/web3-validator/lib/esm/constants.js");
/* harmony import */ var _validation_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./validation/index.js */ "./node_modules/web3-validator/lib/esm/validation/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/







//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/web3-validator/lib/esm/types.js":
/*!******************************************************!*\
  !*** ./node_modules/web3-validator/lib/esm/types.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/web3-validator/lib/esm/utils.js":
/*!******************************************************!*\
  !*** ./node_modules/web3-validator/lib/esm/utils.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   abiSchemaToJsonSchema: () => (/* binding */ abiSchemaToJsonSchema),
/* harmony export */   codePointToInt: () => (/* binding */ codePointToInt),
/* harmony export */   ensureIfUint8Array: () => (/* binding */ ensureIfUint8Array),
/* harmony export */   ethAbiToJsonSchema: () => (/* binding */ ethAbiToJsonSchema),
/* harmony export */   fetchArrayElement: () => (/* binding */ fetchArrayElement),
/* harmony export */   hexToNumber: () => (/* binding */ hexToNumber),
/* harmony export */   hexToUint8Array: () => (/* binding */ hexToUint8Array),
/* harmony export */   numberToHex: () => (/* binding */ numberToHex),
/* harmony export */   padLeft: () => (/* binding */ padLeft),
/* harmony export */   parseBaseType: () => (/* binding */ parseBaseType),
/* harmony export */   transformJsonDataToAbiFormat: () => (/* binding */ transformJsonDataToAbiFormat),
/* harmony export */   uint8ArrayToHexString: () => (/* binding */ uint8ArrayToHexString)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.js */ "./node_modules/web3-validator/lib/esm/constants.js");
/* harmony import */ var _validation_abi_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./validation/abi.js */ "./node_modules/web3-validator/lib/esm/validation/abi.js");
/* harmony import */ var _validation_string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./validation/string.js */ "./node_modules/web3-validator/lib/esm/validation/string.js");
/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./errors.js */ "./node_modules/web3-validator/lib/esm/errors.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/





const extraTypes = ['hex', 'number', 'blockNumber', 'blockNumberOrTag', 'filter', 'bloom'];
const parseBaseType = (type) => {
    // Remove all empty spaces to avoid any parsing issue.
    let strippedType = type.replace(/ /, '');
    let baseTypeSize;
    let isArray = false;
    let arraySizes = [];
    if (type.includes('[')) {
        // Extract the array type
        strippedType = strippedType.slice(0, strippedType.indexOf('['));
        // Extract array indexes
        arraySizes = [...type.matchAll(/(?:\[(\d*)\])/g)]
            .map(match => parseInt(match[1], 10))
            .map(size => (Number.isNaN(size) ? -1 : size));
        isArray = arraySizes.length > 0;
    }
    if (_constants_js__WEBPACK_IMPORTED_MODULE_1__.VALID_ETH_BASE_TYPES.includes(strippedType)) {
        return { baseType: strippedType, isArray, baseTypeSize, arraySizes };
    }
    if (strippedType.startsWith('int')) {
        baseTypeSize = parseInt(strippedType.substring(3), 10);
        strippedType = 'int';
    }
    else if (strippedType.startsWith('uint')) {
        baseTypeSize = parseInt(type.substring(4), 10);
        strippedType = 'uint';
    }
    else if (strippedType.startsWith('bytes')) {
        baseTypeSize = parseInt(strippedType.substring(5), 10);
        strippedType = 'bytes';
    }
    else {
        return { baseType: undefined, isArray: false, baseTypeSize: undefined, arraySizes };
    }
    return { baseType: strippedType, isArray, baseTypeSize, arraySizes };
};
const convertEthType = (type, parentSchema = {}) => {
    const typePropertyPresent = Object.keys(parentSchema).includes('type');
    if (typePropertyPresent) {
        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.Web3ValidatorError([
            {
                keyword: 'eth',
                message: 'Either "eth" or "type" can be presented in schema',
                params: { eth: type },
                instancePath: '',
                schemaPath: '',
            },
        ]);
    }
    const { baseType, baseTypeSize } = parseBaseType(type);
    if (!baseType && !extraTypes.includes(type)) {
        throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.Web3ValidatorError([
            {
                keyword: 'eth',
                message: `Eth data type "${type}" is not valid`,
                params: { eth: type },
                instancePath: '',
                schemaPath: '',
            },
        ]);
    }
    if (baseType) {
        if (baseType === 'tuple') {
            throw new Error('"tuple" type is not implemented directly.');
        }
        return { format: `${baseType}${baseTypeSize !== null && baseTypeSize !== void 0 ? baseTypeSize : ''}`, required: true };
    }
    if (type) {
        return { format: type, required: true };
    }
    return {};
};
const abiSchemaToJsonSchema = (abis, level = '/0') => {
    const schema = {
        type: 'array',
        items: [],
        maxItems: abis.length,
        minItems: abis.length,
    };
    for (const [index, abi] of abis.entries()) {
        // eslint-disable-next-line no-nested-ternary
        let abiType;
        let abiName;
        let abiComponents = [];
        // If it's a complete Abi Parameter
        // e.g. {name: 'a', type: 'uint'}
        if ((0,_validation_abi_js__WEBPACK_IMPORTED_MODULE_2__.isAbiParameterSchema)(abi)) {
            abiType = abi.type;
            abiName = abi.name || `${level}/${index}`;
            abiComponents = abi.components;
            // If its short form string value e.g. ['uint']
        }
        else if (typeof abi === 'string') {
            abiType = abi;
            abiName = `${level}/${index}`;
            // If it's provided in short form of tuple e.g. [['uint', 'string']]
        }
        else if (Array.isArray(abi)) {
            // If its custom tuple e.g. ['tuple[2]', ['uint', 'string']]
            if (abi[0] &&
                typeof abi[0] === 'string' &&
                abi[0].startsWith('tuple') &&
                !Array.isArray(abi[0]) &&
                abi[1] &&
                Array.isArray(abi[1])) {
                // eslint-disable-next-line prefer-destructuring
                abiType = abi[0];
                abiName = `${level}/${index}`;
                abiComponents = abi[1];
            }
            else {
                abiType = 'tuple';
                abiName = `${level}/${index}`;
                abiComponents = abi;
            }
        }
        const { baseType, isArray, arraySizes } = parseBaseType(abiType);
        let childSchema;
        let lastSchema = schema;
        for (let i = arraySizes.length - 1; i > 0; i -= 1) {
            childSchema = {
                type: 'array',
                $id: abiName,
                items: [],
                maxItems: arraySizes[i],
                minItems: arraySizes[i],
            };
            if (arraySizes[i] < 0) {
                delete childSchema.maxItems;
                delete childSchema.minItems;
            }
            // lastSchema.items is a Schema, concat with 'childSchema'
            if (!Array.isArray(lastSchema.items)) {
                lastSchema.items = [lastSchema.items, childSchema];
            } // lastSchema.items is an empty Scheme array, set it to 'childSchema'
            else if (lastSchema.items.length === 0) {
                lastSchema.items = [childSchema];
            } // lastSchema.items is a non-empty Scheme array, append 'childSchema'
            else {
                lastSchema.items.push(childSchema);
            }
            lastSchema = childSchema;
        }
        if (baseType === 'tuple' && !isArray) {
            const nestedTuple = abiSchemaToJsonSchema(abiComponents, abiName);
            nestedTuple.$id = abiName;
            lastSchema.items.push(nestedTuple);
        }
        else if (baseType === 'tuple' && isArray) {
            const arraySize = arraySizes[0];
            const item = Object.assign({ type: 'array', $id: abiName, items: abiSchemaToJsonSchema(abiComponents, abiName) }, (arraySize >= 0 && { minItems: arraySize, maxItems: arraySize }));
            lastSchema.items.push(item);
        }
        else if (isArray) {
            const arraySize = arraySizes[0];
            const item = Object.assign({ type: 'array', $id: abiName, items: convertEthType(abiType) }, (arraySize >= 0 && { minItems: arraySize, maxItems: arraySize }));
            lastSchema.items.push(item);
        }
        else if (Array.isArray(lastSchema.items)) {
            // Array of non-tuple items
            lastSchema.items.push(Object.assign({ $id: abiName }, convertEthType(abiType)));
        }
        else {
            // Nested object
            lastSchema.items.push(Object.assign({ $id: abiName }, convertEthType(abiType)));
        }
        lastSchema = schema;
    }
    return schema;
};
const ethAbiToJsonSchema = (abis) => abiSchemaToJsonSchema(abis);
const fetchArrayElement = (data, level) => {
    if (level === 1) {
        return data;
    }
    return fetchArrayElement(data[0], level - 1);
};
const transformJsonDataToAbiFormat = (abis, data, transformedData) => {
    const newData = [];
    for (const [index, abi] of abis.entries()) {
        // eslint-disable-next-line no-nested-ternary
        let abiType;
        let abiName;
        let abiComponents = [];
        // If it's a complete Abi Parameter
        // e.g. {name: 'a', type: 'uint'}
        if ((0,_validation_abi_js__WEBPACK_IMPORTED_MODULE_2__.isAbiParameterSchema)(abi)) {
            abiType = abi.type;
            abiName = abi.name;
            abiComponents = abi.components;
            // If its short form string value e.g. ['uint']
        }
        else if (typeof abi === 'string') {
            abiType = abi;
            // If it's provided in short form of tuple e.g. [['uint', 'string']]
        }
        else if (Array.isArray(abi)) {
            // If its custom tuple e.g. ['tuple[2]', ['uint', 'string']]
            if (abi[1] && Array.isArray(abi[1])) {
                abiType = abi[0];
                abiComponents = abi[1];
            }
            else {
                abiType = 'tuple';
                abiComponents = abi;
            }
        }
        const { baseType, isArray, arraySizes } = parseBaseType(abiType);
        const dataItem = Array.isArray(data)
            ? data[index]
            : data[abiName];
        if (baseType === 'tuple' && !isArray) {
            newData.push(transformJsonDataToAbiFormat(abiComponents, dataItem, transformedData));
        }
        else if (baseType === 'tuple' && isArray) {
            const tupleData = [];
            for (const tupleItem of dataItem) {
                // Nested array
                if (arraySizes.length > 1) {
                    const nestedItems = fetchArrayElement(tupleItem, arraySizes.length - 1);
                    const nestedData = [];
                    for (const nestedItem of nestedItems) {
                        nestedData.push(transformJsonDataToAbiFormat(abiComponents, nestedItem, transformedData));
                    }
                    tupleData.push(nestedData);
                }
                else {
                    tupleData.push(transformJsonDataToAbiFormat(abiComponents, tupleItem, transformedData));
                }
            }
            newData.push(tupleData);
        }
        else {
            newData.push(dataItem);
        }
    }
    // Have to reassign before pushing to transformedData
    // eslint-disable-next-line no-param-reassign
    transformedData = transformedData !== null && transformedData !== void 0 ? transformedData : [];
    transformedData.push(...newData);
    return transformedData;
};
/**
 * Code points to int
 */
const codePointToInt = (codePoint) => {
    if (codePoint >= 48 && codePoint <= 57) {
        /* ['0'..'9'] -> [0..9] */
        return codePoint - 48;
    }
    if (codePoint >= 65 && codePoint <= 70) {
        /* ['A'..'F'] -> [10..15] */
        return codePoint - 55;
    }
    if (codePoint >= 97 && codePoint <= 102) {
        /* ['a'..'f'] -> [10..15] */
        return codePoint - 87;
    }
    throw new Error(`Invalid code point: ${codePoint}`);
};
/**
 * Converts value to it's number representation
 */
const hexToNumber = (value) => {
    if (!(0,_validation_string_js__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(value)) {
        throw new Error('Invalid hex string');
    }
    const [negative, hexValue] = value.startsWith('-') ? [true, value.slice(1)] : [false, value];
    const num = BigInt(hexValue);
    if (num > Number.MAX_SAFE_INTEGER) {
        return negative ? -num : num;
    }
    if (num < Number.MIN_SAFE_INTEGER) {
        return num;
    }
    return negative ? -1 * Number(num) : Number(num);
};
/**
 * Converts value to it's hex representation
 */
const numberToHex = (value) => {
    if ((typeof value === 'number' || typeof value === 'bigint') && value < 0) {
        return `-0x${value.toString(16).slice(1)}`;
    }
    if ((typeof value === 'number' || typeof value === 'bigint') && value >= 0) {
        return `0x${value.toString(16)}`;
    }
    if (typeof value === 'string' && (0,_validation_string_js__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(value)) {
        const [negative, hex] = value.startsWith('-') ? [true, value.slice(1)] : [false, value];
        const hexValue = hex.split(/^(-)?0(x|X)/).slice(-1)[0];
        return `${negative ? '-' : ''}0x${hexValue.replace(/^0+/, '').toLowerCase()}`;
    }
    if (typeof value === 'string' && !(0,_validation_string_js__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(value)) {
        return numberToHex(BigInt(value));
    }
    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidNumberError(value);
};
/**
 * Adds a padding on the left of a string, if value is a integer or bigInt will be converted to a hex string.
 */
const padLeft = (value, characterAmount, sign = '0') => {
    if (typeof value === 'string' && !(0,_validation_string_js__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(value)) {
        return value.padStart(characterAmount, sign);
    }
    const hex = typeof value === 'string' && (0,_validation_string_js__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(value) ? value : numberToHex(value);
    const [prefix, hexValue] = hex.startsWith('-') ? ['-0x', hex.slice(3)] : ['0x', hex.slice(2)];
    return `${prefix}${hexValue.padStart(characterAmount, sign)}`;
};
function uint8ArrayToHexString(uint8Array) {
    let hexString = '0x';
    for (const e of uint8Array) {
        const hex = e.toString(16);
        hexString += hex.length === 1 ? `0${hex}` : hex;
    }
    return hexString;
}
// for optimized technique for hex to bytes conversion
const charCodeMap = {
    zero: 48,
    nine: 57,
    A: 65,
    F: 70,
    a: 97,
    f: 102,
};
function charCodeToBase16(char) {
    if (char >= charCodeMap.zero && char <= charCodeMap.nine)
        return char - charCodeMap.zero;
    if (char >= charCodeMap.A && char <= charCodeMap.F)
        return char - (charCodeMap.A - 10);
    if (char >= charCodeMap.a && char <= charCodeMap.f)
        return char - (charCodeMap.a - 10);
    return undefined;
}
function hexToUint8Array(hex) {
    let offset = 0;
    if (hex.startsWith('0') && (hex[1] === 'x' || hex[1] === 'X')) {
        offset = 2;
    }
    if (hex.length % 2 !== 0) {
        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidBytesError(`hex string has odd length: ${hex}`);
    }
    const length = (hex.length - offset) / 2;
    const bytes = new Uint8Array(length);
    for (let index = 0, j = offset; index < length; index += 1) {
        // eslint-disable-next-line no-plusplus
        const nibbleLeft = charCodeToBase16(hex.charCodeAt(j++));
        // eslint-disable-next-line no-plusplus
        const nibbleRight = charCodeToBase16(hex.charCodeAt(j++));
        if (nibbleLeft === undefined || nibbleRight === undefined) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidBytesError(`Invalid byte sequence ("${hex[j - 2]}${hex[j - 1]}" in "${hex}").`);
        }
        bytes[index] = nibbleLeft * 16 + nibbleRight;
    }
    return bytes;
}
// @TODO: Remove this function and its usages once all sub dependencies uses version 1.3.3 or above of @noble/hashes
function ensureIfUint8Array(data) {
    var _a;
    if (!(data instanceof Uint8Array) &&
        ((_a = data === null || data === void 0 ? void 0 : data.constructor) === null || _a === void 0 ? void 0 : _a.name) === 'Uint8Array') {
        return Uint8Array.from(data);
    }
    return data;
}
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "./node_modules/web3-validator/lib/esm/validation/abi.js":
/*!***************************************************************!*\
  !*** ./node_modules/web3-validator/lib/esm/validation/abi.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isAbiParameterSchema: () => (/* binding */ isAbiParameterSchema)
/* harmony export */ });
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
const isAbiParameterSchema = (schema) => typeof schema === 'object' && 'type' in schema && 'name' in schema;
//# sourceMappingURL=abi.js.map

/***/ }),

/***/ "./node_modules/web3-validator/lib/esm/validation/address.js":
/*!*******************************************************************!*\
  !*** ./node_modules/web3-validator/lib/esm/validation/address.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   checkAddressCheckSum: () => (/* binding */ checkAddressCheckSum),
/* harmony export */   isAddress: () => (/* binding */ isAddress)
/* harmony export */ });
/* harmony import */ var ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/keccak.js */ "./node_modules/web3-validator/node_modules/ethereum-cryptography/esm/keccak.js");
/* harmony import */ var ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethereum-cryptography/utils.js */ "./node_modules/web3-validator/node_modules/ethereum-cryptography/esm/utils.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ "./node_modules/web3-validator/lib/esm/utils.js");
/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./string.js */ "./node_modules/web3-validator/lib/esm/validation/string.js");
/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bytes.js */ "./node_modules/web3-validator/lib/esm/validation/bytes.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/





/**
 * Checks the checksum of a given address. Will also return false on non-checksum addresses.
 */
const checkAddressCheckSum = (data) => {
    if (!/^(0x)?[0-9a-f]{40}$/i.test(data))
        return false;
    const address = data.slice(2);
    const updatedData = (0,ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(address.toLowerCase());
    const addressHash = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToHexString)((0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.ensureIfUint8Array)(updatedData))).slice(2);
    for (let i = 0; i < 40; i += 1) {
        // the nth letter should be uppercase if the nth digit of casemap is 1
        if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) ||
            (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {
            return false;
        }
    }
    return true;
};
/**
 * Checks if a given string is a valid Ethereum address. It will also check the checksum, if the address has upper and lowercase letters.
 */
const isAddress = (value, checkChecksum = true) => {
    if (typeof value !== 'string' && !(0,_bytes_js__WEBPACK_IMPORTED_MODULE_4__.isUint8Array)(value)) {
        return false;
    }
    let valueToCheck;
    if ((0,_bytes_js__WEBPACK_IMPORTED_MODULE_4__.isUint8Array)(value)) {
        valueToCheck = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToHexString)(value);
    }
    else if (typeof value === 'string' && !(0,_string_js__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(value)) {
        valueToCheck = value.toLowerCase().startsWith('0x') ? value : `0x${value}`;
    }
    else {
        valueToCheck = value;
    }
    // check if it has the basic requirements of an address
    if (!/^(0x)?[0-9a-f]{40}$/i.test(valueToCheck)) {
        return false;
    }
    // If it's ALL lowercase or ALL upppercase
    if (/^(0x|0X)?[0-9a-f]{40}$/.test(valueToCheck) ||
        /^(0x|0X)?[0-9A-F]{40}$/.test(valueToCheck)) {
        return true;
        // Otherwise check each case
    }
    return checkChecksum ? checkAddressCheckSum(valueToCheck) : true;
};
//# sourceMappingURL=address.js.map

/***/ }),

/***/ "./node_modules/web3-validator/lib/esm/validation/block.js":
/*!*****************************************************************!*\
  !*** ./node_modules/web3-validator/lib/esm/validation/block.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isBlockNumber: () => (/* binding */ isBlockNumber),
/* harmony export */   isBlockNumberOrTag: () => (/* binding */ isBlockNumberOrTag),
/* harmony export */   isBlockTag: () => (/* binding */ isBlockTag)
/* harmony export */ });
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/* harmony import */ var _numbers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./numbers.js */ "./node_modules/web3-validator/lib/esm/validation/numbers.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/


const isBlockNumber = (value) => (0,_numbers_js__WEBPACK_IMPORTED_MODULE_1__.isUInt)(value);
/**
 * Returns true if the given blockNumber is 'latest', 'pending', 'earliest, 'safe' or 'finalized'
 */
const isBlockTag = (value) => Object.values(web3_types__WEBPACK_IMPORTED_MODULE_0__.BlockTags).includes(value);
/**
 * Returns true if given value is valid hex string and not negative, or is a valid BlockTag
 */
const isBlockNumberOrTag = (value) => isBlockTag(value) || isBlockNumber(value);
//# sourceMappingURL=block.js.map

/***/ }),

/***/ "./node_modules/web3-validator/lib/esm/validation/bloom.js":
/*!*****************************************************************!*\
  !*** ./node_modules/web3-validator/lib/esm/validation/bloom.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isBloom: () => (/* binding */ isBloom),
/* harmony export */   isContractAddressInBloom: () => (/* binding */ isContractAddressInBloom),
/* harmony export */   isInBloom: () => (/* binding */ isInBloom),
/* harmony export */   isUserEthereumAddressInBloom: () => (/* binding */ isUserEthereumAddressInBloom)
/* harmony export */ });
/* harmony import */ var ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/keccak.js */ "./node_modules/web3-validator/node_modules/ethereum-cryptography/esm/keccak.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ "./node_modules/web3-validator/lib/esm/utils.js");
/* harmony import */ var _address_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./address.js */ "./node_modules/web3-validator/lib/esm/validation/address.js");
/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./string.js */ "./node_modules/web3-validator/lib/esm/validation/string.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/




/**
 * Returns true if the bloom is a valid bloom
 * https://github.com/joshstevens19/ethereum-bloom-filters/blob/fbeb47b70b46243c3963fe1c2988d7461ef17236/src/index.ts#L7
 */
const isBloom = (bloom) => {
    if (typeof bloom !== 'string') {
        return false;
    }
    if (!/^(0x)?[0-9a-f]{512}$/i.test(bloom)) {
        return false;
    }
    if (/^(0x)?[0-9a-f]{512}$/.test(bloom) || /^(0x)?[0-9A-F]{512}$/.test(bloom)) {
        return true;
    }
    return false;
};
/**
 * Returns true if the value is part of the given bloom
 * note: false positives are possible.
 */
const isInBloom = (bloom, value) => {
    if (typeof value === 'string' && !(0,_string_js__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(value)) {
        return false;
    }
    if (!isBloom(bloom)) {
        return false;
    }
    const uint8Array = typeof value === 'string' ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.hexToUint8Array)(value) : value;
    const hash = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.uint8ArrayToHexString)((0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(uint8Array)).slice(2);
    for (let i = 0; i < 12; i += 4) {
        // calculate bit position in bloom filter that must be active
        const bitpos = 
        // eslint-disable-next-line no-bitwise
        ((parseInt(hash.slice(i, i + 2), 16) << 8) + parseInt(hash.slice(i + 2, i + 4), 16)) &
            2047;
        // test if bitpos in bloom is active
        const code = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.codePointToInt)(bloom.charCodeAt(bloom.length - 1 - Math.floor(bitpos / 4)));
        // eslint-disable-next-line no-bitwise
        const offset = 1 << bitpos % 4;
        // eslint-disable-next-line no-bitwise
        if ((code & offset) !== offset) {
            return false;
        }
    }
    return true;
};
/**
 * Returns true if the ethereum users address is part of the given bloom note: false positives are possible.
 */
const isUserEthereumAddressInBloom = (bloom, ethereumAddress) => {
    if (!isBloom(bloom)) {
        return false;
    }
    if (!(0,_address_js__WEBPACK_IMPORTED_MODULE_2__.isAddress)(ethereumAddress)) {
        return false;
    }
    // you have to pad the ethereum address to 32 bytes
    // else the bloom filter does not work
    // this is only if your matching the USERS
    // ethereum address. Contract address do not need this
    // hence why we have 2 methods
    // (0x is not in the 2nd parameter of padleft so 64 chars is fine)
    const address = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.padLeft)(ethereumAddress, 64);
    return isInBloom(bloom, address);
};
/**
 * Returns true if the contract address is part of the given bloom.
 * note: false positives are possible.
 */
const isContractAddressInBloom = (bloom, contractAddress) => {
    if (!isBloom(bloom)) {
        return false;
    }
    if (!(0,_address_js__WEBPACK_IMPORTED_MODULE_2__.isAddress)(contractAddress)) {
        return false;
    }
    return isInBloom(bloom, contractAddress);
};
//# sourceMappingURL=bloom.js.map

/***/ }),

/***/ "./node_modules/web3-validator/lib/esm/validation/boolean.js":
/*!*******************************************************************!*\
  !*** ./node_modules/web3-validator/lib/esm/validation/boolean.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isBoolean: () => (/* binding */ isBoolean)
/* harmony export */ });
/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./string.js */ "./node_modules/web3-validator/lib/esm/validation/string.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

const isBoolean = (value) => {
    if (!['number', 'string', 'boolean'].includes(typeof value)) {
        return false;
    }
    if (typeof value === 'boolean') {
        return true;
    }
    if (typeof value === 'string' && !(0,_string_js__WEBPACK_IMPORTED_MODULE_0__.isHexStrict)(value)) {
        return value === '1' || value === '0';
    }
    if (typeof value === 'string' && (0,_string_js__WEBPACK_IMPORTED_MODULE_0__.isHexStrict)(value)) {
        return value === '0x1' || value === '0x0';
    }
    // type === number
    return value === 1 || value === 0;
};
//# sourceMappingURL=boolean.js.map

/***/ }),

/***/ "./node_modules/web3-validator/lib/esm/validation/bytes.js":
/*!*****************************************************************!*\
  !*** ./node_modules/web3-validator/lib/esm/validation/bytes.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isBytes: () => (/* binding */ isBytes),
/* harmony export */   isUint8Array: () => (/* binding */ isUint8Array)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ "./node_modules/web3-validator/lib/esm/utils.js");
/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./string.js */ "./node_modules/web3-validator/lib/esm/validation/string.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/


/**
 * checks input if typeof data is valid Uint8Array input
 */
const isUint8Array = (data) => { var _a, _b; return data instanceof Uint8Array || ((_a = data === null || data === void 0 ? void 0 : data.constructor) === null || _a === void 0 ? void 0 : _a.name) === 'Uint8Array' || ((_b = data === null || data === void 0 ? void 0 : data.constructor) === null || _b === void 0 ? void 0 : _b.name) === 'Buffer'; };
const isBytes = (value, options = {
    abiType: 'bytes',
}) => {
    if (typeof value !== 'string' && !Array.isArray(value) && !isUint8Array(value)) {
        return false;
    }
    // isHexStrict also accepts - prefix which can not exists in bytes
    if (typeof value === 'string' && (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value) && value.startsWith('-')) {
        return false;
    }
    if (typeof value === 'string' && !(0,_string_js__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value)) {
        return false;
    }
    let valueToCheck;
    if (typeof value === 'string') {
        if (value.length % 2 !== 0) {
            // odd length hex
            return false;
        }
        valueToCheck = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.hexToUint8Array)(value);
    }
    else if (Array.isArray(value)) {
        if (value.some(d => d < 0 || d > 255 || !Number.isInteger(d))) {
            return false;
        }
        valueToCheck = new Uint8Array(value);
    }
    else {
        valueToCheck = value;
    }
    if (options === null || options === void 0 ? void 0 : options.abiType) {
        const { baseTypeSize } = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.parseBaseType)(options.abiType);
        return baseTypeSize ? valueToCheck.length === baseTypeSize : true;
    }
    if (options === null || options === void 0 ? void 0 : options.size) {
        return valueToCheck.length === (options === null || options === void 0 ? void 0 : options.size);
    }
    return true;
};
//# sourceMappingURL=bytes.js.map

/***/ }),

/***/ "./node_modules/web3-validator/lib/esm/validation/eth.js":
/*!***************************************************************!*\
  !*** ./node_modules/web3-validator/lib/esm/validation/eth.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isValidEthBaseType: () => (/* binding */ isValidEthBaseType)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ "./node_modules/web3-validator/lib/esm/utils.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

const isValidEthBaseType = (type) => {
    const { baseType, baseTypeSize } = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.parseBaseType)(type);
    if (!baseType) {
        return false;
    }
    if (baseType === type) {
        return true;
    }
    if ((baseType === 'int' || baseType === 'uint') && baseTypeSize) {
        if (!(baseTypeSize <= 256 && baseTypeSize % 8 === 0)) {
            return false;
        }
    }
    if (baseType === 'bytes' && baseTypeSize) {
        if (!(baseTypeSize >= 1 && baseTypeSize <= 32)) {
            return false;
        }
    }
    return true;
};
//# sourceMappingURL=eth.js.map

/***/ }),

/***/ "./node_modules/web3-validator/lib/esm/validation/filter.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-validator/lib/esm/validation/filter.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isFilterObject: () => (/* binding */ isFilterObject)
/* harmony export */ });
/* harmony import */ var _address_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./address.js */ "./node_modules/web3-validator/lib/esm/validation/address.js");
/* harmony import */ var _block_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./block.js */ "./node_modules/web3-validator/lib/esm/validation/block.js");
/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./object.js */ "./node_modules/web3-validator/lib/esm/validation/object.js");
/* harmony import */ var _topic_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./topic.js */ "./node_modules/web3-validator/lib/esm/validation/topic.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/




/**
 * First we check if all properties in the provided value are expected,
 * then because all Filter properties are optional, we check if the expected properties
 * are defined. If defined and they're not the expected type, we immediately return false,
 * otherwise we return true after all checks pass.
 */
const isFilterObject = (value) => {
    const expectedFilterProperties = [
        'fromBlock',
        'toBlock',
        'address',
        'topics',
        'blockHash',
    ];
    if ((0,_object_js__WEBPACK_IMPORTED_MODULE_2__.isNullish)(value) || typeof value !== 'object')
        return false;
    if (!Object.keys(value).every(property => expectedFilterProperties.includes(property)))
        return false;
    if ((!(0,_object_js__WEBPACK_IMPORTED_MODULE_2__.isNullish)(value.fromBlock) && !(0,_block_js__WEBPACK_IMPORTED_MODULE_1__.isBlockNumberOrTag)(value.fromBlock)) ||
        (!(0,_object_js__WEBPACK_IMPORTED_MODULE_2__.isNullish)(value.toBlock) && !(0,_block_js__WEBPACK_IMPORTED_MODULE_1__.isBlockNumberOrTag)(value.toBlock)))
        return false;
    if (!(0,_object_js__WEBPACK_IMPORTED_MODULE_2__.isNullish)(value.address)) {
        if (Array.isArray(value.address)) {
            if (!value.address.every(address => (0,_address_js__WEBPACK_IMPORTED_MODULE_0__.isAddress)(address)))
                return false;
        }
        else if (!(0,_address_js__WEBPACK_IMPORTED_MODULE_0__.isAddress)(value.address))
            return false;
    }
    if (!(0,_object_js__WEBPACK_IMPORTED_MODULE_2__.isNullish)(value.topics)) {
        if (!value.topics.every(topic => {
            if ((0,_object_js__WEBPACK_IMPORTED_MODULE_2__.isNullish)(topic))
                return true;
            if (Array.isArray(topic)) {
                return topic.every(nestedTopic => (0,_topic_js__WEBPACK_IMPORTED_MODULE_3__.isTopic)(nestedTopic));
            }
            if ((0,_topic_js__WEBPACK_IMPORTED_MODULE_3__.isTopic)(topic))
                return true;
            return false;
        }))
            return false;
    }
    return true;
};
//# sourceMappingURL=filter.js.map

/***/ }),

/***/ "./node_modules/web3-validator/lib/esm/validation/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/web3-validator/lib/esm/validation/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   bigintPower: () => (/* reexport safe */ _numbers_js__WEBPACK_IMPORTED_MODULE_7__.bigintPower),
/* harmony export */   checkAddressCheckSum: () => (/* reexport safe */ _address_js__WEBPACK_IMPORTED_MODULE_0__.checkAddressCheckSum),
/* harmony export */   isAddress: () => (/* reexport safe */ _address_js__WEBPACK_IMPORTED_MODULE_0__.isAddress),
/* harmony export */   isBigInt: () => (/* reexport safe */ _numbers_js__WEBPACK_IMPORTED_MODULE_7__.isBigInt),
/* harmony export */   isBlockNumber: () => (/* reexport safe */ _block_js__WEBPACK_IMPORTED_MODULE_1__.isBlockNumber),
/* harmony export */   isBlockNumberOrTag: () => (/* reexport safe */ _block_js__WEBPACK_IMPORTED_MODULE_1__.isBlockNumberOrTag),
/* harmony export */   isBlockTag: () => (/* reexport safe */ _block_js__WEBPACK_IMPORTED_MODULE_1__.isBlockTag),
/* harmony export */   isBloom: () => (/* reexport safe */ _bloom_js__WEBPACK_IMPORTED_MODULE_2__.isBloom),
/* harmony export */   isBoolean: () => (/* reexport safe */ _boolean_js__WEBPACK_IMPORTED_MODULE_3__.isBoolean),
/* harmony export */   isBytes: () => (/* reexport safe */ _bytes_js__WEBPACK_IMPORTED_MODULE_4__.isBytes),
/* harmony export */   isContractAddressInBloom: () => (/* reexport safe */ _bloom_js__WEBPACK_IMPORTED_MODULE_2__.isContractAddressInBloom),
/* harmony export */   isFilterObject: () => (/* reexport safe */ _filter_js__WEBPACK_IMPORTED_MODULE_6__.isFilterObject),
/* harmony export */   isHex: () => (/* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_8__.isHex),
/* harmony export */   isHexPrefixed: () => (/* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_8__.isHexPrefixed),
/* harmony export */   isHexStrict: () => (/* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_8__.isHexStrict),
/* harmony export */   isHexString: () => (/* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_8__.isHexString),
/* harmony export */   isHexString32Bytes: () => (/* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_8__.isHexString32Bytes),
/* harmony export */   isHexString8Bytes: () => (/* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_8__.isHexString8Bytes),
/* harmony export */   isInBloom: () => (/* reexport safe */ _bloom_js__WEBPACK_IMPORTED_MODULE_2__.isInBloom),
/* harmony export */   isInt: () => (/* reexport safe */ _numbers_js__WEBPACK_IMPORTED_MODULE_7__.isInt),
/* harmony export */   isNullish: () => (/* reexport safe */ _object_js__WEBPACK_IMPORTED_MODULE_10__.isNullish),
/* harmony export */   isNumber: () => (/* reexport safe */ _numbers_js__WEBPACK_IMPORTED_MODULE_7__.isNumber),
/* harmony export */   isObject: () => (/* reexport safe */ _object_js__WEBPACK_IMPORTED_MODULE_10__.isObject),
/* harmony export */   isString: () => (/* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_8__.isString),
/* harmony export */   isTopic: () => (/* reexport safe */ _topic_js__WEBPACK_IMPORTED_MODULE_9__.isTopic),
/* harmony export */   isTopicInBloom: () => (/* reexport safe */ _topic_js__WEBPACK_IMPORTED_MODULE_9__.isTopicInBloom),
/* harmony export */   isUInt: () => (/* reexport safe */ _numbers_js__WEBPACK_IMPORTED_MODULE_7__.isUInt),
/* harmony export */   isUint8Array: () => (/* reexport safe */ _bytes_js__WEBPACK_IMPORTED_MODULE_4__.isUint8Array),
/* harmony export */   isUserEthereumAddressInBloom: () => (/* reexport safe */ _bloom_js__WEBPACK_IMPORTED_MODULE_2__.isUserEthereumAddressInBloom),
/* harmony export */   isValidEthBaseType: () => (/* reexport safe */ _eth_js__WEBPACK_IMPORTED_MODULE_5__.isValidEthBaseType),
/* harmony export */   validateNoLeadingZeroes: () => (/* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_8__.validateNoLeadingZeroes)
/* harmony export */ });
/* harmony import */ var _address_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./address.js */ "./node_modules/web3-validator/lib/esm/validation/address.js");
/* harmony import */ var _block_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./block.js */ "./node_modules/web3-validator/lib/esm/validation/block.js");
/* harmony import */ var _bloom_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bloom.js */ "./node_modules/web3-validator/lib/esm/validation/bloom.js");
/* harmony import */ var _boolean_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./boolean.js */ "./node_modules/web3-validator/lib/esm/validation/boolean.js");
/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bytes.js */ "./node_modules/web3-validator/lib/esm/validation/bytes.js");
/* harmony import */ var _eth_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./eth.js */ "./node_modules/web3-validator/lib/esm/validation/eth.js");
/* harmony import */ var _filter_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./filter.js */ "./node_modules/web3-validator/lib/esm/validation/filter.js");
/* harmony import */ var _numbers_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./numbers.js */ "./node_modules/web3-validator/lib/esm/validation/numbers.js");
/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./string.js */ "./node_modules/web3-validator/lib/esm/validation/string.js");
/* harmony import */ var _topic_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./topic.js */ "./node_modules/web3-validator/lib/esm/validation/topic.js");
/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./object.js */ "./node_modules/web3-validator/lib/esm/validation/object.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/











//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/web3-validator/lib/esm/validation/numbers.js":
/*!*******************************************************************!*\
  !*** ./node_modules/web3-validator/lib/esm/validation/numbers.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   bigintPower: () => (/* binding */ bigintPower),
/* harmony export */   isBigInt: () => (/* binding */ isBigInt),
/* harmony export */   isInt: () => (/* binding */ isInt),
/* harmony export */   isNumber: () => (/* binding */ isNumber),
/* harmony export */   isUInt: () => (/* binding */ isUInt)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ "./node_modules/web3-validator/lib/esm/utils.js");
/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./string.js */ "./node_modules/web3-validator/lib/esm/validation/string.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/


/**
 * Checks if a given value is a valid big int
 */
const isBigInt = (value) => typeof value === 'bigint';
// Note: this could be simplified using ** operator, but babel does not handle it well
// 	you can find more at: https://github.com/babel/babel/issues/13109 and https://github.com/web3/web3.js/issues/6187
/** @internal */
const bigintPower = (base, expo) => {
    // edge case
    if (expo === BigInt(0)) {
        return BigInt(1);
    }
    let res = base;
    for (let index = 1; index < expo; index += 1) {
        res *= base;
    }
    return res;
};
const isUInt = (value, options = {
    abiType: 'uint',
}) => {
    if (!['number', 'string', 'bigint'].includes(typeof value) ||
        (typeof value === 'string' && value.length === 0)) {
        return false;
    }
    let size;
    if (options === null || options === void 0 ? void 0 : options.abiType) {
        const { baseTypeSize } = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.parseBaseType)(options.abiType);
        if (baseTypeSize) {
            size = baseTypeSize;
        }
    }
    else if (options.bitSize) {
        size = options.bitSize;
    }
    const maxSize = bigintPower(BigInt(2), BigInt(size !== null && size !== void 0 ? size : 256)) - BigInt(1);
    try {
        const valueToCheck = typeof value === 'string' && (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value)
            ? BigInt((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.hexToNumber)(value))
            : BigInt(value);
        return valueToCheck >= 0 && valueToCheck <= maxSize;
    }
    catch (error) {
        // Some invalid number value given which can not be converted via BigInt
        return false;
    }
};
const isInt = (value, options = {
    abiType: 'int',
}) => {
    if (!['number', 'string', 'bigint'].includes(typeof value)) {
        return false;
    }
    if (typeof value === 'number' && value > Number.MAX_SAFE_INTEGER) {
        return false;
    }
    let size;
    if (options === null || options === void 0 ? void 0 : options.abiType) {
        const { baseTypeSize, baseType } = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.parseBaseType)(options.abiType);
        if (baseType !== 'int') {
            return false;
        }
        if (baseTypeSize) {
            size = baseTypeSize;
        }
    }
    else if (options.bitSize) {
        size = options.bitSize;
    }
    const maxSize = bigintPower(BigInt(2), BigInt((size !== null && size !== void 0 ? size : 256) - 1));
    const minSize = BigInt(-1) * bigintPower(BigInt(2), BigInt((size !== null && size !== void 0 ? size : 256) - 1));
    try {
        const valueToCheck = typeof value === 'string' && (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value)
            ? BigInt((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.hexToNumber)(value))
            : BigInt(value);
        return valueToCheck >= minSize && valueToCheck <= maxSize;
    }
    catch (error) {
        // Some invalid number value given which can not be converted via BigInt
        return false;
    }
};
const isNumber = (value) => {
    if (isInt(value)) {
        return true;
    }
    // It would be a decimal number
    if (typeof value === 'string' &&
        /[0-9.]/.test(value) &&
        value.indexOf('.') === value.lastIndexOf('.')) {
        return true;
    }
    if (typeof value === 'number') {
        return true;
    }
    return false;
};
//# sourceMappingURL=numbers.js.map

/***/ }),

/***/ "./node_modules/web3-validator/lib/esm/validation/object.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-validator/lib/esm/validation/object.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isNullish: () => (/* binding */ isNullish),
/* harmony export */   isObject: () => (/* binding */ isObject)
/* harmony export */ });
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

// Explicitly check for the
// eslint-disable-next-line @typescript-eslint/ban-types
const isNullish = (item) => 
// Using "null" value intentionally for validation
// eslint-disable-next-line no-null/no-null
item === undefined || item === null;
const isObject = (item) => typeof item === 'object' &&
    !isNullish(item) &&
    !Array.isArray(item) &&
    !(item instanceof web3_types__WEBPACK_IMPORTED_MODULE_0__.TypedArray);
//# sourceMappingURL=object.js.map

/***/ }),

/***/ "./node_modules/web3-validator/lib/esm/validation/string.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-validator/lib/esm/validation/string.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isHex: () => (/* binding */ isHex),
/* harmony export */   isHexPrefixed: () => (/* binding */ isHexPrefixed),
/* harmony export */   isHexStrict: () => (/* binding */ isHexStrict),
/* harmony export */   isHexString: () => (/* binding */ isHexString),
/* harmony export */   isHexString32Bytes: () => (/* binding */ isHexString32Bytes),
/* harmony export */   isHexString8Bytes: () => (/* binding */ isHexString8Bytes),
/* harmony export */   isString: () => (/* binding */ isString),
/* harmony export */   validateNoLeadingZeroes: () => (/* binding */ validateNoLeadingZeroes)
/* harmony export */ });
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * checks input if typeof data is valid string input
 */
const isString = (value) => typeof value === 'string';
const isHexStrict = (hex) => typeof hex === 'string' && /^((-)?0x[0-9a-f]+|(0x))$/i.test(hex);
/**
 * Is the string a hex string.
 *
 * @param  value
 * @param  length
 * @returns  output the string is a hex string
 */
function isHexString(value, length) {
    if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/))
        return false;
    if (typeof length !== 'undefined' && length > 0 && value.length !== 2 + 2 * length)
        return false;
    return true;
}
const isHex = (hex) => typeof hex === 'number' ||
    typeof hex === 'bigint' ||
    (typeof hex === 'string' && /^((-0x|0x|-)?[0-9a-f]+|(0x))$/i.test(hex));
const isHexString8Bytes = (value, prefixed = true) => prefixed ? isHexStrict(value) && value.length === 18 : isHex(value) && value.length === 16;
const isHexString32Bytes = (value, prefixed = true) => prefixed ? isHexStrict(value) && value.length === 66 : isHex(value) && value.length === 64;
/**
 * Returns a `Boolean` on whether or not the a `String` starts with '0x'
 * @param str the string input value
 * @return a boolean if it is or is not hex prefixed
 * @throws if the str input is not a string
 */
function isHexPrefixed(str) {
    if (typeof str !== 'string') {
        throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof str}`);
    }
    return str.startsWith('0x');
}
/**
 * Checks provided Uint8Array for leading zeroes and throws if found.
 *
 * Examples:
 *
 * Valid values: 0x1, 0x, 0x01, 0x1234
 * Invalid values: 0x0, 0x00, 0x001, 0x0001
 *
 * Note: This method is useful for validating that RLP encoded integers comply with the rule that all
 * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes
 * @param values An object containing string keys and Uint8Array values
 * @throws if any provided value is found to have leading zero bytes
 */
const validateNoLeadingZeroes = function (values) {
    for (const [k, v] of Object.entries(values)) {
        if (v !== undefined && v.length > 0 && v[0] === 0) {
            throw new Error(`${k} cannot have leading zeroes, received: ${v.toString()}`);
        }
    }
};
//# sourceMappingURL=string.js.map

/***/ }),

/***/ "./node_modules/web3-validator/lib/esm/validation/topic.js":
/*!*****************************************************************!*\
  !*** ./node_modules/web3-validator/lib/esm/validation/topic.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isTopic: () => (/* binding */ isTopic),
/* harmony export */   isTopicInBloom: () => (/* binding */ isTopicInBloom)
/* harmony export */ });
/* harmony import */ var _bloom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bloom.js */ "./node_modules/web3-validator/lib/esm/validation/bloom.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

/**
 * Checks if its a valid topic
 */
const isTopic = (topic) => {
    if (typeof topic !== 'string') {
        return false;
    }
    if (!/^(0x)?[0-9a-f]{64}$/i.test(topic)) {
        return false;
    }
    if (/^(0x)?[0-9a-f]{64}$/.test(topic) || /^(0x)?[0-9A-F]{64}$/.test(topic)) {
        return true;
    }
    return false;
};
/**
 * Returns true if the topic is part of the given bloom.
 * note: false positives are possible.
 */
const isTopicInBloom = (bloom, topic) => {
    if (!(0,_bloom_js__WEBPACK_IMPORTED_MODULE_0__.isBloom)(bloom)) {
        return false;
    }
    if (!isTopic(topic)) {
        return false;
    }
    return (0,_bloom_js__WEBPACK_IMPORTED_MODULE_0__.isInBloom)(bloom, topic);
};
//# sourceMappingURL=topic.js.map

/***/ }),

/***/ "./node_modules/web3-validator/lib/esm/validator.js":
/*!**********************************************************!*\
  !*** ./node_modules/web3-validator/lib/esm/validator.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Validator: () => (/* binding */ Validator)
/* harmony export */ });
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zod */ "./node_modules/zod/v3/types.js");
/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zod */ "./node_modules/zod/v3/external.js");
/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! zod */ "./node_modules/zod/v3/ZodError.js");
/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./errors.js */ "./node_modules/web3-validator/lib/esm/errors.js");
/* harmony import */ var _formats_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./formats.js */ "./node_modules/web3-validator/lib/esm/formats.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/




const convertToZod = (schema) => {
    if ((!(schema === null || schema === void 0 ? void 0 : schema.type) || (schema === null || schema === void 0 ? void 0 : schema.type) === 'object') && (schema === null || schema === void 0 ? void 0 : schema.properties)) {
        const obj = {};
        for (const name of Object.keys(schema.properties)) {
            const zItem = convertToZod(schema.properties[name]);
            if (zItem) {
                obj[name] = zItem;
            }
        }
        if (Array.isArray(schema.required)) {
            return zod__WEBPACK_IMPORTED_MODULE_1__.object(obj)
                .partial()
                .required(schema.required.reduce((acc, v) => (Object.assign(Object.assign({}, acc), { [v]: true })), {}));
        }
        return zod__WEBPACK_IMPORTED_MODULE_1__.object(obj).partial();
    }
    if ((schema === null || schema === void 0 ? void 0 : schema.type) === 'array' && (schema === null || schema === void 0 ? void 0 : schema.items)) {
        if (Array.isArray(schema.items) && schema.items.length > 1
            && schema.maxItems !== undefined
            && new Set(schema.items.map((item) => item.$id)).size === schema.items.length) {
            const arr = [];
            for (const item of schema.items) {
                const zItem = convertToZod(item);
                if (zItem) {
                    arr.push(zItem);
                }
            }
            return zod__WEBPACK_IMPORTED_MODULE_1__.tuple(arr);
        }
        const nextSchema = Array.isArray(schema.items) ? schema.items[0] : schema.items;
        let zodArraySchema = zod__WEBPACK_IMPORTED_MODULE_1__.array(convertToZod(nextSchema));
        zodArraySchema = schema.minItems !== undefined ? zodArraySchema.min(schema.minItems) : zodArraySchema;
        zodArraySchema = schema.maxItems !== undefined ? zodArraySchema.max(schema.maxItems) : zodArraySchema;
        return zodArraySchema;
    }
    if (schema.oneOf && Array.isArray(schema.oneOf)) {
        return zod__WEBPACK_IMPORTED_MODULE_1__.union(schema.oneOf.map(oneOfSchema => convertToZod(oneOfSchema)));
    }
    if (schema === null || schema === void 0 ? void 0 : schema.format) {
        if (!_formats_js__WEBPACK_IMPORTED_MODULE_5__["default"][schema.format]) {
            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.SchemaFormatError(schema.format);
        }
        return zod__WEBPACK_IMPORTED_MODULE_1__.any().refine(_formats_js__WEBPACK_IMPORTED_MODULE_5__["default"][schema.format], (value) => ({
            params: { value, format: schema.format },
        }));
    }
    if ((schema === null || schema === void 0 ? void 0 : schema.type) &&
        (schema === null || schema === void 0 ? void 0 : schema.type) !== 'object' &&
        typeof zod__WEBPACK_IMPORTED_MODULE_2__[String(schema.type)] === 'function') {
        return zod__WEBPACK_IMPORTED_MODULE_2__[String(schema.type)]();
    }
    return zod__WEBPACK_IMPORTED_MODULE_1__.object({ data: zod__WEBPACK_IMPORTED_MODULE_1__.any() }).partial();
};
class Validator {
    // eslint-disable-next-line no-useless-constructor, @typescript-eslint/no-empty-function
    static factory() {
        if (!Validator.validatorInstance) {
            Validator.validatorInstance = new Validator();
        }
        return Validator.validatorInstance;
    }
    validate(schema, data, options) {
        var _a, _b;
        const zod = convertToZod(schema);
        const result = zod.safeParse(data);
        if (!result.success) {
            const errors = this.convertErrors((_b = (_a = result.error) === null || _a === void 0 ? void 0 : _a.issues) !== null && _b !== void 0 ? _b : []);
            if (errors) {
                if (options === null || options === void 0 ? void 0 : options.silent) {
                    return errors;
                }
                throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.Web3ValidatorError(errors);
            }
        }
        return undefined;
    }
    // eslint-disable-next-line class-methods-use-this
    convertErrors(errors) {
        if (errors && Array.isArray(errors) && errors.length > 0) {
            return errors.map((error) => {
                var _a;
                let message;
                let keyword;
                let params;
                let schemaPath;
                schemaPath = error.path.join('/');
                const field = String(error.path[error.path.length - 1]);
                const instancePath = error.path.join('/');
                if (error.code === zod__WEBPACK_IMPORTED_MODULE_3__.ZodIssueCode.too_big) {
                    keyword = 'maxItems';
                    schemaPath = `${instancePath}/maxItems`;
                    params = { limit: error.maximum };
                    message = `must NOT have more than ${error.maximum} items`;
                }
                else if (error.code === zod__WEBPACK_IMPORTED_MODULE_3__.ZodIssueCode.too_small) {
                    keyword = 'minItems';
                    schemaPath = `${instancePath}/minItems`;
                    params = { limit: error.minimum };
                    message = `must NOT have fewer than ${error.minimum} items`;
                }
                else if (error.code === zod__WEBPACK_IMPORTED_MODULE_3__.ZodIssueCode.custom) {
                    const { value, format } = ((_a = error.params) !== null && _a !== void 0 ? _a : {});
                    if (typeof value === 'undefined') {
                        message = `value at "/${schemaPath}" is required`;
                    }
                    else {
                        message = `value "${
                        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions
                        typeof value === 'object' ? JSON.stringify(value) : value}" at "/${schemaPath}" must pass "${format}" validation`;
                    }
                    params = { value };
                }
                return {
                    keyword: keyword !== null && keyword !== void 0 ? keyword : field,
                    instancePath: instancePath ? `/${instancePath}` : '',
                    schemaPath: schemaPath ? `#${schemaPath}` : '#',
                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
                    params: params !== null && params !== void 0 ? params : { value: error.message },
                    message: message !== null && message !== void 0 ? message : error.message,
                };
            });
        }
        return undefined;
    }
}
//# sourceMappingURL=validator.js.map

/***/ }),

/***/ "./node_modules/web3-validator/lib/esm/web3_validator.js":
/*!***************************************************************!*\
  !*** ./node_modules/web3-validator/lib/esm/web3_validator.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Web3Validator: () => (/* binding */ Web3Validator)
/* harmony export */ });
/* harmony import */ var _validator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validator.js */ "./node_modules/web3-validator/lib/esm/validator.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-validator/lib/esm/utils.js");
/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./errors.js */ "./node_modules/web3-validator/lib/esm/errors.js");



class Web3Validator {
    constructor() {
        this._validator = _validator_js__WEBPACK_IMPORTED_MODULE_0__.Validator.factory();
    }
    validateJSONSchema(schema, data, options) {
        return this._validator.validate(schema, data, options);
    }
    validate(schema, data, options = { silent: false }) {
        var _a, _b;
        const jsonSchema = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.ethAbiToJsonSchema)(schema);
        if (Array.isArray(jsonSchema.items) &&
            ((_a = jsonSchema.items) === null || _a === void 0 ? void 0 : _a.length) === 0 &&
            data.length === 0) {
            return undefined;
        }
        if (Array.isArray(jsonSchema.items) &&
            ((_b = jsonSchema.items) === null || _b === void 0 ? void 0 : _b.length) === 0 &&
            data.length !== 0) {
            throw new _errors_js__WEBPACK_IMPORTED_MODULE_2__.Web3ValidatorError([
                {
                    instancePath: '/0',
                    schemaPath: '/',
                    keyword: 'required',
                    message: 'empty schema against data can not be validated',
                    params: data,
                },
            ]);
        }
        return this._validator.validate(jsonSchema, data, options);
    }
}
//# sourceMappingURL=web3_validator.js.map

/***/ }),

/***/ "./node_modules/web3-validator/node_modules/@noble/hashes/esm/_assert.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/web3-validator/node_modules/@noble/hashes/esm/_assert.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   bool: () => (/* binding */ bool),
/* harmony export */   bytes: () => (/* binding */ bytes),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   exists: () => (/* binding */ exists),
/* harmony export */   hash: () => (/* binding */ hash),
/* harmony export */   isBytes: () => (/* binding */ isBytes),
/* harmony export */   number: () => (/* binding */ number),
/* harmony export */   output: () => (/* binding */ output)
/* harmony export */ });
function number(n) {
    if (!Number.isSafeInteger(n) || n < 0)
        throw new Error(`positive integer expected, not ${n}`);
}
function bool(b) {
    if (typeof b !== 'boolean')
        throw new Error(`boolean expected, not ${b}`);
}
// copied from utils
function isBytes(a) {
    return (a instanceof Uint8Array ||
        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));
}
function bytes(b, ...lengths) {
    if (!isBytes(b))
        throw new Error('Uint8Array expected');
    if (lengths.length > 0 && !lengths.includes(b.length))
        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);
}
function hash(h) {
    if (typeof h !== 'function' || typeof h.create !== 'function')
        throw new Error('Hash should be wrapped by utils.wrapConstructor');
    number(h.outputLen);
    number(h.blockLen);
}
function exists(instance, checkFinished = true) {
    if (instance.destroyed)
        throw new Error('Hash instance has been destroyed');
    if (checkFinished && instance.finished)
        throw new Error('Hash#digest() has already been called');
}
function output(out, instance) {
    bytes(out);
    const min = instance.outputLen;
    if (out.length < min) {
        throw new Error(`digestInto() expects output buffer of length at least ${min}`);
    }
}

const assert = { number, bool, bytes, hash, exists, output };
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (assert);
//# sourceMappingURL=_assert.js.map

/***/ }),

/***/ "./node_modules/web3-validator/node_modules/@noble/hashes/esm/_u64.js":
/*!****************************************************************************!*\
  !*** ./node_modules/web3-validator/node_modules/@noble/hashes/esm/_u64.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   add: () => (/* binding */ add),
/* harmony export */   add3H: () => (/* binding */ add3H),
/* harmony export */   add3L: () => (/* binding */ add3L),
/* harmony export */   add4H: () => (/* binding */ add4H),
/* harmony export */   add4L: () => (/* binding */ add4L),
/* harmony export */   add5H: () => (/* binding */ add5H),
/* harmony export */   add5L: () => (/* binding */ add5L),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   fromBig: () => (/* binding */ fromBig),
/* harmony export */   rotlBH: () => (/* binding */ rotlBH),
/* harmony export */   rotlBL: () => (/* binding */ rotlBL),
/* harmony export */   rotlSH: () => (/* binding */ rotlSH),
/* harmony export */   rotlSL: () => (/* binding */ rotlSL),
/* harmony export */   rotr32H: () => (/* binding */ rotr32H),
/* harmony export */   rotr32L: () => (/* binding */ rotr32L),
/* harmony export */   rotrBH: () => (/* binding */ rotrBH),
/* harmony export */   rotrBL: () => (/* binding */ rotrBL),
/* harmony export */   rotrSH: () => (/* binding */ rotrSH),
/* harmony export */   rotrSL: () => (/* binding */ rotrSL),
/* harmony export */   shrSH: () => (/* binding */ shrSH),
/* harmony export */   shrSL: () => (/* binding */ shrSL),
/* harmony export */   split: () => (/* binding */ split),
/* harmony export */   toBig: () => (/* binding */ toBig)
/* harmony export */ });
const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);
const _32n = /* @__PURE__ */ BigInt(32);
// We are not using BigUint64Array, because they are extremely slow as per 2022
function fromBig(n, le = false) {
    if (le)
        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };
    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };
}
function split(lst, le = false) {
    let Ah = new Uint32Array(lst.length);
    let Al = new Uint32Array(lst.length);
    for (let i = 0; i < lst.length; i++) {
        const { h, l } = fromBig(lst[i], le);
        [Ah[i], Al[i]] = [h, l];
    }
    return [Ah, Al];
}
const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);
// for Shift in [0, 32)
const shrSH = (h, _l, s) => h >>> s;
const shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);
// Right rotate for Shift in [1, 32)
const rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));
const rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);
// Right rotate for Shift in (32, 64), NOTE: 32 is special case.
const rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));
const rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));
// Right rotate for shift===32 (just swaps l&h)
const rotr32H = (_h, l) => l;
const rotr32L = (h, _l) => h;
// Left rotate for Shift in [1, 32)
const rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));
const rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));
// Left rotate for Shift in (32, 64), NOTE: 32 is special case.
const rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));
const rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));
// JS uses 32-bit signed integers for bitwise operations which means we cannot
// simple take carry out of low bit sum by shift, we need to use division.
function add(Ah, Al, Bh, Bl) {
    const l = (Al >>> 0) + (Bl >>> 0);
    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };
}
// Addition with more than 2 elements
const add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);
const add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;
const add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);
const add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;
const add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);
const add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;
// prettier-ignore

// prettier-ignore
const u64 = {
    fromBig, split, toBig,
    shrSH, shrSL,
    rotrSH, rotrSL, rotrBH, rotrBL,
    rotr32H, rotr32L,
    rotlSH, rotlSL, rotlBH, rotlBL,
    add, add3L, add3H, add4L, add4H, add5H, add5L,
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (u64);
//# sourceMappingURL=_u64.js.map

/***/ }),

/***/ "./node_modules/web3-validator/node_modules/@noble/hashes/esm/crypto.js":
/*!******************************************************************************!*\
  !*** ./node_modules/web3-validator/node_modules/@noble/hashes/esm/crypto.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   crypto: () => (/* binding */ crypto)
/* harmony export */ });
const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;
//# sourceMappingURL=crypto.js.map

/***/ }),

/***/ "./node_modules/web3-validator/node_modules/@noble/hashes/esm/sha3.js":
/*!****************************************************************************!*\
  !*** ./node_modules/web3-validator/node_modules/@noble/hashes/esm/sha3.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Keccak: () => (/* binding */ Keccak),
/* harmony export */   keccakP: () => (/* binding */ keccakP),
/* harmony export */   keccak_224: () => (/* binding */ keccak_224),
/* harmony export */   keccak_256: () => (/* binding */ keccak_256),
/* harmony export */   keccak_384: () => (/* binding */ keccak_384),
/* harmony export */   keccak_512: () => (/* binding */ keccak_512),
/* harmony export */   sha3_224: () => (/* binding */ sha3_224),
/* harmony export */   sha3_256: () => (/* binding */ sha3_256),
/* harmony export */   sha3_384: () => (/* binding */ sha3_384),
/* harmony export */   sha3_512: () => (/* binding */ sha3_512),
/* harmony export */   shake128: () => (/* binding */ shake128),
/* harmony export */   shake256: () => (/* binding */ shake256)
/* harmony export */ });
/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_assert.js */ "./node_modules/web3-validator/node_modules/@noble/hashes/esm/_assert.js");
/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_u64.js */ "./node_modules/web3-validator/node_modules/@noble/hashes/esm/_u64.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-validator/node_modules/@noble/hashes/esm/utils.js");



// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.
// It's called a sponge function.
// Various per round constants calculations
const SHA3_PI = [];
const SHA3_ROTL = [];
const _SHA3_IOTA = [];
const _0n = /* @__PURE__ */ BigInt(0);
const _1n = /* @__PURE__ */ BigInt(1);
const _2n = /* @__PURE__ */ BigInt(2);
const _7n = /* @__PURE__ */ BigInt(7);
const _256n = /* @__PURE__ */ BigInt(256);
const _0x71n = /* @__PURE__ */ BigInt(0x71);
for (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {
    // Pi
    [x, y] = [y, (2 * x + 3 * y) % 5];
    SHA3_PI.push(2 * (5 * y + x));
    // Rotational
    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);
    // Iota
    let t = _0n;
    for (let j = 0; j < 7; j++) {
        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;
        if (R & _2n)
            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);
    }
    _SHA3_IOTA.push(t);
}
const [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ (0,_u64_js__WEBPACK_IMPORTED_MODULE_1__.split)(_SHA3_IOTA, true);
// Left rotation (without 0, 32, 64)
const rotlH = (h, l, s) => (s > 32 ? (0,_u64_js__WEBPACK_IMPORTED_MODULE_1__.rotlBH)(h, l, s) : (0,_u64_js__WEBPACK_IMPORTED_MODULE_1__.rotlSH)(h, l, s));
const rotlL = (h, l, s) => (s > 32 ? (0,_u64_js__WEBPACK_IMPORTED_MODULE_1__.rotlBL)(h, l, s) : (0,_u64_js__WEBPACK_IMPORTED_MODULE_1__.rotlSL)(h, l, s));
// Same as keccakf1600, but allows to skip some rounds
function keccakP(s, rounds = 24) {
    const B = new Uint32Array(5 * 2);
    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)
    for (let round = 24 - rounds; round < 24; round++) {
        // Theta θ
        for (let x = 0; x < 10; x++)
            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];
        for (let x = 0; x < 10; x += 2) {
            const idx1 = (x + 8) % 10;
            const idx0 = (x + 2) % 10;
            const B0 = B[idx0];
            const B1 = B[idx0 + 1];
            const Th = rotlH(B0, B1, 1) ^ B[idx1];
            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];
            for (let y = 0; y < 50; y += 10) {
                s[x + y] ^= Th;
                s[x + y + 1] ^= Tl;
            }
        }
        // Rho (ρ) and Pi (π)
        let curH = s[2];
        let curL = s[3];
        for (let t = 0; t < 24; t++) {
            const shift = SHA3_ROTL[t];
            const Th = rotlH(curH, curL, shift);
            const Tl = rotlL(curH, curL, shift);
            const PI = SHA3_PI[t];
            curH = s[PI];
            curL = s[PI + 1];
            s[PI] = Th;
            s[PI + 1] = Tl;
        }
        // Chi (χ)
        for (let y = 0; y < 50; y += 10) {
            for (let x = 0; x < 10; x++)
                B[x] = s[y + x];
            for (let x = 0; x < 10; x++)
                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];
        }
        // Iota (ι)
        s[0] ^= SHA3_IOTA_H[round];
        s[1] ^= SHA3_IOTA_L[round];
    }
    B.fill(0);
}
class Keccak extends _utils_js__WEBPACK_IMPORTED_MODULE_2__.Hash {
    // NOTE: we accept arguments in bytes instead of bits here.
    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {
        super();
        this.blockLen = blockLen;
        this.suffix = suffix;
        this.outputLen = outputLen;
        this.enableXOF = enableXOF;
        this.rounds = rounds;
        this.pos = 0;
        this.posOut = 0;
        this.finished = false;
        this.destroyed = false;
        // Can be passed from user as dkLen
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.number)(outputLen);
        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes
        if (0 >= this.blockLen || this.blockLen >= 200)
            throw new Error('Sha3 supports only keccak-f1600 function');
        this.state = new Uint8Array(200);
        this.state32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.u32)(this.state);
    }
    keccak() {
        if (!_utils_js__WEBPACK_IMPORTED_MODULE_2__.isLE)
            (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.byteSwap32)(this.state32);
        keccakP(this.state32, this.rounds);
        if (!_utils_js__WEBPACK_IMPORTED_MODULE_2__.isLE)
            (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.byteSwap32)(this.state32);
        this.posOut = 0;
        this.pos = 0;
    }
    update(data) {
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.exists)(this);
        const { blockLen, state } = this;
        data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(data);
        const len = data.length;
        for (let pos = 0; pos < len;) {
            const take = Math.min(blockLen - this.pos, len - pos);
            for (let i = 0; i < take; i++)
                state[this.pos++] ^= data[pos++];
            if (this.pos === blockLen)
                this.keccak();
        }
        return this;
    }
    finish() {
        if (this.finished)
            return;
        this.finished = true;
        const { state, suffix, pos, blockLen } = this;
        // Do the padding
        state[pos] ^= suffix;
        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)
            this.keccak();
        state[blockLen - 1] ^= 0x80;
        this.keccak();
    }
    writeInto(out) {
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.exists)(this, false);
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.bytes)(out);
        this.finish();
        const bufferOut = this.state;
        const { blockLen } = this;
        for (let pos = 0, len = out.length; pos < len;) {
            if (this.posOut >= blockLen)
                this.keccak();
            const take = Math.min(blockLen - this.posOut, len - pos);
            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);
            this.posOut += take;
            pos += take;
        }
        return out;
    }
    xofInto(out) {
        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF
        if (!this.enableXOF)
            throw new Error('XOF is not possible for this instance');
        return this.writeInto(out);
    }
    xof(bytes) {
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.number)(bytes);
        return this.xofInto(new Uint8Array(bytes));
    }
    digestInto(out) {
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.output)(out, this);
        if (this.finished)
            throw new Error('digest() was already called');
        this.writeInto(out);
        this.destroy();
        return out;
    }
    digest() {
        return this.digestInto(new Uint8Array(this.outputLen));
    }
    destroy() {
        this.destroyed = true;
        this.state.fill(0);
    }
    _cloneInto(to) {
        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;
        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));
        to.state32.set(this.state32);
        to.pos = this.pos;
        to.posOut = this.posOut;
        to.finished = this.finished;
        to.rounds = rounds;
        // Suffix can change in cSHAKE
        to.suffix = suffix;
        to.outputLen = outputLen;
        to.enableXOF = enableXOF;
        to.destroyed = this.destroyed;
        return to;
    }
}
const gen = (suffix, blockLen, outputLen) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));
const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);
/**
 * SHA3-256 hash function
 * @param message - that would be hashed
 */
const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);
const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);
const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);
const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);
/**
 * keccak-256 hash function. Different from SHA3-256.
 * @param message - that would be hashed
 */
const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);
const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);
const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);
const genShake = (suffix, blockLen, outputLen) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapXOFConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));
const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);
const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);
//# sourceMappingURL=sha3.js.map

/***/ }),

/***/ "./node_modules/web3-validator/node_modules/@noble/hashes/esm/utils.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/web3-validator/node_modules/@noble/hashes/esm/utils.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Hash: () => (/* binding */ Hash),
/* harmony export */   asyncLoop: () => (/* binding */ asyncLoop),
/* harmony export */   byteSwap: () => (/* binding */ byteSwap),
/* harmony export */   byteSwap32: () => (/* binding */ byteSwap32),
/* harmony export */   byteSwapIfBE: () => (/* binding */ byteSwapIfBE),
/* harmony export */   bytesToHex: () => (/* binding */ bytesToHex),
/* harmony export */   checkOpts: () => (/* binding */ checkOpts),
/* harmony export */   concatBytes: () => (/* binding */ concatBytes),
/* harmony export */   createView: () => (/* binding */ createView),
/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),
/* harmony export */   isBytes: () => (/* binding */ isBytes),
/* harmony export */   isLE: () => (/* binding */ isLE),
/* harmony export */   nextTick: () => (/* binding */ nextTick),
/* harmony export */   randomBytes: () => (/* binding */ randomBytes),
/* harmony export */   rotl: () => (/* binding */ rotl),
/* harmony export */   rotr: () => (/* binding */ rotr),
/* harmony export */   toBytes: () => (/* binding */ toBytes),
/* harmony export */   u32: () => (/* binding */ u32),
/* harmony export */   u8: () => (/* binding */ u8),
/* harmony export */   utf8ToBytes: () => (/* binding */ utf8ToBytes),
/* harmony export */   wrapConstructor: () => (/* binding */ wrapConstructor),
/* harmony export */   wrapConstructorWithOpts: () => (/* binding */ wrapConstructorWithOpts),
/* harmony export */   wrapXOFConstructorWithOpts: () => (/* binding */ wrapXOFConstructorWithOpts)
/* harmony export */ });
/* harmony import */ var _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/crypto */ "./node_modules/web3-validator/node_modules/@noble/hashes/esm/crypto.js");
/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_assert.js */ "./node_modules/web3-validator/node_modules/@noble/hashes/esm/_assert.js");
/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.
// node.js versions earlier than v19 don't declare it in global scope.
// For node.js, package.json#exports field mapping rewrites import
// from `crypto` to `cryptoNode`, which imports native module.
// Makes the utils un-importable in browsers without a bundler.
// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.


// export { isBytes } from './_assert.js';
// We can't reuse isBytes from _assert, because somehow this causes huge perf issues
function isBytes(a) {
    return (a instanceof Uint8Array ||
        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));
}
// Cast array to different type
const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);
const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));
// Cast array to view
const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);
// The rotate right (circular right shift) operation for uint32
const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);
// The rotate left (circular left shift) operation for uint32
const rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);
const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;
// The byte swap operation for uint32
const byteSwap = (word) => ((word << 24) & 0xff000000) |
    ((word << 8) & 0xff0000) |
    ((word >>> 8) & 0xff00) |
    ((word >>> 24) & 0xff);
// Conditionally byte swap if on a big-endian platform
const byteSwapIfBE = isLE ? (n) => n : (n) => byteSwap(n);
// In place byte swap for Uint32Array
function byteSwap32(arr) {
    for (let i = 0; i < arr.length; i++) {
        arr[i] = byteSwap(arr[i]);
    }
}
// Array where index 0xf0 (240) is mapped to string 'f0'
const hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));
/**
 * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'
 */
function bytesToHex(bytes) {
    (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.bytes)(bytes);
    // pre-caching improves the speed 6x
    let hex = '';
    for (let i = 0; i < bytes.length; i++) {
        hex += hexes[bytes[i]];
    }
    return hex;
}
// We use optimized technique to convert hex string to byte array
const asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };
function asciiToBase16(char) {
    if (char >= asciis._0 && char <= asciis._9)
        return char - asciis._0;
    if (char >= asciis._A && char <= asciis._F)
        return char - (asciis._A - 10);
    if (char >= asciis._a && char <= asciis._f)
        return char - (asciis._a - 10);
    return;
}
/**
 * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])
 */
function hexToBytes(hex) {
    if (typeof hex !== 'string')
        throw new Error('hex string expected, got ' + typeof hex);
    const hl = hex.length;
    const al = hl / 2;
    if (hl % 2)
        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);
    const array = new Uint8Array(al);
    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {
        const n1 = asciiToBase16(hex.charCodeAt(hi));
        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));
        if (n1 === undefined || n2 === undefined) {
            const char = hex[hi] + hex[hi + 1];
            throw new Error('hex string expected, got non-hex character "' + char + '" at index ' + hi);
        }
        array[ai] = n1 * 16 + n2;
    }
    return array;
}
// There is no setImmediate in browser and setTimeout is slow.
// call of async fn will return Promise, which will be fullfiled only on
// next scheduler queue processing step and this is exactly what we need.
const nextTick = async () => { };
// Returns control to thread each 'tick' ms to avoid blocking
async function asyncLoop(iters, tick, cb) {
    let ts = Date.now();
    for (let i = 0; i < iters; i++) {
        cb(i);
        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too
        const diff = Date.now() - ts;
        if (diff >= 0 && diff < tick)
            continue;
        await nextTick();
        ts += diff;
    }
}
/**
 * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])
 */
function utf8ToBytes(str) {
    if (typeof str !== 'string')
        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);
    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809
}
/**
 * Normalizes (non-hex) string or Uint8Array to Uint8Array.
 * Warning: when Uint8Array is passed, it would NOT get copied.
 * Keep in mind for future mutable operations.
 */
function toBytes(data) {
    if (typeof data === 'string')
        data = utf8ToBytes(data);
    (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.bytes)(data);
    return data;
}
/**
 * Copies several Uint8Arrays into one.
 */
function concatBytes(...arrays) {
    let sum = 0;
    for (let i = 0; i < arrays.length; i++) {
        const a = arrays[i];
        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.bytes)(a);
        sum += a.length;
    }
    const res = new Uint8Array(sum);
    for (let i = 0, pad = 0; i < arrays.length; i++) {
        const a = arrays[i];
        res.set(a, pad);
        pad += a.length;
    }
    return res;
}
// For runtime check if class implements interface
class Hash {
    // Safe version that clones internal state
    clone() {
        return this._cloneInto();
    }
}
const toStr = {}.toString;
function checkOpts(defaults, opts) {
    if (opts !== undefined && toStr.call(opts) !== '[object Object]')
        throw new Error('Options should be object or undefined');
    const merged = Object.assign(defaults, opts);
    return merged;
}
function wrapConstructor(hashCons) {
    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();
    const tmp = hashCons();
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = () => hashCons();
    return hashC;
}
function wrapConstructorWithOpts(hashCons) {
    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();
    const tmp = hashCons({});
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = (opts) => hashCons(opts);
    return hashC;
}
function wrapXOFConstructorWithOpts(hashCons) {
    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();
    const tmp = hashCons({});
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = (opts) => hashCons(opts);
    return hashC;
}
/**
 * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.
 */
function randomBytes(bytesLength = 32) {
    if (_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto && typeof _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.getRandomValues === 'function') {
        return _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.getRandomValues(new Uint8Array(bytesLength));
    }
    throw new Error('crypto.getRandomValues must be defined');
}
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "./node_modules/web3-validator/node_modules/ethereum-cryptography/esm/keccak.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/web3-validator/node_modules/ethereum-cryptography/esm/keccak.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   keccak224: () => (/* binding */ keccak224),
/* harmony export */   keccak256: () => (/* binding */ keccak256),
/* harmony export */   keccak384: () => (/* binding */ keccak384),
/* harmony export */   keccak512: () => (/* binding */ keccak512)
/* harmony export */ });
/* harmony import */ var _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/sha3 */ "./node_modules/web3-validator/node_modules/@noble/hashes/esm/sha3.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ "./node_modules/web3-validator/node_modules/ethereum-cryptography/esm/utils.js");


const keccak224 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapHash)(_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__.keccak_224);
const keccak256 = (() => {
    const k = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapHash)(_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__.keccak_256);
    k.create = _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__.keccak_256.create;
    return k;
})();
const keccak384 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapHash)(_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__.keccak_384);
const keccak512 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapHash)(_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__.keccak_512);


/***/ }),

/***/ "./node_modules/web3-validator/node_modules/ethereum-cryptography/esm/utils.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/web3-validator/node_modules/ethereum-cryptography/esm/utils.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   assertBool: () => (/* binding */ assertBool),
/* harmony export */   assertBytes: () => (/* binding */ assertBytes),
/* harmony export */   bytesToHex: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex),
/* harmony export */   bytesToUtf8: () => (/* binding */ bytesToUtf8),
/* harmony export */   concatBytes: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.concatBytes),
/* harmony export */   createView: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.createView),
/* harmony export */   crypto: () => (/* binding */ crypto),
/* harmony export */   equalsBytes: () => (/* binding */ equalsBytes),
/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),
/* harmony export */   toHex: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex),
/* harmony export */   utf8ToBytes: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes),
/* harmony export */   wrapHash: () => (/* binding */ wrapHash)
/* harmony export */ });
/* harmony import */ var _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/_assert */ "./node_modules/web3-validator/node_modules/@noble/hashes/esm/_assert.js");
/* harmony import */ var _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/utils */ "./node_modules/web3-validator/node_modules/@noble/hashes/esm/utils.js");


const assertBool = _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__["default"].bool;
const assertBytes = _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__["default"].bytes;


// buf.toString('utf8') -> bytesToUtf8(buf)
function bytesToUtf8(data) {
    if (!(data instanceof Uint8Array)) {
        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);
    }
    return new TextDecoder().decode(data);
}
function hexToBytes(data) {
    const sliced = data.startsWith("0x") ? data.substring(2) : data;
    return (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(sliced);
}
// buf.equals(buf2) -> equalsBytes(buf, buf2)
function equalsBytes(a, b) {
    if (a.length !== b.length) {
        return false;
    }
    for (let i = 0; i < a.length; i++) {
        if (a[i] !== b[i]) {
            return false;
        }
    }
    return true;
}
// Internal utils
function wrapHash(hash) {
    return (msg) => {
        _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__["default"].bytes(msg);
        return hash(msg);
    };
}
// TODO(v3): switch away from node crypto, remove this unnecessary variable.
const crypto = (() => {
    const webCrypto = typeof globalThis === "object" && "crypto" in globalThis ? globalThis.crypto : undefined;
    const nodeRequire = typeof module !== "undefined" &&
        typeof module.require === "function" &&
        module.require.bind(module);
    return {
        node: nodeRequire && !webCrypto ? nodeRequire("crypto") : undefined,
        web: webCrypto
    };
})();


/***/ }),

/***/ "./node_modules/web3/lib/esm/abi.js":
/*!******************************************!*\
  !*** ./node_modules/web3/lib/esm/abi.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var web3_eth_abi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-eth-abi */ "./node_modules/web3-eth-abi/lib/esm/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

/**
 * The object for `web3.abi`
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    encodeEventSignature: web3_eth_abi__WEBPACK_IMPORTED_MODULE_0__.encodeEventSignature,
    encodeFunctionCall: web3_eth_abi__WEBPACK_IMPORTED_MODULE_0__.encodeFunctionCall,
    encodeFunctionSignature: web3_eth_abi__WEBPACK_IMPORTED_MODULE_0__.encodeFunctionSignature,
    encodeParameter: web3_eth_abi__WEBPACK_IMPORTED_MODULE_0__.encodeParameter,
    encodeParameters: web3_eth_abi__WEBPACK_IMPORTED_MODULE_0__.encodeParameters,
    decodeParameter: web3_eth_abi__WEBPACK_IMPORTED_MODULE_0__.decodeParameter,
    decodeParameters: web3_eth_abi__WEBPACK_IMPORTED_MODULE_0__.decodeParameters,
    decodeLog: web3_eth_abi__WEBPACK_IMPORTED_MODULE_0__.decodeLog,
});
//# sourceMappingURL=abi.js.map

/***/ }),

/***/ "./node_modules/web3/lib/esm/accounts.js":
/*!***********************************************!*\
  !*** ./node_modules/web3/lib/esm/accounts.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   initAccountsForContext: () => (/* binding */ initAccountsForContext)
/* harmony export */ });
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_eth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-eth */ "./node_modules/web3-eth/lib/esm/index.js");
/* harmony import */ var web3_eth_accounts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-eth-accounts */ "./node_modules/web3-eth-accounts/lib/esm/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




/**
 * Initialize the accounts module for the given context.
 *
 * To avoid multiple package dependencies for `web3-eth-accounts` we are creating
 * this function in `web3` package. In future the actual `web3-eth-accounts` package
 * should be converted to context aware.
 */
const initAccountsForContext = (context) => {
    const signTransactionWithContext = (transaction, privateKey) => __awaiter(void 0, void 0, void 0, function* () {
        const tx = yield (0,web3_eth__WEBPACK_IMPORTED_MODULE_2__.prepareTransactionForSigning)(transaction, context);
        const privateKeyBytes = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.format)({ format: 'bytes' }, privateKey, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);
        return (0,web3_eth_accounts__WEBPACK_IMPORTED_MODULE_3__.signTransaction)(tx, privateKeyBytes);
    });
    const privateKeyToAccountWithContext = (privateKey) => {
        const account = (0,web3_eth_accounts__WEBPACK_IMPORTED_MODULE_3__.privateKeyToAccount)(privateKey);
        return Object.assign(Object.assign({}, account), { signTransaction: (transaction) => __awaiter(void 0, void 0, void 0, function* () { return signTransactionWithContext(transaction, account.privateKey); }) });
    };
    const decryptWithContext = (keystore, password, options) => __awaiter(void 0, void 0, void 0, function* () {
        var _a;
        const account = yield (0,web3_eth_accounts__WEBPACK_IMPORTED_MODULE_3__.decrypt)(keystore, password, (_a = options === null || options === void 0 ? void 0 : options.nonStrict) !== null && _a !== void 0 ? _a : true);
        return Object.assign(Object.assign({}, account), { signTransaction: (transaction) => __awaiter(void 0, void 0, void 0, function* () { return signTransactionWithContext(transaction, account.privateKey); }) });
    });
    const createWithContext = () => {
        const account = (0,web3_eth_accounts__WEBPACK_IMPORTED_MODULE_3__.create)();
        return Object.assign(Object.assign({}, account), { signTransaction: (transaction) => __awaiter(void 0, void 0, void 0, function* () { return signTransactionWithContext(transaction, account.privateKey); }) });
    };
    const wallet = new web3_eth_accounts__WEBPACK_IMPORTED_MODULE_3__.Wallet({
        create: createWithContext,
        privateKeyToAccount: privateKeyToAccountWithContext,
        decrypt: decryptWithContext,
    });
    return {
        signTransaction: signTransactionWithContext,
        create: createWithContext,
        privateKeyToAccount: privateKeyToAccountWithContext,
        decrypt: decryptWithContext,
        recoverTransaction: web3_eth_accounts__WEBPACK_IMPORTED_MODULE_3__.recoverTransaction,
        hashMessage: web3_eth_accounts__WEBPACK_IMPORTED_MODULE_3__.hashMessage,
        sign: web3_eth_accounts__WEBPACK_IMPORTED_MODULE_3__.sign,
        recover: web3_eth_accounts__WEBPACK_IMPORTED_MODULE_3__.recover,
        encrypt: web3_eth_accounts__WEBPACK_IMPORTED_MODULE_3__.encrypt,
        wallet,
        privateKeyToAddress: web3_eth_accounts__WEBPACK_IMPORTED_MODULE_3__.privateKeyToAddress,
        parseAndValidatePrivateKey: web3_eth_accounts__WEBPACK_IMPORTED_MODULE_3__.parseAndValidatePrivateKey,
        privateKeyToPublicKey: web3_eth_accounts__WEBPACK_IMPORTED_MODULE_3__.privateKeyToPublicKey,
    };
};
//# sourceMappingURL=accounts.js.map

/***/ }),

/***/ "./node_modules/web3/lib/esm/eth.exports.js":
/*!**************************************************!*\
  !*** ./node_modules/web3/lib/esm/eth.exports.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ALL_EVENTS: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.ALL_EVENTS),
/* harmony export */   ALL_EVENTS_ABI: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.ALL_EVENTS_ABI),
/* harmony export */   LogsSubscription: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.LogsSubscription),
/* harmony export */   NUMBER_DATA_FORMAT: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.NUMBER_DATA_FORMAT),
/* harmony export */   NewHeadsSubscription: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.NewHeadsSubscription),
/* harmony export */   NewPendingTransactionsSubscription: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.NewPendingTransactionsSubscription),
/* harmony export */   SendTxHelper: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.SendTxHelper),
/* harmony export */   SignatureObjectSchema: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.SignatureObjectSchema),
/* harmony export */   SyncingSubscription: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.SyncingSubscription),
/* harmony export */   Web3Eth: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.Web3Eth),
/* harmony export */   abi: () => (/* reexport module object */ web3_eth_abi__WEBPACK_IMPORTED_MODULE_1__),
/* harmony export */   accessListItemSchema: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.accessListItemSchema),
/* harmony export */   accessListResultSchema: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.accessListResultSchema),
/* harmony export */   accessListSchema: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.accessListSchema),
/* harmony export */   accountSchema: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.accountSchema),
/* harmony export */   accounts: () => (/* reexport module object */ web3_eth_accounts__WEBPACK_IMPORTED_MODULE_2__),
/* harmony export */   blockHeaderSchema: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.blockHeaderSchema),
/* harmony export */   blockSchema: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.blockSchema),
/* harmony export */   call: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.call),
/* harmony export */   chainSchema: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.chainSchema),
/* harmony export */   contract: () => (/* reexport module object */ web3_eth_contract__WEBPACK_IMPORTED_MODULE_3__),
/* harmony export */   createAccessList: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.createAccessList),
/* harmony export */   customChainSchema: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.customChainSchema),
/* harmony export */   decodeEventABI: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.decodeEventABI),
/* harmony export */   detectTransactionType: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.detectTransactionType),
/* harmony export */   ens: () => (/* reexport module object */ web3_eth_ens__WEBPACK_IMPORTED_MODULE_4__),
/* harmony export */   estimateGas: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.estimateGas),
/* harmony export */   feeHistorySchema: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.feeHistorySchema),
/* harmony export */   formatTransaction: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.formatTransaction),
/* harmony export */   getBalance: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.getBalance),
/* harmony export */   getBlock: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.getBlock),
/* harmony export */   getBlockNumber: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.getBlockNumber),
/* harmony export */   getBlockTransactionCount: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.getBlockTransactionCount),
/* harmony export */   getBlockUncleCount: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.getBlockUncleCount),
/* harmony export */   getChainId: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.getChainId),
/* harmony export */   getCode: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.getCode),
/* harmony export */   getCoinbase: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.getCoinbase),
/* harmony export */   getFeeHistory: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.getFeeHistory),
/* harmony export */   getGasPrice: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.getGasPrice),
/* harmony export */   getHashRate: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.getHashRate),
/* harmony export */   getLogs: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.getLogs),
/* harmony export */   getMaxPriorityFeePerGas: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.getMaxPriorityFeePerGas),
/* harmony export */   getPendingTransactions: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.getPendingTransactions),
/* harmony export */   getProof: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.getProof),
/* harmony export */   getProtocolVersion: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.getProtocolVersion),
/* harmony export */   getStorageAt: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.getStorageAt),
/* harmony export */   getTransaction: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.getTransaction),
/* harmony export */   getTransactionCount: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.getTransactionCount),
/* harmony export */   getTransactionFromBlock: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.getTransactionFromBlock),
/* harmony export */   getTransactionFromOrToAttr: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.getTransactionFromOrToAttr),
/* harmony export */   getTransactionReceipt: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.getTransactionReceipt),
/* harmony export */   getUncle: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.getUncle),
/* harmony export */   hardforkSchema: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.hardforkSchema),
/* harmony export */   iban: () => (/* reexport module object */ web3_eth_iban__WEBPACK_IMPORTED_MODULE_6__),
/* harmony export */   isAccessList: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.isAccessList),
/* harmony export */   isAccessListEntry: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.isAccessListEntry),
/* harmony export */   isBaseTransaction: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.isBaseTransaction),
/* harmony export */   isMining: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.isMining),
/* harmony export */   isSyncing: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.isSyncing),
/* harmony export */   isTransaction1559Unsigned: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.isTransaction1559Unsigned),
/* harmony export */   isTransaction2930Unsigned: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.isTransaction2930Unsigned),
/* harmony export */   isTransactionCall: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.isTransactionCall),
/* harmony export */   isTransactionLegacyUnsigned: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.isTransactionLegacyUnsigned),
/* harmony export */   isTransactionWithSender: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.isTransactionWithSender),
/* harmony export */   logSchema: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.logSchema),
/* harmony export */   personal: () => (/* reexport module object */ web3_eth_personal__WEBPACK_IMPORTED_MODULE_5__),
/* harmony export */   prepareTransactionForSigning: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.prepareTransactionForSigning),
/* harmony export */   registeredSubscriptions: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.registeredSubscriptions),
/* harmony export */   sendSignedTransaction: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.sendSignedTransaction),
/* harmony export */   sendTransaction: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.sendTransaction),
/* harmony export */   sign: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.sign),
/* harmony export */   signTransaction: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.signTransaction),
/* harmony export */   signTypedData: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.signTypedData),
/* harmony export */   storageProofSchema: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.storageProofSchema),
/* harmony export */   syncSchema: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.syncSchema),
/* harmony export */   transactionBuilder: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.transactionBuilder),
/* harmony export */   transactionInfoSchema: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.transactionInfoSchema),
/* harmony export */   transactionReceiptSchema: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.transactionReceiptSchema),
/* harmony export */   transactionSchema: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.transactionSchema),
/* harmony export */   trySendTransaction: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.trySendTransaction),
/* harmony export */   validateBaseChain: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.validateBaseChain),
/* harmony export */   validateChainInfo: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.validateChainInfo),
/* harmony export */   validateCustomChainInfo: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.validateCustomChainInfo),
/* harmony export */   validateFeeMarketGas: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.validateFeeMarketGas),
/* harmony export */   validateGas: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.validateGas),
/* harmony export */   validateHardfork: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.validateHardfork),
/* harmony export */   validateLegacyGas: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.validateLegacyGas),
/* harmony export */   validateTransactionCall: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.validateTransactionCall),
/* harmony export */   validateTransactionForSigning: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.validateTransactionForSigning),
/* harmony export */   validateTransactionWithSender: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.validateTransactionWithSender),
/* harmony export */   waitForTransactionReceipt: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.waitForTransactionReceipt),
/* harmony export */   withdrawalsSchema: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_0__.withdrawalsSchema)
/* harmony export */ });
/* harmony import */ var web3_eth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-eth */ "./node_modules/web3-eth/lib/esm/index.js");
/* harmony import */ var web3_eth_abi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-eth-abi */ "./node_modules/web3-eth-abi/lib/esm/index.js");
/* harmony import */ var web3_eth_accounts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-eth-accounts */ "./node_modules/web3-eth-accounts/lib/esm/index.js");
/* harmony import */ var web3_eth_contract__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-eth-contract */ "./node_modules/web3-eth-contract/lib/esm/index.js");
/* harmony import */ var web3_eth_ens__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! web3-eth-ens */ "./node_modules/web3-eth-ens/lib/esm/index.js");
/* harmony import */ var web3_eth_personal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! web3-eth-personal */ "./node_modules/web3-eth-personal/lib/esm/index.js");
/* harmony import */ var web3_eth_iban__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! web3-eth-iban */ "./node_modules/web3-eth-iban/lib/esm/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/







//# sourceMappingURL=eth.exports.js.map

/***/ }),

/***/ "./node_modules/web3/lib/esm/index.js":
/*!********************************************!*\
  !*** ./node_modules/web3/lib/esm/index.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AbiError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.AbiError),
/* harmony export */   BaseWeb3Error: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.BaseWeb3Error),
/* harmony export */   BlockTags: () => (/* reexport safe */ web3_types__WEBPACK_IMPORTED_MODULE_16__.BlockTags),
/* harmony export */   ChainIdMismatchError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ChainIdMismatchError),
/* harmony export */   ChainMismatchError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ChainMismatchError),
/* harmony export */   CommonOrChainAndHardforkError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.CommonOrChainAndHardforkError),
/* harmony export */   ConfigChainMismatchError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ConfigChainMismatchError),
/* harmony export */   ConfigHardforkMismatchError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ConfigHardforkMismatchError),
/* harmony export */   ConnectionCloseError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ConnectionCloseError),
/* harmony export */   ConnectionError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ConnectionError),
/* harmony export */   ConnectionNotOpenError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ConnectionNotOpenError),
/* harmony export */   ConnectionTimeoutError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ConnectionTimeoutError),
/* harmony export */   Contract: () => (/* reexport safe */ web3_eth_contract__WEBPACK_IMPORTED_MODULE_5__.Contract),
/* harmony export */   ContractCodeNotStoredError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ContractCodeNotStoredError),
/* harmony export */   ContractEventDoesNotExistError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ContractEventDoesNotExistError),
/* harmony export */   ContractExecutionError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ContractExecutionError),
/* harmony export */   ContractInstantiationError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ContractInstantiationError),
/* harmony export */   ContractMissingABIError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ContractMissingABIError),
/* harmony export */   ContractMissingDeployDataError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ContractMissingDeployDataError),
/* harmony export */   ContractNoAddressDefinedError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ContractNoAddressDefinedError),
/* harmony export */   ContractNoFromAddressDefinedError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ContractNoFromAddressDefinedError),
/* harmony export */   ContractOnceRequiresCallbackError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ContractOnceRequiresCallbackError),
/* harmony export */   ContractReservedEventError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ContractReservedEventError),
/* harmony export */   ContractTransactionDataAndInputError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ContractTransactionDataAndInputError),
/* harmony export */   DEFAULT_RETURN_FORMAT: () => (/* reexport safe */ web3_types__WEBPACK_IMPORTED_MODULE_16__.DEFAULT_RETURN_FORMAT),
/* harmony export */   EIP1193ProviderRpcError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.EIP1193ProviderRpcError),
/* harmony export */   ENSCheckInterfaceSupportError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ENSCheckInterfaceSupportError),
/* harmony export */   ENSNetworkNotSyncedError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ENSNetworkNotSyncedError),
/* harmony export */   ENSUnsupportedNetworkError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ENSUnsupportedNetworkError),
/* harmony export */   ERR_ABI_ENCODING: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_ABI_ENCODING),
/* harmony export */   ERR_CONN: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_CONN),
/* harmony export */   ERR_CONN_CLOSE: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_CONN_CLOSE),
/* harmony export */   ERR_CONN_INVALID: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_CONN_INVALID),
/* harmony export */   ERR_CONN_MAX_ATTEMPTS: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_CONN_MAX_ATTEMPTS),
/* harmony export */   ERR_CONN_NOT_OPEN: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_CONN_NOT_OPEN),
/* harmony export */   ERR_CONN_PENDING_REQUESTS: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_CONN_PENDING_REQUESTS),
/* harmony export */   ERR_CONN_TIMEOUT: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_CONN_TIMEOUT),
/* harmony export */   ERR_CONTRACT: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_CONTRACT),
/* harmony export */   ERR_CONTRACT_ABI_MISSING: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_CONTRACT_ABI_MISSING),
/* harmony export */   ERR_CONTRACT_EVENT_NOT_EXISTS: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_CONTRACT_EVENT_NOT_EXISTS),
/* harmony export */   ERR_CONTRACT_EXECUTION_REVERTED: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_CONTRACT_EXECUTION_REVERTED),
/* harmony export */   ERR_CONTRACT_INSTANTIATION: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_CONTRACT_INSTANTIATION),
/* harmony export */   ERR_CONTRACT_MISSING_ADDRESS: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_CONTRACT_MISSING_ADDRESS),
/* harmony export */   ERR_CONTRACT_MISSING_DEPLOY_DATA: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_CONTRACT_MISSING_DEPLOY_DATA),
/* harmony export */   ERR_CONTRACT_MISSING_FROM_ADDRESS: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_CONTRACT_MISSING_FROM_ADDRESS),
/* harmony export */   ERR_CONTRACT_REQUIRED_CALLBACK: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_CONTRACT_REQUIRED_CALLBACK),
/* harmony export */   ERR_CONTRACT_RESERVED_EVENT: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_CONTRACT_RESERVED_EVENT),
/* harmony export */   ERR_CONTRACT_RESOLVER_MISSING: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_CONTRACT_RESOLVER_MISSING),
/* harmony export */   ERR_CONTRACT_TX_DATA_AND_INPUT: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_CONTRACT_TX_DATA_AND_INPUT),
/* harmony export */   ERR_CORE_CHAIN_MISMATCH: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_CORE_CHAIN_MISMATCH),
/* harmony export */   ERR_CORE_HARDFORK_MISMATCH: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_CORE_HARDFORK_MISMATCH),
/* harmony export */   ERR_ENS_CHECK_INTERFACE_SUPPORT: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_ENS_CHECK_INTERFACE_SUPPORT),
/* harmony export */   ERR_ENS_NETWORK_NOT_SYNCED: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_ENS_NETWORK_NOT_SYNCED),
/* harmony export */   ERR_ENS_UNSUPPORTED_NETWORK: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_ENS_UNSUPPORTED_NETWORK),
/* harmony export */   ERR_EXISTING_PLUGIN_NAMESPACE: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_EXISTING_PLUGIN_NAMESPACE),
/* harmony export */   ERR_FORMATTERS: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_FORMATTERS),
/* harmony export */   ERR_INVALID_ADDRESS: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_INVALID_ADDRESS),
/* harmony export */   ERR_INVALID_BLOCK: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_INVALID_BLOCK),
/* harmony export */   ERR_INVALID_BOOLEAN: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_INVALID_BOOLEAN),
/* harmony export */   ERR_INVALID_BYTES: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_INVALID_BYTES),
/* harmony export */   ERR_INVALID_CLIENT: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_INVALID_CLIENT),
/* harmony export */   ERR_INVALID_HEX: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_INVALID_HEX),
/* harmony export */   ERR_INVALID_INTEGER: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_INVALID_INTEGER),
/* harmony export */   ERR_INVALID_KEYSTORE: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_INVALID_KEYSTORE),
/* harmony export */   ERR_INVALID_LARGE_VALUE: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_INVALID_LARGE_VALUE),
/* harmony export */   ERR_INVALID_METHOD_PARAMS: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_INVALID_METHOD_PARAMS),
/* harmony export */   ERR_INVALID_NIBBLE_WIDTH: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_INVALID_NIBBLE_WIDTH),
/* harmony export */   ERR_INVALID_NUMBER: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_INVALID_NUMBER),
/* harmony export */   ERR_INVALID_PASSWORD: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_INVALID_PASSWORD),
/* harmony export */   ERR_INVALID_PRIVATE_KEY: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_INVALID_PRIVATE_KEY),
/* harmony export */   ERR_INVALID_PROVIDER: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_INVALID_PROVIDER),
/* harmony export */   ERR_INVALID_RESPONSE: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_INVALID_RESPONSE),
/* harmony export */   ERR_INVALID_SIGNATURE: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_INVALID_SIGNATURE),
/* harmony export */   ERR_INVALID_SIZE: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_INVALID_SIZE),
/* harmony export */   ERR_INVALID_STRING: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_INVALID_STRING),
/* harmony export */   ERR_INVALID_TYPE: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_INVALID_TYPE),
/* harmony export */   ERR_INVALID_TYPE_ABI: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_INVALID_TYPE_ABI),
/* harmony export */   ERR_INVALID_UNIT: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_INVALID_UNIT),
/* harmony export */   ERR_INVALID_UNSIGNED_INTEGER: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_INVALID_UNSIGNED_INTEGER),
/* harmony export */   ERR_IV_LENGTH: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_IV_LENGTH),
/* harmony export */   ERR_KEY_DERIVATION_FAIL: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_KEY_DERIVATION_FAIL),
/* harmony export */   ERR_KEY_VERSION_UNSUPPORTED: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_KEY_VERSION_UNSUPPORTED),
/* harmony export */   ERR_METHOD_NOT_IMPLEMENTED: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_METHOD_NOT_IMPLEMENTED),
/* harmony export */   ERR_MULTIPLE_ERRORS: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_MULTIPLE_ERRORS),
/* harmony export */   ERR_OPERATION_ABORT: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_OPERATION_ABORT),
/* harmony export */   ERR_OPERATION_TIMEOUT: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_OPERATION_TIMEOUT),
/* harmony export */   ERR_PARAM: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_PARAM),
/* harmony export */   ERR_PBKDF2_ITERATIONS: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_PBKDF2_ITERATIONS),
/* harmony export */   ERR_PRIVATE_KEY_LENGTH: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_PRIVATE_KEY_LENGTH),
/* harmony export */   ERR_PROVIDER: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_PROVIDER),
/* harmony export */   ERR_RAW_TX_UNDEFINED: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_RAW_TX_UNDEFINED),
/* harmony export */   ERR_REQ_ALREADY_SENT: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_REQ_ALREADY_SENT),
/* harmony export */   ERR_RESPONSE: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_RESPONSE),
/* harmony export */   ERR_RPC_INTERNAL_ERROR: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_RPC_INTERNAL_ERROR),
/* harmony export */   ERR_RPC_INVALID_INPUT: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_RPC_INVALID_INPUT),
/* harmony export */   ERR_RPC_INVALID_JSON: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_RPC_INVALID_JSON),
/* harmony export */   ERR_RPC_INVALID_METHOD: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_RPC_INVALID_METHOD),
/* harmony export */   ERR_RPC_INVALID_PARAMS: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_RPC_INVALID_PARAMS),
/* harmony export */   ERR_RPC_INVALID_REQUEST: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_RPC_INVALID_REQUEST),
/* harmony export */   ERR_RPC_LIMIT_EXCEEDED: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_RPC_LIMIT_EXCEEDED),
/* harmony export */   ERR_RPC_MISSING_RESOURCE: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_RPC_MISSING_RESOURCE),
/* harmony export */   ERR_RPC_NOT_SUPPORTED: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_RPC_NOT_SUPPORTED),
/* harmony export */   ERR_RPC_TRANSACTION_REJECTED: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_RPC_TRANSACTION_REJECTED),
/* harmony export */   ERR_RPC_UNAVAILABLE_RESOURCE: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_RPC_UNAVAILABLE_RESOURCE),
/* harmony export */   ERR_RPC_UNSUPPORTED_METHOD: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_RPC_UNSUPPORTED_METHOD),
/* harmony export */   ERR_SCHEMA_FORMAT: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_SCHEMA_FORMAT),
/* harmony export */   ERR_SIGNATURE_FAILED: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_SIGNATURE_FAILED),
/* harmony export */   ERR_SUBSCRIPTION: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_SUBSCRIPTION),
/* harmony export */   ERR_TX: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX),
/* harmony export */   ERR_TX_BLOCK_TIMEOUT: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_BLOCK_TIMEOUT),
/* harmony export */   ERR_TX_CHAIN_ID_MISMATCH: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_CHAIN_ID_MISMATCH),
/* harmony export */   ERR_TX_CHAIN_MISMATCH: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_CHAIN_MISMATCH),
/* harmony export */   ERR_TX_CONTRACT_NOT_STORED: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_CONTRACT_NOT_STORED),
/* harmony export */   ERR_TX_DATA_AND_INPUT: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_DATA_AND_INPUT),
/* harmony export */   ERR_TX_GAS_MISMATCH: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_GAS_MISMATCH),
/* harmony export */   ERR_TX_GAS_MISMATCH_INNER_ERROR: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_GAS_MISMATCH_INNER_ERROR),
/* harmony export */   ERR_TX_HARDFORK_MISMATCH: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_HARDFORK_MISMATCH),
/* harmony export */   ERR_TX_INVALID_CALL: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_INVALID_CALL),
/* harmony export */   ERR_TX_INVALID_CHAIN_INFO: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_INVALID_CHAIN_INFO),
/* harmony export */   ERR_TX_INVALID_FEE_MARKET_GAS: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_INVALID_FEE_MARKET_GAS),
/* harmony export */   ERR_TX_INVALID_FEE_MARKET_GAS_PRICE: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_INVALID_FEE_MARKET_GAS_PRICE),
/* harmony export */   ERR_TX_INVALID_LEGACY_FEE_MARKET: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_INVALID_LEGACY_FEE_MARKET),
/* harmony export */   ERR_TX_INVALID_LEGACY_GAS: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_INVALID_LEGACY_GAS),
/* harmony export */   ERR_TX_INVALID_NONCE_OR_CHAIN_ID: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_INVALID_NONCE_OR_CHAIN_ID),
/* harmony export */   ERR_TX_INVALID_OBJECT: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_INVALID_OBJECT),
/* harmony export */   ERR_TX_INVALID_PROPERTIES_FOR_TYPE: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_INVALID_PROPERTIES_FOR_TYPE),
/* harmony export */   ERR_TX_INVALID_RECEIVER: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_INVALID_RECEIVER),
/* harmony export */   ERR_TX_INVALID_SENDER: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_INVALID_SENDER),
/* harmony export */   ERR_TX_LOCAL_WALLET_NOT_AVAILABLE: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_LOCAL_WALLET_NOT_AVAILABLE),
/* harmony export */   ERR_TX_MISSING_CHAIN_INFO: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_MISSING_CHAIN_INFO),
/* harmony export */   ERR_TX_MISSING_CUSTOM_CHAIN: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_MISSING_CUSTOM_CHAIN),
/* harmony export */   ERR_TX_MISSING_CUSTOM_CHAIN_ID: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_MISSING_CUSTOM_CHAIN_ID),
/* harmony export */   ERR_TX_MISSING_GAS: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_MISSING_GAS),
/* harmony export */   ERR_TX_MISSING_GAS_INNER_ERROR: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_MISSING_GAS_INNER_ERROR),
/* harmony export */   ERR_TX_NOT_FOUND: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_NOT_FOUND),
/* harmony export */   ERR_TX_NO_CONTRACT_ADDRESS: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_NO_CONTRACT_ADDRESS),
/* harmony export */   ERR_TX_OUT_OF_GAS: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_OUT_OF_GAS),
/* harmony export */   ERR_TX_POLLING_TIMEOUT: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_POLLING_TIMEOUT),
/* harmony export */   ERR_TX_RECEIPT_MISSING_BLOCK_NUMBER: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_RECEIPT_MISSING_BLOCK_NUMBER),
/* harmony export */   ERR_TX_RECEIPT_MISSING_OR_BLOCKHASH_NULL: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_RECEIPT_MISSING_OR_BLOCKHASH_NULL),
/* harmony export */   ERR_TX_REVERT_INSTRUCTION: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_REVERT_INSTRUCTION),
/* harmony export */   ERR_TX_REVERT_TRANSACTION: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_REVERT_TRANSACTION),
/* harmony export */   ERR_TX_REVERT_TRANSACTION_CUSTOM_ERROR: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_REVERT_TRANSACTION_CUSTOM_ERROR),
/* harmony export */   ERR_TX_REVERT_WITHOUT_REASON: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_REVERT_WITHOUT_REASON),
/* harmony export */   ERR_TX_SEND_TIMEOUT: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_SEND_TIMEOUT),
/* harmony export */   ERR_TX_SIGNING: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_SIGNING),
/* harmony export */   ERR_TX_UNABLE_TO_POPULATE_NONCE: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_UNABLE_TO_POPULATE_NONCE),
/* harmony export */   ERR_TX_UNSUPPORTED_EIP_1559: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_UNSUPPORTED_EIP_1559),
/* harmony export */   ERR_TX_UNSUPPORTED_TYPE: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_TX_UNSUPPORTED_TYPE),
/* harmony export */   ERR_UNSUPPORTED_KDF: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_UNSUPPORTED_KDF),
/* harmony export */   ERR_VALIDATION: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_VALIDATION),
/* harmony export */   ERR_WS_PROVIDER: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ERR_WS_PROVIDER),
/* harmony export */   ETH_DATA_FORMAT: () => (/* reexport safe */ web3_types__WEBPACK_IMPORTED_MODULE_16__.ETH_DATA_FORMAT),
/* harmony export */   Eip1559GasPriceError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.Eip1559GasPriceError),
/* harmony export */   Eip1559NotSupportedError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.Eip1559NotSupportedError),
/* harmony export */   Eip6963EventName: () => (/* reexport safe */ _web3_eip6963_js__WEBPACK_IMPORTED_MODULE_2__.Eip6963EventName),
/* harmony export */   Eip838ExecutionError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.Eip838ExecutionError),
/* harmony export */   ExistingPluginNamespaceError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ExistingPluginNamespaceError),
/* harmony export */   FMT_BYTES: () => (/* reexport safe */ web3_types__WEBPACK_IMPORTED_MODULE_16__.FMT_BYTES),
/* harmony export */   FMT_NUMBER: () => (/* reexport safe */ web3_types__WEBPACK_IMPORTED_MODULE_16__.FMT_NUMBER),
/* harmony export */   FormatterError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.FormatterError),
/* harmony export */   GENESIS_BLOCK_NUMBER: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.GENESIS_BLOCK_NUMBER),
/* harmony export */   HardforkMismatchError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.HardforkMismatchError),
/* harmony export */   HardforksOrdered: () => (/* reexport safe */ web3_types__WEBPACK_IMPORTED_MODULE_16__.HardforksOrdered),
/* harmony export */   HexProcessingError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.HexProcessingError),
/* harmony export */   HttpProvider: () => (/* reexport safe */ web3_providers_http__WEBPACK_IMPORTED_MODULE_9__.HttpProvider),
/* harmony export */   IVLengthError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.IVLengthError),
/* harmony export */   Iban: () => (/* reexport safe */ web3_eth_iban__WEBPACK_IMPORTED_MODULE_6__.Iban),
/* harmony export */   InternalError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InternalError),
/* harmony export */   InvalidAddressError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidAddressError),
/* harmony export */   InvalidBlockError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidBlockError),
/* harmony export */   InvalidBooleanError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidBooleanError),
/* harmony export */   InvalidBytesError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidBytesError),
/* harmony export */   InvalidClientError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidClientError),
/* harmony export */   InvalidConnectionError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidConnectionError),
/* harmony export */   InvalidGasOrGasPrice: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidGasOrGasPrice),
/* harmony export */   InvalidInputError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidInputError),
/* harmony export */   InvalidIntegerError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidIntegerError),
/* harmony export */   InvalidKdfError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidKdfError),
/* harmony export */   InvalidLargeValueError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidLargeValueError),
/* harmony export */   InvalidMaxPriorityFeePerGasOrMaxFeePerGas: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidMaxPriorityFeePerGasOrMaxFeePerGas),
/* harmony export */   InvalidMethodParamsError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidMethodParamsError),
/* harmony export */   InvalidNonceOrChainIdError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidNonceOrChainIdError),
/* harmony export */   InvalidNumberError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidNumberError),
/* harmony export */   InvalidNumberOfParamsError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidNumberOfParamsError),
/* harmony export */   InvalidParamsError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidParamsError),
/* harmony export */   InvalidPasswordError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidPasswordError),
/* harmony export */   InvalidPrivateKeyError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidPrivateKeyError),
/* harmony export */   InvalidPropertiesForTransactionTypeError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidPropertiesForTransactionTypeError),
/* harmony export */   InvalidProviderError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidProviderError),
/* harmony export */   InvalidRequestError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidRequestError),
/* harmony export */   InvalidResponseError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidResponseError),
/* harmony export */   InvalidSignatureError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidSignatureError),
/* harmony export */   InvalidSizeError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidSizeError),
/* harmony export */   InvalidStringError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidStringError),
/* harmony export */   InvalidTransactionCall: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidTransactionCall),
/* harmony export */   InvalidTransactionObjectError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidTransactionObjectError),
/* harmony export */   InvalidTransactionWithReceiver: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidTransactionWithReceiver),
/* harmony export */   InvalidTransactionWithSender: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidTransactionWithSender),
/* harmony export */   InvalidTypeAbiInputError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidTypeAbiInputError),
/* harmony export */   InvalidTypeError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidTypeError),
/* harmony export */   InvalidUnitError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidUnitError),
/* harmony export */   InvalidUnsignedIntegerError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidUnsignedIntegerError),
/* harmony export */   InvalidValueError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.InvalidValueError),
/* harmony export */   JSONRPC_ERR_CHAIN_DISCONNECTED: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.JSONRPC_ERR_CHAIN_DISCONNECTED),
/* harmony export */   JSONRPC_ERR_DISCONNECTED: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.JSONRPC_ERR_DISCONNECTED),
/* harmony export */   JSONRPC_ERR_REJECTED_REQUEST: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.JSONRPC_ERR_REJECTED_REQUEST),
/* harmony export */   JSONRPC_ERR_UNAUTHORIZED: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.JSONRPC_ERR_UNAUTHORIZED),
/* harmony export */   JSONRPC_ERR_UNSUPPORTED_METHOD: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.JSONRPC_ERR_UNSUPPORTED_METHOD),
/* harmony export */   KeyDerivationError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.KeyDerivationError),
/* harmony export */   KeyStoreVersionError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.KeyStoreVersionError),
/* harmony export */   LimitExceededError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.LimitExceededError),
/* harmony export */   LocalWalletNotAvailableError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.LocalWalletNotAvailableError),
/* harmony export */   MaxAttemptsReachedOnReconnectingError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.MaxAttemptsReachedOnReconnectingError),
/* harmony export */   MethodNotFoundError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.MethodNotFoundError),
/* harmony export */   MethodNotImplementedError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.MethodNotImplementedError),
/* harmony export */   MethodNotSupported: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.MethodNotSupported),
/* harmony export */   MissingChainOrHardforkError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.MissingChainOrHardforkError),
/* harmony export */   MissingCustomChainError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.MissingCustomChainError),
/* harmony export */   MissingCustomChainIdError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.MissingCustomChainIdError),
/* harmony export */   MissingGasError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.MissingGasError),
/* harmony export */   MissingGasInnerError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.MissingGasInnerError),
/* harmony export */   MultipleErrors: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.MultipleErrors),
/* harmony export */   Net: () => (/* reexport safe */ web3_net__WEBPACK_IMPORTED_MODULE_8__.Net),
/* harmony export */   NibbleWidthError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.NibbleWidthError),
/* harmony export */   NoContractAddressFoundError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.NoContractAddressFoundError),
/* harmony export */   OperationAbortError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.OperationAbortError),
/* harmony export */   OperationTimeoutError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.OperationTimeoutError),
/* harmony export */   PBKDF2IterationsError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.PBKDF2IterationsError),
/* harmony export */   ParseError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ParseError),
/* harmony export */   PendingRequestsOnReconnectingError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.PendingRequestsOnReconnectingError),
/* harmony export */   Personal: () => (/* reexport safe */ web3_eth_personal__WEBPACK_IMPORTED_MODULE_7__.Personal),
/* harmony export */   PrivateKeyLengthError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.PrivateKeyLengthError),
/* harmony export */   ProviderError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ProviderError),
/* harmony export */   RequestAlreadySentError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.RequestAlreadySentError),
/* harmony export */   ResolverMethodMissingError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ResolverMethodMissingError),
/* harmony export */   ResourceUnavailableError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ResourceUnavailableError),
/* harmony export */   ResourcesNotFoundError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ResourcesNotFoundError),
/* harmony export */   ResponseError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.ResponseError),
/* harmony export */   RevertInstructionError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.RevertInstructionError),
/* harmony export */   RpcError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.RpcError),
/* harmony export */   RpcErrorMessages: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.RpcErrorMessages),
/* harmony export */   SchemaFormatError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.SchemaFormatError),
/* harmony export */   SignatureError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.SignatureError),
/* harmony export */   SubscriptionError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.SubscriptionError),
/* harmony export */   TransactionBlockTimeoutError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.TransactionBlockTimeoutError),
/* harmony export */   TransactionDataAndInputError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.TransactionDataAndInputError),
/* harmony export */   TransactionError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.TransactionError),
/* harmony export */   TransactionGasMismatchError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.TransactionGasMismatchError),
/* harmony export */   TransactionGasMismatchInnerError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.TransactionGasMismatchInnerError),
/* harmony export */   TransactionMissingReceiptOrBlockHashError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.TransactionMissingReceiptOrBlockHashError),
/* harmony export */   TransactionNotFound: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.TransactionNotFound),
/* harmony export */   TransactionOutOfGasError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.TransactionOutOfGasError),
/* harmony export */   TransactionPollingTimeoutError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.TransactionPollingTimeoutError),
/* harmony export */   TransactionReceiptMissingBlockNumberError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.TransactionReceiptMissingBlockNumberError),
/* harmony export */   TransactionRejectedError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.TransactionRejectedError),
/* harmony export */   TransactionRevertInstructionError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.TransactionRevertInstructionError),
/* harmony export */   TransactionRevertWithCustomError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.TransactionRevertWithCustomError),
/* harmony export */   TransactionRevertedWithoutReasonError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.TransactionRevertedWithoutReasonError),
/* harmony export */   TransactionSendTimeoutError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.TransactionSendTimeoutError),
/* harmony export */   TransactionSigningError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.TransactionSigningError),
/* harmony export */   TypedArray: () => (/* reexport safe */ web3_types__WEBPACK_IMPORTED_MODULE_16__.TypedArray),
/* harmony export */   UnableToPopulateNonceError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.UnableToPopulateNonceError),
/* harmony export */   UndefinedRawTransactionError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.UndefinedRawTransactionError),
/* harmony export */   UnsupportedFeeMarketError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.UnsupportedFeeMarketError),
/* harmony export */   UnsupportedTransactionTypeError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.UnsupportedTransactionTypeError),
/* harmony export */   VersionNotSupportedError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.VersionNotSupportedError),
/* harmony export */   Web3: () => (/* reexport safe */ _web3_js__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   Web3BaseProvider: () => (/* reexport safe */ web3_types__WEBPACK_IMPORTED_MODULE_16__.Web3BaseProvider),
/* harmony export */   Web3BaseWallet: () => (/* reexport safe */ web3_types__WEBPACK_IMPORTED_MODULE_16__.Web3BaseWallet),
/* harmony export */   Web3Context: () => (/* reexport safe */ web3_core__WEBPACK_IMPORTED_MODULE_3__.Web3Context),
/* harmony export */   Web3ContractError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.Web3ContractError),
/* harmony export */   Web3Eth: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_4__.Web3Eth),
/* harmony export */   Web3EthPluginBase: () => (/* reexport safe */ web3_core__WEBPACK_IMPORTED_MODULE_3__.Web3EthPluginBase),
/* harmony export */   Web3PluginBase: () => (/* reexport safe */ web3_core__WEBPACK_IMPORTED_MODULE_3__.Web3PluginBase),
/* harmony export */   Web3PromiEvent: () => (/* reexport safe */ web3_core__WEBPACK_IMPORTED_MODULE_3__.Web3PromiEvent),
/* harmony export */   Web3Validator: () => (/* reexport safe */ web3_validator__WEBPACK_IMPORTED_MODULE_11__.Web3Validator),
/* harmony export */   Web3WSProviderError: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.Web3WSProviderError),
/* harmony export */   WebSocketProvider: () => (/* reexport safe */ web3_providers_ws__WEBPACK_IMPORTED_MODULE_10__.WebSocketProvider),
/* harmony export */   core: () => (/* reexport module object */ web3_core__WEBPACK_IMPORTED_MODULE_3__),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   eip6963ProvidersMap: () => (/* reexport safe */ _web3_eip6963_js__WEBPACK_IMPORTED_MODULE_2__.eip6963ProvidersMap),
/* harmony export */   errors: () => (/* reexport module object */ web3_errors__WEBPACK_IMPORTED_MODULE_12__),
/* harmony export */   eth: () => (/* reexport module object */ _eth_exports_js__WEBPACK_IMPORTED_MODULE_13__),
/* harmony export */   genericRpcErrorMessageTemplate: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.genericRpcErrorMessageTemplate),
/* harmony export */   net: () => (/* reexport module object */ web3_net__WEBPACK_IMPORTED_MODULE_8__),
/* harmony export */   onNewProviderDiscovered: () => (/* reexport safe */ _web3_eip6963_js__WEBPACK_IMPORTED_MODULE_2__.onNewProviderDiscovered),
/* harmony export */   providers: () => (/* reexport module object */ _providers_exports_js__WEBPACK_IMPORTED_MODULE_14__),
/* harmony export */   requestEIP6963Providers: () => (/* reexport safe */ _web3_eip6963_js__WEBPACK_IMPORTED_MODULE_2__.requestEIP6963Providers),
/* harmony export */   rpcErrorsMap: () => (/* reexport safe */ web3_errors__WEBPACK_IMPORTED_MODULE_12__.rpcErrorsMap),
/* harmony export */   rpcMethods: () => (/* reexport module object */ web3_rpc_methods__WEBPACK_IMPORTED_MODULE_15__),
/* harmony export */   types: () => (/* reexport module object */ web3_types__WEBPACK_IMPORTED_MODULE_16__),
/* harmony export */   utils: () => (/* reexport module object */ web3_utils__WEBPACK_IMPORTED_MODULE_17__),
/* harmony export */   validator: () => (/* reexport module object */ web3_validator__WEBPACK_IMPORTED_MODULE_11__),
/* harmony export */   web3ProvidersMapUpdated: () => (/* reexport safe */ _web3_eip6963_js__WEBPACK_IMPORTED_MODULE_2__.web3ProvidersMapUpdated)
/* harmony export */ });
/* harmony import */ var _web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./web3.js */ "./node_modules/web3/lib/esm/web3.js");
/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types.js */ "./node_modules/web3/lib/esm/types.js");
/* harmony import */ var _web3_eip6963_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./web3_eip6963.js */ "./node_modules/web3/lib/esm/web3_eip6963.js");
/* harmony import */ var web3_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-core */ "./node_modules/web3-core/lib/esm/index.js");
/* harmony import */ var web3_eth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! web3-eth */ "./node_modules/web3-eth/lib/esm/index.js");
/* harmony import */ var web3_eth_contract__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! web3-eth-contract */ "./node_modules/web3-eth-contract/lib/esm/index.js");
/* harmony import */ var web3_eth_iban__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! web3-eth-iban */ "./node_modules/web3-eth-iban/lib/esm/index.js");
/* harmony import */ var web3_eth_personal__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! web3-eth-personal */ "./node_modules/web3-eth-personal/lib/esm/index.js");
/* harmony import */ var web3_net__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! web3-net */ "./node_modules/web3-net/lib/esm/index.js");
/* harmony import */ var web3_providers_http__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! web3-providers-http */ "./node_modules/web3-providers-http/lib/esm/index.js");
/* harmony import */ var web3_providers_ws__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! web3-providers-ws */ "./node_modules/web3-providers-ws/lib/esm/index.js");
/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! web3-validator */ "./node_modules/web3-validator/lib/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var _eth_exports_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./eth.exports.js */ "./node_modules/web3/lib/esm/eth.exports.js");
/* harmony import */ var _providers_exports_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./providers.exports.js */ "./node_modules/web3/lib/esm/providers.exports.js");
/* harmony import */ var web3_rpc_methods__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! web3-rpc-methods */ "./node_modules/web3-rpc-methods/lib/esm/index.js");
/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! web3-types */ "./node_modules/web3-types/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * This is the main (or 'umbrella') class of the web3.js library.
 *
 * ```ts
 * import Web3 from 'web3';
 *
 * > Web3.utils
 * > Web3.version
 * > Web3.givenProvider
 * > Web3.providers
 * > Web3.modules
 * ```
 *
 * # Web3.modules
 *
 * ```ts
 * Web3.modules
 * ```
 *
 * Will return an object with the classes of all major sub modules, to be able to instantiate them manually.
 *
 * #### Returns
 *
 *  `Object` A list of module constructors:
 *
 *
 *  + `Eth` - `Constructor`: The Eth module for interacting with the Ethereum network
 *
 *
 *  + `Net` - `Constructor`: The Net module for interacting with network properties.
 *
 *
 *  + `Personal` - `constructor`: The Personal module for interacting with the Ethereum accounts (web3.eth.personal).
 *
 * #### Example
 *
 * ```ts
 * Web3.modules
 * > {
 *   	Eth: Eth(provider),
 *   	Net: Net(provider),
 *   	Personal: Personal(provider),
 *   }
 * ```
 *
 * See details: {@link Web3.modules}
 *
 * # Web3 Instance
 *
 * The Web3 class is an umbrella package to house all Ethereum related modules.
 *
 * ```ts
 * import Web3 from 'web3';
 *
 * // "Web3.givenProvider" will be set if in an Ethereum supported browser.
 * const web3 = new Web3(Web3.givenProvider || 'ws://some.local-or-remote.node:8546');
 *
 * > web3.eth
 * > web3.utils
 * > web3.version
 * ```
 *
 * ### version
 *
 * Contains the current package version of the web3.js library.
 *
 * #### Returns
 * //todo enable when functionality added
 * // @see Web3.version
 *
 * ### utils
 *
 * Static accessible property of the Web3 class and property of the instance as well.
 *
 * ```ts
 * Web3.utils
 * web3.utils
 * ```
 *
 * Utility functions are also exposed on the `Web3` class object diretly.
 *
 * //todo enable when implemented
 * //See details: {@link Web3.utils}
 *
 * ### setProvider
 *
 * ```ts
 * web3.setProvider(myProvider)
 * web3.eth.setProvider(myProvider)
 * ...
 * ```
 *
 * Will change the provider for its module.
 *
 * **_NOTE:_** When called on the umbrella package web3 it will also set the provider for all sub modules web3.eth  etc.
 *
 * #### Parameters
 *  `Object`  - `myProvider`: a valid provider.
 *
 * #### Returns
 * `Boolean`
 *
 * See details: {@link Web3.setProvider}
 *
 * #### Example: Local Geth Node
 * ```ts
 * import Web3 from "web3";
 * let web3: Web3 = new Web3('http://localhost:8545');
 * // or
 * let web3: Web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));
 *
 * // change provider
 * web3.setProvider('ws://localhost:8546');
 * // or
 * web3.setProvider(new Web3.providers.WebsocketProvider('ws://localhost:8546'));
 *
 * //todo add IPC provider
 * ```
 *
 * #### Example: Remote Geth Node
 *
 * ```ts
 * // Using a remote node provider, like Alchemy (https://www.alchemyapi.io/supernode), is simple.
 * import Web3 from "web3";
 * let web3: Web3 = new Web3("https://eth-mainnet.alchemyapi.io/v2/your-api-key");
 * ```
 *
 * ### providers
 *
 * ```ts
 * web3.providers
 * web3.eth.providers
 * ```
 * Contains the current available providers.
 *
 * #### Returns
 *  `Object` with the following providers:
 *
 *
 *  + `Object` - `HttpProvider`: HTTP provider, does not support subscriptions.
 *
 *
 *  + `Object` - `WebSocketProvider`: The WebSocket provider is the standard for usage in legacy browsers.
 *
 *
 *  + `Object` - `IpcProvider`: The IPC provider is used in node.js dapps when running a local node. Gives the most secure connection.
 *
 *
 * #### Example
 * ```ts
 * import { Web3 } from 'web3';
 * // use the given Provider or instantiate a new websocket provider
 * let web3 = new Web3(Web3.givenProvider || 'ws://remotenode.com:8546');
 * // or
 * let web3 = new Web3(Web3.givenProvider || new Web3.providers.WebsocketProvider('ws://remotenode.com:8546'));
 *
 * // Using the IPC provider in node.js
 * import { Web3 } from 'web3';
 * import { IpcProvider } from 'web3-providers-ipc';
 * var web3 = new Web3(new IpcProvider('/Users/myuser/Library/Ethereum/geth.ipc')); // mac os path
 * // on windows the path is: "\\\\.\\pipe\\geth.ipc"
 * // on linux the path is: "/users/myuser/.ethereum/geth.ipc"
 * ```
 * #### Configuration
 *
 * ```ts
 *
 * //===
 * //Http
 * //===
 *
 * import Web3HttpProvider, { HttpProviderOptions } from "web3-providers-http";
 *
 * let options: HttpProviderOptions = {
 * 	providerOptions: {
 * 		keepalive: true,
 * 		credentials: "omit",
 * 		headers: {
 * 			"Access-Control-Allow-Origin": "*",
 * 		},
 * 	},
 * };
 *
 *
 * var provider = new Web3HttpProvider("http://localhost:8545", options);
 * web3.setProvider(provider);
 *
 * //===
 * //WebSockets
 * //===
 * import Web3WsProvider, {
 * 	ClientOptions,
 * 	ClientRequestArgs,
 * 	ReconnectOptions,
 * } from "web3-providers-ws";
 *
 *
 * let clientOptions: ClientOptions = {
 * 	// Useful for credentialed urls, e.g: ws://username:password@localhost:8546
 * 	headers: {
 * 		authorization: "Basic username:password",
 * 	},
 * 	maxPayload: 100000000,
 * };
 *
 * // Enable auto reconnection
 * let reconnectOptions: ReconnectOptions = {
 * 	autoReconnect: true,
 * 	delay: 5000, // ms
 * 	maxAttempts: 5,
 * };
 *
 * //clientOptions and reconnectOptions are optional
 * //clientOptions: ClientOptions | ClientRequestArgs
 * let ws = new Web3WsProvider(
 * "ws://localhost:8546",
 * clientOptions,
 * reconnectOptions
 * );
 * web3.setProvider(ws);
 *
 * ```
 * More information for the Http and Websocket provider modules can be found here:
 *
 *
 * - {@link HttpProvider}
 *
 *
 * - {@link WebSocketProvider}
 *
 * See details: {@link Web3.providers}
 *
 *
 * ### givenProvider
 *
 * ```ts
 * web3.givenProvider
 * web3.eth.givenProvider
 * ...
 * ```
 * When using web3.js in an Ethereum compatible browser, it will set with the current native provider by that browser.
 * Will return the given provider by the (browser) environment, otherwise `undefined`.
 *
 * #### Returns
 * `Object` -  The given provider set or `undefined`.
 *
 * See details: {@link Web3.givenProvider}
 *
 * ### currentProvider
 *
 * ```ts
 * web3.currentProvider
 * web3.eth.currentProvider
 * ...
 * ```
 * Will return the current provider, otherwise `undefined`.
 *
 * #### Returns
 * `Object`: The current provider, otherwise `undefined`.
 *
 * See details: {@link Web3.currentProvider}
 *
 * ### BatchRequest
 *
 * ```ts
 * new web3.BatchRequest()
 * new web3.BatchRequest()
 * ...
 * ```
 * Class to create and execute batch requests.
 *
 *  #### Parameters
 *  none
 *
 * #### Returns
 * `Object`: With the following methods:
 *
 * + `add(request)`: To add a request object to the batch call.
 *
 * + `execute()` : To execute the batch request.
 *
 * #### Example
 * ```ts
 * let request1: JsonRpcOptionalRequest = {
 * 	id: 10,
 * 	method: 'eth_getBalance',
 * 	params: ["0xdc6bad79dab7ea733098f66f6c6f9dd008da3258", 'latest'],
 * };
 * let request2: JsonRpcOptionalRequest = {
 * 	id: 11,
 * 	method: 'eth_getBalance',
 * 	params: ["0x962f9a9c2a6c092474d24def35eccb3d9363265e", 'latest'],
 * };
 *
 * const batch = new web3.BatchRequest();
 *
 *  batch.add(request1);
 *  batch.add(request2);
 * // add returns a deferred promise which can be used to run specific code after completion of each respective request.
 * //const request2Promise = batch.add(request2);
 *
 * const response = await batch.execute();
 * ```
 * See details: {@link Web3.BatchRequest}
 */
/**
 * This comment _supports3_ [Markdown](https://marked.js.org/)
 */



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_web3_js__WEBPACK_IMPORTED_MODULE_0__["default"]);
/**
 * Named exports for all objects which are the default-exported-object in their packages
 */










/**
 * Export all packages grouped by name spaces
 */









/**
 * Export all types from `web3-types` without a namespace (in addition to being available at `types` namespace).
 * To enable the user to write: `function something(): Web3Api` without the need for `types.Web3Api`.
 * And the same for `web3-errors`. Because this package contains error classes and constants.
 */


//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/web3/lib/esm/providers.exports.js":
/*!********************************************************!*\
  !*** ./node_modules/web3/lib/esm/providers.exports.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Eip1193Provider: () => (/* reexport safe */ web3_utils__WEBPACK_IMPORTED_MODULE_0__.Eip1193Provider),
/* harmony export */   Eip6963EventName: () => (/* reexport safe */ _web3_eip6963_js__WEBPACK_IMPORTED_MODULE_3__.Eip6963EventName),
/* harmony export */   SocketProvider: () => (/* reexport safe */ web3_utils__WEBPACK_IMPORTED_MODULE_0__.SocketProvider),
/* harmony export */   eip6963ProvidersMap: () => (/* reexport safe */ _web3_eip6963_js__WEBPACK_IMPORTED_MODULE_3__.eip6963ProvidersMap),
/* harmony export */   http: () => (/* reexport module object */ web3_providers_http__WEBPACK_IMPORTED_MODULE_1__),
/* harmony export */   onNewProviderDiscovered: () => (/* reexport safe */ _web3_eip6963_js__WEBPACK_IMPORTED_MODULE_3__.onNewProviderDiscovered),
/* harmony export */   requestEIP6963Providers: () => (/* reexport safe */ _web3_eip6963_js__WEBPACK_IMPORTED_MODULE_3__.requestEIP6963Providers),
/* harmony export */   web3ProvidersMapUpdated: () => (/* reexport safe */ _web3_eip6963_js__WEBPACK_IMPORTED_MODULE_3__.web3ProvidersMapUpdated),
/* harmony export */   ws: () => (/* reexport module object */ web3_providers_ws__WEBPACK_IMPORTED_MODULE_2__)
/* harmony export */ });
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_providers_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-providers-http */ "./node_modules/web3-providers-http/lib/esm/index.js");
/* harmony import */ var web3_providers_ws__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-providers-ws */ "./node_modules/web3-providers-ws/lib/esm/index.js");
/* harmony import */ var _web3_eip6963_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./web3_eip6963.js */ "./node_modules/web3/lib/esm/web3_eip6963.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/




//# sourceMappingURL=providers.exports.js.map

/***/ }),

/***/ "./node_modules/web3/lib/esm/types.js":
/*!********************************************!*\
  !*** ./node_modules/web3/lib/esm/types.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/

//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/web3/lib/esm/version.js":
/*!**********************************************!*\
  !*** ./node_modules/web3/lib/esm/version.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Web3PkgInfo: () => (/* binding */ Web3PkgInfo)
/* harmony export */ });
/* eslint-disable header/header */ const Web3PkgInfo = { version: '4.16.0' };
//# sourceMappingURL=version.js.map

/***/ }),

/***/ "./node_modules/web3/lib/esm/web3.js":
/*!*******************************************!*\
  !*** ./node_modules/web3/lib/esm/web3.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Web3: () => (/* binding */ Web3),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var web3_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-core */ "./node_modules/web3-core/lib/esm/index.js");
/* harmony import */ var web3_eth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-eth */ "./node_modules/web3-eth/lib/esm/index.js");
/* harmony import */ var web3_eth_contract__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-eth-contract */ "./node_modules/web3-eth-contract/lib/esm/index.js");
/* harmony import */ var web3_eth_ens__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-eth-ens */ "./node_modules/web3-eth-ens/lib/esm/index.js");
/* harmony import */ var web3_eth_iban__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! web3-eth-iban */ "./node_modules/web3-eth-iban/lib/esm/index.js");
/* harmony import */ var web3_eth_personal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! web3-eth-personal */ "./node_modules/web3-eth-personal/lib/esm/index.js");
/* harmony import */ var web3_net__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! web3-net */ "./node_modules/web3-net/lib/esm/index.js");
/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! web3-utils */ "./node_modules/web3-utils/lib/esm/index.js");
/* harmony import */ var web3_rpc_providers__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! web3-rpc-providers */ "./node_modules/web3-rpc-providers/lib/esm/index.js");
/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! web3-errors */ "./node_modules/web3-errors/lib/esm/index.js");
/* harmony import */ var _abi_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./abi.js */ "./node_modules/web3/lib/esm/abi.js");
/* harmony import */ var _accounts_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./accounts.js */ "./node_modules/web3/lib/esm/accounts.js");
/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./version.js */ "./node_modules/web3/lib/esm/version.js");
/* harmony import */ var _web3_eip6963_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./web3_eip6963.js */ "./node_modules/web3/lib/esm/web3_eip6963.js");
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
// eslint-disable-next-line max-classes-per-file















class Web3 extends web3_core__WEBPACK_IMPORTED_MODULE_0__.Web3Context {
    constructor(providerOrContext = web3_rpc_providers__WEBPACK_IMPORTED_MODULE_8__.mainnet) {
        var _a;
        if ((0,web3_utils__WEBPACK_IMPORTED_MODULE_7__.isNullish)(providerOrContext) ||
            (typeof providerOrContext === 'string' && providerOrContext.trim() === '') ||
            (typeof providerOrContext !== 'string' &&
                !(0,web3_core__WEBPACK_IMPORTED_MODULE_0__.isSupportedProvider)(providerOrContext) &&
                !providerOrContext.provider)) {
            console.warn('NOTE: web3.js is running without provider. You need to pass a provider in order to interact with the network!');
        }
        let contextInitOptions = {};
        if (typeof providerOrContext === 'string' ||
            (0,web3_core__WEBPACK_IMPORTED_MODULE_0__.isSupportedProvider)(providerOrContext)) {
            contextInitOptions.provider = providerOrContext;
        }
        else if (providerOrContext) {
            contextInitOptions = providerOrContext;
        }
        else {
            contextInitOptions = {};
        }
        contextInitOptions.registeredSubscriptions = Object.assign(Object.assign({}, web3_eth__WEBPACK_IMPORTED_MODULE_1__.registeredSubscriptions), ((_a = contextInitOptions.registeredSubscriptions) !== null && _a !== void 0 ? _a : {}));
        super(contextInitOptions);
        const accounts = (0,_accounts_js__WEBPACK_IMPORTED_MODULE_11__.initAccountsForContext)(this);
        // Init protected properties
        this._wallet = accounts.wallet;
        this._accountProvider = accounts;
        this.utils = web3_utils__WEBPACK_IMPORTED_MODULE_7__;
        // Have to use local alias to initiate contract context
        // eslint-disable-next-line @typescript-eslint/no-this-alias
        const self = this;
        class ContractBuilder extends web3_eth_contract__WEBPACK_IMPORTED_MODULE_2__["default"] {
            constructor(jsonInterface, addressOrOptionsOrContext, optionsOrContextOrReturnFormat, contextOrReturnFormat, returnFormat) {
                if ((0,web3_utils__WEBPACK_IMPORTED_MODULE_7__.isContractInitOptions)(addressOrOptionsOrContext) &&
                    (0,web3_utils__WEBPACK_IMPORTED_MODULE_7__.isContractInitOptions)(optionsOrContextOrReturnFormat)) {
                    throw new web3_errors__WEBPACK_IMPORTED_MODULE_9__.InvalidMethodParamsError('Should not provide options at both 2nd and 3rd parameters');
                }
                let address;
                let options = {};
                let context;
                let dataFormat;
                // add validation so its not a breaking change
                if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_7__.isNullish)(addressOrOptionsOrContext) &&
                    typeof addressOrOptionsOrContext !== 'object' &&
                    typeof addressOrOptionsOrContext !== 'string') {
                    throw new web3_errors__WEBPACK_IMPORTED_MODULE_9__.InvalidMethodParamsError();
                }
                if (typeof addressOrOptionsOrContext === 'string') {
                    address = addressOrOptionsOrContext;
                }
                if ((0,web3_utils__WEBPACK_IMPORTED_MODULE_7__.isContractInitOptions)(addressOrOptionsOrContext)) {
                    options = addressOrOptionsOrContext;
                }
                else if ((0,web3_utils__WEBPACK_IMPORTED_MODULE_7__.isContractInitOptions)(optionsOrContextOrReturnFormat)) {
                    options = optionsOrContextOrReturnFormat;
                }
                else {
                    options = {};
                }
                if (addressOrOptionsOrContext instanceof web3_core__WEBPACK_IMPORTED_MODULE_0__.Web3Context) {
                    context = addressOrOptionsOrContext;
                }
                else if (optionsOrContextOrReturnFormat instanceof web3_core__WEBPACK_IMPORTED_MODULE_0__.Web3Context) {
                    context = optionsOrContextOrReturnFormat;
                }
                else if (contextOrReturnFormat instanceof web3_core__WEBPACK_IMPORTED_MODULE_0__.Web3Context) {
                    context = contextOrReturnFormat;
                }
                else {
                    context = self.getContextObject();
                }
                if (returnFormat) {
                    dataFormat = returnFormat;
                }
                else if ((0,web3_utils__WEBPACK_IMPORTED_MODULE_7__.isDataFormat)(optionsOrContextOrReturnFormat)) {
                    dataFormat = optionsOrContextOrReturnFormat;
                }
                else if ((0,web3_utils__WEBPACK_IMPORTED_MODULE_7__.isDataFormat)(contextOrReturnFormat)) {
                    dataFormat = contextOrReturnFormat;
                }
                super(jsonInterface, address, options, context, dataFormat);
                super.subscribeToContextEvents(self);
                // eslint-disable-next-line no-use-before-define
                if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_7__.isNullish)(eth)) {
                    // eslint-disable-next-line no-use-before-define
                    const TxMiddleware = eth.getTransactionMiddleware();
                    if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_7__.isNullish)(TxMiddleware)) {
                        super.setTransactionMiddleware(TxMiddleware);
                    }
                }
            }
        }
        const eth = self.use(web3_eth__WEBPACK_IMPORTED_MODULE_1__.Web3Eth);
        // Eth Module
        this.eth = Object.assign(eth, {
            // ENS module
            ens: self.use(web3_eth_ens__WEBPACK_IMPORTED_MODULE_3__.ENS, web3_eth_ens__WEBPACK_IMPORTED_MODULE_3__.registryAddresses.main), // registry address defaults to main network
            // Iban helpers
            Iban: web3_eth_iban__WEBPACK_IMPORTED_MODULE_4__.Iban,
            net: self.use(web3_net__WEBPACK_IMPORTED_MODULE_6__.Net),
            personal: self.use(web3_eth_personal__WEBPACK_IMPORTED_MODULE_5__.Personal),
            // Contract helper and module
            Contract: ContractBuilder,
            // ABI Helpers
            abi: _abi_js__WEBPACK_IMPORTED_MODULE_10__["default"],
            // Accounts helper
            accounts,
        });
    }
}
Web3.version = _version_js__WEBPACK_IMPORTED_MODULE_12__.Web3PkgInfo.version;
Web3.utils = web3_utils__WEBPACK_IMPORTED_MODULE_7__;
Web3.requestEIP6963Providers = _web3_eip6963_js__WEBPACK_IMPORTED_MODULE_13__.requestEIP6963Providers;
Web3.onNewProviderDiscovered = _web3_eip6963_js__WEBPACK_IMPORTED_MODULE_13__.onNewProviderDiscovered;
Web3.modules = {
    Web3Eth: web3_eth__WEBPACK_IMPORTED_MODULE_1__.Web3Eth,
    Iban: web3_eth_iban__WEBPACK_IMPORTED_MODULE_4__.Iban,
    Net: web3_net__WEBPACK_IMPORTED_MODULE_6__.Net,
    ENS: web3_eth_ens__WEBPACK_IMPORTED_MODULE_3__.ENS,
    Personal: web3_eth_personal__WEBPACK_IMPORTED_MODULE_5__.Personal,
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Web3);
//# sourceMappingURL=web3.js.map

/***/ }),

/***/ "./node_modules/web3/lib/esm/web3_eip6963.js":
/*!***************************************************!*\
  !*** ./node_modules/web3/lib/esm/web3_eip6963.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Eip6963EventName: () => (/* binding */ Eip6963EventName),
/* harmony export */   eip6963ProvidersMap: () => (/* binding */ eip6963ProvidersMap),
/* harmony export */   onNewProviderDiscovered: () => (/* binding */ onNewProviderDiscovered),
/* harmony export */   requestEIP6963Providers: () => (/* binding */ requestEIP6963Providers),
/* harmony export */   web3ProvidersMapUpdated: () => (/* binding */ web3ProvidersMapUpdated)
/* harmony export */ });
/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var Eip6963EventName;
(function (Eip6963EventName) {
    Eip6963EventName["eip6963announceProvider"] = "eip6963:announceProvider";
    Eip6963EventName["eip6963requestProvider"] = "eip6963:requestProvider";
})(Eip6963EventName || (Eip6963EventName = {}));
const eip6963ProvidersMap = new Map();
const web3ProvidersMapUpdated = 'web3:providersMapUpdated';
const requestEIP6963Providers = () => __awaiter(void 0, void 0, void 0, function* () {
    return new Promise((resolve, reject) => {
        if (typeof window === 'undefined') {
            reject(new Error('window object not available, EIP-6963 is intended to be used within a browser'));
        }
        window.addEventListener(Eip6963EventName.eip6963announceProvider, ((event) => {
            eip6963ProvidersMap.set(event.detail.info.uuid, event.detail);
            const newEvent = new CustomEvent(web3ProvidersMapUpdated, { detail: eip6963ProvidersMap });
            window.dispatchEvent(newEvent);
            resolve(eip6963ProvidersMap);
        }));
        window.dispatchEvent(new Event(Eip6963EventName.eip6963requestProvider));
    });
});
const onNewProviderDiscovered = (callback) => {
    if (typeof window === 'undefined') {
        throw new Error('window object not available, EIP-6963 is intended to be used within a browser');
    }
    window.addEventListener(web3ProvidersMapUpdated, callback);
};
//# sourceMappingURL=web3_eip6963.js.map

/***/ }),

/***/ "./node_modules/ws/browser.js":
/*!************************************!*\
  !*** ./node_modules/ws/browser.js ***!
  \************************************/
/***/ ((module) => {

"use strict";


module.exports = function () {
  throw new Error(
    'ws does not work in the browser. Browser clients must use the native ' +
      'WebSocket object'
  );
};


/***/ }),

/***/ "./node_modules/zod/v3/ZodError.js":
/*!*****************************************!*\
  !*** ./node_modules/zod/v3/ZodError.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ZodError: () => (/* binding */ ZodError),
/* harmony export */   ZodIssueCode: () => (/* binding */ ZodIssueCode),
/* harmony export */   quotelessJson: () => (/* binding */ quotelessJson)
/* harmony export */ });
/* harmony import */ var _helpers_util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers/util.js */ "./node_modules/zod/v3/helpers/util.js");

const ZodIssueCode = _helpers_util_js__WEBPACK_IMPORTED_MODULE_0__.util.arrayToEnum([
    "invalid_type",
    "invalid_literal",
    "custom",
    "invalid_union",
    "invalid_union_discriminator",
    "invalid_enum_value",
    "unrecognized_keys",
    "invalid_arguments",
    "invalid_return_type",
    "invalid_date",
    "invalid_string",
    "too_small",
    "too_big",
    "invalid_intersection_types",
    "not_multiple_of",
    "not_finite",
]);
const quotelessJson = (obj) => {
    const json = JSON.stringify(obj, null, 2);
    return json.replace(/"([^"]+)":/g, "$1:");
};
class ZodError extends Error {
    get errors() {
        return this.issues;
    }
    constructor(issues) {
        super();
        this.issues = [];
        this.addIssue = (sub) => {
            this.issues = [...this.issues, sub];
        };
        this.addIssues = (subs = []) => {
            this.issues = [...this.issues, ...subs];
        };
        const actualProto = new.target.prototype;
        if (Object.setPrototypeOf) {
            // eslint-disable-next-line ban/ban
            Object.setPrototypeOf(this, actualProto);
        }
        else {
            this.__proto__ = actualProto;
        }
        this.name = "ZodError";
        this.issues = issues;
    }
    format(_mapper) {
        const mapper = _mapper ||
            function (issue) {
                return issue.message;
            };
        const fieldErrors = { _errors: [] };
        const processError = (error) => {
            for (const issue of error.issues) {
                if (issue.code === "invalid_union") {
                    issue.unionErrors.map(processError);
                }
                else if (issue.code === "invalid_return_type") {
                    processError(issue.returnTypeError);
                }
                else if (issue.code === "invalid_arguments") {
                    processError(issue.argumentsError);
                }
                else if (issue.path.length === 0) {
                    fieldErrors._errors.push(mapper(issue));
                }
                else {
                    let curr = fieldErrors;
                    let i = 0;
                    while (i < issue.path.length) {
                        const el = issue.path[i];
                        const terminal = i === issue.path.length - 1;
                        if (!terminal) {
                            curr[el] = curr[el] || { _errors: [] };
                            // if (typeof el === "string") {
                            //   curr[el] = curr[el] || { _errors: [] };
                            // } else if (typeof el === "number") {
                            //   const errorArray: any = [];
                            //   errorArray._errors = [];
                            //   curr[el] = curr[el] || errorArray;
                            // }
                        }
                        else {
                            curr[el] = curr[el] || { _errors: [] };
                            curr[el]._errors.push(mapper(issue));
                        }
                        curr = curr[el];
                        i++;
                    }
                }
            }
        };
        processError(this);
        return fieldErrors;
    }
    static assert(value) {
        if (!(value instanceof ZodError)) {
            throw new Error(`Not a ZodError: ${value}`);
        }
    }
    toString() {
        return this.message;
    }
    get message() {
        return JSON.stringify(this.issues, _helpers_util_js__WEBPACK_IMPORTED_MODULE_0__.util.jsonStringifyReplacer, 2);
    }
    get isEmpty() {
        return this.issues.length === 0;
    }
    flatten(mapper = (issue) => issue.message) {
        const fieldErrors = {};
        const formErrors = [];
        for (const sub of this.issues) {
            if (sub.path.length > 0) {
                const firstEl = sub.path[0];
                fieldErrors[firstEl] = fieldErrors[firstEl] || [];
                fieldErrors[firstEl].push(mapper(sub));
            }
            else {
                formErrors.push(mapper(sub));
            }
        }
        return { formErrors, fieldErrors };
    }
    get formErrors() {
        return this.flatten();
    }
}
ZodError.create = (issues) => {
    const error = new ZodError(issues);
    return error;
};


/***/ }),

/***/ "./node_modules/zod/v3/errors.js":
/*!***************************************!*\
  !*** ./node_modules/zod/v3/errors.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   defaultErrorMap: () => (/* reexport safe */ _locales_en_js__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   getErrorMap: () => (/* binding */ getErrorMap),
/* harmony export */   setErrorMap: () => (/* binding */ setErrorMap)
/* harmony export */ });
/* harmony import */ var _locales_en_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./locales/en.js */ "./node_modules/zod/v3/locales/en.js");

let overrideErrorMap = _locales_en_js__WEBPACK_IMPORTED_MODULE_0__["default"];

function setErrorMap(map) {
    overrideErrorMap = map;
}
function getErrorMap() {
    return overrideErrorMap;
}


/***/ }),

/***/ "./node_modules/zod/v3/external.js":
/*!*****************************************!*\
  !*** ./node_modules/zod/v3/external.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BRAND: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.BRAND),
/* harmony export */   DIRTY: () => (/* reexport safe */ _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_1__.DIRTY),
/* harmony export */   EMPTY_PATH: () => (/* reexport safe */ _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_1__.EMPTY_PATH),
/* harmony export */   INVALID: () => (/* reexport safe */ _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_1__.INVALID),
/* harmony export */   NEVER: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.NEVER),
/* harmony export */   OK: () => (/* reexport safe */ _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_1__.OK),
/* harmony export */   ParseStatus: () => (/* reexport safe */ _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_1__.ParseStatus),
/* harmony export */   Schema: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.Schema),
/* harmony export */   ZodAny: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodAny),
/* harmony export */   ZodArray: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodArray),
/* harmony export */   ZodBigInt: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodBigInt),
/* harmony export */   ZodBoolean: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodBoolean),
/* harmony export */   ZodBranded: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodBranded),
/* harmony export */   ZodCatch: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodCatch),
/* harmony export */   ZodDate: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodDate),
/* harmony export */   ZodDefault: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodDefault),
/* harmony export */   ZodDiscriminatedUnion: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodDiscriminatedUnion),
/* harmony export */   ZodEffects: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodEffects),
/* harmony export */   ZodEnum: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodEnum),
/* harmony export */   ZodError: () => (/* reexport safe */ _ZodError_js__WEBPACK_IMPORTED_MODULE_4__.ZodError),
/* harmony export */   ZodFirstPartyTypeKind: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodFirstPartyTypeKind),
/* harmony export */   ZodFunction: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodFunction),
/* harmony export */   ZodIntersection: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodIntersection),
/* harmony export */   ZodIssueCode: () => (/* reexport safe */ _ZodError_js__WEBPACK_IMPORTED_MODULE_4__.ZodIssueCode),
/* harmony export */   ZodLazy: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodLazy),
/* harmony export */   ZodLiteral: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodLiteral),
/* harmony export */   ZodMap: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodMap),
/* harmony export */   ZodNaN: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodNaN),
/* harmony export */   ZodNativeEnum: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodNativeEnum),
/* harmony export */   ZodNever: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodNever),
/* harmony export */   ZodNull: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodNull),
/* harmony export */   ZodNullable: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodNullable),
/* harmony export */   ZodNumber: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodNumber),
/* harmony export */   ZodObject: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodObject),
/* harmony export */   ZodOptional: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodOptional),
/* harmony export */   ZodParsedType: () => (/* reexport safe */ _helpers_util_js__WEBPACK_IMPORTED_MODULE_2__.ZodParsedType),
/* harmony export */   ZodPipeline: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodPipeline),
/* harmony export */   ZodPromise: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodPromise),
/* harmony export */   ZodReadonly: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodReadonly),
/* harmony export */   ZodRecord: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodRecord),
/* harmony export */   ZodSchema: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodSchema),
/* harmony export */   ZodSet: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodSet),
/* harmony export */   ZodString: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodString),
/* harmony export */   ZodSymbol: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodSymbol),
/* harmony export */   ZodTransformer: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodTransformer),
/* harmony export */   ZodTuple: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodTuple),
/* harmony export */   ZodType: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodType),
/* harmony export */   ZodUndefined: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodUndefined),
/* harmony export */   ZodUnion: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodUnion),
/* harmony export */   ZodUnknown: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodUnknown),
/* harmony export */   ZodVoid: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ZodVoid),
/* harmony export */   addIssueToContext: () => (/* reexport safe */ _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_1__.addIssueToContext),
/* harmony export */   any: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.any),
/* harmony export */   array: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.array),
/* harmony export */   bigint: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.bigint),
/* harmony export */   boolean: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.boolean),
/* harmony export */   coerce: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.coerce),
/* harmony export */   custom: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.custom),
/* harmony export */   date: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.date),
/* harmony export */   datetimeRegex: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.datetimeRegex),
/* harmony export */   defaultErrorMap: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_0__.defaultErrorMap),
/* harmony export */   discriminatedUnion: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.discriminatedUnion),
/* harmony export */   effect: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.effect),
/* harmony export */   "enum": () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__["enum"]),
/* harmony export */   "function": () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__["function"]),
/* harmony export */   getErrorMap: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_0__.getErrorMap),
/* harmony export */   getParsedType: () => (/* reexport safe */ _helpers_util_js__WEBPACK_IMPORTED_MODULE_2__.getParsedType),
/* harmony export */   "instanceof": () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__["instanceof"]),
/* harmony export */   intersection: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.intersection),
/* harmony export */   isAborted: () => (/* reexport safe */ _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_1__.isAborted),
/* harmony export */   isAsync: () => (/* reexport safe */ _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_1__.isAsync),
/* harmony export */   isDirty: () => (/* reexport safe */ _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_1__.isDirty),
/* harmony export */   isValid: () => (/* reexport safe */ _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_1__.isValid),
/* harmony export */   late: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.late),
/* harmony export */   lazy: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.lazy),
/* harmony export */   literal: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.literal),
/* harmony export */   makeIssue: () => (/* reexport safe */ _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_1__.makeIssue),
/* harmony export */   map: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.map),
/* harmony export */   nan: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.nan),
/* harmony export */   nativeEnum: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.nativeEnum),
/* harmony export */   never: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.never),
/* harmony export */   "null": () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__["null"]),
/* harmony export */   nullable: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.nullable),
/* harmony export */   number: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.number),
/* harmony export */   object: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.object),
/* harmony export */   objectUtil: () => (/* reexport safe */ _helpers_util_js__WEBPACK_IMPORTED_MODULE_2__.objectUtil),
/* harmony export */   oboolean: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.oboolean),
/* harmony export */   onumber: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.onumber),
/* harmony export */   optional: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.optional),
/* harmony export */   ostring: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.ostring),
/* harmony export */   pipeline: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.pipeline),
/* harmony export */   preprocess: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.preprocess),
/* harmony export */   promise: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.promise),
/* harmony export */   quotelessJson: () => (/* reexport safe */ _ZodError_js__WEBPACK_IMPORTED_MODULE_4__.quotelessJson),
/* harmony export */   record: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.record),
/* harmony export */   set: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.set),
/* harmony export */   setErrorMap: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_0__.setErrorMap),
/* harmony export */   strictObject: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.strictObject),
/* harmony export */   string: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.string),
/* harmony export */   symbol: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.symbol),
/* harmony export */   transformer: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.transformer),
/* harmony export */   tuple: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.tuple),
/* harmony export */   undefined: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.undefined),
/* harmony export */   union: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.union),
/* harmony export */   unknown: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__.unknown),
/* harmony export */   util: () => (/* reexport safe */ _helpers_util_js__WEBPACK_IMPORTED_MODULE_2__.util),
/* harmony export */   "void": () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_3__["void"])
/* harmony export */ });
/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ "./node_modules/zod/v3/errors.js");
/* harmony import */ var _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers/parseUtil.js */ "./node_modules/zod/v3/helpers/parseUtil.js");
/* harmony import */ var _helpers_util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers/util.js */ "./node_modules/zod/v3/helpers/util.js");
/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types.js */ "./node_modules/zod/v3/types.js");
/* harmony import */ var _ZodError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ZodError.js */ "./node_modules/zod/v3/ZodError.js");








/***/ }),

/***/ "./node_modules/zod/v3/helpers/errorUtil.js":
/*!**************************************************!*\
  !*** ./node_modules/zod/v3/helpers/errorUtil.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   errorUtil: () => (/* binding */ errorUtil)
/* harmony export */ });
var errorUtil;
(function (errorUtil) {
    errorUtil.errToObj = (message) => typeof message === "string" ? { message } : message || {};
    // biome-ignore lint:
    errorUtil.toString = (message) => typeof message === "string" ? message : message?.message;
})(errorUtil || (errorUtil = {}));


/***/ }),

/***/ "./node_modules/zod/v3/helpers/parseUtil.js":
/*!**************************************************!*\
  !*** ./node_modules/zod/v3/helpers/parseUtil.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DIRTY: () => (/* binding */ DIRTY),
/* harmony export */   EMPTY_PATH: () => (/* binding */ EMPTY_PATH),
/* harmony export */   INVALID: () => (/* binding */ INVALID),
/* harmony export */   OK: () => (/* binding */ OK),
/* harmony export */   ParseStatus: () => (/* binding */ ParseStatus),
/* harmony export */   addIssueToContext: () => (/* binding */ addIssueToContext),
/* harmony export */   isAborted: () => (/* binding */ isAborted),
/* harmony export */   isAsync: () => (/* binding */ isAsync),
/* harmony export */   isDirty: () => (/* binding */ isDirty),
/* harmony export */   isValid: () => (/* binding */ isValid),
/* harmony export */   makeIssue: () => (/* binding */ makeIssue)
/* harmony export */ });
/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors.js */ "./node_modules/zod/v3/errors.js");
/* harmony import */ var _locales_en_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../locales/en.js */ "./node_modules/zod/v3/locales/en.js");


const makeIssue = (params) => {
    const { data, path, errorMaps, issueData } = params;
    const fullPath = [...path, ...(issueData.path || [])];
    const fullIssue = {
        ...issueData,
        path: fullPath,
    };
    if (issueData.message !== undefined) {
        return {
            ...issueData,
            path: fullPath,
            message: issueData.message,
        };
    }
    let errorMessage = "";
    const maps = errorMaps
        .filter((m) => !!m)
        .slice()
        .reverse();
    for (const map of maps) {
        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;
    }
    return {
        ...issueData,
        path: fullPath,
        message: errorMessage,
    };
};
const EMPTY_PATH = [];
function addIssueToContext(ctx, issueData) {
    const overrideMap = (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.getErrorMap)();
    const issue = makeIssue({
        issueData: issueData,
        data: ctx.data,
        path: ctx.path,
        errorMaps: [
            ctx.common.contextualErrorMap, // contextual error map is first priority
            ctx.schemaErrorMap, // then schema-bound map if available
            overrideMap, // then global override map
            overrideMap === _locales_en_js__WEBPACK_IMPORTED_MODULE_1__["default"] ? undefined : _locales_en_js__WEBPACK_IMPORTED_MODULE_1__["default"], // then global default map
        ].filter((x) => !!x),
    });
    ctx.common.issues.push(issue);
}
class ParseStatus {
    constructor() {
        this.value = "valid";
    }
    dirty() {
        if (this.value === "valid")
            this.value = "dirty";
    }
    abort() {
        if (this.value !== "aborted")
            this.value = "aborted";
    }
    static mergeArray(status, results) {
        const arrayValue = [];
        for (const s of results) {
            if (s.status === "aborted")
                return INVALID;
            if (s.status === "dirty")
                status.dirty();
            arrayValue.push(s.value);
        }
        return { status: status.value, value: arrayValue };
    }
    static async mergeObjectAsync(status, pairs) {
        const syncPairs = [];
        for (const pair of pairs) {
            const key = await pair.key;
            const value = await pair.value;
            syncPairs.push({
                key,
                value,
            });
        }
        return ParseStatus.mergeObjectSync(status, syncPairs);
    }
    static mergeObjectSync(status, pairs) {
        const finalObject = {};
        for (const pair of pairs) {
            const { key, value } = pair;
            if (key.status === "aborted")
                return INVALID;
            if (value.status === "aborted")
                return INVALID;
            if (key.status === "dirty")
                status.dirty();
            if (value.status === "dirty")
                status.dirty();
            if (key.value !== "__proto__" && (typeof value.value !== "undefined" || pair.alwaysSet)) {
                finalObject[key.value] = value.value;
            }
        }
        return { status: status.value, value: finalObject };
    }
}
const INVALID = Object.freeze({
    status: "aborted",
});
const DIRTY = (value) => ({ status: "dirty", value });
const OK = (value) => ({ status: "valid", value });
const isAborted = (x) => x.status === "aborted";
const isDirty = (x) => x.status === "dirty";
const isValid = (x) => x.status === "valid";
const isAsync = (x) => typeof Promise !== "undefined" && x instanceof Promise;


/***/ }),

/***/ "./node_modules/zod/v3/helpers/util.js":
/*!*********************************************!*\
  !*** ./node_modules/zod/v3/helpers/util.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ZodParsedType: () => (/* binding */ ZodParsedType),
/* harmony export */   getParsedType: () => (/* binding */ getParsedType),
/* harmony export */   objectUtil: () => (/* binding */ objectUtil),
/* harmony export */   util: () => (/* binding */ util)
/* harmony export */ });
var util;
(function (util) {
    util.assertEqual = (_) => { };
    function assertIs(_arg) { }
    util.assertIs = assertIs;
    function assertNever(_x) {
        throw new Error();
    }
    util.assertNever = assertNever;
    util.arrayToEnum = (items) => {
        const obj = {};
        for (const item of items) {
            obj[item] = item;
        }
        return obj;
    };
    util.getValidEnumValues = (obj) => {
        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== "number");
        const filtered = {};
        for (const k of validKeys) {
            filtered[k] = obj[k];
        }
        return util.objectValues(filtered);
    };
    util.objectValues = (obj) => {
        return util.objectKeys(obj).map(function (e) {
            return obj[e];
        });
    };
    util.objectKeys = typeof Object.keys === "function" // eslint-disable-line ban/ban
        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban
        : (object) => {
            const keys = [];
            for (const key in object) {
                if (Object.prototype.hasOwnProperty.call(object, key)) {
                    keys.push(key);
                }
            }
            return keys;
        };
    util.find = (arr, checker) => {
        for (const item of arr) {
            if (checker(item))
                return item;
        }
        return undefined;
    };
    util.isInteger = typeof Number.isInteger === "function"
        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban
        : (val) => typeof val === "number" && Number.isFinite(val) && Math.floor(val) === val;
    function joinValues(array, separator = " | ") {
        return array.map((val) => (typeof val === "string" ? `'${val}'` : val)).join(separator);
    }
    util.joinValues = joinValues;
    util.jsonStringifyReplacer = (_, value) => {
        if (typeof value === "bigint") {
            return value.toString();
        }
        return value;
    };
})(util || (util = {}));
var objectUtil;
(function (objectUtil) {
    objectUtil.mergeShapes = (first, second) => {
        return {
            ...first,
            ...second, // second overwrites first
        };
    };
})(objectUtil || (objectUtil = {}));
const ZodParsedType = util.arrayToEnum([
    "string",
    "nan",
    "number",
    "integer",
    "float",
    "boolean",
    "date",
    "bigint",
    "symbol",
    "function",
    "undefined",
    "null",
    "array",
    "object",
    "unknown",
    "promise",
    "void",
    "never",
    "map",
    "set",
]);
const getParsedType = (data) => {
    const t = typeof data;
    switch (t) {
        case "undefined":
            return ZodParsedType.undefined;
        case "string":
            return ZodParsedType.string;
        case "number":
            return Number.isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;
        case "boolean":
            return ZodParsedType.boolean;
        case "function":
            return ZodParsedType.function;
        case "bigint":
            return ZodParsedType.bigint;
        case "symbol":
            return ZodParsedType.symbol;
        case "object":
            if (Array.isArray(data)) {
                return ZodParsedType.array;
            }
            if (data === null) {
                return ZodParsedType.null;
            }
            if (data.then && typeof data.then === "function" && data.catch && typeof data.catch === "function") {
                return ZodParsedType.promise;
            }
            if (typeof Map !== "undefined" && data instanceof Map) {
                return ZodParsedType.map;
            }
            if (typeof Set !== "undefined" && data instanceof Set) {
                return ZodParsedType.set;
            }
            if (typeof Date !== "undefined" && data instanceof Date) {
                return ZodParsedType.date;
            }
            return ZodParsedType.object;
        default:
            return ZodParsedType.unknown;
    }
};


/***/ }),

/***/ "./node_modules/zod/v3/locales/en.js":
/*!*******************************************!*\
  !*** ./node_modules/zod/v3/locales/en.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ZodError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ZodError.js */ "./node_modules/zod/v3/ZodError.js");
/* harmony import */ var _helpers_util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/util.js */ "./node_modules/zod/v3/helpers/util.js");


const errorMap = (issue, _ctx) => {
    let message;
    switch (issue.code) {
        case _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_type:
            if (issue.received === _helpers_util_js__WEBPACK_IMPORTED_MODULE_1__.ZodParsedType.undefined) {
                message = "Required";
            }
            else {
                message = `Expected ${issue.expected}, received ${issue.received}`;
            }
            break;
        case _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_literal:
            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, _helpers_util_js__WEBPACK_IMPORTED_MODULE_1__.util.jsonStringifyReplacer)}`;
            break;
        case _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.unrecognized_keys:
            message = `Unrecognized key(s) in object: ${_helpers_util_js__WEBPACK_IMPORTED_MODULE_1__.util.joinValues(issue.keys, ", ")}`;
            break;
        case _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_union:
            message = `Invalid input`;
            break;
        case _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_union_discriminator:
            message = `Invalid discriminator value. Expected ${_helpers_util_js__WEBPACK_IMPORTED_MODULE_1__.util.joinValues(issue.options)}`;
            break;
        case _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_enum_value:
            message = `Invalid enum value. Expected ${_helpers_util_js__WEBPACK_IMPORTED_MODULE_1__.util.joinValues(issue.options)}, received '${issue.received}'`;
            break;
        case _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_arguments:
            message = `Invalid function arguments`;
            break;
        case _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_return_type:
            message = `Invalid function return type`;
            break;
        case _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_date:
            message = `Invalid date`;
            break;
        case _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_string:
            if (typeof issue.validation === "object") {
                if ("includes" in issue.validation) {
                    message = `Invalid input: must include "${issue.validation.includes}"`;
                    if (typeof issue.validation.position === "number") {
                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;
                    }
                }
                else if ("startsWith" in issue.validation) {
                    message = `Invalid input: must start with "${issue.validation.startsWith}"`;
                }
                else if ("endsWith" in issue.validation) {
                    message = `Invalid input: must end with "${issue.validation.endsWith}"`;
                }
                else {
                    _helpers_util_js__WEBPACK_IMPORTED_MODULE_1__.util.assertNever(issue.validation);
                }
            }
            else if (issue.validation !== "regex") {
                message = `Invalid ${issue.validation}`;
            }
            else {
                message = "Invalid";
            }
            break;
        case _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.too_small:
            if (issue.type === "array")
                message = `Array must contain ${issue.exact ? "exactly" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;
            else if (issue.type === "string")
                message = `String must contain ${issue.exact ? "exactly" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;
            else if (issue.type === "number")
                message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;
            else if (issue.type === "bigint")
                message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;
            else if (issue.type === "date")
                message = `Date must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${new Date(Number(issue.minimum))}`;
            else
                message = "Invalid input";
            break;
        case _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.too_big:
            if (issue.type === "array")
                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;
            else if (issue.type === "string")
                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;
            else if (issue.type === "number")
                message = `Number must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;
            else if (issue.type === "bigint")
                message = `BigInt must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;
            else if (issue.type === "date")
                message = `Date must be ${issue.exact ? `exactly` : issue.inclusive ? `smaller than or equal to` : `smaller than`} ${new Date(Number(issue.maximum))}`;
            else
                message = "Invalid input";
            break;
        case _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.custom:
            message = `Invalid input`;
            break;
        case _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_intersection_types:
            message = `Intersection results could not be merged`;
            break;
        case _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.not_multiple_of:
            message = `Number must be a multiple of ${issue.multipleOf}`;
            break;
        case _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.not_finite:
            message = "Number must be finite";
            break;
        default:
            message = _ctx.defaultError;
            _helpers_util_js__WEBPACK_IMPORTED_MODULE_1__.util.assertNever(issue);
    }
    return { message };
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (errorMap);


/***/ }),

/***/ "./node_modules/zod/v3/types.js":
/*!**************************************!*\
  !*** ./node_modules/zod/v3/types.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BRAND: () => (/* binding */ BRAND),
/* harmony export */   NEVER: () => (/* binding */ NEVER),
/* harmony export */   Schema: () => (/* binding */ ZodType),
/* harmony export */   ZodAny: () => (/* binding */ ZodAny),
/* harmony export */   ZodArray: () => (/* binding */ ZodArray),
/* harmony export */   ZodBigInt: () => (/* binding */ ZodBigInt),
/* harmony export */   ZodBoolean: () => (/* binding */ ZodBoolean),
/* harmony export */   ZodBranded: () => (/* binding */ ZodBranded),
/* harmony export */   ZodCatch: () => (/* binding */ ZodCatch),
/* harmony export */   ZodDate: () => (/* binding */ ZodDate),
/* harmony export */   ZodDefault: () => (/* binding */ ZodDefault),
/* harmony export */   ZodDiscriminatedUnion: () => (/* binding */ ZodDiscriminatedUnion),
/* harmony export */   ZodEffects: () => (/* binding */ ZodEffects),
/* harmony export */   ZodEnum: () => (/* binding */ ZodEnum),
/* harmony export */   ZodFirstPartyTypeKind: () => (/* binding */ ZodFirstPartyTypeKind),
/* harmony export */   ZodFunction: () => (/* binding */ ZodFunction),
/* harmony export */   ZodIntersection: () => (/* binding */ ZodIntersection),
/* harmony export */   ZodLazy: () => (/* binding */ ZodLazy),
/* harmony export */   ZodLiteral: () => (/* binding */ ZodLiteral),
/* harmony export */   ZodMap: () => (/* binding */ ZodMap),
/* harmony export */   ZodNaN: () => (/* binding */ ZodNaN),
/* harmony export */   ZodNativeEnum: () => (/* binding */ ZodNativeEnum),
/* harmony export */   ZodNever: () => (/* binding */ ZodNever),
/* harmony export */   ZodNull: () => (/* binding */ ZodNull),
/* harmony export */   ZodNullable: () => (/* binding */ ZodNullable),
/* harmony export */   ZodNumber: () => (/* binding */ ZodNumber),
/* harmony export */   ZodObject: () => (/* binding */ ZodObject),
/* harmony export */   ZodOptional: () => (/* binding */ ZodOptional),
/* harmony export */   ZodPipeline: () => (/* binding */ ZodPipeline),
/* harmony export */   ZodPromise: () => (/* binding */ ZodPromise),
/* harmony export */   ZodReadonly: () => (/* binding */ ZodReadonly),
/* harmony export */   ZodRecord: () => (/* binding */ ZodRecord),
/* harmony export */   ZodSchema: () => (/* binding */ ZodType),
/* harmony export */   ZodSet: () => (/* binding */ ZodSet),
/* harmony export */   ZodString: () => (/* binding */ ZodString),
/* harmony export */   ZodSymbol: () => (/* binding */ ZodSymbol),
/* harmony export */   ZodTransformer: () => (/* binding */ ZodEffects),
/* harmony export */   ZodTuple: () => (/* binding */ ZodTuple),
/* harmony export */   ZodType: () => (/* binding */ ZodType),
/* harmony export */   ZodUndefined: () => (/* binding */ ZodUndefined),
/* harmony export */   ZodUnion: () => (/* binding */ ZodUnion),
/* harmony export */   ZodUnknown: () => (/* binding */ ZodUnknown),
/* harmony export */   ZodVoid: () => (/* binding */ ZodVoid),
/* harmony export */   any: () => (/* binding */ anyType),
/* harmony export */   array: () => (/* binding */ arrayType),
/* harmony export */   bigint: () => (/* binding */ bigIntType),
/* harmony export */   boolean: () => (/* binding */ booleanType),
/* harmony export */   coerce: () => (/* binding */ coerce),
/* harmony export */   custom: () => (/* binding */ custom),
/* harmony export */   date: () => (/* binding */ dateType),
/* harmony export */   datetimeRegex: () => (/* binding */ datetimeRegex),
/* harmony export */   discriminatedUnion: () => (/* binding */ discriminatedUnionType),
/* harmony export */   effect: () => (/* binding */ effectsType),
/* harmony export */   "enum": () => (/* binding */ enumType),
/* harmony export */   "function": () => (/* binding */ functionType),
/* harmony export */   "instanceof": () => (/* binding */ instanceOfType),
/* harmony export */   intersection: () => (/* binding */ intersectionType),
/* harmony export */   late: () => (/* binding */ late),
/* harmony export */   lazy: () => (/* binding */ lazyType),
/* harmony export */   literal: () => (/* binding */ literalType),
/* harmony export */   map: () => (/* binding */ mapType),
/* harmony export */   nan: () => (/* binding */ nanType),
/* harmony export */   nativeEnum: () => (/* binding */ nativeEnumType),
/* harmony export */   never: () => (/* binding */ neverType),
/* harmony export */   "null": () => (/* binding */ nullType),
/* harmony export */   nullable: () => (/* binding */ nullableType),
/* harmony export */   number: () => (/* binding */ numberType),
/* harmony export */   object: () => (/* binding */ objectType),
/* harmony export */   oboolean: () => (/* binding */ oboolean),
/* harmony export */   onumber: () => (/* binding */ onumber),
/* harmony export */   optional: () => (/* binding */ optionalType),
/* harmony export */   ostring: () => (/* binding */ ostring),
/* harmony export */   pipeline: () => (/* binding */ pipelineType),
/* harmony export */   preprocess: () => (/* binding */ preprocessType),
/* harmony export */   promise: () => (/* binding */ promiseType),
/* harmony export */   record: () => (/* binding */ recordType),
/* harmony export */   set: () => (/* binding */ setType),
/* harmony export */   strictObject: () => (/* binding */ strictObjectType),
/* harmony export */   string: () => (/* binding */ stringType),
/* harmony export */   symbol: () => (/* binding */ symbolType),
/* harmony export */   transformer: () => (/* binding */ effectsType),
/* harmony export */   tuple: () => (/* binding */ tupleType),
/* harmony export */   undefined: () => (/* binding */ undefinedType),
/* harmony export */   union: () => (/* binding */ unionType),
/* harmony export */   unknown: () => (/* binding */ unknownType),
/* harmony export */   "void": () => (/* binding */ voidType)
/* harmony export */ });
/* harmony import */ var _ZodError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ZodError.js */ "./node_modules/zod/v3/ZodError.js");
/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ "./node_modules/zod/v3/errors.js");
/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./errors.js */ "./node_modules/zod/v3/locales/en.js");
/* harmony import */ var _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./helpers/errorUtil.js */ "./node_modules/zod/v3/helpers/errorUtil.js");
/* harmony import */ var _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./helpers/parseUtil.js */ "./node_modules/zod/v3/helpers/parseUtil.js");
/* harmony import */ var _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./helpers/util.js */ "./node_modules/zod/v3/helpers/util.js");





class ParseInputLazyPath {
    constructor(parent, value, path, key) {
        this._cachedPath = [];
        this.parent = parent;
        this.data = value;
        this._path = path;
        this._key = key;
    }
    get path() {
        if (!this._cachedPath.length) {
            if (Array.isArray(this._key)) {
                this._cachedPath.push(...this._path, ...this._key);
            }
            else {
                this._cachedPath.push(...this._path, this._key);
            }
        }
        return this._cachedPath;
    }
}
const handleResult = (ctx, result) => {
    if ((0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.isValid)(result)) {
        return { success: true, data: result.value };
    }
    else {
        if (!ctx.common.issues.length) {
            throw new Error("Validation failed but no issues detected.");
        }
        return {
            success: false,
            get error() {
                if (this._error)
                    return this._error;
                const error = new _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodError(ctx.common.issues);
                this._error = error;
                return this._error;
            },
        };
    }
};
function processCreateParams(params) {
    if (!params)
        return {};
    const { errorMap, invalid_type_error, required_error, description } = params;
    if (errorMap && (invalid_type_error || required_error)) {
        throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);
    }
    if (errorMap)
        return { errorMap: errorMap, description };
    const customMap = (iss, ctx) => {
        const { message } = params;
        if (iss.code === "invalid_enum_value") {
            return { message: message ?? ctx.defaultError };
        }
        if (typeof ctx.data === "undefined") {
            return { message: message ?? required_error ?? ctx.defaultError };
        }
        if (iss.code !== "invalid_type")
            return { message: ctx.defaultError };
        return { message: message ?? invalid_type_error ?? ctx.defaultError };
    };
    return { errorMap: customMap, description };
}
class ZodType {
    get description() {
        return this._def.description;
    }
    _getType(input) {
        return (0,_helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.getParsedType)(input.data);
    }
    _getOrReturnCtx(input, ctx) {
        return (ctx || {
            common: input.parent.common,
            data: input.data,
            parsedType: (0,_helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.getParsedType)(input.data),
            schemaErrorMap: this._def.errorMap,
            path: input.path,
            parent: input.parent,
        });
    }
    _processInputParams(input) {
        return {
            status: new _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.ParseStatus(),
            ctx: {
                common: input.parent.common,
                data: input.data,
                parsedType: (0,_helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.getParsedType)(input.data),
                schemaErrorMap: this._def.errorMap,
                path: input.path,
                parent: input.parent,
            },
        };
    }
    _parseSync(input) {
        const result = this._parse(input);
        if ((0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.isAsync)(result)) {
            throw new Error("Synchronous parse encountered promise.");
        }
        return result;
    }
    _parseAsync(input) {
        const result = this._parse(input);
        return Promise.resolve(result);
    }
    parse(data, params) {
        const result = this.safeParse(data, params);
        if (result.success)
            return result.data;
        throw result.error;
    }
    safeParse(data, params) {
        const ctx = {
            common: {
                issues: [],
                async: params?.async ?? false,
                contextualErrorMap: params?.errorMap,
            },
            path: params?.path || [],
            schemaErrorMap: this._def.errorMap,
            parent: null,
            data,
            parsedType: (0,_helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.getParsedType)(data),
        };
        const result = this._parseSync({ data, path: ctx.path, parent: ctx });
        return handleResult(ctx, result);
    }
    "~validate"(data) {
        const ctx = {
            common: {
                issues: [],
                async: !!this["~standard"].async,
            },
            path: [],
            schemaErrorMap: this._def.errorMap,
            parent: null,
            data,
            parsedType: (0,_helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.getParsedType)(data),
        };
        if (!this["~standard"].async) {
            try {
                const result = this._parseSync({ data, path: [], parent: ctx });
                return (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.isValid)(result)
                    ? {
                        value: result.value,
                    }
                    : {
                        issues: ctx.common.issues,
                    };
            }
            catch (err) {
                if (err?.message?.toLowerCase()?.includes("encountered")) {
                    this["~standard"].async = true;
                }
                ctx.common = {
                    issues: [],
                    async: true,
                };
            }
        }
        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.isValid)(result)
            ? {
                value: result.value,
            }
            : {
                issues: ctx.common.issues,
            });
    }
    async parseAsync(data, params) {
        const result = await this.safeParseAsync(data, params);
        if (result.success)
            return result.data;
        throw result.error;
    }
    async safeParseAsync(data, params) {
        const ctx = {
            common: {
                issues: [],
                contextualErrorMap: params?.errorMap,
                async: true,
            },
            path: params?.path || [],
            schemaErrorMap: this._def.errorMap,
            parent: null,
            data,
            parsedType: (0,_helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.getParsedType)(data),
        };
        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });
        const result = await ((0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.isAsync)(maybeAsyncResult) ? maybeAsyncResult : Promise.resolve(maybeAsyncResult));
        return handleResult(ctx, result);
    }
    refine(check, message) {
        const getIssueProperties = (val) => {
            if (typeof message === "string" || typeof message === "undefined") {
                return { message };
            }
            else if (typeof message === "function") {
                return message(val);
            }
            else {
                return message;
            }
        };
        return this._refinement((val, ctx) => {
            const result = check(val);
            const setError = () => ctx.addIssue({
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.custom,
                ...getIssueProperties(val),
            });
            if (typeof Promise !== "undefined" && result instanceof Promise) {
                return result.then((data) => {
                    if (!data) {
                        setError();
                        return false;
                    }
                    else {
                        return true;
                    }
                });
            }
            if (!result) {
                setError();
                return false;
            }
            else {
                return true;
            }
        });
    }
    refinement(check, refinementData) {
        return this._refinement((val, ctx) => {
            if (!check(val)) {
                ctx.addIssue(typeof refinementData === "function" ? refinementData(val, ctx) : refinementData);
                return false;
            }
            else {
                return true;
            }
        });
    }
    _refinement(refinement) {
        return new ZodEffects({
            schema: this,
            typeName: ZodFirstPartyTypeKind.ZodEffects,
            effect: { type: "refinement", refinement },
        });
    }
    superRefine(refinement) {
        return this._refinement(refinement);
    }
    constructor(def) {
        /** Alias of safeParseAsync */
        this.spa = this.safeParseAsync;
        this._def = def;
        this.parse = this.parse.bind(this);
        this.safeParse = this.safeParse.bind(this);
        this.parseAsync = this.parseAsync.bind(this);
        this.safeParseAsync = this.safeParseAsync.bind(this);
        this.spa = this.spa.bind(this);
        this.refine = this.refine.bind(this);
        this.refinement = this.refinement.bind(this);
        this.superRefine = this.superRefine.bind(this);
        this.optional = this.optional.bind(this);
        this.nullable = this.nullable.bind(this);
        this.nullish = this.nullish.bind(this);
        this.array = this.array.bind(this);
        this.promise = this.promise.bind(this);
        this.or = this.or.bind(this);
        this.and = this.and.bind(this);
        this.transform = this.transform.bind(this);
        this.brand = this.brand.bind(this);
        this.default = this.default.bind(this);
        this.catch = this.catch.bind(this);
        this.describe = this.describe.bind(this);
        this.pipe = this.pipe.bind(this);
        this.readonly = this.readonly.bind(this);
        this.isNullable = this.isNullable.bind(this);
        this.isOptional = this.isOptional.bind(this);
        this["~standard"] = {
            version: 1,
            vendor: "zod",
            validate: (data) => this["~validate"](data),
        };
    }
    optional() {
        return ZodOptional.create(this, this._def);
    }
    nullable() {
        return ZodNullable.create(this, this._def);
    }
    nullish() {
        return this.nullable().optional();
    }
    array() {
        return ZodArray.create(this);
    }
    promise() {
        return ZodPromise.create(this, this._def);
    }
    or(option) {
        return ZodUnion.create([this, option], this._def);
    }
    and(incoming) {
        return ZodIntersection.create(this, incoming, this._def);
    }
    transform(transform) {
        return new ZodEffects({
            ...processCreateParams(this._def),
            schema: this,
            typeName: ZodFirstPartyTypeKind.ZodEffects,
            effect: { type: "transform", transform },
        });
    }
    default(def) {
        const defaultValueFunc = typeof def === "function" ? def : () => def;
        return new ZodDefault({
            ...processCreateParams(this._def),
            innerType: this,
            defaultValue: defaultValueFunc,
            typeName: ZodFirstPartyTypeKind.ZodDefault,
        });
    }
    brand() {
        return new ZodBranded({
            typeName: ZodFirstPartyTypeKind.ZodBranded,
            type: this,
            ...processCreateParams(this._def),
        });
    }
    catch(def) {
        const catchValueFunc = typeof def === "function" ? def : () => def;
        return new ZodCatch({
            ...processCreateParams(this._def),
            innerType: this,
            catchValue: catchValueFunc,
            typeName: ZodFirstPartyTypeKind.ZodCatch,
        });
    }
    describe(description) {
        const This = this.constructor;
        return new This({
            ...this._def,
            description,
        });
    }
    pipe(target) {
        return ZodPipeline.create(this, target);
    }
    readonly() {
        return ZodReadonly.create(this);
    }
    isOptional() {
        return this.safeParse(undefined).success;
    }
    isNullable() {
        return this.safeParse(null).success;
    }
}
const cuidRegex = /^c[^\s-]{8,}$/i;
const cuid2Regex = /^[0-9a-z]+$/;
const ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;
// const uuidRegex =
//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;
const uuidRegex = /^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i;
const nanoidRegex = /^[a-z0-9_-]{21}$/i;
const jwtRegex = /^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.[A-Za-z0-9-_]*$/;
const durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/;
// from https://stackoverflow.com/a/46181/1550155
// old version: too slow, didn't support unicode
// const emailRegex = /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i;
//old email regex
// const emailRegex = /^(([^<>()[\].,;:\s@"]+(\.[^<>()[\].,;:\s@"]+)*)|(".+"))@((?!-)([^<>()[\].,;:\s@"]+\.)+[^<>()[\].,;:\s@"]{1,})[^-<>()[\].,;:\s@"]$/i;
// eslint-disable-next-line
// const emailRegex =
//   /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\])|(\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\.[A-Za-z]{2,})+))$/;
// const emailRegex =
//   /^[a-zA-Z0-9\.\!\#\$\%\&\'\*\+\/\=\?\^\_\`\{\|\}\~\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
// const emailRegex =
//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])$/i;
const emailRegex = /^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i;
// const emailRegex =
//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\.[a-z0-9\-]+)*$/i;
// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression
const _emojiRegex = `^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$`;
let emojiRegex;
// faster, simpler, safer
const ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;
const ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/(3[0-2]|[12]?[0-9])$/;
// const ipv6Regex =
// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;
const ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;
const ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;
// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript
const base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;
// https://base64.guru/standards/base64url
const base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;
// simple
// const dateRegexSource = `\\d{4}-\\d{2}-\\d{2}`;
// no leap year validation
// const dateRegexSource = `\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\d|2\\d))`;
// with leap year validation
const dateRegexSource = `((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))`;
const dateRegex = new RegExp(`^${dateRegexSource}$`);
function timeRegexSource(args) {
    let secondsRegexSource = `[0-5]\\d`;
    if (args.precision) {
        secondsRegexSource = `${secondsRegexSource}\\.\\d{${args.precision}}`;
    }
    else if (args.precision == null) {
        secondsRegexSource = `${secondsRegexSource}(\\.\\d+)?`;
    }
    const secondsQuantifier = args.precision ? "+" : "?"; // require seconds if precision is nonzero
    return `([01]\\d|2[0-3]):[0-5]\\d(:${secondsRegexSource})${secondsQuantifier}`;
}
function timeRegex(args) {
    return new RegExp(`^${timeRegexSource(args)}$`);
}
// Adapted from https://stackoverflow.com/a/3143231
function datetimeRegex(args) {
    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;
    const opts = [];
    opts.push(args.local ? `Z?` : `Z`);
    if (args.offset)
        opts.push(`([+-]\\d{2}:?\\d{2})`);
    regex = `${regex}(${opts.join("|")})`;
    return new RegExp(`^${regex}$`);
}
function isValidIP(ip, version) {
    if ((version === "v4" || !version) && ipv4Regex.test(ip)) {
        return true;
    }
    if ((version === "v6" || !version) && ipv6Regex.test(ip)) {
        return true;
    }
    return false;
}
function isValidJWT(jwt, alg) {
    if (!jwtRegex.test(jwt))
        return false;
    try {
        const [header] = jwt.split(".");
        if (!header)
            return false;
        // Convert base64url to base64
        const base64 = header
            .replace(/-/g, "+")
            .replace(/_/g, "/")
            .padEnd(header.length + ((4 - (header.length % 4)) % 4), "=");
        const decoded = JSON.parse(atob(base64));
        if (typeof decoded !== "object" || decoded === null)
            return false;
        if ("typ" in decoded && decoded?.typ !== "JWT")
            return false;
        if (!decoded.alg)
            return false;
        if (alg && decoded.alg !== alg)
            return false;
        return true;
    }
    catch {
        return false;
    }
}
function isValidCidr(ip, version) {
    if ((version === "v4" || !version) && ipv4CidrRegex.test(ip)) {
        return true;
    }
    if ((version === "v6" || !version) && ipv6CidrRegex.test(ip)) {
        return true;
    }
    return false;
}
class ZodString extends ZodType {
    _parse(input) {
        if (this._def.coerce) {
            input.data = String(input.data);
        }
        const parsedType = this._getType(input);
        if (parsedType !== _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.string) {
            const ctx = this._getOrReturnCtx(input);
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_type,
                expected: _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.string,
                received: ctx.parsedType,
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
        const status = new _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.ParseStatus();
        let ctx = undefined;
        for (const check of this._def.checks) {
            if (check.kind === "min") {
                if (input.data.length < check.value) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.too_small,
                        minimum: check.value,
                        type: "string",
                        inclusive: true,
                        exact: false,
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "max") {
                if (input.data.length > check.value) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.too_big,
                        maximum: check.value,
                        type: "string",
                        inclusive: true,
                        exact: false,
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "length") {
                const tooBig = input.data.length > check.value;
                const tooSmall = input.data.length < check.value;
                if (tooBig || tooSmall) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    if (tooBig) {
                        (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                            code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.too_big,
                            maximum: check.value,
                            type: "string",
                            inclusive: true,
                            exact: true,
                            message: check.message,
                        });
                    }
                    else if (tooSmall) {
                        (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                            code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.too_small,
                            minimum: check.value,
                            type: "string",
                            inclusive: true,
                            exact: true,
                            message: check.message,
                        });
                    }
                    status.dirty();
                }
            }
            else if (check.kind === "email") {
                if (!emailRegex.test(input.data)) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        validation: "email",
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_string,
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "emoji") {
                if (!emojiRegex) {
                    emojiRegex = new RegExp(_emojiRegex, "u");
                }
                if (!emojiRegex.test(input.data)) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        validation: "emoji",
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_string,
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "uuid") {
                if (!uuidRegex.test(input.data)) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        validation: "uuid",
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_string,
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "nanoid") {
                if (!nanoidRegex.test(input.data)) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        validation: "nanoid",
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_string,
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "cuid") {
                if (!cuidRegex.test(input.data)) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        validation: "cuid",
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_string,
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "cuid2") {
                if (!cuid2Regex.test(input.data)) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        validation: "cuid2",
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_string,
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "ulid") {
                if (!ulidRegex.test(input.data)) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        validation: "ulid",
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_string,
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "url") {
                try {
                    new URL(input.data);
                }
                catch {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        validation: "url",
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_string,
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "regex") {
                check.regex.lastIndex = 0;
                const testResult = check.regex.test(input.data);
                if (!testResult) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        validation: "regex",
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_string,
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "trim") {
                input.data = input.data.trim();
            }
            else if (check.kind === "includes") {
                if (!input.data.includes(check.value, check.position)) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_string,
                        validation: { includes: check.value, position: check.position },
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "toLowerCase") {
                input.data = input.data.toLowerCase();
            }
            else if (check.kind === "toUpperCase") {
                input.data = input.data.toUpperCase();
            }
            else if (check.kind === "startsWith") {
                if (!input.data.startsWith(check.value)) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_string,
                        validation: { startsWith: check.value },
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "endsWith") {
                if (!input.data.endsWith(check.value)) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_string,
                        validation: { endsWith: check.value },
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "datetime") {
                const regex = datetimeRegex(check);
                if (!regex.test(input.data)) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_string,
                        validation: "datetime",
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "date") {
                const regex = dateRegex;
                if (!regex.test(input.data)) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_string,
                        validation: "date",
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "time") {
                const regex = timeRegex(check);
                if (!regex.test(input.data)) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_string,
                        validation: "time",
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "duration") {
                if (!durationRegex.test(input.data)) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        validation: "duration",
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_string,
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "ip") {
                if (!isValidIP(input.data, check.version)) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        validation: "ip",
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_string,
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "jwt") {
                if (!isValidJWT(input.data, check.alg)) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        validation: "jwt",
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_string,
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "cidr") {
                if (!isValidCidr(input.data, check.version)) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        validation: "cidr",
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_string,
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "base64") {
                if (!base64Regex.test(input.data)) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        validation: "base64",
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_string,
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "base64url") {
                if (!base64urlRegex.test(input.data)) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        validation: "base64url",
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_string,
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else {
                _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.util.assertNever(check);
            }
        }
        return { status: status.value, value: input.data };
    }
    _regex(regex, validation, message) {
        return this.refinement((data) => regex.test(data), {
            validation,
            code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_string,
            ..._helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.errToObj(message),
        });
    }
    _addCheck(check) {
        return new ZodString({
            ...this._def,
            checks: [...this._def.checks, check],
        });
    }
    email(message) {
        return this._addCheck({ kind: "email", ..._helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.errToObj(message) });
    }
    url(message) {
        return this._addCheck({ kind: "url", ..._helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.errToObj(message) });
    }
    emoji(message) {
        return this._addCheck({ kind: "emoji", ..._helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.errToObj(message) });
    }
    uuid(message) {
        return this._addCheck({ kind: "uuid", ..._helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.errToObj(message) });
    }
    nanoid(message) {
        return this._addCheck({ kind: "nanoid", ..._helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.errToObj(message) });
    }
    cuid(message) {
        return this._addCheck({ kind: "cuid", ..._helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.errToObj(message) });
    }
    cuid2(message) {
        return this._addCheck({ kind: "cuid2", ..._helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.errToObj(message) });
    }
    ulid(message) {
        return this._addCheck({ kind: "ulid", ..._helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.errToObj(message) });
    }
    base64(message) {
        return this._addCheck({ kind: "base64", ..._helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.errToObj(message) });
    }
    base64url(message) {
        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames
        return this._addCheck({
            kind: "base64url",
            ..._helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.errToObj(message),
        });
    }
    jwt(options) {
        return this._addCheck({ kind: "jwt", ..._helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.errToObj(options) });
    }
    ip(options) {
        return this._addCheck({ kind: "ip", ..._helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.errToObj(options) });
    }
    cidr(options) {
        return this._addCheck({ kind: "cidr", ..._helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.errToObj(options) });
    }
    datetime(options) {
        if (typeof options === "string") {
            return this._addCheck({
                kind: "datetime",
                precision: null,
                offset: false,
                local: false,
                message: options,
            });
        }
        return this._addCheck({
            kind: "datetime",
            precision: typeof options?.precision === "undefined" ? null : options?.precision,
            offset: options?.offset ?? false,
            local: options?.local ?? false,
            ..._helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.errToObj(options?.message),
        });
    }
    date(message) {
        return this._addCheck({ kind: "date", message });
    }
    time(options) {
        if (typeof options === "string") {
            return this._addCheck({
                kind: "time",
                precision: null,
                message: options,
            });
        }
        return this._addCheck({
            kind: "time",
            precision: typeof options?.precision === "undefined" ? null : options?.precision,
            ..._helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.errToObj(options?.message),
        });
    }
    duration(message) {
        return this._addCheck({ kind: "duration", ..._helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.errToObj(message) });
    }
    regex(regex, message) {
        return this._addCheck({
            kind: "regex",
            regex: regex,
            ..._helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.errToObj(message),
        });
    }
    includes(value, options) {
        return this._addCheck({
            kind: "includes",
            value: value,
            position: options?.position,
            ..._helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.errToObj(options?.message),
        });
    }
    startsWith(value, message) {
        return this._addCheck({
            kind: "startsWith",
            value: value,
            ..._helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.errToObj(message),
        });
    }
    endsWith(value, message) {
        return this._addCheck({
            kind: "endsWith",
            value: value,
            ..._helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.errToObj(message),
        });
    }
    min(minLength, message) {
        return this._addCheck({
            kind: "min",
            value: minLength,
            ..._helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.errToObj(message),
        });
    }
    max(maxLength, message) {
        return this._addCheck({
            kind: "max",
            value: maxLength,
            ..._helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.errToObj(message),
        });
    }
    length(len, message) {
        return this._addCheck({
            kind: "length",
            value: len,
            ..._helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.errToObj(message),
        });
    }
    /**
     * Equivalent to `.min(1)`
     */
    nonempty(message) {
        return this.min(1, _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.errToObj(message));
    }
    trim() {
        return new ZodString({
            ...this._def,
            checks: [...this._def.checks, { kind: "trim" }],
        });
    }
    toLowerCase() {
        return new ZodString({
            ...this._def,
            checks: [...this._def.checks, { kind: "toLowerCase" }],
        });
    }
    toUpperCase() {
        return new ZodString({
            ...this._def,
            checks: [...this._def.checks, { kind: "toUpperCase" }],
        });
    }
    get isDatetime() {
        return !!this._def.checks.find((ch) => ch.kind === "datetime");
    }
    get isDate() {
        return !!this._def.checks.find((ch) => ch.kind === "date");
    }
    get isTime() {
        return !!this._def.checks.find((ch) => ch.kind === "time");
    }
    get isDuration() {
        return !!this._def.checks.find((ch) => ch.kind === "duration");
    }
    get isEmail() {
        return !!this._def.checks.find((ch) => ch.kind === "email");
    }
    get isURL() {
        return !!this._def.checks.find((ch) => ch.kind === "url");
    }
    get isEmoji() {
        return !!this._def.checks.find((ch) => ch.kind === "emoji");
    }
    get isUUID() {
        return !!this._def.checks.find((ch) => ch.kind === "uuid");
    }
    get isNANOID() {
        return !!this._def.checks.find((ch) => ch.kind === "nanoid");
    }
    get isCUID() {
        return !!this._def.checks.find((ch) => ch.kind === "cuid");
    }
    get isCUID2() {
        return !!this._def.checks.find((ch) => ch.kind === "cuid2");
    }
    get isULID() {
        return !!this._def.checks.find((ch) => ch.kind === "ulid");
    }
    get isIP() {
        return !!this._def.checks.find((ch) => ch.kind === "ip");
    }
    get isCIDR() {
        return !!this._def.checks.find((ch) => ch.kind === "cidr");
    }
    get isBase64() {
        return !!this._def.checks.find((ch) => ch.kind === "base64");
    }
    get isBase64url() {
        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames
        return !!this._def.checks.find((ch) => ch.kind === "base64url");
    }
    get minLength() {
        let min = null;
        for (const ch of this._def.checks) {
            if (ch.kind === "min") {
                if (min === null || ch.value > min)
                    min = ch.value;
            }
        }
        return min;
    }
    get maxLength() {
        let max = null;
        for (const ch of this._def.checks) {
            if (ch.kind === "max") {
                if (max === null || ch.value < max)
                    max = ch.value;
            }
        }
        return max;
    }
}
ZodString.create = (params) => {
    return new ZodString({
        checks: [],
        typeName: ZodFirstPartyTypeKind.ZodString,
        coerce: params?.coerce ?? false,
        ...processCreateParams(params),
    });
};
// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034
function floatSafeRemainder(val, step) {
    const valDecCount = (val.toString().split(".")[1] || "").length;
    const stepDecCount = (step.toString().split(".")[1] || "").length;
    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;
    const valInt = Number.parseInt(val.toFixed(decCount).replace(".", ""));
    const stepInt = Number.parseInt(step.toFixed(decCount).replace(".", ""));
    return (valInt % stepInt) / 10 ** decCount;
}
class ZodNumber extends ZodType {
    constructor() {
        super(...arguments);
        this.min = this.gte;
        this.max = this.lte;
        this.step = this.multipleOf;
    }
    _parse(input) {
        if (this._def.coerce) {
            input.data = Number(input.data);
        }
        const parsedType = this._getType(input);
        if (parsedType !== _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.number) {
            const ctx = this._getOrReturnCtx(input);
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_type,
                expected: _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.number,
                received: ctx.parsedType,
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
        let ctx = undefined;
        const status = new _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.ParseStatus();
        for (const check of this._def.checks) {
            if (check.kind === "int") {
                if (!_helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.util.isInteger(input.data)) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_type,
                        expected: "integer",
                        received: "float",
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "min") {
                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;
                if (tooSmall) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.too_small,
                        minimum: check.value,
                        type: "number",
                        inclusive: check.inclusive,
                        exact: false,
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "max") {
                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;
                if (tooBig) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.too_big,
                        maximum: check.value,
                        type: "number",
                        inclusive: check.inclusive,
                        exact: false,
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "multipleOf") {
                if (floatSafeRemainder(input.data, check.value) !== 0) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.not_multiple_of,
                        multipleOf: check.value,
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "finite") {
                if (!Number.isFinite(input.data)) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.not_finite,
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else {
                _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.util.assertNever(check);
            }
        }
        return { status: status.value, value: input.data };
    }
    gte(value, message) {
        return this.setLimit("min", value, true, _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message));
    }
    gt(value, message) {
        return this.setLimit("min", value, false, _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message));
    }
    lte(value, message) {
        return this.setLimit("max", value, true, _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message));
    }
    lt(value, message) {
        return this.setLimit("max", value, false, _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message));
    }
    setLimit(kind, value, inclusive, message) {
        return new ZodNumber({
            ...this._def,
            checks: [
                ...this._def.checks,
                {
                    kind,
                    value,
                    inclusive,
                    message: _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message),
                },
            ],
        });
    }
    _addCheck(check) {
        return new ZodNumber({
            ...this._def,
            checks: [...this._def.checks, check],
        });
    }
    int(message) {
        return this._addCheck({
            kind: "int",
            message: _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message),
        });
    }
    positive(message) {
        return this._addCheck({
            kind: "min",
            value: 0,
            inclusive: false,
            message: _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message),
        });
    }
    negative(message) {
        return this._addCheck({
            kind: "max",
            value: 0,
            inclusive: false,
            message: _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message),
        });
    }
    nonpositive(message) {
        return this._addCheck({
            kind: "max",
            value: 0,
            inclusive: true,
            message: _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message),
        });
    }
    nonnegative(message) {
        return this._addCheck({
            kind: "min",
            value: 0,
            inclusive: true,
            message: _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message),
        });
    }
    multipleOf(value, message) {
        return this._addCheck({
            kind: "multipleOf",
            value: value,
            message: _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message),
        });
    }
    finite(message) {
        return this._addCheck({
            kind: "finite",
            message: _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message),
        });
    }
    safe(message) {
        return this._addCheck({
            kind: "min",
            inclusive: true,
            value: Number.MIN_SAFE_INTEGER,
            message: _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message),
        })._addCheck({
            kind: "max",
            inclusive: true,
            value: Number.MAX_SAFE_INTEGER,
            message: _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message),
        });
    }
    get minValue() {
        let min = null;
        for (const ch of this._def.checks) {
            if (ch.kind === "min") {
                if (min === null || ch.value > min)
                    min = ch.value;
            }
        }
        return min;
    }
    get maxValue() {
        let max = null;
        for (const ch of this._def.checks) {
            if (ch.kind === "max") {
                if (max === null || ch.value < max)
                    max = ch.value;
            }
        }
        return max;
    }
    get isInt() {
        return !!this._def.checks.find((ch) => ch.kind === "int" || (ch.kind === "multipleOf" && _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.util.isInteger(ch.value)));
    }
    get isFinite() {
        let max = null;
        let min = null;
        for (const ch of this._def.checks) {
            if (ch.kind === "finite" || ch.kind === "int" || ch.kind === "multipleOf") {
                return true;
            }
            else if (ch.kind === "min") {
                if (min === null || ch.value > min)
                    min = ch.value;
            }
            else if (ch.kind === "max") {
                if (max === null || ch.value < max)
                    max = ch.value;
            }
        }
        return Number.isFinite(min) && Number.isFinite(max);
    }
}
ZodNumber.create = (params) => {
    return new ZodNumber({
        checks: [],
        typeName: ZodFirstPartyTypeKind.ZodNumber,
        coerce: params?.coerce || false,
        ...processCreateParams(params),
    });
};
class ZodBigInt extends ZodType {
    constructor() {
        super(...arguments);
        this.min = this.gte;
        this.max = this.lte;
    }
    _parse(input) {
        if (this._def.coerce) {
            try {
                input.data = BigInt(input.data);
            }
            catch {
                return this._getInvalidInput(input);
            }
        }
        const parsedType = this._getType(input);
        if (parsedType !== _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.bigint) {
            return this._getInvalidInput(input);
        }
        let ctx = undefined;
        const status = new _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.ParseStatus();
        for (const check of this._def.checks) {
            if (check.kind === "min") {
                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;
                if (tooSmall) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.too_small,
                        type: "bigint",
                        minimum: check.value,
                        inclusive: check.inclusive,
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "max") {
                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;
                if (tooBig) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.too_big,
                        type: "bigint",
                        maximum: check.value,
                        inclusive: check.inclusive,
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "multipleOf") {
                if (input.data % check.value !== BigInt(0)) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.not_multiple_of,
                        multipleOf: check.value,
                        message: check.message,
                    });
                    status.dirty();
                }
            }
            else {
                _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.util.assertNever(check);
            }
        }
        return { status: status.value, value: input.data };
    }
    _getInvalidInput(input) {
        const ctx = this._getOrReturnCtx(input);
        (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
            code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_type,
            expected: _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.bigint,
            received: ctx.parsedType,
        });
        return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
    }
    gte(value, message) {
        return this.setLimit("min", value, true, _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message));
    }
    gt(value, message) {
        return this.setLimit("min", value, false, _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message));
    }
    lte(value, message) {
        return this.setLimit("max", value, true, _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message));
    }
    lt(value, message) {
        return this.setLimit("max", value, false, _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message));
    }
    setLimit(kind, value, inclusive, message) {
        return new ZodBigInt({
            ...this._def,
            checks: [
                ...this._def.checks,
                {
                    kind,
                    value,
                    inclusive,
                    message: _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message),
                },
            ],
        });
    }
    _addCheck(check) {
        return new ZodBigInt({
            ...this._def,
            checks: [...this._def.checks, check],
        });
    }
    positive(message) {
        return this._addCheck({
            kind: "min",
            value: BigInt(0),
            inclusive: false,
            message: _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message),
        });
    }
    negative(message) {
        return this._addCheck({
            kind: "max",
            value: BigInt(0),
            inclusive: false,
            message: _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message),
        });
    }
    nonpositive(message) {
        return this._addCheck({
            kind: "max",
            value: BigInt(0),
            inclusive: true,
            message: _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message),
        });
    }
    nonnegative(message) {
        return this._addCheck({
            kind: "min",
            value: BigInt(0),
            inclusive: true,
            message: _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message),
        });
    }
    multipleOf(value, message) {
        return this._addCheck({
            kind: "multipleOf",
            value,
            message: _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message),
        });
    }
    get minValue() {
        let min = null;
        for (const ch of this._def.checks) {
            if (ch.kind === "min") {
                if (min === null || ch.value > min)
                    min = ch.value;
            }
        }
        return min;
    }
    get maxValue() {
        let max = null;
        for (const ch of this._def.checks) {
            if (ch.kind === "max") {
                if (max === null || ch.value < max)
                    max = ch.value;
            }
        }
        return max;
    }
}
ZodBigInt.create = (params) => {
    return new ZodBigInt({
        checks: [],
        typeName: ZodFirstPartyTypeKind.ZodBigInt,
        coerce: params?.coerce ?? false,
        ...processCreateParams(params),
    });
};
class ZodBoolean extends ZodType {
    _parse(input) {
        if (this._def.coerce) {
            input.data = Boolean(input.data);
        }
        const parsedType = this._getType(input);
        if (parsedType !== _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.boolean) {
            const ctx = this._getOrReturnCtx(input);
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_type,
                expected: _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.boolean,
                received: ctx.parsedType,
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
        return (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.OK)(input.data);
    }
}
ZodBoolean.create = (params) => {
    return new ZodBoolean({
        typeName: ZodFirstPartyTypeKind.ZodBoolean,
        coerce: params?.coerce || false,
        ...processCreateParams(params),
    });
};
class ZodDate extends ZodType {
    _parse(input) {
        if (this._def.coerce) {
            input.data = new Date(input.data);
        }
        const parsedType = this._getType(input);
        if (parsedType !== _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.date) {
            const ctx = this._getOrReturnCtx(input);
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_type,
                expected: _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.date,
                received: ctx.parsedType,
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
        if (Number.isNaN(input.data.getTime())) {
            const ctx = this._getOrReturnCtx(input);
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_date,
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
        const status = new _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.ParseStatus();
        let ctx = undefined;
        for (const check of this._def.checks) {
            if (check.kind === "min") {
                if (input.data.getTime() < check.value) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.too_small,
                        message: check.message,
                        inclusive: true,
                        exact: false,
                        minimum: check.value,
                        type: "date",
                    });
                    status.dirty();
                }
            }
            else if (check.kind === "max") {
                if (input.data.getTime() > check.value) {
                    ctx = this._getOrReturnCtx(input, ctx);
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.too_big,
                        message: check.message,
                        inclusive: true,
                        exact: false,
                        maximum: check.value,
                        type: "date",
                    });
                    status.dirty();
                }
            }
            else {
                _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.util.assertNever(check);
            }
        }
        return {
            status: status.value,
            value: new Date(input.data.getTime()),
        };
    }
    _addCheck(check) {
        return new ZodDate({
            ...this._def,
            checks: [...this._def.checks, check],
        });
    }
    min(minDate, message) {
        return this._addCheck({
            kind: "min",
            value: minDate.getTime(),
            message: _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message),
        });
    }
    max(maxDate, message) {
        return this._addCheck({
            kind: "max",
            value: maxDate.getTime(),
            message: _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message),
        });
    }
    get minDate() {
        let min = null;
        for (const ch of this._def.checks) {
            if (ch.kind === "min") {
                if (min === null || ch.value > min)
                    min = ch.value;
            }
        }
        return min != null ? new Date(min) : null;
    }
    get maxDate() {
        let max = null;
        for (const ch of this._def.checks) {
            if (ch.kind === "max") {
                if (max === null || ch.value < max)
                    max = ch.value;
            }
        }
        return max != null ? new Date(max) : null;
    }
}
ZodDate.create = (params) => {
    return new ZodDate({
        checks: [],
        coerce: params?.coerce || false,
        typeName: ZodFirstPartyTypeKind.ZodDate,
        ...processCreateParams(params),
    });
};
class ZodSymbol extends ZodType {
    _parse(input) {
        const parsedType = this._getType(input);
        if (parsedType !== _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.symbol) {
            const ctx = this._getOrReturnCtx(input);
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_type,
                expected: _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.symbol,
                received: ctx.parsedType,
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
        return (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.OK)(input.data);
    }
}
ZodSymbol.create = (params) => {
    return new ZodSymbol({
        typeName: ZodFirstPartyTypeKind.ZodSymbol,
        ...processCreateParams(params),
    });
};
class ZodUndefined extends ZodType {
    _parse(input) {
        const parsedType = this._getType(input);
        if (parsedType !== _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.undefined) {
            const ctx = this._getOrReturnCtx(input);
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_type,
                expected: _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.undefined,
                received: ctx.parsedType,
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
        return (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.OK)(input.data);
    }
}
ZodUndefined.create = (params) => {
    return new ZodUndefined({
        typeName: ZodFirstPartyTypeKind.ZodUndefined,
        ...processCreateParams(params),
    });
};
class ZodNull extends ZodType {
    _parse(input) {
        const parsedType = this._getType(input);
        if (parsedType !== _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.null) {
            const ctx = this._getOrReturnCtx(input);
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_type,
                expected: _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.null,
                received: ctx.parsedType,
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
        return (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.OK)(input.data);
    }
}
ZodNull.create = (params) => {
    return new ZodNull({
        typeName: ZodFirstPartyTypeKind.ZodNull,
        ...processCreateParams(params),
    });
};
class ZodAny extends ZodType {
    constructor() {
        super(...arguments);
        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.
        this._any = true;
    }
    _parse(input) {
        return (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.OK)(input.data);
    }
}
ZodAny.create = (params) => {
    return new ZodAny({
        typeName: ZodFirstPartyTypeKind.ZodAny,
        ...processCreateParams(params),
    });
};
class ZodUnknown extends ZodType {
    constructor() {
        super(...arguments);
        // required
        this._unknown = true;
    }
    _parse(input) {
        return (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.OK)(input.data);
    }
}
ZodUnknown.create = (params) => {
    return new ZodUnknown({
        typeName: ZodFirstPartyTypeKind.ZodUnknown,
        ...processCreateParams(params),
    });
};
class ZodNever extends ZodType {
    _parse(input) {
        const ctx = this._getOrReturnCtx(input);
        (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
            code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_type,
            expected: _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.never,
            received: ctx.parsedType,
        });
        return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
    }
}
ZodNever.create = (params) => {
    return new ZodNever({
        typeName: ZodFirstPartyTypeKind.ZodNever,
        ...processCreateParams(params),
    });
};
class ZodVoid extends ZodType {
    _parse(input) {
        const parsedType = this._getType(input);
        if (parsedType !== _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.undefined) {
            const ctx = this._getOrReturnCtx(input);
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_type,
                expected: _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.void,
                received: ctx.parsedType,
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
        return (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.OK)(input.data);
    }
}
ZodVoid.create = (params) => {
    return new ZodVoid({
        typeName: ZodFirstPartyTypeKind.ZodVoid,
        ...processCreateParams(params),
    });
};
class ZodArray extends ZodType {
    _parse(input) {
        const { ctx, status } = this._processInputParams(input);
        const def = this._def;
        if (ctx.parsedType !== _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.array) {
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_type,
                expected: _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.array,
                received: ctx.parsedType,
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
        if (def.exactLength !== null) {
            const tooBig = ctx.data.length > def.exactLength.value;
            const tooSmall = ctx.data.length < def.exactLength.value;
            if (tooBig || tooSmall) {
                (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                    code: tooBig ? _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.too_big : _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.too_small,
                    minimum: (tooSmall ? def.exactLength.value : undefined),
                    maximum: (tooBig ? def.exactLength.value : undefined),
                    type: "array",
                    inclusive: true,
                    exact: true,
                    message: def.exactLength.message,
                });
                status.dirty();
            }
        }
        if (def.minLength !== null) {
            if (ctx.data.length < def.minLength.value) {
                (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                    code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.too_small,
                    minimum: def.minLength.value,
                    type: "array",
                    inclusive: true,
                    exact: false,
                    message: def.minLength.message,
                });
                status.dirty();
            }
        }
        if (def.maxLength !== null) {
            if (ctx.data.length > def.maxLength.value) {
                (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                    code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.too_big,
                    maximum: def.maxLength.value,
                    type: "array",
                    inclusive: true,
                    exact: false,
                    message: def.maxLength.message,
                });
                status.dirty();
            }
        }
        if (ctx.common.async) {
            return Promise.all([...ctx.data].map((item, i) => {
                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));
            })).then((result) => {
                return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.ParseStatus.mergeArray(status, result);
            });
        }
        const result = [...ctx.data].map((item, i) => {
            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));
        });
        return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.ParseStatus.mergeArray(status, result);
    }
    get element() {
        return this._def.type;
    }
    min(minLength, message) {
        return new ZodArray({
            ...this._def,
            minLength: { value: minLength, message: _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message) },
        });
    }
    max(maxLength, message) {
        return new ZodArray({
            ...this._def,
            maxLength: { value: maxLength, message: _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message) },
        });
    }
    length(len, message) {
        return new ZodArray({
            ...this._def,
            exactLength: { value: len, message: _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message) },
        });
    }
    nonempty(message) {
        return this.min(1, message);
    }
}
ZodArray.create = (schema, params) => {
    return new ZodArray({
        type: schema,
        minLength: null,
        maxLength: null,
        exactLength: null,
        typeName: ZodFirstPartyTypeKind.ZodArray,
        ...processCreateParams(params),
    });
};
function deepPartialify(schema) {
    if (schema instanceof ZodObject) {
        const newShape = {};
        for (const key in schema.shape) {
            const fieldSchema = schema.shape[key];
            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));
        }
        return new ZodObject({
            ...schema._def,
            shape: () => newShape,
        });
    }
    else if (schema instanceof ZodArray) {
        return new ZodArray({
            ...schema._def,
            type: deepPartialify(schema.element),
        });
    }
    else if (schema instanceof ZodOptional) {
        return ZodOptional.create(deepPartialify(schema.unwrap()));
    }
    else if (schema instanceof ZodNullable) {
        return ZodNullable.create(deepPartialify(schema.unwrap()));
    }
    else if (schema instanceof ZodTuple) {
        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));
    }
    else {
        return schema;
    }
}
class ZodObject extends ZodType {
    constructor() {
        super(...arguments);
        this._cached = null;
        /**
         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.
         * If you want to pass through unknown properties, use `.passthrough()` instead.
         */
        this.nonstrict = this.passthrough;
        // extend<
        //   Augmentation extends ZodRawShape,
        //   NewOutput extends util.flatten<{
        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation
        //       ? Augmentation[k]["_output"]
        //       : k extends keyof Output
        //       ? Output[k]
        //       : never;
        //   }>,
        //   NewInput extends util.flatten<{
        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation
        //       ? Augmentation[k]["_input"]
        //       : k extends keyof Input
        //       ? Input[k]
        //       : never;
        //   }>
        // >(
        //   augmentation: Augmentation
        // ): ZodObject<
        //   extendShape<T, Augmentation>,
        //   UnknownKeys,
        //   Catchall,
        //   NewOutput,
        //   NewInput
        // > {
        //   return new ZodObject({
        //     ...this._def,
        //     shape: () => ({
        //       ...this._def.shape(),
        //       ...augmentation,
        //     }),
        //   }) as any;
        // }
        /**
         * @deprecated Use `.extend` instead
         *  */
        this.augment = this.extend;
    }
    _getCached() {
        if (this._cached !== null)
            return this._cached;
        const shape = this._def.shape();
        const keys = _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.util.objectKeys(shape);
        this._cached = { shape, keys };
        return this._cached;
    }
    _parse(input) {
        const parsedType = this._getType(input);
        if (parsedType !== _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.object) {
            const ctx = this._getOrReturnCtx(input);
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_type,
                expected: _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.object,
                received: ctx.parsedType,
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
        const { status, ctx } = this._processInputParams(input);
        const { shape, keys: shapeKeys } = this._getCached();
        const extraKeys = [];
        if (!(this._def.catchall instanceof ZodNever && this._def.unknownKeys === "strip")) {
            for (const key in ctx.data) {
                if (!shapeKeys.includes(key)) {
                    extraKeys.push(key);
                }
            }
        }
        const pairs = [];
        for (const key of shapeKeys) {
            const keyValidator = shape[key];
            const value = ctx.data[key];
            pairs.push({
                key: { status: "valid", value: key },
                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),
                alwaysSet: key in ctx.data,
            });
        }
        if (this._def.catchall instanceof ZodNever) {
            const unknownKeys = this._def.unknownKeys;
            if (unknownKeys === "passthrough") {
                for (const key of extraKeys) {
                    pairs.push({
                        key: { status: "valid", value: key },
                        value: { status: "valid", value: ctx.data[key] },
                    });
                }
            }
            else if (unknownKeys === "strict") {
                if (extraKeys.length > 0) {
                    (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                        code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.unrecognized_keys,
                        keys: extraKeys,
                    });
                    status.dirty();
                }
            }
            else if (unknownKeys === "strip") {
            }
            else {
                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);
            }
        }
        else {
            // run catchall validation
            const catchall = this._def.catchall;
            for (const key of extraKeys) {
                const value = ctx.data[key];
                pairs.push({
                    key: { status: "valid", value: key },
                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)
                    ),
                    alwaysSet: key in ctx.data,
                });
            }
        }
        if (ctx.common.async) {
            return Promise.resolve()
                .then(async () => {
                const syncPairs = [];
                for (const pair of pairs) {
                    const key = await pair.key;
                    const value = await pair.value;
                    syncPairs.push({
                        key,
                        value,
                        alwaysSet: pair.alwaysSet,
                    });
                }
                return syncPairs;
            })
                .then((syncPairs) => {
                return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.ParseStatus.mergeObjectSync(status, syncPairs);
            });
        }
        else {
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.ParseStatus.mergeObjectSync(status, pairs);
        }
    }
    get shape() {
        return this._def.shape();
    }
    strict(message) {
        _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.errToObj;
        return new ZodObject({
            ...this._def,
            unknownKeys: "strict",
            ...(message !== undefined
                ? {
                    errorMap: (issue, ctx) => {
                        const defaultError = this._def.errorMap?.(issue, ctx).message ?? ctx.defaultError;
                        if (issue.code === "unrecognized_keys")
                            return {
                                message: _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.errToObj(message).message ?? defaultError,
                            };
                        return {
                            message: defaultError,
                        };
                    },
                }
                : {}),
        });
    }
    strip() {
        return new ZodObject({
            ...this._def,
            unknownKeys: "strip",
        });
    }
    passthrough() {
        return new ZodObject({
            ...this._def,
            unknownKeys: "passthrough",
        });
    }
    // const AugmentFactory =
    //   <Def extends ZodObjectDef>(def: Def) =>
    //   <Augmentation extends ZodRawShape>(
    //     augmentation: Augmentation
    //   ): ZodObject<
    //     extendShape<ReturnType<Def["shape"]>, Augmentation>,
    //     Def["unknownKeys"],
    //     Def["catchall"]
    //   > => {
    //     return new ZodObject({
    //       ...def,
    //       shape: () => ({
    //         ...def.shape(),
    //         ...augmentation,
    //       }),
    //     }) as any;
    //   };
    extend(augmentation) {
        return new ZodObject({
            ...this._def,
            shape: () => ({
                ...this._def.shape(),
                ...augmentation,
            }),
        });
    }
    /**
     * Prior to zod@1.0.12 there was a bug in the
     * inferred type of merged objects. Please
     * upgrade if you are experiencing issues.
     */
    merge(merging) {
        const merged = new ZodObject({
            unknownKeys: merging._def.unknownKeys,
            catchall: merging._def.catchall,
            shape: () => ({
                ...this._def.shape(),
                ...merging._def.shape(),
            }),
            typeName: ZodFirstPartyTypeKind.ZodObject,
        });
        return merged;
    }
    // merge<
    //   Incoming extends AnyZodObject,
    //   Augmentation extends Incoming["shape"],
    //   NewOutput extends {
    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation
    //       ? Augmentation[k]["_output"]
    //       : k extends keyof Output
    //       ? Output[k]
    //       : never;
    //   },
    //   NewInput extends {
    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation
    //       ? Augmentation[k]["_input"]
    //       : k extends keyof Input
    //       ? Input[k]
    //       : never;
    //   }
    // >(
    //   merging: Incoming
    // ): ZodObject<
    //   extendShape<T, ReturnType<Incoming["_def"]["shape"]>>,
    //   Incoming["_def"]["unknownKeys"],
    //   Incoming["_def"]["catchall"],
    //   NewOutput,
    //   NewInput
    // > {
    //   const merged: any = new ZodObject({
    //     unknownKeys: merging._def.unknownKeys,
    //     catchall: merging._def.catchall,
    //     shape: () =>
    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),
    //     typeName: ZodFirstPartyTypeKind.ZodObject,
    //   }) as any;
    //   return merged;
    // }
    setKey(key, schema) {
        return this.augment({ [key]: schema });
    }
    // merge<Incoming extends AnyZodObject>(
    //   merging: Incoming
    // ): //ZodObject<T & Incoming["_shape"], UnknownKeys, Catchall> = (merging) => {
    // ZodObject<
    //   extendShape<T, ReturnType<Incoming["_def"]["shape"]>>,
    //   Incoming["_def"]["unknownKeys"],
    //   Incoming["_def"]["catchall"]
    // > {
    //   // const mergedShape = objectUtil.mergeShapes(
    //   //   this._def.shape(),
    //   //   merging._def.shape()
    //   // );
    //   const merged: any = new ZodObject({
    //     unknownKeys: merging._def.unknownKeys,
    //     catchall: merging._def.catchall,
    //     shape: () =>
    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),
    //     typeName: ZodFirstPartyTypeKind.ZodObject,
    //   }) as any;
    //   return merged;
    // }
    catchall(index) {
        return new ZodObject({
            ...this._def,
            catchall: index,
        });
    }
    pick(mask) {
        const shape = {};
        for (const key of _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.util.objectKeys(mask)) {
            if (mask[key] && this.shape[key]) {
                shape[key] = this.shape[key];
            }
        }
        return new ZodObject({
            ...this._def,
            shape: () => shape,
        });
    }
    omit(mask) {
        const shape = {};
        for (const key of _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.util.objectKeys(this.shape)) {
            if (!mask[key]) {
                shape[key] = this.shape[key];
            }
        }
        return new ZodObject({
            ...this._def,
            shape: () => shape,
        });
    }
    /**
     * @deprecated
     */
    deepPartial() {
        return deepPartialify(this);
    }
    partial(mask) {
        const newShape = {};
        for (const key of _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.util.objectKeys(this.shape)) {
            const fieldSchema = this.shape[key];
            if (mask && !mask[key]) {
                newShape[key] = fieldSchema;
            }
            else {
                newShape[key] = fieldSchema.optional();
            }
        }
        return new ZodObject({
            ...this._def,
            shape: () => newShape,
        });
    }
    required(mask) {
        const newShape = {};
        for (const key of _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.util.objectKeys(this.shape)) {
            if (mask && !mask[key]) {
                newShape[key] = this.shape[key];
            }
            else {
                const fieldSchema = this.shape[key];
                let newField = fieldSchema;
                while (newField instanceof ZodOptional) {
                    newField = newField._def.innerType;
                }
                newShape[key] = newField;
            }
        }
        return new ZodObject({
            ...this._def,
            shape: () => newShape,
        });
    }
    keyof() {
        return createZodEnum(_helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.util.objectKeys(this.shape));
    }
}
ZodObject.create = (shape, params) => {
    return new ZodObject({
        shape: () => shape,
        unknownKeys: "strip",
        catchall: ZodNever.create(),
        typeName: ZodFirstPartyTypeKind.ZodObject,
        ...processCreateParams(params),
    });
};
ZodObject.strictCreate = (shape, params) => {
    return new ZodObject({
        shape: () => shape,
        unknownKeys: "strict",
        catchall: ZodNever.create(),
        typeName: ZodFirstPartyTypeKind.ZodObject,
        ...processCreateParams(params),
    });
};
ZodObject.lazycreate = (shape, params) => {
    return new ZodObject({
        shape,
        unknownKeys: "strip",
        catchall: ZodNever.create(),
        typeName: ZodFirstPartyTypeKind.ZodObject,
        ...processCreateParams(params),
    });
};
class ZodUnion extends ZodType {
    _parse(input) {
        const { ctx } = this._processInputParams(input);
        const options = this._def.options;
        function handleResults(results) {
            // return first issue-free validation if it exists
            for (const result of results) {
                if (result.result.status === "valid") {
                    return result.result;
                }
            }
            for (const result of results) {
                if (result.result.status === "dirty") {
                    // add issues from dirty option
                    ctx.common.issues.push(...result.ctx.common.issues);
                    return result.result;
                }
            }
            // return invalid
            const unionErrors = results.map((result) => new _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodError(result.ctx.common.issues));
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_union,
                unionErrors,
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
        if (ctx.common.async) {
            return Promise.all(options.map(async (option) => {
                const childCtx = {
                    ...ctx,
                    common: {
                        ...ctx.common,
                        issues: [],
                    },
                    parent: null,
                };
                return {
                    result: await option._parseAsync({
                        data: ctx.data,
                        path: ctx.path,
                        parent: childCtx,
                    }),
                    ctx: childCtx,
                };
            })).then(handleResults);
        }
        else {
            let dirty = undefined;
            const issues = [];
            for (const option of options) {
                const childCtx = {
                    ...ctx,
                    common: {
                        ...ctx.common,
                        issues: [],
                    },
                    parent: null,
                };
                const result = option._parseSync({
                    data: ctx.data,
                    path: ctx.path,
                    parent: childCtx,
                });
                if (result.status === "valid") {
                    return result;
                }
                else if (result.status === "dirty" && !dirty) {
                    dirty = { result, ctx: childCtx };
                }
                if (childCtx.common.issues.length) {
                    issues.push(childCtx.common.issues);
                }
            }
            if (dirty) {
                ctx.common.issues.push(...dirty.ctx.common.issues);
                return dirty.result;
            }
            const unionErrors = issues.map((issues) => new _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodError(issues));
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_union,
                unionErrors,
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
    }
    get options() {
        return this._def.options;
    }
}
ZodUnion.create = (types, params) => {
    return new ZodUnion({
        options: types,
        typeName: ZodFirstPartyTypeKind.ZodUnion,
        ...processCreateParams(params),
    });
};
/////////////////////////////////////////////////////
/////////////////////////////////////////////////////
//////////                                 //////////
//////////      ZodDiscriminatedUnion      //////////
//////////                                 //////////
/////////////////////////////////////////////////////
/////////////////////////////////////////////////////
const getDiscriminator = (type) => {
    if (type instanceof ZodLazy) {
        return getDiscriminator(type.schema);
    }
    else if (type instanceof ZodEffects) {
        return getDiscriminator(type.innerType());
    }
    else if (type instanceof ZodLiteral) {
        return [type.value];
    }
    else if (type instanceof ZodEnum) {
        return type.options;
    }
    else if (type instanceof ZodNativeEnum) {
        // eslint-disable-next-line ban/ban
        return _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.util.objectValues(type.enum);
    }
    else if (type instanceof ZodDefault) {
        return getDiscriminator(type._def.innerType);
    }
    else if (type instanceof ZodUndefined) {
        return [undefined];
    }
    else if (type instanceof ZodNull) {
        return [null];
    }
    else if (type instanceof ZodOptional) {
        return [undefined, ...getDiscriminator(type.unwrap())];
    }
    else if (type instanceof ZodNullable) {
        return [null, ...getDiscriminator(type.unwrap())];
    }
    else if (type instanceof ZodBranded) {
        return getDiscriminator(type.unwrap());
    }
    else if (type instanceof ZodReadonly) {
        return getDiscriminator(type.unwrap());
    }
    else if (type instanceof ZodCatch) {
        return getDiscriminator(type._def.innerType);
    }
    else {
        return [];
    }
};
class ZodDiscriminatedUnion extends ZodType {
    _parse(input) {
        const { ctx } = this._processInputParams(input);
        if (ctx.parsedType !== _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.object) {
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_type,
                expected: _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.object,
                received: ctx.parsedType,
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
        const discriminator = this.discriminator;
        const discriminatorValue = ctx.data[discriminator];
        const option = this.optionsMap.get(discriminatorValue);
        if (!option) {
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_union_discriminator,
                options: Array.from(this.optionsMap.keys()),
                path: [discriminator],
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
        if (ctx.common.async) {
            return option._parseAsync({
                data: ctx.data,
                path: ctx.path,
                parent: ctx,
            });
        }
        else {
            return option._parseSync({
                data: ctx.data,
                path: ctx.path,
                parent: ctx,
            });
        }
    }
    get discriminator() {
        return this._def.discriminator;
    }
    get options() {
        return this._def.options;
    }
    get optionsMap() {
        return this._def.optionsMap;
    }
    /**
     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.
     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must
     * have a different value for each object in the union.
     * @param discriminator the name of the discriminator property
     * @param types an array of object schemas
     * @param params
     */
    static create(discriminator, options, params) {
        // Get all the valid discriminator values
        const optionsMap = new Map();
        // try {
        for (const type of options) {
            const discriminatorValues = getDiscriminator(type.shape[discriminator]);
            if (!discriminatorValues.length) {
                throw new Error(`A discriminator value for key \`${discriminator}\` could not be extracted from all schema options`);
            }
            for (const value of discriminatorValues) {
                if (optionsMap.has(value)) {
                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);
                }
                optionsMap.set(value, type);
            }
        }
        return new ZodDiscriminatedUnion({
            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,
            discriminator,
            options,
            optionsMap,
            ...processCreateParams(params),
        });
    }
}
function mergeValues(a, b) {
    const aType = (0,_helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.getParsedType)(a);
    const bType = (0,_helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.getParsedType)(b);
    if (a === b) {
        return { valid: true, data: a };
    }
    else if (aType === _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.object && bType === _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.object) {
        const bKeys = _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.util.objectKeys(b);
        const sharedKeys = _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.util.objectKeys(a).filter((key) => bKeys.indexOf(key) !== -1);
        const newObj = { ...a, ...b };
        for (const key of sharedKeys) {
            const sharedValue = mergeValues(a[key], b[key]);
            if (!sharedValue.valid) {
                return { valid: false };
            }
            newObj[key] = sharedValue.data;
        }
        return { valid: true, data: newObj };
    }
    else if (aType === _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.array && bType === _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.array) {
        if (a.length !== b.length) {
            return { valid: false };
        }
        const newArray = [];
        for (let index = 0; index < a.length; index++) {
            const itemA = a[index];
            const itemB = b[index];
            const sharedValue = mergeValues(itemA, itemB);
            if (!sharedValue.valid) {
                return { valid: false };
            }
            newArray.push(sharedValue.data);
        }
        return { valid: true, data: newArray };
    }
    else if (aType === _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.date && bType === _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.date && +a === +b) {
        return { valid: true, data: a };
    }
    else {
        return { valid: false };
    }
}
class ZodIntersection extends ZodType {
    _parse(input) {
        const { status, ctx } = this._processInputParams(input);
        const handleParsed = (parsedLeft, parsedRight) => {
            if ((0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.isAborted)(parsedLeft) || (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.isAborted)(parsedRight)) {
                return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
            }
            const merged = mergeValues(parsedLeft.value, parsedRight.value);
            if (!merged.valid) {
                (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                    code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_intersection_types,
                });
                return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
            }
            if ((0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.isDirty)(parsedLeft) || (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.isDirty)(parsedRight)) {
                status.dirty();
            }
            return { status: status.value, value: merged.data };
        };
        if (ctx.common.async) {
            return Promise.all([
                this._def.left._parseAsync({
                    data: ctx.data,
                    path: ctx.path,
                    parent: ctx,
                }),
                this._def.right._parseAsync({
                    data: ctx.data,
                    path: ctx.path,
                    parent: ctx,
                }),
            ]).then(([left, right]) => handleParsed(left, right));
        }
        else {
            return handleParsed(this._def.left._parseSync({
                data: ctx.data,
                path: ctx.path,
                parent: ctx,
            }), this._def.right._parseSync({
                data: ctx.data,
                path: ctx.path,
                parent: ctx,
            }));
        }
    }
}
ZodIntersection.create = (left, right, params) => {
    return new ZodIntersection({
        left: left,
        right: right,
        typeName: ZodFirstPartyTypeKind.ZodIntersection,
        ...processCreateParams(params),
    });
};
// type ZodTupleItems = [ZodTypeAny, ...ZodTypeAny[]];
class ZodTuple extends ZodType {
    _parse(input) {
        const { status, ctx } = this._processInputParams(input);
        if (ctx.parsedType !== _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.array) {
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_type,
                expected: _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.array,
                received: ctx.parsedType,
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
        if (ctx.data.length < this._def.items.length) {
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.too_small,
                minimum: this._def.items.length,
                inclusive: true,
                exact: false,
                type: "array",
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
        const rest = this._def.rest;
        if (!rest && ctx.data.length > this._def.items.length) {
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.too_big,
                maximum: this._def.items.length,
                inclusive: true,
                exact: false,
                type: "array",
            });
            status.dirty();
        }
        const items = [...ctx.data]
            .map((item, itemIndex) => {
            const schema = this._def.items[itemIndex] || this._def.rest;
            if (!schema)
                return null;
            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));
        })
            .filter((x) => !!x); // filter nulls
        if (ctx.common.async) {
            return Promise.all(items).then((results) => {
                return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.ParseStatus.mergeArray(status, results);
            });
        }
        else {
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.ParseStatus.mergeArray(status, items);
        }
    }
    get items() {
        return this._def.items;
    }
    rest(rest) {
        return new ZodTuple({
            ...this._def,
            rest,
        });
    }
}
ZodTuple.create = (schemas, params) => {
    if (!Array.isArray(schemas)) {
        throw new Error("You must pass an array of schemas to z.tuple([ ... ])");
    }
    return new ZodTuple({
        items: schemas,
        typeName: ZodFirstPartyTypeKind.ZodTuple,
        rest: null,
        ...processCreateParams(params),
    });
};
class ZodRecord extends ZodType {
    get keySchema() {
        return this._def.keyType;
    }
    get valueSchema() {
        return this._def.valueType;
    }
    _parse(input) {
        const { status, ctx } = this._processInputParams(input);
        if (ctx.parsedType !== _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.object) {
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_type,
                expected: _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.object,
                received: ctx.parsedType,
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
        const pairs = [];
        const keyType = this._def.keyType;
        const valueType = this._def.valueType;
        for (const key in ctx.data) {
            pairs.push({
                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),
                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),
                alwaysSet: key in ctx.data,
            });
        }
        if (ctx.common.async) {
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.ParseStatus.mergeObjectAsync(status, pairs);
        }
        else {
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.ParseStatus.mergeObjectSync(status, pairs);
        }
    }
    get element() {
        return this._def.valueType;
    }
    static create(first, second, third) {
        if (second instanceof ZodType) {
            return new ZodRecord({
                keyType: first,
                valueType: second,
                typeName: ZodFirstPartyTypeKind.ZodRecord,
                ...processCreateParams(third),
            });
        }
        return new ZodRecord({
            keyType: ZodString.create(),
            valueType: first,
            typeName: ZodFirstPartyTypeKind.ZodRecord,
            ...processCreateParams(second),
        });
    }
}
class ZodMap extends ZodType {
    get keySchema() {
        return this._def.keyType;
    }
    get valueSchema() {
        return this._def.valueType;
    }
    _parse(input) {
        const { status, ctx } = this._processInputParams(input);
        if (ctx.parsedType !== _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.map) {
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_type,
                expected: _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.map,
                received: ctx.parsedType,
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
        const keyType = this._def.keyType;
        const valueType = this._def.valueType;
        const pairs = [...ctx.data.entries()].map(([key, value], index) => {
            return {
                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, "key"])),
                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, "value"])),
            };
        });
        if (ctx.common.async) {
            const finalMap = new Map();
            return Promise.resolve().then(async () => {
                for (const pair of pairs) {
                    const key = await pair.key;
                    const value = await pair.value;
                    if (key.status === "aborted" || value.status === "aborted") {
                        return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
                    }
                    if (key.status === "dirty" || value.status === "dirty") {
                        status.dirty();
                    }
                    finalMap.set(key.value, value.value);
                }
                return { status: status.value, value: finalMap };
            });
        }
        else {
            const finalMap = new Map();
            for (const pair of pairs) {
                const key = pair.key;
                const value = pair.value;
                if (key.status === "aborted" || value.status === "aborted") {
                    return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
                }
                if (key.status === "dirty" || value.status === "dirty") {
                    status.dirty();
                }
                finalMap.set(key.value, value.value);
            }
            return { status: status.value, value: finalMap };
        }
    }
}
ZodMap.create = (keyType, valueType, params) => {
    return new ZodMap({
        valueType,
        keyType,
        typeName: ZodFirstPartyTypeKind.ZodMap,
        ...processCreateParams(params),
    });
};
class ZodSet extends ZodType {
    _parse(input) {
        const { status, ctx } = this._processInputParams(input);
        if (ctx.parsedType !== _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.set) {
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_type,
                expected: _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.set,
                received: ctx.parsedType,
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
        const def = this._def;
        if (def.minSize !== null) {
            if (ctx.data.size < def.minSize.value) {
                (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                    code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.too_small,
                    minimum: def.minSize.value,
                    type: "set",
                    inclusive: true,
                    exact: false,
                    message: def.minSize.message,
                });
                status.dirty();
            }
        }
        if (def.maxSize !== null) {
            if (ctx.data.size > def.maxSize.value) {
                (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                    code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.too_big,
                    maximum: def.maxSize.value,
                    type: "set",
                    inclusive: true,
                    exact: false,
                    message: def.maxSize.message,
                });
                status.dirty();
            }
        }
        const valueType = this._def.valueType;
        function finalizeSet(elements) {
            const parsedSet = new Set();
            for (const element of elements) {
                if (element.status === "aborted")
                    return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
                if (element.status === "dirty")
                    status.dirty();
                parsedSet.add(element.value);
            }
            return { status: status.value, value: parsedSet };
        }
        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));
        if (ctx.common.async) {
            return Promise.all(elements).then((elements) => finalizeSet(elements));
        }
        else {
            return finalizeSet(elements);
        }
    }
    min(minSize, message) {
        return new ZodSet({
            ...this._def,
            minSize: { value: minSize, message: _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message) },
        });
    }
    max(maxSize, message) {
        return new ZodSet({
            ...this._def,
            maxSize: { value: maxSize, message: _helpers_errorUtil_js__WEBPACK_IMPORTED_MODULE_3__.errorUtil.toString(message) },
        });
    }
    size(size, message) {
        return this.min(size, message).max(size, message);
    }
    nonempty(message) {
        return this.min(1, message);
    }
}
ZodSet.create = (valueType, params) => {
    return new ZodSet({
        valueType,
        minSize: null,
        maxSize: null,
        typeName: ZodFirstPartyTypeKind.ZodSet,
        ...processCreateParams(params),
    });
};
class ZodFunction extends ZodType {
    constructor() {
        super(...arguments);
        this.validate = this.implement;
    }
    _parse(input) {
        const { ctx } = this._processInputParams(input);
        if (ctx.parsedType !== _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.function) {
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_type,
                expected: _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.function,
                received: ctx.parsedType,
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
        function makeArgsIssue(args, error) {
            return (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.makeIssue)({
                data: args,
                path: ctx.path,
                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.getErrorMap)(), _errors_js__WEBPACK_IMPORTED_MODULE_2__["default"]].filter((x) => !!x),
                issueData: {
                    code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_arguments,
                    argumentsError: error,
                },
            });
        }
        function makeReturnsIssue(returns, error) {
            return (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.makeIssue)({
                data: returns,
                path: ctx.path,
                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.getErrorMap)(), _errors_js__WEBPACK_IMPORTED_MODULE_2__["default"]].filter((x) => !!x),
                issueData: {
                    code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_return_type,
                    returnTypeError: error,
                },
            });
        }
        const params = { errorMap: ctx.common.contextualErrorMap };
        const fn = ctx.data;
        if (this._def.returns instanceof ZodPromise) {
            // Would love a way to avoid disabling this rule, but we need
            // an alias (using an arrow function was what caused 2651).
            // eslint-disable-next-line @typescript-eslint/no-this-alias
            const me = this;
            return (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.OK)(async function (...args) {
                const error = new _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodError([]);
                const parsedArgs = await me._def.args.parseAsync(args, params).catch((e) => {
                    error.addIssue(makeArgsIssue(args, e));
                    throw error;
                });
                const result = await Reflect.apply(fn, this, parsedArgs);
                const parsedReturns = await me._def.returns._def.type
                    .parseAsync(result, params)
                    .catch((e) => {
                    error.addIssue(makeReturnsIssue(result, e));
                    throw error;
                });
                return parsedReturns;
            });
        }
        else {
            // Would love a way to avoid disabling this rule, but we need
            // an alias (using an arrow function was what caused 2651).
            // eslint-disable-next-line @typescript-eslint/no-this-alias
            const me = this;
            return (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.OK)(function (...args) {
                const parsedArgs = me._def.args.safeParse(args, params);
                if (!parsedArgs.success) {
                    throw new _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodError([makeArgsIssue(args, parsedArgs.error)]);
                }
                const result = Reflect.apply(fn, this, parsedArgs.data);
                const parsedReturns = me._def.returns.safeParse(result, params);
                if (!parsedReturns.success) {
                    throw new _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodError([makeReturnsIssue(result, parsedReturns.error)]);
                }
                return parsedReturns.data;
            });
        }
    }
    parameters() {
        return this._def.args;
    }
    returnType() {
        return this._def.returns;
    }
    args(...items) {
        return new ZodFunction({
            ...this._def,
            args: ZodTuple.create(items).rest(ZodUnknown.create()),
        });
    }
    returns(returnType) {
        return new ZodFunction({
            ...this._def,
            returns: returnType,
        });
    }
    implement(func) {
        const validatedFunc = this.parse(func);
        return validatedFunc;
    }
    strictImplement(func) {
        const validatedFunc = this.parse(func);
        return validatedFunc;
    }
    static create(args, returns, params) {
        return new ZodFunction({
            args: (args ? args : ZodTuple.create([]).rest(ZodUnknown.create())),
            returns: returns || ZodUnknown.create(),
            typeName: ZodFirstPartyTypeKind.ZodFunction,
            ...processCreateParams(params),
        });
    }
}
class ZodLazy extends ZodType {
    get schema() {
        return this._def.getter();
    }
    _parse(input) {
        const { ctx } = this._processInputParams(input);
        const lazySchema = this._def.getter();
        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });
    }
}
ZodLazy.create = (getter, params) => {
    return new ZodLazy({
        getter: getter,
        typeName: ZodFirstPartyTypeKind.ZodLazy,
        ...processCreateParams(params),
    });
};
class ZodLiteral extends ZodType {
    _parse(input) {
        if (input.data !== this._def.value) {
            const ctx = this._getOrReturnCtx(input);
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                received: ctx.data,
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_literal,
                expected: this._def.value,
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
        return { status: "valid", value: input.data };
    }
    get value() {
        return this._def.value;
    }
}
ZodLiteral.create = (value, params) => {
    return new ZodLiteral({
        value: value,
        typeName: ZodFirstPartyTypeKind.ZodLiteral,
        ...processCreateParams(params),
    });
};
function createZodEnum(values, params) {
    return new ZodEnum({
        values,
        typeName: ZodFirstPartyTypeKind.ZodEnum,
        ...processCreateParams(params),
    });
}
class ZodEnum extends ZodType {
    _parse(input) {
        if (typeof input.data !== "string") {
            const ctx = this._getOrReturnCtx(input);
            const expectedValues = this._def.values;
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                expected: _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.util.joinValues(expectedValues),
                received: ctx.parsedType,
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_type,
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
        if (!this._cache) {
            this._cache = new Set(this._def.values);
        }
        if (!this._cache.has(input.data)) {
            const ctx = this._getOrReturnCtx(input);
            const expectedValues = this._def.values;
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                received: ctx.data,
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_enum_value,
                options: expectedValues,
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
        return (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.OK)(input.data);
    }
    get options() {
        return this._def.values;
    }
    get enum() {
        const enumValues = {};
        for (const val of this._def.values) {
            enumValues[val] = val;
        }
        return enumValues;
    }
    get Values() {
        const enumValues = {};
        for (const val of this._def.values) {
            enumValues[val] = val;
        }
        return enumValues;
    }
    get Enum() {
        const enumValues = {};
        for (const val of this._def.values) {
            enumValues[val] = val;
        }
        return enumValues;
    }
    extract(values, newDef = this._def) {
        return ZodEnum.create(values, {
            ...this._def,
            ...newDef,
        });
    }
    exclude(values, newDef = this._def) {
        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {
            ...this._def,
            ...newDef,
        });
    }
}
ZodEnum.create = createZodEnum;
class ZodNativeEnum extends ZodType {
    _parse(input) {
        const nativeEnumValues = _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.util.getValidEnumValues(this._def.values);
        const ctx = this._getOrReturnCtx(input);
        if (ctx.parsedType !== _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.string && ctx.parsedType !== _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.number) {
            const expectedValues = _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.util.objectValues(nativeEnumValues);
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                expected: _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.util.joinValues(expectedValues),
                received: ctx.parsedType,
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_type,
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
        if (!this._cache) {
            this._cache = new Set(_helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.util.getValidEnumValues(this._def.values));
        }
        if (!this._cache.has(input.data)) {
            const expectedValues = _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.util.objectValues(nativeEnumValues);
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                received: ctx.data,
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_enum_value,
                options: expectedValues,
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
        return (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.OK)(input.data);
    }
    get enum() {
        return this._def.values;
    }
}
ZodNativeEnum.create = (values, params) => {
    return new ZodNativeEnum({
        values: values,
        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,
        ...processCreateParams(params),
    });
};
class ZodPromise extends ZodType {
    unwrap() {
        return this._def.type;
    }
    _parse(input) {
        const { ctx } = this._processInputParams(input);
        if (ctx.parsedType !== _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.promise && ctx.common.async === false) {
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_type,
                expected: _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.promise,
                received: ctx.parsedType,
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
        const promisified = ctx.parsedType === _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.promise ? ctx.data : Promise.resolve(ctx.data);
        return (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.OK)(promisified.then((data) => {
            return this._def.type.parseAsync(data, {
                path: ctx.path,
                errorMap: ctx.common.contextualErrorMap,
            });
        }));
    }
}
ZodPromise.create = (schema, params) => {
    return new ZodPromise({
        type: schema,
        typeName: ZodFirstPartyTypeKind.ZodPromise,
        ...processCreateParams(params),
    });
};
class ZodEffects extends ZodType {
    innerType() {
        return this._def.schema;
    }
    sourceType() {
        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects
            ? this._def.schema.sourceType()
            : this._def.schema;
    }
    _parse(input) {
        const { status, ctx } = this._processInputParams(input);
        const effect = this._def.effect || null;
        const checkCtx = {
            addIssue: (arg) => {
                (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, arg);
                if (arg.fatal) {
                    status.abort();
                }
                else {
                    status.dirty();
                }
            },
            get path() {
                return ctx.path;
            },
        };
        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);
        if (effect.type === "preprocess") {
            const processed = effect.transform(ctx.data, checkCtx);
            if (ctx.common.async) {
                return Promise.resolve(processed).then(async (processed) => {
                    if (status.value === "aborted")
                        return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
                    const result = await this._def.schema._parseAsync({
                        data: processed,
                        path: ctx.path,
                        parent: ctx,
                    });
                    if (result.status === "aborted")
                        return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
                    if (result.status === "dirty")
                        return (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.DIRTY)(result.value);
                    if (status.value === "dirty")
                        return (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.DIRTY)(result.value);
                    return result;
                });
            }
            else {
                if (status.value === "aborted")
                    return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
                const result = this._def.schema._parseSync({
                    data: processed,
                    path: ctx.path,
                    parent: ctx,
                });
                if (result.status === "aborted")
                    return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
                if (result.status === "dirty")
                    return (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.DIRTY)(result.value);
                if (status.value === "dirty")
                    return (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.DIRTY)(result.value);
                return result;
            }
        }
        if (effect.type === "refinement") {
            const executeRefinement = (acc) => {
                const result = effect.refinement(acc, checkCtx);
                if (ctx.common.async) {
                    return Promise.resolve(result);
                }
                if (result instanceof Promise) {
                    throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");
                }
                return acc;
            };
            if (ctx.common.async === false) {
                const inner = this._def.schema._parseSync({
                    data: ctx.data,
                    path: ctx.path,
                    parent: ctx,
                });
                if (inner.status === "aborted")
                    return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
                if (inner.status === "dirty")
                    status.dirty();
                // return value is ignored
                executeRefinement(inner.value);
                return { status: status.value, value: inner.value };
            }
            else {
                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((inner) => {
                    if (inner.status === "aborted")
                        return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
                    if (inner.status === "dirty")
                        status.dirty();
                    return executeRefinement(inner.value).then(() => {
                        return { status: status.value, value: inner.value };
                    });
                });
            }
        }
        if (effect.type === "transform") {
            if (ctx.common.async === false) {
                const base = this._def.schema._parseSync({
                    data: ctx.data,
                    path: ctx.path,
                    parent: ctx,
                });
                if (!(0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.isValid)(base))
                    return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
                const result = effect.transform(base.value, checkCtx);
                if (result instanceof Promise) {
                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);
                }
                return { status: status.value, value: result };
            }
            else {
                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((base) => {
                    if (!(0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.isValid)(base))
                        return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({
                        status: status.value,
                        value: result,
                    }));
                });
            }
        }
        _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.util.assertNever(effect);
    }
}
ZodEffects.create = (schema, effect, params) => {
    return new ZodEffects({
        schema,
        typeName: ZodFirstPartyTypeKind.ZodEffects,
        effect,
        ...processCreateParams(params),
    });
};
ZodEffects.createWithPreprocess = (preprocess, schema, params) => {
    return new ZodEffects({
        schema,
        effect: { type: "preprocess", transform: preprocess },
        typeName: ZodFirstPartyTypeKind.ZodEffects,
        ...processCreateParams(params),
    });
};

class ZodOptional extends ZodType {
    _parse(input) {
        const parsedType = this._getType(input);
        if (parsedType === _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.undefined) {
            return (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.OK)(undefined);
        }
        return this._def.innerType._parse(input);
    }
    unwrap() {
        return this._def.innerType;
    }
}
ZodOptional.create = (type, params) => {
    return new ZodOptional({
        innerType: type,
        typeName: ZodFirstPartyTypeKind.ZodOptional,
        ...processCreateParams(params),
    });
};
class ZodNullable extends ZodType {
    _parse(input) {
        const parsedType = this._getType(input);
        if (parsedType === _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.null) {
            return (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.OK)(null);
        }
        return this._def.innerType._parse(input);
    }
    unwrap() {
        return this._def.innerType;
    }
}
ZodNullable.create = (type, params) => {
    return new ZodNullable({
        innerType: type,
        typeName: ZodFirstPartyTypeKind.ZodNullable,
        ...processCreateParams(params),
    });
};
class ZodDefault extends ZodType {
    _parse(input) {
        const { ctx } = this._processInputParams(input);
        let data = ctx.data;
        if (ctx.parsedType === _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.undefined) {
            data = this._def.defaultValue();
        }
        return this._def.innerType._parse({
            data,
            path: ctx.path,
            parent: ctx,
        });
    }
    removeDefault() {
        return this._def.innerType;
    }
}
ZodDefault.create = (type, params) => {
    return new ZodDefault({
        innerType: type,
        typeName: ZodFirstPartyTypeKind.ZodDefault,
        defaultValue: typeof params.default === "function" ? params.default : () => params.default,
        ...processCreateParams(params),
    });
};
class ZodCatch extends ZodType {
    _parse(input) {
        const { ctx } = this._processInputParams(input);
        // newCtx is used to not collect issues from inner types in ctx
        const newCtx = {
            ...ctx,
            common: {
                ...ctx.common,
                issues: [],
            },
        };
        const result = this._def.innerType._parse({
            data: newCtx.data,
            path: newCtx.path,
            parent: {
                ...newCtx,
            },
        });
        if ((0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.isAsync)(result)) {
            return result.then((result) => {
                return {
                    status: "valid",
                    value: result.status === "valid"
                        ? result.value
                        : this._def.catchValue({
                            get error() {
                                return new _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodError(newCtx.common.issues);
                            },
                            input: newCtx.data,
                        }),
                };
            });
        }
        else {
            return {
                status: "valid",
                value: result.status === "valid"
                    ? result.value
                    : this._def.catchValue({
                        get error() {
                            return new _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodError(newCtx.common.issues);
                        },
                        input: newCtx.data,
                    }),
            };
        }
    }
    removeCatch() {
        return this._def.innerType;
    }
}
ZodCatch.create = (type, params) => {
    return new ZodCatch({
        innerType: type,
        typeName: ZodFirstPartyTypeKind.ZodCatch,
        catchValue: typeof params.catch === "function" ? params.catch : () => params.catch,
        ...processCreateParams(params),
    });
};
class ZodNaN extends ZodType {
    _parse(input) {
        const parsedType = this._getType(input);
        if (parsedType !== _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.nan) {
            const ctx = this._getOrReturnCtx(input);
            (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.addIssueToContext)(ctx, {
                code: _ZodError_js__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_type,
                expected: _helpers_util_js__WEBPACK_IMPORTED_MODULE_5__.ZodParsedType.nan,
                received: ctx.parsedType,
            });
            return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
        }
        return { status: "valid", value: input.data };
    }
}
ZodNaN.create = (params) => {
    return new ZodNaN({
        typeName: ZodFirstPartyTypeKind.ZodNaN,
        ...processCreateParams(params),
    });
};
const BRAND = Symbol("zod_brand");
class ZodBranded extends ZodType {
    _parse(input) {
        const { ctx } = this._processInputParams(input);
        const data = ctx.data;
        return this._def.type._parse({
            data,
            path: ctx.path,
            parent: ctx,
        });
    }
    unwrap() {
        return this._def.type;
    }
}
class ZodPipeline extends ZodType {
    _parse(input) {
        const { status, ctx } = this._processInputParams(input);
        if (ctx.common.async) {
            const handleAsync = async () => {
                const inResult = await this._def.in._parseAsync({
                    data: ctx.data,
                    path: ctx.path,
                    parent: ctx,
                });
                if (inResult.status === "aborted")
                    return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
                if (inResult.status === "dirty") {
                    status.dirty();
                    return (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.DIRTY)(inResult.value);
                }
                else {
                    return this._def.out._parseAsync({
                        data: inResult.value,
                        path: ctx.path,
                        parent: ctx,
                    });
                }
            };
            return handleAsync();
        }
        else {
            const inResult = this._def.in._parseSync({
                data: ctx.data,
                path: ctx.path,
                parent: ctx,
            });
            if (inResult.status === "aborted")
                return _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;
            if (inResult.status === "dirty") {
                status.dirty();
                return {
                    status: "dirty",
                    value: inResult.value,
                };
            }
            else {
                return this._def.out._parseSync({
                    data: inResult.value,
                    path: ctx.path,
                    parent: ctx,
                });
            }
        }
    }
    static create(a, b) {
        return new ZodPipeline({
            in: a,
            out: b,
            typeName: ZodFirstPartyTypeKind.ZodPipeline,
        });
    }
}
class ZodReadonly extends ZodType {
    _parse(input) {
        const result = this._def.innerType._parse(input);
        const freeze = (data) => {
            if ((0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.isValid)(data)) {
                data.value = Object.freeze(data.value);
            }
            return data;
        };
        return (0,_helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.isAsync)(result) ? result.then((data) => freeze(data)) : freeze(result);
    }
    unwrap() {
        return this._def.innerType;
    }
}
ZodReadonly.create = (type, params) => {
    return new ZodReadonly({
        innerType: type,
        typeName: ZodFirstPartyTypeKind.ZodReadonly,
        ...processCreateParams(params),
    });
};
////////////////////////////////////////
////////////////////////////////////////
//////////                    //////////
//////////      z.custom      //////////
//////////                    //////////
////////////////////////////////////////
////////////////////////////////////////
function cleanParams(params, data) {
    const p = typeof params === "function" ? params(data) : typeof params === "string" ? { message: params } : params;
    const p2 = typeof p === "string" ? { message: p } : p;
    return p2;
}
function custom(check, _params = {}, 
/**
 * @deprecated
 *
 * Pass `fatal` into the params object instead:
 *
 * ```ts
 * z.string().custom((val) => val.length > 5, { fatal: false })
 * ```
 *
 */
fatal) {
    if (check)
        return ZodAny.create().superRefine((data, ctx) => {
            const r = check(data);
            if (r instanceof Promise) {
                return r.then((r) => {
                    if (!r) {
                        const params = cleanParams(_params, data);
                        const _fatal = params.fatal ?? fatal ?? true;
                        ctx.addIssue({ code: "custom", ...params, fatal: _fatal });
                    }
                });
            }
            if (!r) {
                const params = cleanParams(_params, data);
                const _fatal = params.fatal ?? fatal ?? true;
                ctx.addIssue({ code: "custom", ...params, fatal: _fatal });
            }
            return;
        });
    return ZodAny.create();
}

const late = {
    object: ZodObject.lazycreate,
};
var ZodFirstPartyTypeKind;
(function (ZodFirstPartyTypeKind) {
    ZodFirstPartyTypeKind["ZodString"] = "ZodString";
    ZodFirstPartyTypeKind["ZodNumber"] = "ZodNumber";
    ZodFirstPartyTypeKind["ZodNaN"] = "ZodNaN";
    ZodFirstPartyTypeKind["ZodBigInt"] = "ZodBigInt";
    ZodFirstPartyTypeKind["ZodBoolean"] = "ZodBoolean";
    ZodFirstPartyTypeKind["ZodDate"] = "ZodDate";
    ZodFirstPartyTypeKind["ZodSymbol"] = "ZodSymbol";
    ZodFirstPartyTypeKind["ZodUndefined"] = "ZodUndefined";
    ZodFirstPartyTypeKind["ZodNull"] = "ZodNull";
    ZodFirstPartyTypeKind["ZodAny"] = "ZodAny";
    ZodFirstPartyTypeKind["ZodUnknown"] = "ZodUnknown";
    ZodFirstPartyTypeKind["ZodNever"] = "ZodNever";
    ZodFirstPartyTypeKind["ZodVoid"] = "ZodVoid";
    ZodFirstPartyTypeKind["ZodArray"] = "ZodArray";
    ZodFirstPartyTypeKind["ZodObject"] = "ZodObject";
    ZodFirstPartyTypeKind["ZodUnion"] = "ZodUnion";
    ZodFirstPartyTypeKind["ZodDiscriminatedUnion"] = "ZodDiscriminatedUnion";
    ZodFirstPartyTypeKind["ZodIntersection"] = "ZodIntersection";
    ZodFirstPartyTypeKind["ZodTuple"] = "ZodTuple";
    ZodFirstPartyTypeKind["ZodRecord"] = "ZodRecord";
    ZodFirstPartyTypeKind["ZodMap"] = "ZodMap";
    ZodFirstPartyTypeKind["ZodSet"] = "ZodSet";
    ZodFirstPartyTypeKind["ZodFunction"] = "ZodFunction";
    ZodFirstPartyTypeKind["ZodLazy"] = "ZodLazy";
    ZodFirstPartyTypeKind["ZodLiteral"] = "ZodLiteral";
    ZodFirstPartyTypeKind["ZodEnum"] = "ZodEnum";
    ZodFirstPartyTypeKind["ZodEffects"] = "ZodEffects";
    ZodFirstPartyTypeKind["ZodNativeEnum"] = "ZodNativeEnum";
    ZodFirstPartyTypeKind["ZodOptional"] = "ZodOptional";
    ZodFirstPartyTypeKind["ZodNullable"] = "ZodNullable";
    ZodFirstPartyTypeKind["ZodDefault"] = "ZodDefault";
    ZodFirstPartyTypeKind["ZodCatch"] = "ZodCatch";
    ZodFirstPartyTypeKind["ZodPromise"] = "ZodPromise";
    ZodFirstPartyTypeKind["ZodBranded"] = "ZodBranded";
    ZodFirstPartyTypeKind["ZodPipeline"] = "ZodPipeline";
    ZodFirstPartyTypeKind["ZodReadonly"] = "ZodReadonly";
})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));
// requires TS 4.4+
class Class {
    constructor(..._) { }
}
const instanceOfType = (
// const instanceOfType = <T extends new (...args: any[]) => any>(
cls, params = {
    message: `Input not instance of ${cls.name}`,
}) => custom((data) => data instanceof cls, params);
const stringType = ZodString.create;
const numberType = ZodNumber.create;
const nanType = ZodNaN.create;
const bigIntType = ZodBigInt.create;
const booleanType = ZodBoolean.create;
const dateType = ZodDate.create;
const symbolType = ZodSymbol.create;
const undefinedType = ZodUndefined.create;
const nullType = ZodNull.create;
const anyType = ZodAny.create;
const unknownType = ZodUnknown.create;
const neverType = ZodNever.create;
const voidType = ZodVoid.create;
const arrayType = ZodArray.create;
const objectType = ZodObject.create;
const strictObjectType = ZodObject.strictCreate;
const unionType = ZodUnion.create;
const discriminatedUnionType = ZodDiscriminatedUnion.create;
const intersectionType = ZodIntersection.create;
const tupleType = ZodTuple.create;
const recordType = ZodRecord.create;
const mapType = ZodMap.create;
const setType = ZodSet.create;
const functionType = ZodFunction.create;
const lazyType = ZodLazy.create;
const literalType = ZodLiteral.create;
const enumType = ZodEnum.create;
const nativeEnumType = ZodNativeEnum.create;
const promiseType = ZodPromise.create;
const effectsType = ZodEffects.create;
const optionalType = ZodOptional.create;
const nullableType = ZodNullable.create;
const preprocessType = ZodEffects.createWithPreprocess;
const pipelineType = ZodPipeline.create;
const ostring = () => stringType().optional();
const onumber = () => numberType().optional();
const oboolean = () => booleanType().optional();
const coerce = {
    string: ((arg) => ZodString.create({ ...arg, coerce: true })),
    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),
    boolean: ((arg) => ZodBoolean.create({
        ...arg,
        coerce: true,
    })),
    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),
    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),
};

const NEVER = _helpers_parseUtil_js__WEBPACK_IMPORTED_MODULE_4__.INVALID;


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames not based on template
/******/ 			if ({"node_modules_reown_appkit_dist_esm_exports_core_js":1,"node_modules_walletconnect_ethereum-provider_node_modules_viem_node_modules_noble_curves_esm_-c8482c":1,"node_modules_walletconnect_sign-client_node_modules_viem_node_modules_noble_curves_esm_secp256k1_js":1,"node_modules_walletconnect_universal-provider_node_modules_viem_node_modules_noble_curves_esm-94c37a":1,"node_modules_reown_appkit-scaffold-ui_dist_esm_exports_basic_js":1,"node_modules_reown_appkit-scaffold-ui_dist_esm_exports_w3m-modal_js":1,"node_modules_reown_appkit_node_modules_noble_curves_esm_secp256k1_js":1,"node_modules_reown_appkit-controllers_node_modules_noble_curves_esm_secp256k1_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_add_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_all-wallets_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_arrow-bottom-circle_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_app-store_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_apple_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_arrow-bottom_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_arrow-left_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_arrow-right_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_arrow-top_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_bank_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_browser_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_card_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_checkmark_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_checkmark-bold_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_chevron-bottom_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_chevron-left_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_chevron-right_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_chevron-top_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_chrome-store_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_clock_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_close_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_compass_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_coinPlaceholder_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_copy_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_cursor_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_cursor-transparent_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_desktop_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_disconnect_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_discord_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_etherscan_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_extension_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_external-link_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_facebook_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_farcaster_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_filters_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_github_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_google_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_help-circle_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_image_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_id_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_info-circle_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_lightbulb_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_mail_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_mobile_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_more_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_network-placeholder_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_nftPlaceholder_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_off_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_play-store_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_plus_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_qr-code_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_recycle-horizontal_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_refresh_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_search_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_send_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_swapHorizontal_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_swapHorizontalMedium_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_swapHorizontalBold_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_swapHorizontalRoundedBold_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_swapVertical_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_telegram_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_three-dots_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_twitch_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_x_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_twitterIcon_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_verify_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_verify-filled_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_wallet_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_walletconnect_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_wallet-placeholder_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_warning-circle_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_info_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_exclamation-triangle_js":1,"node_modules_reown_appkit-ui_dist_esm_src_assets_svg_reown-logo_js":1}[chunkId]) return "js/" + chunkId + ".js";
/******/ 			// return url for filenames based on template
/******/ 			return undefined;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get mini-css chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference all chunks
/******/ 		__webpack_require__.miniCssF = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return undefined;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		// data-webpack is not used as build has no uniqueName
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key, chunkId) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 		
/******/ 		
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => (fn(event)));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		__webpack_require__.p = "/";
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"/js/wallet": 0
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.f.j = (chunkId, promises) => {
/******/ 				// JSONP chunk loading for javascript
/******/ 				var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;
/******/ 				if(installedChunkData !== 0) { // 0 means "already installed".
/******/ 		
/******/ 					// a Promise means "currently loading".
/******/ 					if(installedChunkData) {
/******/ 						promises.push(installedChunkData[2]);
/******/ 					} else {
/******/ 						if(true) { // all chunks have JS
/******/ 							// setup Promise in chunk cache
/******/ 							var promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));
/******/ 							promises.push(installedChunkData[2] = promise);
/******/ 		
/******/ 							// start chunk loading
/******/ 							var url = __webpack_require__.p + __webpack_require__.u(chunkId);
/******/ 							// create error before stack unwound to get useful stacktrace later
/******/ 							var error = new Error();
/******/ 							var loadingEnded = (event) => {
/******/ 								if(__webpack_require__.o(installedChunks, chunkId)) {
/******/ 									installedChunkData = installedChunks[chunkId];
/******/ 									if(installedChunkData !== 0) installedChunks[chunkId] = undefined;
/******/ 									if(installedChunkData) {
/******/ 										var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 										var realSrc = event && event.target && event.target.src;
/******/ 										error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 										error.name = 'ChunkLoadError';
/******/ 										error.type = errorType;
/******/ 										error.request = realSrc;
/******/ 										installedChunkData[1](error);
/******/ 									}
/******/ 								}
/******/ 							};
/******/ 							__webpack_require__.l(url, loadingEnded, "chunk-" + chunkId, chunkId);
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 		};
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 		
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunk"] = self["webpackChunk"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry needs to be wrapped in an IIFE because it needs to be in strict mode.
(() => {
"use strict";
/*!********************************!*\
  !*** ./resources/js/wallet.js ***!
  \********************************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var web3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3 */ "./node_modules/web3/lib/esm/index.js");
/* harmony import */ var _walletconnect_ethereum_provider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/ethereum-provider */ "./node_modules/@walletconnect/ethereum-provider/dist/index.es.js");
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }


var web3;
var userAddress = null;
var provider = null;

// Conversion rate: 1 BNB = 1000 Tokens
var TOKEN_RATE = 1000;
// Replace with your receiving wallet
var RECEIVING_WALLET = '0x0a1ad99042f75253faaaA5a448325e7c0069E9fd';

// WalletConnect Project ID (get from https://cloud.walletconnect.com/)
var WALLET_CONNECT_PROJECT_ID = "d657fc2caf26f35212226268cf9745d0";
document.addEventListener('DOMContentLoaded', function () {
  var connectButton = document.getElementById('connectWallet');

  // ✅ Update token amount dynamically
  payAmountInput.addEventListener('input', function () {
    var bnbAmount = parseFloat(payAmountInput.value) || 0;
    receiveAmountInput.value = (bnbAmount * TOKEN_RATE).toFixed(2);
  });

  // ✅ Connect Wallet (MetaMask or WalletConnect)
  connectButton.addEventListener('click', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {
    var accounts;
    return _regenerator().w(function (_context) {
      while (1) switch (_context.n) {
        case 0:
          _context.n = 1;
          return _walletconnect_ethereum_provider__WEBPACK_IMPORTED_MODULE_1__["default"].init({
            projectId: WALLET_CONNECT_PROJECT_ID,
            chains: [56],
            // BSC Mainnet
            rpcMap: {
              56: "https://bsc-dataseed.binance.org/"
            },
            showQrModal: true,
            methods: ["eth_sendTransaction", "personal_sign", "eth_signTypedData"],
            events: ["chainChanged", "accountsChanged"]
          });
        case 1:
          provider = _context.v;
          _context.n = 2;
          return provider.connect();
        case 2:
          // ✅ v2 correct method
          // }

          web3 = new web3__WEBPACK_IMPORTED_MODULE_0__["default"](provider);
          _context.n = 3;
          return web3.eth.getAccounts();
        case 3:
          accounts = _context.v;
          userAddress = accounts[0];
          walletAddressDisplay.textContent = "Connected: ".concat(shortAddress(userAddress));
        case 4:
          return _context.a(2);
      }
    }, _callee);
  })));

  // ✅ Buy with BNB
});
})();

/******/ })()
;